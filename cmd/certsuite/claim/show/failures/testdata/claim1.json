{
  "claim": {
    "results": {
      "access-control-sys-admin-capability-check": {
          "CapturedTestOutput": "Non compliant SYS_ADMIN capability detected in container container: test pod: test-887998557-8gwwm ns: tnf. All container caps: \u0026Capabilities{Add:[SYS_ADMIN NET_ADMIN],Drop:[],}\nNon compliant SYS_ADMIN capability detected in container container: test pod: test-887998557-pr2w5 ns: tnf. All container caps: \u0026Capabilities{Add:[SYS_ADMIN NET_ADMIN],Drop:[],}\n{\"CompliantObjectsOut\":null,\"NonCompliantObjectsOut\":[{\"ObjectType\":\"Container\",\"ObjectFieldsKeys\":[\"Reason For Non Compliance\",\"Namespace\",\"Pod Name\",\"Container Name\",\"SCC Capability\"],\"ObjectFieldsValues\":[\"Non compliant capability detected in container\",\"tnf\",\"test-887998557-8gwwm\",\"test\",\"SYS_ADMIN\"]},{\"ObjectType\":\"Container\",\"ObjectFieldsKeys\":[\"Reason For Non Compliance\",\"Namespace\",\"Pod Name\",\"Container Name\",\"SCC Capability\"],\"ObjectFieldsValues\":[\"Non compliant capability detected in container\",\"tnf\",\"test-887998557-pr2w5\",\"test\",\"SYS_ADMIN\"]}]}\n",
          "duration": 282454,
          "endTime": "2023-07-18 03:37:42.095508375 -0500 CDT m=+23.133713410",
          "failureLineContent": "\t\tfail(string(bytes))",
          "failureLocation": "/home/greyerof/github/tnf/pkg/testhelper/testhelper.go:352",
          "checkDetails": "{\"CompliantObjectsOut\":null,\"NonCompliantObjectsOut\":[{\"ObjectType\":\"Container\",\"ObjectFieldsKeys\":[\"Reason For Non Compliance\",\"Namespace\",\"Pod Name\",\"Container Name\",\"SCC Capability\"],\"ObjectFieldsValues\":[\"Non compliant capability detected in container\",\"tnf\",\"test-887998557-8gwwm\",\"test\",\"SYS_ADMIN\"]},{\"ObjectType\":\"Container\",\"ObjectFieldsKeys\":[\"Reason For Non Compliance\",\"Namespace\",\"Pod Name\",\"Container Name\",\"SCC Capability\"],\"ObjectFieldsValues\":[\"Non compliant capability detected in container\",\"tnf\",\"test-887998557-pr2w5\",\"test\",\"SYS_ADMIN\"]}]}",
          "startTime": "2023-07-18 03:37:42.095225914 -0500 CDT m=+23.133430956",
          "state": "failed",
          "testID": {
            "id": "access-control-sys-admin-capability-check",
            "suite": "access-control",
            "tags": "common"
          },
          "catalogInfo": {
            "bestPracticeReference": "https://test-network-function.github.io/cnf-best-practices/#cnf-best-practices-security-rbac",
            "description": "Ensures that containers do not use SYS_ADMIN capability",
            "exceptionProcess": "Exception possible only for workloads that's cluster wide in nature and absolutely needs cluster level roles \u0026 role bindings",
            "remediation": "In most cases, Pod's should not have ClusterRoleBindings. The suggested remediation is to remove the need for ClusterRoleBindings, if possible. Cluster roles and cluster role bindings discouraged unless absolutely needed by CNF (often reserved for cluster admin only)."
          },
          "categoryClassification": {
            "Extended": "Mandatory",
            "FarEdge": "Mandatory",
            "NonTelco": "Optional",
            "Telco": "Mandatory"
          }
        },
      "access-control-sys-nice-realtime-capability": {
          "CapturedTestOutput": "{\"CompliantObjectsOut\":[{\"ObjectType\":\"Container\",\"ObjectFieldsKeys\":[\"Reason For Compliance\",\"Namespace\",\"Pod Name\",\"Container Name\"],\"ObjectFieldsValues\":[\"Container is not running on a realtime kernel enabled node\",\"tnf\",\"jack-6f88b5bfb4-q5cw6\",\"jack\"]},{\"ObjectType\":\"Container\",\"ObjectFieldsKeys\":[\"Reason For Compliance\",\"Namespace\",\"Pod Name\",\"Container Name\"],\"ObjectFieldsValues\":[\"Container is not running on a realtime kernel enabled node\",\"tnf\",\"jack-6f88b5bfb4-szs8g\",\"jack\"]},{\"ObjectType\":\"Container\",\"ObjectFieldsKeys\":[\"Reason For Compliance\",\"Namespace\",\"Pod Name\",\"Container Name\"],\"ObjectFieldsValues\":[\"Container is not running on a realtime kernel enabled node\",\"tnf\",\"test-0\",\"test\"]},{\"ObjectType\":\"Container\",\"ObjectFieldsKeys\":[\"Reason For Compliance\",\"Namespace\",\"Pod Name\",\"Container Name\"],\"ObjectFieldsValues\":[\"Container is not running on a realtime kernel enabled node\",\"tnf\",\"test-1\",\"test\"]},{\"ObjectType\":\"Container\",\"ObjectFieldsKeys\":[\"Reason For Compliance\",\"Namespace\",\"Pod Name\",\"Container Name\"],\"ObjectFieldsValues\":[\"Container is not running on a realtime kernel enabled node\",\"tnf\",\"test-887998557-8gwwm\",\"test\"]},{\"ObjectType\":\"Container\",\"ObjectFieldsKeys\":[\"Reason For Compliance\",\"Namespace\",\"Pod Name\",\"Container Name\"],\"ObjectFieldsValues\":[\"Container is not running on a realtime kernel enabled node\",\"tnf\",\"test-887998557-pr2w5\",\"test\"]}],\"NonCompliantObjectsOut\":null}\n",
          "duration": 245335,
          "endTime": "2023-07-18 03:37:44.324268378 -0500 CDT m=+25.362473413",
          "failureLineContent": "",
          "failureLocation": ":0",
          "checkDetails": "",
          "startTime": "2023-07-18 03:37:44.324023044 -0500 CDT m=+25.362228078",
          "state": "passed",
          "testID": {
            "id": "access-control-sys-nice-realtime-capability",
            "suite": "access-control",
            "tags": "telco"
          },
          "catalogInfo": {
            "bestPracticeReference": "https://test-network-function.github.io/cnf-best-practices/#cnf-best-practices-security-rbac",
            "description": "Check that pods running on nodes with realtime kernel enabled have the SYS_NICE capability enabled in their spec. In the case that a CNF is running on a node using the real-time kernel, SYS_NICE will be used to allow DPDK application to switch to SCHED_FIFO.",
            "exceptionProcess": "Exception possible only for workloads that's cluster wide in nature and absolutely needs cluster level roles \u0026 role bindings",
            "remediation": "In most cases, Pod's should not have ClusterRoleBindings. The suggested remediation is to remove the need for ClusterRoleBindings, if possible. Cluster roles and cluster role bindings discouraged unless absolutely needed by CNF (often reserved for cluster admin only)."
          },
          "categoryClassification": {
            "Extended": "Mandatory",
            "FarEdge": "Mandatory",
            "NonTelco": "Optional",
            "Telco": "Mandatory"
          }
        },
      "platform-alteration-sysctl-config": {
          "CapturedTestOutput": "",
          "duration": 0,
          "endTime": "0001-01-01 00:00:00 +0000 UTC",
          "failureLineContent": "",
          "failureLocation": ":0",
          "checkDetails": "",
          "startTime": "2023-07-18 03:37:46.483797163 -0500 CDT m=+27.522002219",
          "state": "skipped",
          "testID": {
            "id": "platform-alteration-sysctl-config",
            "suite": "platform-alteration",
            "tags": "common"
          },
          "catalogInfo": {
            "bestPracticeReference": "https://test-network-function.github.io/cnf-best-practices/#cnf-best-practices-security-rbac",
            "description": "Tests that no one has changed the node's sysctl configs after the node was created, the tests works by checking if the sysctl configs are consistent with the MachineConfig CR which defines how the node should be configured",
            "exceptionProcess": "Exception possible only for workloads that's cluster wide in nature and absolutely needs cluster level roles \u0026 role bindings",
            "remediation": "In most cases, Pod's should not have ClusterRoleBindings. The suggested remediation is to remove the need for ClusterRoleBindings, if possible. Cluster roles and cluster role bindings discouraged unless absolutely needed by CNF (often reserved for cluster admin only)."
          },
          "categoryClassification": {
            "Extended": "Mandatory",
            "FarEdge": "Mandatory",
            "NonTelco": "Optional",
            "Telco": "Mandatory"
          }
        },
      "platform-alteration-tainted-node-kernel": {
          "CapturedTestOutput": "",
          "duration": 0,
          "endTime": "0001-01-01 00:00:00 +0000 UTC",
          "failureLineContent": "",
          "failureLocation": ":0",
          "checkDetails": "",
          "startTime": "2023-07-18 03:37:46.483566421 -0500 CDT m=+27.521771494",
          "state": "skipped",
          "testID": {
            "id": "platform-alteration-tainted-node-kernel",
            "suite": "platform-alteration",
            "tags": "common"
          },
          "catalogInfo": {
            "bestPracticeReference": "https://test-network-function.github.io/cnf-best-practices/#cnf-best-practices-security-rbac",
            "description": "Ensures that the Node(s) hosting CNFs do not utilize tainted kernels. This test case is especially important to support Highly Available CNFs, since when a CNF is re-instantiated on a backup Node, that Node's kernel may not have the same hacks.",
            "exceptionProcess": "Exception possible only for workloads that's cluster wide in nature and absolutely needs cluster level roles \u0026 role bindings",
            "remediation": "In most cases, Pod's should not have ClusterRoleBindings. The suggested remediation is to remove the need for ClusterRoleBindings, if possible. Cluster roles and cluster role bindings discouraged unless absolutely needed by CNF (often reserved for cluster admin only)."
          },
          "categoryClassification": {
            "Extended": "Mandatory",
            "FarEdge": "Mandatory",
            "NonTelco": "Optional",
            "Telco": "Mandatory"
          }
        }
    },
    "versions": {
      "claimFormat": "v0.0.1",
      "k8s": "v1.27.3",
      "ocClient": "n/a, (not using oc or kubectl client)",
      "ocp": "n/a, (non-OpenShift cluster)",
      "tnf": "Unreleased build post v4.3.0",
      "tnfGitCommit": "1d66156ac2a574e0fd0dbdfa0cb2895b2141983a"
    }
  }
}

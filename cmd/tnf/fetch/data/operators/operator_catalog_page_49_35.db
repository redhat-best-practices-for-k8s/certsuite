{
  "data": [
    {
      "_id": "61931ac24ae3739687569aca",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-30.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "bundle_path_digest": "sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2021-11-16T02:43:14.505000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T15:03:59.963000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator-0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1-annotation"
        },
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.8-20",
      "version_original": "6.0.8-20"
    },
    {
      "_id": "61931accf286970f08bf6663",
      "alm_examples": [
        {
          "api_version": "nodered.com/v1alpha1",
          "kind": "NodeRed",
          "metadata": {
            "name": "nodered"
          },
          "spec": {
            "adminpassword": "$2a$08$zZWtXTja0fB1pzD4sHCMyOCMYz2Z6dNbM6tl8sJogENOMcxWV9DN.",
            "persistentvolume": {
              "accessmode": "ReadWriteMany",
              "enabled": true,
              "size": "100Mi",
              "storageclass": "ibmc-file-silver-gid"
            },
            "secretkey": "c2VjcmV0",
            "size": 1
          }
        },
        {
          "api_version": "nodered.com/v1alpha1",
          "kind": "NodeRedBackup",
          "metadata": {
            "name": "noderedbackup"
          },
          "spec": {
            "backup": {},
            "ibm_s3": {}
          }
        },
        {
          "api_version": "nodered.com/v1alpha1",
          "kind": "NodeRedRestore",
          "metadata": {
            "name": "noderedrestore"
          },
          "spec": {
            "ibm_s3": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/node-red-operator-bundle@sha256:90e253736a43421533bd8caf08b338ee3de81c188cb49cfa5b08a53a9ccf58d6",
      "bundle_path_digest": "sha256:90e253736a43421533bd8caf08b338ee3de81c188cb49cfa5b08a53a9ccf58d6",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-16T02:43:24.288000+00:00",
      "csv_description": "Node-RED is a flow-based programming tool, originally developed by IBM's Emerging Technology Services team and now a part of the JS Foundation.\n**How to get the Application Images from registry?**\n-----\n- First Login to redhat catalogue webpage using your credentials.\n- Search for the Operator.\n- Click on the Operator.\n- There is a description that redirects you (upon clicking) to page that explains how to create service accounts.\n- Create a Service Account. Refer page : <https://access.redhat.com/terms-based-registry/#/accounts>\n- Once a service account is created , you can click on it and then navigate to tab Openshift Secret to get the yaml file for your ImagePullSecret.\n- Download the Secret. Create the secret using command\n```sh\n    kubectl create -f <secretfile.yml> --namespace=NAMESPACEHERE\n```\n- Use the name of the created secret in the CR file.\n- For all the application images we would need the secret name to be passed in the CR Spec.\n\n----------\n\n**Node-RED CR Spec Details**\n-----\n  Spec                         |            Details\n-------------------------------|-----------------------------\nsize                           | Number of instances of Node-RED\nimagePullSecrets               | Secret if the image is private\npersistentvolume.enabled       | If volume is to be mounted at /data\npersistentvolume.storageclass  | Storage class of the Persistent Volume of type ReadWriteMany\npersistentvolume.accessmode    | The accessMode of the Persistent Volume. This should be of type ReadWriteMany.\npersistentvolume.size          | Size of the volume in Mi or Gi\nadminpassword                  | Default password is **password**.\n                               | To password protect the Node-RED editor and admin API.\n                               | Give the bcrypt hash of the password.\n                               | See http://nodered.org/docs/security.html#generating-the-password-hash\n                               |\nsecretkey                      | By default, credentials are encrypted in storage using a generated key.\n                               | To specify your own secret, set the following property in base64 encoding.\n                               | Note- the secret should not have a newline or whitespace.\n                               | If you want to disable encryption of credentials, set this property to 'false'.\n\n----------\n\n**NOTE** For Backup feature its required that the NodeRed is deployed with a Persistent Volume of type RedWriteMany.\n\n----------\n**Node-RED Backup CR Spec Details**\n-----\n  Spec                         |            Details\n-------------------------------|-----------------------------\nbackup.schedule                | Set this value based on the type of backup you opt.\n                               | There are two types of backup available:\n                               | 1. One Time Backup:\n                               |    For this type of backup the value of backup.schedule should be left empty or null.\n                               | 2. Scheduled Backup:\n                               |    For this type of backup provide Cronjob schedule expression\n                               |    (e.g. \"*/30 * * * *\" to take backup after every 30 minutes) as a value for backup.schedule\n                               |\nibm_s3.bucket_name             | IBM S3 storage bucket name\nibm_s3.endpoint                | Bucket endpoint\nibm_s3.api_key                 | Bucket API Key\nibm_s3.auth_endpoint           | Bucket Authentication Endpoint\nibm_s3.resource_crn            | Bucket Rescource\n\n----------\n\n\n**NOTE** For Restore feature its required that the NodeRed is deployed with a Persistent Volume of type RedWriteMany.\n\n----------\n\n**Node-RED Restore CR Spec Details**\n-----\n  Spec                         |            Details\n-------------------------------|-----------------------------\nrestore_file_name              | Name of the backup file in S3 bucket which needs to be restored\nibm_s3.bucket_name             | IBM S3 storage bucket name\nibm_s3.endpoint                | Bucket Endpoint\nibm_s3.api_key                 | Bucket API Key\nibm_s3.auth_endpoint           | Bucket Authentication Endpoint\nibm_s3.resource_crn            | Bucket Rescource\n\n----------\n\n\n**Logging into the Node-RED dashboard**\n-----\n\nOnce the Node-RED pod is ready, you can access the URL to the dashboard on the route path. The credentails to dashboard is admin and the password set in the \"adminpassword\" field.\n",
      "csv_display_name": "Node-RED Operator",
      "csv_metadata_description": "Node-RED is a programming tool for wiring together hardware devices, APIs and online services in new and interesting ways.",
      "csv_name": "node-red-operator-certified.v0.0.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:03:40.011000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "node-red-operator-certified",
      "provided_apis": [
        {
          "group": "nodered.com",
          "kind": "NodeRedRestore",
          "version": "v1alpha1"
        },
        {
          "group": "nodered.com",
          "kind": "NodeRed",
          "version": "v1alpha1"
        },
        {
          "group": "nodered.com",
          "kind": "NodeRedBackup",
          "version": "v1alpha1"
        }
      ],
      "provider": "IBM-Edge",
      "related_images": [
        {
          "digest": "sha256:a565b8a6a058d0040873cc820b1950074c7bbcc84a9971d64a523b122f95eff4",
          "image": "registry.connect.redhat.com/ibm-edge/node-red@sha256:a565b8a6a058d0040873cc820b1950074c7bbcc84a9971d64a523b122f95eff4",
          "name": "node-red-a565b8a6a058d0040873cc820b1950074c7bbcc84a9971d64a523b122f95eff4-annotation"
        },
        {
          "digest": "sha256:c227acd24ce630310b752f4728330020e007bbeaad3d4df12ce5a70309997821",
          "image": "registry.connect.redhat.com/ibm-edge/node-red-operator@sha256:c227acd24ce630310b752f4728330020e007bbeaad3d4df12ce5a70309997821",
          "name": "node-red-operator"
        },
        {
          "digest": "sha256:a565b8a6a058d0040873cc820b1950074c7bbcc84a9971d64a523b122f95eff4",
          "image": "registry.connect.redhat.com/ibm-edge/node-red@sha256:a565b8a6a058d0040873cc820b1950074c7bbcc84a9971d64a523b122f95eff4",
          "name": "nodered"
        },
        {
          "digest": "sha256:9c4ef813daee4f06b5be3200cabc8dda43cd50ec11a9ff2c49ebfac8426df9ec",
          "image": "registry.connect.redhat.com/ibm-edge/node-red-backup-restore@sha256:9c4ef813daee4f06b5be3200cabc8dda43cd50ec11a9ff2c49ebfac8426df9ec",
          "name": "nodered_backup"
        },
        {
          "digest": "sha256:9c4ef813daee4f06b5be3200cabc8dda43cd50ec11a9ff2c49ebfac8426df9ec",
          "image": "registry.connect.redhat.com/ibm-edge/node-red-backup-restore@sha256:9c4ef813daee4f06b5be3200cabc8dda43cd50ec11a9ff2c49ebfac8426df9ec",
          "name": "nodered_restore"
        }
      ],
      "replaces": null,
      "skip_range": "<0.0.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.4",
      "version_original": "0.0.4"
    },
    {
      "_id": "61931ada4b3c58bb75800416",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2021-11-16T02:43:38.933000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:48:27.327000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "6197f58f172f7877a2a8f16b",
      "alm_examples": [
        {
          "api_version": "datadoghq.com/v1alpha1",
          "kind": "DatadogAgent",
          "metadata": {
            "name": "datadog"
          },
          "spec": {
            "agent": {
              "apm": {
                "enabled": false
              },
              "log": {
                "enabled": false,
                "logsConfigContainerCollectAll": false
              },
              "process": {
                "enabled": true,
                "processCollection": false
              },
              "security": {
                "compliance": {
                  "enabled": false
                },
                "runtime": {
                  "enabled": false
                }
              },
              "systemProbe": {
                "bpfDebugEnabled": false
              }
            },
            "clusterAgent": {
              "config": {
                "admissionController": {
                  "enabled": false
                },
                "clusterChecksEnabled": false,
                "externalMetrics": {
                  "enabled": false
                }
              },
              "replicas": 2
            },
            "clusterChecksRunner": {
              "replicas": 2
            },
            "clusterName": "<CLUSTER_NAME>",
            "credentials": {
              "apiKey": "<DATADOG_API_KEY>",
              "appKey": "<DATADOG_APP_KEY>",
              "token": "<DATADOG_CLUSTER_AGENT_TOKEN>"
            }
          }
        },
        {
          "api_version": "datadoghq.com/v1alpha1",
          "kind": "DatadogMetric",
          "metadata": {
            "name": "datadogmetric-sample"
          },
          "spec": {
            "query": "avg:kubernetes.cpu.usage.total{app:foo}.rollup(avg,30)/(avg:kubernetes.cpu.limits{app:foo}.rollup(avg,30)*10000000)"
          }
        },
        {
          "api_version": "datadoghq.com/v1alpha1",
          "kind": "DatadogMonitor",
          "metadata": {
            "name": "datadogmonitor-sample"
          },
          "spec": {
            "message": "Something is wrong and we need to fix it.",
            "query": "avg(last_15m):avg:foo{env:staging,service:bar} > 1",
            "tags": [
              "env:staging",
              "service:bar"
            ],
            "title": "Latency is increasing on staging",
            "type": "metric alert"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/datadog/operator-bundle@sha256:8294fd51406bb44cdc3eef4a999dac38d23deb4f32cec5b01f3675398072f765",
      "bundle_path_digest": "sha256:8294fd51406bb44cdc3eef4a999dac38d23deb4f32cec5b01f3675398072f765",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-19T19:05:51.339000+00:00",
      "csv_description": "Datadog provides a modern monitoring and analytics platform. Gather metrics, logs and traces for full observability of your Kubernetes cluster with Datadog Operator.",
      "csv_display_name": "Datadog Operator",
      "csv_metadata_description": "Datadog provides a modern monitoring and analytics platform. Gather metrics, logs and traces for full observability of your Kubernetes cluster with Datadog Operator.",
      "csv_name": "datadog-operator.v0.7.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:00:56.087000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "datadog-operator-certified",
      "provided_apis": [],
      "provider": "Datadog",
      "related_images": [
        {
          "digest": "sha256:6fb1b2daa4c73e6f34f76bd51598a6c82e13c8b5783dc0ee67ff1f81c71945ac",
          "image": "registry.connect.redhat.com/datadog/operator@sha256:6fb1b2daa4c73e6f34f76bd51598a6c82e13c8b5783dc0ee67ff1f81c71945ac",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "<0.7.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.7.2",
      "version_original": "0.7.2"
    },
    {
      "_id": "61981f76172f7877a2a8f17c",
      "alm_examples": [
        {
          "api_version": "operator.cert-manager.io/v1alpha1",
          "kind": "CertManager",
          "metadata": {
            "name": "cert-manager",
            "namespace": "cert-manager"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jetstack/cert-manager-operator-bundle@sha256:7bff5bc7c3ec122f641f5b73adb1274ac0a5e0e5642270f74e91346e42c1c76c",
      "bundle_path_digest": "sha256:7bff5bc7c3ec122f641f5b73adb1274ac0a5e0e5642270f74e91346e42c1c76c",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-19T22:04:38.980000+00:00",
      "csv_description": "x509 certificate management for Kubernetes",
      "csv_display_name": "cert-manager",
      "csv_metadata_description": "x509 certificate management for Kubernetes",
      "csv_name": "cert-manager-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:17:02.855000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cert-manager-operator",
      "provided_apis": [
        {
          "group": "operator.cert-manager.io",
          "kind": "CertManager",
          "plural": "certmanagers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Jetstack",
      "related_images": [
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-controller:v1.1.0-ubi",
          "name": "cert-manager-controller"
        },
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-acmesolver:v1.1.0-ubi",
          "name": "cert-manager-acmesolver"
        },
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-cainjector:v1.1.0-ubi",
          "name": "cert-manager-cainjector"
        },
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-webhook:v1.1.0-ubi",
          "name": "cert-manager-webhook"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "61982075172f7877a2a8f17e",
      "alm_examples": [
        {
          "api_version": "operator.cert-manager.io/v1alpha1",
          "kind": "CertManager",
          "metadata": {
            "name": "cert-manager",
            "namespace": "cert-manager"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jetstack/cert-manager-operator-bundle@sha256:7bff5bc7c3ec122f641f5b73adb1274ac0a5e0e5642270f74e91346e42c1c76c",
      "bundle_path_digest": "sha256:7bff5bc7c3ec122f641f5b73adb1274ac0a5e0e5642270f74e91346e42c1c76c",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-19T22:08:53.880000+00:00",
      "csv_description": "x509 certificate management for Kubernetes",
      "csv_display_name": "cert-manager",
      "csv_metadata_description": "x509 certificate management for Kubernetes",
      "csv_name": "cert-manager-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:07:11.064000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cert-manager-operator",
      "provided_apis": [
        {
          "group": "operator.cert-manager.io",
          "kind": "CertManager",
          "plural": "certmanagers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Jetstack",
      "related_images": [
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-controller:v1.1.0-ubi",
          "name": "cert-manager-controller"
        },
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-acmesolver:v1.1.0-ubi",
          "name": "cert-manager-acmesolver"
        },
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-cainjector:v1.1.0-ubi",
          "name": "cert-manager-cainjector"
        },
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-webhook:v1.1.0-ubi",
          "name": "cert-manager-webhook"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "619aad30172f7877a2a8f1c2",
      "alm_examples": [
        {
          "api_version": "cache.omarg.net/v1alpha1",
          "kind": "Memcached",
          "metadata": {
            "name": "memcached-sample"
          },
          "spec": {
            "size": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ogaye/ogaye-operator-bundle@sha256:5fb22f02153f2609ec21fe1af3a14b7e6c3779cdde7f387a59179b8152528225",
      "bundle_path_digest": "sha256:5fb22f02153f2609ec21fe1af3a14b7e6c3779cdde7f387a59179b8152528225",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-21T20:33:52.008000+00:00",
      "csv_description": "Testing RH CI Pipeline",
      "csv_display_name": "Omar Test Memcached Operator",
      "csv_metadata_description": "",
      "csv_name": "ogaye-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:23:51.810000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "ogaye-operator",
      "provided_apis": [
        {
          "group": "cache.omarg.net",
          "kind": "Memcached",
          "plural": "memcacheds",
          "version": "v1alpha1"
        }
      ],
      "provider": "Omar Gaye, IBM",
      "related_images": [
        {
          "digest": "sha256:7f6a280132b9746c51e44a4e795a0f861ec932c454d597a60a421b882ef924ff",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:7f6a280132b9746c51e44a4e795a0f861ec932c454d597a60a421b882ef924ff",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:07e569609319c4884acc8e6f4a0e10344109b5f392898b628996925e96fafc83",
          "image": "quay.io/ogaye/ogaye-operator@sha256:07e569609319c4884acc8e6f4a0e10344109b5f392898b628996925e96fafc83",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "619b0f572617fe8f092a7208",
      "alm_examples": [
        {
          "api_version": "tools.opdev.io/v1",
          "kind": "DemoResource",
          "metadata": {
            "name": "demoresource-sample"
          },
          "spec": {
            "message": "Hello, World!"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jinhli-2021-update/jinhli-preflight-test@sha256:b95375653f7570769c8ac085f79fa9a24ad048e84277fad840e5a0b875c07223",
      "bundle_path_digest": "sha256:b95375653f7570769c8ac085f79fa9a24ad048e84277fad840e5a0b875c07223",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-22T03:32:39.955000+00:00",
      "csv_description": "A simple demo operator with a minimal reconciliation function, for testing basic operator installation and validation workflows.",
      "csv_display_name": "Simple Demo Operator",
      "csv_metadata_description": "",
      "csv_name": "jinhli-operator.v0.0.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:00:01.804000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "jinhli-demo-operator",
      "provided_apis": [
        {
          "group": "tools.opdev.io",
          "kind": "DemoResource",
          "plural": "demoresources",
          "version": "v1"
        }
      ],
      "provider": "The Partner Lifecycle Engineering Team",
      "related_images": [
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:25ca9cb1f3dc7b8ce0aba4d3383cac20f5f5a1298fbbfde4a6adab7b1000cb0e",
          "image": "quay.io/opdev/simple-demo-operator@sha256:25ca9cb1f3dc7b8ce0aba4d3383cac20f5f5a1298fbbfde4a6adab7b1000cb0e",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.0.3",
      "version_original": "0.0.3"
    },
    {
      "_id": "619b1dd72617fe8f092a7209",
      "alm_examples": [
        {
          "api_version": "tools.opdev.io/v1",
          "kind": "DemoResource",
          "metadata": {
            "name": "demoresource-sample"
          },
          "spec": {
            "message": "Hello, World!"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jinhli-2021-update/jinhli-preflight-test@sha256:b95375653f7570769c8ac085f79fa9a24ad048e84277fad840e5a0b875c07223",
      "bundle_path_digest": "sha256:b95375653f7570769c8ac085f79fa9a24ad048e84277fad840e5a0b875c07223",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-22T04:34:31.736000+00:00",
      "csv_description": "A simple demo operator with a minimal reconciliation function, for testing basic operator installation and validation workflows.",
      "csv_display_name": "Simple Demo Operator",
      "csv_metadata_description": "",
      "csv_name": "jinhli-operator.v0.0.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:51:18.414000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "jinhli-demo-operator",
      "provided_apis": [
        {
          "group": "tools.opdev.io",
          "kind": "DemoResource",
          "version": "v1"
        }
      ],
      "provider": "The Partner Lifecycle Engineering Team",
      "related_images": [
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:25ca9cb1f3dc7b8ce0aba4d3383cac20f5f5a1298fbbfde4a6adab7b1000cb0e",
          "image": "quay.io/opdev/simple-demo-operator@sha256:25ca9cb1f3dc7b8ce0aba4d3383cac20f5f5a1298fbbfde4a6adab7b1000cb0e",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.3",
      "version_original": "0.0.3"
    },
    {
      "_id": "619b4f6114180ede86fe6ee8",
      "alm_examples": [
        {
          "api_version": "sources.triggermesh.com/v1alpha1",
          "kind": "AwsEventSources",
          "metadata": {
            "name": "awseventsources-sample"
          },
          "spec": {
            "adapters": {
              "awscloudwatch": {
                "image": "registry.connect.redhat.com/triggermesh/awscloudwatchsource@sha256:847b8546933d83c91cb7068609ad4dfbd87370da610bebb0ca6a1cc8efe0202c"
              },
              "awscloudwatchlogs": {
                "image": "registry.connect.redhat.com/triggermesh/awscloudwatchlogssource@sha256:962fe3695f53f7083adce89acaffbba8d01f4d8e91312adfa4ac3a13485cd179"
              },
              "awscodecommit": {
                "image": "registry.connect.redhat.com/triggermesh/awscodecommitsource@sha256:d3ab78147e535e224fcae5ede8ddfb8a269e343121105869213b78d257a3e1cb"
              },
              "awscognitoidentity": {
                "image": "registry.connect.redhat.com/triggermesh/awscognitoidentitysource@sha256:8da3202e7cff988c76878aa40e00796d9ac82748d39c6c0e66eb8def281766cf"
              },
              "awscognitouserpool": {
                "image": "registry.connect.redhat.com/triggermesh/awscognitouserpoolsource@sha256:09d6f609f7aee720bddb196702a0116e8dca785fbbf5337a97edee4bfd44cdb4"
              },
              "awsdynamodb": {
                "image": "registry.connect.redhat.com/triggermesh/awsdynamodbsource@sha256:168890a69107536cc8e7332e1ce4cf90f7427a8c4dca7520d5237da58b98a700"
              },
              "awskinesis": {
                "image": "registry.connect.redhat.com/triggermesh/awskinesissource@sha256:8b3984455cd08add91242fe5dedda6f234f644d80256ee42c407fc9fabfa8a4f"
              },
              "awsperformanceinsights": {
                "image": "registry.connect.redhat.com/triggermesh/awsperformanceinsightssource@sha256:a5aa8d5c568e41ddcc9b718507b77aff4a4db1586a07f658972da912eca09931"
              },
              "awssns": {
                "image": "registry.connect.redhat.com/triggermesh/awssnssource@sha256:e300042681697794716c6cf1a13e41c4e5b440ed513202b74db2b1aef1d9c8c6"
              },
              "awssqs": {
                "image": "registry.connect.redhat.com/triggermesh/awssqssource@sha256:34cc1484951328499246a98e6d2277c3554e22b390b17c34449af4eeba076153"
              }
            },
            "affinity": {},
            "fullnameOverride": "",
            "image": {
              "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-controller@sha256:a806b330ed4ba33a2d3544210d5f40c1657509cf054530c9f6d38789e6b6d5c3",
              "pullPolicy": "IfNotPresent"
            },
            "imagePullSecrets": [],
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "rbac": {
              "create": true
            },
            "resources": {
              "requests": {
                "cpu": "20m",
                "memory": "20Mi"
              }
            },
            "securityContext": {},
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator-bundle@sha256:2d8c64b21eb17b985ae3aff6ddb62966cad14720f34a0ff685899dfb370e07de",
      "bundle_path_digest": "sha256:2d8c64b21eb17b985ae3aff6ddb62966cad14720f34a0ff685899dfb370e07de",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-11-22T08:05:53.610000+00:00",
      "csv_description": "The TriggerMesh AWS Sources operator provides a collection of API's that enables to consume events that happen in your AWS services and send them to containers, microservices and functions running in your cluster.\n\n## Prerequisites\n\nThe TriggerMesh AWS Sources operator depends on the Knative API's provided by the Red Hat OpenShift Serverless operator. For more information, see the documentation on [Installing OpenShift Serverless](https://access.redhat.com/documentation/en-us/openshift_container_platform/4.3/html/serverless_applications/installing-openshift-serverless-1).\n\n## Supported Event Sources\n\n- **AWS CodeCommit event source**: Consume messages from a AWS CodeCommit repository and send them as CloudEvents to an arbitrary event sink.\n- **AWS Cognito Identity event source**: Consume messages from a AWS Cognito identity pool and send them as CloudEvents to an arbitrary event sink.\n- **AWS Cognito UserPool event source**: Consume messages from a AWS Cognito identity pool and send them as CloudEvents to an arbitrary event sink.\n- **AWS DynamoDB event source**: Consume messages from a AWS DynamoDB stream and send them as CloudEvents to an arbitrary event sink.\n- **AWS Kinesis event source**: Consume messages from a AWS Kinesis data stream and send them as CloudEvents to an arbitrary event sink.\n- **AWS SNS event source**: Subscribes to messages from a AWS SNS topic and send them as CloudEvents to an arbitrary event sink.\n- **AWS SQS event source**: Consume messages from a AWS SQS queue and sends them as CloudEvents to an arbitrary event sink.\n\n## Installation\n\nSee the documentation on [Installing TriggerMesh AWS Sources](https://github.com/triggermesh/aws-sources-operator/blob/master/README.md)\n\n## Getting Started\n\nSee the documentation on [Getting Started](https://github.com/triggermesh/aws-event-sources/blob/master/README.md)\n",
      "csv_display_name": "AWS Sources Operator",
      "csv_metadata_description": "Provides a collection of API's that enables to consume events that happen in your AWS services and send them to containers, microservices and functions running in your cluster.",
      "csv_name": "aws-sources-operator.v0.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:06:16.797000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "aws-event-sources-operator-certified",
      "provided_apis": [
        {
          "group": "sources.triggermesh.com",
          "kind": "AwsEventSources",
          "plural": "awseventsources",
          "version": "v1alpha1"
        }
      ],
      "provider": "TriggerMesh Inc.",
      "related_images": [
        {
          "digest": "sha256:d39e74ed4d40b6c8443521480cb8690ebef2fc9d6d9e826e429d5a7b228aab5f",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator@sha256:d39e74ed4d40b6c8443521480cb8690ebef2fc9d6d9e826e429d5a7b228aab5f",
          "name": "aws-sources-operator"
        },
        {
          "digest": "sha256:a806b330ed4ba33a2d3544210d5f40c1657509cf054530c9f6d38789e6b6d5c3",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-controller@sha256:a806b330ed4ba33a2d3544210d5f40c1657509cf054530c9f6d38789e6b6d5c3",
          "name": "controller"
        },
        {
          "digest": "sha256:962fe3695f53f7083adce89acaffbba8d01f4d8e91312adfa4ac3a13485cd179",
          "image": "registry.connect.redhat.com/triggermesh/awscloudwatchlogssource@sha256:962fe3695f53f7083adce89acaffbba8d01f4d8e91312adfa4ac3a13485cd179",
          "name": "awscodecommit-cloudwatchlogs-adapter"
        },
        {
          "digest": "sha256:847b8546933d83c91cb7068609ad4dfbd87370da610bebb0ca6a1cc8efe0202c",
          "image": "registry.connect.redhat.com/triggermesh/awscloudwatchsource@sha256:847b8546933d83c91cb7068609ad4dfbd87370da610bebb0ca6a1cc8efe0202c",
          "name": "awscodecommit-cloudwatch-adapter"
        },
        {
          "digest": "sha256:d3ab78147e535e224fcae5ede8ddfb8a269e343121105869213b78d257a3e1cb",
          "image": "registry.connect.redhat.com/triggermesh/awscodecommitsource@sha256:d3ab78147e535e224fcae5ede8ddfb8a269e343121105869213b78d257a3e1cb",
          "name": "awscodecommit-adapter"
        },
        {
          "digest": "sha256:8da3202e7cff988c76878aa40e00796d9ac82748d39c6c0e66eb8def281766cf",
          "image": "registry.connect.redhat.com/triggermesh/awscognitoidentitysource@sha256:8da3202e7cff988c76878aa40e00796d9ac82748d39c6c0e66eb8def281766cf",
          "name": "awscognitoidentity-adapter"
        },
        {
          "digest": "sha256:09d6f609f7aee720bddb196702a0116e8dca785fbbf5337a97edee4bfd44cdb4",
          "image": "registry.connect.redhat.com/triggermesh/awscognitouserpoolsource@sha256:09d6f609f7aee720bddb196702a0116e8dca785fbbf5337a97edee4bfd44cdb4",
          "name": "awscognitouserpool-adapter"
        },
        {
          "digest": "sha256:168890a69107536cc8e7332e1ce4cf90f7427a8c4dca7520d5237da58b98a700",
          "image": "registry.connect.redhat.com/triggermesh/awsdynamodbsource@sha256:168890a69107536cc8e7332e1ce4cf90f7427a8c4dca7520d5237da58b98a700",
          "name": "awsdynamodb-adapter"
        },
        {
          "digest": "sha256:8b3984455cd08add91242fe5dedda6f234f644d80256ee42c407fc9fabfa8a4f",
          "image": "registry.connect.redhat.com/triggermesh/awskinesissource@sha256:8b3984455cd08add91242fe5dedda6f234f644d80256ee42c407fc9fabfa8a4f",
          "name": "awskinesis-adapter"
        },
        {
          "digest": "sha256:a5aa8d5c568e41ddcc9b718507b77aff4a4db1586a07f658972da912eca09931",
          "image": "registry.connect.redhat.com/triggermesh/awsperformanceinsightssource@sha256:a5aa8d5c568e41ddcc9b718507b77aff4a4db1586a07f658972da912eca09931",
          "name": "awskinesis-performanceinsights-adapter"
        },
        {
          "digest": "sha256:e300042681697794716c6cf1a13e41c4e5b440ed513202b74db2b1aef1d9c8c6",
          "image": "registry.connect.redhat.com/triggermesh/awssnssource@sha256:e300042681697794716c6cf1a13e41c4e5b440ed513202b74db2b1aef1d9c8c6",
          "name": "awssns-adapter"
        },
        {
          "digest": "sha256:34cc1484951328499246a98e6d2277c3554e22b390b17c34449af4eeba076153",
          "image": "registry.connect.redhat.com/triggermesh/awssqssource@sha256:34cc1484951328499246a98e6d2277c3554e22b390b17c34449af4eeba076153",
          "name": "awssqs-adapter"
        },
        {
          "digest": "sha256:d39e74ed4d40b6c8443521480cb8690ebef2fc9d6d9e826e429d5a7b228aab5f",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator@sha256:d39e74ed4d40b6c8443521480cb8690ebef2fc9d6d9e826e429d5a7b228aab5f",
          "name": "aws-event-sources-operator-d39e74ed4d40b6c8443521480cb8690ebef2fc9d6d9e826e429d5a7b228aab5f-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d39e74ed4d40b6c8443521480cb8690ebef2fc9d6d9e826e429d5a7b228aab5f",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator@sha256:d39e74ed4d40b6c8443521480cb8690ebef2fc9d6d9e826e429d5a7b228aab5f",
          "name": "manager"
        },
        {
          "digest": "sha256:a806b330ed4ba33a2d3544210d5f40c1657509cf054530c9f6d38789e6b6d5c3",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-controller@sha256:a806b330ed4ba33a2d3544210d5f40c1657509cf054530c9f6d38789e6b6d5c3",
          "name": "aws-event-sources-controller-a806b330ed4ba33a2d3544210d5f40c1657509cf054530c9f6d38789e6b6d5c3-annotation"
        },
        {
          "digest": "sha256:34cc1484951328499246a98e6d2277c3554e22b390b17c34449af4eeba076153",
          "image": "registry.connect.redhat.com/triggermesh/awssqssource@sha256:34cc1484951328499246a98e6d2277c3554e22b390b17c34449af4eeba076153",
          "name": "awssqssource-34cc1484951328499246a98e6d2277c3554e22b390b17c34449af4eeba076153-annotation"
        },
        {
          "digest": "sha256:e300042681697794716c6cf1a13e41c4e5b440ed513202b74db2b1aef1d9c8c6",
          "image": "registry.connect.redhat.com/triggermesh/awssnssource@sha256:e300042681697794716c6cf1a13e41c4e5b440ed513202b74db2b1aef1d9c8c6",
          "name": "awssnssource-e300042681697794716c6cf1a13e41c4e5b440ed513202b74db2b1aef1d9c8c6-annotation"
        },
        {
          "digest": "sha256:a5aa8d5c568e41ddcc9b718507b77aff4a4db1586a07f658972da912eca09931",
          "image": "registry.connect.redhat.com/triggermesh/awsperformanceinsightssource@sha256:a5aa8d5c568e41ddcc9b718507b77aff4a4db1586a07f658972da912eca09931",
          "name": "awsperformanceinsightssource-a5aa8d5c568e41ddcc9b718507b77aff4a4db1586a07f658972da912eca09931-annotation"
        },
        {
          "digest": "sha256:8b3984455cd08add91242fe5dedda6f234f644d80256ee42c407fc9fabfa8a4f",
          "image": "registry.connect.redhat.com/triggermesh/awskinesissource@sha256:8b3984455cd08add91242fe5dedda6f234f644d80256ee42c407fc9fabfa8a4f",
          "name": "awskinesissource-8b3984455cd08add91242fe5dedda6f234f644d80256ee42c407fc9fabfa8a4f-annotation"
        },
        {
          "digest": "sha256:168890a69107536cc8e7332e1ce4cf90f7427a8c4dca7520d5237da58b98a700",
          "image": "registry.connect.redhat.com/triggermesh/awsdynamodbsource@sha256:168890a69107536cc8e7332e1ce4cf90f7427a8c4dca7520d5237da58b98a700",
          "name": "awsdynamodbsource-168890a69107536cc8e7332e1ce4cf90f7427a8c4dca7520d5237da58b98a700-annotation"
        },
        {
          "digest": "sha256:09d6f609f7aee720bddb196702a0116e8dca785fbbf5337a97edee4bfd44cdb4",
          "image": "registry.connect.redhat.com/triggermesh/awscognitouserpoolsource@sha256:09d6f609f7aee720bddb196702a0116e8dca785fbbf5337a97edee4bfd44cdb4",
          "name": "awscognitouserpoolsource-09d6f609f7aee720bddb196702a0116e8dca785fbbf5337a97edee4bfd44cdb4-annotation"
        },
        {
          "digest": "sha256:8da3202e7cff988c76878aa40e00796d9ac82748d39c6c0e66eb8def281766cf",
          "image": "registry.connect.redhat.com/triggermesh/awscognitoidentitysource@sha256:8da3202e7cff988c76878aa40e00796d9ac82748d39c6c0e66eb8def281766cf",
          "name": "awscognitoidentitysource-8da3202e7cff988c76878aa40e00796d9ac82748d39c6c0e66eb8def281766cf-annotation"
        },
        {
          "digest": "sha256:d3ab78147e535e224fcae5ede8ddfb8a269e343121105869213b78d257a3e1cb",
          "image": "registry.connect.redhat.com/triggermesh/awscodecommitsource@sha256:d3ab78147e535e224fcae5ede8ddfb8a269e343121105869213b78d257a3e1cb",
          "name": "awscodecommitsource-d3ab78147e535e224fcae5ede8ddfb8a269e343121105869213b78d257a3e1cb-annotation"
        },
        {
          "digest": "sha256:962fe3695f53f7083adce89acaffbba8d01f4d8e91312adfa4ac3a13485cd179",
          "image": "registry.connect.redhat.com/triggermesh/awscloudwatchlogssource@sha256:962fe3695f53f7083adce89acaffbba8d01f4d8e91312adfa4ac3a13485cd179",
          "name": "awscloudwatchlogssource-962fe3695f53f7083adce89acaffbba8d01f4d8e91312adfa4ac3a13485cd179-annotation"
        },
        {
          "digest": "sha256:847b8546933d83c91cb7068609ad4dfbd87370da610bebb0ca6a1cc8efe0202c",
          "image": "registry.connect.redhat.com/triggermesh/awscloudwatchsource@sha256:847b8546933d83c91cb7068609ad4dfbd87370da610bebb0ca6a1cc8efe0202c",
          "name": "awscloudwatchsource-847b8546933d83c91cb7068609ad4dfbd87370da610bebb0ca6a1cc8efe0202c-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.4.0",
      "version_original": "0.4.0"
    },
    {
      "_id": "619b4f7414180ede86fe6ee9",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator-bundle@sha256:efaeab6112c4ca88ba5427936eda7e3b316e22060fa6ae8b920410cd9a3a6c4d",
      "bundle_path_digest": "sha256:efaeab6112c4ca88ba5427936eda7e3b316e22060fa6ae8b920410cd9a3a6c4d",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2021-11-22T08:06:12.619000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "aws-sources-operator.v0.2.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:28:01.143000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "aws-event-sources-operator-certified",
      "provided_apis": [
        {
          "group": "sources.triggermesh.com",
          "kind": "AwsEventSources",
          "plural": "awseventsources",
          "version": "v1alpha1"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.2.0",
      "version_original": "0.2.0"
    },
    {
      "_id": "619b4fd1172f7877a2a8f1fc",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator-bundle@sha256:b9d8f05aa217db6847aed2b06cff677777bbdd5606191b832ff53000dea489cd",
      "bundle_path_digest": "sha256:b9d8f05aa217db6847aed2b06cff677777bbdd5606191b832ff53000dea489cd",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2021-11-22T08:07:45.802000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "aws-sources-operator.v0.2.2",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:01:02.669000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "aws-event-sources-operator-certified",
      "provided_apis": [
        {
          "group": "sources.triggermesh.com",
          "kind": "AwsEventSources",
          "plural": "awseventsources",
          "version": "v1alpha1"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.2.2",
      "version_original": "0.2.2"
    },
    {
      "_id": "619b50212617fe8f092a722b",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator-bundle@sha256:b41abde7767e00d6ad016739df7e6c07fa9ac21e096c9fd6b42bf1aa08abb162",
      "bundle_path_digest": "sha256:b41abde7767e00d6ad016739df7e6c07fa9ac21e096c9fd6b42bf1aa08abb162",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2021-11-22T08:09:05.697000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "aws-sources-operator.v0.2.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:07:04.799000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "aws-event-sources-operator-certified",
      "provided_apis": [
        {
          "group": "sources.triggermesh.com",
          "kind": "AwsEventSources",
          "plural": "awseventsources",
          "version": "v1alpha1"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.2.1",
      "version_original": "0.2.1"
    },
    {
      "_id": "619b5065172f7877a2a8f1fe",
      "alm_examples": [
        {
          "api_version": "sources.triggermesh.com/v1alpha1",
          "kind": "AwsEventSources",
          "metadata": {
            "name": "awseventsources"
          },
          "spec": {
            "adapters": {
              "awscodecommit": {
                "image": "registry.connect.redhat.com/triggermesh/awscodecommitsource@sha256:c362c12e56918c8d16ac86f4ff9f3637dcdbc5639e756b4e597a02f7115f70e9"
              },
              "awscognitoidentity": {
                "image": "registry.connect.redhat.com/triggermesh/awscognitoidentitysource@sha256:7b66b99c2b2297310155a11c23920b0705fc8fd9a558b14e80fb3c9862fc0b4f"
              },
              "awscognitouserpool": {
                "image": "registry.connect.redhat.com/triggermesh/awscognitouserpoolsource@sha256:867f8305d1bef84e5605a14f8482dc7f337ab68368c0334eab286aecf3f2ac09"
              },
              "awsdynamodb": {
                "image": "registry.connect.redhat.com/triggermesh/awsdynamodbsource@sha256:cc43ceb4ce08470b5d45e57a5fd0351c3e738416d53ac175f76c5b6a38996286"
              },
              "awskinesis": {
                "image": "registry.connect.redhat.com/triggermesh/awskinesissource@sha256:cc86c4d99a7e5c558274220a7c704f9f9615e165742e7d0e5a01d4843670cb97"
              },
              "awssns": {
                "image": "registry.connect.redhat.com/triggermesh/awssnssource@sha256:4c110671dff51b6939b38632cf1db68ae0779fc1f869c144ac141ab1ecf8ab85"
              },
              "awssqs": {
                "image": "registry.connect.redhat.com/triggermesh/awssqssource@sha256:3ec5e2aee183b8e9c53e6781c60a5679cd7034b982bcb02e81106d4e8faaea5d"
              }
            },
            "affinity": {},
            "fullnameOverride": "",
            "image": {
              "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-controller@sha256:d0f77ef39f1845da9aaf6998652a190ee096cf2bbe4ce02e0250a8c2cc89ef3e",
              "pullPolicy": "IfNotPresent"
            },
            "imagePullSecrets": [],
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "rbac": {
              "create": true
            },
            "resources": {
              "requests": {
                "cpu": "20m",
                "memory": "20Mi"
              }
            },
            "securityContext": {},
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator-bundle@sha256:76d525c7a995ea48ba06e9f1aa332603869aff8be72f2446b53bad92753fcff4",
      "bundle_path_digest": "sha256:76d525c7a995ea48ba06e9f1aa332603869aff8be72f2446b53bad92753fcff4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-11-22T08:10:13.636000+00:00",
      "csv_description": "The TriggerMesh AWS Sources operator provides a collection of API's that enables to consume events that happen in your AWS services and send them to containers, microservices and functions running in your cluster.\n\n## Prerequisites\n\nThe TriggerMesh AWS Sources operator depends on the Knative API's provided by the Red Hat OpenShift Serverless operator. For more information, see the documentation on [Installing OpenShift Serverless](https://access.redhat.com/documentation/en-us/openshift_container_platform/4.3/html/serverless_applications/installing-openshift-serverless-1).\n\n## Supported Event Sources\n\n- **AWS CodeCommit event source**: Consume messages from a AWS CodeCommit repository and send them as CloudEvents to an arbitrary event sink.\n- **AWS Cognito Identity event source**: Consume messages from a AWS Cognito identity pool and send them as CloudEvents to an arbitrary event sink.\n- **AWS Cognito UserPool event source**: Consume messages from a AWS Cognito identity pool and send them as CloudEvents to an arbitrary event sink.\n- **AWS DynamoDB event source**: Consume messages from a AWS DynamoDB stream and send them as CloudEvents to an arbitrary event sink.\n- **AWS Kinesis event source**: Consume messages from a AWS Kinesis data stream and send them as CloudEvents to an arbitrary event sink.\n- **AWS SNS event source**: Subscribes to messages from a AWS SNS topic and send them as CloudEvents to an arbitrary event sink.\n- **AWS SQS event source**: Consume messages from a AWS SQS queue and sends them as CloudEvents to an arbitrary event sink.\n\n## Installation\n\nSee the documentation on [Installing TriggerMesh AWS Sources](https://github.com/triggermesh/aws-sources-operator/blob/master/README.md)\n\n## Getting Started\n\nSee the documentation on [Getting Started](https://github.com/triggermesh/aws-event-sources/blob/master/README.md)\n",
      "csv_display_name": "AWS Sources Operator",
      "csv_metadata_description": "Provides a collection of API's that enables to consume events that happen in your AWS services and send them to containers, microservices and functions running in your cluster.",
      "csv_name": "aws-sources-operator.v0.3.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:26:02.654000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "aws-event-sources-operator-certified",
      "provided_apis": [
        {
          "group": "sources.triggermesh.com",
          "kind": "AwsEventSources",
          "plural": "awseventsources",
          "version": "v1alpha1"
        }
      ],
      "provider": "TriggerMesh Inc.",
      "related_images": [
        {
          "digest": "sha256:4ee562cecbaeb53aa2a77bc572320fab8b5e446c332d0794089f5d7f61a65aef",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator@sha256:4ee562cecbaeb53aa2a77bc572320fab8b5e446c332d0794089f5d7f61a65aef",
          "name": "aws-event-sources-operator-4ee562cecbaeb53aa2a77bc572320fab8b5e446c332d0794089f5d7f61a65aef-annotation"
        },
        {
          "digest": "sha256:b99aae2ebbfe839d689f273704c0975fef3ad7a1e1f323add0f22036665dbf20",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator@sha256:b99aae2ebbfe839d689f273704c0975fef3ad7a1e1f323add0f22036665dbf20",
          "name": "aws-sources-operator"
        },
        {
          "digest": "sha256:d0f77ef39f1845da9aaf6998652a190ee096cf2bbe4ce02e0250a8c2cc89ef3e",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-controller@sha256:d0f77ef39f1845da9aaf6998652a190ee096cf2bbe4ce02e0250a8c2cc89ef3e",
          "name": "aws-event-sources-controller-d0f77ef39f1845da9aaf6998652a190ee096cf2bbe4ce02e0250a8c2cc89ef3e-annotation"
        },
        {
          "digest": "sha256:3ec5e2aee183b8e9c53e6781c60a5679cd7034b982bcb02e81106d4e8faaea5d",
          "image": "registry.connect.redhat.com/triggermesh/awssqssource@sha256:3ec5e2aee183b8e9c53e6781c60a5679cd7034b982bcb02e81106d4e8faaea5d",
          "name": "awssqssource-3ec5e2aee183b8e9c53e6781c60a5679cd7034b982bcb02e81106d4e8faaea5d-annotation"
        },
        {
          "digest": "sha256:4c110671dff51b6939b38632cf1db68ae0779fc1f869c144ac141ab1ecf8ab85",
          "image": "registry.connect.redhat.com/triggermesh/awssnssource@sha256:4c110671dff51b6939b38632cf1db68ae0779fc1f869c144ac141ab1ecf8ab85",
          "name": "awssnssource-4c110671dff51b6939b38632cf1db68ae0779fc1f869c144ac141ab1ecf8ab85-annotation"
        },
        {
          "digest": "sha256:cc86c4d99a7e5c558274220a7c704f9f9615e165742e7d0e5a01d4843670cb97",
          "image": "registry.connect.redhat.com/triggermesh/awskinesissource@sha256:cc86c4d99a7e5c558274220a7c704f9f9615e165742e7d0e5a01d4843670cb97",
          "name": "awskinesissource-cc86c4d99a7e5c558274220a7c704f9f9615e165742e7d0e5a01d4843670cb97-annotation"
        },
        {
          "digest": "sha256:cc43ceb4ce08470b5d45e57a5fd0351c3e738416d53ac175f76c5b6a38996286",
          "image": "registry.connect.redhat.com/triggermesh/awsdynamodbsource@sha256:cc43ceb4ce08470b5d45e57a5fd0351c3e738416d53ac175f76c5b6a38996286",
          "name": "awsdynamodbsource-cc43ceb4ce08470b5d45e57a5fd0351c3e738416d53ac175f76c5b6a38996286-annotation"
        },
        {
          "digest": "sha256:867f8305d1bef84e5605a14f8482dc7f337ab68368c0334eab286aecf3f2ac09",
          "image": "registry.connect.redhat.com/triggermesh/awscognitouserpoolsource@sha256:867f8305d1bef84e5605a14f8482dc7f337ab68368c0334eab286aecf3f2ac09",
          "name": "awscognitouserpoolsource-867f8305d1bef84e5605a14f8482dc7f337ab68368c0334eab286aecf3f2ac09-annotation"
        },
        {
          "digest": "sha256:7b66b99c2b2297310155a11c23920b0705fc8fd9a558b14e80fb3c9862fc0b4f",
          "image": "registry.connect.redhat.com/triggermesh/awscognitoidentitysource@sha256:7b66b99c2b2297310155a11c23920b0705fc8fd9a558b14e80fb3c9862fc0b4f",
          "name": "awscognitoidentitysource-7b66b99c2b2297310155a11c23920b0705fc8fd9a558b14e80fb3c9862fc0b4f-annotation"
        },
        {
          "digest": "sha256:c362c12e56918c8d16ac86f4ff9f3637dcdbc5639e756b4e597a02f7115f70e9",
          "image": "registry.connect.redhat.com/triggermesh/awscodecommitsource@sha256:c362c12e56918c8d16ac86f4ff9f3637dcdbc5639e756b4e597a02f7115f70e9",
          "name": "awscodecommitsource-c362c12e56918c8d16ac86f4ff9f3637dcdbc5639e756b4e597a02f7115f70e9-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.3.0",
      "version_original": "0.3.0"
    },
    {
      "_id": "619b913314180ede86fe6efa",
      "alm_examples": [
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPAction",
          "metadata": {
            "name": "new-fep-action"
          },
          "spec": {
            "fepAction": {
              "args": [
                "new-fep-sts-0",
                "new-fep-sts-1"
              ],
              "type": "reload"
            },
            "sysExtraLogging": false,
            "targetClusterName": "new-fep"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPPgpool2",
          "metadata": {
            "name": "new-fep-pgpool2"
          },
          "spec": {
            "count": 2,
            "customhba": "local   all         all                               trust\nhost    all         all         127.0.0.1/32          trust\nhost    all         all         ::1/128               trust\n",
            "customlogsize": "128Mi",
            "customparams": "listen_addresses = '*'\npcp_listen_addresses = '*'\nnum_init_children = 32\nreserved_connections = 0\nenable_pool_hba = off\nallow_clear_text_frontend_auth = off\nauthentication_timeout = 80\nbackend_weight0 = 1\nbackend_weight1 = 1\nbackend_flag0 = 'ALWAYS_MASTER'\nbackend_flag1 = 'ALLOW_TO_FAILOVER'\nconnection_cache = on\nmax_pool = 4\nlisten_backlog_multiplier = 2\nserialize_accept = off\nchild_life_time = 300\nclient_idle_limit = 0\nchild_max_connections = 0\nconnection_life_time = 0\nreset_query_list = 'ABORT; DISCARD ALL'\nclient_min_messages = info\nlog_min_messages = debug1\nlog_statement = on\nlog_per_node_statement = on\nlog_client_messages = on\nlog_hostname = on\nlog_connections = on\nlog_line_prefix = '%t: pid %p: '\nload_balance_mode = on\nignore_leading_white_space = on\nwhite_function_list = ''\nblack_function_list = 'currval,lastval,nextval,setval'\nblack_query_pattern_list = ''\ndatabase_redirect_preference_list = ''\napp_name_redirect_preference_list = ''\nallow_sql_comments = off\ndisable_load_balance_on_write = 'transaction'\nstatement_level_load_balance = on\nconnect_timeout = 10000\nsr_check_period = 0\nsr_check_user = 'postgres'\ndelay_threshold = 0\nlog_standby_delay = 'none'\nssl = on\nssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL'\nssl_prefer_server_ciphers = off\nssl_ecdh_curve = 'prime256v1'\nssl_dh_params_file = ''\nrelcache_expire = 0\nrelcache_size = 256\ncheck_temp_table = catalog\ncheck_unlogged_table = on\nenable_shared_relcache = on\nrelcache_query_target = master\n",
            "custompcp": "none",
            "customsslcacert": "none",
            "customsslcert": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
            "customsslkey": "none",
            "fepclustername": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "limits": {
              "cpu": "400m",
              "memory": "512Mi"
            },
            "requests": {
              "cpu": "200m",
              "memory": "256Mi"
            },
            "serviceport": 9999,
            "statusport": 9898
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPRestore",
          "metadata": {
            "name": "new-fep-restore"
          },
          "spec": {
            "fromFEPcluster": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "mcSpec": {
              "limits": {
                "cpu": "200m",
                "memory": "300Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "200Mi"
              }
            },
            "restoretype": "latest",
            "sysExtraLogging": false,
            "toFEPcluster": "new-fep-2"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v2",
          "kind": "FEPCluster",
          "metadata": {
            "name": "new-fep"
          },
          "spec": {
            "fep": {
              "customAnnotations": {
                "allDeployments": {}
              },
              "forceSsl": true,
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "instances": 1,
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "podAntiAffinity": false,
              "podDisruptionBudget": false,
              "servicePort": 27500,
              "syncMode": "off",
              "sysExtraLogging": false
            },
            "fepChildCrVal": {
              "backup": {
                "image": {
                  "pullPolicy": "IfNotPresent"
                },
                "mcSpec": {
                  "limits": {
                    "cpu": 0.2,
                    "memory": "300Mi"
                  },
                  "requests": {
                    "cpu": 0.1,
                    "memory": "200Mi"
                  }
                },
                "pgbackrestParams": "# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\n[global]\nrepo1-retention-full=7\nrepo1-retention-full-type=time\nlog-path=/database/log/backup\n",
                "postScript": " ",
                "preScript": " ",
                "schedule": {
                  "num": 2
                },
                "schedule1": {
                  "schedule": "15 0 * * 0",
                  "type": "full"
                },
                "schedule2": {
                  "schedule": "15 0 * * 1-6",
                  "type": "incr"
                },
                "schedule3": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule4": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule5": {
                  "schedule": " ",
                  "type": " "
                }
              },
              "customPgAudit": "# define pg audit custom params here to override defaults.\n# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\n[output]\nlog_truncate_on_rotation = on\nlog_filename = 'pgaudit-%a.log'\nlog_rotation_age = 1d\nlog_rotation_size = 0\n[rule]\n",
              "customPgHba": "# define pg_hba custom rules here to be merged with default rules.\n# TYPE     DATABASE        USER        ADDRESS        METHOD\n",
              "customPgParams": "# define custom postgresql.conf parameters below to override defaults.\n# Current values are as per default FEP deployment\nshared_preload_libraries='pgx_datamasking,pg_prewarm,pg_stat_statements'\nsession_preload_libraries='pg_prewarm'\nmax_prepared_transactions = 100\nmax_worker_processes = 20\nmax_connections = 100\nwork_mem = 1MB\nmaintenance_work_mem = 12MB\nshared_buffers = 128MB\neffective_cache_size = 384MB\ncheckpoint_completion_target = 0.8\n\n# tcp parameters\ntcp_keepalives_idle = 30\ntcp_keepalives_interval = 10\ntcp_keepalives_count = 3\n\n# logging parameters in default fep installation\n# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\nlog_directory = '/database/log'\nlog_filename = 'logfile-%a.log'\nlog_file_mode = 0600\nlog_truncate_on_rotation = on\nlog_rotation_age = 1d\nlog_rotation_size = 0\nlog_checkpoints = on\nlog_line_prefix = '%e %t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h'\nlog_lock_waits = on\nlog_autovacuum_min_duration = 60s\nlogging_collector = on\npgaudit.config_file='/opt/app-root/src/pgaudit-cfg/pgaudit.conf'\nlog_replication_commands = on\nlog_min_messages = WARNING\nlog_destination = stderr\n\n# wal_archive parameters in default fep installation\narchive_mode = on\narchive_command = 'pgbackrest --stanza=backupstanza --config=/database/userdata/pgbackrest.conf archive-push %p'\nwal_level = replica\nmax_wal_senders = 12\nwal_keep_segments = 64\n",
              "storage": {
                "archivewalVol": {
                  "size": "1Gi"
                },
                "backupVol": {
                  "size": "2Gi"
                },
                "dataVol": {
                  "size": "2Gi"
                },
                "logVol": {
                  "size": "1Gi"
                },
                "tablespaceVol": {
                  "size": "512Mi"
                },
                "walVol": {
                  "size": "1200Mi"
                }
              },
              "sysUsers": {
                "pgAdminPassword": "admin-password",
                "pgdb": "mydb",
                "pgpassword": "mydbpassword",
                "pgreplpassword": "repluserpwd",
                "pgrepluser": "repluser",
                "pguser": "mydbuser",
                "tdepassphrase": "tde-passphrase"
              },
              "systemCertificates": {
                "cacrt": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
                "crt": "-----BEGIN CERTIFICATE-----\nMIIDUTCCAjmgAwIBAgIRAMocW3qMoHrD6qRvMPppMkMwDQYJKoZIhvcNAQELBQAw\nNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9yIEt1\nYmVybmV0ZXMwHhcNMjEwMjA2MDQzMjM2WhcNMjYwMjA1MDQzMjM2WjA/MRAwDgYD\nVQQKEwdGdWppdHN1MSswKQYDVQQDEyJGVUpJVFNVIEVudGVycHJpc2UgUG9zdGdy\nZXMgU2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4AI33yvH\nZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I2e4SceTKi6O3C/I1XuvWlpng\n5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4ANB5JWWqDOjrRT3o7nRPGXfila\nbP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYpmjdbfxabTz07ig0+6/cwKoRR\nxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTFYvmAH7gcdssSFBt8NPlUATHE\nsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6Wdgmu5H2pDml8CDNLDv98Aj7i\n+I5SRKKcVPlnuQIDAQABo1AwTjAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUH\nAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBQcwrrUO0u+FhIUuVdrDRCQRsi6\nZjANBgkqhkiG9w0BAQsFAAOCAQEAm5dxBoI9pScOCvRAchg4CprdRDSJb9K6yB3O\nnCAxnM47iHeXnY3WlnI388kHu8DU7O4ba1tJbGs3KY9KzioPk43pU12jWkO1onoF\n+mTDjx/Ef1cYWA9r5q/LtgTa6Q2sxV4O2x67QW82aAnaxO34dV5zWCPIvAoovZBV\nHRT+BgCg3r2vD1RGKK2nl1aYJtWhO1SZubam+VttdZ/vbM9oOJctxmImsEtBXjkY\nKteePdQtLL5o03JhyXWyRshCq+HMmKf2KgyY8gvydGcP4eLQdBWcW40LcnVq6UjT\n0kJycJEKngMVademq1ZWHGaiYB7hyT6GhgIcHUJ2cKrPgbEh1Q==\n-----END CERTIFICATE-----",
                "key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEA4AI33yvHZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I\n2e4SceTKi6O3C/I1XuvWlpng5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4AN\nB5JWWqDOjrRT3o7nRPGXfilabP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYp\nmjdbfxabTz07ig0+6/cwKoRRxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTF\nYvmAH7gcdssSFBt8NPlUATHEsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6W\ndgmu5H2pDml8CDNLDv98Aj7i+I5SRKKcVPlnuQIDAQABAoIBAFPQYKlOzw/+BA0b\nyMIUpdctIMb/54CR/xR0mVw1DbSjigNVPjHUQvB8Y1B2FAITQObgJO06bAv0QdWN\nRb0/v/yYiNJDFjaLjaIAHlO/2+oWrXbFaZqgpVDJhB+e1xaZr2x7XGxm+p925k30\nl6pvIRY+I8JRKvZiV1VZHwL/R3JOtPr++xMZtLVjVOI+f+ySqJ+TZHuAjm49EKxj\ncEmmJ28b7QcziXsvKy00f+zbqLIBKXQdZAFU5eEr1BsDRXdRW+Kf0XIvftuy4BJZ\nvoKT+VGhEvF/qysswL4+6IAO6tpuYnnM0Y2d3sOGoWPkTcQK0MekYKzL/WmtCjNs\n9hodJtECgYEA5EWyhEOf4uOKe5TDp697UCUvXLoOR58FDe/S8XNvScn29jjOkqIg\nOMoqo9xAkJTNTzqn5UUdt1x/pgM2NxlPLFijrc0zQlX3SoOO2ryDd9WNi7YKtN16\nKJqa536WeZu2OEbuAZ+S3GALVy1RPeTNPnUOmKnF06DjDUGzLNCZy10CgYEA+zfw\n952DWuz1U0Z4wvAEqqcgUKXPKrkTXV/iUnjkDkrLYVr0ZofDNTXrdHl+UedFmaOC\ncieZn6DNhcdz5tKtyysGMH3g/qs9PfoGUngvcXsy0Egk04l3x1jc8TTCLqXZXYaQ\nHMsx51n+R58oncPtzYSUOr9qQ6PbC2CstTbFJA0CgYEAjGEsUliAB/jknfEzjXjG\nPdhQUxb8VyE864Az2lah9t/kJzFyIAziAeqZ5GE7t247AGFTBRTHHI8e1Qoemi3P\nWbc9GVIbFs1lIYbcIDpUIyrKPEP8O5QEXtoNLxXTFgAjRGKiVY87spjCAJ+W2ZhO\ne/1it5GYXfgQCYQA2yuBmOUCgYANRkR2YR1axaCk+NlSu6oTdmdPu6M5x7PNQE7O\nOtMaKjua9lppvIzFGAdMDUtueoEEAE7ZR1xnwfB6PDLUpJdIYAqgr1YfPt8qkjaZ\nTv56yZ7CwL0pbF8m6nwqRrZoDp1wwraEvvvxFKFKGY/k3kCHlpTakdjEoDjn3gDi\nRnWeVQKBgCEneMSzucei5LRppRtRaJw/Btll8qlPMlX3W7dxQ3cLwpmLOn0m51Fp\nPIZ44zYK8R6fu4+/sSrlfaIg86Ugeufp6YNxyNROKxUGza5vDIu5OftwWtBeg+UK\nZ8lLWNdX6pp7WMujmF3H1DrkBbauYMUKZ4UxUYtelgHERMePIxwb\n-----END RSA PRIVATE KEY-----"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/fujitsu-postgres/fujitsu-enterprise-postgres-bundle@sha256:91941da8413d19d32da62cd48230e0d754b4b2c88916502502a18e3f57f3513e",
      "bundle_path_digest": "sha256:91941da8413d19d32da62cd48230e0d754b4b2c88916502502a18e3f57f3513e",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-22T12:46:43.914000+00:00",
      "csv_description": "FUJITSU Enterprise Postgres 12 delivers an enterprise-grade PostgreSQL on OpenShift Container Platform.\n\nThis solution provides the flexibility of a hybrid cloud solution while delivering an enhanced distribution\nof PostgreSQL to support enterprise-level workloads and provide improved deployment and management,\navailability, performance, data governance and security.\n\nAvailable as a multi-architecture container built for both amd64 and s390x.\n\nThe download and Use of the Product is strictly subject to the terms of the End User License Agreement with Fujitsu Limited found at\nhttps://www.fast.fujitsu.com/fujitsu-enterprise-postgres-license-agreements\nWhere the Product that has been embedded as a whole or part into a third party program, only Authorised Customers may download and use the Product.\n",
      "csv_display_name": "FUJITSU Enterprise Postgres 12 Operator",
      "csv_metadata_description": "OpenShift Operator for Fujitsu Enterprise Postgres 12",
      "csv_name": "fep-ansible-operator.v2.2.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:36:39.859000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "fep-ansible-operator",
      "provided_apis": [
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPAction",
          "plural": "fepactions",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPBackup",
          "plural": "fepbackups",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCluster",
          "plural": "fepclusters",
          "version": "v2"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPConfig",
          "plural": "fepconfigs",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPRestore",
          "plural": "feprestores",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPVolume",
          "plural": "fepvolumes",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCert",
          "plural": "fepcerts",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2Cert",
          "plural": "feppgpool2certs",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2",
          "plural": "feppgpool2s",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPUser",
          "plural": "fepusers",
          "version": "v1"
        }
      ],
      "provider": "Fujitsu",
      "related_images": [
        {
          "digest": "sha256:d45351ec6a24824b3ad0496a5ac8a29cae5597328868dd7b512966912fae5c65",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-server@sha256:d45351ec6a24824b3ad0496a5ac8a29cae5597328868dd7b512966912fae5c65",
          "name": "fujitsu-enterprise-postgres-12-server"
        },
        {
          "digest": "sha256:5bbf966bff0bb9de30a925cd47d5d76f31b3c0574e0b2da7cd0af6a1d78f4671",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-backup@sha256:5bbf966bff0bb9de30a925cd47d5d76f31b3c0574e0b2da7cd0af6a1d78f4671",
          "name": "fujitsu-enterprise-postgres-12-backup"
        },
        {
          "digest": "sha256:f2cc807f750a21062e21385f6c1f08d3d53519442b1eac4aca5b921b30a19844",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-restore@sha256:f2cc807f750a21062e21385f6c1f08d3d53519442b1eac4aca5b921b30a19844",
          "name": "fujitsu-enterprise-postgres-12-restore"
        },
        {
          "digest": "sha256:1dc445fb556d6ced1e669d02ba92f7bc82d7746f6f04c4635f7488c82f5fb029",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-pgpool2@sha256:1dc445fb556d6ced1e669d02ba92f7bc82d7746f6f04c4635f7488c82f5fb029",
          "name": "fujitsu-enterprise-postgres-12-pgpool2"
        },
        {
          "digest": "sha256:85a18f7dcf79d88272ae9abc9d9184ceaade361d3583a339b419ae33a9218465",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-operator@sha256:85a18f7dcf79d88272ae9abc9d9184ceaade361d3583a339b419ae33a9218465",
          "name": "fujitsu-enterprise-postgres-12-operator"
        },
        {
          "digest": "sha256:85a18f7dcf79d88272ae9abc9d9184ceaade361d3583a339b419ae33a9218465",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-operator@sha256:85a18f7dcf79d88272ae9abc9d9184ceaade361d3583a339b419ae33a9218465",
          "name": "fujitsu-enterprise-postgres-12-operator-85a18f7dcf79d88272ae9abc9d9184ceaade361d3583a339b419ae33a9218465-annotation"
        },
        {
          "digest": "sha256:85a18f7dcf79d88272ae9abc9d9184ceaade361d3583a339b419ae33a9218465",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-operator@sha256:85a18f7dcf79d88272ae9abc9d9184ceaade361d3583a339b419ae33a9218465",
          "name": "fep-ansible-operator"
        },
        {
          "digest": "sha256:d45351ec6a24824b3ad0496a5ac8a29cae5597328868dd7b512966912fae5c65",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-server@sha256:d45351ec6a24824b3ad0496a5ac8a29cae5597328868dd7b512966912fae5c65",
          "name": "fep"
        },
        {
          "digest": "sha256:5bbf966bff0bb9de30a925cd47d5d76f31b3c0574e0b2da7cd0af6a1d78f4671",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-backup@sha256:5bbf966bff0bb9de30a925cd47d5d76f31b3c0574e0b2da7cd0af6a1d78f4671",
          "name": "backup"
        },
        {
          "digest": "sha256:f2cc807f750a21062e21385f6c1f08d3d53519442b1eac4aca5b921b30a19844",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-restore@sha256:f2cc807f750a21062e21385f6c1f08d3d53519442b1eac4aca5b921b30a19844",
          "name": "restore"
        },
        {
          "digest": "sha256:1dc445fb556d6ced1e669d02ba92f7bc82d7746f6f04c4635f7488c82f5fb029",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-pgpool2@sha256:1dc445fb556d6ced1e669d02ba92f7bc82d7746f6f04c4635f7488c82f5fb029",
          "name": "pgpool2"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2.2.3",
      "version_original": "2.2.3"
    },
    {
      "_id": "619c1a77172f7877a2a8fcfb",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {},
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "use_ocp_driver_toolkit": true,
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {}
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:6383973010999a769a803ca4042a0c316b7206ae335deb618760315e11d8ef9a",
      "bundle_path_digest": "sha256:6383973010999a769a803ca4042a0c316b7206ae335deb618760315e11d8ef9a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-11-22T22:32:23.517000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/kubernetes/openshift-on-gpu-install-guide/index.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.9.0-beta",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T12:57:20.332000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:4ff2b77282f9e3409704fd523a89e6e7b839837558a33ed1b8272b700675c461",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:4ff2b77282f9e3409704fd523a89e6e7b839837558a33ed1b8272b700675c461",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:5f0d3af074c92dfe0ce36899a1545bb5a408f2ad59878d43045e9ca302b82a41",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:5f0d3af074c92dfe0ce36899a1545bb5a408f2ad59878d43045e9ca302b82a41",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:f4c4de8d66b2fef8cebaee6fec2fb2d15d01e835de2654df6dfd4a0ce0baec6b",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:f4c4de8d66b2fef8cebaee6fec2fb2d15d01e835de2654df6dfd4a0ce0baec6b",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:5f826e306d093332a86afa7d1e96218b5bdda8d33067931cff7914f6bb2994ee",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:5f826e306d093332a86afa7d1e96218b5bdda8d33067931cff7914f6bb2994ee",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:35c8231e28e572b148699d52a5f5c9745556fd32ab4160da68d0fc84234c1309",
          "image": "nvcr.io/nvidia/driver@sha256:35c8231e28e572b148699d52a5f5c9745556fd32ab4160da68d0fc84234c1309",
          "name": "driver-image"
        },
        {
          "digest": "sha256:69171f906efe4bbabe31688343e59feea08a7e0ef8b0d9efb466abfa153aec16",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:69171f906efe4bbabe31688343e59feea08a7e0ef8b0d9efb466abfa153aec16",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:d718dda2f9c9f0a465240772ed1ca6db44789d37255172e00637a092bdd1ba31",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:d718dda2f9c9f0a465240772ed1ca6db44789d37255172e00637a092bdd1ba31",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:e137c897256501537e0986963889a91ec90cac029b5263fc4b229b278f5b1a02",
          "image": "nvcr.io/nvidia/cuda@sha256:e137c897256501537e0986963889a91ec90cac029b5263fc4b229b278f5b1a02",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:7e06acfd3fd83cd563d5f4e1be98832ea40fd464199c1c8a4485dc421c6bae71",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:7e06acfd3fd83cd563d5f4e1be98832ea40fd464199c1c8a4485dc421c6bae71",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:54233ebccbc3d2b388b237031907d58c3719d0e6f3ecb874349c91e8145225d2",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:54233ebccbc3d2b388b237031907d58c3719d0e6f3ecb874349c91e8145225d2",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:4ff2b77282f9e3409704fd523a89e6e7b839837558a33ed1b8272b700675c461",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:4ff2b77282f9e3409704fd523a89e6e7b839837558a33ed1b8272b700675c461",
          "name": "gpu-operator-4ff2b77282f9e3409704fd523a89e6e7b839837558a33ed1b8272b700675c461-annotation"
        },
        {
          "digest": "sha256:4ff2b77282f9e3409704fd523a89e6e7b839837558a33ed1b8272b700675c461",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:4ff2b77282f9e3409704fd523a89e6e7b839837558a33ed1b8272b700675c461",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.9.0-beta",
      "version_original": "1.9.0-beta"
    },
    {
      "_id": "619c30812617fe8f092a7bd0",
      "alm_examples": [
        {
          "api_version": "astra.netapp.io/v1",
          "kind": "AstraControlCenter",
          "metadata": {
            "name": "astra"
          },
          "spec": {
            "accountName": "Example",
            "additionalValues": {},
            "astraAddress": "astra.example.com",
            "astraResourcesScaler": "Default",
            "astraVersion": "ASTRA_VERSION",
            "autoSupport": {
              "enrolled": true,
              "url": "https://stagesupport.netapp.com/asupprod/post/1.0/postAsup"
            },
            "crds": {
              "externalCertManager": false,
              "externalTraefik": false
            },
            "email": "admin@example.com",
            "firstName": "SRE",
            "imageRegistry": {
              "name": "example.registry/astra",
              "secret": "astra-registry-cred"
            },
            "lastName": "Admin",
            "storageClass": "ontap-gold",
            "volumeReclaimPolicy": "Retain"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/5e8d03cfac3db90370900b83/acc-operator-bundle@sha256:6b99d92f9d8de5380196a1b65ad12e8ea08adf9dfd8acc04158cc219d0100858",
      "bundle_path_digest": "sha256:6b99d92f9d8de5380196a1b65ad12e8ea08adf9dfd8acc04158cc219d0100858",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-23T00:06:25.393000+00:00",
      "csv_description": "Install, configure and monitor Astra Control Center",
      "csv_display_name": "netapp-acc-operator",
      "csv_metadata_description": "",
      "csv_name": "acc-operator.v21.10.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:07:52.891000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "acc-operator",
      "provided_apis": [
        {
          "group": "astra.netapp.io",
          "kind": "AstraControlCenter",
          "plural": "astracontrolcenters",
          "version": "v1"
        }
      ],
      "provider": "NetApp",
      "related_images": [
        {
          "digest": "sha256:a5c16c64229aac3564c66816c123e81a849ff93b8a443cd6ff14bd8d63c06644",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:a5c16c64229aac3564c66816c123e81a849ff93b8a443cd6ff14bd8d63c06644",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:33d1dd15d0fcd40acbecadf824a99c611efce876ba73c5df9b9a8a2defc95214",
          "image": "registry.connect.redhat.com/netapp/acc-operator@sha256:33d1dd15d0fcd40acbecadf824a99c611efce876ba73c5df9b9a8a2defc95214",
          "name": "acc-operator"
        },
        {
          "digest": "sha256:a5c16c64229aac3564c66816c123e81a849ff93b8a443cd6ff14bd8d63c06644",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:a5c16c64229aac3564c66816c123e81a849ff93b8a443cd6ff14bd8d63c06644",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:33d1dd15d0fcd40acbecadf824a99c611efce876ba73c5df9b9a8a2defc95214",
          "image": "registry.connect.redhat.com/netapp/acc-operator@sha256:33d1dd15d0fcd40acbecadf824a99c611efce876ba73c5df9b9a8a2defc95214",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "21.10.7",
      "version_original": "21.10.7"
    },
    {
      "_id": "619c5a0cb4dcabca7fe35a50",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:45853a8612cc9da123094499ac975eb2bc943346a0092fe9d892c5942170e77f",
      "bundle_path_digest": "sha256:45853a8612cc9da123094499ac975eb2bc943346a0092fe9d892c5942170e77f",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-23T03:03:40.066000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.6.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:06:15.818000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "name": "openstorage-operator-5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47-annotation"
        },
        {
          "digest": "sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.6.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.6.1",
      "version_original": "1.6.1"
    },
    {
      "_id": "619c5a0db4dcabca7fe35a51",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:45853a8612cc9da123094499ac975eb2bc943346a0092fe9d892c5942170e77f",
      "bundle_path_digest": "sha256:45853a8612cc9da123094499ac975eb2bc943346a0092fe9d892c5942170e77f",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-23T03:03:41.248000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.6.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:06:21.964000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "name": "openstorage-operator-5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47-annotation"
        },
        {
          "digest": "sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.6.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.6.1",
      "version_original": "1.6.1"
    },
    {
      "_id": "619c618ab4dcabca7fe35a53",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:45853a8612cc9da123094499ac975eb2bc943346a0092fe9d892c5942170e77f",
      "bundle_path_digest": "sha256:45853a8612cc9da123094499ac975eb2bc943346a0092fe9d892c5942170e77f",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-23T03:35:38.139000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.6.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:59:27.073000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "name": "openstorage-operator-5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47-annotation"
        },
        {
          "digest": "sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.6.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.6.1",
      "version_original": "1.6.1"
    },
    {
      "_id": "619c63f72617fe8f092a7bda",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:45853a8612cc9da123094499ac975eb2bc943346a0092fe9d892c5942170e77f",
      "bundle_path_digest": "sha256:45853a8612cc9da123094499ac975eb2bc943346a0092fe9d892c5942170e77f",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-23T03:45:59.365000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.6.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:13:29.140000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "name": "openstorage-operator-5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47-annotation"
        },
        {
          "digest": "sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.6.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.6.1",
      "version_original": "1.6.1"
    },
    {
      "_id": "619d4bdb172f7877a2a90118",
      "alm_examples": [
        {
          "api_version": "platform.confluent.io/v1beta1",
          "kind": "Zookeeper",
          "metadata": {
            "name": "zookeeper"
          },
          "spec": {
            "dataVolumeCapacity": "10Gi",
            "image": {
              "application": "confluentinc/cp-zookeeper@sha256:5598d44649da42ab5ff926830ecd502303e1ba992fcedb65e03fab0ec2bfe976",
              "init": "confluentinc/confluent-init-container@sha256:9b6fe94b5fc81d75e511216df948dc937479aebc9716ca89caeb84b21d90e868"
            },
            "logVolumeCapacity": "10Gi",
            "replicas": 3
          }
        },
        {
          "api_version": "platform.confluent.io/v1beta1",
          "kind": "Kafka",
          "metadata": {
            "name": "kafka"
          },
          "spec": {
            "dataVolumeCapacity": "10Gi",
            "image": {
              "application": "confluentinc/cp-server@sha256:f6a3b7c8ee7c5c6a0247f333b8f697dd41ea3ce57bf3eb548c5c465499e2d350",
              "init": "confluentinc/confluent-init-container@sha256:9b6fe94b5fc81d75e511216df948dc937479aebc9716ca89caeb84b21d90e868"
            },
            "metricReporter": {
              "enabled": true
            },
            "replicas": 3
          }
        },
        {
          "api_version": "platform.confluent.io/v1beta1",
          "kind": "Connect",
          "metadata": {
            "name": "connect"
          },
          "spec": {
            "dependencies": {
              "kafka": {
                "bootstrapEndpoint": "kafka:9071"
              }
            },
            "image": {
              "application": "confluentinc/cp-server-connect@sha256:cd881c60f54a023cc81c7d55381642a27b2b9e097d4f74e35c4e1a211dc070f7",
              "init": "confluentinc/confluent-init-container@sha256:9b6fe94b5fc81d75e511216df948dc937479aebc9716ca89caeb84b21d90e868"
            },
            "replicas": 1
          }
        },
        {
          "api_version": "platform.confluent.io/v1beta1",
          "kind": "KsqlDB",
          "metadata": {
            "name": "ksqldb"
          },
          "spec": {
            "dataVolumeCapacity": "10Gi",
            "image": {
              "application": "confluentinc/cp-ksqldb-server@sha256:a16d56dafca53fbe97250738eab78d1ea042f2ade8d5f3e956f9d22adbd073e3",
              "init": "confluentinc/confluent-init-container@sha256:9b6fe94b5fc81d75e511216df948dc937479aebc9716ca89caeb84b21d90e868"
            },
            "replicas": 1
          }
        },
        {
          "api_version": "platform.confluent.io/v1beta1",
          "kind": "ControlCenter",
          "metadata": {
            "name": "controlcenter"
          },
          "spec": {
            "dataVolumeCapacity": "10Gi",
            "dependencies": {
              "connect": [
                {
                  "name": "connect",
                  "url": "http://connect.confluent.svc.cluster.local:8083"
                }
              ],
              "ksqldb": [
                {
                  "name": "ksqldb",
                  "url": "http://ksqldb.confluent.svc.cluster.local:8088"
                }
              ],
              "schemaRegistry": {
                "url": "http://schemaregistry.confluent.svc.cluster.local:8081"
              }
            },
            "image": {
              "application": "confluentinc/cp-enterprise-control-center@sha256:cde28d4a4371163692a1afaf939932635c2cb9ae1de1a682b942e6eb20e6ddf9",
              "init": "confluentinc/confluent-init-container@sha256:9b6fe94b5fc81d75e511216df948dc937479aebc9716ca89caeb84b21d90e868"
            },
            "replicas": 1
          }
        },
        {
          "api_version": "platform.confluent.io/v1beta1",
          "kind": "SchemaRegistry",
          "metadata": {
            "name": "schemaregistry"
          },
          "spec": {
            "image": {
              "application": "confluentinc/cp-schema-registry@sha256:d0478567133996be2298d7b237e0cbcb937753db6d82836e5a8737550397b493",
              "init": "confluentinc/confluent-init-container@sha256:9b6fe94b5fc81d75e511216df948dc937479aebc9716ca89caeb84b21d90e868"
            },
            "replicas": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": [
          "Confluent Platform License"
        ]
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/confluentinc/confluent-for-kubernetes-v2@sha256:1681df7b3576e13a2ae51b9d218274038e22a70f02e9ee1940e48e121143bc0c",
      "bundle_path_digest": "sha256:1681df7b3576e13a2ae51b9d218274038e22a70f02e9ee1940e48e121143bc0c",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-23T20:15:23.440000+00:00",
      "csv_description": "Confluent for Kubernetes (CFK) is a cloud-native control plane for deploying and managing Confluent in your private cloud environment. It provides standard and simple interface to customize, deploy, and manage Confluent Platform through declarative API.\nConfluent for Kubernetes runs on Kubernetes, the runtime for private cloud architectures.",
      "csv_display_name": "Confluent for Kubernetes",
      "csv_metadata_description": "",
      "csv_name": "confluent-for-kubernetes.v2.0.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:01:37.984000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "confluent-for-kubernetes",
      "provided_apis": [],
      "provider": "Confluent, Inc.",
      "related_images": [
        {
          "digest": "sha256:2318b23a168686323c6362f31bc2a24f13507fcc715c8c84203c83ca6827c171",
          "image": "docker.io/confluentinc/confluent-operator@sha256:2318b23a168686323c6362f31bc2a24f13507fcc715c8c84203c83ca6827c171",
          "name": "confluent-operator"
        },
        {
          "digest": "sha256:9b6fe94b5fc81d75e511216df948dc937479aebc9716ca89caeb84b21d90e868",
          "image": "docker.io/confluentinc/confluent-init-container@sha256:9b6fe94b5fc81d75e511216df948dc937479aebc9716ca89caeb84b21d90e868",
          "name": "confluent-init-container"
        },
        {
          "digest": "sha256:5598d44649da42ab5ff926830ecd502303e1ba992fcedb65e03fab0ec2bfe976",
          "image": "docker.io/confluentinc/cp-zookeeper@sha256:5598d44649da42ab5ff926830ecd502303e1ba992fcedb65e03fab0ec2bfe976",
          "name": "cp-zookeeper"
        },
        {
          "digest": "sha256:f6a3b7c8ee7c5c6a0247f333b8f697dd41ea3ce57bf3eb548c5c465499e2d350",
          "image": "docker.io/confluentinc/cp-server@sha256:f6a3b7c8ee7c5c6a0247f333b8f697dd41ea3ce57bf3eb548c5c465499e2d350",
          "name": "cp-server"
        },
        {
          "digest": "sha256:a16d56dafca53fbe97250738eab78d1ea042f2ade8d5f3e956f9d22adbd073e3",
          "image": "docker.io/confluentinc/cp-ksqldb-server@sha256:a16d56dafca53fbe97250738eab78d1ea042f2ade8d5f3e956f9d22adbd073e3",
          "name": "cp-ksqldb-server"
        },
        {
          "digest": "sha256:d0478567133996be2298d7b237e0cbcb937753db6d82836e5a8737550397b493",
          "image": "docker.io/confluentinc/cp-schema-registry@sha256:d0478567133996be2298d7b237e0cbcb937753db6d82836e5a8737550397b493",
          "name": "cp-schema-registry"
        },
        {
          "digest": "sha256:cd881c60f54a023cc81c7d55381642a27b2b9e097d4f74e35c4e1a211dc070f7",
          "image": "docker.io/confluentinc/cp-server-connect@sha256:cd881c60f54a023cc81c7d55381642a27b2b9e097d4f74e35c4e1a211dc070f7",
          "name": "cp-server-connect"
        },
        {
          "digest": "sha256:cde28d4a4371163692a1afaf939932635c2cb9ae1de1a682b942e6eb20e6ddf9",
          "image": "docker.io/confluentinc/cp-enterprise-control-center@sha256:cde28d4a4371163692a1afaf939932635c2cb9ae1de1a682b942e6eb20e6ddf9",
          "name": "cp-enterprise-control-center"
        },
        {
          "digest": "sha256:2318b23a168686323c6362f31bc2a24f13507fcc715c8c84203c83ca6827c171",
          "image": "docker.io/confluentinc/confluent-operator@sha256:2318b23a168686323c6362f31bc2a24f13507fcc715c8c84203c83ca6827c171",
          "name": "confluent-operator-2318b23a168686323c6362f31bc2a24f13507fcc715c8c84203c83ca6827c171-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2.0.3",
      "version_original": "2.0.3"
    },
    {
      "_id": "619f9595b4dcabca7fe35d36",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:c0c7095bcb36e93a4c074e5c97d652db5f0133022fd2ab6838a092e8959f2041",
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:060d7d6827b34949cc0fc58a50f72a5dccf00a4cc594406bdf5982f41dfe6118",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              }
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:bd5db9f3403eee933627d3a1ef0c534cac8c7b53eda247589d546c1f6cfed71b",
      "bundle_path_digest": "sha256:bd5db9f3403eee933627d3a1ef0c534cac8c7b53eda247589d546c1f6cfed71b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-11-25T13:54:29.519000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.1 of the NeuVector Certified Operator deploys version 4.3.2-s1 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:36:57.840000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": "NeuVector",
      "related_images": [
        {
          "digest": "sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "name": "neuvector-operator-487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1-annotation"
        },
        {
          "digest": "sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:afa454d7a22de6161e6ff6b6f859ce15fa0bfc4e9d4e5e191b61125dfc5cad6b",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:afa454d7a22de6161e6ff6b6f859ce15fa0bfc4e9d4e5e191b61125dfc5cad6b",
          "name": "controller"
        },
        {
          "digest": "sha256:f9543cdf9bb338161a3f84a81381f26cbf724a23f6363583417c9da682e91cf8",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:f9543cdf9bb338161a3f84a81381f26cbf724a23f6363583417c9da682e91cf8",
          "name": "enforcer"
        },
        {
          "digest": "sha256:085bd24dadcd9d023c6600227ca088ed8d03ab83a70b62401477d10272450952",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:085bd24dadcd9d023c6600227ca088ed8d03ab83a70b62401477d10272450952",
          "name": "manager"
        },
        {
          "digest": "sha256:c0c7095bcb36e93a4c074e5c97d652db5f0133022fd2ab6838a092e8959f2041",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:c0c7095bcb36e93a4c074e5c97d652db5f0133022fd2ab6838a092e8959f2041",
          "name": "scanner"
        },
        {
          "digest": "sha256:060d7d6827b34949cc0fc58a50f72a5dccf00a4cc594406bdf5982f41dfe6118",
          "image": "registry.access.redhat.com/ubi8@sha256:060d7d6827b34949cc0fc58a50f72a5dccf00a4cc594406bdf5982f41dfe6118",
          "name": "updater"
        },
        {
          "digest": "sha256:c0c7095bcb36e93a4c074e5c97d652db5f0133022fd2ab6838a092e8959f2041",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:c0c7095bcb36e93a4c074e5c97d652db5f0133022fd2ab6838a092e8959f2041",
          "name": "scanner-c0c7095bcb36e93a4c074e5c97d652db5f0133022fd2ab6838a092e8959f2041-annotation"
        },
        {
          "digest": "sha256:060d7d6827b34949cc0fc58a50f72a5dccf00a4cc594406bdf5982f41dfe6118",
          "image": "registry.access.redhat.com/ubi8@sha256:060d7d6827b34949cc0fc58a50f72a5dccf00a4cc594406bdf5982f41dfe6118",
          "name": "ubi8-060d7d6827b34949cc0fc58a50f72a5dccf00a4cc594406bdf5982f41dfe6118-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.3.1",
      "version_original": "1.3.1"
    },
    {
      "_id": "619f95e514180ede86fe7a44",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {},
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "use_ocp_driver_toolkit": true,
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {}
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:6383973010999a769a803ca4042a0c316b7206ae335deb618760315e11d8ef9a",
      "bundle_path_digest": "sha256:6383973010999a769a803ca4042a0c316b7206ae335deb618760315e11d8ef9a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-11-25T13:55:49.178000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/kubernetes/openshift-on-gpu-install-guide/index.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.9.0-beta",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:01:21.825000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:4ff2b77282f9e3409704fd523a89e6e7b839837558a33ed1b8272b700675c461",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:4ff2b77282f9e3409704fd523a89e6e7b839837558a33ed1b8272b700675c461",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:5f0d3af074c92dfe0ce36899a1545bb5a408f2ad59878d43045e9ca302b82a41",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:5f0d3af074c92dfe0ce36899a1545bb5a408f2ad59878d43045e9ca302b82a41",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:f4c4de8d66b2fef8cebaee6fec2fb2d15d01e835de2654df6dfd4a0ce0baec6b",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:f4c4de8d66b2fef8cebaee6fec2fb2d15d01e835de2654df6dfd4a0ce0baec6b",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:5f826e306d093332a86afa7d1e96218b5bdda8d33067931cff7914f6bb2994ee",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:5f826e306d093332a86afa7d1e96218b5bdda8d33067931cff7914f6bb2994ee",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:35c8231e28e572b148699d52a5f5c9745556fd32ab4160da68d0fc84234c1309",
          "image": "nvcr.io/nvidia/driver@sha256:35c8231e28e572b148699d52a5f5c9745556fd32ab4160da68d0fc84234c1309",
          "name": "driver-image"
        },
        {
          "digest": "sha256:69171f906efe4bbabe31688343e59feea08a7e0ef8b0d9efb466abfa153aec16",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:69171f906efe4bbabe31688343e59feea08a7e0ef8b0d9efb466abfa153aec16",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:d718dda2f9c9f0a465240772ed1ca6db44789d37255172e00637a092bdd1ba31",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:d718dda2f9c9f0a465240772ed1ca6db44789d37255172e00637a092bdd1ba31",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:e137c897256501537e0986963889a91ec90cac029b5263fc4b229b278f5b1a02",
          "image": "nvcr.io/nvidia/cuda@sha256:e137c897256501537e0986963889a91ec90cac029b5263fc4b229b278f5b1a02",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:7e06acfd3fd83cd563d5f4e1be98832ea40fd464199c1c8a4485dc421c6bae71",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:7e06acfd3fd83cd563d5f4e1be98832ea40fd464199c1c8a4485dc421c6bae71",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:54233ebccbc3d2b388b237031907d58c3719d0e6f3ecb874349c91e8145225d2",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:54233ebccbc3d2b388b237031907d58c3719d0e6f3ecb874349c91e8145225d2",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:4ff2b77282f9e3409704fd523a89e6e7b839837558a33ed1b8272b700675c461",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:4ff2b77282f9e3409704fd523a89e6e7b839837558a33ed1b8272b700675c461",
          "name": "gpu-operator-4ff2b77282f9e3409704fd523a89e6e7b839837558a33ed1b8272b700675c461-annotation"
        },
        {
          "digest": "sha256:4ff2b77282f9e3409704fd523a89e6e7b839837558a33ed1b8272b700675c461",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:4ff2b77282f9e3409704fd523a89e6e7b839837558a33ed1b8272b700675c461",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.9.0-beta",
      "version_original": "1.9.0-beta"
    },
    {
      "_id": "619f96142617fe8f092a7fca",
      "alm_examples": [
        {
          "api_version": "operator.cert-manager.io/v1alpha1",
          "kind": "CertManager",
          "metadata": {
            "name": "cert-manager",
            "namespace": "cert-manager"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jetstack/cert-manager-operator-bundle@sha256:7bff5bc7c3ec122f641f5b73adb1274ac0a5e0e5642270f74e91346e42c1c76c",
      "bundle_path_digest": "sha256:7bff5bc7c3ec122f641f5b73adb1274ac0a5e0e5642270f74e91346e42c1c76c",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-25T13:56:36.696000+00:00",
      "csv_description": "x509 certificate management for Kubernetes",
      "csv_display_name": "cert-manager",
      "csv_metadata_description": "x509 certificate management for Kubernetes",
      "csv_name": "cert-manager-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:36:27.456000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cert-manager-operator",
      "provided_apis": [
        {
          "group": "operator.cert-manager.io",
          "kind": "CertManager",
          "plural": "certmanagers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Jetstack",
      "related_images": [
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-controller:v1.1.0-ubi",
          "name": "cert-manager-controller"
        },
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-acmesolver:v1.1.0-ubi",
          "name": "cert-manager-acmesolver"
        },
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-cainjector:v1.1.0-ubi",
          "name": "cert-manager-cainjector"
        },
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-webhook:v1.1.0-ubi",
          "name": "cert-manager-webhook"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "619f962e14180ede86fe7a48",
      "alm_examples": [
        {
          "api_version": "sources.triggermesh.com/v1alpha1",
          "kind": "AwsEventSources",
          "metadata": {
            "name": "awseventsources"
          },
          "spec": {
            "adapters": {
              "awscodecommit": {
                "image": "registry.connect.redhat.com/triggermesh/awscodecommitsource@sha256:c362c12e56918c8d16ac86f4ff9f3637dcdbc5639e756b4e597a02f7115f70e9"
              },
              "awscognitoidentity": {
                "image": "registry.connect.redhat.com/triggermesh/awscognitoidentitysource@sha256:7b66b99c2b2297310155a11c23920b0705fc8fd9a558b14e80fb3c9862fc0b4f"
              },
              "awscognitouserpool": {
                "image": "registry.connect.redhat.com/triggermesh/awscognitouserpoolsource@sha256:867f8305d1bef84e5605a14f8482dc7f337ab68368c0334eab286aecf3f2ac09"
              },
              "awsdynamodb": {
                "image": "registry.connect.redhat.com/triggermesh/awsdynamodbsource@sha256:cc43ceb4ce08470b5d45e57a5fd0351c3e738416d53ac175f76c5b6a38996286"
              },
              "awskinesis": {
                "image": "registry.connect.redhat.com/triggermesh/awskinesissource@sha256:cc86c4d99a7e5c558274220a7c704f9f9615e165742e7d0e5a01d4843670cb97"
              },
              "awssns": {
                "image": "registry.connect.redhat.com/triggermesh/awssnssource@sha256:4c110671dff51b6939b38632cf1db68ae0779fc1f869c144ac141ab1ecf8ab85"
              },
              "awssqs": {
                "image": "registry.connect.redhat.com/triggermesh/awssqssource@sha256:3ec5e2aee183b8e9c53e6781c60a5679cd7034b982bcb02e81106d4e8faaea5d"
              }
            },
            "affinity": {},
            "fullnameOverride": "",
            "image": {
              "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-controller@sha256:d0f77ef39f1845da9aaf6998652a190ee096cf2bbe4ce02e0250a8c2cc89ef3e",
              "pullPolicy": "IfNotPresent"
            },
            "imagePullSecrets": [],
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "rbac": {
              "create": true
            },
            "resources": {
              "requests": {
                "cpu": "20m",
                "memory": "20Mi"
              }
            },
            "securityContext": {},
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator-bundle@sha256:76d525c7a995ea48ba06e9f1aa332603869aff8be72f2446b53bad92753fcff4",
      "bundle_path_digest": "sha256:76d525c7a995ea48ba06e9f1aa332603869aff8be72f2446b53bad92753fcff4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-11-25T13:57:02.566000+00:00",
      "csv_description": "The TriggerMesh AWS Sources operator provides a collection of API's that enables to consume events that happen in your AWS services and send them to containers, microservices and functions running in your cluster.\n\n## Prerequisites\n\nThe TriggerMesh AWS Sources operator depends on the Knative API's provided by the Red Hat OpenShift Serverless operator. For more information, see the documentation on [Installing OpenShift Serverless](https://access.redhat.com/documentation/en-us/openshift_container_platform/4.3/html/serverless_applications/installing-openshift-serverless-1).\n\n## Supported Event Sources\n\n- **AWS CodeCommit event source**: Consume messages from a AWS CodeCommit repository and send them as CloudEvents to an arbitrary event sink.\n- **AWS Cognito Identity event source**: Consume messages from a AWS Cognito identity pool and send them as CloudEvents to an arbitrary event sink.\n- **AWS Cognito UserPool event source**: Consume messages from a AWS Cognito identity pool and send them as CloudEvents to an arbitrary event sink.\n- **AWS DynamoDB event source**: Consume messages from a AWS DynamoDB stream and send them as CloudEvents to an arbitrary event sink.\n- **AWS Kinesis event source**: Consume messages from a AWS Kinesis data stream and send them as CloudEvents to an arbitrary event sink.\n- **AWS SNS event source**: Subscribes to messages from a AWS SNS topic and send them as CloudEvents to an arbitrary event sink.\n- **AWS SQS event source**: Consume messages from a AWS SQS queue and sends them as CloudEvents to an arbitrary event sink.\n\n## Installation\n\nSee the documentation on [Installing TriggerMesh AWS Sources](https://github.com/triggermesh/aws-sources-operator/blob/master/README.md)\n\n## Getting Started\n\nSee the documentation on [Getting Started](https://github.com/triggermesh/aws-event-sources/blob/master/README.md)\n",
      "csv_display_name": "AWS Sources Operator",
      "csv_metadata_description": "Provides a collection of API's that enables to consume events that happen in your AWS services and send them to containers, microservices and functions running in your cluster.",
      "csv_name": "aws-sources-operator.v0.3.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:06:26.085000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "aws-event-sources-operator-certified",
      "provided_apis": [
        {
          "group": "sources.triggermesh.com",
          "kind": "AwsEventSources",
          "plural": "awseventsources",
          "version": "v1alpha1"
        }
      ],
      "provider": "TriggerMesh Inc.",
      "related_images": [
        {
          "digest": "sha256:4ee562cecbaeb53aa2a77bc572320fab8b5e446c332d0794089f5d7f61a65aef",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator@sha256:4ee562cecbaeb53aa2a77bc572320fab8b5e446c332d0794089f5d7f61a65aef",
          "name": "aws-event-sources-operator-4ee562cecbaeb53aa2a77bc572320fab8b5e446c332d0794089f5d7f61a65aef-annotation"
        },
        {
          "digest": "sha256:b99aae2ebbfe839d689f273704c0975fef3ad7a1e1f323add0f22036665dbf20",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator@sha256:b99aae2ebbfe839d689f273704c0975fef3ad7a1e1f323add0f22036665dbf20",
          "name": "aws-sources-operator"
        },
        {
          "digest": "sha256:d0f77ef39f1845da9aaf6998652a190ee096cf2bbe4ce02e0250a8c2cc89ef3e",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-controller@sha256:d0f77ef39f1845da9aaf6998652a190ee096cf2bbe4ce02e0250a8c2cc89ef3e",
          "name": "aws-event-sources-controller-d0f77ef39f1845da9aaf6998652a190ee096cf2bbe4ce02e0250a8c2cc89ef3e-annotation"
        },
        {
          "digest": "sha256:3ec5e2aee183b8e9c53e6781c60a5679cd7034b982bcb02e81106d4e8faaea5d",
          "image": "registry.connect.redhat.com/triggermesh/awssqssource@sha256:3ec5e2aee183b8e9c53e6781c60a5679cd7034b982bcb02e81106d4e8faaea5d",
          "name": "awssqssource-3ec5e2aee183b8e9c53e6781c60a5679cd7034b982bcb02e81106d4e8faaea5d-annotation"
        },
        {
          "digest": "sha256:4c110671dff51b6939b38632cf1db68ae0779fc1f869c144ac141ab1ecf8ab85",
          "image": "registry.connect.redhat.com/triggermesh/awssnssource@sha256:4c110671dff51b6939b38632cf1db68ae0779fc1f869c144ac141ab1ecf8ab85",
          "name": "awssnssource-4c110671dff51b6939b38632cf1db68ae0779fc1f869c144ac141ab1ecf8ab85-annotation"
        },
        {
          "digest": "sha256:cc86c4d99a7e5c558274220a7c704f9f9615e165742e7d0e5a01d4843670cb97",
          "image": "registry.connect.redhat.com/triggermesh/awskinesissource@sha256:cc86c4d99a7e5c558274220a7c704f9f9615e165742e7d0e5a01d4843670cb97",
          "name": "awskinesissource-cc86c4d99a7e5c558274220a7c704f9f9615e165742e7d0e5a01d4843670cb97-annotation"
        },
        {
          "digest": "sha256:cc43ceb4ce08470b5d45e57a5fd0351c3e738416d53ac175f76c5b6a38996286",
          "image": "registry.connect.redhat.com/triggermesh/awsdynamodbsource@sha256:cc43ceb4ce08470b5d45e57a5fd0351c3e738416d53ac175f76c5b6a38996286",
          "name": "awsdynamodbsource-cc43ceb4ce08470b5d45e57a5fd0351c3e738416d53ac175f76c5b6a38996286-annotation"
        },
        {
          "digest": "sha256:867f8305d1bef84e5605a14f8482dc7f337ab68368c0334eab286aecf3f2ac09",
          "image": "registry.connect.redhat.com/triggermesh/awscognitouserpoolsource@sha256:867f8305d1bef84e5605a14f8482dc7f337ab68368c0334eab286aecf3f2ac09",
          "name": "awscognitouserpoolsource-867f8305d1bef84e5605a14f8482dc7f337ab68368c0334eab286aecf3f2ac09-annotation"
        },
        {
          "digest": "sha256:7b66b99c2b2297310155a11c23920b0705fc8fd9a558b14e80fb3c9862fc0b4f",
          "image": "registry.connect.redhat.com/triggermesh/awscognitoidentitysource@sha256:7b66b99c2b2297310155a11c23920b0705fc8fd9a558b14e80fb3c9862fc0b4f",
          "name": "awscognitoidentitysource-7b66b99c2b2297310155a11c23920b0705fc8fd9a558b14e80fb3c9862fc0b4f-annotation"
        },
        {
          "digest": "sha256:c362c12e56918c8d16ac86f4ff9f3637dcdbc5639e756b4e597a02f7115f70e9",
          "image": "registry.connect.redhat.com/triggermesh/awscodecommitsource@sha256:c362c12e56918c8d16ac86f4ff9f3637dcdbc5639e756b4e597a02f7115f70e9",
          "name": "awscodecommitsource-c362c12e56918c8d16ac86f4ff9f3637dcdbc5639e756b4e597a02f7115f70e9-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.3.0",
      "version_original": "0.3.0"
    },
    {
      "_id": "619f963d172f7877a2a90194",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2021-11-25T13:57:17.997000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:20:33.867000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "619f966214180ede86fe7a4b",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-41.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:cf89cfbb1c39ac9a7fd925f1e8b5bec94535e4eb64dd6e2da102e9f7b44f9f5e",
      "bundle_path_digest": "sha256:cf89cfbb1c39ac9a7fd925f1e8b5bec94535e4eb64dd6e2da102e9f7b44f9f5e",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2021-11-25T13:57:54.174000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:21:34.465000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353",
          "name": "redis-enterprise-operator-f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353-annotation"
        },
        {
          "digest": "sha256:f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.2.8-2",
      "version_original": "6.2.8-2"
    },
    {
      "_id": "619f967c172f7877a2a90197",
      "alm_examples": [
        {
          "api_version": "operator.cert-manager.io/v1alpha1",
          "kind": "CertManager",
          "metadata": {
            "name": "cert-manager",
            "namespace": "cert-manager"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jetstack/cert-manager-operator-bundle@sha256:7bff5bc7c3ec122f641f5b73adb1274ac0a5e0e5642270f74e91346e42c1c76c",
      "bundle_path_digest": "sha256:7bff5bc7c3ec122f641f5b73adb1274ac0a5e0e5642270f74e91346e42c1c76c",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-25T13:58:20.768000+00:00",
      "csv_description": "x509 certificate management for Kubernetes",
      "csv_display_name": "cert-manager",
      "csv_metadata_description": "x509 certificate management for Kubernetes",
      "csv_name": "cert-manager-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:14:59.485000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cert-manager-operator",
      "provided_apis": [
        {
          "group": "operator.cert-manager.io",
          "kind": "CertManager",
          "plural": "certmanagers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Jetstack",
      "related_images": [
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-controller:v1.1.0-ubi",
          "name": "cert-manager-controller"
        },
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-acmesolver:v1.1.0-ubi",
          "name": "cert-manager-acmesolver"
        },
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-cainjector:v1.1.0-ubi",
          "name": "cert-manager-cainjector"
        },
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-webhook:v1.1.0-ubi",
          "name": "cert-manager-webhook"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "619f96d314180ede86fe7a4d",
      "alm_examples": [
        {
          "api_version": "nodered.com/v1alpha1",
          "kind": "NodeRed",
          "metadata": {
            "name": "nodered"
          },
          "spec": {
            "adminpassword": "$2a$08$zZWtXTja0fB1pzD4sHCMyOCMYz2Z6dNbM6tl8sJogENOMcxWV9DN.",
            "persistentvolume": {
              "accessmode": "ReadWriteMany",
              "enabled": true,
              "size": "100Mi",
              "storageclass": "ibmc-file-silver-gid"
            },
            "secretkey": "c2VjcmV0",
            "size": 1
          }
        },
        {
          "api_version": "nodered.com/v1alpha1",
          "kind": "NodeRedBackup",
          "metadata": {
            "name": "noderedbackup"
          },
          "spec": {
            "backup": {},
            "ibm_s3": {}
          }
        },
        {
          "api_version": "nodered.com/v1alpha1",
          "kind": "NodeRedRestore",
          "metadata": {
            "name": "noderedrestore"
          },
          "spec": {
            "ibm_s3": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/node-red-operator-bundle@sha256:90e253736a43421533bd8caf08b338ee3de81c188cb49cfa5b08a53a9ccf58d6",
      "bundle_path_digest": "sha256:90e253736a43421533bd8caf08b338ee3de81c188cb49cfa5b08a53a9ccf58d6",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-25T13:59:47.495000+00:00",
      "csv_description": "Node-RED is a flow-based programming tool, originally developed by IBM's Emerging Technology Services team and now a part of the JS Foundation.\n**How to get the Application Images from registry?**\n-----\n- First Login to redhat catalogue webpage using your credentials.\n- Search for the Operator.\n- Click on the Operator.\n- There is a description that redirects you (upon clicking) to page that explains how to create service accounts.\n- Create a Service Account. Refer page : <https://access.redhat.com/terms-based-registry/#/accounts>\n- Once a service account is created , you can click on it and then navigate to tab Openshift Secret to get the yaml file for your ImagePullSecret.\n- Download the Secret. Create the secret using command\n```sh\n    kubectl create -f <secretfile.yml> --namespace=NAMESPACEHERE\n```\n- Use the name of the created secret in the CR file.\n- For all the application images we would need the secret name to be passed in the CR Spec.\n\n----------\n\n**Node-RED CR Spec Details**\n-----\n  Spec                         |            Details\n-------------------------------|-----------------------------\nsize                           | Number of instances of Node-RED\nimagePullSecrets               | Secret if the image is private\npersistentvolume.enabled       | If volume is to be mounted at /data\npersistentvolume.storageclass  | Storage class of the Persistent Volume of type ReadWriteMany\npersistentvolume.accessmode    | The accessMode of the Persistent Volume. This should be of type ReadWriteMany.\npersistentvolume.size          | Size of the volume in Mi or Gi\nadminpassword                  | Default password is **password**.\n                               | To password protect the Node-RED editor and admin API.\n                               | Give the bcrypt hash of the password.\n                               | See http://nodered.org/docs/security.html#generating-the-password-hash\n                               |\nsecretkey                      | By default, credentials are encrypted in storage using a generated key.\n                               | To specify your own secret, set the following property in base64 encoding.\n                               | Note- the secret should not have a newline or whitespace.\n                               | If you want to disable encryption of credentials, set this property to 'false'.\n\n----------\n\n**NOTE** For Backup feature its required that the NodeRed is deployed with a Persistent Volume of type RedWriteMany.\n\n----------\n**Node-RED Backup CR Spec Details**\n-----\n  Spec                         |            Details\n-------------------------------|-----------------------------\nbackup.schedule                | Set this value based on the type of backup you opt.\n                               | There are two types of backup available:\n                               | 1. One Time Backup:\n                               |    For this type of backup the value of backup.schedule should be left empty or null.\n                               | 2. Scheduled Backup:\n                               |    For this type of backup provide Cronjob schedule expression\n                               |    (e.g. \"*/30 * * * *\" to take backup after every 30 minutes) as a value for backup.schedule\n                               |\nibm_s3.bucket_name             | IBM S3 storage bucket name\nibm_s3.endpoint                | Bucket endpoint\nibm_s3.api_key                 | Bucket API Key\nibm_s3.auth_endpoint           | Bucket Authentication Endpoint\nibm_s3.resource_crn            | Bucket Rescource\n\n----------\n\n\n**NOTE** For Restore feature its required that the NodeRed is deployed with a Persistent Volume of type RedWriteMany.\n\n----------\n\n**Node-RED Restore CR Spec Details**\n-----\n  Spec                         |            Details\n-------------------------------|-----------------------------\nrestore_file_name              | Name of the backup file in S3 bucket which needs to be restored\nibm_s3.bucket_name             | IBM S3 storage bucket name\nibm_s3.endpoint                | Bucket Endpoint\nibm_s3.api_key                 | Bucket API Key\nibm_s3.auth_endpoint           | Bucket Authentication Endpoint\nibm_s3.resource_crn            | Bucket Rescource\n\n----------\n\n\n**Logging into the Node-RED dashboard**\n-----\n\nOnce the Node-RED pod is ready, you can access the URL to the dashboard on the route path. The credentails to dashboard is admin and the password set in the \"adminpassword\" field.\n",
      "csv_display_name": "Node-RED Operator",
      "csv_metadata_description": "Node-RED is a programming tool for wiring together hardware devices, APIs and online services in new and interesting ways.",
      "csv_name": "node-red-operator-certified.v0.0.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:21:02.890000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "node-red-operator-certified",
      "provided_apis": [
        {
          "group": "nodered.com",
          "kind": "NodeRedRestore",
          "version": "v1alpha1"
        },
        {
          "group": "nodered.com",
          "kind": "NodeRed",
          "version": "v1alpha1"
        },
        {
          "group": "nodered.com",
          "kind": "NodeRedBackup",
          "version": "v1alpha1"
        }
      ],
      "provider": "IBM-Edge",
      "related_images": [
        {
          "digest": "sha256:a565b8a6a058d0040873cc820b1950074c7bbcc84a9971d64a523b122f95eff4",
          "image": "registry.connect.redhat.com/ibm-edge/node-red@sha256:a565b8a6a058d0040873cc820b1950074c7bbcc84a9971d64a523b122f95eff4",
          "name": "node-red-a565b8a6a058d0040873cc820b1950074c7bbcc84a9971d64a523b122f95eff4-annotation"
        },
        {
          "digest": "sha256:c227acd24ce630310b752f4728330020e007bbeaad3d4df12ce5a70309997821",
          "image": "registry.connect.redhat.com/ibm-edge/node-red-operator@sha256:c227acd24ce630310b752f4728330020e007bbeaad3d4df12ce5a70309997821",
          "name": "node-red-operator"
        },
        {
          "digest": "sha256:a565b8a6a058d0040873cc820b1950074c7bbcc84a9971d64a523b122f95eff4",
          "image": "registry.connect.redhat.com/ibm-edge/node-red@sha256:a565b8a6a058d0040873cc820b1950074c7bbcc84a9971d64a523b122f95eff4",
          "name": "nodered"
        },
        {
          "digest": "sha256:9c4ef813daee4f06b5be3200cabc8dda43cd50ec11a9ff2c49ebfac8426df9ec",
          "image": "registry.connect.redhat.com/ibm-edge/node-red-backup-restore@sha256:9c4ef813daee4f06b5be3200cabc8dda43cd50ec11a9ff2c49ebfac8426df9ec",
          "name": "nodered_backup"
        },
        {
          "digest": "sha256:9c4ef813daee4f06b5be3200cabc8dda43cd50ec11a9ff2c49ebfac8426df9ec",
          "image": "registry.connect.redhat.com/ibm-edge/node-red-backup-restore@sha256:9c4ef813daee4f06b5be3200cabc8dda43cd50ec11a9ff2c49ebfac8426df9ec",
          "name": "nodered_restore"
        }
      ],
      "replaces": null,
      "skip_range": "<0.0.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.4",
      "version_original": "0.0.4"
    },
    {
      "_id": "619f96f2172f7877a2a9019d",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "bundle_path_digest": "sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2021-11-25T14:00:18.503000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:15:31.982000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "redislabs/operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "operator-998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b-annotation"
        },
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.6-24",
      "version_original": "6.0.6-24"
    },
    {
      "_id": "619f96f92617fe8f092a7fcf",
      "alm_examples": [
        {
          "api_version": "tools.opdev.io/v1",
          "kind": "DemoResource",
          "metadata": {
            "name": "demoresource-sample"
          },
          "spec": {
            "message": "Hello, World!"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/bcook/simple-demo-operator@sha256:027ff7a8f29ce525f1597a76faa6a264ca76029f244bf3b642e1e3f1bb80541c",
      "bundle_path_digest": "sha256:027ff7a8f29ce525f1597a76faa6a264ca76029f244bf3b642e1e3f1bb80541c",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-25T14:00:25.826000+00:00",
      "csv_description": "A simple demo operator with a minimal reconciliation function, for testing basic operator installation and validation workflows.",
      "csv_display_name": "Simple Demo Operator",
      "csv_metadata_description": "",
      "csv_name": "tc-simple-demo-operator.v0.0.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:40:31.199000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tc-simple-demo-operator",
      "provided_apis": [
        {
          "group": "tools.opdev.io",
          "kind": "DemoResource",
          "plural": "demoresources",
          "version": "v1"
        }
      ],
      "provider": "The Partner Lifecycle Engineering Team",
      "related_images": [
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:25ca9cb1f3dc7b8ce0aba4d3383cac20f5f5a1298fbbfde4a6adab7b1000cb0e",
          "image": "quay.io/opdev/simple-demo-operator@sha256:25ca9cb1f3dc7b8ce0aba4d3383cac20f5f5a1298fbbfde4a6adab7b1000cb0e",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.8",
      "version_original": "0.0.8"
    },
    {
      "_id": "619f9720172f7877a2a901a0",
      "alm_examples": [
        {
          "api_version": "astra.netapp.io/v1",
          "kind": "AstraControlCenter",
          "metadata": {
            "name": "astra"
          },
          "spec": {
            "accountName": "Example",
            "additionalValues": {},
            "astraAddress": "astra.example.com",
            "astraResourcesScaler": "Default",
            "astraVersion": "ASTRA_VERSION",
            "autoSupport": {
              "enrolled": true,
              "url": "https://stagesupport.netapp.com/asupprod/post/1.0/postAsup"
            },
            "crds": {
              "externalCertManager": false,
              "externalTraefik": false
            },
            "email": "admin@example.com",
            "firstName": "SRE",
            "imageRegistry": {
              "name": "example.registry/astra",
              "secret": "astra-registry-cred"
            },
            "lastName": "Admin",
            "storageClass": "ontap-gold",
            "volumeReclaimPolicy": "Retain"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/5e8d03cfac3db90370900b83/acc-operator-bundle@sha256:6b99d92f9d8de5380196a1b65ad12e8ea08adf9dfd8acc04158cc219d0100858",
      "bundle_path_digest": "sha256:6b99d92f9d8de5380196a1b65ad12e8ea08adf9dfd8acc04158cc219d0100858",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-25T14:01:04.047000+00:00",
      "csv_description": "Install, configure and monitor Astra Control Center",
      "csv_display_name": "netapp-acc-operator",
      "csv_metadata_description": "",
      "csv_name": "acc-operator.v21.10.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:30:28.831000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "acc-operator",
      "provided_apis": [
        {
          "group": "astra.netapp.io",
          "kind": "AstraControlCenter",
          "plural": "astracontrolcenters",
          "version": "v1"
        }
      ],
      "provider": "NetApp",
      "related_images": [
        {
          "digest": "sha256:a5c16c64229aac3564c66816c123e81a849ff93b8a443cd6ff14bd8d63c06644",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:a5c16c64229aac3564c66816c123e81a849ff93b8a443cd6ff14bd8d63c06644",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:33d1dd15d0fcd40acbecadf824a99c611efce876ba73c5df9b9a8a2defc95214",
          "image": "registry.connect.redhat.com/netapp/acc-operator@sha256:33d1dd15d0fcd40acbecadf824a99c611efce876ba73c5df9b9a8a2defc95214",
          "name": "acc-operator"
        },
        {
          "digest": "sha256:a5c16c64229aac3564c66816c123e81a849ff93b8a443cd6ff14bd8d63c06644",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:a5c16c64229aac3564c66816c123e81a849ff93b8a443cd6ff14bd8d63c06644",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:33d1dd15d0fcd40acbecadf824a99c611efce876ba73c5df9b9a8a2defc95214",
          "image": "registry.connect.redhat.com/netapp/acc-operator@sha256:33d1dd15d0fcd40acbecadf824a99c611efce876ba73c5df9b9a8a2defc95214",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "21.10.7",
      "version_original": "21.10.7"
    },
    {
      "_id": "619f977c14180ede86fe7a51",
      "alm_examples": [
        {
          "api_version": "sources.triggermesh.com/v1alpha1",
          "kind": "AwsEventSources",
          "metadata": {
            "name": "awseventsources"
          },
          "spec": {
            "adapters": {
              "awscodecommit": {
                "image": "registry.connect.redhat.com/triggermesh/awscodecommitsource@sha256:68f93f9fe61a6add05c46df10caf65e80659fa232357bb7f05f89cb2e1f2ad86"
              },
              "awscognitoidentity": {
                "image": "registry.connect.redhat.com/triggermesh/awscognitoidentitysource@sha256:f578c8f9fb18bc4e1ee51b93e98eb8c0c7f92c088eddc12e14fd40736056651f"
              },
              "awscognitouserpool": {
                "image": "registry.connect.redhat.com/triggermesh/awscognitouserpoolsource@sha256:7a00f2251d2577ff76ef8197edf1eea6918c7dbc10688b7b68a6d9e12266faeb"
              },
              "awsdynamodb": {
                "image": "registry.connect.redhat.com/triggermesh/awsdynamodbsource@sha256:e3a2e72cc371478fea1c57c1dd72d4004e72755acc879b6b064832cc56c7ca18"
              },
              "awskinesis": {
                "image": "registry.connect.redhat.com/triggermesh/awskinesissource@sha256:9956ede20b6a8cb9492e5cb2f28ffbc3029ae28740bda6e1a2d6aa0b213825e0"
              },
              "awssns": {
                "image": "registry.connect.redhat.com/triggermesh/awssnssource@sha256:478b0bcff5e283b7e52c9b9bd3f35040f3301629ad67c1522f293b1dbf65dfb4"
              },
              "awssqs": {
                "image": "registry.connect.redhat.com/triggermesh/awssqssource@sha256:5a0ee2e4708afbef3699bf5f1f80686d6f3467d400dc633e4cf90a397ada00e2"
              }
            },
            "affinity": {},
            "fullnameOverride": "",
            "image": {
              "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-controller@sha256:10063c1996c642da69ebbacea677098e27ecd68245dec2d5a4853130a48b46f4",
              "pullPolicy": "IfNotPresent"
            },
            "imagePullSecrets": [],
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "rbac": {
              "create": true
            },
            "resources": {
              "requests": {
                "cpu": "20m",
                "memory": "20Mi"
              }
            },
            "securityContext": {},
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator-bundle@sha256:b41abde7767e00d6ad016739df7e6c07fa9ac21e096c9fd6b42bf1aa08abb162",
      "bundle_path_digest": "sha256:b41abde7767e00d6ad016739df7e6c07fa9ac21e096c9fd6b42bf1aa08abb162",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-11-25T14:02:36.027000+00:00",
      "csv_description": "The TriggerMesh AWS Sources operator provides a collection of API's that enables to consume events that happen in your AWS services and send them to containers, microservices and functions running in your cluster.\n\n## Prerequisites\n\nThe TriggerMesh AWS Sources operator depends on the Knative API's provided by the Red Hat OpenShift Serverless operator. For more information, see the documentation on [Installing OpenShift Serverless](https://access.redhat.com/documentation/en-us/openshift_container_platform/4.3/html/serverless_applications/installing-openshift-serverless-1).\n\n## Supported Event Sources\n\n- **AWS CodeCommit event source**: Consume messages from a AWS CodeCommit repository and send them as CloudEvents to an arbitrary event sink.\n- **AWS Cognito Identity event source**: Consume messages from a AWS Cognito identity pool and send them as CloudEvents to an arbitrary event sink.\n- **AWS Cognito UserPool event source**: Consume messages from a AWS Cognito identity pool and send them as CloudEvents to an arbitrary event sink.\n- **AWS DynamoDB event source**: Consume messages from a AWS DynamoDB stream and send them as CloudEvents to an arbitrary event sink.\n- **AWS Kinesis event source**: Consume messages from a AWS Kinesis data stream and send them as CloudEvents to an arbitrary event sink.\n- **AWS SNS event source**: Subscribes to messages from a AWS SNS topic and send them as CloudEvents to an arbitrary event sink.\n- **AWS SQS event source**: Consume messages from a AWS SQS queue and sends them as CloudEvents to an arbitrary event sink.\n\n## Installation\n\nSee the documentation on [Installing TriggerMesh AWS Sources](https://github.com/triggermesh/aws-sources-operator/blob/master/README.md)\n\n## Getting Started\n\nSee the documentation on [Getting Started](https://github.com/triggermesh/aws-event-sources/blob/master/README.md)\n",
      "csv_display_name": "AWS Sources Operator",
      "csv_metadata_description": "Provides a collection of API's that enables to consume events that happen in your AWS services and send them to containers, microservices and functions running in your cluster.",
      "csv_name": "aws-sources-operator.v0.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:22:28.317000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "aws-event-sources-operator-certified",
      "provided_apis": [
        {
          "group": "sources.triggermesh.com",
          "kind": "AwsEventSources",
          "plural": "awseventsources",
          "version": "v1alpha1"
        }
      ],
      "provider": "TriggerMesh Inc.",
      "related_images": [
        {
          "digest": "sha256:4ee562cecbaeb53aa2a77bc572320fab8b5e446c332d0794089f5d7f61a65aef",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator@sha256:4ee562cecbaeb53aa2a77bc572320fab8b5e446c332d0794089f5d7f61a65aef",
          "name": "aws-event-sources-operator-4ee562cecbaeb53aa2a77bc572320fab8b5e446c332d0794089f5d7f61a65aef-annotation"
        },
        {
          "digest": "sha256:4ee562cecbaeb53aa2a77bc572320fab8b5e446c332d0794089f5d7f61a65aef",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator@sha256:4ee562cecbaeb53aa2a77bc572320fab8b5e446c332d0794089f5d7f61a65aef",
          "name": "aws-sources-operator"
        },
        {
          "digest": "sha256:10063c1996c642da69ebbacea677098e27ecd68245dec2d5a4853130a48b46f4",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-controller@sha256:10063c1996c642da69ebbacea677098e27ecd68245dec2d5a4853130a48b46f4",
          "name": "aws-event-sources-controller-10063c1996c642da69ebbacea677098e27ecd68245dec2d5a4853130a48b46f4-annotation"
        },
        {
          "digest": "sha256:5a0ee2e4708afbef3699bf5f1f80686d6f3467d400dc633e4cf90a397ada00e2",
          "image": "registry.connect.redhat.com/triggermesh/awssqssource@sha256:5a0ee2e4708afbef3699bf5f1f80686d6f3467d400dc633e4cf90a397ada00e2",
          "name": "awssqssource-5a0ee2e4708afbef3699bf5f1f80686d6f3467d400dc633e4cf90a397ada00e2-annotation"
        },
        {
          "digest": "sha256:478b0bcff5e283b7e52c9b9bd3f35040f3301629ad67c1522f293b1dbf65dfb4",
          "image": "registry.connect.redhat.com/triggermesh/awssnssource@sha256:478b0bcff5e283b7e52c9b9bd3f35040f3301629ad67c1522f293b1dbf65dfb4",
          "name": "awssnssource-478b0bcff5e283b7e52c9b9bd3f35040f3301629ad67c1522f293b1dbf65dfb4-annotation"
        },
        {
          "digest": "sha256:9956ede20b6a8cb9492e5cb2f28ffbc3029ae28740bda6e1a2d6aa0b213825e0",
          "image": "registry.connect.redhat.com/triggermesh/awskinesissource@sha256:9956ede20b6a8cb9492e5cb2f28ffbc3029ae28740bda6e1a2d6aa0b213825e0",
          "name": "awskinesissource-9956ede20b6a8cb9492e5cb2f28ffbc3029ae28740bda6e1a2d6aa0b213825e0-annotation"
        },
        {
          "digest": "sha256:e3a2e72cc371478fea1c57c1dd72d4004e72755acc879b6b064832cc56c7ca18",
          "image": "registry.connect.redhat.com/triggermesh/awsdynamodbsource@sha256:e3a2e72cc371478fea1c57c1dd72d4004e72755acc879b6b064832cc56c7ca18",
          "name": "awsdynamodbsource-e3a2e72cc371478fea1c57c1dd72d4004e72755acc879b6b064832cc56c7ca18-annotation"
        },
        {
          "digest": "sha256:7a00f2251d2577ff76ef8197edf1eea6918c7dbc10688b7b68a6d9e12266faeb",
          "image": "registry.connect.redhat.com/triggermesh/awscognitouserpoolsource@sha256:7a00f2251d2577ff76ef8197edf1eea6918c7dbc10688b7b68a6d9e12266faeb",
          "name": "awscognitouserpoolsource-7a00f2251d2577ff76ef8197edf1eea6918c7dbc10688b7b68a6d9e12266faeb-annotation"
        },
        {
          "digest": "sha256:f578c8f9fb18bc4e1ee51b93e98eb8c0c7f92c088eddc12e14fd40736056651f",
          "image": "registry.connect.redhat.com/triggermesh/awscognitoidentitysource@sha256:f578c8f9fb18bc4e1ee51b93e98eb8c0c7f92c088eddc12e14fd40736056651f",
          "name": "awscognitoidentitysource-f578c8f9fb18bc4e1ee51b93e98eb8c0c7f92c088eddc12e14fd40736056651f-annotation"
        },
        {
          "digest": "sha256:68f93f9fe61a6add05c46df10caf65e80659fa232357bb7f05f89cb2e1f2ad86",
          "image": "registry.connect.redhat.com/triggermesh/awscodecommitsource@sha256:68f93f9fe61a6add05c46df10caf65e80659fa232357bb7f05f89cb2e1f2ad86",
          "name": "awscodecommitsource-68f93f9fe61a6add05c46df10caf65e80659fa232357bb7f05f89cb2e1f2ad86-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.2.1",
      "version_original": "0.2.1"
    },
    {
      "_id": "619f97a0172f7877a2a901a6",
      "alm_examples": [
        {
          "api_version": "cache.omarg.net/v1alpha1",
          "kind": "Memcached",
          "metadata": {
            "name": "memcached-sample"
          },
          "spec": {
            "size": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ogaye/ogaye-operator-bundle@sha256:5fb22f02153f2609ec21fe1af3a14b7e6c3779cdde7f387a59179b8152528225",
      "bundle_path_digest": "sha256:5fb22f02153f2609ec21fe1af3a14b7e6c3779cdde7f387a59179b8152528225",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-25T14:03:12.164000+00:00",
      "csv_description": "Testing RH CI Pipeline",
      "csv_display_name": "Omar Test Memcached Operator",
      "csv_metadata_description": "",
      "csv_name": "ogaye-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:00:09.348000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "ogaye-operator",
      "provided_apis": [
        {
          "group": "cache.omarg.net",
          "kind": "Memcached",
          "plural": "memcacheds",
          "version": "v1alpha1"
        }
      ],
      "provider": "Omar Gaye, IBM",
      "related_images": [
        {
          "digest": "sha256:7f6a280132b9746c51e44a4e795a0f861ec932c454d597a60a421b882ef924ff",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:7f6a280132b9746c51e44a4e795a0f861ec932c454d597a60a421b882ef924ff",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:07e569609319c4884acc8e6f4a0e10344109b5f392898b628996925e96fafc83",
          "image": "quay.io/ogaye/ogaye-operator@sha256:07e569609319c4884acc8e6f4a0e10344109b5f392898b628996925e96fafc83",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.2",
      "version_original": "0.0.2"
    }
  ],
  "total": 4935
}

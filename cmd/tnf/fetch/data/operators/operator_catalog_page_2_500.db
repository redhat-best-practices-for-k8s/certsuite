{
  "data": [
    {
      "_id": "609ab09de2b160d361d251c9",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/data-explorer-operator-bundle@sha256:403219f0791689e2f3484f33be08e243dc2bd9e22ca962c430ddd7eee2caf0ee",
      "bundle_path_digest": "sha256:403219f0791689e2f3484f33be08e243dc2bd9e22ca962c430ddd7eee2caf0ee",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:28:13.663000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "data-explorer-operator.v0.0.4",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:14:46.065000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "data-explorer-operator-certified",
      "provided_apis": [
        {
          "group": "data-explorer.com",
          "kind": "DashboardWithJupyterHub",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.4",
      "version_original": "0.0.4"
    },
    {
      "_id": "609ab0a056933b164fe21285",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/memsql/operator-bundle@sha256:abaf5a3965617a0555757344b802e6112317de9c343cc018f15c74a6843c55fd",
      "bundle_path_digest": "sha256:abaf5a3965617a0555757344b802e6112317de9c343cc018f15c74a6843c55fd",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:28:16.378000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "memsql-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:52:34.086000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "memql-certified",
      "provided_apis": [
        {
          "group": "memsql.com",
          "kind": "MemsqlCluster",
          "plural": "memsqlclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "609ab0a1e2b160d361d251cc",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-core-operator-bundle@sha256:1f423936c3134391ba56414c05ece71e90347666f69a2193fe01370b21ce138f",
      "bundle_path_digest": "sha256:1f423936c3134391ba56414c05ece71e90347666f69a2193fe01370b21ce138f",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:28:17.370000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "seldon-operator.v1.2.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:16:30.928000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "seldon-operator-certified",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha2"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha3"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.2.1",
      "version_original": "1.2.1"
    },
    {
      "_id": "609ab0a1e2b160d361d251cd",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portshift/operator-bundle@sha256:3165cd171a5e046461a6b55011084ac293e92334983ef65acaf03ec5fc40c141",
      "bundle_path_digest": "sha256:3165cd171a5e046461a6b55011084ac293e92334983ef65acaf03ec5fc40c141",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:28:17.864000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "portshift-operator.v0.1.5",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:15:39.206000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "portshift-controller-operator",
      "provided_apis": [
        {
          "group": "portshift.io",
          "kind": "PortshiftInstaller",
          "plural": "portshiftinstallers",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.1.5",
      "version_original": "0.1.5"
    },
    {
      "_id": "609ab0a2e2b160d361d251cf",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-healthcare-hub-operator-bundle@sha256:27cb3851d88ee293c260e452670cad361800cc50b1c9ff98cd3617113b13d117",
      "bundle_path_digest": "sha256:27cb3851d88ee293c260e452670cad361800cc50b1c9ff98cd3617113b13d117",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:28:18.331000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "cortex-healthcare-hub-operator.v0.0.24",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:12:07.456000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cortex-healthcare-hub-operator",
      "provided_apis": [
        {
          "group": "hubs.cortex.cognitivescale.com",
          "kind": "Hub",
          "plural": "hubs",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.24",
      "version_original": "0.0.24"
    },
    {
      "_id": "609ab0a3d04af0e74bb058d1",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-certifai-operator-bundle@sha256:2ff2df4e61105cb9cc1905f504ed0e74907fcd43f85d200f729e464e824e928f",
      "bundle_path_digest": "sha256:2ff2df4e61105cb9cc1905f504ed0e74907fcd43f85d200f729e464e824e928f",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:28:19.007000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "cortex-certifai-operator.v1.3.2",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:00:07.155000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cortex-certifai-operator",
      "provided_apis": [
        {
          "group": "cortex.cognitivescale.com",
          "kind": "Certifai",
          "plural": "certifais",
          "version": "v1"
        },
        {
          "group": "cortex.cognitivescale.com",
          "kind": "CertifaiScan",
          "plural": "certifaiscans",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.3.2",
      "version_original": "1.3.2"
    },
    {
      "_id": "609ab0a3d04af0e74bb058d2",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "replicaCount": 1,
              "resources": {},
              "service": {
                "licenseName": "AutoPilotWMQ_MQM.lic"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "domain": {
              "replicaCount": 1,
              "resources": {},
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "dbPort": 3306,
              "subDomain": "nastel-cluster-915b3b336cabec458a7c7ec2aa7c625f-0000.eu-gb.containers.appdomain.cloud",
              "type": "ClusterIP"
            },
            "navigator": {
              "replicaCount": 1,
              "resources": {}
            },
            "nsqcm": {
              "replicaCount": 1,
              "resources": {}
            },
            "wgs-mysql": {
              "replicaCount": 1,
              "resources": {},
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:2d8738da44e668d4b04958e371120e20dddfcb5cfd2be2e3a988b6c3111e88f5",
      "bundle_path_digest": "sha256:2d8738da44e668d4b04958e371120e20dddfcb5cfd2be2e3a988b6c3111e88f5",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:28:19.673000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v0.0.16",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:00:57.435000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d9597ad9677965bc7c8d6970151866394a40464857e722c4885519b8167da4f4",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:d9597ad9677965bc7c8d6970151866394a40464857e722c4885519b8167da4f4",
          "name": "navigator-operator-d9597ad9677965bc7c8d6970151866394a40464857e722c4885519b8167da4f4-annotation"
        },
        {
          "digest": "sha256:d9597ad9677965bc7c8d6970151866394a40464857e722c4885519b8167da4f4",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:d9597ad9677965bc7c8d6970151866394a40464857e722c4885519b8167da4f4",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:4a606ec3bcfa00f35f8859b904862930a72218240b7cbc197e5e811d8bf33f40",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:4a606ec3bcfa00f35f8859b904862930a72218240b7cbc197e5e811d8bf33f40",
          "name": "domain"
        },
        {
          "digest": "sha256:a968f28e69e2aed4125d27fcbe4365b671cc316321ddf7205541c30593afc9c3",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:a968f28e69e2aed4125d27fcbe4365b671cc316321ddf7205541c30593afc9c3",
          "name": "cm"
        },
        {
          "digest": "sha256:0bd13feca3a3362587a76f17f2df26651f4facdfad097b82a3d4cb361b5ff770",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:0bd13feca3a3362587a76f17f2df26651f4facdfad097b82a3d4cb361b5ff770",
          "name": "wgs"
        },
        {
          "digest": "sha256:6a09a0349de4ef27730d265349b3a84c93593f42a1e2249f3c82b47b96c9b6eb",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:6a09a0349de4ef27730d265349b3a84c93593f42a1e2249f3c82b47b96c9b6eb",
          "name": "navigator"
        },
        {
          "digest": "sha256:3e1c5e4d19ab3b373a6b314d24b60981cddb301bf43a1fe232f14612a2957de4",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:3e1c5e4d19ab3b373a6b314d24b60981cddb301bf43a1fe232f14612a2957de4",
          "name": "mysql"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.16",
      "version_original": "0.0.16"
    },
    {
      "_id": "609ab0a4e2b160d361d251d1",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:3a70920f1aca227ebe5b1db44125c4370bad00379a941f0bac301d61ee112ba2",
      "bundle_path_digest": "sha256:3a70920f1aca227ebe5b1db44125c4370bad00379a941f0bac301d61ee112ba2",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:28:20.098000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "gpu-operator-certified.v1.3.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:56:13.211000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.3.0",
      "version_original": "1.3.0"
    },
    {
      "_id": "609ab0a4e2b160d361d251d2",
      "alm_examples": [
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixAgent",
          "metadata": {
            "labels": {
              "app": "agent",
              "vendor": "zabbix"
            },
            "name": "zabbix-agent"
          },
          "spec": {
            "agent_env": {
              "active_allow": "true",
              "activeservers": "",
              "alias": "",
              "allow_privileged": true,
              "debug_level": 3,
              "enable_remote_commands": 0,
              "hostname": "",
              "hostname_item": "system.hostname",
              "log_remote_commands": 1,
              "metadata": "",
              "metadata_item": "",
              "passive_allow": "true",
              "passive_servers": "",
              "server_host": "zabbix-server",
              "start_agents": 3,
              "timeout": 3
            }
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixAppliance",
          "metadata": {
            "labels": {
              "app": "appliance",
              "vendor": "zabbix"
            },
            "name": "zabbix-appliance"
          },
          "spec": {
            "server_env": {
              "general": {
                "zabbix_mysql_volumeclaim": "zabbix-mysql-data",
                "zabbix_mysqlsecret": "zabbix-mysqlsecret"
              },
              "java_gateway": {
                "debug_level": "info",
                "start_pollers": 5,
                "timeout": 3
              },
              "server": {
                "cache#": "8M",
                "cache_update_frequency": 60,
                "debug_level": 3,
                "history_cache#": "16M",
                "history_index_cache#": "4M",
                "housekeeping_frequency": 1,
                "log_slow_queries": 0,
                "max_housekeeper_delete": 5000,
                "proxy_config_frequency": 3600,
                "proxy_data_frequency": 1,
                "start_alerters": 3,
                "start_db_syncers": 4,
                "start_discoverers": 1,
                "start_escalators": 1,
                "start_http_pollers": 1,
                "start_ipmi_pollers": 0,
                "start_java_pollers": 5,
                "start_lld_preprocessors": 2,
                "start_pingers": 1,
                "start_pollers": 5,
                "start_pollers_unreachable": 1,
                "start_preprocessors": 3,
                "start_proxy_pollers": 0,
                "start_timers": 1,
                "start_trappers": 5,
                "start_vmaware_collectors": 0,
                "timeout": 4,
                "trapper_timeout": 300,
                "trend_cache#": "4M",
                "unavailable_delay": 60,
                "unreachable_delay": 15,
                "unreachable_period": 45,
                "value_cache#": "8M",
                "vmaware_cache#": "8M",
                "vmware_frequency": 60,
                "vmware_perf_frequency": 60,
                "vmware_timeout": 10
              },
              "web": {
                "history_storage_types": "",
                "max_execution_time": 300,
                "max_input_time": 300,
                "memory_limit": "128M",
                "post_max#": "16M",
                "server_name": "Kubernetes installation",
                "session_name": "zbx_sessionid",
                "timezone": "Europe/Riga",
                "upload_max_filesize": "2M"
              }
            }
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixFull",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-full"
          },
          "spec": {
            "java_gateway#": 1,
            "server_env": {
              "general": {
                "history_storage_url": "",
                "zabbix_mysql_volumeclaim": "zabbix-mysql-data",
                "zabbix_mysqlsecret": "zabbix-mysqlsecret"
              },
              "java_gateway": {
                "debug_level": "info",
                "start_pollers": 5,
                "timeout": 3
              },
              "server": {
                "cache#": "8M",
                "cache_update_frequency": 60,
                "debug_level": 3,
                "history_cache#": "16M",
                "history_index_cache#": "4M",
                "history_storage_types": "",
                "housekeeping_frequency": 1,
                "log_slow_queries": 0,
                "max_housekeeper_delete": 5000,
                "proxy_config_frequency": 3600,
                "proxy_data_frequency": 1,
                "start_alerters": 3,
                "start_db_syncers": 4,
                "start_discoverers": 1,
                "start_escalators": 1,
                "start_http_pollers": 1,
                "start_ipmi_pollers": 0,
                "start_java_pollers": 5,
                "start_lld_preprocessors": 2,
                "start_pingers": 1,
                "start_pollers": 5,
                "start_pollers_unreachable": 1,
                "start_preprocessors": 3,
                "start_proxy_pollers": 0,
                "start_timers": 1,
                "start_trappers": 5,
                "start_vmaware_collectors": 0,
                "timeout": 4,
                "trapper_timeout": 300,
                "trend_cache#": "4M",
                "unavailable_delay": 60,
                "unreachable_delay": 15,
                "unreachable_period": 45,
                "value_cache#": "8M",
                "vmaware_cache#": "8M",
                "vmware_frequency": 60,
                "vmware_perf_frequency": 60,
                "vmware_timeout": 10
              },
              "web": {
                "history_storage_types": "",
                "max_execution_time": 300,
                "max_input_time": 300,
                "memory_limit": "128M",
                "post_max#": "16M",
                "server_name": "Kubernetes installation",
                "session_name": "zbx_sessionid",
                "timezone": "Europe/Riga",
                "upload_max_filesize": "2M"
              }
            },
            "web#": 2
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixProxyMysql",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-mysql"
          },
          "spec": {
            "java_gateway#": 1,
            "proxy#": 1,
            "proxy_env": {
              "general": {
                "zabbix_mysql_volumeclaim": "zabbix-mysql-data",
                "zabbix_mysqlsecret": "zabbix-mysqlsecret"
              },
              "java_gateway": {
                "debug_level": "info",
                "start_pollers": 5,
                "timeout": 3
              },
              "proxy": {
                "cache#": "8M",
                "config_frequency": 3600,
                "data_sender_frequency": 1,
                "debug_level": 3,
                "enable_remote_commands": 0,
                "history_cache#": "16M",
                "history_index_cache#": "4M",
                "hostname": "",
                "hostname_item": "system.hostname",
                "housekeeping_frequency": 1,
                "log_remote_commands": 0,
                "log_slow_queries": 0,
                "proxy_heartbeat_frequency": 60,
                "proxy_local_buffer": 0,
                "proxy_mode": "0",
                "proxy_offline_buffer": 1,
                "server_host": "zabbix-server",
                "server_port": 10051,
                "start_db_syncers": 4,
                "start_discoverers": 1,
                "start_http_pollers": 1,
                "start_ipmi_pollers": 0,
                "start_java_pollers": 5,
                "start_pingers": 1,
                "start_pollers": 5,
                "start_pollers_unreachable": 1,
                "start_preprocessors": 3,
                "start_trappers": 5,
                "start_vmaware_collectors": 0,
                "timeout": 4,
                "trapper_timeout": 300,
                "unavailable_delay": 60,
                "unreachable_delay": 15,
                "unreachable_period": 45,
                "vmaware_cache#": "8M",
                "vmware_frequency": 60,
                "vmware_perf_frequency": 60,
                "vmware_timeout": 10
              }
            }
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixProxySqlite",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-sqlite"
          },
          "spec": {
            "java_gateway#": 1,
            "proxy#": 1,
            "proxy_env": {
              "general": {},
              "java_gateway": {
                "debug_level": "info",
                "start_pollers": 5,
                "timeout": 3
              },
              "proxy": {
                "cache#": "8M",
                "config_frequency": 3600,
                "data_sender_frequency": 1,
                "debug_level": 3,
                "enable_remote_commands": 0,
                "history_cache#": "16M",
                "history_index_cache#": "4M",
                "hostname": "",
                "hostname_item": "system.hostname",
                "housekeeping_frequency": 1,
                "log_remote_commands": 0,
                "log_slow_queries": 0,
                "proxy_heartbeat_frequency": 60,
                "proxy_local_buffer": 0,
                "proxy_mode": "0",
                "proxy_offline_buffer": 1,
                "server_host": "zabbix-server",
                "server_port": 10051,
                "start_db_syncers": 4,
                "start_discoverers": 1,
                "start_http_pollers": 1,
                "start_ipmi_pollers": 0,
                "start_java_pollers": 5,
                "start_pingers": 1,
                "start_pollers": 5,
                "start_pollers_unreachable": 1,
                "start_preprocessors": 3,
                "start_trappers": 5,
                "start_vmaware_collectors": 0,
                "timeout": 4,
                "trapper_timeout": 300,
                "unavailable_delay": 60,
                "unreachable_delay": 15,
                "unreachable_period": 45,
                "vmaware_cache#": "8M",
                "vmware_frequency": 60,
                "vmware_perf_frequency": 60,
                "vmware_timeout": 10
              }
            }
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixServer",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-server"
          },
          "spec": {
            "java_gateway#": 1,
            "server_env": {
              "general": {
                "db_server_host": "mysql-server",
                "db_server_port": 3306,
                "history_storage_url": "",
                "mysql_database": "zabbix",
                "zabbix_mysqlsecret": "zabbix-mysqlsecret"
              },
              "java_gateway": {
                "debug_level": "info",
                "start_pollers": 5,
                "timeout": 3
              },
              "server": {
                "cache#": "8M",
                "cache_update_frequency": 60,
                "debug_level": 3,
                "history_cache#": "16M",
                "history_index_cache#": "4M",
                "history_storage_types": "",
                "housekeeping_frequency": 1,
                "log_slow_queries": 0,
                "max_housekeeper_delete": 5000,
                "proxy_config_frequency": 3600,
                "proxy_data_frequency": 1,
                "start_alerters": 3,
                "start_db_syncers": 4,
                "start_discoverers": 1,
                "start_escalators": 1,
                "start_http_pollers": 1,
                "start_ipmi_pollers": 0,
                "start_java_pollers": 5,
                "start_lld_preprocessors": 2,
                "start_pingers": 1,
                "start_pollers": 5,
                "start_pollers_unreachable": 1,
                "start_preprocessors": 3,
                "start_proxy_pollers": 0,
                "start_timers": 1,
                "start_trappers": 5,
                "start_vmaware_collectors": 0,
                "timeout": 4,
                "trapper_timeout": 300,
                "trend_cache#": "4M",
                "unavailable_delay": 60,
                "unreachable_delay": 15,
                "unreachable_period": 45,
                "value_cache#": "8M",
                "vmaware_cache#": "8M",
                "vmware_frequency": 60,
                "vmware_perf_frequency": 60,
                "vmware_timeout": 10
              },
              "web": {
                "history_storage_types": "",
                "max_execution_time": 300,
                "max_input_time": 300,
                "memory_limit": "128M",
                "post_max#": "16M",
                "server_name": "Kubernetes installation",
                "session_name": "zbx_sessionid",
                "timezone": "Europe/Riga",
                "upload_max_filesize": "2M"
              }
            },
            "web#": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zabbix/zabbixoperator-certified-bundle@sha256:7d7874dc07cdf9fa61a6377e87e836e63629e404415fd8bc98ce3fe88d3932ca",
      "bundle_path_digest": "sha256:7d7874dc07cdf9fa61a6377e87e836e63629e404415fd8bc98ce3fe88d3932ca",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "lts",
      "creation_date": "2021-05-11T16:28:20.774000+00:00",
      "csv_description": "## About this Operator\n\nZabbix helps you to real-time monitoring of millions of metrics collected from tens of thousands of servers, virtual machines and network devices.\nThe Zabbix Operator allows users to easily deploy, manage, and maintain Zabbix deployments on OpenShift. By installing this integration you will be able to deploy Zabbix server / proxies and other components with a single command.\n## Supported Features\n* **Zabbix Server** - Simple Zabbix installation with included Zabbix server, Zabbix web-interface and Zabbix Java Gateway with MySQL database support. The feature does not provide MySQL service and requires an external MySQL database. \n* **Zabbix Server (Full)** - Zabbix installation with included Zabbix server, Zabbix web-interface, Zabbix Java Gateway and MySQL server instance.\n* **Zabbix proxy (SQLite3)** - Very simple way to gain power of Zabbix proxy. The feature has  SQLite3 support for Zabbix proxies and allow to specify amount of proxies. \n* **Zabbix proxy (MySQL)** - Another option of Zabbix proxy. The option support and deliver MySQL database.\n* **Zabbix agent** - Zabbix agent can be deployed on each available node for stability and performance monitoring on remote nodes. It allows to gather metrics with full automation!\n* **Zabbix Appliance** - Zabbix appliance very simple way to test and check Zabbix features. The option provides all core components in one solution. It includes Zabbix server, Zabbix Java Gateway, Zabbix web-interface and MySQL server in deployment. It is very useful for testing Zabbix features!\n## Prerequisites\nAll deployment options are require additional information during deployment. Please, check the following instructions and provide required configuration:\n* **Zabbix Server** - MySQL database host information and MySQL database credentials in specially formatted *Secret*. Additionally it is possible to specify SSL certificates for HTTPS support in *Secret*.\n* **Zabbix Server (Full)** - MySQL database credentials in specially formatted *Secret*. MySQL database volume name information. Additionally it is possible to specify SSL certificates for HTTPS support in *Secret*.\n* **Zabbix proxy (SQLite3)** - Zabbix server host information only.\n* **Zabbix proxy (MySQL)** - MySQL database credentials in specially formatted *Secrets* and Zabbix server host information.\n* **Zabbix agent** - Zabbix server host information only for outgoing and incoming connections. Zabbix agent uses \"privileged\" mode to monitor node resources! For example, running processes.\n* **Zabbix Appliance** - MySQL database credentials in specially formatted *Secret*. MySQL database volume name information. Additionally it is possible to specify SSL certificates for HTTPS support in *Secret*.\n### MySQL credentials\n```\nkind: Secret\napiVersion: v1\nmetadata:\n  name: zabbix-full-secrets\ndata:\n  mysql_root_password: emFiYml4X3N1cGVyX3Jvb3Q= [1]\n  mysql_zabbix_password: emFiYml4X3VzZXJfcGFzc3dvcmQ= [2]\n  mysql_zabbix_username: emFiYml4 [3]\ntype: Opaque\n```\nUsing MySQL root password (*mysqlrootpassword* [1]) Zabbix server / proxy will try to create MySQL database schema with grant permissions to *mysqlzabbixusername* [2] and *mysqlzabbixpassword* [3].\n### SSL certificates for HTTPS\n```\nkind: Secret\napiVersion: v1\nmetadata:\n  name: zabbix-web-sslsecret\ndata:\n  ssl.crt: >-\n   < ssl.crt data>\n  ssl.key: >-\n\t < ssl.key data >\n  dhparam.pem: >-\n   <  dhparam.pem data >\n```\nFiles *ssl.crt*, *ssl.key* and *dhparam.perm* are required for Zabbix web-interface for SSL support.\n",
      "csv_display_name": "Zabbix Operator",
      "csv_metadata_description": "Zabbix operator with multiple deployment variants and different components",
      "csv_name": "zabbix-operator-certified.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:59:57.446000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "zabbix-operator-certified",
      "provided_apis": [
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixProxyMysql",
          "plural": "zabbixproxymysqls",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixProxySqlite",
          "plural": "zabbixproxysqlites",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixServer",
          "plural": "zabbixservers",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixAgent",
          "plural": "zabbixagents",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixAppliance",
          "plural": "zabbixappliances",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixFull",
          "plural": "zabbixfulls",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:dc8134da93182b25df75d7a4faef4dd89daaf7aa2ed123e823288ba6c20024a8",
          "image": "registry.connect.redhat.com/zabbix/zabbixoperator-certified@sha256:dc8134da93182b25df75d7a4faef4dd89daaf7aa2ed123e823288ba6c20024a8",
          "name": "zabbixoperator-certified-dc8134da93182b25df75d7a4faef4dd89daaf7aa2ed123e823288ba6c20024a8-annotation"
        },
        {
          "digest": "sha256:dc8134da93182b25df75d7a4faef4dd89daaf7aa2ed123e823288ba6c20024a8",
          "image": "registry.connect.redhat.com/zabbix/zabbixoperator-certified@sha256:dc8134da93182b25df75d7a4faef4dd89daaf7aa2ed123e823288ba6c20024a8",
          "name": "ansible"
        },
        {
          "digest": "sha256:dc8134da93182b25df75d7a4faef4dd89daaf7aa2ed123e823288ba6c20024a8",
          "image": "registry.connect.redhat.com/zabbix/zabbixoperator-certified@sha256:dc8134da93182b25df75d7a4faef4dd89daaf7aa2ed123e823288ba6c20024a8",
          "name": "operator"
        },
        {
          "digest": "sha256:de59da362dde4f403eb15dade8495b2a8b549a6afd569c075a2f312c9567cc75",
          "image": "registry.connect.redhat.com/zabbix/zabbix-server-mysql-44@sha256:de59da362dde4f403eb15dade8495b2a8b549a6afd569c075a2f312c9567cc75",
          "name": "zbx_server_mysql"
        },
        {
          "digest": "sha256:bbf3b2dc5b24837006de1dbc79df4f94173eb5945afed496ea26b860335cb883",
          "image": "registry.connect.redhat.com/zabbix/zabbix-web-mysql-44@sha256:bbf3b2dc5b24837006de1dbc79df4f94173eb5945afed496ea26b860335cb883",
          "name": "zbx_web_mysql"
        },
        {
          "digest": "sha256:d28e52b7cfa127d35a0096083a902c29cb3b684f94c0e3032b1921cd2ebece70",
          "image": "registry.connect.redhat.com/zabbix/zabbix-java-gateway-44@sha256:d28e52b7cfa127d35a0096083a902c29cb3b684f94c0e3032b1921cd2ebece70",
          "name": "zbx_java_gateway"
        },
        {
          "digest": "sha256:8c738d2a29f6377cca80407bafa15b1973aa91841c36b7611e042bf026b3c51b",
          "image": "registry.connect.redhat.com/zabbix/zabbix-proxy-mysql-44@sha256:8c738d2a29f6377cca80407bafa15b1973aa91841c36b7611e042bf026b3c51b",
          "name": "zbx_proxy_mysql"
        },
        {
          "digest": "sha256:207f6c7c2082bb9c3a8e8992ef491ba6a1377cc7774729a9ec21cfbc6df1a140",
          "image": "registry.connect.redhat.com/zabbix/zabbix-proxy-sqlite-44@sha256:207f6c7c2082bb9c3a8e8992ef491ba6a1377cc7774729a9ec21cfbc6df1a140",
          "name": "zbx_proxy_sqlite"
        },
        {
          "digest": "sha256:2365eb7528fc1202c9b4b8215bc2373876707b809d57070c01b4bbca0072f536",
          "image": "registry.connect.redhat.com/zabbix/zabbix-agent-44@sha256:2365eb7528fc1202c9b4b8215bc2373876707b809d57070c01b4bbca0072f536",
          "name": "zbx_agent"
        },
        {
          "digest": "sha256:6d02d263e07c627cd74a19162283fbe787d2fdcf4d461b7c0f57d3df903022cf",
          "image": "registry.connect.redhat.com/zabbix/zabbix-appliance-44@sha256:6d02d263e07c627cd74a19162283fbe787d2fdcf4d461b7c0f57d3df903022cf",
          "name": "zbx_appliance"
        },
        {
          "digest": "sha256:d32eebc9ffdd6bf98efa264117667343b6cd1fab6fe69f261919542a6700ff71",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:d32eebc9ffdd6bf98efa264117667343b6cd1fab6fe69f261919542a6700ff71",
          "name": "db_mysql"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "609ab0a5e2b160d361d251d3",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/memsql/operator-bundle@sha256:1a400322ed8279e6ded73c7fd89c3cc5df2f74ebede9d192017268166a2bb97e",
      "bundle_path_digest": "sha256:1a400322ed8279e6ded73c7fd89c3cc5df2f74ebede9d192017268166a2bb97e",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:28:21.027000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "memsql-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:12:28.341000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "memql-certified",
      "provided_apis": [
        {
          "group": "memsql.com",
          "kind": "MemsqlCluster",
          "plural": "memsqlclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "609ab0a5e2b160d361d251d4",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/kubemq/kubemq-operator-bundle@sha256:fce2e20216b3adcb191be3b55f9a5e4505e021a0ffd495a89ef00466f4ada722",
      "bundle_path_digest": "sha256:fce2e20216b3adcb191be3b55f9a5e4505e021a0ffd495a89ef00466f4ada722",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:28:21.152000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "kubemq-operator.v0.5.3",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:05:21.908000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "kubemq-operator-marketplace",
      "provided_apis": [
        {
          "group": "core.k8s.kubemq.io",
          "kind": "KubemqCluster",
          "plural": "kubemqclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.k8s.kubemq.io",
          "kind": "KubemqDashboard",
          "plural": "kubemqdashboards",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.5.3",
      "version_original": "0.5.3"
    },
    {
      "_id": "609ab0a63048c1ac9a6feb56",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator-bundle@sha256:b9d8f05aa217db6847aed2b06cff677777bbdd5606191b832ff53000dea489cd",
      "bundle_path_digest": "sha256:b9d8f05aa217db6847aed2b06cff677777bbdd5606191b832ff53000dea489cd",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:28:22.150000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "aws-sources-operator.v0.2.2",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:34:21.029000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "aws-event-sources-operator-certified",
      "provided_apis": [
        {
          "group": "sources.triggermesh.com",
          "kind": "AwsEventSources",
          "plural": "awseventsources",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.2.2",
      "version_original": "0.2.2"
    },
    {
      "_id": "609ab0acd04af0e74bb058d7",
      "alm_examples": [
        {
          "api_version": "tufin.io/v1alpha1",
          "kind": "Orca",
          "metadata": {
            "name": "orca"
          },
          "spec": {
            "components": {
              "conntrack": true,
              "dns": false,
              "istio": false,
              "kube-network-policy": true,
              "pusher": true,
              "syslog": false,
              "watcher": true
            },
            "domain": "generic-bank",
            "endpoints": {
              "guru": "guru.tufin.io:443",
              "orca": "https://orca.tufin.io",
              "registry": "registry.tufin.io"
            },
            "ignored_config_maps": [
              "kube-system/ingress-gce-lock",
              "istio-system/istio-ingress-controller-leader-istio"
            ],
            "images": {
              "kite": "registry.connect.redhat.com/tufin/kite",
              "monitor": "registry.connect.redhat.com/tufin/monitor"
            },
            "kube_platform": "Openshift",
            "namespace": "tufin-system",
            "project": "openshift4"
          }
        },
        {
          "api_version": "networking.tufin.io/v1",
          "kind": "Policy",
          "metadata": {
            "name": "orca",
            "namespace": "placeholder"
          },
          "spec": {
            "mode": "learning",
            "networkPolicyAllowAll": true,
            "rules": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tufin/orca-operator-bundle@sha256:95250ad63b44b9c3c4cca17514d4fa0396c7a8f1d0c5394383c70f4cee653cfa",
      "bundle_path_digest": "sha256:95250ad63b44b9c3c4cca17514d4fa0396c7a8f1d0c5394383c70f4cee653cfa",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-05-11T16:28:28.160000+00:00",
      "csv_description": "Tufin SecureCloud is a cloud-based security monitoring and enforcement platform for Kubernetes clusters, containers and microservices.\nThe SecureCloud Operator installs SecureCloud resources into your cluster. These work with the SecureCloud cloud application to give the following functionality:\n* Monitor the cluster configuration: namespaces, containers, pods, services, network policies etc.\n* Learn and visualize the cluster connectivity\n* Build a connectivity policy (whitelist)\n* Generate audit reports\n* Alert on unauthorized connections\n* Enforce the connectivity policy in the cluster and on enterpise firewalls surrounding the cluster\n* Integrate into the CI/CD pipeline to learn and update the policy continuously\n* Scan images for vulnerabilities\n## Deploying the agent\n* Sign up to SecureCloud [here] (https://www.tufin.com/tufin-orchestration-suite/securecloud)\n* You will be sent an email containing your deployment parameters\n* Complete the deployment following the instructions for generating the agent's secret [here] (https://github.com/Tufin/orca-operator/blob/master/README.md)",
      "csv_display_name": "Tufin SecureCloud Operator",
      "csv_metadata_description": "Installs the SecureCloud Agent on the cluster. SecureCloud is a cloud-based security monitoring and enforcement platform for Kubernetes.",
      "csv_name": "orca-operator.v1.0.193",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:47:14.326000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "orca",
      "provided_apis": [
        {
          "group": "networking.tufin.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "tufin.io",
          "kind": "Orca",
          "plural": "orcas",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:dfe69f95b629f1380879eee8e09dc1d51ebecf2a9cae18b254a3da6fd0f2951f",
          "image": "registry.connect.redhat.com/tufin/orca-operator@sha256:dfe69f95b629f1380879eee8e09dc1d51ebecf2a9cae18b254a3da6fd0f2951f",
          "name": "orca-operator-dfe69f95b629f1380879eee8e09dc1d51ebecf2a9cae18b254a3da6fd0f2951f-annotation"
        },
        {
          "digest": "sha256:e11c104f8e63564ba49cdad09b282dd0dcd1ce2e8a1e4384da0d9e51d089ed9c",
          "image": "registry.connect.redhat.com/tufin/orca-operator@sha256:e11c104f8e63564ba49cdad09b282dd0dcd1ce2e8a1e4384da0d9e51d089ed9c",
          "name": "orca-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.193",
      "version_original": "1.0.193"
    },
    {
      "_id": "609ab0af3048c1ac9a6feb57",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "bundle_path_digest": "sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2021-05-11T16:28:31.002000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:16:51.044000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "image": "redislabs/operator@sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "name": "operator-fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2-annotation"
        },
        {
          "digest": "sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.6-11",
      "version_original": "6.0.6-11"
    },
    {
      "_id": "609ab0afe2b160d361d251d6",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "bundle_path_digest": "sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "capabilities": [
        ""
      ],
      "channel_name": "6.0.12",
      "creation_date": "2021-05-11T16:28:31.726000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-11",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T16:59:59.949000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.6-11",
      "version_original": "6.0.6-11"
    },
    {
      "_id": "609ab0b0e2b160d361d251d7",
      "alm_examples": [
        {
          "api_version": "sources.triggermesh.com/v1alpha1",
          "kind": "AwsEventSources",
          "metadata": {
            "name": "awseventsources"
          },
          "spec": {
            "adapters": {
              "awscodecommit": {
                "image": "registry.connect.redhat.com/triggermesh/awscodecommitsource@sha256:68f93f9fe61a6add05c46df10caf65e80659fa232357bb7f05f89cb2e1f2ad86"
              },
              "awscognitoidentity": {
                "image": "registry.connect.redhat.com/triggermesh/awscognitoidentitysource@sha256:f578c8f9fb18bc4e1ee51b93e98eb8c0c7f92c088eddc12e14fd40736056651f"
              },
              "awscognitouserpool": {
                "image": "registry.connect.redhat.com/triggermesh/awscognitouserpoolsource@sha256:7a00f2251d2577ff76ef8197edf1eea6918c7dbc10688b7b68a6d9e12266faeb"
              },
              "awsdynamodb": {
                "image": "registry.connect.redhat.com/triggermesh/awsdynamodbsource@sha256:e3a2e72cc371478fea1c57c1dd72d4004e72755acc879b6b064832cc56c7ca18"
              },
              "awskinesis": {
                "image": "registry.connect.redhat.com/triggermesh/awskinesissource@sha256:9956ede20b6a8cb9492e5cb2f28ffbc3029ae28740bda6e1a2d6aa0b213825e0"
              },
              "awssns": {
                "image": "registry.connect.redhat.com/triggermesh/awssnssource@sha256:478b0bcff5e283b7e52c9b9bd3f35040f3301629ad67c1522f293b1dbf65dfb4"
              },
              "awssqs": {
                "image": "registry.connect.redhat.com/triggermesh/awssqssource@sha256:5a0ee2e4708afbef3699bf5f1f80686d6f3467d400dc633e4cf90a397ada00e2"
              }
            },
            "affinity": {},
            "fullnameOverride": "",
            "image": {
              "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-controller@sha256:10063c1996c642da69ebbacea677098e27ecd68245dec2d5a4853130a48b46f4",
              "pullPolicy": "IfNotPresent"
            },
            "imagePullSecrets": [],
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "rbac": {
              "create": true
            },
            "resources": {
              "requests": {
                "cpu": "20m",
                "memory": "20Mi"
              }
            },
            "securityContext": {},
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator-bundle@sha256:b9d8f05aa217db6847aed2b06cff677777bbdd5606191b832ff53000dea489cd",
      "bundle_path_digest": "sha256:b9d8f05aa217db6847aed2b06cff677777bbdd5606191b832ff53000dea489cd",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:28:32.303000+00:00",
      "csv_description": "The TriggerMesh AWS Sources operator provides a collection of API's that enables to consume events that happen in your AWS services and send them to containers, microservices and functions running in your cluster.\n\n## Prerequisites\n\nThe TriggerMesh AWS Sources operator depends on the Knative API's provided by the Red Hat OpenShift Serverless operator. For more information, see the documentation on [Installing OpenShift Serverless](https://access.redhat.com/documentation/en-us/openshift_container_platform/4.3/html/serverless_applications/installing-openshift-serverless-1).\n\n## Supported Event Sources\n\n- **AWS CodeCommit event source**: Consume messages from a AWS CodeCommit repository and send them as CloudEvents to an arbitrary event sink.\n- **AWS Cognito Identity event source**: Consume messages from a AWS Cognito identity pool and send them as CloudEvents to an arbitrary event sink.\n- **AWS Cognito UserPool event source**: Consume messages from a AWS Cognito identity pool and send them as CloudEvents to an arbitrary event sink.\n- **AWS DynamoDB event source**: Consume messages from a AWS DynamoDB stream and send them as CloudEvents to an arbitrary event sink.\n- **AWS Kinesis event source**: Consume messages from a AWS Kinesis data stream and send them as CloudEvents to an arbitrary event sink.\n- **AWS SNS event source**: Subscribes to messages from a AWS SNS topic and send them as CloudEvents to an arbitrary event sink.\n- **AWS SQS event source**: Consume messages from a AWS SQS queue and sends them as CloudEvents to an arbitrary event sink.\n\n## Installation\n\nSee the documentation on [Installing TriggerMesh AWS Sources](https://github.com/triggermesh/aws-sources-operator/blob/master/README.md)\n\n## Getting Started\n\nSee the documentation on [Getting Started](https://github.com/triggermesh/aws-event-sources/blob/master/README.md)\n",
      "csv_display_name": "AWS Sources Operator",
      "csv_metadata_description": "Provides a collection of API's that enables to consume events that happen in your AWS services and send them to containers, microservices and functions running in your cluster.",
      "csv_name": "aws-sources-operator.v0.2.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:05:57.531000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "aws-event-sources-operator-certified",
      "provided_apis": [
        {
          "group": "sources.triggermesh.com",
          "kind": "AwsEventSources",
          "plural": "awseventsources",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4ee562cecbaeb53aa2a77bc572320fab8b5e446c332d0794089f5d7f61a65aef",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator@sha256:4ee562cecbaeb53aa2a77bc572320fab8b5e446c332d0794089f5d7f61a65aef",
          "name": "aws-event-sources-operator-4ee562cecbaeb53aa2a77bc572320fab8b5e446c332d0794089f5d7f61a65aef-annotation"
        },
        {
          "digest": "sha256:4ee562cecbaeb53aa2a77bc572320fab8b5e446c332d0794089f5d7f61a65aef",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator@sha256:4ee562cecbaeb53aa2a77bc572320fab8b5e446c332d0794089f5d7f61a65aef",
          "name": "aws-sources-operator"
        },
        {
          "digest": "sha256:10063c1996c642da69ebbacea677098e27ecd68245dec2d5a4853130a48b46f4",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-controller@sha256:10063c1996c642da69ebbacea677098e27ecd68245dec2d5a4853130a48b46f4",
          "name": "aws-event-sources-controller-10063c1996c642da69ebbacea677098e27ecd68245dec2d5a4853130a48b46f4-annotation"
        },
        {
          "digest": "sha256:5a0ee2e4708afbef3699bf5f1f80686d6f3467d400dc633e4cf90a397ada00e2",
          "image": "registry.connect.redhat.com/triggermesh/awssqssource@sha256:5a0ee2e4708afbef3699bf5f1f80686d6f3467d400dc633e4cf90a397ada00e2",
          "name": "awssqssource-5a0ee2e4708afbef3699bf5f1f80686d6f3467d400dc633e4cf90a397ada00e2-annotation"
        },
        {
          "digest": "sha256:478b0bcff5e283b7e52c9b9bd3f35040f3301629ad67c1522f293b1dbf65dfb4",
          "image": "registry.connect.redhat.com/triggermesh/awssnssource@sha256:478b0bcff5e283b7e52c9b9bd3f35040f3301629ad67c1522f293b1dbf65dfb4",
          "name": "awssnssource-478b0bcff5e283b7e52c9b9bd3f35040f3301629ad67c1522f293b1dbf65dfb4-annotation"
        },
        {
          "digest": "sha256:9956ede20b6a8cb9492e5cb2f28ffbc3029ae28740bda6e1a2d6aa0b213825e0",
          "image": "registry.connect.redhat.com/triggermesh/awskinesissource@sha256:9956ede20b6a8cb9492e5cb2f28ffbc3029ae28740bda6e1a2d6aa0b213825e0",
          "name": "awskinesissource-9956ede20b6a8cb9492e5cb2f28ffbc3029ae28740bda6e1a2d6aa0b213825e0-annotation"
        },
        {
          "digest": "sha256:e3a2e72cc371478fea1c57c1dd72d4004e72755acc879b6b064832cc56c7ca18",
          "image": "registry.connect.redhat.com/triggermesh/awsdynamodbsource@sha256:e3a2e72cc371478fea1c57c1dd72d4004e72755acc879b6b064832cc56c7ca18",
          "name": "awsdynamodbsource-e3a2e72cc371478fea1c57c1dd72d4004e72755acc879b6b064832cc56c7ca18-annotation"
        },
        {
          "digest": "sha256:7a00f2251d2577ff76ef8197edf1eea6918c7dbc10688b7b68a6d9e12266faeb",
          "image": "registry.connect.redhat.com/triggermesh/awscognitouserpoolsource@sha256:7a00f2251d2577ff76ef8197edf1eea6918c7dbc10688b7b68a6d9e12266faeb",
          "name": "awscognitouserpoolsource-7a00f2251d2577ff76ef8197edf1eea6918c7dbc10688b7b68a6d9e12266faeb-annotation"
        },
        {
          "digest": "sha256:f578c8f9fb18bc4e1ee51b93e98eb8c0c7f92c088eddc12e14fd40736056651f",
          "image": "registry.connect.redhat.com/triggermesh/awscognitoidentitysource@sha256:f578c8f9fb18bc4e1ee51b93e98eb8c0c7f92c088eddc12e14fd40736056651f",
          "name": "awscognitoidentitysource-f578c8f9fb18bc4e1ee51b93e98eb8c0c7f92c088eddc12e14fd40736056651f-annotation"
        },
        {
          "digest": "sha256:68f93f9fe61a6add05c46df10caf65e80659fa232357bb7f05f89cb2e1f2ad86",
          "image": "registry.connect.redhat.com/triggermesh/awscodecommitsource@sha256:68f93f9fe61a6add05c46df10caf65e80659fa232357bb7f05f89cb2e1f2ad86",
          "name": "awscodecommitsource-68f93f9fe61a6add05c46df10caf65e80659fa232357bb7f05f89cb2e1f2ad86-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.2.2",
      "version_original": "0.2.2"
    },
    {
      "_id": "609ab0b1e2b160d361d251d9",
      "alm_examples": [
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCluster",
          "metadata": {
            "name": "cb-example"
          },
          "spec": {
            "backup": {
              "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              },
              "serviceAccountName": "couchbase-backup"
            },
            "buckets": {
              "managed": true,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            },
            "cluster": {
              "analyticsServiceMemoryQuota": "1Gi",
              "autoCompaction": {
                "databaseFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                },
                "parallelCompaction": false,
                "timeWindow": {
                  "abortCompactionOutsideWindow": true,
                  "end": "06:00",
                  "start": "02:00"
                },
                "tombstonePurgeInterval": "72h",
                "viewFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                }
              },
              "autoFailoverMaxCount": 3,
              "autoFailoverOnDataDiskIssues": true,
              "autoFailoverOnDataDiskIssuesTimePeriod": "120s",
              "autoFailoverServerGroup": false,
              "autoFailoverTimeout": "120s",
              "clusterName": "cb-example",
              "dataServiceMemoryQuota": "256Mi",
              "eventingServiceMemoryQuota": "256Mi",
              "indexServiceMemoryQuota": "256Mi",
              "indexStorageSetting": "memory_optimized",
              "searchServiceMemoryQuota": "256Mi"
            },
            "image": "registry.connect.redhat.com/couchbase/server@sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
            "logRetentionCount": 20,
            "logRetentionTime": "604800s",
            "monitoring": {
              "prometheus": {
                "enabled": false,
                "image": "registry.connect.redhat.com/couchbase/exporter@sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df"
              }
            },
            "networking": {
              "adminConsoleServiceType": "NodePort",
              "adminConsoleServices": [
                "data"
              ],
              "exposeAdminConsole": true,
              "exposedFeatureServiceType": "NodePort",
              "exposedFeatures": [
                "xdcr"
              ]
            },
            "security": {
              "adminSecret": "cb-example-auth",
              "rbac": {
                "managed": true,
                "selector": {
                  "matchLabels": {
                    "cluster": "cb-example"
                  }
                }
              }
            },
            "servers": [
              {
                "name": "all_services",
                "services": [
                  "data",
                  "index",
                  "query",
                  "search",
                  "eventing",
                  "analytics"
                ],
                "size": 3
              }
            ],
            "xdcr": {
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "default"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "enableIndexReplica": true,
            "evictionPolicy": "valueOnly",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseEphemeralBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "ephemeral-bucket"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "evictionPolicy": "noEviction",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseMemcachedBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "memcached-bucket"
          },
          "spec": {
            "enableFlush": false,
            "memoryQuota": "100Mi"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseUser",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-user"
          },
          "spec": {
            "authDomain": "local",
            "authSecret": "cb-example-auth",
            "fullName": "My User"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseGroup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-group"
          },
          "spec": {
            "roles": [
              {
                "bucket": "default",
                "name": "bucket_admin"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseRoleBinding",
          "metadata": {
            "name": "my-role-binding"
          },
          "spec": {
            "roleRef": {
              "kind": "CouchbaseGroup",
              "name": "my-group"
            },
            "subjects": [
              {
                "kind": "CouchbaseUser",
                "name": "my-user"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseReplication",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-replication"
          },
          "spec": {
            "bucket": "default",
            "compressionType": "Snappy",
            "filterExpression": "",
            "paused": false,
            "remoteBucket": "default"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-backup"
          },
          "spec": {
            "backOffLimit": 2,
            "backupRetention": "24h",
            "failedJobsHistoryLimit": 3,
            "full": {
              "schedule": "0 3 * * 6"
            },
            "incremental": {
              "schedule": "0 3 * * 1-6"
            },
            "logRetention": "24h",
            "size": "5Gi",
            "strategy": "full_incremental",
            "successfulJobsHistoryLimit": 1
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackupRestore",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-restore"
          },
          "spec": {
            "backOffLimit": 2,
            "backup": "cb-backup",
            "end": {
              "int": 1
            },
            "logRetention": "24h",
            "repo": "cb-example-2020-10-29T19_00_03",
            "start": {
              "int": 1
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:10ec7cafa6c4be66ea634b88e10a2b136fcd3322cad00309a7ccef455679c6ba",
      "bundle_path_digest": "sha256:10ec7cafa6c4be66ea634b88e10a2b136fcd3322cad00309a7ccef455679c6ba",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:28:33.536000+00:00",
      "csv_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments on OpenShift. By installing this integration you will be able to deply Couchbase Server clusters with a single command.\n\n## Supported Features\n\n* **Automated cluster provisioning** - Deploying a Couchbase Cluster has never been easier. Fill out a Couchbase specific configuration and let the Couchbase Operator take care of provisioning nodes and setting up cluster to your exact specification.\n\n* **On-demand scalability** - Automatically scale your cluster up or down by changing a simple configuration parameter and let the Couchbase Operator handle provisioning of new nodes and joining them into the cluster.\n\n* **Auto-recovery** - Detect Couchbase node failures, rebalance out bad nodes, and bring the cluster back up to the desired capacity. Auto-recovery is completely automated so you can sleep easy through the night knowing that the Couchbase Operator will handle any failures.\n\n* **Geo-distribution** - Replicate your data between datacenters to move data closer to the users who consume it and protect against disaster scenarios where an entire datacenter becomes unavailable.\n\n* **Persistent storage** - Define persistent network-attached storage for each node in your cluster to allow pods to be recovered even if the node they were running on is no longer available.\n\n* **Rack/zone awareness** - Tell the Couchbase Operator about availability zones in your datacenter and let the operator take care of ensuring that nodes in your cluster are deployed equally across each zone.\n\n* **Supportability** - When things go wrong, use the cbopinfo tool provided with the Couchbase Operator to collect relevant data about your Couchbase deployment so that you can quickly address issues.\n\n* **Centralized configuration management** - Manage your configuration centrally with OpenShift. Updates to the configuration are watched by the Couchbase Operator and actions are taken to make the target cluster match the desired configuration.\n## Required Parameters\n* `authSecret` - provide the name of a secret that contains two keys for the `username` and `password` of the super user ([documentation](https://docs.couchbase.com/operator/1.2/couchbase-cluster-config.html))\n\n## About Couchbase Server\n\nBuilt on the most powerful NoSQL technology, Couchbase Server delivers unparalleled performance at scale, in any cloud. With features like memory-first architecture, geo-distributed deployments, and workload isolation, Couchbase Server excels at supporting mission-critical applications at scale while maintaining submillisecond latencies and 99.999% availability. Plus, with the most comprehensive SQL-compatible query language (N1QL), migrating from RDBMS to Couchbase Server is easy with ANSI joins.\n",
      "csv_display_name": "Couchbase Operator",
      "csv_metadata_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments",
      "csv_name": "couchbase-operator.v2.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:03:36.691000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "plural": "couchbasereplications",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "plural": "couchbasememcachedbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "plural": "couchbasebackuprestores",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "plural": "couchbaseephemeralbuckets",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "plural": "couchbasememcachedbuckets",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "plural": "couchbaseephemeralbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "plural": "couchbasebackuprestores",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "plural": "couchbasereplications",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:07f3e519047d62715422127be6f0678af925f30ac3625173e1bf0d41d241cbce",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:07f3e519047d62715422127be6f0678af925f30ac3625173e1bf0d41d241cbce",
          "name": "operator-07f3e519047d62715422127be6f0678af925f30ac3625173e1bf0d41d241cbce-annotation"
        },
        {
          "digest": "sha256:07f3e519047d62715422127be6f0678af925f30ac3625173e1bf0d41d241cbce",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:07f3e519047d62715422127be6f0678af925f30ac3625173e1bf0d41d241cbce",
          "name": "couchbase-operator"
        },
        {
          "digest": "sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
          "name": "couchbase_server"
        },
        {
          "digest": "sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
          "name": "couchbase_backup"
        },
        {
          "digest": "sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df",
          "name": "couchbase_metrics"
        },
        {
          "digest": "sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df",
          "name": "exporter-18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df-annotation"
        },
        {
          "digest": "sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
          "name": "operator-backup-3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78-annotation"
        },
        {
          "digest": "sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
          "name": "server-fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.0.2",
      "version_original": "2.0.2"
    },
    {
      "_id": "609ab0b5e2b160d361d251db",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:6eece28f85cc8722599979c7d460e88a8e433b9e3fee9b71285a826ef9e30862",
      "bundle_path_digest": "sha256:6eece28f85cc8722599979c7d460e88a8e433b9e3fee9b71285a826ef9e30862",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:28:37.242000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "mongodb-enterprise.v1.3.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:03:43.668000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.3.1",
      "version_original": "1.3.1"
    },
    {
      "_id": "609ab0b63048c1ac9a6feb5c",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-healthcare-hub-operator-bundle@sha256:27cb3851d88ee293c260e452670cad361800cc50b1c9ff98cd3617113b13d117",
      "bundle_path_digest": "sha256:27cb3851d88ee293c260e452670cad361800cc50b1c9ff98cd3617113b13d117",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:28:38.554000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "cortex-healthcare-hub-operator.v0.0.24",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:11:04.572000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cortex-healthcare-hub-operator",
      "provided_apis": [
        {
          "group": "hubs.cortex.cognitivescale.com",
          "kind": "Hub",
          "plural": "hubs",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.24",
      "version_original": "0.0.24"
    },
    {
      "_id": "609ab0b63048c1ac9a6feb5b",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:f1fc06ee96cc7509e5dc94ef6cd87921fbbe4b4112d9561c14ee06a426c59f91",
      "bundle_path_digest": "sha256:f1fc06ee96cc7509e5dc94ef6cd87921fbbe4b4112d9561c14ee06a426c59f91",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2021-05-11T16:28:38.548000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "neuvector-operator.v0.9.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:45:17.721000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.9.0",
      "version_original": "0.9.0"
    },
    {
      "_id": "609ab0b7e2b160d361d251dd",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-certifai-operator-bundle@sha256:26199886640c352804df4a634f5ea3e45c3c4d4e41f241e9ef36cd4b3536be57",
      "bundle_path_digest": "sha256:26199886640c352804df4a634f5ea3e45c3c4d4e41f241e9ef36cd4b3536be57",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2021-05-11T16:28:39.914000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "cortex-certifai-operator.v1.3.3",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T16:49:04.438000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "cortex-certifai-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.3.3",
      "version_original": "1.3.3"
    },
    {
      "_id": "609ab0ba3048c1ac9a6feb5e",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "bundle_path_digest": "sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "capabilities": [
        ""
      ],
      "channel_name": "6.0.20",
      "creation_date": "2021-05-11T16:28:42.986000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-6",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T16:58:40.618000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.6-6",
      "version_original": "6.0.6-6"
    },
    {
      "_id": "609ab0bde2b160d361d251e0",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/node-red-operator-bundle@sha256:bf24a03362d30d0c31b19ae0a6f9cbb3340cbee7e133c5523efc32ccc963ce0a",
      "bundle_path_digest": "sha256:bf24a03362d30d0c31b19ae0a6f9cbb3340cbee7e133c5523efc32ccc963ce0a",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:28:45.166000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "node-red-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:00:25.573000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "node-red-operator-certified",
      "provided_apis": [
        {
          "group": "nodered.com",
          "kind": "NodeRed",
          "plural": "nodereds",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "609ab0bed04af0e74bb058e0",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:50d76299c5a36c9b3ab17d37b6999b9472c56a8f462ce0b92254970de64d16cc",
      "bundle_path_digest": "sha256:50d76299c5a36c9b3ab17d37b6999b9472c56a8f462ce0b92254970de64d16cc",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:28:46.756000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "nastel-navigator-operator.v1.100105.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:36:52.101000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.100105.0",
      "version_original": "1.100105.0"
    },
    {
      "_id": "609ab0bf56933b164fe21287",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/data-explorer-operator-bundle@sha256:61317c2c85660fe4291b3945c928df375890ad00b3168b72bd71b787ef4077dc",
      "bundle_path_digest": "sha256:61317c2c85660fe4291b3945c928df375890ad00b3168b72bd71b787ef4077dc",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:28:47.666000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "data-explorer-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:46:39.005000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "data-explorer-operator-certified",
      "provided_apis": [
        {
          "group": "data-explorer.com",
          "kind": "DashboardWithJupyterHub",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "609ab0c2e2b160d361d251e2",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:cf4a0448fa22963d711bb2d3af8b56e3c356073b76233f33421121403893a859",
      "bundle_path_digest": "sha256:cf4a0448fa22963d711bb2d3af8b56e3c356073b76233f33421121403893a859",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:28:50.236000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "couchbase-operator.v1.2.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:54:52.081000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.2.1",
      "version_original": "1.2.1"
    },
    {
      "_id": "609ab0c23048c1ac9a6feb60",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.12-57.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "bundle_path_digest": "sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.20",
      "creation_date": "2021-05-11T16:28:50.941000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.12-5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:23:13.771000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator-b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f-annotation"
        },
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.12-5",
      "version_original": "6.0.12-5"
    },
    {
      "_id": "609ab0c43048c1ac9a6feb61",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "bundle_path_digest": "sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "capabilities": [
        ""
      ],
      "channel_name": "6.0.20",
      "creation_date": "2021-05-11T16:28:52.133000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-11",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:19:58.692000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.6-11",
      "version_original": "6.0.6-11"
    },
    {
      "_id": "609ab0c4e2b160d361d251e3",
      "alm_examples": [
        {
          "api_version": "instana.io/v1beta1",
          "kind": "InstanaAgent",
          "metadata": {
            "name": "instana-agent",
            "namespace": "instana-agent"
          },
          "spec": {
            "agent.endpoint.host": "ingress-red-saas.instana.io",
            "agent.endpoint.port": 443,
            "agent.env": {
              "INSTANA_AGENT_TAGS": "example"
            },
            "agent.key": "replace-me",
            "agent.zone.name": "my-zone",
            "cluster.name": "replace-me",
            "config.files": {
              "configuration.yaml": "# You can leave this empty, or use this to configure your instana agent.\n# See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/instana/instana-agent-operator-bundle@sha256:e007bfb95d0e0498967a466dd482002181f4ae797a98d2b5d9bed751defc04b6",
      "bundle_path_digest": "sha256:e007bfb95d0e0498967a466dd482002181f4ae797a98d2b5d9bed751defc04b6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-05-11T16:28:52.517000+00:00",
      "csv_description": "# Instana\n\nInstana is an [APM solution](https://www.instana.com/product-overview/) built for microservices that enables IT Ops to build applications faster and deliver higher quality services by automating monitoring, tracing and root cause analysis. The solution is optimized for [Kubernetes](https://www.instana.com/automatic-kubernetes-monitoring/) and [OpenShift](https://www.instana.com/blog/automatic-root-cause-analysis-for-openshift-applications/).\n\n## Instana Agent Operator\n\nThis is the Kubernetes Operator for installing the Instana Agent on Kubernetes or OpenShift.\n\n## Prerequisites for OpenShift\n\nBefore the agent will be able to run in OpenShift, you need to perform a couple of extra configuration steps.\n\nYou need to set up a project for the Instana Agent and configure it's permissions.\n\nThe project you create here needs to be the namespace where you create the Instana Agent custom resource that the operator will use to deploy the agent.\n\nFor example, create the `instana-agent` project:\n\n    oc new-project instana-agent\n\nThen, ensure the `instana-agent` service account is in the privileged security context:\n\n    oc adm policy add-scc-to-user privileged -z instana-agent\n\nThis service account will be created by the operator.\n\nNow you can proceed with installing the operator for the Instana agent.\n\n## Installation and Configuration\n\nFirst, install this operator from [OperatorHub.io](https://operatorhub.io/), [OpenShift Container Platform](https://www.openshift.com/), or [OKD](https://www.okd.io/).\n\nSecond, create the target namespace where the Instana agent should be installed. The agent does not need to run in the same namespace as the operator. Most users create a new namespace `instana-agent` for running the agents.\n\nThird, create a custom resource with the agent configuration in the target namespace. The operator will pick up the custom resource and install the Instana agent accordingly.\n\nThe following is a minimal template of the custom resource:\n\n```yaml\napiVersion: instana.io/v1beta1\nkind: InstanaAgent\nmetadata:\n  name: instana-agent\n  namespace: instana-agent\nspec:\n  agent.zone.name: my-zone # (optional) name of the zone of the host\n  agent.key: replace-me # replace with your Instana agent key\n  agent.endpoint.host: ingress-red-saas.instana.io # the monitoring ingress endpoint\n  agent.endpoint.port: 443 # the monitoring ingress endpoint port, wrapped in quotes\n  agent.env:\n    INSTANA_AGENT_TAGS: example\n  cluster.name: replace-me # replace with the name of your Kubernetes cluster\n  config.files:\n    configuration.yaml: |\n      # You can leave this empty, or use this to configure your instana agent.\n      # See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n```\n\nSave the template in a file `instana-agent.yaml` and edit the following values:\n\n* If your target namespace is not `instana-agent`, replace the `namespace:` accordingly.\n* `agent.key` must be set with your Instana agent key.\n* `agent.endpoint` must be set with the monitoring ingress endpoint, generally either `saas-us-west-2.instana.io` or `saas-eu-west-1.instana.io`.\n* `agent.endpoint.port` must be set with the monitoring ingress port, generally \"443\" (wrapped in quotes).\n* `agent.zone.name` should be set with the name of the Kubernetes cluster that is be displayed in Instana.\n\nFor advanced configuration, you can edit the contents of the `configuration.yaml` file. View documentation [here](https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/).\n\nApply the custom resource with `kubectl apply -f instana-agent.yaml`. After some time, you should see `instana-agent` Pods being created on each node of your cluster, and your cluster should show on the infrastructure map on your Instana Web interface.\n\n## Uninstalling\n\nIn order to uninstall the Instana agent, simply remove the custom resource with `kubectl delete -f instana-agent.yaml`.\n\n## Source Code\n\nThe Instana agent operator is an open source project hosted on [https://github.com/instana/instana-agent-operator](https://github.com/instana/instana-agent-operator/).\n",
      "csv_display_name": "Instana Agent Operator",
      "csv_metadata_description": "Fully automated Application Performance Monitoring (APM) for microservices.",
      "csv_name": "instana-agent-operator.v1.0.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:56:45.057000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "instana-agent",
      "provided_apis": [
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1beta1"
        },
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:2cdf1519520797b77271e2a976b75e3ee6346a3bc036d1b3a5770c6778ac575c",
          "image": "registry.connect.redhat.com/instana/instana-agent-operator@sha256:2cdf1519520797b77271e2a976b75e3ee6346a3bc036d1b3a5770c6778ac575c",
          "name": "instana-agent-operator-2cdf1519520797b77271e2a976b75e3ee6346a3bc036d1b3a5770c6778ac575c-annotation"
        },
        {
          "digest": "sha256:2cdf1519520797b77271e2a976b75e3ee6346a3bc036d1b3a5770c6778ac575c",
          "image": "registry.connect.redhat.com/instana/instana-agent-operator@sha256:2cdf1519520797b77271e2a976b75e3ee6346a3bc036d1b3a5770c6778ac575c",
          "name": "instana-agent-operator"
        },
        {
          "digest": "sha256:dfd02a82d7414d644ab6e47c28fac98b8b60737b7922ce0468ebb72e24b989f0",
          "image": "registry.connect.redhat.com/instana/agent@sha256:dfd02a82d7414d644ab6e47c28fac98b8b60737b7922ce0468ebb72e24b989f0",
          "name": "instana_agent"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.4",
      "version_original": "1.0.4"
    },
    {
      "_id": "609ab0c63048c1ac9a6feb62",
      "alm_examples": [
        {
          "api_version": "dynatrace.com/v1alpha1",
          "kind": "OneAgent",
          "metadata": {
            "name": "oneagent",
            "namespace": "dynatrace"
          },
          "spec": {
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api",
            "args": [
              "--set-app-log-content-access=true"
            ],
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists"
              }
            ]
          }
        },
        {
          "api_version": "dynatrace.com/v1alpha1",
          "kind": "OneAgentAPM",
          "metadata": {
            "name": "oneagentapm",
            "namespace": "dynatrace"
          },
          "spec": {
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator-bundle@sha256:57038e95b66d81649cb412066c70a20f94c35b6e95453baeac3dbc43b001f374",
      "bundle_path_digest": "sha256:57038e95b66d81649cb412066c70a20f94c35b6e95453baeac3dbc43b001f374",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:28:54.116000+00:00",
      "csv_description": "The Dynatrace OneAgent Operator allows users to easily deploy full-stack monitoring for [OpenShift clusters](https://www.dynatrace.com/technologies/openshift-monitoring/). The Dynatrace OneAgent automatically monitors the workload running in containers down to the code and request level.\n\n### Installing the OneAgent\nOnce you've installed the Operator, you can create OneAgent custom resources to monitor your environment.\n\nFirst, please add a Secret within the Project you've deployed the Dynatrace Operator to, which would contain your API and PaaS tokens. Create tokens of type *Dynatrace API* (`API_TOKEN`) and *Platform as a Service* (`PAAS_TOKEN`) and use their values in the following commands respectively.\n\nFor assistance please refer to [Create user-generated access tokens](https://www.dynatrace.com/support/help/shortlink/token#create-user-generated-access-tokens).\n\n``` $ oc -n <project> create secret generic oneagent --from-literal=\"apiToken=API_TOKEN\" --from-literal=\"paasToken=PAAS_TOKEN\" ```\n\nYou may update this Secret at any time to rotate the tokens.\n\nThen please add an OneAgent object in the Project where the Operator has been deployed, configured to your needs.\n\n### Required Parameters\n* `apiUrl` - provide the URL to the API of your Dynatrace environment. In Dynatrace SaaS it will look like `https://<ENVIRONMENTID>.live.dynatrace.com/api` . In Dynatrace Managed like `https://<YourDynatraceServerURL>/e/<ENVIRONMENTID>/api` .\n\n### Advanced Options\n* **Image Override** - use a copy of the OneAgent container image from a registry other than Docker's or Red Hat's\n* **NodeSelectors** - select a subset of your cluster's nodes to run the Dynatrace OneAgent on, based on labels\n* **Tolerations** - add specific tolerations to the agent so that it can monitor all of the nodes in your cluster; we include the default toleration so that Dynatrace OneAgent also monitors the master nodes\n* **Priority Class Name** - define the priorityClassName for OneAgent pods\n* **Environment variables** - define environment variables for the OneAgent container\n* **Disable Certificate Checking** - disable any certificate validation that may interact poorly with proxies with in your cluster\n* **Disable OneAgent Update** - disable the Operator's auto-update feature for OneAgent pods\n* **Enable Istio Auto-config** - automatically create Istio objects for egress communication to the Dynatrace environment from the OneAgent\n\nFor a complete list of supported parameters please consult the [Operator Deploy Guide](https://www.dynatrace.com/support/help/shortlink/openshift-deploy).\n\n### Help\nYou can find more about our instructions in our [documentation](https://www.dynatrace.com/support/help/shortlink/openshift-deploy#install-oneagent-operator).\n",
      "csv_display_name": "Dynatrace OneAgent",
      "csv_metadata_description": "Install full-stack monitoring of OpenShift clusters with the Dynatrace OneAgent.",
      "csv_name": "dynatrace-monitoring.v0.9.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:11:59.516000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "oneagent-certified",
      "provided_apis": [
        {
          "group": "dynatrace.com",
          "kind": "OneAgentAPM",
          "plural": "oneagentapms",
          "version": "v1alpha1"
        },
        {
          "group": "dynatrace.com",
          "kind": "OneAgent",
          "plural": "oneagents",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:34efabeb47f2d2c66886077ee9d91884393aab07fd6477ea0d97864765210f49",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:34efabeb47f2d2c66886077ee9d91884393aab07fd6477ea0d97864765210f49",
          "name": "dynatrace-oneagent-operator-34efabeb47f2d2c66886077ee9d91884393aab07fd6477ea0d97864765210f49-annotation"
        },
        {
          "digest": "sha256:34efabeb47f2d2c66886077ee9d91884393aab07fd6477ea0d97864765210f49",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:34efabeb47f2d2c66886077ee9d91884393aab07fd6477ea0d97864765210f49",
          "name": "dynatrace-oneagent-operator"
        },
        {
          "digest": "sha256:34efabeb47f2d2c66886077ee9d91884393aab07fd6477ea0d97864765210f49",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:34efabeb47f2d2c66886077ee9d91884393aab07fd6477ea0d97864765210f49",
          "name": "webhook"
        },
        {
          "digest": "sha256:34efabeb47f2d2c66886077ee9d91884393aab07fd6477ea0d97864765210f49",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:34efabeb47f2d2c66886077ee9d91884393aab07fd6477ea0d97864765210f49",
          "name": "bootstrapper"
        },
        {
          "digest": "sha256:7610615cb9b0855aa8dde0bff9a1ec2464e586f5bff13f607c5fd643abd890e0",
          "image": "registry.connect.redhat.com/dynatrace/oneagent@sha256:7610615cb9b0855aa8dde0bff9a1ec2464e586f5bff13f607c5fd643abd890e0",
          "name": "dynatrace_oneagent"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.9.4",
      "version_original": "0.9.4"
    },
    {
      "_id": "609ab0c8e2b160d361d251e4",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:a065ec9f129f79e21881ee4644c1e34c3f13b90bdc76d72cb76bf8216d45ee44",
      "bundle_path_digest": "sha256:a065ec9f129f79e21881ee4644c1e34c3f13b90bdc76d72cb76bf8216d45ee44",
      "capabilities": [
        ""
      ],
      "channel_name": "v1.3",
      "creation_date": "2021-05-11T16:28:56.994000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "couchdb-operator.v1.3.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:08:40.895000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": ">=1.0.0 <1.3.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.3.0",
      "version_original": "1.3.0"
    },
    {
      "_id": "609ab0cce2b160d361d251e5",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/instana/instana-agent-operator-bundle@sha256:e3bbdf42b6d8e4d5d41793209ebc8c883efee6be03273bc3fef3ce3fe0dc171a",
      "bundle_path_digest": "sha256:e3bbdf42b6d8e4d5d41793209ebc8c883efee6be03273bc3fef3ce3fe0dc171a",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2021-05-11T16:29:00.997000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "instana-agent-operator.v0.2.6",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:08:13.726000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "instana-agent",
      "provided_apis": [
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "version": "v1beta1"
        },
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.2.6",
      "version_original": "0.2.6"
    },
    {
      "_id": "609ab0cee2b160d361d251e6",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:0cc69f7bb40a40bf02485677bc01ae3768b3ae8015c4d3bd1c1d088ee487117a",
      "bundle_path_digest": "sha256:0cc69f7bb40a40bf02485677bc01ae3768b3ae8015c4d3bd1c1d088ee487117a",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2021-05-11T16:29:02.116000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "neuvector-operator.v1.2.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:19:27.299000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.2.1",
      "version_original": "1.2.1"
    },
    {
      "_id": "609ab0ce56933b164fe2128a",
      "alm_examples": [
        {
          "api_version": "elasticsearch.k8s.elastic.co/v1",
          "kind": "Elasticsearch",
          "metadata": {
            "name": "elasticsearch-sample"
          },
          "spec": {
            "nodeSets": [
              {
                "config": {
                  "node.attr.attr_name": "attr_value",
                  "node.roles": [
                    "master",
                    "data"
                  ],
                  "node.store.allow_mmap": false
                },
                "count": 3,
                "name": "default",
                "podTemplate": {
                  "metadata": {
                    "labels": {
                      "foo": "bar"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "name": "elasticsearch",
                        "resources": {
                          "limits": {
                            "cpu": 2,
                            "memory": "4Gi"
                          },
                          "requests": {
                            "cpu": 1,
                            "memory": "4Gi"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "version": "7.11.0"
          }
        },
        {
          "api_version": "kibana.k8s.elastic.co/v1",
          "kind": "Kibana",
          "metadata": {
            "name": "kibana-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "podTemplate": {
              "metadata": {
                "labels": {
                  "foo": "bar"
                }
              },
              "spec": {
                "containers": [
                  {
                    "name": "kibana",
                    "resources": {
                      "limits": {
                        "cpu": 2,
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": 0.5,
                        "memory": "1Gi"
                      }
                    }
                  }
                ]
              }
            },
            "version": "7.11.0"
          }
        },
        {
          "api_version": "apm.k8s.elastic.co/v1",
          "kind": "ApmServer",
          "metadata": {
            "name": "apmserver-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "7.11.0"
          }
        },
        {
          "api_version": "enterprisesearch.k8s.elastic.co/v1beta1",
          "kind": "EnterpriseSearch",
          "metadata": {
            "name": "ent-sample"
          },
          "spec": {
            "config": {
              "ent_search.external_url": "https://localhost:3002"
            },
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "7.11.0"
          }
        },
        {
          "api_version": "beat.k8s.elastic.co/v1beta1",
          "kind": "Beat",
          "metadata": {
            "name": "heartbeat-sample"
          },
          "spec": {
            "config": {
              "heartbeat.monitors": [
                {
                  "hosts": [
                    "elasticsearch-sample-es-http.default.svc:9200"
                  ],
                  "schedule": "@every 5s",
                  "type": "tcp"
                }
              ]
            },
            "deployment": {
              "podTemplate": {
                "spec": {
                  "securityContext": {
                    "runAsUser": 0
                  }
                }
              },
              "replicas": 1
            },
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "type": "heartbeat",
            "version": "7.11.0"
          }
        },
        {
          "api_version": "agent.k8s.elastic.co/v1alpha1",
          "kind": "Agent",
          "metadata": {
            "name": "agent-sample"
          },
          "spec": {
            "config": {
              "inputs": [
                {
                  "data_stream": {
                    "namespace": "default"
                  },
                  "meta": {
                    "package": {
                      "name": "system",
                      "version": "0.9.1"
                    }
                  },
                  "name": "system-1",
                  "revision": 1,
                  "streams": [
                    {
                      "cpu.metrics": [
                        "percentages",
                        "normalized_percentages"
                      ],
                      "data_stream": {
                        "dataset": "system.cpu",
                        "type": "metrics"
                      },
                      "id": "system/metrics-system.cpu",
                      "metricsets": [
                        "cpu"
                      ],
                      "period": "10s"
                    }
                  ],
                  "type": "system/metrics",
                  "use_output": "default"
                }
              ]
            },
            "daemonSet": {},
            "elasticsearchRefs": [
              {
                "name": "elasticsearch-sample"
              }
            ],
            "version": "7.11.0"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/elastic/eck@sha256:bb54021d424a684456facbdf599326a6a4fe3c4cde60ba478355177e215ff099",
      "bundle_path_digest": "sha256:bb54021d424a684456facbdf599326a6a4fe3c4cde60ba478355177e215ff099",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:29:02.539000+00:00",
      "csv_description": "Elastic Cloud on Kubernetes (ECK) is the official operator by Elastic for automating the deployment, provisioning, management, and orchestration of Elasticsearch, Kibana, APM Server, Beats, and Enterprise Search on Kubernetes.\n\nCurrent features:\n\n*  Elasticsearch, Kibana, APM Server, Enterprise Search, Beats and Elastic Agent deployments\n*  TLS Certificates management\n*  Safe Elasticsearch cluster configuration and topology changes\n*  Persistent volumes usage\n*  Custom node configuration and attributes\n*  Secure settings keystore updates\n\nSupported versions:\n\n* Kubernetes: 1.12+ or OpenShift 3.11+\n* Elasticsearch: 6.8+, 7.1+\n\nSee the [Quickstart](https://www.elastic.co/guide/en/cloud-on-k8s/1.4/k8s-quickstart.html) to get started with ECK.",
      "csv_display_name": "Elasticsearch (ECK) Operator",
      "csv_metadata_description": "Run Elasticsearch, Kibana, APM Server, Enterprise Search, Beats and Elastic Agent on Kubernetes and OpenShift",
      "csv_name": "elasticsearch-eck-operator-certified.v1.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:20:34.376000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "elasticsearch-eck-operator-certified",
      "provided_apis": [
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1beta1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1beta1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1alpha1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1beta1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1alpha1"
        },
        {
          "group": "beat.k8s.elastic.co",
          "kind": "Beat",
          "plural": "beats",
          "version": "v1beta1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1"
        },
        {
          "group": "agent.k8s.elastic.co",
          "kind": "Agent",
          "plural": "agents",
          "version": "v1alpha1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1beta1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4d2897e4b88403a7086f8b58788eae94960a68205ac95d6c0d68065299caf6ac",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:4d2897e4b88403a7086f8b58788eae94960a68205ac95d6c0d68065299caf6ac",
          "name": "eck-operator-4d2897e4b88403a7086f8b58788eae94960a68205ac95d6c0d68065299caf6ac-annotation"
        },
        {
          "digest": "sha256:4d2897e4b88403a7086f8b58788eae94960a68205ac95d6c0d68065299caf6ac",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:4d2897e4b88403a7086f8b58788eae94960a68205ac95d6c0d68065299caf6ac",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.4.0",
      "version_original": "1.4.0"
    },
    {
      "_id": "609ab0cf56933b164fe2128b",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:bd877b7c44e5d1d99596ecb061cf37ae47947a7411cbc4d6efe228a74a7b86fb",
      "bundle_path_digest": "sha256:bd877b7c44e5d1d99596ecb061cf37ae47947a7411cbc4d6efe228a74a7b86fb",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:29:03.604000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "mongodb-enterprise.v0.3.2",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:11:04.245000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [
        {
          "group": "mongodb.com",
          "kind": "MongoDbShardedCluster",
          "plural": "mongodbshardedclusters",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDbStandalone",
          "plural": "mongodbstandalones",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDbReplicaSet",
          "plural": "mongodbreplicasets",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.3.2",
      "version_original": "0.3.2"
    },
    {
      "_id": "609ab0d056933b164fe2128c",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-hub-operator-bundle@sha256:53ed857edafa5f90ad45ee3c67be454e8b42cc8a12fabdfcb87b93fcbb4bd1fc",
      "bundle_path_digest": "sha256:53ed857edafa5f90ad45ee3c67be454e8b42cc8a12fabdfcb87b93fcbb4bd1fc",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:29:04.821000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "cortex-hub-operator.v0.0.24",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:07:43.020000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "cortex-hub-operator",
      "provided_apis": [
        {
          "group": "hubs.cortex.cognitivescale.com",
          "kind": "Hub",
          "plural": "hubs",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.24",
      "version_original": "0.0.24"
    },
    {
      "_id": "609ab0d2d04af0e74bb058e5",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.6",
      "creation_date": "2021-05-11T16:29:06.496000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:12:29.016000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "609ab0d3d04af0e74bb058e6",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator-bundle@sha256:57038e95b66d81649cb412066c70a20f94c35b6e95453baeac3dbc43b001f374",
      "bundle_path_digest": "sha256:57038e95b66d81649cb412066c70a20f94c35b6e95453baeac3dbc43b001f374",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:29:07.062000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-monitoring.v0.9.4",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:13:20.570000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "oneagent-certified",
      "provided_apis": [
        {
          "group": "dynatrace.com",
          "kind": "OneAgentAPM",
          "plural": "oneagentapms",
          "version": "v1alpha1"
        },
        {
          "group": "dynatrace.com",
          "kind": "OneAgent",
          "plural": "oneagents",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.9.4",
      "version_original": "0.9.4"
    },
    {
      "_id": "609ab0d356933b164fe2128d",
      "alm_examples": [
        {
          "api_version": "cortex.cognitivescale.com/v1",
          "kind": "Certifai",
          "metadata": {
            "name": "default-certifai"
          },
          "spec": {
            "console": {
              "azure": {
                "account-key": "your account key",
                "account-name": "your account name",
                "sas-token": "your SAS token"
              },
              "gcs": {
                "application-credentials": "{\n  \"type\": \"\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"\",\n  \"token_uri\": \"\",\n  \"auth_provider_x509_cert_url\": \"\",\n  \"client_x509_cert_url\": \"\"\n}\n"
              },
              "replicas": 1,
              "route-type": "none",
              "s3": {
                "access-key": "your access key",
                "endpoint": "https://s3.amazonaws.com",
                "secret-key": "your secret key",
                "verify-cert": false
              },
              "scan-dir": ""
            },
            "reference-model": {
              "enabled": true
            },
            "reporting": {
              "db-conn-str": "postgresql://user:password@service:port/db",
              "enabled": true,
              "period": "*/15 * * * *"
            }
          }
        },
        {
          "api_version": "cortex.cognitivescale.com/v1",
          "kind": "CertifaiScan",
          "metadata": {
            "name": "example-certifai-scan",
            "namespace": "certifai"
          },
          "spec": {
            "scanconfig": {
              "concurrency": 4,
              "scanargs": "command line args here",
              "scandef": "definition file text here"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-certifai-operator-bundle@sha256:2ff2df4e61105cb9cc1905f504ed0e74907fcd43f85d200f729e464e824e928f",
      "bundle_path_digest": "sha256:2ff2df4e61105cb9cc1905f504ed0e74907fcd43f85d200f729e464e824e928f",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:29:07.760000+00:00",
      "csv_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production. It evaluates AI models and allows users to compare different models or model versions for the following qualities.\n* **Robustness:** measures how well models retain an outcome given changes to the data feature values. The more robust a model is, the greater the changes required to alter the outcome.\n* **Fairness by group:** measures the difference required to change the outcome for different groups implicit in a feature given the same model and dataset. For example, implicit groups male, female, and nonbinary belong to the feature, \u201cgender\u201d. A fair model shows that all 3 groups require a similar amount of change to alter the results.\n* **Explainability:** measures the average simplicity of counterfactual explanations provided for each model. An explanation that requires a single changed feature will score 100%. Explanations that require more changed features will score lower.\n* **Explanations:** display the prediction provided through the generation of counterfactuals for the change that must occur in a dataset with given restrictions to obtain a different outcome. Users can explore the entire dataset one observation at a time to understand what features changed and by how much to obtain a different result.\nSee our [documentation](https://cognitivescale.github.io/cortex-certifai/) for information about how to deploy the Certifai Operator and how to get started using our toolkit.\n## License Copyright 2020 Cognitive Scale, Inc. All Rights Reserved.\nBy downloading you agree to the terms of CognitiveScale's [End User License Agreement](https://www.cognitivescale.com/legal-information/).\n",
      "csv_display_name": "Cortex Certifai Operator",
      "csv_metadata_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production.",
      "csv_name": "cortex-certifai-operator.v1.3.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:11:18.594000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cortex-certifai-operator",
      "provided_apis": [
        {
          "group": "cortex.cognitivescale.com",
          "kind": "Certifai",
          "plural": "certifais",
          "version": "v1"
        },
        {
          "group": "cortex.cognitivescale.com",
          "kind": "CertifaiScan",
          "plural": "certifaiscans",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:ffcdc1d2a404822227b6d2cde6d7476e1cee89383868c30b32840931e6d1d5f3",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:ffcdc1d2a404822227b6d2cde6d7476e1cee89383868c30b32840931e6d1d5f3",
          "name": "cortex-certifai-operator-ffcdc1d2a404822227b6d2cde6d7476e1cee89383868c30b32840931e6d1d5f3-annotation"
        },
        {
          "digest": "sha256:968b1607812035b7af7edaf809350b9d87b4e3abfcf422145fa227c35d64d192",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:968b1607812035b7af7edaf809350b9d87b4e3abfcf422145fa227c35d64d192",
          "name": "cortex-certifai-operator"
        },
        {
          "digest": "sha256:bf26756fd43123844a5eeeb354c23213a7328e28167f51e34b9645e3a0899eef",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reference-model-server@sha256:bf26756fd43123844a5eeeb354c23213a7328e28167f51e34b9645e3a0899eef",
          "name": "refmodel"
        },
        {
          "digest": "sha256:adf22c45bec2783381b292552050bf27a8b3a7070ac920c490372e49033f6d5e",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-console@sha256:adf22c45bec2783381b292552050bf27a8b3a7070ac920c490372e49033f6d5e",
          "name": "console"
        },
        {
          "digest": "sha256:4b4ad1c7ea5365871d66e6989a28ddbd606115907ce92e6935af7d17fc3803b0",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-scanner@sha256:4b4ad1c7ea5365871d66e6989a28ddbd606115907ce92e6935af7d17fc3803b0",
          "name": "scanner"
        },
        {
          "digest": "sha256:871ea85ad1398de70f86ac0e03138901f84d9bd4ad5bd5ce050a26d634270fbf",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reporting-etl@sha256:871ea85ad1398de70f86ac0e03138901f84d9bd4ad5bd5ce050a26d634270fbf",
          "name": "reporting_etl"
        },
        {
          "digest": "sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "name": "oauth_proxy"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.3.2",
      "version_original": "1.3.2"
    },
    {
      "_id": "609ab0d43048c1ac9a6feb65",
      "alm_examples": [
        {
          "api_version": "machinelearning.seldon.io/v1",
          "kind": "SeldonDeployment",
          "metadata": {
            "name": "seldon-model"
          },
          "spec": {
            "name": "test-deployment",
            "predictors": [
              {
                "componentSpecs": [
                  {
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:482ee477c344badcaa80e850f4339db41957f9c2396ae24f9e398b67bd5c184e",
                          "name": "classifier"
                        }
                      ]
                    }
                  }
                ],
                "graph": {
                  "children": [],
                  "endpoint": {
                    "type": "REST"
                  },
                  "name": "classifier",
                  "type": "MODEL"
                },
                "name": "example",
                "replicas": 1
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-core-operator-bundle@sha256:0f91afcdf6ef68f7a103834d6bf85938f457af36d3fab2fec164476ecb711cfa",
      "bundle_path_digest": "sha256:0f91afcdf6ef68f7a103834d6bf85938f457af36d3fab2fec164476ecb711cfa",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:29:08.836000+00:00",
      "csv_description": "The Seldon operator enables for native operation of production machine learning workloads, including monitoring and operations of language-agnostic models with the benefits of real-time metrics and log analysis.\n   \n## Overview\nSeldon Core is an open source platform for deploying machine learning models on a Kubernetes cluster.\n\n* Deploy machine learning models in the cloud or on-premise.\n* Get metrics and ensure proper governance and compliance for your running machine learning models.\n* Create powerful inference graphs made up of multiple components.\n* Provide a consistent serving layer for models built using heterogeneous ML toolkits.\n\nYou can get started by following the guides in our documentation at https://docs.seldon.io/projects/seldon-core/en/latest/workflow/README.html\n",
      "csv_display_name": "Seldon Operator",
      "csv_metadata_description": "The Seldon operator for management, monitoring and operations of machine learning systems through the Seldon Engine. Once installed, the Seldon Operator provides multiple functions which facilitate the productisation, monitoring and maintenance of machine learning systems at scale.",
      "csv_name": "seldon-operator.v1.2.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:06:14.410000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "seldon-operator-certified",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha2"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha3"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:174abdbca57a34b0c102a3bf87f8640121ae28f2857411039d2fc9729f23efc0",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:174abdbca57a34b0c102a3bf87f8640121ae28f2857411039d2fc9729f23efc0",
          "name": "seldon-core-operator-174abdbca57a34b0c102a3bf87f8640121ae28f2857411039d2fc9729f23efc0-annotation"
        },
        {
          "digest": "sha256:174abdbca57a34b0c102a3bf87f8640121ae28f2857411039d2fc9729f23efc0",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:174abdbca57a34b0c102a3bf87f8640121ae28f2857411039d2fc9729f23efc0",
          "name": "manager"
        },
        {
          "digest": "sha256:f46297a51ca7b2087a7ee3d3de0312024f696474af6dec4764eeb6c2daca4247",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-executor@sha256:f46297a51ca7b2087a7ee3d3de0312024f696474af6dec4764eeb6c2daca4247",
          "name": "executor"
        },
        {
          "digest": "sha256:7560432beb443c9bcd1f72c765eff4b3c418faa6e22111eb0bb41f6e47182df6",
          "image": "registry.connect.redhat.com/seldonio/seldon-engine@sha256:7560432beb443c9bcd1f72c765eff4b3c418faa6e22111eb0bb41f6e47182df6",
          "name": "engine"
        },
        {
          "digest": "sha256:eb2b47a2f8c96604665b3d1a18d7e39b6a69dd5b061e0f867ab093afc294285c",
          "image": "registry.connect.redhat.com/seldonio/storage-initializer@sha256:eb2b47a2f8c96604665b3d1a18d7e39b6a69dd5b061e0f867ab093afc294285c",
          "name": "storage_initializer"
        },
        {
          "digest": "sha256:b370b068ea0ac1464e384549f45f9fb93da3b2970b60e0090829f384f5e9c5dc",
          "image": "registry.connect.redhat.com/seldonio/sklearnserver-rest@sha256:b370b068ea0ac1464e384549f45f9fb93da3b2970b60e0090829f384f5e9c5dc",
          "name": "sklearnserver_rest"
        },
        {
          "digest": "sha256:c835baa699e6fb3f6c7b0016d075758ce4827520c04429b032920efb7df27011",
          "image": "registry.connect.redhat.com/seldonio/sklearnserver-grpc@sha256:c835baa699e6fb3f6c7b0016d075758ce4827520c04429b032920efb7df27011",
          "name": "sklearnserver_grpc"
        },
        {
          "digest": "sha256:c8a95aae4b173db7991cbe83ca1ab1bc3165ad90fdd9de10f4998604c7dfc7a5",
          "image": "registry.connect.redhat.com/seldonio/xgboostserver-rest@sha256:c8a95aae4b173db7991cbe83ca1ab1bc3165ad90fdd9de10f4998604c7dfc7a5",
          "name": "xgboostserver_rest"
        },
        {
          "digest": "sha256:3dd28690bfdf4b19d5429a26116534c3c5cd25973b12238cd0fb1dbae8c3b8ad",
          "image": "registry.connect.redhat.com/seldonio/xgboostserver-grpc@sha256:3dd28690bfdf4b19d5429a26116534c3c5cd25973b12238cd0fb1dbae8c3b8ad",
          "name": "xgboostserver_grpc"
        },
        {
          "digest": "sha256:fa87b40b1268f12a1614762bbd83960ca13ebcf15dd4fbf0b414f33f33722719",
          "image": "registry.connect.redhat.com/seldonio/mlflowserver-rest@sha256:fa87b40b1268f12a1614762bbd83960ca13ebcf15dd4fbf0b414f33f33722719",
          "name": "mlflowserver_rest"
        },
        {
          "digest": "sha256:e085e33c822b42901dcfc9e1740126bf5432aa879b870e02c8f6ebb2195f34d7",
          "image": "registry.connect.redhat.com/seldonio/mlflowserver-grpc@sha256:e085e33c822b42901dcfc9e1740126bf5432aa879b870e02c8f6ebb2195f34d7",
          "name": "mlflowserver_grpc"
        },
        {
          "digest": "sha256:d38464683754a4c4f01f55b4bb8942df5f08429f41711638adeda82301745361",
          "image": "registry.connect.redhat.com/seldonio/tfproxy-rest@sha256:d38464683754a4c4f01f55b4bb8942df5f08429f41711638adeda82301745361",
          "name": "tfproxy_rest"
        },
        {
          "digest": "sha256:2d713271dfb7bd056d1011ceef218c76806313ce2e9afb8f92e22238038c1888",
          "image": "registry.connect.redhat.com/seldonio/tfproxy-grpc@sha256:2d713271dfb7bd056d1011ceef218c76806313ce2e9afb8f92e22238038c1888",
          "name": "tfproxy_grpc"
        },
        {
          "digest": "sha256:1dc53edc5c8d1b151782f8386c0770d0358c6397eaf42ec55ebd18f331c5ef9e",
          "image": "registry.connect.redhat.com/seldonio/tensorflow-serving@sha256:1dc53edc5c8d1b151782f8386c0770d0358c6397eaf42ec55ebd18f331c5ef9e",
          "name": "tensorflow"
        },
        {
          "digest": "sha256:e08a45f335c2ef763ac10787e4718fb4a1067d6b69ff106e8eca298fc91c3616",
          "image": "registry.connect.redhat.com/seldonio/alibiexplainer@sha256:e08a45f335c2ef763ac10787e4718fb4a1067d6b69ff106e8eca298fc91c3616",
          "name": "explainer"
        },
        {
          "digest": "sha256:350e900f1709c12c73fae170940b158e1d4ad6ce4ead9c884a763d8a27d770e2",
          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:350e900f1709c12c73fae170940b158e1d4ad6ce4ead9c884a763d8a27d770e2",
          "name": "mock_classifier"
        },
        {
          "digest": "sha256:482ee477c344badcaa80e850f4339db41957f9c2396ae24f9e398b67bd5c184e",
          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:482ee477c344badcaa80e850f4339db41957f9c2396ae24f9e398b67bd5c184e",
          "name": "mock-classifier-482ee477c344badcaa80e850f4339db41957f9c2396ae24f9e398b67bd5c184e-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.2.2",
      "version_original": "1.2.2"
    },
    {
      "_id": "609ab0d5e2b160d361d251e9",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:92f5f489e8ad0cc7e7b10bd474a86810b352b5cc95db7347ce46a676cc4dbb7e",
      "bundle_path_digest": "sha256:92f5f489e8ad0cc7e7b10bd474a86810b352b5cc95db7347ce46a676cc4dbb7e",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:29:09.502000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "mongodb-enterprise.v1.4.4",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:37:22.727000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.4.4",
      "version_original": "1.4.4"
    },
    {
      "_id": "609ab0d7d04af0e74bb058e8",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "bundle_path_digest": "sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "capabilities": [
        ""
      ],
      "channel_name": "6.0.6",
      "creation_date": "2021-05-11T16:29:11.270000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-11",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:16:06.474000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.6-11",
      "version_original": "6.0.6-11"
    },
    {
      "_id": "609ab0d8e2b160d361d251ea",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "bundle_path_digest": "sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "capabilities": [
        ""
      ],
      "channel_name": "6.0.20",
      "creation_date": "2021-05-11T16:29:12.394000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:08:16.739000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.0.8-1",
      "version_original": "6.0.8-1"
    },
    {
      "_id": "609ab0d856933b164fe2128e",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "bundle_path_digest": "sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.12",
      "creation_date": "2021-05-11T16:29:12.459000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:01:06.118000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "redislabs/operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "operator-998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b-annotation"
        },
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.6-24",
      "version_original": "6.0.6-24"
    },
    {
      "_id": "609ab0d93048c1ac9a6feb68",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1alpha1",
          "kind": "OpenshiftArtifactoryHa",
          "metadata": {
            "name": "openshiftartifactoryha"
          },
          "spec": {
            "artifactory-ha": {
              "artifactory": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/artifactory-pro",
                  "tag": "7.9.0"
                },
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE",
                "node": {
                  "replicaCount": 2,
                  "waitForPrimaryStartup": {
                    "enabled": false
                  }
                },
                "uid": "1000721030"
              },
              "database": {
                "driver": "OVERRIDE",
                "password": "OVERRIDE",
                "type": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "initContainerImage": "registry.connect.redhat.com/jfrog/init@sha256:197f5a1e7a3dd934e72a03a106f0de83e992e6926a774e26483c06fa46faeee5",
              "nginx": {
                "gid": "1000720107",
                "http": {
                  "externalPort": 80,
                  "internalPort": 8080
                },
                "https": {
                  "externalPort": 443,
                  "internalPort": 8443
                },
                "image": {
                  "registry": "registry.redhat.io",
                  "repository": "rhel8/nginx-116",
                  "tag": "latest"
                },
                "service": {
                  "ssloffload": false
                },
                "tlsSecretName": "OVERRIDE",
                "uid": "1000720104"
              },
              "postgresql": {
                "enabled": false
              },
              "waitForDatabase": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "quay.io/rhc4tp/artifactory-operator-bundle@sha256:95fd797214f4a3f2580d108287f225c1982af2741e4a96ffa787e29692073d20",
      "bundle_path_digest": "sha256:95fd797214f4a3f2580d108287f225c1982af2741e4a96ffa787e29692073d20",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:29:13.422000+00:00",
      "csv_description": "## Overview\nOpenshift Operator to deploy JFrog Artifactory Enterprise into your Openshift cluster.\n\n## Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Artifactory Enterprise Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Artifactory Enterprise Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Artifactory HA.\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\nDATABASE_TYPE\nDATABASE_DRIVER\nDATABASE_URL\nDATABASE_USER\nDATABASE_PASSWORD\n```\nMaster key and Join key must be supplied. To generate a new key for each run the command below:\n``` # Create a key export JOIN_KEY=$(openssl rand -hex 32) echo ${JOIN_KEY} ```\nTo use TLS you will need to first create a k8s tls secret to store your .crt and .key file into.\nThen supply the value of this k8s secret into the TLS_SECRET field.\nClick Create for Artifactory Enterprise to deploy into OpenShift and connect to it on the external IP exposed by the load balancer.\n",
      "csv_display_name": "JFrog Artifactory Enterprise Operator",
      "csv_metadata_description": "JFrog Artifactory Enterprise deploys Artifactory in a high availability environment across multiple pods",
      "csv_name": "artifactory-ha-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:14:03.662000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "plural": "openshiftartifactoryhas",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:376f2922911113a0e217614e1f0d26672d62258170b7ae1dcad0fdd596e035a6",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:376f2922911113a0e217614e1f0d26672d62258170b7ae1dcad0fdd596e035a6",
          "name": "artifactory-operator-376f2922911113a0e217614e1f0d26672d62258170b7ae1dcad0fdd596e035a6-annotation"
        },
        {
          "digest": "sha256:376f2922911113a0e217614e1f0d26672d62258170b7ae1dcad0fdd596e035a6",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:376f2922911113a0e217614e1f0d26672d62258170b7ae1dcad0fdd596e035a6",
          "name": "artifactory-ha-operator"
        },
        {
          "digest": "sha256:f0b061c4126f58b70ddaf39a3c5cc009be21b75ac4530ec5088a40d1e6f50e3e",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:f0b061c4126f58b70ddaf39a3c5cc009be21b75ac4530ec5088a40d1e6f50e3e",
          "name": "artifactory_image_repository"
        },
        {
          "digest": "sha256:0ba76a7b26e5ffb95b4354243337ac2b3ff84ae8637c0782631084d1b2f99a33",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:0ba76a7b26e5ffb95b4354243337ac2b3ff84ae8637c0782631084d1b2f99a33",
          "name": "nginx_image_repository"
        },
        {
          "digest": "sha256:197f5a1e7a3dd934e72a03a106f0de83e992e6926a774e26483c06fa46faeee5",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:197f5a1e7a3dd934e72a03a106f0de83e992e6926a774e26483c06fa46faeee5",
          "name": "init-197f5a1e7a3dd934e72a03a106f0de83e992e6926a774e26483c06fa46faeee5-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "609ab0d956933b164fe2128f",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-core-operator-bundle@sha256:cb77b47b96bbdc309b17468b8f644bac7206be94125d43a1609f20637937876f",
      "bundle_path_digest": "sha256:cb77b47b96bbdc309b17468b8f644bac7206be94125d43a1609f20637937876f",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:29:13.680000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "seldon-operator.v1.2.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:20:13.089000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "seldon-operator-certified",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha2"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha3"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.2.0",
      "version_original": "1.2.0"
    },
    {
      "_id": "609ab0dce2b160d361d251ec",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/data-explorer-operator-bundle@sha256:af28ac6d3c7b2f0267b54554b777a6475c6e61fb32dc09d0e5018a0709d363c7",
      "bundle_path_digest": "sha256:af28ac6d3c7b2f0267b54554b777a6475c6e61fb32dc09d0e5018a0709d363c7",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:29:16.041000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "data-explorer-operator.v0.0.5",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:37:34.676000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "data-explorer-operator-certified",
      "provided_apis": [
        {
          "group": "data-explorer.com",
          "kind": "DashboardWithJupyterHub",
          "plural": "dashboardwithjupyterhubs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.5",
      "version_original": "0.0.5"
    },
    {
      "_id": "609ab0dde2b160d361d251ed",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:c7fa6441efdf970ef645bcd0e390329b27497a920ff18c5c62baef26d06846af",
      "bundle_path_digest": "sha256:c7fa6441efdf970ef645bcd0e390329b27497a920ff18c5c62baef26d06846af",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:29:17.336000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "nastel-navigator-operator.v0.0.15",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:08:40.399000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.15",
      "version_original": "0.0.15"
    },
    {
      "_id": "609ab0e0e2b160d361d251f0",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:50d76299c5a36c9b3ab17d37b6999b9472c56a8f462ce0b92254970de64d16cc",
      "bundle_path_digest": "sha256:50d76299c5a36c9b3ab17d37b6999b9472c56a8f462ce0b92254970de64d16cc",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:29:20.409000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "nastel-navigator-operator.v1.100105.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:49:43.292000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.100105.0",
      "version_original": "1.100105.0"
    },
    {
      "_id": "609ab0e1d04af0e74bb058ec",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "bundle_path_digest": "sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "capabilities": [
        ""
      ],
      "channel_name": "6.0.6",
      "creation_date": "2021-05-11T16:29:21.670000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-11",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:08:13.392000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.0.6-11",
      "version_original": "6.0.6-11"
    },
    {
      "_id": "609ab0e2d04af0e74bb058ed",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:04e407898806a44d17138656000aa7b6114369f23aafbb58768d73d3fc37e7bc",
      "bundle_path_digest": "sha256:04e407898806a44d17138656000aa7b6114369f23aafbb58768d73d3fc37e7bc",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:29:22.866000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "mongodb-enterprise.v1.5.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:39:20.271000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.5.1",
      "version_original": "1.5.1"
    },
    {
      "_id": "609ab0e3d04af0e74bb058ee",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:0e69c29d33d5ab9d6676c6a6d5b89e57caddf44090bbabc74a12fea3005704bd",
      "bundle_path_digest": "sha256:0e69c29d33d5ab9d6676c6a6d5b89e57caddf44090bbabc74a12fea3005704bd",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:29:23.852000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "gpu-operator-certified.v1.4.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:23:09.101000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.4.0",
      "version_original": "1.4.0"
    },
    {
      "_id": "609ab0e3d04af0e74bb058ef",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:3d2a384b4f38cffc9d14f7c9f53d12e55dc1e147116b608d263a7c04aed1e18d",
      "bundle_path_digest": "sha256:3d2a384b4f38cffc9d14f7c9f53d12e55dc1e147116b608d263a7c04aed1e18d",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:29:23.872000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "mongodb-enterprise.v1.5.4",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:14:27.543000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.5.4",
      "version_original": "1.5.4"
    },
    {
      "_id": "609ab0e856933b164fe21290",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/memsql/operator-bundle@sha256:43d4b83cd44b220ff97974e49f5a451f93058bbf5ed52ef8a650f199bdc0ebdb",
      "bundle_path_digest": "sha256:43d4b83cd44b220ff97974e49f5a451f93058bbf5ed52ef8a650f199bdc0ebdb",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:29:28.143000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "memsql-operator.v0.0.3",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:16:57.713000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "memql-certified",
      "provided_apis": [
        {
          "group": "memsql.com",
          "kind": "MemsqlCluster",
          "plural": "memsqlclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.3",
      "version_original": "0.0.3"
    },
    {
      "_id": "609ab0e8e2b160d361d251f5",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:4474b295785b6a10e82cf34f266022dbcc70897b2c12f07024fb86f035994eb8",
      "bundle_path_digest": "sha256:4474b295785b6a10e82cf34f266022dbcc70897b2c12f07024fb86f035994eb8",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:29:28.227000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "mongodb-enterprise.v0.9.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:21:40.155000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [
        {
          "group": "mongodb.com",
          "kind": "MongoDbReplicaSet",
          "plural": "mongodbreplicasets",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDbShardedCluster",
          "plural": "mongodbshardedclusters",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDbStandalone",
          "plural": "mongodbstandalones",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.9.0",
      "version_original": "0.9.0"
    },
    {
      "_id": "609ab0e9e2b160d361d251f6",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-30.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "bundle_path_digest": "sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.12",
      "creation_date": "2021-05-11T16:29:29.218000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:06:42.280000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator-0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1-annotation"
        },
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.0.8-20",
      "version_original": "6.0.8-20"
    },
    {
      "_id": "609ab0f156933b164fe21293",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:f2916ae447f0b1f969f67bdbc418c17fd61887b31024a06618dbf5426cedaee7",
      "bundle_path_digest": "sha256:f2916ae447f0b1f969f67bdbc418c17fd61887b31024a06618dbf5426cedaee7",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2021-05-11T16:29:37.759000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redhat-marketplace-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:20:08.697000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "609ab0f3e2b160d361d251fd",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-core-operator-bundle@sha256:53569fdf8eecee215755dcd02d56cb906330f84e3bc1015652d9b7a1ddc01edd",
      "bundle_path_digest": "sha256:53569fdf8eecee215755dcd02d56cb906330f84e3bc1015652d9b7a1ddc01edd",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:29:39.912000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "seldonoperator.v0.1.5",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:19:37.648000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "seldon-operator-certified",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha2"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.1.5",
      "version_original": "0.1.5"
    },
    {
      "_id": "609ab0f4e2b160d361d251fe",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-fabric-operator-bundle@sha256:de8cf8423ab8ea22f2090947fb51c3091407fcca623d5a83137b266c43e00f6d",
      "bundle_path_digest": "sha256:de8cf8423ab8ea22f2090947fb51c3091407fcca623d5a83137b266c43e00f6d",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:29:40.293000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "cortex-fabric-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:03:31.504000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cortex-fabric-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Cortex5",
          "plural": "cortex5s",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "609ab0f5d04af0e74bb058f8",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/datastax/cass-operator-bundle@sha256:69fa0d76bb849918e6cc9064b2c9617d69064a345f90b89a8408a0ab0a38135b",
      "bundle_path_digest": "sha256:69fa0d76bb849918e6cc9064b2c9617d69064a345f90b89a8408a0ab0a38135b",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:29:41.574000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "cass-operator.v1.4.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:14:28.535000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cass-operator",
      "provided_apis": [
        {
          "group": "cassandra.datastax.com",
          "kind": "CassandraDatacenter",
          "plural": "cassandradatacenters",
          "version": "v1beta1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.4.0",
      "version_original": "1.4.0"
    },
    {
      "_id": "609ab0f9d04af0e74bb058fa",
      "alm_examples": [
        {
          "api_version": "instana.io/v1beta1",
          "kind": "InstanaAgent",
          "metadata": {
            "name": "instana-agent",
            "namespace": "instana-agent"
          },
          "spec": {
            "agent.endpoint.host": "ingress-red-saas.instana.io",
            "agent.endpoint.port": 443,
            "agent.env": {
              "INSTANA_AGENT_TAGS": "example"
            },
            "agent.key": "replace-me",
            "agent.zone.name": "my-zone",
            "cluster.name": "replace-me",
            "config.files": {
              "configuration.yaml": "# You can leave this empty, or use this to configure your instana agent.\n# See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/instana/instana-agent-operator-bundle@sha256:30cc380829d5185e535c6ce2862fdfbe725694e638edade24d1d2ead76f063ca",
      "bundle_path_digest": "sha256:30cc380829d5185e535c6ce2862fdfbe725694e638edade24d1d2ead76f063ca",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-05-11T16:29:45.753000+00:00",
      "csv_description": "# Instana\n\nInstana is an [APM solution](https://www.instana.com/product-overview/) built for microservices that enables IT Ops to build applications faster and deliver higher quality services by automating monitoring, tracing and root cause analysis. The solution is optimized for [Kubernetes](https://www.instana.com/automatic-kubernetes-monitoring/) and [OpenShift](https://www.instana.com/blog/automatic-root-cause-analysis-for-openshift-applications/).\n\n## Instana Agent Operator\n\nThis is the Kubernetes Operator for installing the Instana Agent on Kubernetes or OpenShift.\n\n## Prerequisites for OpenShift\n\nBefore the agent will be able to run in OpenShift, you need to perform a couple of extra configuration steps.\n\nYou need to set up a project for the Instana Agent and configure it's permissions.\n\nThe project you create here needs to be the namespace where you create the Instana Agent custom resource that the operator will use to deploy the agent.\n\nFor example, create the `instana-agent` project:\n\n    oc new-project instana-agent\n\nThen, ensure the `instana-agent` service account is in the privileged security context:\n\n    oc adm policy add-scc-to-user privileged -z instana-agent\n\nThis service account will be created by the operator.\n\nNow you can proceed with installing the operator for the Instana agent.\n\n## Installation and Configuration\n\nFirst, install this operator from [OperatorHub.io](https://operatorhub.io/), [OpenShift Container Platform](https://www.openshift.com/), or [OKD](https://www.okd.io/).\n\nSecond, create the target namespace where the Instana agent should be installed. The agent does not need to run in the same namespace as the operator. Most users create a new namespace `instana-agent` for running the agents.\n\nThird, create a custom resource with the agent configuration in the target namespace. The operator will pick up the custom resource and install the Instana agent accordingly.\n\nThe following is a minimal template of the custom resource:\n\n```yaml\napiVersion: instana.io/v1beta1\nkind: InstanaAgent\nmetadata:\n  name: instana-agent\n  namespace: instana-agent\nspec:\n  agent.zone.name: my-zone # (optional) name of the zone of the host\n  agent.key: replace-me # replace with your Instana agent key\n  agent.endpoint.host: ingress-red-saas.instana.io # the monitoring ingress endpoint\n  agent.endpoint.port: 443 # the monitoring ingress endpoint port, wrapped in quotes\n  agent.env:\n    INSTANA_AGENT_TAGS: example\n  cluster.name: replace-me # replace with the name of your Kubernetes cluster\n  config.files:\n    configuration.yaml: |\n      # You can leave this empty, or use this to configure your instana agent.\n      # See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n```\n\nSave the template in a file `instana-agent.yaml` and edit the following values:\n\n* If your target namespace is not `instana-agent`, replace the `namespace:` accordingly.\n* `agent.key` must be set with your Instana agent key.\n* `agent.endpoint` must be set with the monitoring ingress endpoint, generally either `saas-us-west-2.instana.io` or `saas-eu-west-1.instana.io`.\n* `agent.endpoint.port` must be set with the monitoring ingress port, generally \"443\" (wrapped in quotes).\n* `agent.zone.name` should be set with the name of the Kubernetes cluster that is be displayed in Instana.\n\nFor advanced configuration, you can edit the contents of the `configuration.yaml` file. View documentation [here](https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/).\n\nApply the custom resource with `kubectl apply -f instana-agent.yaml`. After some time, you should see `instana-agent` Pods being created on each node of your cluster, and your cluster should show on the infrastructure map on your Instana Web interface.\n\n## Uninstalling\n\nIn order to uninstall the Instana agent, simply remove the custom resource with `kubectl delete -f instana-agent.yaml`.\n\n## Source Code\n\nThe Instana agent operator is an open source project hosted on [https://github.com/instana/instana-agent-operator](https://github.com/instana/instana-agent-operator/).\n",
      "csv_display_name": "Instana Agent Operator",
      "csv_metadata_description": "Fully automated Application Performance Monitoring (APM) for microservices.",
      "csv_name": "instana-agent-operator.v0.3.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:09:39.033000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "instana-agent",
      "provided_apis": [
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1beta1"
        },
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9801d07923797de6c02b68749bf25bb9bfe1f95866ad28c0a75f2fb363ff5fbc",
          "image": "registry.connect.redhat.com/instana/instana-agent-operator@sha256:9801d07923797de6c02b68749bf25bb9bfe1f95866ad28c0a75f2fb363ff5fbc",
          "name": "instana-agent-operator-9801d07923797de6c02b68749bf25bb9bfe1f95866ad28c0a75f2fb363ff5fbc-annotation"
        },
        {
          "digest": "sha256:9801d07923797de6c02b68749bf25bb9bfe1f95866ad28c0a75f2fb363ff5fbc",
          "image": "registry.connect.redhat.com/instana/instana-agent-operator@sha256:9801d07923797de6c02b68749bf25bb9bfe1f95866ad28c0a75f2fb363ff5fbc",
          "name": "instana-agent-operator"
        },
        {
          "digest": "sha256:9a2fa10afc0fe48ae1cf2409da980053f5df177637cace815abcfec69d1831e4",
          "image": "registry.connect.redhat.com/instana/agent@sha256:9a2fa10afc0fe48ae1cf2409da980053f5df177637cace815abcfec69d1831e4",
          "name": "instana_agent"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.3.4",
      "version_original": "0.3.4"
    },
    {
      "_id": "609ab1003048c1ac9a6feb77",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:ac3d5a0fc91bf7a6b2b06f6a19e42c219bb304681dc3f50c3aaa3d9a206ab1c8",
      "bundle_path_digest": "sha256:ac3d5a0fc91bf7a6b2b06f6a19e42c219bb304681dc3f50c3aaa3d9a206ab1c8",
      "capabilities": [
        ""
      ],
      "channel_name": "v1.4",
      "creation_date": "2021-05-11T16:29:52.023000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "couchdb-operator.v1.4.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:09:13.774000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": ">=1.0.0 <1.4.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.4.0",
      "version_original": "1.4.0"
    },
    {
      "_id": "609ab1003048c1ac9a6feb78",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:2c1cfca71bdbfc3bc58ff026e2e661d2f8a517880b496ab7b781489f5ffe73ab",
      "bundle_path_digest": "sha256:2c1cfca71bdbfc3bc58ff026e2e661d2f8a517880b496ab7b781489f5ffe73ab",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2021-05-11T16:29:52.392000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redhat-marketplace-operator.v0.2.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T16:46:05.383000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.2.0",
      "version_original": "0.2.0"
    },
    {
      "_id": "609ab105d04af0e74bb058fe",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:1ec6fc8724eed1b9260eb3765a6280c0f1781bf6d51e998903cb65f1e20b5d73",
      "bundle_path_digest": "sha256:1ec6fc8724eed1b9260eb3765a6280c0f1781bf6d51e998903cb65f1e20b5d73",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:29:57.219000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "couchbase-operator.v2.0.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:24:32.831000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.0.1",
      "version_original": "2.0.1"
    },
    {
      "_id": "609ab106e2b160d361d25203",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/kubemq/kubemq-operator-bundle@sha256:77737935963af3be8b1354959037e7b6948710deae1150f0aa724af4d240aed0",
      "bundle_path_digest": "sha256:77737935963af3be8b1354959037e7b6948710deae1150f0aa724af4d240aed0",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:29:58.290000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "kubemq-operator.v0.5.2",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:07:30.221000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "kubemq-operator-marketplace",
      "provided_apis": [
        {
          "group": "core.k8s.kubemq.io",
          "kind": "KubemqCluster",
          "plural": "kubemqclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.k8s.kubemq.io",
          "kind": "KubemqDashboard",
          "plural": "kubemqdashboards",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.5.2",
      "version_original": "0.5.2"
    },
    {
      "_id": "609ab10756933b164fe2129b",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:b5504dbce2d6d8f4dfa7f67549ac094e8f84ecc807ec676dd3ab9544f9d22ef0",
      "bundle_path_digest": "sha256:b5504dbce2d6d8f4dfa7f67549ac094e8f84ecc807ec676dd3ab9544f9d22ef0",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:29:59.487000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "mongodb-enterprise.v1.6.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:59:10.513000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.6.0",
      "version_original": "1.6.0"
    },
    {
      "_id": "609ab10ae2b160d361d25205",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-certifai-operator-bundle@sha256:2ff2df4e61105cb9cc1905f504ed0e74907fcd43f85d200f729e464e824e928f",
      "bundle_path_digest": "sha256:2ff2df4e61105cb9cc1905f504ed0e74907fcd43f85d200f729e464e824e928f",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:30:02.535000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "cortex-certifai-operator.v1.3.2",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:15:08.533000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "cortex-certifai-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.3.2",
      "version_original": "1.3.2"
    },
    {
      "_id": "609ab10b3048c1ac9a6feb81",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/memsql/operator-bundle@sha256:1a400322ed8279e6ded73c7fd89c3cc5df2f74ebede9d192017268166a2bb97e",
      "bundle_path_digest": "sha256:1a400322ed8279e6ded73c7fd89c3cc5df2f74ebede9d192017268166a2bb97e",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:30:03.025000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "memsql-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:59:13.874000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "memql-certified",
      "provided_apis": [
        {
          "group": "memsql.com",
          "kind": "MemsqlCluster",
          "plural": "memsqlclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "609ab10c56933b164fe2129c",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/memsql/operator-bundle@sha256:12cf4fdab07a4a3d97489de54b80231af171494de7cd686d1b792a3643c15142",
      "bundle_path_digest": "sha256:12cf4fdab07a4a3d97489de54b80231af171494de7cd686d1b792a3643c15142",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:30:04.350000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "memsql-operator.v1.1.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:16:06.605000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "memql-certified",
      "provided_apis": [
        {
          "group": "memsql.com",
          "kind": "MemsqlCluster",
          "plural": "memsqlclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.1.1",
      "version_original": "1.1.1"
    },
    {
      "_id": "609ab10d3048c1ac9a6feb85",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.8",
      "creation_date": "2021-05-11T16:30:05.677000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:46:16.486000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "609ab10f3048c1ac9a6feb86",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:ade7cee1cfce9d5a5badbcca507fdda3baa842c80f36458a2d6c3ecd5876e25d",
      "bundle_path_digest": "sha256:ade7cee1cfce9d5a5badbcca507fdda3baa842c80f36458a2d6c3ecd5876e25d",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:30:07.340000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "mongodb-enterprise.v1.4.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:16:37.633000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.4.0",
      "version_original": "1.4.0"
    },
    {
      "_id": "609ab10fd04af0e74bb05903",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "bundle_path_digest": "sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "capabilities": [
        ""
      ],
      "channel_name": "6.0.6",
      "creation_date": "2021-05-11T16:30:07.882000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-6",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T16:55:43.857000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.6-6",
      "version_original": "6.0.6-6"
    },
    {
      "_id": "609ab11056933b164fe2129d",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2021-05-11T16:30:08.552000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:20:51.613000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "609ab1113048c1ac9a6feb88",
      "alm_examples": [
        {
          "api_version": "machinelearning.seldon.io/v1",
          "kind": "SeldonDeployment",
          "metadata": {
            "name": "seldon-model"
          },
          "spec": {
            "name": "test-deployment",
            "predictors": [
              {
                "componentSpecs": [
                  {
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:482ee477c344badcaa80e850f4339db41957f9c2396ae24f9e398b67bd5c184e",
                          "name": "classifier"
                        }
                      ]
                    }
                  }
                ],
                "graph": {
                  "children": [],
                  "endpoint": {
                    "type": "REST"
                  },
                  "name": "classifier",
                  "type": "MODEL"
                },
                "name": "example",
                "replicas": 1
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-core-operator-bundle@sha256:c380d43717df7db52058bcf261ece6ceb0e0ce779b0576d31d25d8a3c9c70e55",
      "bundle_path_digest": "sha256:c380d43717df7db52058bcf261ece6ceb0e0ce779b0576d31d25d8a3c9c70e55",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:30:09.131000+00:00",
      "csv_description": "The Seldon operator enables for native operation of production machine learning workloads, including monitoring and operations of language-agnostic models with the benefits of real-time metrics and log analysis.\n   \n## Overview\nSeldon Core is an open source platform for deploying machine learning models on a Kubernetes cluster.\n\n* Deploy machine learning models in the cloud or on-premise.\n* Get metrics and ensure proper governance and compliance for your running machine learning models.\n* Create powerful inference graphs made up of multiple components.\n* Provide a consistent serving layer for models built using heterogeneous ML toolkits.\n\nYou can get started by following the guides in our documentation at https://docs.seldon.io/projects/seldon-core/en/latest/workflow/README.html\n",
      "csv_display_name": "Seldon Operator",
      "csv_metadata_description": "The Seldon operator for management, monitoring and operations of machine learning systems through the Seldon Engine. Once installed, the Seldon Operator provides multiple functions which facilitate the productisation, monitoring and maintenance of machine learning systems at scale.",
      "csv_name": "seldon-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:50:55.134000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "seldon-operator-certified",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "version": "v1alpha3"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "version": "v1alpha2"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:12181723f09dcd8d3d5a7dd12a0375d29cafef3a683883339724e9a833bee229",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:12181723f09dcd8d3d5a7dd12a0375d29cafef3a683883339724e9a833bee229",
          "name": "seldon-core-operator-12181723f09dcd8d3d5a7dd12a0375d29cafef3a683883339724e9a833bee229-annotation"
        },
        {
          "digest": "sha256:12181723f09dcd8d3d5a7dd12a0375d29cafef3a683883339724e9a833bee229",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:12181723f09dcd8d3d5a7dd12a0375d29cafef3a683883339724e9a833bee229",
          "name": "manager"
        },
        {
          "digest": "sha256:f53e208037974cc0c10cb97867de8810ca6f756af6b4d9071f109bdfc6944bc1",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-executor@sha256:f53e208037974cc0c10cb97867de8810ca6f756af6b4d9071f109bdfc6944bc1",
          "name": "executor"
        },
        {
          "digest": "sha256:e3d1a2754f4a4d75b9df3f23696f3ac76b27ad3be1b75d89d7bdcbbf029f4383",
          "image": "registry.connect.redhat.com/seldonio/seldon-engine@sha256:e3d1a2754f4a4d75b9df3f23696f3ac76b27ad3be1b75d89d7bdcbbf029f4383",
          "name": "engine"
        },
        {
          "digest": "sha256:482ee477c344badcaa80e850f4339db41957f9c2396ae24f9e398b67bd5c184e",
          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:482ee477c344badcaa80e850f4339db41957f9c2396ae24f9e398b67bd5c184e",
          "name": "mock-classifier-482ee477c344badcaa80e850f4339db41957f9c2396ae24f9e398b67bd5c184e-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "609ab11456933b164fe2129e",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:9462f3735254b047f4b80b539797b83c31faa0ad923fe4a351dba693e51cadef",
      "bundle_path_digest": "sha256:9462f3735254b047f4b80b539797b83c31faa0ad923fe4a351dba693e51cadef",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:30:12.156000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "couchbase-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:19:17.680000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v2"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "609ab115d04af0e74bb05904",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxiq-operator-bundle@sha256:62ca1e8c6114e2ebecd5664491c22c283f406d584507a3619bae3967de8c9726",
      "bundle_path_digest": "sha256:62ca1e8c6114e2ebecd5664491c22c283f406d584507a3619bae3967de8c9726",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:30:13.117000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "nxiq-operator-certified.v1.90.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:13:20.045000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nxiq-operator-certified",
      "provided_apis": [
        {
          "group": "sonatype.com",
          "kind": "NexusIQ",
          "plural": "nexusiqs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.90.0",
      "version_original": "1.90.0"
    },
    {
      "_id": "609ab11556933b164fe2129f",
      "alm_examples": [
        {
          "api_version": "data-explorer.com/v1alpha1",
          "kind": "DashboardWithJupyterHub",
          "metadata": {
            "name": "dashboard-jupyterhub-custom"
          },
          "spec": {
            "resources": {
              "limits": {
                "cpu": "2",
                "memory": "8Gi"
              },
              "requests": {
                "cpu": "2",
                "memory": "8Gi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/data-explorer-operator-bundle@sha256:9afce5e1bbde0725580c579ade487aeb2373f647ab7f40cc4d0bd061f3f887d6",
      "bundle_path_digest": "sha256:9afce5e1bbde0725580c579ade487aeb2373f647ab7f40cc4d0bd061f3f887d6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:30:13.507000+00:00",
      "csv_description": "Data Explorer provides ready to use pre-configured data science environment for experimentation.Bringing the promise of notebooks to Kubernetes and OpenShift as an Operator pattern.  Deploy in the cloud or your data center or local laptop with ready to use data and notebooks without burdening yourself with installation details. You can work as team or use your own project namespace.\n\nThe Operator deploys Data Explorer Dashbaord with **default** configuration of **2 CPU** and **8Gi Memory**.\n\nTo learn ***How to access the Data Explorer Dashboard*** and ***How to Deploy Data Explorer Dashboard with custom configuration*** visit <https://github.com/rhm-samples/data-explorer-operator/wiki>.\n",
      "csv_display_name": "Data Explorer Operator",
      "csv_metadata_description": "",
      "csv_name": "data-explorer-operator.v0.1.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:14:04.568000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "data-explorer-operator-certified",
      "provided_apis": [
        {
          "group": "data-explorer.com",
          "kind": "DashboardWithJupyterHub",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:6b048ead1121a9ca2bcc0d5b2a198a01e889456d5069f303d2af4dcdf465a40f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6b048ead1121a9ca2bcc0d5b2a198a01e889456d5069f303d2af4dcdf465a40f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:f1c2252b5a614cf3bc281daa9925ab44f25a5612daab81ef36302a82e7fc8b49",
          "image": "registry.connect.redhat.com/ibm-edge/data-explorer-operator@sha256:f1c2252b5a614cf3bc281daa9925ab44f25a5612daab81ef36302a82e7fc8b49",
          "name": "manager"
        },
        {
          "digest": "sha256:3a9983c5c7851d1f745908fb9886a6106b67f883f375598671088e2379ef432f",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:3a9983c5c7851d1f745908fb9886a6106b67f883f375598671088e2379ef432f",
          "name": "dashboardinstaller"
        },
        {
          "digest": "sha256:b66cecb9b14c8ff16c6d41444e7281325c19bb0e21245d195a355d6bc572ee89",
          "image": "registry.connect.redhat.com/ibm-edge/data-explorer-dashboard@sha256:b66cecb9b14c8ff16c6d41444e7281325c19bb0e21245d195a355d6bc572ee89",
          "name": "jupyterhub_dashboard"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.1.5",
      "version_original": "0.1.5"
    },
    {
      "_id": "609ab117d04af0e74bb05906",
      "alm_examples": [
        {
          "api_version": "data-explorer.com/v1alpha1",
          "kind": "DashboardWithJupyterLab",
          "metadata": {
            "name": "dashboard-with-jupyterlab"
          },
          "spec": {
            "resources": {
              "limits": {
                "cpu": "2",
                "memory": "8Gi"
              },
              "requests": {
                "cpu": "2",
                "memory": "8Gi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/data-explorer-operator-bundle@sha256:e66be49a23d2b01b81e76c49e7069ac549cb6d44293b94f8b5a2bf76a54054bd",
      "bundle_path_digest": "sha256:e66be49a23d2b01b81e76c49e7069ac549cb6d44293b94f8b5a2bf76a54054bd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:30:15.333000+00:00",
      "csv_description": "Data Explorer provides ready to use pre-configured data science environment for experimentation.Bringing the promise of notebooks to Kubernetes and OpenShift as an Operator pattern.  Deploy in the cloud or your data center or local laptop with ready to use data and notebooks without burdening yourself with installation details. You can work as team or use your own project namespace.\n\nThe Operator deploys Data Explorer Dashbaord with **default** configuration of **2 CPU** and **8Gi Memory**.\n\nTo learn ***How to access the Data Explorer Dashboard*** and ***How to Deploy Data Explorer Dashboard with custom configuration*** visit <https://github.com/rhm-samples/data-explorer-operator/wiki>.\n",
      "csv_display_name": "Data Explorer Operator",
      "csv_metadata_description": "",
      "csv_name": "data-explorer-operator.v0.1.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:11:24.506000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "data-explorer-operator-certified",
      "provided_apis": [
        {
          "group": "data-explorer.com",
          "kind": "DashboardWithJupyterLab",
          "plural": "dashboardwithjupyterlabs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4a84cb8c21b63b4c05fc9600b4ecbfee0d99bcf2541e6ba4a39c1d2de6ab8d5c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:4a84cb8c21b63b4c05fc9600b4ecbfee0d99bcf2541e6ba4a39c1d2de6ab8d5c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:f6afc6f52b2d86d6def1420a2553941efacfbb321feae9ed4b5424f5fa42646d",
          "image": "registry.connect.redhat.com/ibm-edge/data-explorer-operator@sha256:f6afc6f52b2d86d6def1420a2553941efacfbb321feae9ed4b5424f5fa42646d",
          "name": "manager"
        },
        {
          "digest": "sha256:c225832941b1d3b53faf74e7d6af668d41f5d1164661fbf3103635807f58f65a",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:c225832941b1d3b53faf74e7d6af668d41f5d1164661fbf3103635807f58f65a",
          "name": "dashboardinstaller"
        },
        {
          "digest": "sha256:e95e47202eeb298b3d5856f441eb5e48f693ca25870c414b17b02e3e4b84e5e9",
          "image": "registry.connect.redhat.com/ibm-edge/data-explorer-dashboard@sha256:e95e47202eeb298b3d5856f441eb5e48f693ca25870c414b17b02e3e4b84e5e9",
          "name": "jupyterlab_dashboard"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.1.6",
      "version_original": "0.1.6"
    },
    {
      "_id": "609ab11956933b164fe212a0",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-core-operator-bundle@sha256:cb77b47b96bbdc309b17468b8f644bac7206be94125d43a1609f20637937876f",
      "bundle_path_digest": "sha256:cb77b47b96bbdc309b17468b8f644bac7206be94125d43a1609f20637937876f",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:30:17.317000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "seldon-operator.v1.2.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:15:55.831000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "seldon-operator-certified",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha2"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha3"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.2.0",
      "version_original": "1.2.0"
    },
    {
      "_id": "609ab119d04af0e74bb05907",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "bundle_path_digest": "sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.12",
      "creation_date": "2021-05-11T16:30:17.374000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:48:00.842000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "redislabs/operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "operator-998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b-annotation"
        },
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.6-24",
      "version_original": "6.0.6-24"
    },
    {
      "_id": "609ab11ae2b160d361d25208",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/artifactory-operator-bundle@sha256:f4a009d95308df12c8e754d05313d6674b3e508efb918e054e682f8270b761d6",
      "bundle_path_digest": "sha256:f4a009d95308df12c8e754d05313d6674b3e508efb918e054e682f8270b761d6",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:30:18.356000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "artifactory-ha-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:06:04.252000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "plural": "openshiftartifactoryhas",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "609ab11b3048c1ac9a6feb8b",
      "alm_examples": [
        {
          "api_version": "dynatrace.com/v1alpha1",
          "kind": "OneAgent",
          "metadata": {
            "name": "oneagent",
            "namespace": "dynatrace"
          },
          "spec": {
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api",
            "args": [
              "--set-app-log-content-access=true"
            ],
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists"
              }
            ]
          }
        },
        {
          "api_version": "dynatrace.com/v1alpha1",
          "kind": "OneAgentAPM",
          "metadata": {
            "name": "oneagentapm",
            "namespace": "dynatrace"
          },
          "spec": {
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator-bundle@sha256:bb0802549d55a58ab1edec52991de5fecbb0403f9f9544a5cc2da44cd995a1cc",
      "bundle_path_digest": "sha256:bb0802549d55a58ab1edec52991de5fecbb0403f9f9544a5cc2da44cd995a1cc",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:30:19.065000+00:00",
      "csv_description": "The Dynatrace OneAgent Operator allows users to easily deploy full-stack monitoring for [OpenShift clusters](https://www.dynatrace.com/technologies/openshift-monitoring/). The Dynatrace OneAgent automatically monitors the workload running in containers down to the code and request level.\n\n### Installing the OneAgent\nOnce you've installed the Operator, you can create OneAgent custom resources to monitor your environment.\n\nFirst, please add a Secret within the Project you've deployed the Dynatrace Operator to, which would contain your API and PaaS tokens. Create tokens of type *Dynatrace API* (`API_TOKEN`) and *Platform as a Service* (`PAAS_TOKEN`) and use their values in the following commands respectively.\n\nFor assistance please refer to [Create user-generated access tokens](https://www.dynatrace.com/support/help/shortlink/token#create-user-generated-access-tokens).\n\n``` $ oc -n <project> create secret generic oneagent --from-literal=\"apiToken=API_TOKEN\" --from-literal=\"paasToken=PAAS_TOKEN\" ```\n\nYou may update this Secret at any time to rotate the tokens.\n\nThen please add an OneAgent object in the Project where the Operator has been deployed, configured to your needs.\n\n### Required Parameters\n* `apiUrl` - provide the URL to the API of your Dynatrace environment. In Dynatrace SaaS it will look like `https://<ENVIRONMENTID>.live.dynatrace.com/api` . In Dynatrace Managed like `https://<YourDynatraceServerURL>/e/<ENVIRONMENTID>/api` .\n\n### Advanced Options\n* **Image Override** - use a copy of the OneAgent container image from a registry other than Docker's or Red Hat's\n* **NodeSelectors** - select a subset of your cluster's nodes to run the Dynatrace OneAgent on, based on labels\n* **Tolerations** - add specific tolerations to the agent so that it can monitor all of the nodes in your cluster; we include the default toleration so that Dynatrace OneAgent also monitors the master nodes\n* **Priority Class Name** - define the priorityClassName for OneAgent pods\n* **Environment variables** - define environment variables for the OneAgent container\n* **Disable Certificate Checking** - disable any certificate validation that may interact poorly with proxies with in your cluster\n* **Disable OneAgent Update** - disable the Operator's auto-update feature for OneAgent pods\n* **Enable Istio Auto-config** - automatically create Istio objects for egress communication to the Dynatrace environment from the OneAgent\n\nFor a complete list of supported parameters please consult the [Operator Deploy Guide](https://www.dynatrace.com/support/help/shortlink/openshift-deploy).\n\n### Help\nYou can find more about our instructions in our [documentation](https://www.dynatrace.com/support/help/shortlink/openshift-deploy#install-oneagent-operator).\n",
      "csv_display_name": "Dynatrace OneAgent",
      "csv_metadata_description": "Install full-stack monitoring of OpenShift clusters with the Dynatrace OneAgent.",
      "csv_name": "dynatrace-monitoring.v0.9.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:49:31.547000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "oneagent-certified",
      "provided_apis": [
        {
          "group": "dynatrace.com",
          "kind": "OneAgentAPM",
          "plural": "oneagentapms",
          "version": "v1alpha1"
        },
        {
          "group": "dynatrace.com",
          "kind": "OneAgent",
          "plural": "oneagents",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:bf1f13b2c80fc7bbc065251f813d68868d2d6cd2080b01a2e7632e238f0516fe",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:bf1f13b2c80fc7bbc065251f813d68868d2d6cd2080b01a2e7632e238f0516fe",
          "name": "dynatrace-oneagent-operator-bf1f13b2c80fc7bbc065251f813d68868d2d6cd2080b01a2e7632e238f0516fe-annotation"
        },
        {
          "digest": "sha256:bf1f13b2c80fc7bbc065251f813d68868d2d6cd2080b01a2e7632e238f0516fe",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:bf1f13b2c80fc7bbc065251f813d68868d2d6cd2080b01a2e7632e238f0516fe",
          "name": "dynatrace-oneagent-operator"
        },
        {
          "digest": "sha256:bf1f13b2c80fc7bbc065251f813d68868d2d6cd2080b01a2e7632e238f0516fe",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:bf1f13b2c80fc7bbc065251f813d68868d2d6cd2080b01a2e7632e238f0516fe",
          "name": "webhook"
        },
        {
          "digest": "sha256:bf1f13b2c80fc7bbc065251f813d68868d2d6cd2080b01a2e7632e238f0516fe",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:bf1f13b2c80fc7bbc065251f813d68868d2d6cd2080b01a2e7632e238f0516fe",
          "name": "bootstrapper"
        },
        {
          "digest": "sha256:55a84c38ef95e2992ab4e536a425d3fe622c8ced1fd2aea1cdba505198142464",
          "image": "registry.connect.redhat.com/dynatrace/oneagent@sha256:55a84c38ef95e2992ab4e536a425d3fe622c8ced1fd2aea1cdba505198142464",
          "name": "dynatrace_oneagent"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.9.2",
      "version_original": "0.9.2"
    },
    {
      "_id": "609ab11c3048c1ac9a6feb8d",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:10ec7cafa6c4be66ea634b88e10a2b136fcd3322cad00309a7ccef455679c6ba",
      "bundle_path_digest": "sha256:10ec7cafa6c4be66ea634b88e10a2b136fcd3322cad00309a7ccef455679c6ba",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:30:20.430000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "couchbase-operator.v2.0.2",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:01:39.052000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "plural": "couchbaseephemeralbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "plural": "couchbasereplications",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "plural": "couchbasememcachedbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "plural": "couchbasebackuprestores",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v2"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.0.2",
      "version_original": "2.0.2"
    },
    {
      "_id": "609ab11c3048c1ac9a6feb8e",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator-bundle@sha256:b41abde7767e00d6ad016739df7e6c07fa9ac21e096c9fd6b42bf1aa08abb162",
      "bundle_path_digest": "sha256:b41abde7767e00d6ad016739df7e6c07fa9ac21e096c9fd6b42bf1aa08abb162",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:30:20.846000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "aws-sources-operator.v0.2.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:13:52.749000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "aws-event-sources-operator-certified",
      "provided_apis": [
        {
          "group": "sources.triggermesh.com",
          "kind": "AwsEventSources",
          "plural": "awseventsources",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.2.1",
      "version_original": "0.2.1"
    },
    {
      "_id": "609ab11de2b160d361d25209",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/data-explorer-operator-bundle@sha256:20211956d089d8958f08e103304eae586144cddddb5cf17f71fc749cbe6a4da7",
      "bundle_path_digest": "sha256:20211956d089d8958f08e103304eae586144cddddb5cf17f71fc749cbe6a4da7",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:30:21.287000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "data-explorer-operator.v0.0.9",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:41:20.688000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "data-explorer-operator-certified",
      "provided_apis": [
        {
          "group": "data-explorer.com",
          "kind": "DashboardWithJupyterHub",
          "plural": "dashboardwithjupyterhubs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.9",
      "version_original": "0.0.9"
    },
    {
      "_id": "609ab120e2b160d361d2520a",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/instana/instana-agent-operator-bundle@sha256:c74519be65015d28508ca3b260449a0365f97968f17e20b48c7b338247c835c3",
      "bundle_path_digest": "sha256:c74519be65015d28508ca3b260449a0365f97968f17e20b48c7b338247c835c3",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2021-05-11T16:30:24.218000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "instana-agent-operator.v0.3.9",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:11:49.718000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "instana-agent",
      "provided_apis": [
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "version": "v1beta1"
        },
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.3.9",
      "version_original": "0.3.9"
    },
    {
      "_id": "609ab121d04af0e74bb05908",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "replicaCount": 1,
              "resources": {},
              "service": {
                "licenseName": "AutoPilotWMQ_MQM.lic"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "domain": {
              "replicaCount": 1,
              "resources": {},
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "dbPort": 3306,
              "subDomain": "nastel-cluster-915b3b336cabec458a7c7ec2aa7c625f-0000.eu-gb.containers.appdomain.cloud",
              "type": "ClusterIP"
            },
            "navigator": {
              "replicaCount": 1,
              "resources": {}
            },
            "nsqcm": {
              "replicaCount": 1,
              "resources": {}
            },
            "wgs-mysql": {
              "replicaCount": 1,
              "resources": {},
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:8742dab8b0f0fb06c3bbed65d27baddff3df29575f57c50a4e44fc11365929a3",
      "bundle_path_digest": "sha256:8742dab8b0f0fb06c3bbed65d27baddff3df29575f57c50a4e44fc11365929a3",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:30:25.423000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v0.0.14",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:52:00.669000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:cbe40ff27e8db847747c03fde14f54d5ea2ea67d07f82101c43319785a9c69ea",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:cbe40ff27e8db847747c03fde14f54d5ea2ea67d07f82101c43319785a9c69ea",
          "name": "navigator-operator-cbe40ff27e8db847747c03fde14f54d5ea2ea67d07f82101c43319785a9c69ea-annotation"
        },
        {
          "digest": "sha256:cbe40ff27e8db847747c03fde14f54d5ea2ea67d07f82101c43319785a9c69ea",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:cbe40ff27e8db847747c03fde14f54d5ea2ea67d07f82101c43319785a9c69ea",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:4a606ec3bcfa00f35f8859b904862930a72218240b7cbc197e5e811d8bf33f40",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:4a606ec3bcfa00f35f8859b904862930a72218240b7cbc197e5e811d8bf33f40",
          "name": "domain"
        },
        {
          "digest": "sha256:a968f28e69e2aed4125d27fcbe4365b671cc316321ddf7205541c30593afc9c3",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:a968f28e69e2aed4125d27fcbe4365b671cc316321ddf7205541c30593afc9c3",
          "name": "cm"
        },
        {
          "digest": "sha256:0bd13feca3a3362587a76f17f2df26651f4facdfad097b82a3d4cb361b5ff770",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:0bd13feca3a3362587a76f17f2df26651f4facdfad097b82a3d4cb361b5ff770",
          "name": "wgs"
        },
        {
          "digest": "sha256:6a09a0349de4ef27730d265349b3a84c93593f42a1e2249f3c82b47b96c9b6eb",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:6a09a0349de4ef27730d265349b3a84c93593f42a1e2249f3c82b47b96c9b6eb",
          "name": "navigator"
        },
        {
          "digest": "sha256:3e1c5e4d19ab3b373a6b314d24b60981cddb301bf43a1fe232f14612a2957de4",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:3e1c5e4d19ab3b373a6b314d24b60981cddb301bf43a1fe232f14612a2957de4",
          "name": "mysql"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.14",
      "version_original": "0.0.14"
    },
    {
      "_id": "609ab1213048c1ac9a6feb8f",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2021-05-11T16:30:25.737000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:14:13.451000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "609ab123e2b160d361d2520b",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "bundle_path_digest": "sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.8",
      "creation_date": "2021-05-11T16:30:27.164000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:13:20.197000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "redislabs/operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "operator-998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b-annotation"
        },
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.6-24",
      "version_original": "6.0.6-24"
    },
    {
      "_id": "609ab1243048c1ac9a6feb93",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-30.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "bundle_path_digest": "sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2021-05-11T16:30:28.696000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:58:28.836000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator-0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1-annotation"
        },
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.8-20",
      "version_original": "6.0.8-20"
    },
    {
      "_id": "609ab12556933b164fe212a2",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "bundle_path_digest": "sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "capabilities": [
        ""
      ],
      "channel_name": "6.0.12",
      "creation_date": "2021-05-11T16:30:29.767000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-11",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:18:14.259000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.6-11",
      "version_original": "6.0.6-11"
    },
    {
      "_id": "609ab125d04af0e74bb0590a",
      "alm_examples": [
        {
          "api_version": "data-explorer.com/v1alpha1",
          "kind": "DashboardWithJupyterHub",
          "metadata": {
            "name": "dashboard-jupyterhub-custom"
          },
          "spec": {
            "resources": {
              "limits": {
                "cpu": "2",
                "memory": "8Gi"
              },
              "requests": {
                "cpu": "2",
                "memory": "8Gi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/data-explorer-operator-bundle@sha256:9afce5e1bbde0725580c579ade487aeb2373f647ab7f40cc4d0bd061f3f887d6",
      "bundle_path_digest": "sha256:9afce5e1bbde0725580c579ade487aeb2373f647ab7f40cc4d0bd061f3f887d6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:30:29.921000+00:00",
      "csv_description": "Data Explorer provides ready to use pre-configured data science environment for experimentation.Bringing the promise of notebooks to Kubernetes and OpenShift as an Operator pattern.  Deploy in the cloud or your data center or local laptop with ready to use data and notebooks without burdening yourself with installation details. You can work as team or use your own project namespace.\n\nThe Operator deploys Data Explorer Dashbaord with **default** configuration of **2 CPU** and **8Gi Memory**.\n\nTo learn ***How to access the Data Explorer Dashboard*** and ***How to Deploy Data Explorer Dashboard with custom configuration*** visit <https://github.com/rhm-samples/data-explorer-operator/wiki>.\n",
      "csv_display_name": "Data Explorer Operator",
      "csv_metadata_description": "",
      "csv_name": "data-explorer-operator.v0.1.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:17:11.855000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "data-explorer-operator-certified",
      "provided_apis": [
        {
          "group": "data-explorer.com",
          "kind": "DashboardWithJupyterHub",
          "plural": "dashboardwithjupyterhubs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:6b048ead1121a9ca2bcc0d5b2a198a01e889456d5069f303d2af4dcdf465a40f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6b048ead1121a9ca2bcc0d5b2a198a01e889456d5069f303d2af4dcdf465a40f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:f1c2252b5a614cf3bc281daa9925ab44f25a5612daab81ef36302a82e7fc8b49",
          "image": "registry.connect.redhat.com/ibm-edge/data-explorer-operator@sha256:f1c2252b5a614cf3bc281daa9925ab44f25a5612daab81ef36302a82e7fc8b49",
          "name": "manager"
        },
        {
          "digest": "sha256:3a9983c5c7851d1f745908fb9886a6106b67f883f375598671088e2379ef432f",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:3a9983c5c7851d1f745908fb9886a6106b67f883f375598671088e2379ef432f",
          "name": "dashboardinstaller"
        },
        {
          "digest": "sha256:b66cecb9b14c8ff16c6d41444e7281325c19bb0e21245d195a355d6bc572ee89",
          "image": "registry.connect.redhat.com/ibm-edge/data-explorer-dashboard@sha256:b66cecb9b14c8ff16c6d41444e7281325c19bb0e21245d195a355d6bc572ee89",
          "name": "jupyterhub_dashboard"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.1.5",
      "version_original": "0.1.5"
    },
    {
      "_id": "609ab127d04af0e74bb0590b",
      "alm_examples": [
        {
          "api_version": "cortex.cognitivescale.com/v1",
          "kind": "Certifai",
          "metadata": {
            "name": "default-certifai"
          },
          "spec": {
            "console": {
              "azure": {
                "account-key": "your account key",
                "account-name": "your account name",
                "sas-token": "your SAS token"
              },
              "gcs": {
                "application-credentials": "{\n  \"type\": \"\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"\",\n  \"token_uri\": \"\",\n  \"auth_provider_x509_cert_url\": \"\",\n  \"client_x509_cert_url\": \"\"\n}\n"
              },
              "replicas": 1,
              "route-type": "none",
              "s3": {
                "access-key": "your access key",
                "endpoint": "https://s3.amazonaws.com",
                "secret-key": "your secret key",
                "verify-cert": false
              },
              "scan-dir": ""
            },
            "reference-model": {
              "enabled": true
            },
            "reporting": {
              "db-conn-str": "postgresql://user:password@service:port/db",
              "enabled": true,
              "period": "*/15 * * * *"
            }
          }
        },
        {
          "api_version": "cortex.cognitivescale.com/v1",
          "kind": "CertifaiScan",
          "metadata": {
            "name": "example-certifai-scan",
            "namespace": "certifai"
          },
          "spec": {
            "scanconfig": {
              "concurrency": 4,
              "scanargs": "command line args here",
              "scandef": "definition file text here"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-certifai-operator-bundle@sha256:26199886640c352804df4a634f5ea3e45c3c4d4e41f241e9ef36cd4b3536be57",
      "bundle_path_digest": "sha256:26199886640c352804df4a634f5ea3e45c3c4d4e41f241e9ef36cd4b3536be57",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:30:31.215000+00:00",
      "csv_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production. It evaluates AI models and allows users to compare different models or model versions for the following qualities.\n* **Robustness:** measures how well models retain an outcome given changes to the data feature values. The more robust a model is, the greater the changes required to alter the outcome.\n* **Fairness by group:** measures the difference required to change the outcome for different groups implicit in a feature given the same model and dataset. For example, implicit groups male, female, and nonbinary belong to the feature, \u201cgender\u201d. A fair model shows that all 3 groups require a similar amount of change to alter the results.\n* **Explainability:** measures the average simplicity of counterfactual explanations provided for each model. An explanation that requires a single changed feature will score 100%. Explanations that require more changed features will score lower.\n* **Explanations:** display the prediction provided through the generation of counterfactuals for the change that must occur in a dataset with given restrictions to obtain a different outcome. Users can explore the entire dataset one observation at a time to understand what features changed and by how much to obtain a different result.\nSee our [documentation](https://cognitivescale.github.io/cortex-certifai/) for information about how to deploy the Certifai Operator and how to get started using our toolkit.\n## License Copyright 2020 Cognitive Scale, Inc. All Rights Reserved.\nBy downloading you agree to the terms of CognitiveScale's [End User License Agreement](https://www.cognitivescale.com/legal-information/).\n",
      "csv_display_name": "Cortex Certifai Operator",
      "csv_metadata_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production.",
      "csv_name": "cortex-certifai-operator.v1.3.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:08:03.475000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cortex-certifai-operator",
      "provided_apis": [
        {
          "group": "cortex.cognitivescale.com",
          "kind": "Certifai",
          "plural": "certifais",
          "version": "v1"
        },
        {
          "group": "cortex.cognitivescale.com",
          "kind": "CertifaiScan",
          "plural": "certifaiscans",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:ffcdc1d2a404822227b6d2cde6d7476e1cee89383868c30b32840931e6d1d5f3",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:ffcdc1d2a404822227b6d2cde6d7476e1cee89383868c30b32840931e6d1d5f3",
          "name": "cortex-certifai-operator-ffcdc1d2a404822227b6d2cde6d7476e1cee89383868c30b32840931e6d1d5f3-annotation"
        },
        {
          "digest": "sha256:9e58ef4360c83b8afc305a33f5255fa93ff900d14887e74b4dfd27b260fc84d8",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:9e58ef4360c83b8afc305a33f5255fa93ff900d14887e74b4dfd27b260fc84d8",
          "name": "cortex-certifai-operator"
        },
        {
          "digest": "sha256:320b0077b4a9a6261f29b1bd081083fd5e63c91da0707dcd22071427a97e0c3b",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reference-model-server@sha256:320b0077b4a9a6261f29b1bd081083fd5e63c91da0707dcd22071427a97e0c3b",
          "name": "refmodel"
        },
        {
          "digest": "sha256:60e9ec67f2be7ea38c89a4a98e5621a88138b1f64a941302ba41c648dab1d97a",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-console@sha256:60e9ec67f2be7ea38c89a4a98e5621a88138b1f64a941302ba41c648dab1d97a",
          "name": "console"
        },
        {
          "digest": "sha256:97ef18df20fa7addaaf21441d556ee4c3700513130f9b4ce686683085ae6244c",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-scanner@sha256:97ef18df20fa7addaaf21441d556ee4c3700513130f9b4ce686683085ae6244c",
          "name": "scanner"
        },
        {
          "digest": "sha256:4a7ae62a41f0434329f5e67f717e169a339bf8514458c01d8ad16c520b88923f",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reporting-etl@sha256:4a7ae62a41f0434329f5e67f717e169a339bf8514458c01d8ad16c520b88923f",
          "name": "reporting_etl"
        },
        {
          "digest": "sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "name": "oauth_proxy"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.3.3",
      "version_original": "1.3.3"
    },
    {
      "_id": "609ab127d04af0e74bb0590c",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/data-explorer-operator-bundle@sha256:16f043d2f31f879b1aa6cf2385ca873b45850f238c32370b661f2c8ebc7668be",
      "bundle_path_digest": "sha256:16f043d2f31f879b1aa6cf2385ca873b45850f238c32370b661f2c8ebc7668be",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:30:31.325000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "data-explorer-operator.v0.1.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:01:42.563000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "data-explorer-operator-certified",
      "provided_apis": [
        {
          "group": "data-explorer.com",
          "kind": "DashboardWithJupyterHub",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.1.1",
      "version_original": "0.1.1"
    },
    {
      "_id": "609ab1283048c1ac9a6feb94",
      "alm_examples": [
        {
          "api_version": "hubs.cortex.cognitivescale.com/v1",
          "kind": "Hub",
          "metadata": {
            "name": "default-hub"
          },
          "spec": {
            "hub": {
              "container-port": 3000,
              "replicas": 1,
              "route-type": "http",
              "theme-spec": {
                "configmap-name": "c12e-healthcare-hub-theme",
                "configmap-value-base64": "YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IGMxMmUtaGVhbHRoY2FyZS1odWItdGhlbWUKZGF0YToKICBjb3J0ZXgtbG9nby5zdmc6IHwKICAgIDw/eG1sIHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9IlVURi04Ij8+CiAgICA8c3ZnIHdpZHRoPSIyMjdweCIgaGVpZ2h0PSI3MHB4IiB2aWV3Qm94PSIwIDAgMjI3IDcwIiB2ZXJzaW9uPSIxLjEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiPgogICAgPCEtLSBHZW5lcmF0b3I6IHNrZXRjaHRvb2wgNjMuMSAoMTAxMDEwKSAtIGh0dHBzOi8vc2tldGNoLmNvbSAtLT4KICAgIDx0aXRsZT40NzIzRjlDOC0yNkZFLTRCRkQtOTk0NS1BQ0IxRDYzODY2MENAMXg8L3RpdGxlPgogICAgPGRlc2M+Q3JlYXRlZCB3aXRoIHNrZXRjaHRvb2wuPC9kZXNjPgogICAgPGRlZnM+CiAgICA8bGluZWFyR3JhZGllbnQgeDE9IjEuNDgxMzk4OTglIiB5MT0iMCUiIHgyPSI5OC41MTg2MDElIiB5Mj0iMTAwJSIgaWQ9ImxpbmVhckdyYWRpZW50LTEiPgogICAgPHN0b3Agc3RvcC1jb2xvcj0iIzAwQUZGMSIgb2Zmc2V0PSIwJSI+PC9zdG9wPgogICAgPHN0b3Agc3RvcC1jb2xvcj0iIzAwRDA4MCIgb2Zmc2V0PSIxMDAlIj48L3N0b3A+CiAgICA8L2xpbmVhckdyYWRpZW50PgogICAgPGVsbGlwc2UgaWQ9InBhdGgtMiIgY3g9IjM0LjQ3NzYxMTkiIGN5PSIzNSIgcng9IjM0LjQ3NzYxMTkiIHJ5PSIzNSI+PC9lbGxpcHNlPgogICAgPGZpbHRlciB4PSItMi45JSIgeT0iLTIuOSUiIHdpZHRoPSIxMDUuOCUiIGhlaWdodD0iMTA1LjclIiBmaWx0ZXJVbml0cz0ib2JqZWN0Qm91bmRpbmdCb3giIGlkPSJmaWx0ZXItMyI+CiAgICA8ZmVHYXVzc2lhbkJsdXIgc3RkRGV2aWF0aW9uPSIxLjUiIGluPSJTb3VyY2VBbHBoYSIgcmVzdWx0PSJzaGFkb3dCbHVySW5uZXIxIj48L2ZlR2F1c3NpYW5CbHVyPgogICAgPGZlT2Zmc2V0IGR4PSIwIiBkeT0iMSIgaW49InNoYWRvd0JsdXJJbm5lcjEiIHJlc3VsdD0ic2hhZG93T2Zmc2V0SW5uZXIxIj48L2ZlT2Zmc2V0PgogICAgPGZlQ29tcG9zaXRlIGluPSJzaGFkb3dPZmZzZXRJbm5lcjEiIGluMj0iU291cmNlQWxwaGEiIG9wZXJhdG9yPSJhcml0aG1ldGljIiBrMj0iLTEiIGszPSIxIiByZXN1bHQ9InNoYWRvd0lubmVySW5uZXIxIj48L2ZlQ29tcG9zaXRlPgogICAgPGZlQ29sb3JNYXRyaXggdmFsdWVzPSIwIDAgMCAwIDEgICAwIDAgMCAwIDEgICAwIDAgMCAwIDEgIDAgMCAwIDAuMjUgMCIgdHlwZT0ibWF0cml4IiBpbj0ic2hhZG93SW5uZXJJbm5lcjEiPjwvZmVDb2xvck1hdHJpeD4KICAgIDwvZmlsdGVyPgogICAgPC9kZWZzPgogICAgPGcgaWQ9Ikh1YiIgc3Ryb2tlPSJub25lIiBzdHJva2Utd2lkdGg9IjEiIGZpbGw9Im5vbmUiIGZpbGwtcnVsZT0iZXZlbm9kZCI+CiAgICA8ZyBpZD0iQ29ydGV4LS8tSG9tZXBhZ2UiIHRyYW5zZm9ybT0idHJhbnNsYXRlKC04MC4wMDAwMDAsIC01MC4wMDAwMDApIj4KICAgIDxnIGlkPSJIZWFkZXIiPgogICAgPGcgaWQ9IkxvZ28iIHRyYW5zZm9ybT0idHJhbnNsYXRlKDgwLjAwMDAwMCwgNTAuMDAwMDAwKSI+CiAgICA8ZyB0cmFuc2Zvcm09InRyYW5zbGF0ZSgwLjUyMjM4OCwgMC4wMDAwMDApIj4KICAgIDxnIGlkPSJCYWNrZ3JvdW5kIj4KICAgIDx1c2UgZmlsbD0idXJsKCNsaW5lYXJHcmFkaWVudC0xKSIgZmlsbC1ydWxlPSJldmVub2RkIiB4bGluazpocmVmPSIjcGF0aC0yIj48L3VzZT4KICAgIDx1c2UgZmlsbD0iYmxhY2siIGZpbGwtb3BhY2l0eT0iMSIgZmlsdGVyPSJ1cmwoI2ZpbHRlci0zKSIgeGxpbms6aHJlZj0iI3BhdGgtMiI+PC91c2U+CiAgICA8L2c+CiAgICA8ZyBpZD0iQ29nbml0aXZlU2NhbGUtTG9nbyIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoOS40MDI5ODUsIDE4LjAzMDMwMykiIGZpbGw9IiNGRkZGRkYiPgogICAgPHBhdGggZD0iTTI4LjMzNTY1NTEsMTMuMDM5MzEwNSBDMzMuODUxNjc4Myw4LjU4NTM1MzY0IDM4LjczNjg3NjMsNy4yODUyNjI3MyA0MS44NDAwODQsOC4xNzU0MjQwOSBDNTAuOTYwMTI0NywxMS4wMDU2OTkxIDUwLjI1MjcxMzMsMjEuMjc4NTY1IDQ2LjAyMzAzMjEsMjUuODY4MjU4MiBDNDQuNDQ3NTAzOCwyNy41ODA1Njk1IDQzLjAwMzY2NDgsMjguMTE3Nzg3NyA0MS4zMzY5MDI2LDI4LjI3NDQyODYgQzQ3LjY2NDY4NDEsMjUuNzg5Nzk0NSA0Ny4xMDE1MTcxLDE1LjgwNDI5NDUgNDAuMTU2MzAyNiwxNC41NzAzNTM2IEMzOS41MDkwMTYzLDE0LjM5MzA5NDUgMzguNzg3NjU0OCwxNC4zNDQ2OTkxIDM4LjAwNzE0NDcsMTQuNDY5ODQgQzM3LjA0MDY3OTMsMTQuNjIzNzYwNSAzNS45ODEzMDYsMTUuMDQ0ODU4MiAzNC44Nzc1NzEyLDE1LjgxODg5OTEgQzI5LjM4ODYxMTMsMTkuMDY4NDEwNSAyNC4yNTI1ODk5LDIzLjQ1OTM2NzMgMTkuNjEzMzMyOCwyNS45ODg1MzA5IEMxNS43Mjg2Mzg1LDI4LjEwMTYwODIgMTIuNTEyMjk1MiwyOS4xMDI0NDkxIDguMTI0ODM4MDMsMjguMTcxMTk0NSBDNS44NjAxNzMsMjcuNjkxMjQ5MSA0LjA4OTkwMDc4LDI2LjY5MDQwODIgMi43ODg5MTExMywyNS4zNzQ1NjczIEMtMy4xNTY0OTcyLDE1LjAzMjgzMDkgOS4zMDkyMDQ1NSw0LjgwODY0NjgyIDE4LjE0MTU5MzUsMTYuMDI3MjI4NiBDNC4zOTM1OTUyMyw2LjM2MTU5NjgyIDIuNDkzNDQ3MjUsMjcuODk4MDAzNiAxNi4yNDg1NiwyMS4zMzI1NDQ1IEMyMC42NzgxNDY2LDE5LjIxNzAzMzIgMjQuNDk4NjcwMywxNi4xMzc5MDgyIDI4LjMzNTY1NTEsMTMuMDM5MzEwNSBaIE0xOC4xNDE2NDkzLDE2LjAyNzIxNDMgQzE0LjczMTk1NzEsLTIuMTgwMDcyMDUgMzAuNjM2MzY3MywtMy4wOTI0MjY1OSAzNi4zMTA3MjQ1LDYuMjMwNzE0MzIgQzM1LjQxODg5MjMsNi4zMDAxNTc1IDMyLjczNzY3NjIsNy43NDA0MjM0MSAzMi4xOTU4NTMsOC4yOTE4MTY1OSBDMjguOTAwNjkxNCwzLjA1MjIyMTE0IDE3LjA0NTcyNjYsNC4zNDkwMTg4NiAxOC4xNDE2NDkzLDE2LjAyNzIxNDMgWiIgaWQ9IkNvbWJpbmVkLVNoYXBlIj48L3BhdGg+CiAgICA8cGF0aCBkPSJNNDAuMTU2Mjc0NywxNC41NzA0MjUyIEM0Ny4xMDAzNzMyLDE1LjgwNDIyMyA0Ny42NjQ2NTYyLDI1Ljc4OTAwNyA0MS4zNDA3ODA3LDI4LjI3Mjc4MiBMNDEuMzQwNzgwNywyOC4yNzI3ODIgTDQxLjMzMzk0NTEsMjguMjcyNzgyIEM0MC4zNDM3NjQ1LDI4LjQ4MzkzMTcgMzkuNTU2NzI5MiwyOC41MTYzNDczIDM3LjU3OTI1NywyOC41MjA0MDEyIEwxOS43MTQ4NjE5LDI4LjUyMDkxNjEgQzE5LjcxNDg2MTksMjguNTIwOTE2MSAxOS44MDg0NjczLDI4LjQ3ODk2MzkgMjAuMDQzODA2MSwyOC4zNjk3MTYxIEMyMS4zMDUwMzc4LDI3Ljc3MjA3NTIgMjguMDEyOTYwNiwyMy40MTk3Nzc1IDI5LjIyMjU3NjgsMjIuMTEyOTU3IEMzMi4yMTM5MDQ0LDIyLjExMjk1NyAzNS4yOTAzMjc4LDIyLjIzOTY3MyAzOC4yNzk3MDI0LDIyLjExMjk1NyBDNDUuMTQxNTM4NiwyMS44MjI1OTU1IDQ0LjIwMzkzNjcsMTUuNzgyMzgxNSA0MC4yNTU2ODMyLDE0LjU5ODQ1MTIgWiBNMzYuMzEwNzM4NCw2LjIzMDY0MjczIEMzMC42MzYzODEyLC0zLjA5MjQ5ODE4IDE0LjczMTk3MSwtMi4xODAxNDM2NCAxOC4xNDE2NjMyLDE2LjAyNzE0MjcgQzkuMzEzODc3ODQsNC44MTMxNDI3MyAtMy4xNDUxMjc4NCwxNS4wMjQwMTA5IDIuNzgwNjEwOCwyNS4zNjMzMTMyIEMtMy43MjM1MDA0NywxOC43NzUyMzE0IDEuNDg4ODI4MjMsNC4yODM2NTYzNiAxNS4yMTc1NzUzLDcuMTc5MDc5MDkgQzE5LjMzNDM5OTgsLTIuNTQ2NDAyNzMgMzEuNTEzMDA3OCwtMS45MjE5ODY4MiAzNi4zMTA3Mzg0LDYuMjMwNjQyNzMgWiIgaWQ9IkNvbWJpbmVkLVNoYXBlIiBvcGFjaXR5PSIwLjUiPjwvcGF0aD4KICAgIDwvZz4KICAgIDx0ZXh0IGlkPSJDb3J0ZXgiIGZvbnQtZmFtaWx5PSJSb2JvdG8tUmVndWxhciwgUm9ib3RvIiBmb250LXNpemU9IjMyIiBmb250LXdlaWdodD0ibm9ybWFsIiBsaW5lLXNwYWNpbmc9IjI0IiBsZXR0ZXItc3BhY2luZz0iNCIgZmlsbD0iIzAwQzFCNCI+CiAgICA8dHNwYW4geD0iODcuNDc3NjExOSIgeT0iNDYiPkNPUlRFWDwvdHNwYW4+CiAgICA8L3RleHQ+CiAgICA8L2c+CiAgICA8L2c+CiAgICA8L2c+CiAgICA8L2c+CiAgICA8L2c+CiAgICA8L3N2Zz4KICBtZXRhZGF0YS55YW1sOiB8CiAgICB0aGVtaW5nOgogICAgICBicmFuZGluZzoKICAgICAgICBjb3B5cmlnaHQ6ICLCqSBDb2duaXRpdmVTY2FsZSwgSW5jLiAyMDIwLiZlbnNwO0FsbCBSaWdodHMgUmVzZXJ2ZWQuIgogICAgICAgIGh1Yk5hbWU6ICJUcnVzdGVkIEFJIEh1YiBmb3IgSGVhbHRoY2FyZSIKICAgICAgICBodWJEZXNjcmlwdGlvbjogfAogICAgICAgICAgQSBmZWRlcmF0ZWQgb25saW5lIHJlcG9zaXRvcnkgb2YgdHJ1c3RlZCBwdWJsaWMgYW5kIHByaXZhdGUgZGF0YXNldHMgYW5kIHByZWRpY3RpdmUgbW9kZWxzIHRvIGhlbHAgaW1wcm92ZSBBSSwgTUwsIEFuYWx5dGljcywgYW5kIFJlc2VhcmNoIG91dGNvbWVzIGZvciBIZWFsdGhjYXJlLgogICAgICAgIGxvZ29tYXJrOiBjb3J0ZXgtbG9nby5zdmcK"
              }
            },
            "hub-cronjob": {
              "command": [
                "node",
                "./pipeline/extractMeta.js",
                "--repo",
                "/work",
                "--cloneRepo",
                "https://github.com/CognitiveScale/xpa-hub",
                "--mongoUrl",
                "$(MONGODB_URI)"
              ],
              "schedule": "*/10 * * * *"
            },
            "mongo-uri": "mongodb://cortex-mongodb.cortex-hub.svc.cluster.local:27017/cortex_hub?authSource=admin"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-healthcare-hub-operator-bundle@sha256:27cb3851d88ee293c260e452670cad361800cc50b1c9ff98cd3617113b13d117",
      "bundle_path_digest": "sha256:27cb3851d88ee293c260e452670cad361800cc50b1c9ff98cd3617113b13d117",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:30:32.449000+00:00",
      "csv_description": "Trusted AI Hub for Healthcare is a trusted catalog of public data and models with built-in viability, fitness,\nand quality metrics packaged up into an easy to use Healthcare Quality Index Label.  This allows developers,\nmachine learning enthusiasts, researchers to contribute, collaborate and discover trusted data and models for this initiative.\nThe Trusted AI Hub for Healthcare is made available from within IBM, CognitiveScale,AI Global, and Anthem websites.\n\nDevelopers, Researchers, Machine Learning enthusiasts and scientists can use this trusted catalog to discover\nas well as contribute their data and model assets for the broader community. This will ultimately accelerate\nthe Healthcare ecosystem collaboration to build high performance, trustworthy, and risk managed digital systems to fight the pandemics.\n\n###Quicky discover trusted data and models\n\nTrusted AI Hub for Healthcare makes it easier to discover and search assets using the Search and filter options in the main page.\n\n###Easy to use and contribute\n\nTrusted AI Hub for Healthcare is easy to use as it simply relies on a common code collaboration tool,\nGithub to be the base repository for models and datasets. It doesn\u2019t require the assets to be stored elsewhere.\nWith few easy steps, contributors can publish their assets into the Hub.\n\n###Pre-populated catalog of Trusted data and models\n\nTrusted AI Hub for Healthcare comes with a wide range of public datasets and models from public domain such as\nthe CDC, NIH as well as from universities like Johns Hopkins, University of Washington.\n\n###Trusted data and models\n\nThe Trusted AI Hub for Healthcare provides scanning of models and datasets based on Cortex Certifai\u2019s ability\nto perform black box model scanning around fairness, explainability, robustness, and compliance.\nFor more information about Cortex Certifai, visit [https://www.cognitivescale.com/certifai/](https://www.cognitivescale.com/certifai/).\nThe scan results will be made available as Quality Index labels for each of the assets in the Hub.\n",
      "csv_display_name": "Trusted AI Hub for Healthcare Operator",
      "csv_metadata_description": "Trusted AI Hub for Healthcare is a trusted catalog of public data and models with built-in viability, fitness, and quality metrics packaged up into an easy to use Healthcare Quality Index Label.",
      "csv_name": "cortex-healthcare-hub-operator.v0.0.24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:07:13.060000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cortex-healthcare-hub-operator",
      "provided_apis": [
        {
          "group": "hubs.cortex.cognitivescale.com",
          "kind": "Hub",
          "plural": "hubs",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:aaf802814f90497e756867c90eb4985396474cd75c5507df630d857a7cb95492",
          "image": "registry.connect.redhat.com/c12e/cortex-healthcare-hub-operator@sha256:aaf802814f90497e756867c90eb4985396474cd75c5507df630d857a7cb95492",
          "name": "cortex-healthcare-hub-operator-aaf802814f90497e756867c90eb4985396474cd75c5507df630d857a7cb95492-annotation"
        },
        {
          "digest": "sha256:d2065b4e6b0ed212be45ce014834f59a1ce7f9e92bd7de51e63a0f6fd8c7996f",
          "image": "registry.connect.redhat.com/c12e/cortex-healthcare-hub-operator@sha256:d2065b4e6b0ed212be45ce014834f59a1ce7f9e92bd7de51e63a0f6fd8c7996f",
          "name": "cortex-hub-operator"
        },
        {
          "digest": "sha256:2c766e8e1f67ba8b8b58bf4520964077c88b15d09207a177984d9b2558bee17b",
          "image": "registry.connect.redhat.com/c12e/cortex-hub@sha256:2c766e8e1f67ba8b8b58bf4520964077c88b15d09207a177984d9b2558bee17b",
          "name": "cortex_hub"
        },
        {
          "digest": "sha256:2c766e8e1f67ba8b8b58bf4520964077c88b15d09207a177984d9b2558bee17b",
          "image": "registry.connect.redhat.com/c12e/cortex-hub@sha256:2c766e8e1f67ba8b8b58bf4520964077c88b15d09207a177984d9b2558bee17b",
          "name": "cortex_hub_cron_job"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.24",
      "version_original": "0.0.24"
    },
    {
      "_id": "609ab12ad04af0e74bb0590e",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:539a8f4e847a89523f1acf2e6dfb00ed2776b38ec3f24a5bedb2e71fac65ab5b",
      "bundle_path_digest": "sha256:539a8f4e847a89523f1acf2e6dfb00ed2776b38ec3f24a5bedb2e71fac65ab5b",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2021-05-11T16:30:34.188000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redhat-marketplace-operator.v1.0.2",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T16:44:04.220000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "609ab12b3048c1ac9a6feb95",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "bundle_path_digest": "sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "capabilities": [
        ""
      ],
      "channel_name": "6.0.12",
      "creation_date": "2021-05-11T16:30:35.876000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:35:16.968000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.8-1",
      "version_original": "6.0.8-1"
    },
    {
      "_id": "609ab12d3048c1ac9a6feb96",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:e1c153bcadefa513dcb4df736084dcd6885ef014e7ff34dbbbeba8158839c59c",
      "bundle_path_digest": "sha256:e1c153bcadefa513dcb4df736084dcd6885ef014e7ff34dbbbeba8158839c59c",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:30:37.397000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "t8c-operator.v7.22.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:53:46.792000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "7.22.0",
      "version_original": "7.22.0"
    },
    {
      "_id": "609ab12ee2b160d361d2520d",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/data-explorer-operator-bundle@sha256:af28ac6d3c7b2f0267b54554b777a6475c6e61fb32dc09d0e5018a0709d363c7",
      "bundle_path_digest": "sha256:af28ac6d3c7b2f0267b54554b777a6475c6e61fb32dc09d0e5018a0709d363c7",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:30:38.566000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "data-explorer-operator.v0.0.5",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:01:58.402000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "data-explorer-operator-certified",
      "provided_apis": [
        {
          "group": "data-explorer.com",
          "kind": "DashboardWithJupyterHub",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.5",
      "version_original": "0.0.5"
    },
    {
      "_id": "609ab132d04af0e74bb05912",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "bundle_path_digest": "sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.8",
      "creation_date": "2021-05-11T16:30:42.037000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:27:11.619000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "redislabs/operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "operator-998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b-annotation"
        },
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.6-24",
      "version_original": "6.0.6-24"
    },
    {
      "_id": "609ab132d04af0e74bb05914",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "bundle_path_digest": "sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.8",
      "creation_date": "2021-05-11T16:30:42.904000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:15:30.748000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "image": "redislabs/operator@sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "name": "operator-fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2-annotation"
        },
        {
          "digest": "sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.6-11",
      "version_original": "6.0.6-11"
    },
    {
      "_id": "609ab136e2b160d361d25210",
      "alm_examples": [
        {
          "api_version": "instana.io/v1beta1",
          "kind": "InstanaAgent",
          "metadata": {
            "name": "instana-agent",
            "namespace": "instana-agent"
          },
          "spec": {
            "agent.endpoint.host": "ingress-red-saas.instana.io",
            "agent.endpoint.port": 443,
            "agent.env": {
              "INSTANA_AGENT_TAGS": "example"
            },
            "agent.key": "replace-me",
            "agent.zone.name": "my-zone",
            "cluster.name": "replace-me",
            "config.files": {
              "configuration.yaml": "# You can leave this empty, or use this to configure your instana agent.\n# See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/instana/instana-agent-operator-bundle@sha256:ecc0a89cd5491a33c3f45b1607df01c1d0e90b04001beaeacc28853c4a85e185",
      "bundle_path_digest": "sha256:ecc0a89cd5491a33c3f45b1607df01c1d0e90b04001beaeacc28853c4a85e185",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-05-11T16:30:46.277000+00:00",
      "csv_description": "# Instana\n\nInstana is an [APM solution](https://www.instana.com/product-overview/) built for microservices that enables IT Ops to build applications faster and deliver higher quality services by automating monitoring, tracing and root cause analysis. The solution is optimized for [Kubernetes](https://www.instana.com/automatic-kubernetes-monitoring/) and [OpenShift](https://www.instana.com/blog/automatic-root-cause-analysis-for-openshift-applications/).\n\n## Instana Agent Operator\n\nThis is the Kubernetes Operator for installing the Instana Agent on Kubernetes or OpenShift.\n\n## Prerequisites for OpenShift\n\nBefore the agent will be able to run in OpenShift, you need to perform a couple of extra configuration steps.\n\nYou need to set up a project for the Instana Agent and configure it's permissions.\n\nThe project you create here needs to be the namespace where you create the Instana Agent custom resource that the operator will use to deploy the agent.\n\nFor example, create the `instana-agent` project:\n\n    oc new-project instana-agent\n\nThen, ensure the `instana-agent` service account is in the privileged security context:\n\n    oc adm policy add-scc-to-user privileged -z instana-agent\n\nThis service account will be created by the operator.\n\nNow you can proceed with installing the operator for the Instana agent.\n\n## Installation and Configuration\n\nFirst, install this operator from [OperatorHub.io](https://operatorhub.io/), [OpenShift Container Platform](https://www.openshift.com/), or [OKD](https://www.okd.io/).\n\nSecond, create the target namespace where the Instana agent should be installed. The agent does not need to run in the same namespace as the operator. Most users create a new namespace `instana-agent` for running the agents.\n\nThird, create a custom resource with the agent configuration in the target namespace. The operator will pick up the custom resource and install the Instana agent accordingly.\n\nThe following is a minimal template of the custom resource:\n\n```yaml\napiVersion: instana.io/v1beta1\nkind: InstanaAgent\nmetadata:\n  name: instana-agent\n  namespace: instana-agent\nspec:\n  agent.zone.name: my-zone # (optional) name of the zone of the host\n  agent.key: replace-me # replace with your Instana agent key\n  agent.endpoint.host: ingress-red-saas.instana.io # the monitoring ingress endpoint\n  agent.endpoint.port: 443 # the monitoring ingress endpoint port, wrapped in quotes\n  agent.env:\n    INSTANA_AGENT_TAGS: example\n  cluster.name: replace-me # replace with the name of your Kubernetes cluster\n  config.files:\n    configuration.yaml: |\n      # You can leave this empty, or use this to configure your instana agent.\n      # See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n```\n\nSave the template in a file `instana-agent.yaml` and edit the following values:\n\n* If your target namespace is not `instana-agent`, replace the `namespace:` accordingly.\n* `agent.key` must be set with your Instana agent key.\n* `agent.endpoint` must be set with the monitoring ingress endpoint, generally either `saas-us-west-2.instana.io` or `saas-eu-west-1.instana.io`.\n* `agent.endpoint.port` must be set with the monitoring ingress port, generally \"443\" (wrapped in quotes).\n* `agent.zone.name` should be set with the name of the Kubernetes cluster that is be displayed in Instana.\n\nFor advanced configuration, you can edit the contents of the `configuration.yaml` file. View documentation [here](https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/).\n\nApply the custom resource with `kubectl apply -f instana-agent.yaml`. After some time, you should see `instana-agent` Pods being created on each node of your cluster, and your cluster should show on the infrastructure map on your Instana Web interface.\n\n## Uninstalling\n\nIn order to uninstall the Instana agent, simply remove the custom resource with `kubectl delete -f instana-agent.yaml`.\n\n## Source Code\n\nThe Instana agent operator is an open source project hosted on [https://github.com/instana/instana-agent-operator](https://github.com/instana/instana-agent-operator/).\n",
      "csv_display_name": "Instana Agent Operator",
      "csv_metadata_description": "Fully automated Application Performance Monitoring (APM) for microservices.",
      "csv_name": "instana-agent-operator.v1.0.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:22:57.056000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "instana-agent",
      "provided_apis": [
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1beta1"
        },
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d7ef693e2b03907c0933f8dd20392d42e5ce6add4a9cc7d557cd747038b67cf5",
          "image": "registry.connect.redhat.com/instana/instana-agent-operator@sha256:d7ef693e2b03907c0933f8dd20392d42e5ce6add4a9cc7d557cd747038b67cf5",
          "name": "instana-agent-operator-d7ef693e2b03907c0933f8dd20392d42e5ce6add4a9cc7d557cd747038b67cf5-annotation"
        },
        {
          "digest": "sha256:d7ef693e2b03907c0933f8dd20392d42e5ce6add4a9cc7d557cd747038b67cf5",
          "image": "registry.connect.redhat.com/instana/instana-agent-operator@sha256:d7ef693e2b03907c0933f8dd20392d42e5ce6add4a9cc7d557cd747038b67cf5",
          "name": "instana-agent-operator"
        },
        {
          "digest": "sha256:dfd02a82d7414d644ab6e47c28fac98b8b60737b7922ce0468ebb72e24b989f0",
          "image": "registry.connect.redhat.com/instana/agent@sha256:dfd02a82d7414d644ab6e47c28fac98b8b60737b7922ce0468ebb72e24b989f0",
          "name": "instana_agent"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.5",
      "version_original": "1.0.5"
    },
    {
      "_id": "609ab139e2b160d361d25212",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-28.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "bundle_path_digest": "sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.8",
      "creation_date": "2021-05-11T16:30:49.986000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:01:03.286000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca",
          "image": "redislabs/operator@sha256:29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca",
          "name": "operator-29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca-annotation"
        },
        {
          "digest": "sha256:29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.8-1",
      "version_original": "6.0.8-1"
    },
    {
      "_id": "609ab13b56933b164fe212a7",
      "alm_examples": [
        {
          "api_version": "data-explorer.com/v1alpha1",
          "kind": "DashboardWithJupyterHub",
          "metadata": {
            "name": "dashboard-jupyterhub-custom"
          },
          "spec": {
            "resources": {
              "limits": {
                "cpu": "2",
                "memory": "8Gi"
              },
              "requests": {
                "cpu": "2",
                "memory": "8Gi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/data-explorer-operator-bundle@sha256:2f9440148f9741bc7ebf6d59d02b42ab4e8969ead1eac58251578e2ef1524400",
      "bundle_path_digest": "sha256:2f9440148f9741bc7ebf6d59d02b42ab4e8969ead1eac58251578e2ef1524400",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:30:51.131000+00:00",
      "csv_description": "Data Explorer provides ready to use pre-configured data science environment for experimentation.Bringing the promise of notebooks to Kubernetes and OpenShift as an Operator pattern.  Deploy in the cloud or your data center or local laptop with ready to use data and notebooks without burdening yourself with installation details. You can work as team or use your own project namespace.\n\nThe Operator deploys Data Explorer Dashbaord with **default** configuration of **2 CPU** and **8Gi Memory**.\n\nTo learn ***How to access the Data Explorer Dashboard*** and ***How to Deploy Data Explorer Dashboard with custom configuration*** visit <https://github.com/rhm-samples/data-explorer-operator/wiki>.\n",
      "csv_display_name": "Data Explorer Operator",
      "csv_metadata_description": "",
      "csv_name": "data-explorer-operator.v0.0.10",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:01:52.542000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "data-explorer-operator-certified",
      "provided_apis": [
        {
          "group": "data-explorer.com",
          "kind": "DashboardWithJupyterHub",
          "plural": "dashboardwithjupyterhubs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4183a28cc9cbd3b2bbc83543c37b0341c0f76b5176f1ba210baae651869319af",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:4183a28cc9cbd3b2bbc83543c37b0341c0f76b5176f1ba210baae651869319af",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:857f8bee63a061c07df9445a50d69a55d6278391c30002dab9c1ad3bdba3f278",
          "image": "registry.connect.redhat.com/ibm-edge/data-explorer-operator@sha256:857f8bee63a061c07df9445a50d69a55d6278391c30002dab9c1ad3bdba3f278",
          "name": "manager"
        },
        {
          "digest": "sha256:5ee83b7deb12d92a115ed150922632745e5f9f3c5d6e925c7b20027b9716df63",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:5ee83b7deb12d92a115ed150922632745e5f9f3c5d6e925c7b20027b9716df63",
          "name": "dashboardinstaller"
        },
        {
          "digest": "sha256:99d8ba8ef3c63ac94c3647ae390e2af4b1374f18d0b72707583c95aa87b7da18",
          "image": "registry.connect.redhat.com/ibm-edge/data-explorer-dashboard@sha256:99d8ba8ef3c63ac94c3647ae390e2af4b1374f18d0b72707583c95aa87b7da18",
          "name": "jupyterhub_dashboard"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.10",
      "version_original": "0.0.10"
    },
    {
      "_id": "609ab13cd04af0e74bb05919",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.6",
      "creation_date": "2021-05-11T16:30:52.761000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:15:40.251000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "609ab13e3048c1ac9a6feb9b",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:c7fa6441efdf970ef645bcd0e390329b27497a920ff18c5c62baef26d06846af",
      "bundle_path_digest": "sha256:c7fa6441efdf970ef645bcd0e390329b27497a920ff18c5c62baef26d06846af",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:30:54.255000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "nastel-navigator-operator.v0.0.15",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:53:10.243000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.15",
      "version_original": "0.0.15"
    },
    {
      "_id": "609ab13e3048c1ac9a6feb9c",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "bundle_path_digest": "sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2021-05-11T16:30:54.389000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:54:23.481000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "redislabs/operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "operator-998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b-annotation"
        },
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.6-24",
      "version_original": "6.0.6-24"
    },
    {
      "_id": "609ab13f56933b164fe212a9",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-certifai-operator-bundle@sha256:26199886640c352804df4a634f5ea3e45c3c4d4e41f241e9ef36cd4b3536be57",
      "bundle_path_digest": "sha256:26199886640c352804df4a634f5ea3e45c3c4d4e41f241e9ef36cd4b3536be57",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:30:55.336000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "cortex-certifai-operator.v1.3.3",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:15:52.346000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "cortex-certifai-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.3.3",
      "version_original": "1.3.3"
    },
    {
      "_id": "609ab141e2b160d361d25215",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/growth-stack-operator-bundle@sha256:04327840791db3cd6e2ffa48084a515dc763f2119ca678f9d63cf7a11b2f4c82",
      "bundle_path_digest": "sha256:04327840791db3cd6e2ffa48084a515dc763f2119ca678f9d63cf7a11b2f4c82",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:30:57.370000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "growth-stack-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:49:46.466000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "growth-stack-operator-certified",
      "provided_apis": [
        {
          "group": "growth-stack.operator.com",
          "kind": "GenerateKey",
          "version": "v1alpha1"
        },
        {
          "group": "growth-stack.operator.com",
          "kind": "GrowthStackSuite",
          "plural": "growthstacksuites",
          "version": "v1alpha1"
        },
        {
          "group": "growth-stack.operator.com",
          "kind": "StoreForwardMetric",
          "version": "v1alpha1"
        },
        {
          "group": "growth-stack.operator.com",
          "kind": "AirgappedDeployment",
          "version": "v1alpha1"
        },
        {
          "group": "growth-stack.operator.com",
          "kind": "AnalyticsProxy",
          "version": "v1alpha1"
        },
        {
          "group": "growth-stack.operator.com",
          "kind": "DeleteCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "609ab1453048c1ac9a6feb9d",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "bundle_path_digest": "sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "capabilities": [
        ""
      ],
      "channel_name": "6.0.6",
      "creation_date": "2021-05-11T16:31:01.354000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-6",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T16:59:20.070000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.6-6",
      "version_original": "6.0.6-6"
    },
    {
      "_id": "609ab147d04af0e74bb0591a",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:b77778d5cf77fc1ab9a72814118af5dc43d44c7d0d802c16a7862c09370b0e13",
      "bundle_path_digest": "sha256:b77778d5cf77fc1ab9a72814118af5dc43d44c7d0d802c16a7862c09370b0e13",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:31:03.108000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "mongodb-enterprise.v1.2.3",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:11:27.341000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.2.3",
      "version_original": "1.2.3"
    },
    {
      "_id": "609ab14b56933b164fe212ab",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:f1fc06ee96cc7509e5dc94ef6cd87921fbbe4b4112d9561c14ee06a426c59f91",
      "bundle_path_digest": "sha256:f1fc06ee96cc7509e5dc94ef6cd87921fbbe4b4112d9561c14ee06a426c59f91",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2021-05-11T16:31:07.233000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "neuvector-operator.v0.9.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:01:37.673000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.9.0",
      "version_original": "0.9.0"
    },
    {
      "_id": "609ab14e3048c1ac9a6feb9f",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/data-explorer-operator-bundle@sha256:20211956d089d8958f08e103304eae586144cddddb5cf17f71fc749cbe6a4da7",
      "bundle_path_digest": "sha256:20211956d089d8958f08e103304eae586144cddddb5cf17f71fc749cbe6a4da7",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:31:10.841000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "data-explorer-operator.v0.0.9",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:10:16.364000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "data-explorer-operator-certified",
      "provided_apis": [
        {
          "group": "data-explorer.com",
          "kind": "DashboardWithJupyterHub",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.9",
      "version_original": "0.0.9"
    },
    {
      "_id": "609ab15156933b164fe212ac",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:b92cedadfa89a8e92ffe6f09292bd7af020a5bd8fd7d35d8d569090ce4a4091d",
      "bundle_path_digest": "sha256:b92cedadfa89a8e92ffe6f09292bd7af020a5bd8fd7d35d8d569090ce4a4091d",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:31:13.424000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "nastel-navigator-operator.v0.0.17",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:10:27.441000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.17",
      "version_original": "0.0.17"
    },
    {
      "_id": "609ab152d04af0e74bb0591c",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:5ec5a5cbaf6e667e761d3a6273c44f5facf29dabe2ffe502f08fe345536c8dc8",
      "bundle_path_digest": "sha256:5ec5a5cbaf6e667e761d3a6273c44f5facf29dabe2ffe502f08fe345536c8dc8",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:31:14.082000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "gpu-operator-certified.v1.5.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:27:11.844000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.5.1",
      "version_original": "1.5.1"
    },
    {
      "_id": "609ab152e2b160d361d25218",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.8",
      "creation_date": "2021-05-11T16:31:14.393000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:15:40.176000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "609ab153d04af0e74bb0591d",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/instana/instana-agent-operator-bundle@sha256:30cc380829d5185e535c6ce2862fdfbe725694e638edade24d1d2ead76f063ca",
      "bundle_path_digest": "sha256:30cc380829d5185e535c6ce2862fdfbe725694e638edade24d1d2ead76f063ca",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2021-05-11T16:31:15.285000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "instana-agent-operator.v0.3.4",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:14:04.646000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "instana-agent",
      "provided_apis": [
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "version": "v1beta1"
        },
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.3.4",
      "version_original": "0.3.4"
    },
    {
      "_id": "609ab153d04af0e74bb0591e",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:b92cedadfa89a8e92ffe6f09292bd7af020a5bd8fd7d35d8d569090ce4a4091d",
      "bundle_path_digest": "sha256:b92cedadfa89a8e92ffe6f09292bd7af020a5bd8fd7d35d8d569090ce4a4091d",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:31:15.990000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "nastel-navigator-operator.v0.0.17",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:09:57.048000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.17",
      "version_original": "0.0.17"
    },
    {
      "_id": "609ab15456933b164fe212ad",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/memsql/operator-bundle@sha256:47b4b5c50c392e404ca01fcb53fb7ccaf56000ccaeeeded071662df29b5fb44f",
      "bundle_path_digest": "sha256:47b4b5c50c392e404ca01fcb53fb7ccaf56000ccaeeeded071662df29b5fb44f",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:31:16.550000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "memsql-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:25:06.341000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "memql-certified",
      "provided_apis": [
        {
          "group": "memsql.com",
          "kind": "MemsqlCluster",
          "plural": "memsqlclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "609ab1573048c1ac9a6feba4",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:ec4bd24750f0805bac6826127cf7831a7dc3e3a5a9a598d0bfa05fc0db11f705",
      "bundle_path_digest": "sha256:ec4bd24750f0805bac6826127cf7831a7dc3e3a5a9a598d0bfa05fc0db11f705",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:31:19.107000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "tigera-operator.v1.5.3",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:19:42.318000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.5.3",
      "version_original": "1.5.3"
    },
    {
      "_id": "609ab15cd04af0e74bb05921",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-fabric-operator-bundle@sha256:de8cf8423ab8ea22f2090947fb51c3091407fcca623d5a83137b266c43e00f6d",
      "bundle_path_digest": "sha256:de8cf8423ab8ea22f2090947fb51c3091407fcca623d5a83137b266c43e00f6d",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:31:24.622000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "cortex-fabric-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:43:21.916000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cortex-fabric-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Cortex5",
          "plural": "cortex5s",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "609ab15fd04af0e74bb05923",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.6",
      "creation_date": "2021-05-11T16:31:27.264000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:17:27.259000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "609ab16056933b164fe212af",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-core-operator-bundle@sha256:c380d43717df7db52058bcf261ece6ceb0e0ce779b0576d31d25d8a3c9c70e55",
      "bundle_path_digest": "sha256:c380d43717df7db52058bcf261ece6ceb0e0ce779b0576d31d25d8a3c9c70e55",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:31:28.414000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "seldon-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:04:10.549000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "seldon-operator-certified",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha3"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha2"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "609ab16356933b164fe212b1",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "bundle_path_digest": "sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "capabilities": [
        ""
      ],
      "channel_name": "6.0.12",
      "creation_date": "2021-05-11T16:31:31.256000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:15:04.699000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.8-1",
      "version_original": "6.0.8-1"
    },
    {
      "_id": "609ab1633048c1ac9a6feba9",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:cf4a0448fa22963d711bb2d3af8b56e3c356073b76233f33421121403893a859",
      "bundle_path_digest": "sha256:cf4a0448fa22963d711bb2d3af8b56e3c356073b76233f33421121403893a859",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:31:31.544000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "couchbase-operator.v1.2.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:27:50.875000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.2.1",
      "version_original": "1.2.1"
    },
    {
      "_id": "609ab164e2b160d361d2521e",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/memsql/operator-bundle@sha256:47b4b5c50c392e404ca01fcb53fb7ccaf56000ccaeeeded071662df29b5fb44f",
      "bundle_path_digest": "sha256:47b4b5c50c392e404ca01fcb53fb7ccaf56000ccaeeeded071662df29b5fb44f",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:31:32.689000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "memsql-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:29:18.452000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "memql-certified",
      "provided_apis": [
        {
          "group": "memsql.com",
          "kind": "MemsqlCluster",
          "plural": "memsqlclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "609ab1663048c1ac9a6febab",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-certifai-operator-bundle@sha256:26199886640c352804df4a634f5ea3e45c3c4d4e41f241e9ef36cd4b3536be57",
      "bundle_path_digest": "sha256:26199886640c352804df4a634f5ea3e45c3c4d4e41f241e9ef36cd4b3536be57",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2021-05-11T16:31:34.512000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "cortex-certifai-operator.v1.3.3",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:23:04.212000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cortex-certifai-operator",
      "provided_apis": [
        {
          "group": "cortex.cognitivescale.com",
          "kind": "Certifai",
          "plural": "certifais",
          "version": "v1"
        },
        {
          "group": "cortex.cognitivescale.com",
          "kind": "CertifaiScan",
          "plural": "certifaiscans",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.3.3",
      "version_original": "1.3.3"
    },
    {
      "_id": "609ab16a3048c1ac9a6febae",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-30.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "bundle_path_digest": "sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.20",
      "creation_date": "2021-05-11T16:31:38.360000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T00:56:23.314000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator-0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1-annotation"
        },
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.8-20",
      "version_original": "6.0.8-20"
    },
    {
      "_id": "609ab16f3048c1ac9a6febaf",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:3a70920f1aca227ebe5b1db44125c4370bad00379a941f0bac301d61ee112ba2",
      "bundle_path_digest": "sha256:3a70920f1aca227ebe5b1db44125c4370bad00379a941f0bac301d61ee112ba2",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:31:43.505000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "gpu-operator-certified.v1.3.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:34:36.903000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.3.0",
      "version_original": "1.3.0"
    },
    {
      "_id": "609ab193e2b160d361d25229",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tufin/orca-operator-bundle@sha256:95250ad63b44b9c3c4cca17514d4fa0396c7a8f1d0c5394383c70f4cee653cfa",
      "bundle_path_digest": "sha256:95250ad63b44b9c3c4cca17514d4fa0396c7a8f1d0c5394383c70f4cee653cfa",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2021-05-11T16:32:19.225000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "orca-operator.v1.0.193",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:22:14.672000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "orca",
      "provided_apis": [
        {
          "group": "tufin.io",
          "kind": "Orca",
          "plural": "orcas",
          "version": "v1alpha1"
        },
        {
          "group": "networking.tufin.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.193",
      "version_original": "1.0.193"
    },
    {
      "_id": "609adc0cd04af0e74bb05998",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:45e1a7f6115be1545cf0ad204a206458277c80e83cff7414726e05f40edb83b5",
      "bundle_path_digest": "sha256:45e1a7f6115be1545cf0ad204a206458277c80e83cff7414726e05f40edb83b5",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T19:33:32.014000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "portworx-operator.v1.3.4",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:04:59.639000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.3.4",
      "version_original": "1.3.4"
    },
    {
      "_id": "609af5433048c1ac9a6fec3d",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:02820de3e0134fbca92a2d59286dfc4c873a2df593d9b08e1e17481554c9c717",
      "bundle_path_digest": "sha256:02820de3e0134fbca92a2d59286dfc4c873a2df593d9b08e1e17481554c9c717",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T21:21:07.133000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.5.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:48:46.940000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:83ba32833b8284fa923d9818df3636ac717b6ad5650e904ee14367fdffe3b83c",
          "image": "quay.io/tigera/operator@sha256:83ba32833b8284fa923d9818df3636ac717b6ad5650e904ee14367fdffe3b83c",
          "name": "operator-83ba32833b8284fa923d9818df3636ac717b6ad5650e904ee14367fdffe3b83c-annotation"
        },
        {
          "digest": "sha256:83ba32833b8284fa923d9818df3636ac717b6ad5650e904ee14367fdffe3b83c",
          "image": "quay.io/tigera/operator@sha256:83ba32833b8284fa923d9818df3636ac717b6ad5650e904ee14367fdffe3b83c",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.5.2",
      "version_original": "1.5.2"
    },
    {
      "_id": "609b25ede2b160d361d252b3",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/data-explorer-operator-bundle@sha256:efff12d1b48af0f69de56abd18edc717c6a647f52c7e34b41bc38191cffcc363",
      "bundle_path_digest": "sha256:efff12d1b48af0f69de56abd18edc717c6a647f52c7e34b41bc38191cffcc363",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-12T00:48:45.545000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "data-explorer-operator.v0.0.6",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:03:57.874000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "data-explorer-operator-certified",
      "provided_apis": [
        {
          "group": "data-explorer.com",
          "kind": "DashboardWithJupyterHub",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.6",
      "version_original": "0.0.6"
    },
    {
      "_id": "609c2a0ee2b160d361d253c1",
      "alm_examples": [
        {
          "api_version": "crunchydata.com/v1",
          "kind": "Pgcluster",
          "metadata": {
            "annotations": {
              "current-primary": "hippo"
            },
            "labels": {
              "crunchy-pgha-scope": "hippo",
              "deployment-name": "hippo",
              "name": "hippo",
              "namespace": "pgo",
              "pg-cluster": "hippo",
              "pgo-version": "4.6.2"
            },
            "name": "hippo"
          },
          "spec": {
            "BackrestStorage": {
              "accessmode": "ReadWriteMany",
              "matchLabels": "",
              "name": "",
              "size": "5Gi",
              "storageclass": "",
              "storagetype": "dynamic",
              "supplementalgroups": ""
            },
            "PrimaryStorage": {
              "accessmode": "ReadWriteMany",
              "matchLabels": "",
              "name": "hippo",
              "size": "5Gi",
              "storageclass": "",
              "storagetype": "dynamic",
              "supplementalgroups": ""
            },
            "ReplicaStorage": {
              "accessmode": "ReadWriteMany",
              "matchLabels": "",
              "name": "",
              "size": "5Gi",
              "storageclass": "",
              "storagetype": "dynamic",
              "supplementalgroups": ""
            },
            "ccpimage": "crunchy-postgres-ha",
            "ccpimagetag": "ubi8-13.2-4.6.2",
            "clustername": "hippo",
            "database": "hippo",
            "exporterport": "9187",
            "name": "hippo",
            "namespace": "pgo",
            "pgbadgerport": "10000",
            "podAntiAffinity": {
              "default": "preferred"
            },
            "port": "5432",
            "user": "hippo",
            "userlabels": {
              "pgo-version": "4.6.2"
            }
          }
        },
        {
          "api_version": "crunchydata.com/v1",
          "kind": "Pgreplica",
          "metadata": {
            "name": "example"
          },
          "spec": {}
        },
        {
          "api_version": "crunchydata.com/v1",
          "kind": "Pgpolicy",
          "metadata": {
            "name": "example"
          },
          "spec": {}
        },
        {
          "api_version": "crunchydata.com/v1",
          "kind": "Pgtask",
          "metadata": {
            "name": "example"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/crunchydata/postgres-operator-bundle@sha256:0f00850ef583bd1c889da6219cb40759809df7d0dd552658c36517c45a8fef39",
      "bundle_path_digest": "sha256:0f00850ef583bd1c889da6219cb40759809df7d0dd552658c36517c45a8fef39",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-12T19:18:38.927000+00:00",
      "csv_description": "Crunchy PostgreSQL for OpenShift lets you run your own production-grade PostgreSQL-as-a-Service on OpenShift!\n\nPowered by the Crunchy [PostgreSQL Operator](https://github.com/CrunchyData/postgres-operator), Crunchy PostgreSQL\nfor OpenShift automates and simplifies deploying and managing open source PostgreSQL clusters on OpenShift by\nproviding the essential features you need to keep your PostgreSQL clusters up and running, including:\n\n- **PostgreSQL Cluster Provisioning**: [Create, Scale, & Delete PostgreSQL clusters with ease][provisioning],\n  while fully customizing your Pods and PostgreSQL configuration!\n- **High-Availability**: Safe, automated failover backed by a [distributed consensus based high-availability solution][high-availability].\n  Uses [Pod Anti-Affinity][k8s-anti-affinity] to help resiliency; you can configure how aggressive this can be!\n  Failed primaries automatically heal, allowing for faster recovery time. You can even create regularly scheduled\n  backups as well and set your backup retention policy\n- **Disaster Recovery**: Backups and restores leverage the open source [pgBackRest][] utility\n  and [includes support for full, incremental, and differential backups as well as efficient delta restores][disaster-recovery].\n  Set how long you want your backups retained for. Works great with very large databases!\n- **Monitoring**: Track the health of your PostgreSQL clusters using the open source [pgMonitor][] library.\n- **Clone**: Create new clusters from your existing clusters or backups with a single [`pgo create cluster --restore-from`][pgo-create-cluster] command.\n- **TLS**: Secure communication between your applications and data servers by [enabling TLS for your PostgreSQL servers][pgo-task-tls], including the ability to enforce that all of your connections to use TLS.\n- **Connection Pooling**: Use [pgBouncer][] for connection pooling\n- **Affinity and Tolerations**: Have your PostgreSQL clusters deployed to [Kubernetes Nodes][k8s-nodes] of your preference with [node affinity][high-availability-node-affinity], or designate which nodes Kubernetes can schedule PostgreSQL instances to with Kubernetes [tolerations][high-availability-tolerations].\n- **Full Customizability**: Crunchy PostgreSQL for OpenShift makes it easy to get your own PostgreSQL-as-a-Service up and running on\n  and lets make further enhancements to customize your deployments, including:\n    - Selecting different storage classes for your primary, replica, and backup storage\n    - Select your own container resources class for each PostgreSQL cluster deployment; differentiate between resources applied for primary and replica clusters!\n    - Use your own container image repository, including support `imagePullSecrets` and private repositories\n    - Bring your own trusted certificate authority (CA) for use with the Operator API server\n    - Override your PostgreSQL configuration for each cluster\n\nand much more!\n\n[disaster-recovery]: https://access.crunchydata.com/documentation/postgres-operator/latest/architecture/disaster-recovery/\n[high-availability]: https://access.crunchydata.com/documentation/postgres-operator/latest/architecture/high-availability/\n[high-availability-node-affinity]: https://access.crunchydata.com/documentation/postgres-operator/latest/architecture/high-availability/#node-affinity\n[high-availability-tolerations]: https://access.crunchydata.com/documentation/postgres-operator/latest/architecture/high-availability/#tolerations\n[pgo-create-cluster]: https://access.crunchydata.com/documentation/postgres-operator/latest/pgo-client/reference/pgo_create_cluster/\n[pgo-task-tls]: https://access.crunchydata.com/documentation/postgres-operator/latest/tutorial/tls/\n[provisioning]: https://access.crunchydata.com/documentation/postgres-operator/latest/architecture/provisioning/\n\n[k8s-anti-affinity]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n[k8s-nodes]: https://kubernetes.io/docs/concepts/architecture/nodes/\n\n[pgBackRest]: https://www.pgbackrest.org\n[pgBouncer]: https://access.crunchydata.com/documentation/postgres-operator/latest/tutorial/pgbouncer/\n[pgMonitor]: https://github.com/CrunchyData/pgmonitor\n\n## Pre-Installation\n\nThere are a few manual steps that the cluster administrator must perform prior to installing the PostgreSQL Operator.\nAt the very least, it must be provided with an initial configuration.\n\nFirst, select a namespace in which to install the PostgreSQL Operator. PostgreSQL clusters will also be deployed here.\nIf it does not exist, create it now.\n\n```\nexport PGO_OPERATOR_NAMESPACE=pgo\noc create namespace \"$PGO_OPERATOR_NAMESPACE\"\n```\n\n### Security\n\nFor the PostgreSQL Operator and PostgreSQL clusters to run in the recommended `restricted` [Security Context Constraint][],\nedit `conf/postgres-operator/pgo.yaml` and set `DisableFSGroup` to `true`.\n\n[Security Context Constraint]: https://docs.openshift.com/container-platform/latest/authentication/managing-security-context-constraints.html\n\n### Secrets (optional)\n\nIf you plan to use AWS S3 to store backups, you can configure your environment to automatically provide your AWS S3 credentials to all newly created PostgreSQL clusters:\n\n```\noc -n \"$PGO_OPERATOR_NAMESPACE\" create secret generic pgo-backrest-repo-config \\\n  --from-literal=aws-s3-key=\"<your-aws-s3-key>\" \\\n  --from-literal=aws-s3-key-secret=\"<your-aws-s3-key-secret>\"\n```\n\n### Certificates (optional)\n\nThe PostgreSQL Operator has an API that uses TLS to communicate securely with clients. If one is not provided, the API will automatically generated one for you.\n\nIf you have a certificate bundle validated by your organization, you can install it now.\n\n```\noc -n \"$PGO_OPERATOR_NAMESPACE\" create secret tls pgo.tls \\\n  --cert=/path/to/server.crt \\\n  --key=/path/to/server.key\n```\n\nOnce these resources are in place, the PostgreSQL Operator can be installed into the cluster.\n\n## Installation\n\nYou can now go ahead and install the PostgreSQL Operator from OperatorHub.\n\n### Security\n\nFor the PostgreSQL Operator and PostgreSQL clusters to run in the recommended `restricted` [Security Context Constraint][],\nedit the ConfigMap `pgo-config`, find the `pgo.yaml` entry, and set `DisableFSGroup` to `true`.\n\n[Security Context Constraint]: https://docs.openshift.com/container-platform/latest/authentication/managing-security-context-constraints.html\n\nYou will have to scale the `postgres-operator` Deployment down and up for the above change to take effect:\n\n```\noc -n pgo scale --replicas 0 deployment/postgres-operator\noc -n pgo scale --replicas 1 deployment/postgres-operator\n```\n\n## Post-Installation\n\n### Tutorial\n\nFor a guide on how to perform many of the daily functions of the PostgreSQL Operator, we recommend that you read the [Postgres Operator tutorial][pgo-tutorial]\n\n[pgo-tutorial]: https://access.crunchydata.com/documentation/postgres-operator/latest/tutorial/create-cluster/\n\nHowever, the below guide will show you how to create a Postgres cluster from a custom resource or from using the `pgo-client`.\n\n### Create a PostgreSQL Cluster from a Custom Resource\n\nThe fundamental workflow for interfacing with a PostgreSQL Operator Custom\nResource Definition is for creating a PostgreSQL cluster. There are several\nthat a PostgreSQL cluster requires to be deployed, including:\n\n- Secrets\n  - Information for setting up a pgBackRest repository\n  - PostgreSQL superuser bootstrap credentials\n  - PostgreSQL replication user bootstrap credentials\n  - PostgresQL standard user bootstrap credentials\n\nAdditionally, if you want to add some of the other sidecars, you may need to\ncreate additional secrets.\n\nThe good news is that if you do not provide these objects, the PostgreSQL\nOperator will create them for you to get your Postgres cluster up and running!\n\nThe following goes through how to create a PostgreSQL cluster called\n`hippo` by creating a new custom resource.\n\n```\n# this variable is the name of the cluster being created\nexport pgo_cluster_name=hippo\n# this variable is the namespace the cluster is being deployed into\nexport cluster_namespace=pgo\n# this variable is set to the location of your image repository\nexport cluster_image_prefix=registry.developers.crunchydata.com/crunchydata\n\ncat <<-EOF > \"${pgo_cluster_name}-pgcluster.yaml\"\napiVersion: crunchydata.com/v1\nkind: Pgcluster\nmetadata:\n  annotations:\n    current-primary: ${pgo_cluster_name}\n  labels:\n    crunchy-pgha-scope: ${pgo_cluster_name}\n    deployment-name: ${pgo_cluster_name}\n    name: ${pgo_cluster_name}\n    pg-cluster: ${pgo_cluster_name}\n    pgo-version: 4.6.2\n    pgouser: admin\n  name: ${pgo_cluster_name}\n  namespace: ${cluster_namespace}\nspec:\n  BackrestStorage:\n    accessmode: ReadWriteMany\n    matchLabels: \"\"\n    name: \"\"\n    size: 1G\n    storageclass: \"\"\n    storagetype: create\n    supplementalgroups: \"\"\n  PrimaryStorage:\n    accessmode: ReadWriteMany\n    matchLabels: \"\"\n    name: ${pgo_cluster_name}\n    size: 1G\n    storageclass: \"\"\n    storagetype: create\n    supplementalgroups: \"\"\n  ReplicaStorage:\n    accessmode: ReadWriteMany\n    matchLabels: \"\"\n    name: \"\"\n    size: 1G\n    storageclass: \"\"\n    storagetype: create\n    supplementalgroups: \"\"\n  annotations: {}\n  ccpimage: crunchy-postgres-ha\n  ccpimageprefix: ${cluster_image_prefix}\n  ccpimagetag: centos8-13.2-4.6.2\n  clustername: ${pgo_cluster_name}\n  database: ${pgo_cluster_name}\n  exporterport: \"9187\"\n  limits: {}\n  name: ${pgo_cluster_name}\n  namespace: ${cluster_namespace}\n  pgDataSource:\n    restoreFrom: \"\"\n    restoreOpts: \"\"\n  pgbadgerport: \"10000\"\n  pgoimageprefix: ${cluster_image_prefix}\n  podAntiAffinity:\n    default: preferred\n    pgBackRest: preferred\n    pgBouncer: preferred\n  port: \"5432\"\n  tolerations: []\n  user: hippo\n  userlabels:\n    pgo-version: 4.6.2\nEOF\n\noc apply -f \"${pgo_cluster_name}-pgcluster.yaml\"\n```\n\nAnd that's all! The PostgreSQL Operator will go ahead and create the cluster.\n\nIf you have the PostgreSQL client `psql` installed on your host machine, you can\ntest connection to the PostgreSQL cluster using the following command:\n\n```\n# namespace that the cluster is running in\nexport PGO_OPERATOR_NAMESPACE=pgo\n# name of the cluster\nexport pgo_cluster_name=hippo\n# name of the user whose password we want to get\nexport pgo_cluster_username=hippo\n\n# get the password of the user and set it to a recognized psql environmental variable\nexport PGPASSWORD=$(oc -n \"${PGO_OPERATOR_NAMESPACE}\" get secrets \\\n  \"${pgo_cluster_name}-${pgo_cluster_username}-secret\" -o \"jsonpath={.data['password']}\" | base64 -d)\n\n# set up a port-forward either in a new terminal, or in the same terminal in the background:\noc -n pgo port-forward svc/hippo 5432:5432 &\n\npsql -h localhost -U \"${pgo_cluster_username}\" \"${pgo_cluster_name}\"\n```\n\n### Create a PostgreSQL Cluster the `pgo` Client\n\nOnce the PostgreSQL Operator is installed in your OpenShift cluster, you will need to do a few things\nto use the [PostgreSQL Operator Client][pgo-client].\n\n[pgo-client]: https://access.crunchydata.com/documentation/postgres-operator/latest/pgo-client/\n\nInstall the first set of client credentials and download the `pgo` binary and client certificates.\n\n```\ncurl https://raw.githubusercontent.com/CrunchyData/postgres-operator/v4.6.2/deploy/install-bootstrap-creds.sh > install-bootstrap-creds.sh\ncurl https://raw.githubusercontent.com/CrunchyData/postgres-operator/v4.6.2/installers/kubectl/client-setup.sh > client-setup.sh\n\nchmod +x install-bootstrap-creds.sh client-setup.sh\n\nPGO_CMD=oc ./install-bootstrap-creds.sh\nPGO_CMD=oc ./client-setup.sh\n```\n\nThe client needs to be able to reach the PostgreSQL Operator API from outside the OpenShift cluster.\nCreate an external service or forward a port locally.\n\n```\noc -n \"$PGO_OPERATOR_NAMESPACE\" expose deployment postgres-operator\noc -n \"$PGO_OPERATOR_NAMESPACE\" create route passthrough postgres-operator --service=postgres-operator\n\nexport PGO_APISERVER_URL=\"https://$(oc -n \"$PGO_OPERATOR_NAMESPACE\" get route postgres-operator -o jsonpath=\"{.spec.host}\")\"\n```\n_or_\n```\noc -n \"$PGO_OPERATOR_NAMESPACE\" port-forward deployment/postgres-operator 8443\n\nexport PGO_APISERVER_URL=\"https://127.0.0.1:8443\"\n```\n\nVerify connectivity using the `pgo` command.\n\n```\npgo version\n# pgo client version 4.6.2\n# pgo-apiserver version 4.6.2\n```\n\n\nYou can then create a cluster with the `pgo` client as simply as this:\n\n```\npgo create cluster -n pgo hippo\n```\n\nThe cluster may take a few moments to provision. You can verify that the cluster is up and running by using the `pgo test` command:\n\n```\npgo test cluster -n pgo hippo\n```\n\nIf you have the PostgreSQL client `psql` installed on your host machine, you can\ntest connection to the PostgreSQL cluster using the following command:\n\n```\n# namespace that the cluster is running in\nexport PGO_OPERATOR_NAMESPACE=pgo\n# name of the cluster\nexport pgo_cluster_name=hippo\n# name of the user whose password we want to get\nexport pgo_cluster_username=hippo\n\n# get the password of the user and set it to a recognized psql environmental variable\nexport PGPASSWORD=$(kubectl -n \"${PGO_OPERATOR_NAMESPACE}\" get secrets \\\n  \"${pgo_cluster_name}-${pgo_cluster_username}-secret\" -o \"jsonpath={.data['password']}\" | base64 -d)\n\n# set up a port-forward either in a new terminal, or in the same terminal in the background:\nkubectl -n pgo port-forward svc/hippo 5432:5432 &\n\npsql -h localhost -U \"${pgo_cluster_username}\" \"${pgo_cluster_name}\"\n```",
      "csv_display_name": "Crunchy PostgreSQL for OpenShift",
      "csv_metadata_description": "Enterprise open source PostgreSQL-as-a-Service",
      "csv_name": "postgresoperator.v4.6.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:10:31.677000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "crunchy-postgres-operator",
      "provided_apis": [
        {
          "group": "crunchydata.com",
          "kind": "Pgcluster",
          "plural": "pgclusters",
          "version": "v1"
        },
        {
          "group": "crunchydata.com",
          "kind": "Pgpolicy",
          "plural": "pgpolicies",
          "version": "v1"
        },
        {
          "group": "crunchydata.com",
          "kind": "Pgreplica",
          "plural": "pgreplicas",
          "version": "v1"
        },
        {
          "group": "crunchydata.com",
          "kind": "Pgtask",
          "plural": "pgtasks",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d35bef163c91e13fd180f25c97379245bb4965769b3f5c01a84d850ea8240103",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:d35bef163c91e13fd180f25c97379245bb4965769b3f5c01a84d850ea8240103",
          "name": "postgres-operator-d35bef163c91e13fd180f25c97379245bb4965769b3f5c01a84d850ea8240103-annotation"
        },
        {
          "digest": "sha256:e7f53e20a751f97f76e66d96e2f8e9c0805af89a938a05496574a773d87fc57c",
          "image": "registry.connect.redhat.com/crunchydata/pgo-apiserver@sha256:e7f53e20a751f97f76e66d96e2f8e9c0805af89a938a05496574a773d87fc57c",
          "name": "apiserver"
        },
        {
          "digest": "sha256:d35bef163c91e13fd180f25c97379245bb4965769b3f5c01a84d850ea8240103",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:d35bef163c91e13fd180f25c97379245bb4965769b3f5c01a84d850ea8240103",
          "name": "operator"
        },
        {
          "digest": "sha256:bdf0b86b8092304d4348aa74245e12ed159b6b23934e2009c7dcbfb3e2dbcc74",
          "image": "registry.connect.redhat.com/crunchydata/pgo-scheduler@sha256:bdf0b86b8092304d4348aa74245e12ed159b6b23934e2009c7dcbfb3e2dbcc74",
          "name": "scheduler"
        },
        {
          "digest": "sha256:34396043b53ec0028c947791e5e105a4d0455c6ef8ae20d918780ba48454c06a",
          "image": "registry.connect.redhat.com/crunchydata/pgo-event@sha256:34396043b53ec0028c947791e5e105a4d0455c6ef8ae20d918780ba48454c06a",
          "name": "event"
        },
        {
          "digest": "sha256:bf6071db6729c1ba0df920c64c6f28f91aeab650c3e52ca91b98b26a5627c3d3",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:bf6071db6729c1ba0df920c64c6f28f91aeab650c3e52ca91b98b26a5627c3d3",
          "name": "pgo_backrest"
        },
        {
          "digest": "sha256:f06dc265ba427ae55e6452feae2c8be27331d0f280c19d2a1f0ba754ce2e86ce",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest-repo@sha256:f06dc265ba427ae55e6452feae2c8be27331d0f280c19d2a1f0ba754ce2e86ce",
          "name": "pgo_backrest_repo"
        },
        {
          "digest": "sha256:1f205ea03c9b0eca6fbe966dc2000d8e0e8255450327d6d4beccdbb0f6f6bba2",
          "image": "registry.connect.redhat.com/crunchydata/pgo-client@sha256:1f205ea03c9b0eca6fbe966dc2000d8e0e8255450327d6d4beccdbb0f6f6bba2",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:8ef27d45639d97b7c20c75da301c352ffda6a2154dc750a13c93aa78f5a645cc",
          "image": "registry.connect.redhat.com/crunchydata/pgo-rmdata@sha256:8ef27d45639d97b7c20c75da301c352ffda6a2154dc750a13c93aa78f5a645cc",
          "name": "pgo_rmdata"
        },
        {
          "digest": "sha256:974e2475e01cada12cddf155633ca87a5ca5f7f3068aaeb2903c7a6d970b5446",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:974e2475e01cada12cddf155633ca87a5ca5f7f3068aaeb2903c7a6d970b5446",
          "name": "crunchy_postgres_exporter"
        },
        {
          "digest": "sha256:55c1db7e595ab3d724b6c2a5937a29eb6645f4360e67462ee7a3275f09674ebb",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:55c1db7e595ab3d724b6c2a5937a29eb6645f4360e67462ee7a3275f09674ebb",
          "name": "crunchy_pgadmin"
        },
        {
          "digest": "sha256:36fd6f70949b551bd0cc548c42a7a5cca88e97ffd2bc18c1bc87a64e7bd11dac",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbadger@sha256:36fd6f70949b551bd0cc548c42a7a5cca88e97ffd2bc18c1bc87a64e7bd11dac",
          "name": "crunchy_pgbadger"
        },
        {
          "digest": "sha256:1e82897e38e6083e3b5e376b3e624777b7e032fe7d816368e2e3d9a8d83b6abc",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:1e82897e38e6083e3b5e376b3e624777b7e032fe7d816368e2e3d9a8d83b6abc",
          "name": "crunchy_pgbouncer"
        },
        {
          "digest": "sha256:c724ac97d0cbef25a64a6afc7ec15382f9b5830f396cb521df4070474024b555",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-ha@sha256:c724ac97d0cbef25a64a6afc7ec15382f9b5830f396cb521df4070474024b555",
          "name": "crunchy_postgres_ha"
        },
        {
          "digest": "sha256:06525c3e82f66af4cc5d0ab692e43330ef81f325687b90166a2a4fc47a3a18c7",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis-ha@sha256:06525c3e82f66af4cc5d0ab692e43330ef81f325687b90166a2a4fc47a3a18c7",
          "name": "crunchy_postgres_gis_ha"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "4.6.2",
      "version_original": "4.6.2"
    },
    {
      "_id": "609c345f56933b164fe213eb",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "tag": "8.1.6"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:348f3c9216384a33b21fbdfb37e6359f5288cc28381e57e5b0e0e99a18c02b73",
      "bundle_path_digest": "sha256:348f3c9216384a33b21fbdfb37e6359f5288cc28381e57e5b0e0e99a18c02b73",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-12T20:02:39.130000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v8.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:25:49.313000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8b65b4469b90c53c608f6ca7c6a88db043e2833b85b88229d7791cdba6e22b33",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:8b65b4469b90c53c608f6ca7c6a88db043e2833b85b88229d7791cdba6e22b33",
          "name": "t8c-operator-8b65b4469b90c53c608f6ca7c6a88db043e2833b85b88229d7791cdba6e22b33-annotation"
        },
        {
          "digest": "sha256:8b65b4469b90c53c608f6ca7c6a88db043e2833b85b88229d7791cdba6e22b33",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:8b65b4469b90c53c608f6ca7c6a88db043e2833b85b88229d7791cdba6e22b33",
          "name": "t8c-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "8.1.0",
      "version_original": "8.1.0"
    },
    {
      "_id": "609d2497e2b160d361d2548c",
      "alm_examples": [
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRay",
          "metadata": {
            "name": "nastelxray"
          },
          "spec": {
            "active-mq": {
              "image": "registry.connect.redhat.com/nastel/nastel-activemq",
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "1000Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "500Mi"
                }
              },
              "service": {
                "amqpPort": 5672,
                "httpPort": 8161,
                "ingress": {
                  "enabled": true
                },
                "mqttPort": 1883,
                "servicePort": 61616,
                "stopmPort": 61613,
                "type": "ClusterIP",
                "wsPort": 61614
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "ap-domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-ap-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 5440,
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "solr-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "solr-node": {
              "affinity": {},
              "exporter": {
                "configFile": "/opt/solr/contrib/prometheus-exporter/conf/solr-exporter-config.xml",
                "enabled": false,
                "livenessProbe": {
                  "initialDelaySeconds": 20,
                  "periodSeconds": 10
                },
                "podAnnotations": {},
                "port": 9983,
                "readinessProbe": {
                  "initialDelaySeconds": 15,
                  "periodSeconds": 5
                },
                "resources": {},
                "service": {
                  "annotations": {},
                  "type": "ClusterIP"
                },
                "threads": 7,
                "updateStrategy": {}
              },
              "image": {
                "pullPolicy": "Always",
                "repository": "registry.connect.redhat.com/nastel/nastel-solr"
              },
              "javaMem": "-Xms2g -Xmx3g",
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 10
              },
              "logLevel": "INFO",
              "podAnnotations": {},
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "port": 8983,
              "readinessProbe": {
                "initialDelaySeconds": 15,
                "periodSeconds": 5
              },
              "replicaCount": 4,
              "resources": {},
              "service": {
                "annotations": {},
                "ingress": {
                  "enabled": true
                },
                "type": "ClusterIP"
              },
              "terminationGracePeriodSeconds": 180,
              "tls": {
                "caSecret": {
                  "bundlePath": "",
                  "name": ""
                },
                "certSecret": {
                  "certPath": "tls.crt",
                  "keyPath": "tls.key",
                  "name": ""
                },
                "checkPeerName": "false",
                "enabled": false,
                "importKubernetesCA": "false",
                "keystorePassword": "changeit",
                "needClientAuth": "false",
                "wantClientAuth": "false"
              },
              "updateStrategy": {
                "type": "OnDelete"
              },
              "volumeClaimTemplates": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "storageClassName": "ibmc-block-gold",
                "storageSize": "20Gi"
              },
              "zookeeper": {
                "replicaCount": 1
              }
            },
            "xray": {
              "image": "registry.connect.redhat.com/nastel/xray-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "node": {},
                "type": "LoadBalancer"
              }
            },
            "xray-cep": {
              "image": "registry.connect.redhat.com/nastel/xray-cep",
              "init": {
                "dbapi-solr": {
                  "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr"
                },
                "kafka": {
                  "image": "registry.redhat.io/openshift4/ose-cli"
                }
              },
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "LoadBalancer",
                "xRayDataPort": 6580
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-ml-persistance": {
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-file-silver-gid"
              }
            },
            "xray-ml-queries": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-ml-train": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            }
          }
        },
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRayTopology",
          "metadata": {
            "name": "nastelxraytopology"
          },
          "spec": {
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "storm": {
              "enabled": true,
              "fullnameOverride": "storm",
              "name": "storm",
              "nameOverride": "storm",
              "nimbus": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "nimbus",
                  "port": 6627,
                  "type": "ClusterIP"
                }
              },
              "supervisor": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 3,
                "resources": {},
                "service": {
                  "name": "supervisor",
                  "port": 6700
                }
              },
              "ui": {
                "enabled": true,
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": true,
                  "tls": []
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "ui",
                  "port": 8080,
                  "type": "ClusterIP"
                }
              },
              "zookeeper": {
                "enabled": false,
                "fullnameOverride": "storm-keeper",
                "port": 2181,
                "replicaCount": 1,
                "servers": [
                  "storm-keeper"
                ]
              }
            },
            "storm-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-cep": {
              "service": {
                "cepServerPort": 3005,
                "xRayDataPort": 6580
              }
            },
            "xray-storm-topologies": {
              "image": "registry.connect.redhat.com/nastel/xray-storm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "thriftPort": 6627
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/xray-operator-bundle@sha256:d61aff3bb7e7018feba67d68141b4e7e2c3a8c96794196d3208f535d5641d7a1",
      "bundle_path_digest": "sha256:d61aff3bb7e7018feba67d68141b4e7e2c3a8c96794196d3208f535d5641d7a1",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-13T13:07:35.573000+00:00",
      "csv_description": "The operator deploys Nastel XRay component containers:\n  * Nastel Domain Server\n  * XRay Complex Event Processing (CEP)\n  * Solr indexing service\n  * Machine Learning (ML)\n  * XRay WebApp\n  * Storm Topologies (optional)\n\nin one go.\n\n[Nastel XRay](https://www.nastel.com/nastel-xray/) allows you to Track & Trace Transaction and Message Flows, Analyze, Visualize and Report your Big Data.\n",
      "csv_display_name": "Nastel XRay Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel XRay",
      "csv_name": "nastel-xray-operator.v1.324.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:47:16.947000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "nastel-xray-operator",
      "provided_apis": [
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRay",
          "plural": "nastelxrays",
          "version": "v1alpha3"
        },
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRayTopology",
          "plural": "nastelxraytopologies",
          "version": "v1alpha3"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "name": "xray-operator-e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e-annotation"
        },
        {
          "digest": "sha256:99a1597b50026127e32085707c5bd6db43d58558a6488c3c32f6e28cfe06bb70",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:99a1597b50026127e32085707c5bd6db43d58558a6488c3c32f6e28cfe06bb70",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "name": "nastel-xray-operator"
        },
        {
          "digest": "sha256:9e2bd3d35793fca5839f8cc2af268009a165d83dda60ca4f071799cde4687f61",
          "image": "registry.connect.redhat.com/nastel/nastel-ap-domain@sha256:9e2bd3d35793fca5839f8cc2af268009a165d83dda60ca4f071799cde4687f61",
          "name": "domain"
        },
        {
          "digest": "sha256:e920d1cf18d87b366735d9b60436f8cffc668a914c2cc70869c27c3905f5eef6",
          "image": "registry.connect.redhat.com/nastel/xray-cep@sha256:e920d1cf18d87b366735d9b60436f8cffc668a914c2cc70869c27c3905f5eef6",
          "name": "cep"
        },
        {
          "digest": "sha256:a598bd041b76b7436ecc59b2c323715a78574562d16d6e34f22f28c5d75e1b0e",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:a598bd041b76b7436ecc59b2c323715a78574562d16d6e34f22f28c5d75e1b0e",
          "name": "ose_cli"
        },
        {
          "digest": "sha256:d964db23daeadca53a4cad3d72de23fec9b013e33ed27200b8ebcd6afe93bc66",
          "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr@sha256:d964db23daeadca53a4cad3d72de23fec9b013e33ed27200b8ebcd6afe93bc66",
          "name": "solr_dbapi"
        },
        {
          "digest": "sha256:7c7026e74811a787624817f9877c3ed997c713f4b3b5e8107472820fc6673d34",
          "image": "registry.connect.redhat.com/nastel/xray-ml@sha256:7c7026e74811a787624817f9877c3ed997c713f4b3b5e8107472820fc6673d34",
          "name": "ml"
        },
        {
          "digest": "sha256:7b546317261ee9fd47ea38a79a8a278e2f7b0a5d64af0a7b84d6c48b826f75c6",
          "image": "registry.connect.redhat.com/nastel/xray-ui@sha256:7b546317261ee9fd47ea38a79a8a278e2f7b0a5d64af0a7b84d6c48b826f75c6",
          "name": "xray"
        },
        {
          "digest": "sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "image": "registry.connect.redhat.com/nastel/nastel-activemq@sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "name": "active_mq"
        },
        {
          "digest": "sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "image": "registry.connect.redhat.com/nastel/nastel-zookeeper@sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "name": "zookeeper"
        },
        {
          "digest": "sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "image": "registry.connect.redhat.com/nastel/nastel-solr@sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "name": "solr"
        },
        {
          "digest": "sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "image": "registry.connect.redhat.com/nastel/nastel-storm@sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "name": "storm"
        },
        {
          "digest": "sha256:0e222d274811bf1fcfc9d688d85d011a00b2d1e95f98aef00e6264a01981c987",
          "image": "registry.connect.redhat.com/nastel/xray-storm@sha256:0e222d274811bf1fcfc9d688d85d011a00b2d1e95f98aef00e6264a01981c987",
          "name": "storm_topology"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.324.1",
      "version_original": "1.324.1"
    },
    {
      "_id": "609d3c15d04af0e74bb05b92",
      "alm_examples": [
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRay",
          "metadata": {
            "name": "nastelxray"
          },
          "spec": {
            "active-mq": {
              "image": "registry.connect.redhat.com/nastel/nastel-activemq",
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "1000Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "500Mi"
                }
              },
              "service": {
                "amqpPort": 5672,
                "httpPort": 8161,
                "ingress": {
                  "enabled": true
                },
                "mqttPort": 1883,
                "servicePort": 61616,
                "stopmPort": 61613,
                "type": "ClusterIP",
                "wsPort": 61614
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "ap-domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-ap-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 5440,
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "solr-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "solr-node": {
              "affinity": {},
              "exporter": {
                "configFile": "/opt/solr/contrib/prometheus-exporter/conf/solr-exporter-config.xml",
                "enabled": false,
                "livenessProbe": {
                  "initialDelaySeconds": 20,
                  "periodSeconds": 10
                },
                "podAnnotations": {},
                "port": 9983,
                "readinessProbe": {
                  "initialDelaySeconds": 15,
                  "periodSeconds": 5
                },
                "resources": {},
                "service": {
                  "annotations": {},
                  "type": "ClusterIP"
                },
                "threads": 7,
                "updateStrategy": {}
              },
              "image": {
                "pullPolicy": "Always",
                "repository": "registry.connect.redhat.com/nastel/nastel-solr"
              },
              "javaMem": "-Xms2g -Xmx3g",
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 10
              },
              "logLevel": "INFO",
              "podAnnotations": {},
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "port": 8983,
              "readinessProbe": {
                "initialDelaySeconds": 15,
                "periodSeconds": 5
              },
              "replicaCount": 4,
              "resources": {},
              "service": {
                "annotations": {},
                "ingress": {
                  "enabled": true
                },
                "type": "ClusterIP"
              },
              "terminationGracePeriodSeconds": 180,
              "tls": {
                "caSecret": {
                  "bundlePath": "",
                  "name": ""
                },
                "certSecret": {
                  "certPath": "tls.crt",
                  "keyPath": "tls.key",
                  "name": ""
                },
                "checkPeerName": "false",
                "enabled": false,
                "importKubernetesCA": "false",
                "keystorePassword": "changeit",
                "needClientAuth": "false",
                "wantClientAuth": "false"
              },
              "updateStrategy": {
                "type": "OnDelete"
              },
              "volumeClaimTemplates": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "storageClassName": "ibmc-block-gold",
                "storageSize": "20Gi"
              },
              "zookeeper": {
                "replicaCount": 1
              }
            },
            "xray": {
              "image": "registry.connect.redhat.com/nastel/xray-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "node": {},
                "type": "LoadBalancer"
              }
            },
            "xray-cep": {
              "image": "registry.connect.redhat.com/nastel/xray-cep",
              "init": {
                "dbapi-solr": {
                  "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr"
                },
                "kafka": {
                  "image": "registry.redhat.io/openshift4/ose-cli"
                }
              },
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "LoadBalancer",
                "xRayDataPort": 6580
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-ml-persistance": {
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-file-silver-gid"
              }
            },
            "xray-ml-queries": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-ml-train": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            }
          }
        },
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRayTopology",
          "metadata": {
            "name": "nastelxraytopology"
          },
          "spec": {
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "storm": {
              "enabled": true,
              "fullnameOverride": "storm",
              "name": "storm",
              "nameOverride": "storm",
              "nimbus": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "nimbus",
                  "port": 6627,
                  "type": "ClusterIP"
                }
              },
              "supervisor": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 3,
                "resources": {},
                "service": {
                  "name": "supervisor",
                  "port": 6700
                }
              },
              "ui": {
                "enabled": true,
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": true,
                  "tls": []
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "ui",
                  "port": 8080,
                  "type": "ClusterIP"
                }
              },
              "zookeeper": {
                "enabled": false,
                "fullnameOverride": "storm-keeper",
                "port": 2181,
                "replicaCount": 1,
                "servers": [
                  "storm-keeper"
                ]
              }
            },
            "storm-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-cep": {
              "service": {
                "cepServerPort": 3005,
                "xRayDataPort": 6580
              }
            },
            "xray-storm-topologies": {
              "image": "registry.connect.redhat.com/nastel/xray-storm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "thriftPort": 6627
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/xray-operator-bundle@sha256:d61aff3bb7e7018feba67d68141b4e7e2c3a8c96794196d3208f535d5641d7a1",
      "bundle_path_digest": "sha256:d61aff3bb7e7018feba67d68141b4e7e2c3a8c96794196d3208f535d5641d7a1",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-13T14:47:49.315000+00:00",
      "csv_description": "The operator deploys Nastel XRay component containers:\n  * Nastel Domain Server\n  * XRay Complex Event Processing (CEP)\n  * Solr indexing service\n  * Machine Learning (ML)\n  * XRay WebApp\n  * Storm Topologies (optional)\n\nin one go.\n\n[Nastel XRay](https://www.nastel.com/nastel-xray/) allows you to Track & Trace Transaction and Message Flows, Analyze, Visualize and Report your Big Data.\n",
      "csv_display_name": "Nastel XRay Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel XRay",
      "csv_name": "nastel-xray-operator.v1.324.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:28:06.466000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nastel-xray-operator",
      "provided_apis": [
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRayTopology",
          "plural": "nastelxraytopologies",
          "version": "v1alpha3"
        },
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRay",
          "plural": "nastelxrays",
          "version": "v1alpha3"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "name": "xray-operator-e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e-annotation"
        },
        {
          "digest": "sha256:99a1597b50026127e32085707c5bd6db43d58558a6488c3c32f6e28cfe06bb70",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:99a1597b50026127e32085707c5bd6db43d58558a6488c3c32f6e28cfe06bb70",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "name": "nastel-xray-operator"
        },
        {
          "digest": "sha256:9e2bd3d35793fca5839f8cc2af268009a165d83dda60ca4f071799cde4687f61",
          "image": "registry.connect.redhat.com/nastel/nastel-ap-domain@sha256:9e2bd3d35793fca5839f8cc2af268009a165d83dda60ca4f071799cde4687f61",
          "name": "domain"
        },
        {
          "digest": "sha256:e920d1cf18d87b366735d9b60436f8cffc668a914c2cc70869c27c3905f5eef6",
          "image": "registry.connect.redhat.com/nastel/xray-cep@sha256:e920d1cf18d87b366735d9b60436f8cffc668a914c2cc70869c27c3905f5eef6",
          "name": "cep"
        },
        {
          "digest": "sha256:a598bd041b76b7436ecc59b2c323715a78574562d16d6e34f22f28c5d75e1b0e",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:a598bd041b76b7436ecc59b2c323715a78574562d16d6e34f22f28c5d75e1b0e",
          "name": "ose_cli"
        },
        {
          "digest": "sha256:d964db23daeadca53a4cad3d72de23fec9b013e33ed27200b8ebcd6afe93bc66",
          "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr@sha256:d964db23daeadca53a4cad3d72de23fec9b013e33ed27200b8ebcd6afe93bc66",
          "name": "solr_dbapi"
        },
        {
          "digest": "sha256:7c7026e74811a787624817f9877c3ed997c713f4b3b5e8107472820fc6673d34",
          "image": "registry.connect.redhat.com/nastel/xray-ml@sha256:7c7026e74811a787624817f9877c3ed997c713f4b3b5e8107472820fc6673d34",
          "name": "ml"
        },
        {
          "digest": "sha256:7b546317261ee9fd47ea38a79a8a278e2f7b0a5d64af0a7b84d6c48b826f75c6",
          "image": "registry.connect.redhat.com/nastel/xray-ui@sha256:7b546317261ee9fd47ea38a79a8a278e2f7b0a5d64af0a7b84d6c48b826f75c6",
          "name": "xray"
        },
        {
          "digest": "sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "image": "registry.connect.redhat.com/nastel/nastel-activemq@sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "name": "active_mq"
        },
        {
          "digest": "sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "image": "registry.connect.redhat.com/nastel/nastel-zookeeper@sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "name": "zookeeper"
        },
        {
          "digest": "sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "image": "registry.connect.redhat.com/nastel/nastel-solr@sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "name": "solr"
        },
        {
          "digest": "sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "image": "registry.connect.redhat.com/nastel/nastel-storm@sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "name": "storm"
        },
        {
          "digest": "sha256:0e222d274811bf1fcfc9d688d85d011a00b2d1e95f98aef00e6264a01981c987",
          "image": "registry.connect.redhat.com/nastel/xray-storm@sha256:0e222d274811bf1fcfc9d688d85d011a00b2d1e95f98aef00e6264a01981c987",
          "name": "storm_topology"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.324.1",
      "version_original": "1.324.1"
    },
    {
      "_id": "609d4db656933b164fe214ae",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme"
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:b660525be732487acdd72219f301c9d572dd29d5d9b1e1e771da90b1d3652a21",
      "bundle_path_digest": "sha256:b660525be732487acdd72219f301c9d572dd29d5d9b1e1e771da90b1d3652a21",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v1.4",
      "creation_date": "2021-05-13T16:03:02.903000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://cloud.ibm.com/docs/services/Cloudant?topic=cloudant-apache-couchdb-operator)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v1.4.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:14:17.774000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4085e866d75ed24aff02c4b4d911db8532247dc3f4d0678bb098383948f8b712",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:4085e866d75ed24aff02c4b4d911db8532247dc3f4d0678bb098383948f8b712",
          "name": "couchdb-operator-4085e866d75ed24aff02c4b4d911db8532247dc3f4d0678bb098383948f8b712-annotation"
        },
        {
          "digest": "sha256:4085e866d75ed24aff02c4b4d911db8532247dc3f4d0678bb098383948f8b712",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:4085e866d75ed24aff02c4b4d911db8532247dc3f4d0678bb098383948f8b712",
          "name": "couchdb-operator"
        },
        {
          "digest": "sha256:187cd43e812dbf739b04e4d796c2a944293d0763110cc4a90d56fef2d9847d0d",
          "image": "registry.connect.redhat.com/ibm/couchdb2@sha256:187cd43e812dbf739b04e4d796c2a944293d0763110cc4a90d56fef2d9847d0d",
          "name": "couchdb2_amd64"
        },
        {
          "digest": "sha256:bd6c28874051f8cc8fbe8cb2ab2f1d6f835c37a2356efa91ec8330e17fffd607",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:bd6c28874051f8cc8fbe8cb2ab2f1d6f835c37a2356efa91ec8330e17fffd607",
          "name": "couchdb3_amd64"
        },
        {
          "digest": "sha256:2a1dc9aae4d68f28f2b12efa66786da2c484b1410aae8d678152c3e479253d93",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:2a1dc9aae4d68f28f2b12efa66786da2c484b1410aae8d678152c3e479253d93",
          "name": "mgmt_amd64"
        }
      ],
      "replaces": "",
      "skip_range": ">=1.0.0 <1.4.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.4.3",
      "version_original": "1.4.3"
    },
    {
      "_id": "609d5155d04af0e74bb05bb7",
      "alm_examples": [
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRay",
          "metadata": {
            "name": "nastelxray"
          },
          "spec": {
            "active-mq": {
              "image": "registry.connect.redhat.com/nastel/nastel-activemq",
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "1000Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "500Mi"
                }
              },
              "service": {
                "amqpPort": 5672,
                "httpPort": 8161,
                "ingress": {
                  "enabled": true
                },
                "mqttPort": 1883,
                "servicePort": 61616,
                "stopmPort": 61613,
                "type": "ClusterIP",
                "wsPort": 61614
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "ap-domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-ap-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 5440,
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "solr-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "solr-node": {
              "affinity": {},
              "exporter": {
                "configFile": "/opt/solr/contrib/prometheus-exporter/conf/solr-exporter-config.xml",
                "enabled": false,
                "livenessProbe": {
                  "initialDelaySeconds": 20,
                  "periodSeconds": 10
                },
                "podAnnotations": {},
                "port": 9983,
                "readinessProbe": {
                  "initialDelaySeconds": 15,
                  "periodSeconds": 5
                },
                "resources": {},
                "service": {
                  "annotations": {},
                  "type": "ClusterIP"
                },
                "threads": 7,
                "updateStrategy": {}
              },
              "image": {
                "pullPolicy": "Always",
                "repository": "registry.connect.redhat.com/nastel/nastel-solr"
              },
              "javaMem": "-Xms2g -Xmx3g",
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 10
              },
              "logLevel": "INFO",
              "podAnnotations": {},
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "port": 8983,
              "readinessProbe": {
                "initialDelaySeconds": 15,
                "periodSeconds": 5
              },
              "replicaCount": 4,
              "resources": {},
              "service": {
                "annotations": {},
                "ingress": {
                  "enabled": true
                },
                "type": "ClusterIP"
              },
              "terminationGracePeriodSeconds": 180,
              "tls": {
                "caSecret": {
                  "bundlePath": "",
                  "name": ""
                },
                "certSecret": {
                  "certPath": "tls.crt",
                  "keyPath": "tls.key",
                  "name": ""
                },
                "checkPeerName": "false",
                "enabled": false,
                "importKubernetesCA": "false",
                "keystorePassword": "changeit",
                "needClientAuth": "false",
                "wantClientAuth": "false"
              },
              "updateStrategy": {
                "type": "OnDelete"
              },
              "volumeClaimTemplates": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "storageClassName": "ibmc-block-gold",
                "storageSize": "20Gi"
              },
              "zookeeper": {
                "replicaCount": 1
              }
            },
            "xray": {
              "image": "registry.connect.redhat.com/nastel/xray-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "node": {},
                "type": "LoadBalancer"
              }
            },
            "xray-cep": {
              "image": "registry.connect.redhat.com/nastel/xray-cep",
              "init": {
                "dbapi-solr": {
                  "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr"
                },
                "kafka": {
                  "image": "registry.redhat.io/openshift4/ose-cli"
                }
              },
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "LoadBalancer",
                "xRayDataPort": 6580
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-ml-persistance": {
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-file-silver-gid"
              }
            },
            "xray-ml-queries": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-ml-train": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            }
          }
        },
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRayTopology",
          "metadata": {
            "name": "nastelxraytopology"
          },
          "spec": {
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "storm": {
              "enabled": true,
              "fullnameOverride": "storm",
              "name": "storm",
              "nameOverride": "storm",
              "nimbus": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "nimbus",
                  "port": 6627,
                  "type": "ClusterIP"
                }
              },
              "supervisor": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 3,
                "resources": {},
                "service": {
                  "name": "supervisor",
                  "port": 6700
                }
              },
              "ui": {
                "enabled": true,
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": true,
                  "tls": []
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "ui",
                  "port": 8080,
                  "type": "ClusterIP"
                }
              },
              "zookeeper": {
                "enabled": false,
                "fullnameOverride": "storm-keeper",
                "port": 2181,
                "replicaCount": 1,
                "servers": [
                  "storm-keeper"
                ]
              }
            },
            "storm-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-cep": {
              "service": {
                "cepServerPort": 3005,
                "xRayDataPort": 6580
              }
            },
            "xray-storm-topologies": {
              "image": "registry.connect.redhat.com/nastel/xray-storm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "thriftPort": 6627
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/xray-operator-bundle@sha256:d61aff3bb7e7018feba67d68141b4e7e2c3a8c96794196d3208f535d5641d7a1",
      "bundle_path_digest": "sha256:d61aff3bb7e7018feba67d68141b4e7e2c3a8c96794196d3208f535d5641d7a1",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-13T16:18:29.929000+00:00",
      "csv_description": "The operator deploys Nastel XRay component containers:\n  * Nastel Domain Server\n  * XRay Complex Event Processing (CEP)\n  * Solr indexing service\n  * Machine Learning (ML)\n  * XRay WebApp\n  * Storm Topologies (optional)\n\nin one go.\n\n[Nastel XRay](https://www.nastel.com/nastel-xray/) allows you to Track & Trace Transaction and Message Flows, Analyze, Visualize and Report your Big Data.\n",
      "csv_display_name": "Nastel XRay Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel XRay",
      "csv_name": "nastel-xray-operator.v1.324.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:46:11.745000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "nastel-xray-operator",
      "provided_apis": [
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRay",
          "plural": "nastelxrays",
          "version": "v1alpha3"
        },
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRayTopology",
          "plural": "nastelxraytopologies",
          "version": "v1alpha3"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "name": "xray-operator-e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e-annotation"
        },
        {
          "digest": "sha256:99a1597b50026127e32085707c5bd6db43d58558a6488c3c32f6e28cfe06bb70",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:99a1597b50026127e32085707c5bd6db43d58558a6488c3c32f6e28cfe06bb70",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "name": "nastel-xray-operator"
        },
        {
          "digest": "sha256:9e2bd3d35793fca5839f8cc2af268009a165d83dda60ca4f071799cde4687f61",
          "image": "registry.connect.redhat.com/nastel/nastel-ap-domain@sha256:9e2bd3d35793fca5839f8cc2af268009a165d83dda60ca4f071799cde4687f61",
          "name": "domain"
        },
        {
          "digest": "sha256:e920d1cf18d87b366735d9b60436f8cffc668a914c2cc70869c27c3905f5eef6",
          "image": "registry.connect.redhat.com/nastel/xray-cep@sha256:e920d1cf18d87b366735d9b60436f8cffc668a914c2cc70869c27c3905f5eef6",
          "name": "cep"
        },
        {
          "digest": "sha256:a598bd041b76b7436ecc59b2c323715a78574562d16d6e34f22f28c5d75e1b0e",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:a598bd041b76b7436ecc59b2c323715a78574562d16d6e34f22f28c5d75e1b0e",
          "name": "ose_cli"
        },
        {
          "digest": "sha256:d964db23daeadca53a4cad3d72de23fec9b013e33ed27200b8ebcd6afe93bc66",
          "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr@sha256:d964db23daeadca53a4cad3d72de23fec9b013e33ed27200b8ebcd6afe93bc66",
          "name": "solr_dbapi"
        },
        {
          "digest": "sha256:7c7026e74811a787624817f9877c3ed997c713f4b3b5e8107472820fc6673d34",
          "image": "registry.connect.redhat.com/nastel/xray-ml@sha256:7c7026e74811a787624817f9877c3ed997c713f4b3b5e8107472820fc6673d34",
          "name": "ml"
        },
        {
          "digest": "sha256:7b546317261ee9fd47ea38a79a8a278e2f7b0a5d64af0a7b84d6c48b826f75c6",
          "image": "registry.connect.redhat.com/nastel/xray-ui@sha256:7b546317261ee9fd47ea38a79a8a278e2f7b0a5d64af0a7b84d6c48b826f75c6",
          "name": "xray"
        },
        {
          "digest": "sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "image": "registry.connect.redhat.com/nastel/nastel-activemq@sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "name": "active_mq"
        },
        {
          "digest": "sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "image": "registry.connect.redhat.com/nastel/nastel-zookeeper@sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "name": "zookeeper"
        },
        {
          "digest": "sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "image": "registry.connect.redhat.com/nastel/nastel-solr@sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "name": "solr"
        },
        {
          "digest": "sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "image": "registry.connect.redhat.com/nastel/nastel-storm@sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "name": "storm"
        },
        {
          "digest": "sha256:0e222d274811bf1fcfc9d688d85d011a00b2d1e95f98aef00e6264a01981c987",
          "image": "registry.connect.redhat.com/nastel/xray-storm@sha256:0e222d274811bf1fcfc9d688d85d011a00b2d1e95f98aef00e6264a01981c987",
          "name": "storm_topology"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.324.1",
      "version_original": "1.324.1"
    },
    {
      "_id": "609d862f9dc45e914d46f341",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme"
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:b660525be732487acdd72219f301c9d572dd29d5d9b1e1e771da90b1d3652a21",
      "bundle_path_digest": "sha256:b660525be732487acdd72219f301c9d572dd29d5d9b1e1e771da90b1d3652a21",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v1.4",
      "creation_date": "2021-05-13T20:03:59.360000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://cloud.ibm.com/docs/services/Cloudant?topic=cloudant-apache-couchdb-operator)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v1.4.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:15:08.955000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4085e866d75ed24aff02c4b4d911db8532247dc3f4d0678bb098383948f8b712",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:4085e866d75ed24aff02c4b4d911db8532247dc3f4d0678bb098383948f8b712",
          "name": "couchdb-operator-4085e866d75ed24aff02c4b4d911db8532247dc3f4d0678bb098383948f8b712-annotation"
        },
        {
          "digest": "sha256:4085e866d75ed24aff02c4b4d911db8532247dc3f4d0678bb098383948f8b712",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:4085e866d75ed24aff02c4b4d911db8532247dc3f4d0678bb098383948f8b712",
          "name": "couchdb-operator"
        },
        {
          "digest": "sha256:187cd43e812dbf739b04e4d796c2a944293d0763110cc4a90d56fef2d9847d0d",
          "image": "registry.connect.redhat.com/ibm/couchdb2@sha256:187cd43e812dbf739b04e4d796c2a944293d0763110cc4a90d56fef2d9847d0d",
          "name": "couchdb2_amd64"
        },
        {
          "digest": "sha256:bd6c28874051f8cc8fbe8cb2ab2f1d6f835c37a2356efa91ec8330e17fffd607",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:bd6c28874051f8cc8fbe8cb2ab2f1d6f835c37a2356efa91ec8330e17fffd607",
          "name": "couchdb3_amd64"
        },
        {
          "digest": "sha256:2a1dc9aae4d68f28f2b12efa66786da2c484b1410aae8d678152c3e479253d93",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:2a1dc9aae4d68f28f2b12efa66786da2c484b1410aae8d678152c3e479253d93",
          "name": "mgmt_amd64"
        }
      ],
      "replaces": "",
      "skip_range": ">=1.0.0 <1.4.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.4.3",
      "version_original": "1.4.3"
    },
    {
      "_id": "609d90b3f787b25f169e6749",
      "alm_examples": [
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRay",
          "metadata": {
            "name": "nastelxray"
          },
          "spec": {
            "active-mq": {
              "image": "registry.connect.redhat.com/nastel/nastel-activemq",
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "1000Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "500Mi"
                }
              },
              "service": {
                "amqpPort": 5672,
                "httpPort": 8161,
                "ingress": {
                  "enabled": true
                },
                "mqttPort": 1883,
                "servicePort": 61616,
                "stopmPort": 61613,
                "type": "ClusterIP",
                "wsPort": 61614
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "ap-domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-ap-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 5440,
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "solr-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "solr-node": {
              "affinity": {},
              "exporter": {
                "configFile": "/opt/solr/contrib/prometheus-exporter/conf/solr-exporter-config.xml",
                "enabled": false,
                "livenessProbe": {
                  "initialDelaySeconds": 20,
                  "periodSeconds": 10
                },
                "podAnnotations": {},
                "port": 9983,
                "readinessProbe": {
                  "initialDelaySeconds": 15,
                  "periodSeconds": 5
                },
                "resources": {},
                "service": {
                  "annotations": {},
                  "type": "ClusterIP"
                },
                "threads": 7,
                "updateStrategy": {}
              },
              "image": {
                "pullPolicy": "Always",
                "repository": "registry.connect.redhat.com/nastel/nastel-solr"
              },
              "javaMem": "-Xms2g -Xmx3g",
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 10
              },
              "logLevel": "INFO",
              "podAnnotations": {},
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "port": 8983,
              "readinessProbe": {
                "initialDelaySeconds": 15,
                "periodSeconds": 5
              },
              "replicaCount": 4,
              "resources": {},
              "service": {
                "annotations": {},
                "ingress": {
                  "enabled": true
                },
                "type": "ClusterIP"
              },
              "terminationGracePeriodSeconds": 180,
              "tls": {
                "caSecret": {
                  "bundlePath": "",
                  "name": ""
                },
                "certSecret": {
                  "certPath": "tls.crt",
                  "keyPath": "tls.key",
                  "name": ""
                },
                "checkPeerName": "false",
                "enabled": false,
                "importKubernetesCA": "false",
                "keystorePassword": "changeit",
                "needClientAuth": "false",
                "wantClientAuth": "false"
              },
              "updateStrategy": {
                "type": "OnDelete"
              },
              "volumeClaimTemplates": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "storageClassName": "ibmc-block-gold",
                "storageSize": "20Gi"
              },
              "zookeeper": {
                "replicaCount": 1
              }
            },
            "xray": {
              "image": "registry.connect.redhat.com/nastel/xray-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "node": {},
                "type": "LoadBalancer"
              }
            },
            "xray-cep": {
              "image": "registry.connect.redhat.com/nastel/xray-cep",
              "init": {
                "dbapi-solr": {
                  "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr"
                },
                "kafka": {
                  "image": "registry.redhat.io/openshift4/ose-cli"
                }
              },
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "LoadBalancer",
                "xRayDataPort": 6580
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-ml-persistance": {
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-file-silver-gid"
              }
            },
            "xray-ml-queries": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-ml-train": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            }
          }
        },
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRayTopology",
          "metadata": {
            "name": "nastelxraytopology"
          },
          "spec": {
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "storm": {
              "enabled": true,
              "fullnameOverride": "storm",
              "name": "storm",
              "nameOverride": "storm",
              "nimbus": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "nimbus",
                  "port": 6627,
                  "type": "ClusterIP"
                }
              },
              "supervisor": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 3,
                "resources": {},
                "service": {
                  "name": "supervisor",
                  "port": 6700
                }
              },
              "ui": {
                "enabled": true,
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": true,
                  "tls": []
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "ui",
                  "port": 8080,
                  "type": "ClusterIP"
                }
              },
              "zookeeper": {
                "enabled": false,
                "fullnameOverride": "storm-keeper",
                "port": 2181,
                "replicaCount": 1,
                "servers": [
                  "storm-keeper"
                ]
              }
            },
            "storm-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-cep": {
              "service": {
                "cepServerPort": 3005,
                "xRayDataPort": 6580
              }
            },
            "xray-storm-topologies": {
              "image": "registry.connect.redhat.com/nastel/xray-storm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "thriftPort": 6627
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/xray-operator-bundle@sha256:d61aff3bb7e7018feba67d68141b4e7e2c3a8c96794196d3208f535d5641d7a1",
      "bundle_path_digest": "sha256:d61aff3bb7e7018feba67d68141b4e7e2c3a8c96794196d3208f535d5641d7a1",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-13T20:48:51.261000+00:00",
      "csv_description": "The operator deploys Nastel XRay component containers:\n  * Nastel Domain Server\n  * XRay Complex Event Processing (CEP)\n  * Solr indexing service\n  * Machine Learning (ML)\n  * XRay WebApp\n  * Storm Topologies (optional)\n\nin one go.\n\n[Nastel XRay](https://www.nastel.com/nastel-xray/) allows you to Track & Trace Transaction and Message Flows, Analyze, Visualize and Report your Big Data.\n",
      "csv_display_name": "Nastel XRay Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel XRay",
      "csv_name": "nastel-xray-operator.v1.324.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:31:27.821000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nastel-xray-operator",
      "provided_apis": [
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRay",
          "plural": "nastelxrays",
          "version": "v1alpha3"
        },
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRayTopology",
          "plural": "nastelxraytopologies",
          "version": "v1alpha3"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "name": "xray-operator-e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e-annotation"
        },
        {
          "digest": "sha256:99a1597b50026127e32085707c5bd6db43d58558a6488c3c32f6e28cfe06bb70",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:99a1597b50026127e32085707c5bd6db43d58558a6488c3c32f6e28cfe06bb70",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "name": "nastel-xray-operator"
        },
        {
          "digest": "sha256:9e2bd3d35793fca5839f8cc2af268009a165d83dda60ca4f071799cde4687f61",
          "image": "registry.connect.redhat.com/nastel/nastel-ap-domain@sha256:9e2bd3d35793fca5839f8cc2af268009a165d83dda60ca4f071799cde4687f61",
          "name": "domain"
        },
        {
          "digest": "sha256:e920d1cf18d87b366735d9b60436f8cffc668a914c2cc70869c27c3905f5eef6",
          "image": "registry.connect.redhat.com/nastel/xray-cep@sha256:e920d1cf18d87b366735d9b60436f8cffc668a914c2cc70869c27c3905f5eef6",
          "name": "cep"
        },
        {
          "digest": "sha256:a598bd041b76b7436ecc59b2c323715a78574562d16d6e34f22f28c5d75e1b0e",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:a598bd041b76b7436ecc59b2c323715a78574562d16d6e34f22f28c5d75e1b0e",
          "name": "ose_cli"
        },
        {
          "digest": "sha256:d964db23daeadca53a4cad3d72de23fec9b013e33ed27200b8ebcd6afe93bc66",
          "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr@sha256:d964db23daeadca53a4cad3d72de23fec9b013e33ed27200b8ebcd6afe93bc66",
          "name": "solr_dbapi"
        },
        {
          "digest": "sha256:7c7026e74811a787624817f9877c3ed997c713f4b3b5e8107472820fc6673d34",
          "image": "registry.connect.redhat.com/nastel/xray-ml@sha256:7c7026e74811a787624817f9877c3ed997c713f4b3b5e8107472820fc6673d34",
          "name": "ml"
        },
        {
          "digest": "sha256:7b546317261ee9fd47ea38a79a8a278e2f7b0a5d64af0a7b84d6c48b826f75c6",
          "image": "registry.connect.redhat.com/nastel/xray-ui@sha256:7b546317261ee9fd47ea38a79a8a278e2f7b0a5d64af0a7b84d6c48b826f75c6",
          "name": "xray"
        },
        {
          "digest": "sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "image": "registry.connect.redhat.com/nastel/nastel-activemq@sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "name": "active_mq"
        },
        {
          "digest": "sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "image": "registry.connect.redhat.com/nastel/nastel-zookeeper@sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "name": "zookeeper"
        },
        {
          "digest": "sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "image": "registry.connect.redhat.com/nastel/nastel-solr@sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "name": "solr"
        },
        {
          "digest": "sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "image": "registry.connect.redhat.com/nastel/nastel-storm@sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "name": "storm"
        },
        {
          "digest": "sha256:0e222d274811bf1fcfc9d688d85d011a00b2d1e95f98aef00e6264a01981c987",
          "image": "registry.connect.redhat.com/nastel/xray-storm@sha256:0e222d274811bf1fcfc9d688d85d011a00b2d1e95f98aef00e6264a01981c987",
          "name": "storm_topology"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.324.1",
      "version_original": "1.324.1"
    },
    {
      "_id": "609e1291038ec110481abc9e",
      "alm_examples": [
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRay",
          "metadata": {
            "name": "nastelxray"
          },
          "spec": {
            "active-mq": {
              "image": "registry.connect.redhat.com/nastel/nastel-activemq",
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "1000Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "500Mi"
                }
              },
              "service": {
                "amqpPort": 5672,
                "httpPort": 8161,
                "ingress": {
                  "enabled": true
                },
                "mqttPort": 1883,
                "servicePort": 61616,
                "stopmPort": 61613,
                "type": "ClusterIP",
                "wsPort": 61614
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "ap-domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-ap-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 5440,
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "solr-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "solr-node": {
              "affinity": {},
              "exporter": {
                "configFile": "/opt/solr/contrib/prometheus-exporter/conf/solr-exporter-config.xml",
                "enabled": false,
                "livenessProbe": {
                  "initialDelaySeconds": 20,
                  "periodSeconds": 10
                },
                "podAnnotations": {},
                "port": 9983,
                "readinessProbe": {
                  "initialDelaySeconds": 15,
                  "periodSeconds": 5
                },
                "resources": {},
                "service": {
                  "annotations": {},
                  "type": "ClusterIP"
                },
                "threads": 7,
                "updateStrategy": {}
              },
              "image": {
                "pullPolicy": "Always",
                "repository": "registry.connect.redhat.com/nastel/nastel-solr"
              },
              "javaMem": "-Xms2g -Xmx3g",
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 10
              },
              "logLevel": "INFO",
              "podAnnotations": {},
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "port": 8983,
              "readinessProbe": {
                "initialDelaySeconds": 15,
                "periodSeconds": 5
              },
              "replicaCount": 4,
              "resources": {},
              "service": {
                "annotations": {},
                "ingress": {
                  "enabled": true
                },
                "type": "ClusterIP"
              },
              "terminationGracePeriodSeconds": 180,
              "tls": {
                "caSecret": {
                  "bundlePath": "",
                  "name": ""
                },
                "certSecret": {
                  "certPath": "tls.crt",
                  "keyPath": "tls.key",
                  "name": ""
                },
                "checkPeerName": "false",
                "enabled": false,
                "importKubernetesCA": "false",
                "keystorePassword": "changeit",
                "needClientAuth": "false",
                "wantClientAuth": "false"
              },
              "updateStrategy": {
                "type": "OnDelete"
              },
              "volumeClaimTemplates": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "storageClassName": "ibmc-block-gold",
                "storageSize": "20Gi"
              },
              "zookeeper": {
                "replicaCount": 1
              }
            },
            "xray": {
              "image": "registry.connect.redhat.com/nastel/xray-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "node": {},
                "type": "LoadBalancer"
              }
            },
            "xray-cep": {
              "image": "registry.connect.redhat.com/nastel/xray-cep",
              "init": {
                "dbapi-solr": {
                  "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr"
                },
                "kafka": {
                  "image": "registry.redhat.io/openshift4/ose-cli"
                }
              },
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "LoadBalancer",
                "xRayDataPort": 6580
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-ml-persistance": {
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-file-silver-gid"
              }
            },
            "xray-ml-queries": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-ml-train": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            }
          }
        },
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRayTopology",
          "metadata": {
            "name": "nastelxraytopology"
          },
          "spec": {
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "storm": {
              "enabled": true,
              "fullnameOverride": "storm",
              "name": "storm",
              "nameOverride": "storm",
              "nimbus": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "nimbus",
                  "port": 6627,
                  "type": "ClusterIP"
                }
              },
              "supervisor": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 3,
                "resources": {},
                "service": {
                  "name": "supervisor",
                  "port": 6700
                }
              },
              "ui": {
                "enabled": true,
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": true,
                  "tls": []
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "ui",
                  "port": 8080,
                  "type": "ClusterIP"
                }
              },
              "zookeeper": {
                "enabled": false,
                "fullnameOverride": "storm-keeper",
                "port": 2181,
                "replicaCount": 1,
                "servers": [
                  "storm-keeper"
                ]
              }
            },
            "storm-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-cep": {
              "service": {
                "cepServerPort": 3005,
                "xRayDataPort": 6580
              }
            },
            "xray-storm-topologies": {
              "image": "registry.connect.redhat.com/nastel/xray-storm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "thriftPort": 6627
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/xray-operator-bundle@sha256:0a8d75cf9ded5281df4f71dea1d82439e9fa9f33064830846f0f6b7069a534a4",
      "bundle_path_digest": "sha256:0a8d75cf9ded5281df4f71dea1d82439e9fa9f33064830846f0f6b7069a534a4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-14T06:02:57.469000+00:00",
      "csv_description": "The operator deploys Nastel XRay component containers:\n  * Nastel Domain Server\n  * XRay Complex Event Processing (CEP)\n  * Solr indexing service\n  * Machine Learning (ML)\n  * XRay WebApp\n  * Storm Topologies (optional)\n\nin one go.\n\n[Nastel XRay](https://www.nastel.com/nastel-xray/) allows you to Track & Trace Transaction and Message Flows, Analyze, Visualize and Report your Big Data.\n",
      "csv_display_name": "Nastel XRay Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel XRay",
      "csv_name": "nastel-xray-operator.v1.324.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:52:30.317000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "nastel-xray-operator",
      "provided_apis": [
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRayTopology",
          "plural": "nastelxraytopologies",
          "version": "v1alpha3"
        },
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRay",
          "plural": "nastelxrays",
          "version": "v1alpha3"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "name": "xray-operator-e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e-annotation"
        },
        {
          "digest": "sha256:99a1597b50026127e32085707c5bd6db43d58558a6488c3c32f6e28cfe06bb70",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:99a1597b50026127e32085707c5bd6db43d58558a6488c3c32f6e28cfe06bb70",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "name": "nastel-xray-operator"
        },
        {
          "digest": "sha256:9e2bd3d35793fca5839f8cc2af268009a165d83dda60ca4f071799cde4687f61",
          "image": "registry.connect.redhat.com/nastel/nastel-ap-domain@sha256:9e2bd3d35793fca5839f8cc2af268009a165d83dda60ca4f071799cde4687f61",
          "name": "domain"
        },
        {
          "digest": "sha256:e920d1cf18d87b366735d9b60436f8cffc668a914c2cc70869c27c3905f5eef6",
          "image": "registry.connect.redhat.com/nastel/xray-cep@sha256:e920d1cf18d87b366735d9b60436f8cffc668a914c2cc70869c27c3905f5eef6",
          "name": "cep"
        },
        {
          "digest": "sha256:2064034a0afe4a7808fdd949e7251e333d867ba9b165fe8b830a66d154c3cfa0",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:2064034a0afe4a7808fdd949e7251e333d867ba9b165fe8b830a66d154c3cfa0",
          "name": "ose_cli"
        },
        {
          "digest": "sha256:d964db23daeadca53a4cad3d72de23fec9b013e33ed27200b8ebcd6afe93bc66",
          "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr@sha256:d964db23daeadca53a4cad3d72de23fec9b013e33ed27200b8ebcd6afe93bc66",
          "name": "solr_dbapi"
        },
        {
          "digest": "sha256:7c7026e74811a787624817f9877c3ed997c713f4b3b5e8107472820fc6673d34",
          "image": "registry.connect.redhat.com/nastel/xray-ml@sha256:7c7026e74811a787624817f9877c3ed997c713f4b3b5e8107472820fc6673d34",
          "name": "ml"
        },
        {
          "digest": "sha256:7b546317261ee9fd47ea38a79a8a278e2f7b0a5d64af0a7b84d6c48b826f75c6",
          "image": "registry.connect.redhat.com/nastel/xray-ui@sha256:7b546317261ee9fd47ea38a79a8a278e2f7b0a5d64af0a7b84d6c48b826f75c6",
          "name": "xray"
        },
        {
          "digest": "sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "image": "registry.connect.redhat.com/nastel/nastel-activemq@sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "name": "active_mq"
        },
        {
          "digest": "sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "image": "registry.connect.redhat.com/nastel/nastel-zookeeper@sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "name": "zookeeper"
        },
        {
          "digest": "sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "image": "registry.connect.redhat.com/nastel/nastel-solr@sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "name": "solr"
        },
        {
          "digest": "sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "image": "registry.connect.redhat.com/nastel/nastel-storm@sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "name": "storm"
        },
        {
          "digest": "sha256:0e222d274811bf1fcfc9d688d85d011a00b2d1e95f98aef00e6264a01981c987",
          "image": "registry.connect.redhat.com/nastel/xray-storm@sha256:0e222d274811bf1fcfc9d688d85d011a00b2d1e95f98aef00e6264a01981c987",
          "name": "storm_topology"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.324.2",
      "version_original": "1.324.2"
    },
    {
      "_id": "609e27aaf787b25f169e678b",
      "alm_examples": [
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRay",
          "metadata": {
            "name": "nastelxray"
          },
          "spec": {
            "active-mq": {
              "image": "registry.connect.redhat.com/nastel/nastel-activemq",
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "1000Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "500Mi"
                }
              },
              "service": {
                "amqpPort": 5672,
                "httpPort": 8161,
                "ingress": {
                  "enabled": true
                },
                "mqttPort": 1883,
                "servicePort": 61616,
                "stopmPort": 61613,
                "type": "ClusterIP",
                "wsPort": 61614
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "ap-domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-ap-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 5440,
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "solr-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "solr-node": {
              "affinity": {},
              "exporter": {
                "configFile": "/opt/solr/contrib/prometheus-exporter/conf/solr-exporter-config.xml",
                "enabled": false,
                "livenessProbe": {
                  "initialDelaySeconds": 20,
                  "periodSeconds": 10
                },
                "podAnnotations": {},
                "port": 9983,
                "readinessProbe": {
                  "initialDelaySeconds": 15,
                  "periodSeconds": 5
                },
                "resources": {},
                "service": {
                  "annotations": {},
                  "type": "ClusterIP"
                },
                "threads": 7,
                "updateStrategy": {}
              },
              "image": {
                "pullPolicy": "Always",
                "repository": "registry.connect.redhat.com/nastel/nastel-solr"
              },
              "javaMem": "-Xms2g -Xmx3g",
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 10
              },
              "logLevel": "INFO",
              "podAnnotations": {},
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "port": 8983,
              "readinessProbe": {
                "initialDelaySeconds": 15,
                "periodSeconds": 5
              },
              "replicaCount": 4,
              "resources": {},
              "service": {
                "annotations": {},
                "ingress": {
                  "enabled": true
                },
                "type": "ClusterIP"
              },
              "terminationGracePeriodSeconds": 180,
              "tls": {
                "caSecret": {
                  "bundlePath": "",
                  "name": ""
                },
                "certSecret": {
                  "certPath": "tls.crt",
                  "keyPath": "tls.key",
                  "name": ""
                },
                "checkPeerName": "false",
                "enabled": false,
                "importKubernetesCA": "false",
                "keystorePassword": "changeit",
                "needClientAuth": "false",
                "wantClientAuth": "false"
              },
              "updateStrategy": {
                "type": "OnDelete"
              },
              "volumeClaimTemplates": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "storageClassName": "ibmc-block-gold",
                "storageSize": "20Gi"
              },
              "zookeeper": {
                "replicaCount": 1
              }
            },
            "xray": {
              "image": "registry.connect.redhat.com/nastel/xray-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "node": {},
                "type": "LoadBalancer"
              }
            },
            "xray-cep": {
              "image": "registry.connect.redhat.com/nastel/xray-cep",
              "init": {
                "dbapi-solr": {
                  "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr"
                },
                "kafka": {
                  "image": "registry.redhat.io/openshift4/ose-cli"
                }
              },
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "LoadBalancer",
                "xRayDataPort": 6580
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-ml-persistance": {
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-file-silver-gid"
              }
            },
            "xray-ml-queries": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-ml-train": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            }
          }
        },
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRayTopology",
          "metadata": {
            "name": "nastelxraytopology"
          },
          "spec": {
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "storm": {
              "enabled": true,
              "fullnameOverride": "storm",
              "name": "storm",
              "nameOverride": "storm",
              "nimbus": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "nimbus",
                  "port": 6627,
                  "type": "ClusterIP"
                }
              },
              "supervisor": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 3,
                "resources": {},
                "service": {
                  "name": "supervisor",
                  "port": 6700
                }
              },
              "ui": {
                "enabled": true,
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": true,
                  "tls": []
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "ui",
                  "port": 8080,
                  "type": "ClusterIP"
                }
              },
              "zookeeper": {
                "enabled": false,
                "fullnameOverride": "storm-keeper",
                "port": 2181,
                "replicaCount": 1,
                "servers": [
                  "storm-keeper"
                ]
              }
            },
            "storm-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-cep": {
              "service": {
                "cepServerPort": 3005,
                "xRayDataPort": 6580
              }
            },
            "xray-storm-topologies": {
              "image": "registry.connect.redhat.com/nastel/xray-storm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "thriftPort": 6627
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/xray-operator-bundle@sha256:0a8d75cf9ded5281df4f71dea1d82439e9fa9f33064830846f0f6b7069a534a4",
      "bundle_path_digest": "sha256:0a8d75cf9ded5281df4f71dea1d82439e9fa9f33064830846f0f6b7069a534a4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-14T07:32:58.793000+00:00",
      "csv_description": "The operator deploys Nastel XRay component containers:\n  * Nastel Domain Server\n  * XRay Complex Event Processing (CEP)\n  * Solr indexing service\n  * Machine Learning (ML)\n  * XRay WebApp\n  * Storm Topologies (optional)\n\nin one go.\n\n[Nastel XRay](https://www.nastel.com/nastel-xray/) allows you to Track & Trace Transaction and Message Flows, Analyze, Visualize and Report your Big Data.\n",
      "csv_display_name": "Nastel XRay Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel XRay",
      "csv_name": "nastel-xray-operator.v1.324.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:11:28.657000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nastel-xray-operator",
      "provided_apis": [
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRay",
          "plural": "nastelxrays",
          "version": "v1alpha3"
        },
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRayTopology",
          "plural": "nastelxraytopologies",
          "version": "v1alpha3"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "name": "xray-operator-e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e-annotation"
        },
        {
          "digest": "sha256:99a1597b50026127e32085707c5bd6db43d58558a6488c3c32f6e28cfe06bb70",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:99a1597b50026127e32085707c5bd6db43d58558a6488c3c32f6e28cfe06bb70",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "name": "nastel-xray-operator"
        },
        {
          "digest": "sha256:9e2bd3d35793fca5839f8cc2af268009a165d83dda60ca4f071799cde4687f61",
          "image": "registry.connect.redhat.com/nastel/nastel-ap-domain@sha256:9e2bd3d35793fca5839f8cc2af268009a165d83dda60ca4f071799cde4687f61",
          "name": "domain"
        },
        {
          "digest": "sha256:e920d1cf18d87b366735d9b60436f8cffc668a914c2cc70869c27c3905f5eef6",
          "image": "registry.connect.redhat.com/nastel/xray-cep@sha256:e920d1cf18d87b366735d9b60436f8cffc668a914c2cc70869c27c3905f5eef6",
          "name": "cep"
        },
        {
          "digest": "sha256:2064034a0afe4a7808fdd949e7251e333d867ba9b165fe8b830a66d154c3cfa0",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:2064034a0afe4a7808fdd949e7251e333d867ba9b165fe8b830a66d154c3cfa0",
          "name": "ose_cli"
        },
        {
          "digest": "sha256:d964db23daeadca53a4cad3d72de23fec9b013e33ed27200b8ebcd6afe93bc66",
          "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr@sha256:d964db23daeadca53a4cad3d72de23fec9b013e33ed27200b8ebcd6afe93bc66",
          "name": "solr_dbapi"
        },
        {
          "digest": "sha256:7c7026e74811a787624817f9877c3ed997c713f4b3b5e8107472820fc6673d34",
          "image": "registry.connect.redhat.com/nastel/xray-ml@sha256:7c7026e74811a787624817f9877c3ed997c713f4b3b5e8107472820fc6673d34",
          "name": "ml"
        },
        {
          "digest": "sha256:7b546317261ee9fd47ea38a79a8a278e2f7b0a5d64af0a7b84d6c48b826f75c6",
          "image": "registry.connect.redhat.com/nastel/xray-ui@sha256:7b546317261ee9fd47ea38a79a8a278e2f7b0a5d64af0a7b84d6c48b826f75c6",
          "name": "xray"
        },
        {
          "digest": "sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "image": "registry.connect.redhat.com/nastel/nastel-activemq@sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "name": "active_mq"
        },
        {
          "digest": "sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "image": "registry.connect.redhat.com/nastel/nastel-zookeeper@sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "name": "zookeeper"
        },
        {
          "digest": "sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "image": "registry.connect.redhat.com/nastel/nastel-solr@sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "name": "solr"
        },
        {
          "digest": "sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "image": "registry.connect.redhat.com/nastel/nastel-storm@sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "name": "storm"
        },
        {
          "digest": "sha256:0e222d274811bf1fcfc9d688d85d011a00b2d1e95f98aef00e6264a01981c987",
          "image": "registry.connect.redhat.com/nastel/xray-storm@sha256:0e222d274811bf1fcfc9d688d85d011a00b2d1e95f98aef00e6264a01981c987",
          "name": "storm_topology"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.324.2",
      "version_original": "1.324.2"
    },
    {
      "_id": "609e3714038ec110481abca6",
      "alm_examples": [
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRay",
          "metadata": {
            "name": "nastelxray"
          },
          "spec": {
            "active-mq": {
              "image": "registry.connect.redhat.com/nastel/nastel-activemq",
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "1000Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "500Mi"
                }
              },
              "service": {
                "amqpPort": 5672,
                "httpPort": 8161,
                "ingress": {
                  "enabled": true
                },
                "mqttPort": 1883,
                "servicePort": 61616,
                "stopmPort": 61613,
                "type": "ClusterIP",
                "wsPort": 61614
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "ap-domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-ap-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 5440,
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "solr-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "solr-node": {
              "affinity": {},
              "exporter": {
                "configFile": "/opt/solr/contrib/prometheus-exporter/conf/solr-exporter-config.xml",
                "enabled": false,
                "livenessProbe": {
                  "initialDelaySeconds": 20,
                  "periodSeconds": 10
                },
                "podAnnotations": {},
                "port": 9983,
                "readinessProbe": {
                  "initialDelaySeconds": 15,
                  "periodSeconds": 5
                },
                "resources": {},
                "service": {
                  "annotations": {},
                  "type": "ClusterIP"
                },
                "threads": 7,
                "updateStrategy": {}
              },
              "image": {
                "pullPolicy": "Always",
                "repository": "registry.connect.redhat.com/nastel/nastel-solr"
              },
              "javaMem": "-Xms2g -Xmx3g",
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 10
              },
              "logLevel": "INFO",
              "podAnnotations": {},
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "port": 8983,
              "readinessProbe": {
                "initialDelaySeconds": 15,
                "periodSeconds": 5
              },
              "replicaCount": 4,
              "resources": {},
              "service": {
                "annotations": {},
                "ingress": {
                  "enabled": true
                },
                "type": "ClusterIP"
              },
              "terminationGracePeriodSeconds": 180,
              "tls": {
                "caSecret": {
                  "bundlePath": "",
                  "name": ""
                },
                "certSecret": {
                  "certPath": "tls.crt",
                  "keyPath": "tls.key",
                  "name": ""
                },
                "checkPeerName": "false",
                "enabled": false,
                "importKubernetesCA": "false",
                "keystorePassword": "changeit",
                "needClientAuth": "false",
                "wantClientAuth": "false"
              },
              "updateStrategy": {
                "type": "OnDelete"
              },
              "volumeClaimTemplates": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "storageClassName": "ibmc-block-gold",
                "storageSize": "20Gi"
              },
              "zookeeper": {
                "replicaCount": 1
              }
            },
            "xray": {
              "image": "registry.connect.redhat.com/nastel/xray-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "node": {},
                "type": "LoadBalancer"
              }
            },
            "xray-cep": {
              "image": "registry.connect.redhat.com/nastel/xray-cep",
              "init": {
                "dbapi-solr": {
                  "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr"
                },
                "kafka": {
                  "image": "registry.redhat.io/openshift4/ose-cli"
                }
              },
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "LoadBalancer",
                "xRayDataPort": 6580
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-ml-persistance": {
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-file-silver-gid"
              }
            },
            "xray-ml-queries": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-ml-train": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            }
          }
        },
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRayTopology",
          "metadata": {
            "name": "nastelxraytopology"
          },
          "spec": {
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "storm": {
              "enabled": true,
              "fullnameOverride": "storm",
              "name": "storm",
              "nameOverride": "storm",
              "nimbus": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "nimbus",
                  "port": 6627,
                  "type": "ClusterIP"
                }
              },
              "supervisor": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 3,
                "resources": {},
                "service": {
                  "name": "supervisor",
                  "port": 6700
                }
              },
              "ui": {
                "enabled": true,
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": true,
                  "tls": []
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "ui",
                  "port": 8080,
                  "type": "ClusterIP"
                }
              },
              "zookeeper": {
                "enabled": false,
                "fullnameOverride": "storm-keeper",
                "port": 2181,
                "replicaCount": 1,
                "servers": [
                  "storm-keeper"
                ]
              }
            },
            "storm-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-cep": {
              "service": {
                "cepServerPort": 3005,
                "xRayDataPort": 6580
              }
            },
            "xray-storm-topologies": {
              "image": "registry.connect.redhat.com/nastel/xray-storm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "thriftPort": 6627
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/xray-operator-bundle@sha256:0a8d75cf9ded5281df4f71dea1d82439e9fa9f33064830846f0f6b7069a534a4",
      "bundle_path_digest": "sha256:0a8d75cf9ded5281df4f71dea1d82439e9fa9f33064830846f0f6b7069a534a4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-14T08:38:44.895000+00:00",
      "csv_description": "The operator deploys Nastel XRay component containers:\n  * Nastel Domain Server\n  * XRay Complex Event Processing (CEP)\n  * Solr indexing service\n  * Machine Learning (ML)\n  * XRay WebApp\n  * Storm Topologies (optional)\n\nin one go.\n\n[Nastel XRay](https://www.nastel.com/nastel-xray/) allows you to Track & Trace Transaction and Message Flows, Analyze, Visualize and Report your Big Data.\n",
      "csv_display_name": "Nastel XRay Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel XRay",
      "csv_name": "nastel-xray-operator.v1.324.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:14:59.191000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "nastel-xray-operator",
      "provided_apis": [
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRay",
          "plural": "nastelxrays",
          "version": "v1alpha3"
        },
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRayTopology",
          "plural": "nastelxraytopologies",
          "version": "v1alpha3"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "name": "xray-operator-e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e-annotation"
        },
        {
          "digest": "sha256:99a1597b50026127e32085707c5bd6db43d58558a6488c3c32f6e28cfe06bb70",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:99a1597b50026127e32085707c5bd6db43d58558a6488c3c32f6e28cfe06bb70",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "name": "nastel-xray-operator"
        },
        {
          "digest": "sha256:9e2bd3d35793fca5839f8cc2af268009a165d83dda60ca4f071799cde4687f61",
          "image": "registry.connect.redhat.com/nastel/nastel-ap-domain@sha256:9e2bd3d35793fca5839f8cc2af268009a165d83dda60ca4f071799cde4687f61",
          "name": "domain"
        },
        {
          "digest": "sha256:e920d1cf18d87b366735d9b60436f8cffc668a914c2cc70869c27c3905f5eef6",
          "image": "registry.connect.redhat.com/nastel/xray-cep@sha256:e920d1cf18d87b366735d9b60436f8cffc668a914c2cc70869c27c3905f5eef6",
          "name": "cep"
        },
        {
          "digest": "sha256:2064034a0afe4a7808fdd949e7251e333d867ba9b165fe8b830a66d154c3cfa0",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:2064034a0afe4a7808fdd949e7251e333d867ba9b165fe8b830a66d154c3cfa0",
          "name": "ose_cli"
        },
        {
          "digest": "sha256:d964db23daeadca53a4cad3d72de23fec9b013e33ed27200b8ebcd6afe93bc66",
          "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr@sha256:d964db23daeadca53a4cad3d72de23fec9b013e33ed27200b8ebcd6afe93bc66",
          "name": "solr_dbapi"
        },
        {
          "digest": "sha256:7c7026e74811a787624817f9877c3ed997c713f4b3b5e8107472820fc6673d34",
          "image": "registry.connect.redhat.com/nastel/xray-ml@sha256:7c7026e74811a787624817f9877c3ed997c713f4b3b5e8107472820fc6673d34",
          "name": "ml"
        },
        {
          "digest": "sha256:7b546317261ee9fd47ea38a79a8a278e2f7b0a5d64af0a7b84d6c48b826f75c6",
          "image": "registry.connect.redhat.com/nastel/xray-ui@sha256:7b546317261ee9fd47ea38a79a8a278e2f7b0a5d64af0a7b84d6c48b826f75c6",
          "name": "xray"
        },
        {
          "digest": "sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "image": "registry.connect.redhat.com/nastel/nastel-activemq@sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "name": "active_mq"
        },
        {
          "digest": "sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "image": "registry.connect.redhat.com/nastel/nastel-zookeeper@sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "name": "zookeeper"
        },
        {
          "digest": "sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "image": "registry.connect.redhat.com/nastel/nastel-solr@sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "name": "solr"
        },
        {
          "digest": "sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "image": "registry.connect.redhat.com/nastel/nastel-storm@sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "name": "storm"
        },
        {
          "digest": "sha256:0e222d274811bf1fcfc9d688d85d011a00b2d1e95f98aef00e6264a01981c987",
          "image": "registry.connect.redhat.com/nastel/xray-storm@sha256:0e222d274811bf1fcfc9d688d85d011a00b2d1e95f98aef00e6264a01981c987",
          "name": "storm_topology"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.324.2",
      "version_original": "1.324.2"
    },
    {
      "_id": "609e4af3fbae4677fafa77b7",
      "alm_examples": [
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRay",
          "metadata": {
            "name": "nastelxray"
          },
          "spec": {
            "active-mq": {
              "image": "registry.connect.redhat.com/nastel/nastel-activemq",
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "1000Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "500Mi"
                }
              },
              "service": {
                "amqpPort": 5672,
                "httpPort": 8161,
                "ingress": {
                  "enabled": true
                },
                "mqttPort": 1883,
                "servicePort": 61616,
                "stopmPort": 61613,
                "type": "ClusterIP",
                "wsPort": 61614
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "ap-domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-ap-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 5440,
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "solr-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "solr-node": {
              "affinity": {},
              "exporter": {
                "configFile": "/opt/solr/contrib/prometheus-exporter/conf/solr-exporter-config.xml",
                "enabled": false,
                "livenessProbe": {
                  "initialDelaySeconds": 20,
                  "periodSeconds": 10
                },
                "podAnnotations": {},
                "port": 9983,
                "readinessProbe": {
                  "initialDelaySeconds": 15,
                  "periodSeconds": 5
                },
                "resources": {},
                "service": {
                  "annotations": {},
                  "type": "ClusterIP"
                },
                "threads": 7,
                "updateStrategy": {}
              },
              "image": {
                "pullPolicy": "Always",
                "repository": "registry.connect.redhat.com/nastel/nastel-solr"
              },
              "javaMem": "-Xms2g -Xmx3g",
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 10
              },
              "logLevel": "INFO",
              "podAnnotations": {},
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "port": 8983,
              "readinessProbe": {
                "initialDelaySeconds": 15,
                "periodSeconds": 5
              },
              "replicaCount": 4,
              "resources": {},
              "service": {
                "annotations": {},
                "ingress": {
                  "enabled": true
                },
                "type": "ClusterIP"
              },
              "terminationGracePeriodSeconds": 180,
              "tls": {
                "caSecret": {
                  "bundlePath": "",
                  "name": ""
                },
                "certSecret": {
                  "certPath": "tls.crt",
                  "keyPath": "tls.key",
                  "name": ""
                },
                "checkPeerName": "false",
                "enabled": false,
                "importKubernetesCA": "false",
                "keystorePassword": "changeit",
                "needClientAuth": "false",
                "wantClientAuth": "false"
              },
              "updateStrategy": {
                "type": "OnDelete"
              },
              "volumeClaimTemplates": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "storageClassName": "ibmc-block-gold",
                "storageSize": "20Gi"
              },
              "zookeeper": {
                "replicaCount": 1
              }
            },
            "xray": {
              "image": "registry.connect.redhat.com/nastel/xray-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "node": {},
                "type": "LoadBalancer"
              }
            },
            "xray-cep": {
              "image": "registry.connect.redhat.com/nastel/xray-cep",
              "init": {
                "dbapi-solr": {
                  "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr"
                },
                "kafka": {
                  "image": "registry.redhat.io/openshift4/ose-cli"
                }
              },
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "LoadBalancer",
                "xRayDataPort": 6580
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-ml-persistance": {
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-file-silver-gid"
              }
            },
            "xray-ml-queries": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-ml-train": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            }
          }
        },
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRayTopology",
          "metadata": {
            "name": "nastelxraytopology"
          },
          "spec": {
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "storm": {
              "enabled": true,
              "fullnameOverride": "storm",
              "name": "storm",
              "nameOverride": "storm",
              "nimbus": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "nimbus",
                  "port": 6627,
                  "type": "ClusterIP"
                }
              },
              "supervisor": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 3,
                "resources": {},
                "service": {
                  "name": "supervisor",
                  "port": 6700
                }
              },
              "ui": {
                "enabled": true,
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": true,
                  "tls": []
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "ui",
                  "port": 8080,
                  "type": "ClusterIP"
                }
              },
              "zookeeper": {
                "enabled": false,
                "fullnameOverride": "storm-keeper",
                "port": 2181,
                "replicaCount": 1,
                "servers": [
                  "storm-keeper"
                ]
              }
            },
            "storm-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-cep": {
              "service": {
                "cepServerPort": 3005,
                "xRayDataPort": 6580
              }
            },
            "xray-storm-topologies": {
              "image": "registry.connect.redhat.com/nastel/xray-storm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "thriftPort": 6627
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/xray-operator-bundle@sha256:0a8d75cf9ded5281df4f71dea1d82439e9fa9f33064830846f0f6b7069a534a4",
      "bundle_path_digest": "sha256:0a8d75cf9ded5281df4f71dea1d82439e9fa9f33064830846f0f6b7069a534a4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-14T10:03:31.548000+00:00",
      "csv_description": "The operator deploys Nastel XRay component containers:\n  * Nastel Domain Server\n  * XRay Complex Event Processing (CEP)\n  * Solr indexing service\n  * Machine Learning (ML)\n  * XRay WebApp\n  * Storm Topologies (optional)\n\nin one go.\n\n[Nastel XRay](https://www.nastel.com/nastel-xray/) allows you to Track & Trace Transaction and Message Flows, Analyze, Visualize and Report your Big Data.\n",
      "csv_display_name": "Nastel XRay Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel XRay",
      "csv_name": "nastel-xray-operator.v1.324.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:21:57.032000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nastel-xray-operator",
      "provided_apis": [
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRay",
          "plural": "nastelxrays",
          "version": "v1alpha3"
        },
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRayTopology",
          "plural": "nastelxraytopologies",
          "version": "v1alpha3"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "name": "xray-operator-e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e-annotation"
        },
        {
          "digest": "sha256:99a1597b50026127e32085707c5bd6db43d58558a6488c3c32f6e28cfe06bb70",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:99a1597b50026127e32085707c5bd6db43d58558a6488c3c32f6e28cfe06bb70",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:e80c2de4a1f9cdac9780a872a2a2e46493f5dc522027ad8ad2d9135967eeac1e",
          "name": "nastel-xray-operator"
        },
        {
          "digest": "sha256:9e2bd3d35793fca5839f8cc2af268009a165d83dda60ca4f071799cde4687f61",
          "image": "registry.connect.redhat.com/nastel/nastel-ap-domain@sha256:9e2bd3d35793fca5839f8cc2af268009a165d83dda60ca4f071799cde4687f61",
          "name": "domain"
        },
        {
          "digest": "sha256:e920d1cf18d87b366735d9b60436f8cffc668a914c2cc70869c27c3905f5eef6",
          "image": "registry.connect.redhat.com/nastel/xray-cep@sha256:e920d1cf18d87b366735d9b60436f8cffc668a914c2cc70869c27c3905f5eef6",
          "name": "cep"
        },
        {
          "digest": "sha256:2064034a0afe4a7808fdd949e7251e333d867ba9b165fe8b830a66d154c3cfa0",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:2064034a0afe4a7808fdd949e7251e333d867ba9b165fe8b830a66d154c3cfa0",
          "name": "ose_cli"
        },
        {
          "digest": "sha256:d964db23daeadca53a4cad3d72de23fec9b013e33ed27200b8ebcd6afe93bc66",
          "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr@sha256:d964db23daeadca53a4cad3d72de23fec9b013e33ed27200b8ebcd6afe93bc66",
          "name": "solr_dbapi"
        },
        {
          "digest": "sha256:7c7026e74811a787624817f9877c3ed997c713f4b3b5e8107472820fc6673d34",
          "image": "registry.connect.redhat.com/nastel/xray-ml@sha256:7c7026e74811a787624817f9877c3ed997c713f4b3b5e8107472820fc6673d34",
          "name": "ml"
        },
        {
          "digest": "sha256:7b546317261ee9fd47ea38a79a8a278e2f7b0a5d64af0a7b84d6c48b826f75c6",
          "image": "registry.connect.redhat.com/nastel/xray-ui@sha256:7b546317261ee9fd47ea38a79a8a278e2f7b0a5d64af0a7b84d6c48b826f75c6",
          "name": "xray"
        },
        {
          "digest": "sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "image": "registry.connect.redhat.com/nastel/nastel-activemq@sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "name": "active_mq"
        },
        {
          "digest": "sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "image": "registry.connect.redhat.com/nastel/nastel-zookeeper@sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "name": "zookeeper"
        },
        {
          "digest": "sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "image": "registry.connect.redhat.com/nastel/nastel-solr@sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "name": "solr"
        },
        {
          "digest": "sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "image": "registry.connect.redhat.com/nastel/nastel-storm@sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "name": "storm"
        },
        {
          "digest": "sha256:0e222d274811bf1fcfc9d688d85d011a00b2d1e95f98aef00e6264a01981c987",
          "image": "registry.connect.redhat.com/nastel/xray-storm@sha256:0e222d274811bf1fcfc9d688d85d011a00b2d1e95f98aef00e6264a01981c987",
          "name": "storm_topology"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.324.2",
      "version_original": "1.324.2"
    },
    {
      "_id": "609f526cfbae4677fafa77bf",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:a6ef9961d40403e2b8832df6cec9e27f35ae70ab610ed138cfd05e153888b498",
      "bundle_path_digest": "sha256:a6ef9961d40403e2b8832df6cec9e27f35ae70ab610ed138cfd05e153888b498",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-15T04:47:40.250000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.1.2-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:28:01.662000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:667cbf52009099702ea9a8fbf6694f41e4d1b1d86b610b8610277357391e4637",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:667cbf52009099702ea9a8fbf6694f41e4d1b1d86b610b8610277357391e4637",
          "name": "kubeturbo-operator-667cbf52009099702ea9a8fbf6694f41e4d1b1d86b610b8610277357391e4637-annotation"
        },
        {
          "digest": "sha256:667cbf52009099702ea9a8fbf6694f41e4d1b1d86b610b8610277357391e4637",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:667cbf52009099702ea9a8fbf6694f41e4d1b1d86b610b8610277357391e4637",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:16109bf167665cb3a7f7d5089091ea098a431f257b800b56b9c3ce383bcc7c90",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:16109bf167665cb3a7f7d5089091ea098a431f257b800b56b9c3ce383bcc7c90",
          "name": "kubeturbo"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "8.1.2-1",
      "version_original": "8.1.2-1"
    },
    {
      "_id": "609f52a7f787b25f169e67a6",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:505c038233894f5fd5203f1546544f7b2a0cca334b2e8cc055243f473cd22625",
      "bundle_path_digest": "sha256:505c038233894f5fd5203f1546544f7b2a0cca334b2e8cc055243f473cd22625",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-15T04:48:39.658000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.1.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:24:53.268000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:580966bcf1e843a6397124425986f259caa5cfc67041718a8c96811d80eb2b90",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:580966bcf1e843a6397124425986f259caa5cfc67041718a8c96811d80eb2b90",
          "name": "kubeturbo-operator-580966bcf1e843a6397124425986f259caa5cfc67041718a8c96811d80eb2b90-annotation"
        },
        {
          "digest": "sha256:580966bcf1e843a6397124425986f259caa5cfc67041718a8c96811d80eb2b90",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:580966bcf1e843a6397124425986f259caa5cfc67041718a8c96811d80eb2b90",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:99df13df5e040bec14bab76928b6d3d6352c56ae7cc0db33f80b18b46ee54223",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:99df13df5e040bec14bab76928b6d3d6352c56ae7cc0db33f80b18b46ee54223",
          "name": "kubeturbo"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "8.1.6",
      "version_original": "8.1.6"
    },
    {
      "_id": "60a39f23fbae4677fafa7807",
      "alm_examples": [
        {
          "api_version": "citrix.com/v1alpha1",
          "kind": "CitrixCpxWithIngressController",
          "metadata": {
            "name": "cpx-cic"
          },
          "spec": {
            "ADMSettings": {
              "ADMFingerPrint": "",
              "ADMIP": "",
              "bandWidth": "",
              "bandWidthLicense": false,
              "cpxCores": "",
              "licenseServerIP": "",
              "licenseServerPort": 27000,
              "loginSecret": "",
              "vCPULicense": false
            },
            "aws": false,
            "azure": false,
            "bgpSettings": {
              "bgpConfig": [
                {
                  "bgpRouter": {
                    "localAS": 100,
                    "neighbor": [
                      {
                        "ASOriginationInterval": 10,
                        "address": "",
                        "advertisementInterval": 10,
                        "remoteAS": 100
                      }
                    ]
                  }
                }
              ],
              "required": false
            },
            "cic": {
              "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
              "pullPolicy": "Always",
              "required": true
            },
            "coeConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 5563
              },
              "transactions": {
                "enable": false,
                "port": 5557
              }
            },
            "cpxBgpRouter": false,
            "crds": {
              "install": true,
              "retainOnDelete": false
            },
            "defaultSSLCertSecret": "",
            "entityPrefix": "",
            "exporter": {
              "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "Always",
              "required": false
            },
            "image": "registry.connect.redhat.com/citrix/cpx-13-0@sha256:54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d",
            "ingressClass": "",
            "ingressIP": "",
            "ipam": false,
            "kubernetesURL": "",
            "license": {
              "accept": false
            },
            "logLevel": "INFO",
            "logProxy": "",
            "mgmtHttpPort": 9080,
            "mgmtHttpsPort": 9443,
            "namespaceLabels": "",
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nsCookieVersion": "0",
            "nsGateway": "192.168.1.1",
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "192.168.1.2",
            "nsProtocol": "http",
            "openshift": true,
            "pullPolicy": "Always",
            "routeLabels": "",
            "serviceAccount": {
              "create": true
            },
            "serviceAnnotations": {
              "aws": {
                "backendProtocol": "",
                "negotiationPolicy": "",
                "proxyProtocol": false,
                "resourcesTags": "",
                "sslCert": "",
                "sslPorts": ""
              },
              "azure": {
                "internalLoadBalancer": false
              }
            },
            "serviceType": {
              "loadBalancer": {
                "enabled": false,
                "externalTrafficPolicy": "Local"
              },
              "nodePort": {
                "enabled": false,
                "httpPort": "",
                "httpsPort": ""
              }
            },
            "setAsDefaultIngressClass": false,
            "sslCertManagedByAWS": false,
            "tolerations": [],
            "updateIngressStatus": false
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-bundle@sha256:58f15e99628043753fefa5c8df190cc90e82a6bd3b00aed3c52f0fbf69d81039",
      "bundle_path_digest": "sha256:58f15e99628043753fefa5c8df190cc90e82a6bd3b00aed3c52f0fbf69d81039",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-18T11:04:03.006000+00:00",
      "csv_description": "Citrix ADC CPX is a container-based application delivery controller that can be provisioned on a Docker host. Citrix ADC CPX enables customers to leverage Docker engine capabilities and use NetScaler load balancing and traffic management features for container-based applications. Citrix Ingress Controller which will be running in side-car mode with Citrix ADC CPX will automatically configures Citrix ADC CPX based on the Ingress resource configuration. This operator can be used deploy Citrix ADC CPX with Citrix ingress controller in an OpenShift environment.",
      "csv_display_name": "Citrix ADC CPX with Ingress Controller",
      "csv_metadata_description": "Citrix ADC CPX is a container-based application delivery controller that can be provisioned on a Docker host. Citrix ADC CPX enables customers to leverage Docker engine capabilities and use NetScaler load balancing and traffic management features for container-based applications. Citrix Ingress Controller which will be running in side-car mode with Citrix ADC CPX will automatically configures Citrix ADC CPX based on the Ingress resource configuration. This operator can be used deploy Citrix ADC CPX with Citrix ingress controller in an Openshift environment.",
      "csv_name": "citrix-cpx-with-ingress-controller-operator.v1.13.20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:07:58.469000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "citrix-cpx-with-ingress-controller-operator",
      "provided_apis": [
        {
          "group": "citrix.com",
          "kind": "CitrixCpxWithIngressController",
          "plural": "citrixcpxwithingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4ca00f777a37e3070cfa2651685ba284623a78b55e2f81143ec8b58e967f163a",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-controller@sha256:4ca00f777a37e3070cfa2651685ba284623a78b55e2f81143ec8b58e967f163a",
          "name": "citrix-k8s-cpx-ingress-controller-4ca00f777a37e3070cfa2651685ba284623a78b55e2f81143ec8b58e967f163a-annotation"
        },
        {
          "digest": "sha256:10252238f921d720b8af7e2ca8e90be6e8516efefc1633697aa048a74041f1c3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:10252238f921d720b8af7e2ca8e90be6e8516efefc1633697aa048a74041f1c3",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:4ca00f777a37e3070cfa2651685ba284623a78b55e2f81143ec8b58e967f163a",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-controller@sha256:4ca00f777a37e3070cfa2651685ba284623a78b55e2f81143ec8b58e967f163a",
          "name": "manager"
        },
        {
          "digest": "sha256:54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d",
          "image": "registry.connect.redhat.com/citrix/cpx-13-0@sha256:54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d",
          "name": "cpx"
        },
        {
          "digest": "sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "name": "cic"
        },
        {
          "digest": "sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "name": "exporter"
        },
        {
          "digest": "sha256:54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d",
          "image": "registry.connect.redhat.com/citrix/cpx-13-0@sha256:54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d",
          "name": "cpx-13-0-54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d-annotation"
        },
        {
          "digest": "sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "name": "citrix-adc-metrics-exporter-c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe-annotation"
        },
        {
          "digest": "sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "name": "citrix-ingress-controller-f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.13.20",
      "version_original": "1.13.20"
    },
    {
      "_id": "60a3acedf787b25f169e67f2",
      "alm_examples": [
        {
          "api_version": "citrix.com/v1alpha1",
          "kind": "CitrixCpxWithIngressController",
          "metadata": {
            "name": "cpx-cic"
          },
          "spec": {
            "ADMSettings": {
              "ADMFingerPrint": "",
              "ADMIP": "",
              "bandWidth": "",
              "bandWidthLicense": false,
              "cpxCores": "",
              "licenseServerIP": "",
              "licenseServerPort": 27000,
              "loginSecret": "",
              "vCPULicense": false
            },
            "aws": false,
            "azure": false,
            "bgpSettings": {
              "bgpConfig": [
                {
                  "bgpRouter": {
                    "localAS": 100,
                    "neighbor": [
                      {
                        "ASOriginationInterval": 10,
                        "address": "",
                        "advertisementInterval": 10,
                        "remoteAS": 100
                      }
                    ]
                  }
                }
              ],
              "required": false
            },
            "cic": {
              "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
              "pullPolicy": "Always",
              "required": true
            },
            "coeConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 5563
              },
              "transactions": {
                "enable": false,
                "port": 5557
              }
            },
            "cpxBgpRouter": false,
            "crds": {
              "install": true,
              "retainOnDelete": false
            },
            "defaultSSLCertSecret": "",
            "entityPrefix": "",
            "exporter": {
              "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "Always",
              "required": false
            },
            "image": "registry.connect.redhat.com/citrix/cpx-13-0@sha256:54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d",
            "ingressClass": "",
            "ingressIP": "",
            "ipam": false,
            "kubernetesURL": "",
            "license": {
              "accept": false
            },
            "logLevel": "INFO",
            "logProxy": "",
            "mgmtHttpPort": 9080,
            "mgmtHttpsPort": 9443,
            "namespaceLabels": "",
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nsCookieVersion": "0",
            "nsGateway": "192.168.1.1",
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "192.168.1.2",
            "nsProtocol": "http",
            "openshift": true,
            "pullPolicy": "Always",
            "routeLabels": "",
            "serviceAccount": {
              "create": true
            },
            "serviceAnnotations": {
              "aws": {
                "backendProtocol": "",
                "negotiationPolicy": "",
                "proxyProtocol": false,
                "resourcesTags": "",
                "sslCert": "",
                "sslPorts": ""
              },
              "azure": {
                "internalLoadBalancer": false
              }
            },
            "serviceType": {
              "loadBalancer": {
                "enabled": false,
                "externalTrafficPolicy": "Local"
              },
              "nodePort": {
                "enabled": false,
                "httpPort": "",
                "httpsPort": ""
              }
            },
            "setAsDefaultIngressClass": false,
            "sslCertManagedByAWS": false,
            "tolerations": [],
            "updateIngressStatus": false
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-bundle@sha256:58f15e99628043753fefa5c8df190cc90e82a6bd3b00aed3c52f0fbf69d81039",
      "bundle_path_digest": "sha256:58f15e99628043753fefa5c8df190cc90e82a6bd3b00aed3c52f0fbf69d81039",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-18T12:02:53.030000+00:00",
      "csv_description": "Citrix ADC CPX is a container-based application delivery controller that can be provisioned on a Docker host. Citrix ADC CPX enables customers to leverage Docker engine capabilities and use NetScaler load balancing and traffic management features for container-based applications. Citrix Ingress Controller which will be running in side-car mode with Citrix ADC CPX will automatically configures Citrix ADC CPX based on the Ingress resource configuration. This operator can be used deploy Citrix ADC CPX with Citrix ingress controller in an OpenShift environment.",
      "csv_display_name": "Citrix ADC CPX with Ingress Controller",
      "csv_metadata_description": "Citrix ADC CPX is a container-based application delivery controller that can be provisioned on a Docker host. Citrix ADC CPX enables customers to leverage Docker engine capabilities and use NetScaler load balancing and traffic management features for container-based applications. Citrix Ingress Controller which will be running in side-car mode with Citrix ADC CPX will automatically configures Citrix ADC CPX based on the Ingress resource configuration. This operator can be used deploy Citrix ADC CPX with Citrix ingress controller in an Openshift environment.",
      "csv_name": "citrix-cpx-with-ingress-controller-operator.v1.13.20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:54:05.517000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "citrix-cpx-with-ingress-controller-operator",
      "provided_apis": [
        {
          "group": "citrix.com",
          "kind": "CitrixCpxWithIngressController",
          "plural": "citrixcpxwithingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4ca00f777a37e3070cfa2651685ba284623a78b55e2f81143ec8b58e967f163a",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-controller@sha256:4ca00f777a37e3070cfa2651685ba284623a78b55e2f81143ec8b58e967f163a",
          "name": "citrix-k8s-cpx-ingress-controller-4ca00f777a37e3070cfa2651685ba284623a78b55e2f81143ec8b58e967f163a-annotation"
        },
        {
          "digest": "sha256:10252238f921d720b8af7e2ca8e90be6e8516efefc1633697aa048a74041f1c3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:10252238f921d720b8af7e2ca8e90be6e8516efefc1633697aa048a74041f1c3",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:4ca00f777a37e3070cfa2651685ba284623a78b55e2f81143ec8b58e967f163a",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-controller@sha256:4ca00f777a37e3070cfa2651685ba284623a78b55e2f81143ec8b58e967f163a",
          "name": "manager"
        },
        {
          "digest": "sha256:54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d",
          "image": "registry.connect.redhat.com/citrix/cpx-13-0@sha256:54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d",
          "name": "cpx"
        },
        {
          "digest": "sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "name": "cic"
        },
        {
          "digest": "sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "name": "exporter"
        },
        {
          "digest": "sha256:54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d",
          "image": "registry.connect.redhat.com/citrix/cpx-13-0@sha256:54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d",
          "name": "cpx-13-0-54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d-annotation"
        },
        {
          "digest": "sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "name": "citrix-adc-metrics-exporter-c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe-annotation"
        },
        {
          "digest": "sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "name": "citrix-ingress-controller-f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.13.20",
      "version_original": "1.13.20"
    },
    {
      "_id": "60a3bb40f787b25f169e67f5",
      "alm_examples": [
        {
          "api_version": "citrix.com/v1alpha1",
          "kind": "CitrixCpxWithIngressController",
          "metadata": {
            "name": "cpx-cic"
          },
          "spec": {
            "ADMSettings": {
              "ADMFingerPrint": "",
              "ADMIP": "",
              "bandWidth": "",
              "bandWidthLicense": false,
              "cpxCores": "",
              "licenseServerIP": "",
              "licenseServerPort": 27000,
              "loginSecret": "",
              "vCPULicense": false
            },
            "aws": false,
            "azure": false,
            "bgpSettings": {
              "bgpConfig": [
                {
                  "bgpRouter": {
                    "localAS": 100,
                    "neighbor": [
                      {
                        "ASOriginationInterval": 10,
                        "address": "",
                        "advertisementInterval": 10,
                        "remoteAS": 100
                      }
                    ]
                  }
                }
              ],
              "required": false
            },
            "cic": {
              "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
              "pullPolicy": "Always",
              "required": true
            },
            "coeConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 5563
              },
              "transactions": {
                "enable": false,
                "port": 5557
              }
            },
            "cpxBgpRouter": false,
            "crds": {
              "install": true,
              "retainOnDelete": false
            },
            "defaultSSLCertSecret": "",
            "entityPrefix": "",
            "exporter": {
              "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "Always",
              "required": false
            },
            "image": "registry.connect.redhat.com/citrix/cpx-13-0@sha256:54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d",
            "ingressClass": "",
            "ingressIP": "",
            "ipam": false,
            "kubernetesURL": "",
            "license": {
              "accept": false
            },
            "logLevel": "INFO",
            "logProxy": "",
            "mgmtHttpPort": 9080,
            "mgmtHttpsPort": 9443,
            "namespaceLabels": "",
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nsCookieVersion": "0",
            "nsGateway": "192.168.1.1",
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "192.168.1.2",
            "nsProtocol": "http",
            "openshift": true,
            "pullPolicy": "Always",
            "routeLabels": "",
            "serviceAccount": {
              "create": true
            },
            "serviceAnnotations": {
              "aws": {
                "backendProtocol": "",
                "negotiationPolicy": "",
                "proxyProtocol": false,
                "resourcesTags": "",
                "sslCert": "",
                "sslPorts": ""
              },
              "azure": {
                "internalLoadBalancer": false
              }
            },
            "serviceType": {
              "loadBalancer": {
                "enabled": false,
                "externalTrafficPolicy": "Local"
              },
              "nodePort": {
                "enabled": false,
                "httpPort": "",
                "httpsPort": ""
              }
            },
            "setAsDefaultIngressClass": false,
            "sslCertManagedByAWS": false,
            "tolerations": [],
            "updateIngressStatus": false
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-bundle@sha256:58f15e99628043753fefa5c8df190cc90e82a6bd3b00aed3c52f0fbf69d81039",
      "bundle_path_digest": "sha256:58f15e99628043753fefa5c8df190cc90e82a6bd3b00aed3c52f0fbf69d81039",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-18T13:04:00.659000+00:00",
      "csv_description": "Citrix ADC CPX is a container-based application delivery controller that can be provisioned on a Docker host. Citrix ADC CPX enables customers to leverage Docker engine capabilities and use NetScaler load balancing and traffic management features for container-based applications. Citrix Ingress Controller which will be running in side-car mode with Citrix ADC CPX will automatically configures Citrix ADC CPX based on the Ingress resource configuration. This operator can be used deploy Citrix ADC CPX with Citrix ingress controller in an OpenShift environment.",
      "csv_display_name": "Citrix ADC CPX with Ingress Controller",
      "csv_metadata_description": "Citrix ADC CPX is a container-based application delivery controller that can be provisioned on a Docker host. Citrix ADC CPX enables customers to leverage Docker engine capabilities and use NetScaler load balancing and traffic management features for container-based applications. Citrix Ingress Controller which will be running in side-car mode with Citrix ADC CPX will automatically configures Citrix ADC CPX based on the Ingress resource configuration. This operator can be used deploy Citrix ADC CPX with Citrix ingress controller in an Openshift environment.",
      "csv_name": "citrix-cpx-with-ingress-controller-operator.v1.13.20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:48:05.726000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "citrix-cpx-with-ingress-controller-operator",
      "provided_apis": [
        {
          "group": "citrix.com",
          "kind": "CitrixCpxWithIngressController",
          "plural": "citrixcpxwithingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4ca00f777a37e3070cfa2651685ba284623a78b55e2f81143ec8b58e967f163a",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-controller@sha256:4ca00f777a37e3070cfa2651685ba284623a78b55e2f81143ec8b58e967f163a",
          "name": "citrix-k8s-cpx-ingress-controller-4ca00f777a37e3070cfa2651685ba284623a78b55e2f81143ec8b58e967f163a-annotation"
        },
        {
          "digest": "sha256:10252238f921d720b8af7e2ca8e90be6e8516efefc1633697aa048a74041f1c3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:10252238f921d720b8af7e2ca8e90be6e8516efefc1633697aa048a74041f1c3",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:4ca00f777a37e3070cfa2651685ba284623a78b55e2f81143ec8b58e967f163a",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-controller@sha256:4ca00f777a37e3070cfa2651685ba284623a78b55e2f81143ec8b58e967f163a",
          "name": "manager"
        },
        {
          "digest": "sha256:54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d",
          "image": "registry.connect.redhat.com/citrix/cpx-13-0@sha256:54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d",
          "name": "cpx"
        },
        {
          "digest": "sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "name": "cic"
        },
        {
          "digest": "sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "name": "exporter"
        },
        {
          "digest": "sha256:54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d",
          "image": "registry.connect.redhat.com/citrix/cpx-13-0@sha256:54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d",
          "name": "cpx-13-0-54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d-annotation"
        },
        {
          "digest": "sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "name": "citrix-adc-metrics-exporter-c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe-annotation"
        },
        {
          "digest": "sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "name": "citrix-ingress-controller-f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.13.20",
      "version_original": "1.13.20"
    },
    {
      "_id": "60a50c851cd4abb653ffc798",
      "alm_examples": [
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceCSIDriver",
          "metadata": {
            "name": "marketplacecsidriver"
          },
          "spec": {
            "credential": {
              "name": "redhat-marketplace-pull-secret",
              "type": "rhm-pull-secret"
            },
            "endpoint": "s3.us.cloud-object-storage.appdomain.cloud",
            "healthCheckIntervalInMinutes": 0,
            "mountRootPath": "/var/redhat-marketplace/datasets"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceDataset",
          "metadata": {
            "name": "us-labor-stats"
          },
          "spec": {
            "bucket": "rhmccp-ae4ac7b9-38e6-4c5f-8e5b-566b7cfed37d"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceDriverHealthCheck",
          "metadata": {
            "name": "marketplacedriverhealthcheck-sample"
          },
          "spec": {
            "affectedNodes": [
              ""
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-dataset-operator-bundle@sha256:10cccb0304fee326c1221d6f9c6ac80f36b69a6856cd2db20d515536fc322591",
      "bundle_path_digest": "sha256:10cccb0304fee326c1221d6f9c6ac80f36b69a6856cd2db20d515536fc322591",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-19T13:03:01.662000+00:00",
      "csv_description": "The Red Hat Marketplace Dataset Operator provides a CSI driver to mount datasets purchased from Red Hat Marketplace into OpenShift workloads.\n### Installation\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n\n2. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n3. Install the Red Hat Marketplace Dataset Operator in the `openshift-operators` namespace.\n\n4. Create an instance of Marketplace CSIDriver in `openshift-redhat-marketplace` namespace. Use the default values in the form/yaml.\n\n### Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n\n### Getting help\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/marketplace-csi-driver) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n\n### Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/marketplace-csi-driver/blob/main/README.md)\n\n### License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/marketplace-csi-driver/blob/main/LICENSE)\n",
      "csv_display_name": "Red Hat Marketplace Dataset Operator",
      "csv_metadata_description": "The Red Hat Marketplace Dataset Operator provides a CSI driver to mount datasets purchased from Red Hat Marketplace into OpenShift workloads.",
      "csv_name": "dataset-operator.v1.0.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:01:51.479000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "dataset-operator",
      "provided_apis": [
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceCSIDriver",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceDataset",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceDriverHealthCheck",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:5eef64b0a4db0f0ea415079375149a73cb5296931ce56433d5c30cadc7619bde",
          "image": "quay.io/rh-marketplace/marketplace-dataset-operator@sha256:5eef64b0a4db0f0ea415079375149a73cb5296931ce56433d5c30cadc7619bde",
          "name": "marketplace-dataset-operator-5eef64b0a4db0f0ea415079375149a73cb5296931ce56433d5c30cadc7619bde-annotation"
        },
        {
          "digest": "sha256:5eef64b0a4db0f0ea415079375149a73cb5296931ce56433d5c30cadc7619bde",
          "image": "quay.io/rh-marketplace/marketplace-dataset-operator@sha256:5eef64b0a4db0f0ea415079375149a73cb5296931ce56433d5c30cadc7619bde",
          "name": "manager"
        },
        {
          "digest": "sha256:10252238f921d720b8af7e2ca8e90be6e8516efefc1633697aa048a74041f1c3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:10252238f921d720b8af7e2ca8e90be6e8516efefc1633697aa048a74041f1c3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": "",
      "skip_range": ">=0.0.0 <1.0.6",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.6",
      "version_original": "1.0.6"
    },
    {
      "_id": "60a51017038ec110481abd49",
      "alm_examples": [
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceCSIDriver",
          "metadata": {
            "name": "marketplacecsidriver"
          },
          "spec": {
            "credential": {
              "name": "redhat-marketplace-pull-secret",
              "type": "rhm-pull-secret"
            },
            "endpoint": "s3.us.cloud-object-storage.appdomain.cloud",
            "healthCheckIntervalInMinutes": 0,
            "mountRootPath": "/var/redhat-marketplace/datasets"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceDataset",
          "metadata": {
            "name": "us-labor-stats"
          },
          "spec": {
            "bucket": "rhmccp-ae4ac7b9-38e6-4c5f-8e5b-566b7cfed37d"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceDriverHealthCheck",
          "metadata": {
            "name": "marketplacedriverhealthcheck-sample"
          },
          "spec": {
            "affectedNodes": [
              ""
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-dataset-operator-bundle@sha256:10cccb0304fee326c1221d6f9c6ac80f36b69a6856cd2db20d515536fc322591",
      "bundle_path_digest": "sha256:10cccb0304fee326c1221d6f9c6ac80f36b69a6856cd2db20d515536fc322591",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-19T13:18:15.915000+00:00",
      "csv_description": "The Red Hat Marketplace Dataset Operator provides a CSI driver to mount datasets purchased from Red Hat Marketplace into OpenShift workloads.\n### Installation\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n\n2. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n3. Install the Red Hat Marketplace Dataset Operator in the `openshift-operators` namespace.\n\n4. Create an instance of Marketplace CSIDriver in `openshift-redhat-marketplace` namespace. Use the default values in the form/yaml.\n\n### Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n\n### Getting help\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/marketplace-csi-driver) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n\n### Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/marketplace-csi-driver/blob/main/README.md)\n\n### License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/marketplace-csi-driver/blob/main/LICENSE)\n",
      "csv_display_name": "Red Hat Marketplace Dataset Operator",
      "csv_metadata_description": "The Red Hat Marketplace Dataset Operator provides a CSI driver to mount datasets purchased from Red Hat Marketplace into OpenShift workloads.",
      "csv_name": "dataset-operator.v1.0.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:17:16.908000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "dataset-operator",
      "provided_apis": [
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceCSIDriver",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceDataset",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceDriverHealthCheck",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:5eef64b0a4db0f0ea415079375149a73cb5296931ce56433d5c30cadc7619bde",
          "image": "quay.io/rh-marketplace/marketplace-dataset-operator@sha256:5eef64b0a4db0f0ea415079375149a73cb5296931ce56433d5c30cadc7619bde",
          "name": "marketplace-dataset-operator-5eef64b0a4db0f0ea415079375149a73cb5296931ce56433d5c30cadc7619bde-annotation"
        },
        {
          "digest": "sha256:5eef64b0a4db0f0ea415079375149a73cb5296931ce56433d5c30cadc7619bde",
          "image": "quay.io/rh-marketplace/marketplace-dataset-operator@sha256:5eef64b0a4db0f0ea415079375149a73cb5296931ce56433d5c30cadc7619bde",
          "name": "manager"
        },
        {
          "digest": "sha256:10252238f921d720b8af7e2ca8e90be6e8516efefc1633697aa048a74041f1c3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:10252238f921d720b8af7e2ca8e90be6e8516efefc1633697aa048a74041f1c3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": "",
      "skip_range": ">=0.0.0 <1.0.6",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.6",
      "version_original": "1.0.6"
    },
    {
      "_id": "60a51e3c038ec110481abd4a",
      "alm_examples": [
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceCSIDriver",
          "metadata": {
            "name": "marketplacecsidriver"
          },
          "spec": {
            "credential": {
              "name": "redhat-marketplace-pull-secret",
              "type": "rhm-pull-secret"
            },
            "endpoint": "s3.us.cloud-object-storage.appdomain.cloud",
            "healthCheckIntervalInMinutes": 0,
            "mountRootPath": "/var/redhat-marketplace/datasets"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceDataset",
          "metadata": {
            "name": "us-labor-stats"
          },
          "spec": {
            "bucket": "rhmccp-ae4ac7b9-38e6-4c5f-8e5b-566b7cfed37d"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceDriverHealthCheck",
          "metadata": {
            "name": "marketplacedriverhealthcheck-sample"
          },
          "spec": {
            "affectedNodes": [
              ""
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-dataset-operator-bundle@sha256:10cccb0304fee326c1221d6f9c6ac80f36b69a6856cd2db20d515536fc322591",
      "bundle_path_digest": "sha256:10cccb0304fee326c1221d6f9c6ac80f36b69a6856cd2db20d515536fc322591",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-19T14:18:36.098000+00:00",
      "csv_description": "The Red Hat Marketplace Dataset Operator provides a CSI driver to mount datasets purchased from Red Hat Marketplace into OpenShift workloads.\n### Installation\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n\n2. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n3. Install the Red Hat Marketplace Dataset Operator in the `openshift-operators` namespace.\n\n4. Create an instance of Marketplace CSIDriver in `openshift-redhat-marketplace` namespace. Use the default values in the form/yaml.\n\n### Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n\n### Getting help\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/marketplace-csi-driver) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n\n### Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/marketplace-csi-driver/blob/main/README.md)\n\n### License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/marketplace-csi-driver/blob/main/LICENSE)\n",
      "csv_display_name": "Red Hat Marketplace Dataset Operator",
      "csv_metadata_description": "The Red Hat Marketplace Dataset Operator provides a CSI driver to mount datasets purchased from Red Hat Marketplace into OpenShift workloads.",
      "csv_name": "dataset-operator.v1.0.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:13:22.208000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "dataset-operator",
      "provided_apis": [
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceCSIDriver",
          "plural": "marketplacecsidrivers",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceDataset",
          "plural": "marketplacedatasets",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceDriverHealthCheck",
          "plural": "marketplacedriverhealthchecks",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:5eef64b0a4db0f0ea415079375149a73cb5296931ce56433d5c30cadc7619bde",
          "image": "quay.io/rh-marketplace/marketplace-dataset-operator@sha256:5eef64b0a4db0f0ea415079375149a73cb5296931ce56433d5c30cadc7619bde",
          "name": "marketplace-dataset-operator-5eef64b0a4db0f0ea415079375149a73cb5296931ce56433d5c30cadc7619bde-annotation"
        },
        {
          "digest": "sha256:5eef64b0a4db0f0ea415079375149a73cb5296931ce56433d5c30cadc7619bde",
          "image": "quay.io/rh-marketplace/marketplace-dataset-operator@sha256:5eef64b0a4db0f0ea415079375149a73cb5296931ce56433d5c30cadc7619bde",
          "name": "manager"
        },
        {
          "digest": "sha256:10252238f921d720b8af7e2ca8e90be6e8516efefc1633697aa048a74041f1c3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:10252238f921d720b8af7e2ca8e90be6e8516efefc1633697aa048a74041f1c3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": "",
      "skip_range": ">=0.0.0 <1.0.6",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.6",
      "version_original": "1.0.6"
    },
    {
      "_id": "60a610a8fbae4677fafa79cf",
      "alm_examples": [
        {
          "api_version": "nvmesh.excelero.com/v1",
          "kind": "NVMesh",
          "metadata": {
            "name": "cluster1"
          },
          "spec": {
            "core": {
              "azureOptimized": true,
              "version": "2.2.1"
            },
            "csi": {
              "controllerReplicas": 1,
              "version": "v1.1.4-7"
            },
            "management": {
              "mongoDB": {
                "replicas": 1
              },
              "replicas": 1,
              "version": "2.2.1-1"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/excelero/nvmesh-operator-bundle@sha256:31d2c78ff1afd16b0e5db2cee34d8cb325c61bcf2f6c0f0fccff7899e97548d9",
      "bundle_path_digest": "sha256:31d2c78ff1afd16b0e5db2cee34d8cb325c61bcf2f6c0f0fccff7899e97548d9",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "beta",
      "creation_date": "2021-05-20T07:32:56.817000+00:00",
      "csv_description": "Excelero NVMesh is a low-latency distributed block storage solution providing web-scale applications access to hot data in any cloud, private or public. NVMesh enables pooling and sharing NVMe across any network. It drives both local and distributed file systems. The solution features an intelligent management layer that abstracts underlying hardware with CPU offload, creates logical volumes with redundancy and provides centralized, intelligent management and monitoring. Applications can enjoy the latency, throughput and IO/s of local NVMe devices with the convenience of centralized storage while avoiding proprietary hardware lock-in and reducing the overall storage TCO. In public cloud environments, NVMesh supports instances, both virtualized and containerized, that feature NVMe drives. Public cloud instances with local NVMe drives have become widely available allowing easy transition between on-premises and public cloud deployments of NVMesh.\n\nExcelero NVMesh has a flexible distributed data protection architecture providing multiple redundancy schemes that can be tuned for specific use cases and data center restrictions and requirements to ensure reliability and to reduce cost. The system can also work around failure to strive for maximal data availability. In NVMesh, drives are perceived as resources that are pooled into a large storage area. Logical volumes are then carved out of the storage area and presented to clients as block devices. Volumes may span multiple physical drives and target hosts, but do not need to use entire drives, so a single drive can be allocated to multiple volumes.\n\nVolumes can be configured in any of the following redundancy levels:\n\n**Concatenated** \u2013 Data is laid out on a single or multiple drives with no data redundancy. This volume type can be used for applications requiring temporary storage. Failures are typically isolated to a single device or host.\n\n**Striped** \u2013 Data is laid out across a set of drives and hosts with no data redundancy. This volume type can be used for applications requiring high performance temporary storage.\n\n**Mirrored** \u2013 Data is protected by mirroring data across drive segments. To increase data availability, the drive segments are allocated from drives on different target hosts. These hosts should be connected to different power supplies, preferably in separate upgrade zones and availability zones and any other zoning used to protect against risk. The software\u2019s management layer provides the agility to ensure such separation. Multi-way, active-active multipath networking is used for availability and for performance.\n\n**Striped** and Mirrored \u2013 Data is protected by mirroring data across drive segments and striping across these mirrors. Data is serviced from many drives and hosts, achieving high performance without sacrificing redundancy.\n\nFor details on licensing, support and usage under Red Hat OpenShift please access [https://www.excelero.com/openshift](https://www.excelero.com/openshift)\n",
      "csv_display_name": "NVMesh Operator",
      "csv_metadata_description": "NVMesh Operator enables users to install Excelero NVMesh on Kubernetes and OpenShift clusters",
      "csv_name": "nvmesh-operator.0.7.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:22:20.492000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nvmesh-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:dcbf50781a1beda4cdb88a6706a1ad190118274c58b30f5c65db52e550a2852d",
          "image": "registry.connect.redhat.com/excelero/nvmesh-operator@sha256:dcbf50781a1beda4cdb88a6706a1ad190118274c58b30f5c65db52e550a2852d",
          "name": "nvmesh-operator-dcbf50781a1beda4cdb88a6706a1ad190118274c58b30f5c65db52e550a2852d-annotation"
        },
        {
          "digest": "sha256:dcbf50781a1beda4cdb88a6706a1ad190118274c58b30f5c65db52e550a2852d",
          "image": "registry.connect.redhat.com/excelero/nvmesh-operator@sha256:dcbf50781a1beda4cdb88a6706a1ad190118274c58b30f5c65db52e550a2852d",
          "name": "controller"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.7.0-48",
      "version_original": "0.7.0-48"
    },
    {
      "_id": "60a633d31cd4abb653ffc92b",
      "alm_examples": [
        {
          "api_version": "nvmesh.excelero.com/v1",
          "kind": "NVMesh",
          "metadata": {
            "name": "cluster1"
          },
          "spec": {
            "core": {
              "azureOptimized": true,
              "version": "2.2.1"
            },
            "csi": {
              "controllerReplicas": 1,
              "version": "v1.1.4-7"
            },
            "management": {
              "mongoDB": {
                "replicas": 1
              },
              "replicas": 1,
              "version": "2.2.1-1"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/excelero/nvmesh-operator-bundle@sha256:31d2c78ff1afd16b0e5db2cee34d8cb325c61bcf2f6c0f0fccff7899e97548d9",
      "bundle_path_digest": "sha256:31d2c78ff1afd16b0e5db2cee34d8cb325c61bcf2f6c0f0fccff7899e97548d9",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "beta",
      "creation_date": "2021-05-20T10:02:59.152000+00:00",
      "csv_description": "Excelero NVMesh is a low-latency distributed block storage solution providing web-scale applications access to hot data in any cloud, private or public. NVMesh enables pooling and sharing NVMe across any network. It drives both local and distributed file systems. The solution features an intelligent management layer that abstracts underlying hardware with CPU offload, creates logical volumes with redundancy and provides centralized, intelligent management and monitoring. Applications can enjoy the latency, throughput and IO/s of local NVMe devices with the convenience of centralized storage while avoiding proprietary hardware lock-in and reducing the overall storage TCO. In public cloud environments, NVMesh supports instances, both virtualized and containerized, that feature NVMe drives. Public cloud instances with local NVMe drives have become widely available allowing easy transition between on-premises and public cloud deployments of NVMesh.\n\nExcelero NVMesh has a flexible distributed data protection architecture providing multiple redundancy schemes that can be tuned for specific use cases and data center restrictions and requirements to ensure reliability and to reduce cost. The system can also work around failure to strive for maximal data availability. In NVMesh, drives are perceived as resources that are pooled into a large storage area. Logical volumes are then carved out of the storage area and presented to clients as block devices. Volumes may span multiple physical drives and target hosts, but do not need to use entire drives, so a single drive can be allocated to multiple volumes.\n\nVolumes can be configured in any of the following redundancy levels:\n\n**Concatenated** \u2013 Data is laid out on a single or multiple drives with no data redundancy. This volume type can be used for applications requiring temporary storage. Failures are typically isolated to a single device or host.\n\n**Striped** \u2013 Data is laid out across a set of drives and hosts with no data redundancy. This volume type can be used for applications requiring high performance temporary storage.\n\n**Mirrored** \u2013 Data is protected by mirroring data across drive segments. To increase data availability, the drive segments are allocated from drives on different target hosts. These hosts should be connected to different power supplies, preferably in separate upgrade zones and availability zones and any other zoning used to protect against risk. The software\u2019s management layer provides the agility to ensure such separation. Multi-way, active-active multipath networking is used for availability and for performance.\n\n**Striped** and Mirrored \u2013 Data is protected by mirroring data across drive segments and striping across these mirrors. Data is serviced from many drives and hosts, achieving high performance without sacrificing redundancy.\n\nFor details on licensing, support and usage under Red Hat OpenShift please access [https://www.excelero.com/openshift](https://www.excelero.com/openshift)\n",
      "csv_display_name": "NVMesh Operator",
      "csv_metadata_description": "NVMesh Operator enables users to install Excelero NVMesh on Kubernetes and OpenShift clusters",
      "csv_name": "nvmesh-operator.0.7.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:29:56.235000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nvmesh-operator",
      "provided_apis": [
        {
          "group": "nvmesh.excelero.com",
          "kind": "NVMesh",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:dcbf50781a1beda4cdb88a6706a1ad190118274c58b30f5c65db52e550a2852d",
          "image": "registry.connect.redhat.com/excelero/nvmesh-operator@sha256:dcbf50781a1beda4cdb88a6706a1ad190118274c58b30f5c65db52e550a2852d",
          "name": "nvmesh-operator-dcbf50781a1beda4cdb88a6706a1ad190118274c58b30f5c65db52e550a2852d-annotation"
        },
        {
          "digest": "sha256:dcbf50781a1beda4cdb88a6706a1ad190118274c58b30f5c65db52e550a2852d",
          "image": "registry.connect.redhat.com/excelero/nvmesh-operator@sha256:dcbf50781a1beda4cdb88a6706a1ad190118274c58b30f5c65db52e550a2852d",
          "name": "controller"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.7.0-48",
      "version_original": "0.7.0-48"
    },
    {
      "_id": "60a81641f13ea7781b9fd6bc",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cloudark/kubeplus-operator-bundle@sha256:a1944c0e06d995361c72f03b8a975a646dd25935a0312c5209a03cb1a1732256",
      "bundle_path_digest": "sha256:a1944c0e06d995361c72f03b8a975a646dd25935a0312c5209a03cb1a1732256",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-21T20:21:21.336000+00:00",
      "csv_description": "SaaS Multi-tenancy Manager",
      "csv_display_name": "KubePlus",
      "csv_metadata_description": "SaaS Operator - Create SaaS from Helm charts",
      "csv_name": "kubeplus.v1.0.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:14:43.873000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "kubeplus",
      "provided_apis": [
        {
          "group": "workflows.kubeplus",
          "kind": "ResourceComposition",
          "plural": "resourcecompositions",
          "version": "v1alpha1"
        },
        {
          "group": "workflows.kubeplus",
          "kind": "ResourceEvent",
          "plural": "resourceevents",
          "version": "v1alpha1"
        },
        {
          "group": "workflows.kubeplus",
          "kind": "ResourceMonitor",
          "plural": "resourcemonitors",
          "version": "v1alpha1"
        },
        {
          "group": "workflows.kubeplus",
          "kind": "ResourcePolicy",
          "plural": "resourcepolicies",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9de09c08e692625e42e9d2cf096b2fc746c6b5a0ea4833f471a3b705db8c2b97",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-platform-operator@sha256:9de09c08e692625e42e9d2cf096b2fc746c6b5a0ea4833f471a3b705db8c2b97",
          "name": "kubeplus-platform-operator-9de09c08e692625e42e9d2cf096b2fc746c6b5a0ea4833f471a3b705db8c2b97-annotation"
        },
        {
          "digest": "sha256:08a76ff2c5644872a68bb333162d86c57c79cd7d4e1201dda894902914896e7b",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-mutating-webhook@sha256:08a76ff2c5644872a68bb333162d86c57c79cd7d4e1201dda894902914896e7b",
          "name": "crd-hook"
        },
        {
          "digest": "sha256:fb180d9b3b0ce6c2141fe5280a405636eeba1ebbad54310ee83cdb412d210150",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-mutating-webhook-helper@sha256:fb180d9b3b0ce6c2141fe5280a405636eeba1ebbad54310ee83cdb412d210150",
          "name": "mutating-webhook-helper"
        },
        {
          "digest": "sha256:9de09c08e692625e42e9d2cf096b2fc746c6b5a0ea4833f471a3b705db8c2b97",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-platform-operator@sha256:9de09c08e692625e42e9d2cf096b2fc746c6b5a0ea4833f471a3b705db8c2b97",
          "name": "platform-operator"
        },
        {
          "digest": "sha256:d7861164cb1555c673d157c182852b00bd783f9d66cabb2eca4970a3f1a68eb8",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-helmer1@sha256:d7861164cb1555c673d157c182852b00bd783f9d66cabb2eca4970a3f1a68eb8",
          "name": "helmer"
        },
        {
          "digest": "sha256:c60295e9c86607e1c06aa63d027b7824c3255852e869b98ad57cb3a68a987f9c",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-webhook-cert-setup@sha256:c60295e9c86607e1c06aa63d027b7824c3255852e869b98ad57cb3a68a987f9c",
          "name": "webhook-cert-setup"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.5",
      "version_original": "1.0.5"
    },
    {
      "_id": "60a818e1af9de74bd5388046",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cloudark/kubeplus-operator-bundle@sha256:a1944c0e06d995361c72f03b8a975a646dd25935a0312c5209a03cb1a1732256",
      "bundle_path_digest": "sha256:a1944c0e06d995361c72f03b8a975a646dd25935a0312c5209a03cb1a1732256",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-21T20:32:33.114000+00:00",
      "csv_description": "SaaS Multi-tenancy Manager",
      "csv_display_name": "KubePlus",
      "csv_metadata_description": "SaaS Operator - Create SaaS from Helm charts",
      "csv_name": "kubeplus.v1.0.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:18:03.639000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeplus",
      "provided_apis": [
        {
          "group": "workflows.kubeplus",
          "kind": "ResourceComposition",
          "plural": "resourcecompositions",
          "version": "v1alpha1"
        },
        {
          "group": "workflows.kubeplus",
          "kind": "ResourceEvent",
          "plural": "resourceevents",
          "version": "v1alpha1"
        },
        {
          "group": "workflows.kubeplus",
          "kind": "ResourceMonitor",
          "plural": "resourcemonitors",
          "version": "v1alpha1"
        },
        {
          "group": "workflows.kubeplus",
          "kind": "ResourcePolicy",
          "plural": "resourcepolicies",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9de09c08e692625e42e9d2cf096b2fc746c6b5a0ea4833f471a3b705db8c2b97",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-platform-operator@sha256:9de09c08e692625e42e9d2cf096b2fc746c6b5a0ea4833f471a3b705db8c2b97",
          "name": "kubeplus-platform-operator-9de09c08e692625e42e9d2cf096b2fc746c6b5a0ea4833f471a3b705db8c2b97-annotation"
        },
        {
          "digest": "sha256:08a76ff2c5644872a68bb333162d86c57c79cd7d4e1201dda894902914896e7b",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-mutating-webhook@sha256:08a76ff2c5644872a68bb333162d86c57c79cd7d4e1201dda894902914896e7b",
          "name": "crd-hook"
        },
        {
          "digest": "sha256:fb180d9b3b0ce6c2141fe5280a405636eeba1ebbad54310ee83cdb412d210150",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-mutating-webhook-helper@sha256:fb180d9b3b0ce6c2141fe5280a405636eeba1ebbad54310ee83cdb412d210150",
          "name": "mutating-webhook-helper"
        },
        {
          "digest": "sha256:9de09c08e692625e42e9d2cf096b2fc746c6b5a0ea4833f471a3b705db8c2b97",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-platform-operator@sha256:9de09c08e692625e42e9d2cf096b2fc746c6b5a0ea4833f471a3b705db8c2b97",
          "name": "platform-operator"
        },
        {
          "digest": "sha256:d7861164cb1555c673d157c182852b00bd783f9d66cabb2eca4970a3f1a68eb8",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-helmer1@sha256:d7861164cb1555c673d157c182852b00bd783f9d66cabb2eca4970a3f1a68eb8",
          "name": "helmer"
        },
        {
          "digest": "sha256:c60295e9c86607e1c06aa63d027b7824c3255852e869b98ad57cb3a68a987f9c",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-webhook-cert-setup@sha256:c60295e9c86607e1c06aa63d027b7824c3255852e869b98ad57cb3a68a987f9c",
          "name": "webhook-cert-setup"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.5",
      "version_original": "1.0.5"
    },
    {
      "_id": "60a81a2df13ea7781b9fd6bd",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cloudark/kubeplus-operator-bundle@sha256:a1944c0e06d995361c72f03b8a975a646dd25935a0312c5209a03cb1a1732256",
      "bundle_path_digest": "sha256:a1944c0e06d995361c72f03b8a975a646dd25935a0312c5209a03cb1a1732256",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-21T20:38:05.422000+00:00",
      "csv_description": "SaaS Multi-tenancy Manager",
      "csv_display_name": "KubePlus",
      "csv_metadata_description": "SaaS Operator - Create SaaS from Helm charts",
      "csv_name": "kubeplus.v1.0.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:55:23.321000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "kubeplus",
      "provided_apis": [
        {
          "group": "workflows.kubeplus",
          "kind": "ResourceComposition",
          "plural": "resourcecompositions",
          "version": "v1alpha1"
        },
        {
          "group": "workflows.kubeplus",
          "kind": "ResourceEvent",
          "plural": "resourceevents",
          "version": "v1alpha1"
        },
        {
          "group": "workflows.kubeplus",
          "kind": "ResourceMonitor",
          "plural": "resourcemonitors",
          "version": "v1alpha1"
        },
        {
          "group": "workflows.kubeplus",
          "kind": "ResourcePolicy",
          "plural": "resourcepolicies",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9de09c08e692625e42e9d2cf096b2fc746c6b5a0ea4833f471a3b705db8c2b97",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-platform-operator@sha256:9de09c08e692625e42e9d2cf096b2fc746c6b5a0ea4833f471a3b705db8c2b97",
          "name": "kubeplus-platform-operator-9de09c08e692625e42e9d2cf096b2fc746c6b5a0ea4833f471a3b705db8c2b97-annotation"
        },
        {
          "digest": "sha256:08a76ff2c5644872a68bb333162d86c57c79cd7d4e1201dda894902914896e7b",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-mutating-webhook@sha256:08a76ff2c5644872a68bb333162d86c57c79cd7d4e1201dda894902914896e7b",
          "name": "crd-hook"
        },
        {
          "digest": "sha256:fb180d9b3b0ce6c2141fe5280a405636eeba1ebbad54310ee83cdb412d210150",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-mutating-webhook-helper@sha256:fb180d9b3b0ce6c2141fe5280a405636eeba1ebbad54310ee83cdb412d210150",
          "name": "mutating-webhook-helper"
        },
        {
          "digest": "sha256:9de09c08e692625e42e9d2cf096b2fc746c6b5a0ea4833f471a3b705db8c2b97",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-platform-operator@sha256:9de09c08e692625e42e9d2cf096b2fc746c6b5a0ea4833f471a3b705db8c2b97",
          "name": "platform-operator"
        },
        {
          "digest": "sha256:d7861164cb1555c673d157c182852b00bd783f9d66cabb2eca4970a3f1a68eb8",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-helmer1@sha256:d7861164cb1555c673d157c182852b00bd783f9d66cabb2eca4970a3f1a68eb8",
          "name": "helmer"
        },
        {
          "digest": "sha256:c60295e9c86607e1c06aa63d027b7824c3255852e869b98ad57cb3a68a987f9c",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-webhook-cert-setup@sha256:c60295e9c86607e1c06aa63d027b7824c3255852e869b98ad57cb3a68a987f9c",
          "name": "webhook-cert-setup"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.5",
      "version_original": "1.0.5"
    },
    {
      "_id": "60ac62d512f690ed33bad328",
      "alm_examples": [
        {
          "api_version": "fpga.intel.com/v1",
          "kind": "N3000Cluster",
          "metadata": {
            "name": "n3000",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "nodes": [
              {
                "fortville": {
                  "MACs": [
                    {
                      "MAC": "aa:bb:cc:dd:ee:fd"
                    },
                    {
                      "MAC": "aa:bb:cc:dd:ee:fe"
                    },
                    {
                      "MAC": "aa:bb:cc:dd:ee:ff"
                    }
                  ],
                  "firmwareURL": "http://server:8000/nvmupdate.tar.gz"
                },
                "fpga": [
                  {
                    "PCIAddr": "0000:09:00.0",
                    "userImageURL": "http://server:8000/userimage.bin"
                  }
                ],
                "nodeName": "worker-0"
              },
              {
                "fortville": {
                  "MACs": [
                    {
                      "MAC": "aa:bb:cc:dd:ff:ff"
                    }
                  ],
                  "firmwareURL": "http://server:8000/nvmupdate.tar.gz"
                },
                "nodeName": "worker-1"
              }
            ]
          }
        },
        {
          "api_version": "fpga.intel.com/v1",
          "kind": "N3000Node",
          "metadata": {
            "name": "worker-0",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "fortville": {
              "MACs": [
                {
                  "MAC": "aa:bb:cc:dd:ee:fd"
                },
                {
                  "MAC": "aa:bb:cc:dd:ee:fe"
                },
                {
                  "MAC": "aa:bb:cc:dd:ee:ff"
                }
              ],
              "firmwareURL": "http://server:8000/nvmupdate.tar.gz"
            },
            "fpga": [
              {
                "PCIAddr": "0000:09:00.0",
                "userImageURL": "http://server:8000/userimage.bin"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/n3000-operator-bundle@sha256:7e1c4fc4e3efba4ccf702ccf0f2ac142771f56788916d16138cb3edf297517a2",
      "bundle_path_digest": "sha256:7e1c4fc4e3efba4ccf702ccf0f2ac142771f56788916d16138cb3edf297517a2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-25T02:37:09.419000+00:00",
      "csv_description": "The Intel\u00ae FPGA Programmable Acceleration Card N3000 (Intel\u00ae FPGA PAC N3000) is a highly customizable FPGA SmartNIC which enables high-throughput, low latency and high-bandwith applications.  It allows the optimization of data plane performance to reduce total cost of ownership while maintaining a high degree of flexibility.  The Intel FPGA PAC N3000 plays a key role in accelerating 5G and network functions virtualization (NFV) adoption for ecosystem partners such as telecommunications equipment manufacturers (TEMs) virtual network functions (VNF) vendors, system integrators and telcos, to bring scalable and high-performance solutions to market. The Intel FPGA PAC N3000 includes a variant that is design to be Network Equipment Building System (NEBS)-friendly, and features a Root-of-Trust device that helps protect systems from FPGA host security exploits. This document explains how the FPGA resource can be used on the Open Network Edge Services Software (OpenNESS) platform for accelerating network functions and edge application workloads. We use the Intel\u00ae FPGA PAC N3000 as a reference FPGA PAC and use LTE/5G Forward Error Correction (FEC) as an example workload that accelerates the 5G or 4G L1 base station network function. The same concept and mechanism is applicable for application acceleration workloads like AI and ML on FPGA for Inference applications. The Intel\u00ae FPGA PAC N3000 is a full-duplex, 100 Gbps in-system, re-programmable acceleration card for multi-workload networking application acceleration. It has an optimal memory mixture designed for network functions, with an integrated network interface card (NIC) in a small form factor that enables high throughput, low latency, and low power per bit for a custom networking pipeline.",
      "csv_display_name": "OpenNESS Operator for Intel\u00ae FPGA PAC N3000",
      "csv_metadata_description": "",
      "csv_name": "n3000.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:01:30.385000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "n3000",
      "provided_apis": [
        {
          "group": "fpga.intel.com",
          "kind": "N3000Cluster",
          "plural": "n3000clusters",
          "version": "v1"
        },
        {
          "group": "fpga.intel.com",
          "kind": "N3000Node",
          "plural": "n3000nodes",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:fe7d9c55534594b837a51e7dcae21d82ddebe83cbb471e4912a5aafb9a9638be",
          "image": "registry.connect.redhat.com/intel/n3000-operator@sha256:fe7d9c55534594b837a51e7dcae21d82ddebe83cbb471e4912a5aafb9a9638be",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "60ac62f4f13ea7781b9fd7e2",
      "alm_examples": [
        {
          "api_version": "sriovfec.intel.com/v1",
          "kind": "SriovFecClusterConfig",
          "metadata": {
            "name": "config",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "nodes": [
              {
                "nodeName": "",
                "physicalFunctions": [
                  {
                    "bbDevConfig": {
                      "n3000": {
                        "downlink": {
                          "bandwidth": 3,
                          "loadBalance": 128,
                          "queues": {
                            "vf0": 16,
                            "vf1": 16,
                            "vf2": 0,
                            "vf3": 0,
                            "vf4": 0,
                            "vf5": 0,
                            "vf6": 0,
                            "vf7": 0
                          }
                        },
                        "flrTimeout": 610,
                        "networkType": "FPGA_5GNR",
                        "pfMode": true,
                        "uplink": {
                          "bandwidth": 3,
                          "loadBalance": 128,
                          "queues": {
                            "vf0": 16,
                            "vf1": 16,
                            "vf2": 0,
                            "vf3": 0,
                            "vf4": 0,
                            "vf5": 0,
                            "vf6": 0,
                            "vf7": 0
                          }
                        }
                      }
                    },
                    "pciAddress": "",
                    "pfDriver": "pci-pf-stub",
                    "vfAmount": 2,
                    "vfDriver": "vfio-pci"
                  }
                ]
              }
            ]
          }
        },
        {
          "api_version": "sriovfec.intel.com/v1",
          "kind": "SriovFecNodeConfig",
          "metadata": {
            "name": "worker-0",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "physicalFunctions": [
              {
                "bbDevConfig": {
                  "n3000": {
                    "downlink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    },
                    "flrTimeout": 610,
                    "networkType": "FPGA_5GNR",
                    "pfMode": true,
                    "uplink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    }
                  }
                },
                "pci_addr": "",
                "pf_driver": "pci-pf-stub",
                "vf_amount": 2,
                "vf_driver": "vfio-pci"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/sriov-fec-operator-bundle@sha256:ca2aaab04a9a3cefdc0b599fb2e81d9a5e7fcd43a504d7769b228ea27fc65e09",
      "bundle_path_digest": "sha256:ca2aaab04a9a3cefdc0b599fb2e81d9a5e7fcd43a504d7769b228ea27fc65e09",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-25T02:37:40.547000+00:00",
      "csv_description": "The Intel\u00ae FPGA Programmable Acceleration Card N3000 (Intel\u00ae FPGA PAC N3000) is a highly customizable FPGA SmartNIC which enables high-throughput, low latency and high-bandwith applications.  It allows the optimization of data plane performance to reduce total cost of ownership while maintaining a high degree of flexibility.  The Intel FPGA PAC N3000 plays a key role in accelerating 5G and network functions virtualization (NFV) adoption for ecosystem partners such as telecommunications equipment manufacturers (TEMs) virtual network functions (VNF) vendors, system integrators and telcos, to bring scalable and high-performance solutions to market. The Intel FPGA PAC N3000 includes a variant that is design to be Network Equipment Building System (NEBS)-friendly, and features a Root-of-Trust device that helps protect systems from FPGA host security exploits. This document explains how the FPGA resource can be used on the Open Network Edge Services Software (OpenNESS) platform for accelerating network functions and edge application workloads. We use the Intel\u00ae FPGA PAC N3000 as a reference FPGA PAC and use LTE/5G Forward Error Correction (FEC) as an example workload that accelerates the 5G or 4G L1 base station network function. The same concept and mechanism is applicable for application acceleration workloads like AI and ML on FPGA for Inference applications. The Intel\u00ae FPGA PAC N3000 is a full-duplex, 100 Gbps in-system, re-programmable acceleration card for multi-workload networking application acceleration. It has an optimal memory mixture designed for network functions, with an integrated network interface card (NIC) in a small form factor that enables high throughput, low latency, and low power per bit for a custom networking pipeline. The ACC100 supports the O-RAN adopted DPDK BBDev API - an API which Intel contributed to the opensource community to enable choice and TTM for FEC acceleration solutions. The FlexRAN software reference architecture supports the ACC100 which enables users to quickly evaluate and build platforms for the wide range of vRAN networks. Reduces platform power, E2E latency and Intel\u00ae CPU core count requirements as well as increases cell capacity than existing programmable accelerator. Accelerates both 4G and 5G data concurrently.\tLowers development cost using commercial off the shelf (COTS) servers. Accommodates space-constrained implementations via a low-profile PCIe card form factor. Enables a variety of flexible FlexRAN deployments from small cell to macro to Massive MIMO networks. Supports extended temperature for the most challenging of RAN deployment scenario\u2019s.",
      "csv_display_name": "OpenNESS SR-IOV Operator for Wireless FEC Accelerators",
      "csv_metadata_description": "",
      "csv_name": "sriov-fec.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:12:05.917000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "sriov-fec",
      "provided_apis": [
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecClusterConfig",
          "plural": "sriovfecclusterconfigs",
          "version": "v1"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecNodeConfig",
          "plural": "sriovfecnodeconfigs",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e214815ce0ae22eb31696118912360e2dbe990a0a42aad476eac74435e49b982",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:e214815ce0ae22eb31696118912360e2dbe990a0a42aad476eac74435e49b982",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "60ac6648af9de74bd53881aa",
      "alm_examples": [
        {
          "api_version": "sriovfec.intel.com/v1",
          "kind": "SriovFecClusterConfig",
          "metadata": {
            "name": "config"
          },
          "spec": {
            "nodes": [
              {
                "cards": [
                  {
                    "pciAddress": "",
                    "pfDeviceID": "0d8f",
                    "pfDriver": "pci-pf-stub",
                    "queuesConfiguration": {
                      "downlink": {
                        "bandwidth": 3,
                        "loadBalance": 128,
                        "queues": {
                          "vf0": 16,
                          "vf1": 16,
                          "vf2": 0,
                          "vf3": 0,
                          "vf4": 0,
                          "vf5": 0,
                          "vf6": 0,
                          "vf7": 0
                        }
                      },
                      "flrTimeout": 610,
                      "networkType": "FPGA_5GNR",
                      "pfMode": true,
                      "uplink": {
                        "bandwidth": 3,
                        "loadBalance": 128,
                        "queues": {
                          "vf0": 16,
                          "vf1": 16,
                          "vf2": 0,
                          "vf3": 0,
                          "vf4": 0,
                          "vf5": 0,
                          "vf6": 0,
                          "vf7": 0
                        }
                      }
                    },
                    "vendorID": "8086",
                    "vfAmount": 2,
                    "vfDeviceID": "0d90",
                    "vfDriver": "vfio-pci"
                  }
                ],
                "nodeName": "",
                "oneCardConfigForAll": true
              }
            ],
            "oneNodeConfigForAll": true
          }
        },
        {
          "api_version": "sriovfec.intel.com/v1",
          "kind": "SriovFecNodeConfig",
          "metadata": {
            "name": "sriovfecnodeconfig-sample"
          },
          "spec": {
            "cards": [
              {
                "pci_addr": "",
                "pf_device_id": "0d8f",
                "pf_driver": "pci-pf-stub",
                "queues": {
                  "downlink": {
                    "bandwidth": 3,
                    "load_balance": 128,
                    "queues": {
                      "vf0": 16,
                      "vf1": 16,
                      "vf2": 0,
                      "vf3": 0,
                      "vf4": 0,
                      "vf5": 0,
                      "vf6": 0,
                      "vf7": 0
                    }
                  },
                  "flr_time_out": 610,
                  "networkType": "FPGA_5GNR",
                  "pf_mode_en": 0,
                  "uplink": {
                    "bandwidth": 3,
                    "load_balance": 128,
                    "queues": {
                      "vf0": 16,
                      "vf1": 16,
                      "vf2": 0,
                      "vf3": 0,
                      "vf4": 0,
                      "vf5": 0,
                      "vf6": 0,
                      "vf7": 0
                    }
                  }
                },
                "vendor_id": "8086",
                "vf_amount": 2,
                "vf_device_id": "0d90",
                "vf_driver": "vfio-pci"
              }
            ],
            "oneCardConfigForAll": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/sriov-fec-operator-bundle@sha256:cd5f6d4e68c071bf1514aac372fc5efccc87e32490b829b8fe5646d7bc901b37",
      "bundle_path_digest": "sha256:cd5f6d4e68c071bf1514aac372fc5efccc87e32490b829b8fe5646d7bc901b37",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-25T02:51:52.599000+00:00",
      "csv_description": "The Intel\u00ae FPGA Programmable Acceleration Card N3000 (Intel\u00ae FPGA PAC N3000) is a highly customizable FPGA SmartNIC which enables high-throughput, low latency and high-bandwith applications.  It allows the optimization of data plane performance to reduce total cost of ownership while maintaining a high degree of flexibility.  The Intel FPGA PAC N3000 plays a key role in accelerating 5G and network functions virtualization (NFV) adoption for ecosystem partners such as telecommunications equipment manufacturers (TEMs) virtual network functions (VNF) vendors, system integrators and telcos, to bring scalable and high-performance solutions to market. The Intel FPGA PAC N3000 includes a variant that is design to be Network Equipment Building System (NEBS)-friendly, and features a Root-of-Trust device that helps protect systems from FPGA host security exploits. This document explains how the FPGA resource can be used on the Open Network Edge Services Software (OpenNESS) platform for accelerating network functions and edge application workloads. We use the Intel\u00ae FPGA PAC N3000 as a reference FPGA PAC and use LTE/5G Forward Error Correction (FEC) as an example workload that accelerates the 5G or 4G L1 base station network function. The same concept and mechanism is applicable for application acceleration workloads like AI and ML on FPGA for Inference applications. The Intel\u00ae FPGA PAC N3000 is a full-duplex, 100 Gbps in-system, re-programmable acceleration card for multi-workload networking application acceleration. It has an optimal memory mixture designed for network functions, with an integrated network interface card (NIC) in a small form factor that enables high throughput, low latency, and low power per bit for a custom networking pipeline.",
      "csv_display_name": "OpenNESS SRIOV-FEC Operator for Intel\u00ae FPGA PAC N3000",
      "csv_metadata_description": "",
      "csv_name": "sriov-fec.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:16:30.399000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "sriov-fec",
      "provided_apis": [
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecClusterConfig",
          "plural": "sriovfecclusterconfigs",
          "version": "v1"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecNodeConfig",
          "plural": "sriovfecnodeconfigs",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e09594ee120b48064fd62d37ae25b9aebae12763224d9fff26400e5683cfac62",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:e09594ee120b48064fd62d37ae25b9aebae12763224d9fff26400e5683cfac62",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:90e988af21c086067d3af9339b391b3d733c9dd05d95b6a4170b16d9616074ac",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:90e988af21c086067d3af9339b391b3d733c9dd05d95b6a4170b16d9616074ac",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "60ac6751af9de74bd53881ab",
      "alm_examples": [
        {
          "api_version": "fpga.intel.com/v1",
          "kind": "N3000Cluster",
          "metadata": {
            "name": "n3000cluster-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "fpga.intel.com/v1",
          "kind": "N3000Node",
          "metadata": {
            "name": "n3000node-sample"
          },
          "spec": {
            "foo": "bar"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/n3000-operator-bundle@sha256:e14bfe9610032c42321223420e334d38926769e5f60b9132c866b7c015938890",
      "bundle_path_digest": "sha256:e14bfe9610032c42321223420e334d38926769e5f60b9132c866b7c015938890",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-25T02:56:17.332000+00:00",
      "csv_description": "The Intel\u00ae FPGA Programmable Acceleration Card N3000 (Intel\u00ae FPGA PAC N3000) is a highly customizable FPGA SmartNIC which enables high-throughput, low latency and high-bandwith applications.  It allows the optimization of data plane performance to reduce total cost of ownership while maintaining a high degree of flexibility.  The Intel FPGA PAC N3000 plays a key role in accelerating 5G and network functions virtualization (NFV) adoption for ecosystem partners such as telecommunications equipment manufacturers (TEMs) virtual network functions (VNF) vendors, system integrators and telcos, to bring scalable and high-performance solutions to market. The Intel FPGA PAC N3000 includes a variant that is design to be Network Equipment Building System (NEBS)-friendly, and features a Root-of-Trust device that helps protect systems from FPGA host security exploits. This document explains how the FPGA resource can be used on the Open Network Edge Services Software (OpenNESS) platform for accelerating network functions and edge application workloads. We use the Intel\u00ae FPGA PAC N3000 as a reference FPGA PAC and use LTE/5G Forward Error Correction (FEC) as an example workload that accelerates the 5G or 4G L1 base station network function. The same concept and mechanism is applicable for application acceleration workloads like AI and ML on FPGA for Inference applications. The Intel\u00ae FPGA PAC N3000 is a full-duplex, 100 Gbps in-system, re-programmable acceleration card for multi-workload networking application acceleration. It has an optimal memory mixture designed for network functions, with an integrated network interface card (NIC) in a small form factor that enables high throughput, low latency, and low power per bit for a custom networking pipeline.",
      "csv_display_name": "OpenNESS Operator for Intel\u00ae FPGA PAC N3000",
      "csv_metadata_description": "",
      "csv_name": "n3000.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:27:03.986000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "n3000",
      "provided_apis": [
        {
          "group": "fpga.intel.com",
          "kind": "N3000Cluster",
          "plural": "n3000clusters",
          "version": "v1"
        },
        {
          "group": "fpga.intel.com",
          "kind": "N3000Node",
          "plural": "n3000nodes",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e09594ee120b48064fd62d37ae25b9aebae12763224d9fff26400e5683cfac62",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:e09594ee120b48064fd62d37ae25b9aebae12763224d9fff26400e5683cfac62",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:53ba32a3336debef16181ce5be6041de640a79645d75aa6421c4a254dc3664e3",
          "image": "registry.connect.redhat.com/intel/n3000-operator@sha256:53ba32a3336debef16181ce5be6041de640a79645d75aa6421c4a254dc3664e3",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "60ac69f602b386eb7ce9638b",
      "alm_examples": [
        {
          "api_version": "fpga.intel.com/v1",
          "kind": "N3000Cluster",
          "metadata": {
            "name": "n3000",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "nodes": [
              {
                "fortville": {
                  "MACs": [
                    {
                      "MAC": "aa:bb:cc:dd:ee:fd"
                    },
                    {
                      "MAC": "aa:bb:cc:dd:ee:fe"
                    },
                    {
                      "MAC": "aa:bb:cc:dd:ee:ff"
                    }
                  ],
                  "firmwareURL": "http://server:8000/nvmupdate.tar.gz"
                },
                "fpga": [
                  {
                    "PCIAddr": "0000:09:00.0",
                    "userImageURL": "http://server:8000/userimage.bin"
                  }
                ],
                "nodeName": "worker-0"
              },
              {
                "fortville": {
                  "MACs": [
                    {
                      "MAC": "aa:bb:cc:dd:ff:ff"
                    }
                  ],
                  "firmwareURL": "http://server:8000/nvmupdate.tar.gz"
                },
                "nodeName": "worker-1"
              }
            ]
          }
        },
        {
          "api_version": "fpga.intel.com/v1",
          "kind": "N3000Node",
          "metadata": {
            "name": "worker-0",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "fortville": {
              "MACs": [
                {
                  "MAC": "aa:bb:cc:dd:ee:fd"
                },
                {
                  "MAC": "aa:bb:cc:dd:ee:fe"
                },
                {
                  "MAC": "aa:bb:cc:dd:ee:ff"
                }
              ],
              "firmwareURL": "http://server:8000/nvmupdate.tar.gz"
            },
            "fpga": [
              {
                "PCIAddr": "0000:09:00.0",
                "userImageURL": "http://server:8000/userimage.bin"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/n3000-operator-bundle@sha256:7e1c4fc4e3efba4ccf702ccf0f2ac142771f56788916d16138cb3edf297517a2",
      "bundle_path_digest": "sha256:7e1c4fc4e3efba4ccf702ccf0f2ac142771f56788916d16138cb3edf297517a2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-25T03:07:34.162000+00:00",
      "csv_description": "The Intel\u00ae FPGA Programmable Acceleration Card N3000 (Intel\u00ae FPGA PAC N3000) is a highly customizable FPGA SmartNIC which enables high-throughput, low latency and high-bandwith applications.  It allows the optimization of data plane performance to reduce total cost of ownership while maintaining a high degree of flexibility.  The Intel FPGA PAC N3000 plays a key role in accelerating 5G and network functions virtualization (NFV) adoption for ecosystem partners such as telecommunications equipment manufacturers (TEMs) virtual network functions (VNF) vendors, system integrators and telcos, to bring scalable and high-performance solutions to market. The Intel FPGA PAC N3000 includes a variant that is design to be Network Equipment Building System (NEBS)-friendly, and features a Root-of-Trust device that helps protect systems from FPGA host security exploits. This document explains how the FPGA resource can be used on the Open Network Edge Services Software (OpenNESS) platform for accelerating network functions and edge application workloads. We use the Intel\u00ae FPGA PAC N3000 as a reference FPGA PAC and use LTE/5G Forward Error Correction (FEC) as an example workload that accelerates the 5G or 4G L1 base station network function. The same concept and mechanism is applicable for application acceleration workloads like AI and ML on FPGA for Inference applications. The Intel\u00ae FPGA PAC N3000 is a full-duplex, 100 Gbps in-system, re-programmable acceleration card for multi-workload networking application acceleration. It has an optimal memory mixture designed for network functions, with an integrated network interface card (NIC) in a small form factor that enables high throughput, low latency, and low power per bit for a custom networking pipeline.",
      "csv_display_name": "OpenNESS Operator for Intel\u00ae FPGA PAC N3000",
      "csv_metadata_description": "",
      "csv_name": "n3000.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:50:11.084000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "n3000",
      "provided_apis": [
        {
          "group": "fpga.intel.com",
          "kind": "N3000Node",
          "plural": "n3000nodes",
          "version": "v1"
        },
        {
          "group": "fpga.intel.com",
          "kind": "N3000Cluster",
          "plural": "n3000clusters",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:fe7d9c55534594b837a51e7dcae21d82ddebe83cbb471e4912a5aafb9a9638be",
          "image": "registry.connect.redhat.com/intel/n3000-operator@sha256:fe7d9c55534594b837a51e7dcae21d82ddebe83cbb471e4912a5aafb9a9638be",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "60ac6d39af9de74bd53881ac",
      "alm_examples": [
        {
          "api_version": "fpga.intel.com/v1",
          "kind": "N3000Cluster",
          "metadata": {
            "name": "n3000",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "nodes": [
              {
                "fortville": {
                  "MACs": [
                    {
                      "MAC": "aa:bb:cc:dd:ee:fd"
                    },
                    {
                      "MAC": "aa:bb:cc:dd:ee:fe"
                    },
                    {
                      "MAC": "aa:bb:cc:dd:ee:ff"
                    }
                  ],
                  "firmwareURL": "http://server:8000/nvmupdate.tar.gz"
                },
                "fpga": [
                  {
                    "PCIAddr": "0000:09:00.0",
                    "userImageURL": "http://server:8000/userimage.bin"
                  }
                ],
                "nodeName": "worker-0"
              },
              {
                "fortville": {
                  "MACs": [
                    {
                      "MAC": "aa:bb:cc:dd:ff:ff"
                    }
                  ],
                  "firmwareURL": "http://server:8000/nvmupdate.tar.gz"
                },
                "nodeName": "worker-1"
              }
            ]
          }
        },
        {
          "api_version": "fpga.intel.com/v1",
          "kind": "N3000Node",
          "metadata": {
            "name": "worker-0",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "fortville": {
              "MACs": [
                {
                  "MAC": "aa:bb:cc:dd:ee:fd"
                },
                {
                  "MAC": "aa:bb:cc:dd:ee:fe"
                },
                {
                  "MAC": "aa:bb:cc:dd:ee:ff"
                }
              ],
              "firmwareURL": "http://server:8000/nvmupdate.tar.gz"
            },
            "fpga": [
              {
                "PCIAddr": "0000:09:00.0",
                "userImageURL": "http://server:8000/userimage.bin"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/n3000-operator-bundle@sha256:7e1c4fc4e3efba4ccf702ccf0f2ac142771f56788916d16138cb3edf297517a2",
      "bundle_path_digest": "sha256:7e1c4fc4e3efba4ccf702ccf0f2ac142771f56788916d16138cb3edf297517a2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-25T03:21:29.223000+00:00",
      "csv_description": "The Intel\u00ae FPGA Programmable Acceleration Card N3000 (Intel\u00ae FPGA PAC N3000) is a highly customizable FPGA SmartNIC which enables high-throughput, low latency and high-bandwith applications.  It allows the optimization of data plane performance to reduce total cost of ownership while maintaining a high degree of flexibility.  The Intel FPGA PAC N3000 plays a key role in accelerating 5G and network functions virtualization (NFV) adoption for ecosystem partners such as telecommunications equipment manufacturers (TEMs) virtual network functions (VNF) vendors, system integrators and telcos, to bring scalable and high-performance solutions to market. The Intel FPGA PAC N3000 includes a variant that is design to be Network Equipment Building System (NEBS)-friendly, and features a Root-of-Trust device that helps protect systems from FPGA host security exploits. This document explains how the FPGA resource can be used on the Open Network Edge Services Software (OpenNESS) platform for accelerating network functions and edge application workloads. We use the Intel\u00ae FPGA PAC N3000 as a reference FPGA PAC and use LTE/5G Forward Error Correction (FEC) as an example workload that accelerates the 5G or 4G L1 base station network function. The same concept and mechanism is applicable for application acceleration workloads like AI and ML on FPGA for Inference applications. The Intel\u00ae FPGA PAC N3000 is a full-duplex, 100 Gbps in-system, re-programmable acceleration card for multi-workload networking application acceleration. It has an optimal memory mixture designed for network functions, with an integrated network interface card (NIC) in a small form factor that enables high throughput, low latency, and low power per bit for a custom networking pipeline.",
      "csv_display_name": "OpenNESS Operator for Intel\u00ae FPGA PAC N3000",
      "csv_metadata_description": "",
      "csv_name": "n3000.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:09:44.825000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "n3000",
      "provided_apis": [
        {
          "group": "fpga.intel.com",
          "kind": "N3000Node",
          "plural": "n3000nodes",
          "version": "v1"
        },
        {
          "group": "fpga.intel.com",
          "kind": "N3000Cluster",
          "plural": "n3000clusters",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:fe7d9c55534594b837a51e7dcae21d82ddebe83cbb471e4912a5aafb9a9638be",
          "image": "registry.connect.redhat.com/intel/n3000-operator@sha256:fe7d9c55534594b837a51e7dcae21d82ddebe83cbb471e4912a5aafb9a9638be",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "60ae653642119b927780b1ff",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1alpha1",
          "kind": "OpenshiftArtifactoryHa",
          "metadata": {
            "name": "openshiftartifactoryha"
          },
          "spec": {
            "artifactory-ha": {
              "artifactory": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/artifactory-pro",
                  "tag": "7.18.6-1"
                },
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE",
                "node": {
                  "replicaCount": 2,
                  "waitForPrimaryStartup": {
                    "enabled": false
                  }
                },
                "uid": "1000721030"
              },
              "database": {
                "driver": "OVERRIDE",
                "password": "OVERRIDE",
                "type": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "databaseUpgradeReady": true,
              "initContainerImage": "registry.connect.redhat.com/jfrog/init@sha256:68cdfdf42c619e4b35f62451299f4c0cea140e186907ced336af6a027ac2fa33",
              "nginx": {
                "gid": "1000720107",
                "http": {
                  "externalPort": 80,
                  "internalPort": 8080
                },
                "https": {
                  "externalPort": 443,
                  "internalPort": 8443
                },
                "image": {
                  "registry": "registry.redhat.io",
                  "repository": "rhel8/nginx-116",
                  "tag": "latest"
                },
                "service": {
                  "ssloffload": false
                },
                "tlsSecretName": "OVERRIDE",
                "uid": "1000720104"
              },
              "postgresql": {
                "enabled": false
              },
              "waitForDatabase": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/artifactory-operator-bundle@sha256:1b4675a3d6fe07e2d2b5bf88bdf130a2d3df8f5db5f0112883df9c06a2b9facf",
      "bundle_path_digest": "sha256:1b4675a3d6fe07e2d2b5bf88bdf130a2d3df8f5db5f0112883df9c06a2b9facf",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-26T15:11:50.337000+00:00",
      "csv_description": " ## Breaking change\nPlease update to version 1.1.10 of the operator.\nVersion 1.1.8 and 1.1.9 have issues. Please skip these versions.\n\n## Overview\nOpenshift Operator to deploy JFrog Artifactory Enterprise into your Openshift cluster.\n## Security Context Constraints\nTo deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc.\n```\noc adm policy add-scc-to-user anyuid -z artifactory-ha-operator -n openshift-operators\n```\nAdd the service account for the Artifactory chart to deploy successfully:\n``` oc adm policy add-scc-to-user anyuid -z openshiftartifactoryha-artifactory-ha -n artifactory ```\n### Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Artifactory Enterprise Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Artifactory Enterprise Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Artifactory HA.\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\nDATABASE_TYPE\nDATABASE_DRIVER\nDATABASE_URL\nDATABASE_USER\nDATABASE_PASSWORD\n```\nMaster key and Join key must be supplied. To generate a new key for each run the command below:\n\n```\n# Create a key\nexport JOIN_KEY=$(openssl rand -hex 32)\necho ${JOIN_KEY}\n```\n\nTo use TLS you will need to first create a k8s tls secret to store your .crt and .key file into.\nThen supply the value of this k8s secret into the TLS_SECRET field.\n``` oc create secret tls my_tls_secret --cert=tls.crt --key=tls.key --namespace=my_namespace ```\nClick Create for Artifactory Enterprise to deploy into OpenShift and connect to it on the external IP exposed by the load balancer.\n### Create a route\nTo expose Artifactory from Openshift we recommend you create a new route in Openshift.\nYou can either use the oc command line tool or the Openshift web console to generate a new route.\nDepending upon where you terminate TLS you will need to either specify pass through or edge.\nCommand Line (Edge):\n``` oc create route edge --service=openshiftartifactory-ha --cert=tls.crt --key=tls.key --ca-cert=ca.crt --hostname=www.example.com ```\nOr for more information visit the official Openshift documentation on routes here:\nhttps://docs.openshift.com/container-platform/4.6/networking/routes/route-configuration.html\n\n",
      "csv_display_name": "JFrog Artifactory Enterprise Operator",
      "csv_metadata_description": "JFrog Artifactory Enterprise deploys Artifactory in a high availability environment across multiple pods",
      "csv_name": "artifactory-ha-operator.v1.1.12",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:28:14.670000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "plural": "openshiftartifactoryhas",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:7c5fe0487783bf155759ed58a3b21fada66bbeb47d62a4bc367f6ff4fd97e9c9",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:7c5fe0487783bf155759ed58a3b21fada66bbeb47d62a4bc367f6ff4fd97e9c9",
          "name": "artifactory-operator-7c5fe0487783bf155759ed58a3b21fada66bbeb47d62a4bc367f6ff4fd97e9c9-annotation"
        },
        {
          "digest": "sha256:7c5fe0487783bf155759ed58a3b21fada66bbeb47d62a4bc367f6ff4fd97e9c9",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:7c5fe0487783bf155759ed58a3b21fada66bbeb47d62a4bc367f6ff4fd97e9c9",
          "name": "artifactory-ha-operator"
        },
        {
          "digest": "sha256:493e74e0d4701e97ad01e105dbf664174fbe868edd20d4fbeb6ecf699e29c008",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:493e74e0d4701e97ad01e105dbf664174fbe868edd20d4fbeb6ecf699e29c008",
          "name": "artifactory_image_repository"
        },
        {
          "digest": "sha256:cddf1f73ce3db90d27a65cf0fed5c2987d30e37ff5d0c8bda50cbeca0dd78ece",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:cddf1f73ce3db90d27a65cf0fed5c2987d30e37ff5d0c8bda50cbeca0dd78ece",
          "name": "nginx_image_repository"
        },
        {
          "digest": "sha256:68cdfdf42c619e4b35f62451299f4c0cea140e186907ced336af6a027ac2fa33",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:68cdfdf42c619e4b35f62451299f4c0cea140e186907ced336af6a027ac2fa33",
          "name": "init-68cdfdf42c619e4b35f62451299f4c0cea140e186907ced336af6a027ac2fa33-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.1.12",
      "version_original": "1.1.12"
    },
    {
      "_id": "60b84dbfc5adfe7f67b4a4a0",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:24dcf20c56686336983ff099e526f20a8350154e6da2d117ceafb136d8a34d51",
      "bundle_path_digest": "sha256:24dcf20c56686336983ff099e526f20a8350154e6da2d117ceafb136d8a34d51",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-03T03:34:23.686000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:02:52.375000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:309358ba7634183b7c18506c46634202a88b3c790937ef1fbdf8ab0a7218c935",
          "image": "quay.io/tigera/operator@sha256:309358ba7634183b7c18506c46634202a88b3c790937ef1fbdf8ab0a7218c935",
          "name": "operator-309358ba7634183b7c18506c46634202a88b3c790937ef1fbdf8ab0a7218c935-annotation"
        },
        {
          "digest": "sha256:309358ba7634183b7c18506c46634202a88b3c790937ef1fbdf8ab0a7218c935",
          "image": "quay.io/tigera/operator@sha256:309358ba7634183b7c18506c46634202a88b3c790937ef1fbdf8ab0a7218c935",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.13.0",
      "version_original": "1.13.0"
    },
    {
      "_id": "60b8503bc5adfe7f67b4a4a1",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:24dcf20c56686336983ff099e526f20a8350154e6da2d117ceafb136d8a34d51",
      "bundle_path_digest": "sha256:24dcf20c56686336983ff099e526f20a8350154e6da2d117ceafb136d8a34d51",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-03T03:44:59.978000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:12:51.917000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:309358ba7634183b7c18506c46634202a88b3c790937ef1fbdf8ab0a7218c935",
          "image": "quay.io/tigera/operator@sha256:309358ba7634183b7c18506c46634202a88b3c790937ef1fbdf8ab0a7218c935",
          "name": "operator-309358ba7634183b7c18506c46634202a88b3c790937ef1fbdf8ab0a7218c935-annotation"
        },
        {
          "digest": "sha256:309358ba7634183b7c18506c46634202a88b3c790937ef1fbdf8ab0a7218c935",
          "image": "quay.io/tigera/operator@sha256:309358ba7634183b7c18506c46634202a88b3c790937ef1fbdf8ab0a7218c935",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.13.0",
      "version_original": "1.13.0"
    },
    {
      "_id": "60b8725cb0c8ee6f24216727",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:48cea9ecdf166e21be9d179c629c531d27f75552d126a7a421ae1b844652dcc6",
      "bundle_path_digest": "sha256:48cea9ecdf166e21be9d179c629c531d27f75552d126a7a421ae1b844652dcc6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-03T06:10:36.031000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T00:58:03.908000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:098d1a2d1adc475743daab6b9a936c4c1be37b93d66fa2afbcc2957c224bdf57",
          "image": "quay.io/tigera/operator@sha256:098d1a2d1adc475743daab6b9a936c4c1be37b93d66fa2afbcc2957c224bdf57",
          "name": "operator-098d1a2d1adc475743daab6b9a936c4c1be37b93d66fa2afbcc2957c224bdf57-annotation"
        },
        {
          "digest": "sha256:098d1a2d1adc475743daab6b9a936c4c1be37b93d66fa2afbcc2957c224bdf57",
          "image": "quay.io/tigera/operator@sha256:098d1a2d1adc475743daab6b9a936c4c1be37b93d66fa2afbcc2957c224bdf57",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.13.1",
      "version_original": "1.13.1"
    },
    {
      "_id": "60b878387a7f3b747481cf38",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:48cea9ecdf166e21be9d179c629c531d27f75552d126a7a421ae1b844652dcc6",
      "bundle_path_digest": "sha256:48cea9ecdf166e21be9d179c629c531d27f75552d126a7a421ae1b844652dcc6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-03T06:35:36.372000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:11:47.962000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:098d1a2d1adc475743daab6b9a936c4c1be37b93d66fa2afbcc2957c224bdf57",
          "image": "quay.io/tigera/operator@sha256:098d1a2d1adc475743daab6b9a936c4c1be37b93d66fa2afbcc2957c224bdf57",
          "name": "operator-098d1a2d1adc475743daab6b9a936c4c1be37b93d66fa2afbcc2957c224bdf57-annotation"
        },
        {
          "digest": "sha256:098d1a2d1adc475743daab6b9a936c4c1be37b93d66fa2afbcc2957c224bdf57",
          "image": "quay.io/tigera/operator@sha256:098d1a2d1adc475743daab6b9a936c4c1be37b93d66fa2afbcc2957c224bdf57",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.13.1",
      "version_original": "1.13.1"
    },
    {
      "_id": "60b94b907a7f3b747481d01f",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:d914bb849f90c76ec606714913c2ac4061c455de9490a5b3cf1b3217dce267d2",
      "bundle_path_digest": "sha256:d914bb849f90c76ec606714913c2ac4061c455de9490a5b3cf1b3217dce267d2",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.17",
      "creation_date": "2021-06-03T21:37:20.243000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.17.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:49:28.210000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:69d7112484546128ddce0af2eb27001522a2a028ae25bc4a5394b5f8693cb8c1",
          "image": "quay.io/tigera/operator@sha256:69d7112484546128ddce0af2eb27001522a2a028ae25bc4a5394b5f8693cb8c1",
          "name": "operator-69d7112484546128ddce0af2eb27001522a2a028ae25bc4a5394b5f8693cb8c1-annotation"
        },
        {
          "digest": "sha256:69d7112484546128ddce0af2eb27001522a2a028ae25bc4a5394b5f8693cb8c1",
          "image": "quay.io/tigera/operator@sha256:69d7112484546128ddce0af2eb27001522a2a028ae25bc4a5394b5f8693cb8c1",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.17.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.17.0",
      "version_original": "1.17.0"
    },
    {
      "_id": "60b94c2dabb52c7e88ebc96c",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:d914bb849f90c76ec606714913c2ac4061c455de9490a5b3cf1b3217dce267d2",
      "bundle_path_digest": "sha256:d914bb849f90c76ec606714913c2ac4061c455de9490a5b3cf1b3217dce267d2",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.17",
      "creation_date": "2021-06-03T21:39:57.045000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.17.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:02:21.735000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:69d7112484546128ddce0af2eb27001522a2a028ae25bc4a5394b5f8693cb8c1",
          "image": "quay.io/tigera/operator@sha256:69d7112484546128ddce0af2eb27001522a2a028ae25bc4a5394b5f8693cb8c1",
          "name": "operator-69d7112484546128ddce0af2eb27001522a2a028ae25bc4a5394b5f8693cb8c1-annotation"
        },
        {
          "digest": "sha256:69d7112484546128ddce0af2eb27001522a2a028ae25bc4a5394b5f8693cb8c1",
          "image": "quay.io/tigera/operator@sha256:69d7112484546128ddce0af2eb27001522a2a028ae25bc4a5394b5f8693cb8c1",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.17.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.17.0",
      "version_original": "1.17.0"
    },
    {
      "_id": "60b96f1f5dd200b899cd11cd",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:c44df54a5ba20edf0038bc79a340c1ff88782486bd32673b780ade715f798d08",
      "bundle_path_digest": "sha256:c44df54a5ba20edf0038bc79a340c1ff88782486bd32673b780ade715f798d08",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.15",
      "creation_date": "2021-06-04T00:09:03.534000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.15.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:04:29.421000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:a73759d6bae779615737fc4cae3ff59b0873d991d606c1d97086cf5a06df528f",
          "image": "quay.io/tigera/operator@sha256:a73759d6bae779615737fc4cae3ff59b0873d991d606c1d97086cf5a06df528f",
          "name": "operator-a73759d6bae779615737fc4cae3ff59b0873d991d606c1d97086cf5a06df528f-annotation"
        },
        {
          "digest": "sha256:a73759d6bae779615737fc4cae3ff59b0873d991d606c1d97086cf5a06df528f",
          "image": "quay.io/tigera/operator@sha256:a73759d6bae779615737fc4cae3ff59b0873d991d606c1d97086cf5a06df528f",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.15.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.15.0",
      "version_original": "1.15.0"
    },
    {
      "_id": "60b96f3865a0ceac79bc680a",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:c44df54a5ba20edf0038bc79a340c1ff88782486bd32673b780ade715f798d08",
      "bundle_path_digest": "sha256:c44df54a5ba20edf0038bc79a340c1ff88782486bd32673b780ade715f798d08",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.15",
      "creation_date": "2021-06-04T00:09:28.839000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.15.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:08:01.133000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:a73759d6bae779615737fc4cae3ff59b0873d991d606c1d97086cf5a06df528f",
          "image": "quay.io/tigera/operator@sha256:a73759d6bae779615737fc4cae3ff59b0873d991d606c1d97086cf5a06df528f",
          "name": "operator-a73759d6bae779615737fc4cae3ff59b0873d991d606c1d97086cf5a06df528f-annotation"
        },
        {
          "digest": "sha256:a73759d6bae779615737fc4cae3ff59b0873d991d606c1d97086cf5a06df528f",
          "image": "quay.io/tigera/operator@sha256:a73759d6bae779615737fc4cae3ff59b0873d991d606c1d97086cf5a06df528f",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.15.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.15.0",
      "version_original": "1.15.0"
    },
    {
      "_id": "60b9c22965a0ceac79bc680c",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:19dc9af6dd68c20717b88519f8fc59c88926d45ff4e607f10b304165b65198bb",
      "bundle_path_digest": "sha256:19dc9af6dd68c20717b88519f8fc59c88926d45ff4e607f10b304165b65198bb",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.17",
      "creation_date": "2021-06-04T06:03:21.453000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.17.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:27:35.851000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:7062a0a028b1f372ac335d375b75cd7c9e1821552816b0c18663d97437e05540",
          "image": "quay.io/tigera/operator@sha256:7062a0a028b1f372ac335d375b75cd7c9e1821552816b0c18663d97437e05540",
          "name": "operator-7062a0a028b1f372ac335d375b75cd7c9e1821552816b0c18663d97437e05540-annotation"
        },
        {
          "digest": "sha256:7062a0a028b1f372ac335d375b75cd7c9e1821552816b0c18663d97437e05540",
          "image": "quay.io/tigera/operator@sha256:7062a0a028b1f372ac335d375b75cd7c9e1821552816b0c18663d97437e05540",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.17.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.17.1",
      "version_original": "1.17.1"
    },
    {
      "_id": "60b9c2a05dd200b899cd11d2",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:19dc9af6dd68c20717b88519f8fc59c88926d45ff4e607f10b304165b65198bb",
      "bundle_path_digest": "sha256:19dc9af6dd68c20717b88519f8fc59c88926d45ff4e607f10b304165b65198bb",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.17",
      "creation_date": "2021-06-04T06:05:20.023000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.17.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:06:37.541000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:7062a0a028b1f372ac335d375b75cd7c9e1821552816b0c18663d97437e05540",
          "image": "quay.io/tigera/operator@sha256:7062a0a028b1f372ac335d375b75cd7c9e1821552816b0c18663d97437e05540",
          "name": "operator-7062a0a028b1f372ac335d375b75cd7c9e1821552816b0c18663d97437e05540-annotation"
        },
        {
          "digest": "sha256:7062a0a028b1f372ac335d375b75cd7c9e1821552816b0c18663d97437e05540",
          "image": "quay.io/tigera/operator@sha256:7062a0a028b1f372ac335d375b75cd7c9e1821552816b0c18663d97437e05540",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.17.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.17.1",
      "version_original": "1.17.1"
    },
    {
      "_id": "60b9d8c059a5ddc607d3bc26",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "triliovault-license"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:b2ab29bf1c572eb29febfd64c5c1edebd73947cbb6ef3aab3428fc8121034df1",
      "bundle_path_digest": "sha256:b2ab29bf1c572eb29febfd64c5c1edebd73947cbb6ef3aab3428fc8121034df1",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "cluster",
      "creation_date": "2021-06-04T07:39:44.080000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-cluster.v2.0.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:09:15.193000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2.0.6",
      "version_original": "2.0.6"
    },
    {
      "_id": "60be6fcf897fdf8576e94908",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "triliovault-license"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:b2ab29bf1c572eb29febfd64c5c1edebd73947cbb6ef3aab3428fc8121034df1",
      "bundle_path_digest": "sha256:b2ab29bf1c572eb29febfd64c5c1edebd73947cbb6ef3aab3428fc8121034df1",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "cluster",
      "creation_date": "2021-06-07T19:13:19.874000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-cluster.v2.0.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:19:18.815000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.0.6",
      "version_original": "2.0.6"
    },
    {
      "_id": "60be6fe859a5ddc607d3bcb2",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:48cea9ecdf166e21be9d179c629c531d27f75552d126a7a421ae1b844652dcc6",
      "bundle_path_digest": "sha256:48cea9ecdf166e21be9d179c629c531d27f75552d126a7a421ae1b844652dcc6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-07T19:13:44.489000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:03:58.953000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:098d1a2d1adc475743daab6b9a936c4c1be37b93d66fa2afbcc2957c224bdf57",
          "image": "quay.io/tigera/operator@sha256:098d1a2d1adc475743daab6b9a936c4c1be37b93d66fa2afbcc2957c224bdf57",
          "name": "operator-098d1a2d1adc475743daab6b9a936c4c1be37b93d66fa2afbcc2957c224bdf57-annotation"
        },
        {
          "digest": "sha256:098d1a2d1adc475743daab6b9a936c4c1be37b93d66fa2afbcc2957c224bdf57",
          "image": "quay.io/tigera/operator@sha256:098d1a2d1adc475743daab6b9a936c4c1be37b93d66fa2afbcc2957c224bdf57",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.13.1",
      "version_original": "1.13.1"
    },
    {
      "_id": "60be7016897fdf8576e94909",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:24dcf20c56686336983ff099e526f20a8350154e6da2d117ceafb136d8a34d51",
      "bundle_path_digest": "sha256:24dcf20c56686336983ff099e526f20a8350154e6da2d117ceafb136d8a34d51",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-07T19:14:30.584000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:16:15.319000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:309358ba7634183b7c18506c46634202a88b3c790937ef1fbdf8ab0a7218c935",
          "image": "quay.io/tigera/operator@sha256:309358ba7634183b7c18506c46634202a88b3c790937ef1fbdf8ab0a7218c935",
          "name": "operator-309358ba7634183b7c18506c46634202a88b3c790937ef1fbdf8ab0a7218c935-annotation"
        },
        {
          "digest": "sha256:309358ba7634183b7c18506c46634202a88b3c790937ef1fbdf8ab0a7218c935",
          "image": "quay.io/tigera/operator@sha256:309358ba7634183b7c18506c46634202a88b3c790937ef1fbdf8ab0a7218c935",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.13.0",
      "version_original": "1.13.0"
    },
    {
      "_id": "60be701a5dd200b899cd124a",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:19dc9af6dd68c20717b88519f8fc59c88926d45ff4e607f10b304165b65198bb",
      "bundle_path_digest": "sha256:19dc9af6dd68c20717b88519f8fc59c88926d45ff4e607f10b304165b65198bb",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.17",
      "creation_date": "2021-06-07T19:14:34.742000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.17.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:21:34.256000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:7062a0a028b1f372ac335d375b75cd7c9e1821552816b0c18663d97437e05540",
          "image": "quay.io/tigera/operator@sha256:7062a0a028b1f372ac335d375b75cd7c9e1821552816b0c18663d97437e05540",
          "name": "operator-7062a0a028b1f372ac335d375b75cd7c9e1821552816b0c18663d97437e05540-annotation"
        },
        {
          "digest": "sha256:7062a0a028b1f372ac335d375b75cd7c9e1821552816b0c18663d97437e05540",
          "image": "quay.io/tigera/operator@sha256:7062a0a028b1f372ac335d375b75cd7c9e1821552816b0c18663d97437e05540",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.17.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.17.1",
      "version_original": "1.17.1"
    },
    {
      "_id": "60be703a5dd200b899cd124b",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:d914bb849f90c76ec606714913c2ac4061c455de9490a5b3cf1b3217dce267d2",
      "bundle_path_digest": "sha256:d914bb849f90c76ec606714913c2ac4061c455de9490a5b3cf1b3217dce267d2",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.17",
      "creation_date": "2021-06-07T19:15:06.454000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.17.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T00:55:32.972000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:69d7112484546128ddce0af2eb27001522a2a028ae25bc4a5394b5f8693cb8c1",
          "image": "quay.io/tigera/operator@sha256:69d7112484546128ddce0af2eb27001522a2a028ae25bc4a5394b5f8693cb8c1",
          "name": "operator-69d7112484546128ddce0af2eb27001522a2a028ae25bc4a5394b5f8693cb8c1-annotation"
        },
        {
          "digest": "sha256:69d7112484546128ddce0af2eb27001522a2a028ae25bc4a5394b5f8693cb8c1",
          "image": "quay.io/tigera/operator@sha256:69d7112484546128ddce0af2eb27001522a2a028ae25bc4a5394b5f8693cb8c1",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.17.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.17.0",
      "version_original": "1.17.0"
    },
    {
      "_id": "60be7096897fdf8576e9490a",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:c44df54a5ba20edf0038bc79a340c1ff88782486bd32673b780ade715f798d08",
      "bundle_path_digest": "sha256:c44df54a5ba20edf0038bc79a340c1ff88782486bd32673b780ade715f798d08",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.15",
      "creation_date": "2021-06-07T19:16:38.314000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.15.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:10:02.548000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:a73759d6bae779615737fc4cae3ff59b0873d991d606c1d97086cf5a06df528f",
          "image": "quay.io/tigera/operator@sha256:a73759d6bae779615737fc4cae3ff59b0873d991d606c1d97086cf5a06df528f",
          "name": "operator-a73759d6bae779615737fc4cae3ff59b0873d991d606c1d97086cf5a06df528f-annotation"
        },
        {
          "digest": "sha256:a73759d6bae779615737fc4cae3ff59b0873d991d606c1d97086cf5a06df528f",
          "image": "quay.io/tigera/operator@sha256:a73759d6bae779615737fc4cae3ff59b0873d991d606c1d97086cf5a06df528f",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.15.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.15.0",
      "version_original": "1.15.0"
    },
    {
      "_id": "60bf2ce15dd200b899cd13b4",
      "alm_examples": [
        {
          "api_version": "sriovfec.intel.com/v1",
          "kind": "SriovFecClusterConfig",
          "metadata": {
            "name": "config",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "nodes": [
              {
                "nodeName": "",
                "physicalFunctions": [
                  {
                    "bbDevConfig": {
                      "n3000": {
                        "downlink": {
                          "bandwidth": 3,
                          "loadBalance": 128,
                          "queues": {
                            "vf0": 16,
                            "vf1": 16,
                            "vf2": 0,
                            "vf3": 0,
                            "vf4": 0,
                            "vf5": 0,
                            "vf6": 0,
                            "vf7": 0
                          }
                        },
                        "flrTimeout": 610,
                        "networkType": "FPGA_5GNR",
                        "pfMode": true,
                        "uplink": {
                          "bandwidth": 3,
                          "loadBalance": 128,
                          "queues": {
                            "vf0": 16,
                            "vf1": 16,
                            "vf2": 0,
                            "vf3": 0,
                            "vf4": 0,
                            "vf5": 0,
                            "vf6": 0,
                            "vf7": 0
                          }
                        }
                      }
                    },
                    "pciAddress": "",
                    "pfDriver": "pci-pf-stub",
                    "vfAmount": 2,
                    "vfDriver": "vfio-pci"
                  }
                ]
              }
            ]
          }
        },
        {
          "api_version": "sriovfec.intel.com/v1",
          "kind": "SriovFecNodeConfig",
          "metadata": {
            "name": "worker-0",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "physicalFunctions": [
              {
                "bbDevConfig": {
                  "n3000": {
                    "downlink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    },
                    "flrTimeout": 610,
                    "networkType": "FPGA_5GNR",
                    "pfMode": true,
                    "uplink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    }
                  }
                },
                "pci_addr": "",
                "pf_driver": "pci-pf-stub",
                "vf_amount": 2,
                "vf_driver": "vfio-pci"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/sriov-fec-operator-bundle@sha256:6b1b9f2ab52537586e75a14efd941b98cfe4d20da13c1bfff641b8e5b77458c4",
      "bundle_path_digest": "sha256:6b1b9f2ab52537586e75a14efd941b98cfe4d20da13c1bfff641b8e5b77458c4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-08T08:40:01.809000+00:00",
      "csv_description": "The Intel\u00ae FPGA Programmable Acceleration Card N3000 (Intel\u00ae FPGA PAC N3000) is a highly customizable FPGA SmartNIC which enables high-throughput, low latency and high-bandwith applications.  It allows the optimization of data plane performance to reduce total cost of ownership while maintaining a high degree of flexibility.  The Intel FPGA PAC N3000 plays a key role in accelerating 5G and network functions virtualization (NFV) adoption for ecosystem partners such as telecommunications equipment manufacturers (TEMs) virtual network functions (VNF) vendors, system integrators and telcos, to bring scalable and high-performance solutions to market. The Intel FPGA PAC N3000 includes a variant that is design to be Network Equipment Building System (NEBS)-friendly, and features a Root-of-Trust device that helps protect systems from FPGA host security exploits. This document explains how the FPGA resource can be used on the Open Network Edge Services Software (OpenNESS) platform for accelerating network functions and edge application workloads. We use the Intel\u00ae FPGA PAC N3000 as a reference FPGA PAC and use LTE/5G Forward Error Correction (FEC) as an example workload that accelerates the 5G or 4G L1 base station network function. The same concept and mechanism is applicable for application acceleration workloads like AI and ML on FPGA for Inference applications. The Intel\u00ae FPGA PAC N3000 is a full-duplex, 100 Gbps in-system, re-programmable acceleration card for multi-workload networking application acceleration. It has an optimal memory mixture designed for network functions, with an integrated network interface card (NIC) in a small form factor that enables high throughput, low latency, and low power per bit for a custom networking pipeline. The ACC100 supports the O-RAN adopted DPDK BBDev API - an API which Intel contributed to the opensource community to enable choice and TTM for FEC acceleration solutions. The FlexRAN software reference architecture supports the ACC100 which enables users to quickly evaluate and build platforms for the wide range of vRAN networks. Reduces platform power, E2E latency and Intel\u00ae CPU core count requirements as well as increases cell capacity than existing programmable accelerator. Accelerates both 4G and 5G data concurrently.\tLowers development cost using commercial off the shelf (COTS) servers. Accommodates space-constrained implementations via a low-profile PCIe card form factor. Enables a variety of flexible FlexRAN deployments from small cell to macro to Massive MIMO networks. Supports extended temperature for the most challenging of RAN deployment scenario\u2019s.",
      "csv_display_name": "OpenNESS SR-IOV Operator for Wireless FEC Accelerators",
      "csv_metadata_description": "",
      "csv_name": "sriov-fec.v1.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:05:24.309000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "sriov-fec",
      "provided_apis": [
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecClusterConfig",
          "plural": "sriovfecclusterconfigs",
          "version": "v1"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecNodeConfig",
          "plural": "sriovfecnodeconfigs",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:93608779058dbe1b20d0ad9750cd1d6c3b1ff7eec8a4cb2ff1bcdcea1221471b",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:93608779058dbe1b20d0ad9750cd1d6c3b1ff7eec8a4cb2ff1bcdcea1221471b",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.2.0",
      "version_original": "1.2.0"
    },
    {
      "_id": "60c0e101e1f052817b72bbe6",
      "alm_examples": [
        {
          "api_version": "csi.ibm.com/v1",
          "kind": "IBMBlockCSI",
          "metadata": {
            "name": "ibm-block-csi"
          },
          "spec": {
            "controller": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-controller",
              "tag": "1.6.0"
            },
            "node": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-node",
              "tag": "1.6.0"
            },
            "sidecars": [
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-node-driver-registrar",
                "repository": "k8s.gcr.io/sig-storage/csi-node-driver-registrar",
                "tag": "v2.1.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-provisioner",
                "repository": "k8s.gcr.io/sig-storage/csi-provisioner",
                "tag": "v2.1.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-attacher",
                "repository": "k8s.gcr.io/sig-storage/csi-attacher",
                "tag": "v3.1.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-snapshotter",
                "repository": "k8s.gcr.io/sig-storage/csi-snapshotter",
                "tag": "v3.0.2"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-resizer",
                "repository": "k8s.gcr.io/sig-storage/csi-resizer",
                "tag": "v1.1.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "livenessprobe",
                "repository": "k8s.gcr.io/sig-storage/livenessprobe",
                "tag": "v2.2.0"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/ibm-block-csi-operator-bundle@sha256:6da931c6455da890b255af2201c073627d4cf8371c16c15a862e8301286be332",
      "bundle_path_digest": "sha256:6da931c6455da890b255af2201c073627d4cf8371c16c15a862e8301286be332",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-09T15:40:49.688000+00:00",
      "csv_description": "The Container Storage Interface (CSI) Driver for IBM block storage systems enables container orchestrators such as Kubernetes to manage the life cycle of persistent storage.\nThis is the official operator to deploy and manage IBM block storage CSI driver.\n## Supported orchestration platforms\nThe following table details orchestration platforms suitable for deployment of the IBM\u00ae block storage CSI driver.\n|Orchestration platform|Version|Architecture|\n|----------------------|-------|------------|\n|Kubernetes|1.20|x86|\n|Kubernetes|1.21|x86|\n|Red Hat\u00ae OpenShift\u00ae|4.7|x86, IBM Z\u00ae, IBM Power Systems\u2122\u00b9|\n|Red Hat OpenShift|4.8|x86, IBM Z, IBM Power Systems\u00b9|\n\n \u00b9 IBM Power Systems architecture is only supported on Spectrum Virtualize Family storage systems.\n\n**Note:** As of this document's publication date, IBM Cloud\u00ae Satellite only supports RHEL 7 on x86 architecture for Red Hat OpenShift. For the latest support information, see [cloud.ibm.com/docs/satellite](https://cloud.ibm.com/docs/satellite).\n## Supported storage systems\nIBM\u00ae block storage CSI driver 1.6.0 supports different IBM storage systems as listed in the following table.\n|Storage system|Microcode version|\n|--------------|-----------------|\n|IBM FlashSystem\u2122 A9000|12.x|\n|IBM FlashSystem A9000R|12.x|\n|IBM Spectrum Virtualize\u2122 Family including IBM SAN Volume Controller (SVC) and IBM FlashSystem\u00ae family members built with IBM Spectrum\u00ae Virtualize (including FlashSystem 5xxx, 7200, 9100, 9200, 9200R)|7.8 and above, 8.x|\n|IBM Spectrum Virtualize as software only|7.8 and above, 8.x|\n|IBM DS8000\u00ae Family|8.x and higher with same API interface|\n\n **Note:**\n-   Newer microcode versions may also be compatible. When a newer microcode version becomes available, contact IBM Support to inquire whether the new microcode version is compatible with the current version of the CSI driver.\n-   The IBM Spectrum Virtualize Family and IBM SAN Volume Controller storage systems run the IBM Spectrum Virtualize software. In addition, IBM Spectrum Virtualize package is available as a deployable solution that can be run on any compatible hardware.\n## Supported operating systems\nThe following table lists operating systems required for deployment of the IBM\u00ae block storage CSI driver.\n|Operating system|Architecture|\n|----------------|------------|\n|Red Hat\u00ae Enterprise Linux\u00ae (RHEL) 7.x|x86, IBM Z\u00ae|\n|Red Hat Enterprise Linux CoreOS (RHCOS)|x86, IBM Z\u00ae\u00b2, IBM Power Systems\u2122\u00b9|\n\n\u00b9 IBM Power Systems architecture is only supported on Spectrum Virtualize Family storage systems.\n\n\u00b2 IBM Z and IBM Power Systems architectures are only supported using CLI installation.\n\nFor full product information, see [IBM block storage CSI driver documentation](https://www.ibm.com/docs/en/stg-block-csi-driver).\n## Prerequisites\nPerform these steps for each worker node in Kubernetes cluster to prepare your environment for installing the CSI (Container Storage Interface) driver.\n### 1. **For RHEL OS users:** Ensure iSCSI connectivity. If using RHCOS or if the packages are already installed, skip this step and continue to step 2.\n### 2. Configure Linux\u00ae multipath devices on the host.\n**Important:** Be sure to configure each worker with storage connectivity according to your storage system instructions. For more information, find your storage system documentation in [IBM Documentation](http://www.ibm.com/docs/).\n\n**Additional configuration steps for OpenShift\u00ae Container Platform users (RHEL and RHCOS).** Other users can continue to step 3.\n\nDownload and save the following yaml file:\n\n```bash\ncurl https://raw.githubusercontent.com/IBM/ibm-block-csi-operator/master/deploy/99-ibm-attach.yaml > 99-ibm-attach.yaml\n```\n\nThis file can be used for both Fibre Channel and iSCSI configurations. To support iSCSI, uncomment the last two lines in the file.\n\n**Important:** The 99-ibm-attach.yaml configuration file overrides any files that already exist on your system. Only use this file if the files mentioned are not already created. <br />If one or more have been created, edit this yaml file, as necessary.\nApply the yaml file.\n\n```bash\noc apply -f 99-ibm-attach.yaml\n```\n\n### 3. If needed, enable support for volume snapshots (FlashCopy\u00ae function) on your Kubernetes cluster.\n\nFor more information and instructions, see the Kubernetes blog post, [Kubernetes 1.20: Kubernetes Volume Snapshot Moves to GA](https://kubernetes.io/blog/2020/12/10/kubernetes-1.20-volume-snapshot-moves-to-ga/).\nInstall both the Snapshot CRDs and the Common Snapshot Controller once per cluster.\n\nThe instructions and relevant yaml files to enable volume snapshots can be found at: [https://github.com/kubernetes-csi/external-snapshotter#usage](https://github.com/kubernetes-csi/external-snapshotter#usage)\n### 4.  Configure storage system connectivity.\n#### 4.1.  Define the host of each Kubernetes node on the relevant storage systems with the valid WWPN (for Fibre Channel) or IQN (for iSCSI) of the node.\n#### 4.2.  For Fibre Channel, configure the relevant zoning from the storage to the host.\n### Installation\n#### Installing the driver with GitHub\nThe operator for IBM\u00ae block storage CSI driver can be installed directly with GitHub. Installing the CSI (Container Storage Interface) driver is part of the operator installation process.\nUse the following steps to install the operator and driver, with [GitHub](https://github.com/IBM/ibm-block-csi-operator).\n\n**Note:** Before you begin, you may need to create a user-defined namespace. Create the project namespace, using the `kubectl create ns <namespace>` command.\n#### 1.  Install the operator.\n##### 1.1. Download the manifest from GitHub.\n```bash\ncurl https://raw.githubusercontent.com/IBM/ibm-block-csi-operator/v1.6.0/deploy/installer/generated/ibm-block-csi-operator.yaml > ibm-block-csi-operator.yaml\n```\n##### 1.2.  (Optional): Update the image fields in the ibm-block-csi-operator.yaml.\n##### 1.3. Install the operator, using a user-defined namespace.\n```bash\n$ kubectl -n <namespace> apply -f ibm-block-csi-operator.yamlA\n```\n##### 4. Verify that the operator is running. (Make sure that the Status is _Running_.)\n```bash\n$ kubectl get pod -l app.kubernetes.io/name=ibm-block-csi-operator -n <namespace>\nNAME                                    READY   STATUS    RESTARTS   AGE\nibm-block-csi-operator-5bb7996b86-xntss 1/1     Running   0          10m\n```\n#### 2.  Install the IBM block storage CSI driver by creating an IBMBlockCSI custom resource.\n##### 2.1.  Download the manifest from GitHub.\n```bash\ncurl https://raw.githubusercontent.com/IBM/ibm-block-csi-operator/v1.6.0/deploy/crds/csi.ibm.com_v1_ibmblockcsi_cr.yaml > csi.ibm.com_v1_ibmblockcsi_cr.yaml\n```\n##### 2.2.  (Optional): Update the image repository field, tag field, or both in the csi.ibm.com_v1_ibmblockcsi_cr.yaml.\n##### 2.3.  Install the csi.ibm.com_v1_ibmblockcsi_cr.yaml.\n```bash\n$ kubectl -n <namespace> apply -f csi.ibm.com_v1_ibmblockcsi_cr.yaml\n```\n##### 2.4. Verify the driver is running:\n```bash\n$ kubectl get pods -n <namespace> -l csi\nNAME                                        READY   STATUS    RESTARTS   AGE\nibm-block-csi-controller-0                  6/6     Running   0          9m36s\nibm-block-csi-node-jvmvh                    3/3     Running   0          9m36s\nibm-block-csi-node-tsppw                    3/3     Running   0          9m36s\nibm-block-csi-operator-5bb7996b86-xntss     1/1     Running   0          10m\n```\n## Configuring k8s secret and storage class\nIn order to use the driver, create the relevant storage classes and secrets, as needed.\nThis section describes how to:\n 1. Create a storage system secret - to define the storage system credentials (user and password) and its address.\n 2. Configure the storage class - to define the storage system pool name, secret reference, `SpaceEfficiency`, and `fstype`.\n#### 1. Create an array secret\nCreate a secret file as follows `array-secret.yaml` and update the relevant credentials:\n```\nkind: Secret\napiVersion: v1\nmetadata:\n  name: <NAME>\n  namespace: <NAMESPACE>\ntype: Opaque\nstringData:\n  management_address: <ADDRESS-1, ADDRESS-2> # Array management addresses\n  username: <USERNAME>                   # Array username\ndata:\n  password: <PASSWORD base64>            # Array password\n```\nApply the secret:\n```\n$ kubectl apply -f array-secret.yaml\n```\nTo create the secret using a command line terminal, use the following command:\n```bash\nkubectl create secret generic <NAME> --from-literal=username=<USER> --fromliteral=password=<PASSWORD> --from-literal=management_address=<ARRAY_MGMT> -n <namespace>\n```\n#### 2. Create storage classes\nCreate a storage class `demo-storageclass-gold-pvc.yaml` file as follows, with the relevant capabilities, pool and, array secret.\nUse the `SpaceEfficiency` parameters for each storage system. These values are not case sensitive:\n* IBM FlashSystem A9000 and A9000R\n    * Always includes deduplication and compression.\n    No need to specify during configuration.\n* IBM Spectrum Virtualize Family\n    * `thick` (default value, if not specified)\n    * `thin`\n    * `compressed`\n    * `deduplicated`\n* IBM DS8000 Family\n    * `none` (default value, if not specified)\n    * `thin`\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: gold\nprovisioner: block.csi.ibm.com\nparameters:\n  SpaceEfficiency: <VALUE>          # Optional: Values applicable for Spectrum Virtualize Family are: thin, compressed, or deduplicated\n  pool: <POOL_NAME>\t                # DS8000 Family paramater is pool ID\n  csi.storage.k8s.io/provisioner-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/provisioner-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n  csi.storage.k8s.io/controller-publish-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/controller-publish-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n  csi.storage.k8s.io/controller-expand-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/controller-expand-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n  csi.storage.k8s.io/fstype: xfs    # Optional: Values ext4/xfs. The default is ext4.\n  volume_name_prefix: <prefix_name> # Optional: DS8000 Family maximum prefix length is 5 characters. Maximum prefix length for other systems is 20 characters.\nallowVolumeExpansion: true\n```\n#### 3. Apply the storage class:\n```bash\n$ kubectl apply -f demo-storageclass-gold-pvc.yaml\nstorageclass.storage.k8s.io/gold created\n```\n",
      "csv_display_name": "Operator for IBM block storage CSI driver",
      "csv_metadata_description": "Run IBM block storage CSI driver on OpenShift.",
      "csv_name": "ibm-block-csi-operator.v1.6.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:02:20.420000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "ibm-block-csi-operator",
      "provided_apis": [
        {
          "group": "csi.ibm.com",
          "kind": "IBMBlockCSI",
          "plural": "ibmblockcsis",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator:1.6.0",
          "name": "ibm-block-csi-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.6.0",
      "version_original": "1.6.0"
    },
    {
      "_id": "60c15707e1f052817b72bc21",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:33a4d68c2d31ed9a7662120e1af1e9dd83c50c5088311dd62eae915d7e473bd8",
      "bundle_path_digest": "sha256:33a4d68c2d31ed9a7662120e1af1e9dd83c50c5088311dd62eae915d7e473bd8",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.15",
      "creation_date": "2021-06-10T00:04:23.883000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.15.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:05:31.968000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:c6591da87aa83a4869b26677c0d91d986e28ae4b1d740ca4a320996f26eb1b66",
          "image": "quay.io/tigera/operator@sha256:c6591da87aa83a4869b26677c0d91d986e28ae4b1d740ca4a320996f26eb1b66",
          "name": "operator-c6591da87aa83a4869b26677c0d91d986e28ae4b1d740ca4a320996f26eb1b66-annotation"
        },
        {
          "digest": "sha256:c6591da87aa83a4869b26677c0d91d986e28ae4b1d740ca4a320996f26eb1b66",
          "image": "quay.io/tigera/operator@sha256:c6591da87aa83a4869b26677c0d91d986e28ae4b1d740ca4a320996f26eb1b66",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.15.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.15.1",
      "version_original": "1.15.1"
    },
    {
      "_id": "60c15723e1f052817b72bc22",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:33a4d68c2d31ed9a7662120e1af1e9dd83c50c5088311dd62eae915d7e473bd8",
      "bundle_path_digest": "sha256:33a4d68c2d31ed9a7662120e1af1e9dd83c50c5088311dd62eae915d7e473bd8",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.15",
      "creation_date": "2021-06-10T00:04:51.788000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.15.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T00:53:26.199000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:c6591da87aa83a4869b26677c0d91d986e28ae4b1d740ca4a320996f26eb1b66",
          "image": "quay.io/tigera/operator@sha256:c6591da87aa83a4869b26677c0d91d986e28ae4b1d740ca4a320996f26eb1b66",
          "name": "operator-c6591da87aa83a4869b26677c0d91d986e28ae4b1d740ca4a320996f26eb1b66-annotation"
        },
        {
          "digest": "sha256:c6591da87aa83a4869b26677c0d91d986e28ae4b1d740ca4a320996f26eb1b66",
          "image": "quay.io/tigera/operator@sha256:c6591da87aa83a4869b26677c0d91d986e28ae4b1d740ca4a320996f26eb1b66",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.15.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.15.1",
      "version_original": "1.15.1"
    },
    {
      "_id": "60c15899ba99c76846ab4a11",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:33a4d68c2d31ed9a7662120e1af1e9dd83c50c5088311dd62eae915d7e473bd8",
      "bundle_path_digest": "sha256:33a4d68c2d31ed9a7662120e1af1e9dd83c50c5088311dd62eae915d7e473bd8",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.15",
      "creation_date": "2021-06-10T00:11:05.648000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.15.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:19:24.909000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:c6591da87aa83a4869b26677c0d91d986e28ae4b1d740ca4a320996f26eb1b66",
          "image": "quay.io/tigera/operator@sha256:c6591da87aa83a4869b26677c0d91d986e28ae4b1d740ca4a320996f26eb1b66",
          "name": "operator-c6591da87aa83a4869b26677c0d91d986e28ae4b1d740ca4a320996f26eb1b66-annotation"
        },
        {
          "digest": "sha256:c6591da87aa83a4869b26677c0d91d986e28ae4b1d740ca4a320996f26eb1b66",
          "image": "quay.io/tigera/operator@sha256:c6591da87aa83a4869b26677c0d91d986e28ae4b1d740ca4a320996f26eb1b66",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.15.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.15.1",
      "version_original": "1.15.1"
    },
    {
      "_id": "60c15e3cba99c76846ab4a17",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:4a1252b44e037c8965f5f2fd98585cbdd4a0516a7f9e059c12af10ee3a5ddd83",
      "bundle_path_digest": "sha256:4a1252b44e037c8965f5f2fd98585cbdd4a0516a7f9e059c12af10ee3a5ddd83",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-10T00:35:08.933000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:16:30.358000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:6e7d248a30c34204e6df445f03d61b7855bd9f188181b2abf68972da97aebde4",
          "image": "quay.io/tigera/operator@sha256:6e7d248a30c34204e6df445f03d61b7855bd9f188181b2abf68972da97aebde4",
          "name": "operator-6e7d248a30c34204e6df445f03d61b7855bd9f188181b2abf68972da97aebde4-annotation"
        },
        {
          "digest": "sha256:6e7d248a30c34204e6df445f03d61b7855bd9f188181b2abf68972da97aebde4",
          "image": "quay.io/tigera/operator@sha256:6e7d248a30c34204e6df445f03d61b7855bd9f188181b2abf68972da97aebde4",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.13.2",
      "version_original": "1.13.2"
    },
    {
      "_id": "60c15e8badf15566a5a97bac",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:4a1252b44e037c8965f5f2fd98585cbdd4a0516a7f9e059c12af10ee3a5ddd83",
      "bundle_path_digest": "sha256:4a1252b44e037c8965f5f2fd98585cbdd4a0516a7f9e059c12af10ee3a5ddd83",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-10T00:36:27.129000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T00:50:39.955000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:6e7d248a30c34204e6df445f03d61b7855bd9f188181b2abf68972da97aebde4",
          "image": "quay.io/tigera/operator@sha256:6e7d248a30c34204e6df445f03d61b7855bd9f188181b2abf68972da97aebde4",
          "name": "operator-6e7d248a30c34204e6df445f03d61b7855bd9f188181b2abf68972da97aebde4-annotation"
        },
        {
          "digest": "sha256:6e7d248a30c34204e6df445f03d61b7855bd9f188181b2abf68972da97aebde4",
          "image": "quay.io/tigera/operator@sha256:6e7d248a30c34204e6df445f03d61b7855bd9f188181b2abf68972da97aebde4",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.13.2",
      "version_original": "1.13.2"
    },
    {
      "_id": "60c15f89adf15566a5a97bad",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:4a1252b44e037c8965f5f2fd98585cbdd4a0516a7f9e059c12af10ee3a5ddd83",
      "bundle_path_digest": "sha256:4a1252b44e037c8965f5f2fd98585cbdd4a0516a7f9e059c12af10ee3a5ddd83",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-10T00:40:41.814000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:53:41.066000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:6e7d248a30c34204e6df445f03d61b7855bd9f188181b2abf68972da97aebde4",
          "image": "quay.io/tigera/operator@sha256:6e7d248a30c34204e6df445f03d61b7855bd9f188181b2abf68972da97aebde4",
          "name": "operator-6e7d248a30c34204e6df445f03d61b7855bd9f188181b2abf68972da97aebde4-annotation"
        },
        {
          "digest": "sha256:6e7d248a30c34204e6df445f03d61b7855bd9f188181b2abf68972da97aebde4",
          "image": "quay.io/tigera/operator@sha256:6e7d248a30c34204e6df445f03d61b7855bd9f188181b2abf68972da97aebde4",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.13.2",
      "version_original": "1.13.2"
    },
    {
      "_id": "60c1ac44ba99c76846ab4a45",
      "alm_examples": [
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRay",
          "metadata": {
            "name": "nastelxray"
          },
          "spec": {
            "active-mq": {
              "image": "registry.connect.redhat.com/nastel/nastel-activemq",
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "1000Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "500Mi"
                }
              },
              "service": {
                "amqpPort": 5672,
                "httpPort": 8161,
                "ingress": {
                  "enabled": true
                },
                "mqttPort": 1883,
                "servicePort": 61616,
                "stopmPort": 61613,
                "type": "ClusterIP",
                "wsPort": 61614
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "ap-domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-ap-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 5440,
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "solr-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "solr-node": {
              "affinity": {},
              "exporter": {
                "configFile": "/opt/solr/contrib/prometheus-exporter/conf/solr-exporter-config.xml",
                "enabled": false,
                "livenessProbe": {
                  "initialDelaySeconds": 20,
                  "periodSeconds": 10
                },
                "podAnnotations": {},
                "port": 9983,
                "readinessProbe": {
                  "initialDelaySeconds": 15,
                  "periodSeconds": 5
                },
                "resources": {},
                "service": {
                  "annotations": {},
                  "type": "ClusterIP"
                },
                "threads": 7,
                "updateStrategy": {}
              },
              "image": {
                "pullPolicy": "Always",
                "repository": "registry.connect.redhat.com/nastel/nastel-solr"
              },
              "javaMem": "-Xms2g -Xmx3g",
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 10
              },
              "logLevel": "INFO",
              "podAnnotations": {},
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "port": 8983,
              "readinessProbe": {
                "initialDelaySeconds": 15,
                "periodSeconds": 5
              },
              "replicaCount": 4,
              "resources": {},
              "service": {
                "annotations": {},
                "ingress": {
                  "enabled": true
                },
                "type": "ClusterIP"
              },
              "terminationGracePeriodSeconds": 180,
              "tls": {
                "caSecret": {
                  "bundlePath": "",
                  "name": ""
                },
                "certSecret": {
                  "certPath": "tls.crt",
                  "keyPath": "tls.key",
                  "name": ""
                },
                "checkPeerName": "false",
                "enabled": false,
                "importKubernetesCA": "false",
                "keystorePassword": "changeit",
                "needClientAuth": "false",
                "wantClientAuth": "false"
              },
              "updateStrategy": {
                "type": "OnDelete"
              },
              "volumeClaimTemplates": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "storageClassName": "ibmc-block-gold",
                "storageSize": "20Gi"
              },
              "zookeeper": {
                "replicaCount": 1
              }
            },
            "xray": {
              "image": "registry.connect.redhat.com/nastel/xray-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "node": {},
                "type": "LoadBalancer"
              }
            },
            "xray-cep": {
              "image": "registry.connect.redhat.com/nastel/xray-cep",
              "init": {
                "dbapi-solr": {
                  "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr"
                },
                "kafka": {
                  "image": "registry.redhat.io/openshift4/ose-cli"
                }
              },
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "LoadBalancer",
                "xRayDataPort": 6580
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-ml-persistance": {
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-file-silver-gid"
              }
            },
            "xray-ml-queries": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-ml-train": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            }
          }
        },
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRayTopology",
          "metadata": {
            "name": "nastelxraytopology"
          },
          "spec": {
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "storm": {
              "enabled": true,
              "fullnameOverride": "storm",
              "name": "storm",
              "nameOverride": "storm",
              "nimbus": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "nimbus",
                  "port": 6627,
                  "type": "ClusterIP"
                }
              },
              "supervisor": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 3,
                "resources": {},
                "service": {
                  "name": "supervisor",
                  "port": 6700
                }
              },
              "ui": {
                "enabled": true,
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": true,
                  "tls": []
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "ui",
                  "port": 8080,
                  "type": "ClusterIP"
                }
              },
              "zookeeper": {
                "enabled": false,
                "fullnameOverride": "storm-keeper",
                "port": 2181,
                "replicaCount": 1,
                "servers": [
                  "storm-keeper"
                ]
              }
            },
            "storm-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-cep": {
              "service": {
                "cepServerPort": 3005,
                "xRayDataPort": 6580
              }
            },
            "xray-storm-topologies": {
              "image": "registry.connect.redhat.com/nastel/xray-storm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "thriftPort": 6627
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/xray-operator-bundle@sha256:9654e6ed07b457b4bd7766bde4227c8e27335215983b1526a23c8f1727ea8aeb",
      "bundle_path_digest": "sha256:9654e6ed07b457b4bd7766bde4227c8e27335215983b1526a23c8f1727ea8aeb",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-10T06:08:04.681000+00:00",
      "csv_description": "The operator deploys Nastel XRay component containers:\n  * Nastel Domain Server\n  * XRay Complex Event Processing (CEP)\n  * Solr indexing service\n  * Machine Learning (ML)\n  * XRay WebApp\n  * Storm Topologies (optional)\n\nin one go.\n\n[Nastel XRay](https://www.nastel.com/nastel-xray/) allows you to Track & Trace Transaction and Message Flows, Analyze, Visualize and Report your Big Data.\n",
      "csv_display_name": "Nastel XRay Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel XRay",
      "csv_name": "nastel-xray-operator.v1.325.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:16:53.809000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nastel-xray-operator",
      "provided_apis": [
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRay",
          "plural": "nastelxrays",
          "version": "v1alpha3"
        },
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRayTopology",
          "plural": "nastelxraytopologies",
          "version": "v1alpha3"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:5dc6090cd20acc85a8cc443e903d56b01f062af9d1be0c92790ff68c3cefa2eb",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:5dc6090cd20acc85a8cc443e903d56b01f062af9d1be0c92790ff68c3cefa2eb",
          "name": "xray-operator-5dc6090cd20acc85a8cc443e903d56b01f062af9d1be0c92790ff68c3cefa2eb-annotation"
        },
        {
          "digest": "sha256:5699df0d8daf9084961758d1e86ac2a16c2b16377619c9bedd902692175069eb",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5699df0d8daf9084961758d1e86ac2a16c2b16377619c9bedd902692175069eb",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:5dc6090cd20acc85a8cc443e903d56b01f062af9d1be0c92790ff68c3cefa2eb",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:5dc6090cd20acc85a8cc443e903d56b01f062af9d1be0c92790ff68c3cefa2eb",
          "name": "nastel-xray-operator"
        },
        {
          "digest": "sha256:9e2bd3d35793fca5839f8cc2af268009a165d83dda60ca4f071799cde4687f61",
          "image": "registry.connect.redhat.com/nastel/nastel-ap-domain@sha256:9e2bd3d35793fca5839f8cc2af268009a165d83dda60ca4f071799cde4687f61",
          "name": "domain"
        },
        {
          "digest": "sha256:b24d9afe743570f9d2f5c5ca0a4606ceddfce8f799390346704692bb466cd4d8",
          "image": "registry.connect.redhat.com/nastel/xray-cep@sha256:b24d9afe743570f9d2f5c5ca0a4606ceddfce8f799390346704692bb466cd4d8",
          "name": "cep"
        },
        {
          "digest": "sha256:2064034a0afe4a7808fdd949e7251e333d867ba9b165fe8b830a66d154c3cfa0",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:2064034a0afe4a7808fdd949e7251e333d867ba9b165fe8b830a66d154c3cfa0",
          "name": "ose_cli"
        },
        {
          "digest": "sha256:96099363e389e9658e4e5a1ce87b3620e7eb3f38c54e4bf79cacd8dcb9da9e94",
          "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr@sha256:96099363e389e9658e4e5a1ce87b3620e7eb3f38c54e4bf79cacd8dcb9da9e94",
          "name": "solr_dbapi"
        },
        {
          "digest": "sha256:2fdcab2efa8627b33ae9148b0d14f22171dbbd64ccdf00e0a65e234e3e09d2ae",
          "image": "registry.connect.redhat.com/nastel/xray-ml@sha256:2fdcab2efa8627b33ae9148b0d14f22171dbbd64ccdf00e0a65e234e3e09d2ae",
          "name": "ml"
        },
        {
          "digest": "sha256:be63ea6573626f186a61263e39d0c1353517188f270a850f8c307559f67fc8ba",
          "image": "registry.connect.redhat.com/nastel/xray-ui@sha256:be63ea6573626f186a61263e39d0c1353517188f270a850f8c307559f67fc8ba",
          "name": "xray"
        },
        {
          "digest": "sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "image": "registry.connect.redhat.com/nastel/nastel-activemq@sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "name": "active_mq"
        },
        {
          "digest": "sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "image": "registry.connect.redhat.com/nastel/nastel-zookeeper@sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "name": "zookeeper"
        },
        {
          "digest": "sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "image": "registry.connect.redhat.com/nastel/nastel-solr@sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "name": "solr"
        },
        {
          "digest": "sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "image": "registry.connect.redhat.com/nastel/nastel-storm@sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "name": "storm"
        },
        {
          "digest": "sha256:ecb3a948d1a2e3eac6bfdd6e9eb18b26ddfecd2449d7191f03a1451a18c0f6f3",
          "image": "registry.connect.redhat.com/nastel/xray-storm@sha256:ecb3a948d1a2e3eac6bfdd6e9eb18b26ddfecd2449d7191f03a1451a18c0f6f3",
          "name": "storm_topology"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.325.0",
      "version_original": "1.325.0"
    },
    {
      "_id": "60c1ad1eba99c76846ab4a46",
      "alm_examples": [
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRay",
          "metadata": {
            "name": "nastelxray"
          },
          "spec": {
            "active-mq": {
              "image": "registry.connect.redhat.com/nastel/nastel-activemq",
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "1000Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "500Mi"
                }
              },
              "service": {
                "amqpPort": 5672,
                "httpPort": 8161,
                "ingress": {
                  "enabled": true
                },
                "mqttPort": 1883,
                "servicePort": 61616,
                "stopmPort": 61613,
                "type": "ClusterIP",
                "wsPort": 61614
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "ap-domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-ap-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 5440,
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "solr-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "solr-node": {
              "affinity": {},
              "exporter": {
                "configFile": "/opt/solr/contrib/prometheus-exporter/conf/solr-exporter-config.xml",
                "enabled": false,
                "livenessProbe": {
                  "initialDelaySeconds": 20,
                  "periodSeconds": 10
                },
                "podAnnotations": {},
                "port": 9983,
                "readinessProbe": {
                  "initialDelaySeconds": 15,
                  "periodSeconds": 5
                },
                "resources": {},
                "service": {
                  "annotations": {},
                  "type": "ClusterIP"
                },
                "threads": 7,
                "updateStrategy": {}
              },
              "image": {
                "pullPolicy": "Always",
                "repository": "registry.connect.redhat.com/nastel/nastel-solr"
              },
              "javaMem": "-Xms2g -Xmx3g",
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 10
              },
              "logLevel": "INFO",
              "podAnnotations": {},
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "port": 8983,
              "readinessProbe": {
                "initialDelaySeconds": 15,
                "periodSeconds": 5
              },
              "replicaCount": 4,
              "resources": {},
              "service": {
                "annotations": {},
                "ingress": {
                  "enabled": true
                },
                "type": "ClusterIP"
              },
              "terminationGracePeriodSeconds": 180,
              "tls": {
                "caSecret": {
                  "bundlePath": "",
                  "name": ""
                },
                "certSecret": {
                  "certPath": "tls.crt",
                  "keyPath": "tls.key",
                  "name": ""
                },
                "checkPeerName": "false",
                "enabled": false,
                "importKubernetesCA": "false",
                "keystorePassword": "changeit",
                "needClientAuth": "false",
                "wantClientAuth": "false"
              },
              "updateStrategy": {
                "type": "OnDelete"
              },
              "volumeClaimTemplates": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "storageClassName": "ibmc-block-gold",
                "storageSize": "20Gi"
              },
              "zookeeper": {
                "replicaCount": 1
              }
            },
            "xray": {
              "image": "registry.connect.redhat.com/nastel/xray-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "node": {},
                "type": "LoadBalancer"
              }
            },
            "xray-cep": {
              "image": "registry.connect.redhat.com/nastel/xray-cep",
              "init": {
                "dbapi-solr": {
                  "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr"
                },
                "kafka": {
                  "image": "registry.redhat.io/openshift4/ose-cli"
                }
              },
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "LoadBalancer",
                "xRayDataPort": 6580
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-ml-persistance": {
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-file-silver-gid"
              }
            },
            "xray-ml-queries": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-ml-train": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            }
          }
        },
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRayTopology",
          "metadata": {
            "name": "nastelxraytopology"
          },
          "spec": {
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "storm": {
              "enabled": true,
              "fullnameOverride": "storm",
              "name": "storm",
              "nameOverride": "storm",
              "nimbus": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "nimbus",
                  "port": 6627,
                  "type": "ClusterIP"
                }
              },
              "supervisor": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 3,
                "resources": {},
                "service": {
                  "name": "supervisor",
                  "port": 6700
                }
              },
              "ui": {
                "enabled": true,
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": true,
                  "tls": []
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "ui",
                  "port": 8080,
                  "type": "ClusterIP"
                }
              },
              "zookeeper": {
                "enabled": false,
                "fullnameOverride": "storm-keeper",
                "port": 2181,
                "replicaCount": 1,
                "servers": [
                  "storm-keeper"
                ]
              }
            },
            "storm-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-cep": {
              "service": {
                "cepServerPort": 3005,
                "xRayDataPort": 6580
              }
            },
            "xray-storm-topologies": {
              "image": "registry.connect.redhat.com/nastel/xray-storm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "thriftPort": 6627
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/xray-operator-bundle@sha256:9654e6ed07b457b4bd7766bde4227c8e27335215983b1526a23c8f1727ea8aeb",
      "bundle_path_digest": "sha256:9654e6ed07b457b4bd7766bde4227c8e27335215983b1526a23c8f1727ea8aeb",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-10T06:11:42.431000+00:00",
      "csv_description": "The operator deploys Nastel XRay component containers:\n  * Nastel Domain Server\n  * XRay Complex Event Processing (CEP)\n  * Solr indexing service\n  * Machine Learning (ML)\n  * XRay WebApp\n  * Storm Topologies (optional)\n\nin one go.\n\n[Nastel XRay](https://www.nastel.com/nastel-xray/) allows you to Track & Trace Transaction and Message Flows, Analyze, Visualize and Report your Big Data.\n",
      "csv_display_name": "Nastel XRay Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel XRay",
      "csv_name": "nastel-xray-operator.v1.325.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:56:22.409000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nastel-xray-operator",
      "provided_apis": [
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRay",
          "plural": "nastelxrays",
          "version": "v1alpha3"
        },
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRayTopology",
          "plural": "nastelxraytopologies",
          "version": "v1alpha3"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:5dc6090cd20acc85a8cc443e903d56b01f062af9d1be0c92790ff68c3cefa2eb",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:5dc6090cd20acc85a8cc443e903d56b01f062af9d1be0c92790ff68c3cefa2eb",
          "name": "xray-operator-5dc6090cd20acc85a8cc443e903d56b01f062af9d1be0c92790ff68c3cefa2eb-annotation"
        },
        {
          "digest": "sha256:5699df0d8daf9084961758d1e86ac2a16c2b16377619c9bedd902692175069eb",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5699df0d8daf9084961758d1e86ac2a16c2b16377619c9bedd902692175069eb",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:5dc6090cd20acc85a8cc443e903d56b01f062af9d1be0c92790ff68c3cefa2eb",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:5dc6090cd20acc85a8cc443e903d56b01f062af9d1be0c92790ff68c3cefa2eb",
          "name": "nastel-xray-operator"
        },
        {
          "digest": "sha256:9e2bd3d35793fca5839f8cc2af268009a165d83dda60ca4f071799cde4687f61",
          "image": "registry.connect.redhat.com/nastel/nastel-ap-domain@sha256:9e2bd3d35793fca5839f8cc2af268009a165d83dda60ca4f071799cde4687f61",
          "name": "domain"
        },
        {
          "digest": "sha256:b24d9afe743570f9d2f5c5ca0a4606ceddfce8f799390346704692bb466cd4d8",
          "image": "registry.connect.redhat.com/nastel/xray-cep@sha256:b24d9afe743570f9d2f5c5ca0a4606ceddfce8f799390346704692bb466cd4d8",
          "name": "cep"
        },
        {
          "digest": "sha256:2064034a0afe4a7808fdd949e7251e333d867ba9b165fe8b830a66d154c3cfa0",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:2064034a0afe4a7808fdd949e7251e333d867ba9b165fe8b830a66d154c3cfa0",
          "name": "ose_cli"
        },
        {
          "digest": "sha256:96099363e389e9658e4e5a1ce87b3620e7eb3f38c54e4bf79cacd8dcb9da9e94",
          "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr@sha256:96099363e389e9658e4e5a1ce87b3620e7eb3f38c54e4bf79cacd8dcb9da9e94",
          "name": "solr_dbapi"
        },
        {
          "digest": "sha256:2fdcab2efa8627b33ae9148b0d14f22171dbbd64ccdf00e0a65e234e3e09d2ae",
          "image": "registry.connect.redhat.com/nastel/xray-ml@sha256:2fdcab2efa8627b33ae9148b0d14f22171dbbd64ccdf00e0a65e234e3e09d2ae",
          "name": "ml"
        },
        {
          "digest": "sha256:be63ea6573626f186a61263e39d0c1353517188f270a850f8c307559f67fc8ba",
          "image": "registry.connect.redhat.com/nastel/xray-ui@sha256:be63ea6573626f186a61263e39d0c1353517188f270a850f8c307559f67fc8ba",
          "name": "xray"
        },
        {
          "digest": "sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "image": "registry.connect.redhat.com/nastel/nastel-activemq@sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "name": "active_mq"
        },
        {
          "digest": "sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "image": "registry.connect.redhat.com/nastel/nastel-zookeeper@sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "name": "zookeeper"
        },
        {
          "digest": "sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "image": "registry.connect.redhat.com/nastel/nastel-solr@sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "name": "solr"
        },
        {
          "digest": "sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "image": "registry.connect.redhat.com/nastel/nastel-storm@sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "name": "storm"
        },
        {
          "digest": "sha256:ecb3a948d1a2e3eac6bfdd6e9eb18b26ddfecd2449d7191f03a1451a18c0f6f3",
          "image": "registry.connect.redhat.com/nastel/xray-storm@sha256:ecb3a948d1a2e3eac6bfdd6e9eb18b26ddfecd2449d7191f03a1451a18c0f6f3",
          "name": "storm_topology"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.325.0",
      "version_original": "1.325.0"
    },
    {
      "_id": "60c1b229e1f052817b72bc3e",
      "alm_examples": [
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRay",
          "metadata": {
            "name": "nastelxray"
          },
          "spec": {
            "active-mq": {
              "image": "registry.connect.redhat.com/nastel/nastel-activemq",
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "1000Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "500Mi"
                }
              },
              "service": {
                "amqpPort": 5672,
                "httpPort": 8161,
                "ingress": {
                  "enabled": true
                },
                "mqttPort": 1883,
                "servicePort": 61616,
                "stopmPort": 61613,
                "type": "ClusterIP",
                "wsPort": 61614
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "ap-domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-ap-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 5440,
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "solr-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "solr-node": {
              "affinity": {},
              "exporter": {
                "configFile": "/opt/solr/contrib/prometheus-exporter/conf/solr-exporter-config.xml",
                "enabled": false,
                "livenessProbe": {
                  "initialDelaySeconds": 20,
                  "periodSeconds": 10
                },
                "podAnnotations": {},
                "port": 9983,
                "readinessProbe": {
                  "initialDelaySeconds": 15,
                  "periodSeconds": 5
                },
                "resources": {},
                "service": {
                  "annotations": {},
                  "type": "ClusterIP"
                },
                "threads": 7,
                "updateStrategy": {}
              },
              "image": {
                "pullPolicy": "Always",
                "repository": "registry.connect.redhat.com/nastel/nastel-solr"
              },
              "javaMem": "-Xms2g -Xmx3g",
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 10
              },
              "logLevel": "INFO",
              "podAnnotations": {},
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "port": 8983,
              "readinessProbe": {
                "initialDelaySeconds": 15,
                "periodSeconds": 5
              },
              "replicaCount": 4,
              "resources": {},
              "service": {
                "annotations": {},
                "ingress": {
                  "enabled": true
                },
                "type": "ClusterIP"
              },
              "terminationGracePeriodSeconds": 180,
              "tls": {
                "caSecret": {
                  "bundlePath": "",
                  "name": ""
                },
                "certSecret": {
                  "certPath": "tls.crt",
                  "keyPath": "tls.key",
                  "name": ""
                },
                "checkPeerName": "false",
                "enabled": false,
                "importKubernetesCA": "false",
                "keystorePassword": "changeit",
                "needClientAuth": "false",
                "wantClientAuth": "false"
              },
              "updateStrategy": {
                "type": "OnDelete"
              },
              "volumeClaimTemplates": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "storageClassName": "ibmc-block-gold",
                "storageSize": "20Gi"
              },
              "zookeeper": {
                "replicaCount": 1
              }
            },
            "xray": {
              "image": "registry.connect.redhat.com/nastel/xray-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "node": {},
                "type": "LoadBalancer"
              }
            },
            "xray-cep": {
              "image": "registry.connect.redhat.com/nastel/xray-cep",
              "init": {
                "dbapi-solr": {
                  "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr"
                },
                "kafka": {
                  "image": "registry.redhat.io/openshift4/ose-cli"
                }
              },
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "LoadBalancer",
                "xRayDataPort": 6580
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-ml-persistance": {
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-file-silver-gid"
              }
            },
            "xray-ml-queries": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-ml-train": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            }
          }
        },
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRayTopology",
          "metadata": {
            "name": "nastelxraytopology"
          },
          "spec": {
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "storm": {
              "enabled": true,
              "fullnameOverride": "storm",
              "name": "storm",
              "nameOverride": "storm",
              "nimbus": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "nimbus",
                  "port": 6627,
                  "type": "ClusterIP"
                }
              },
              "supervisor": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 3,
                "resources": {},
                "service": {
                  "name": "supervisor",
                  "port": 6700
                }
              },
              "ui": {
                "enabled": true,
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": true,
                  "tls": []
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "ui",
                  "port": 8080,
                  "type": "ClusterIP"
                }
              },
              "zookeeper": {
                "enabled": false,
                "fullnameOverride": "storm-keeper",
                "port": 2181,
                "replicaCount": 1,
                "servers": [
                  "storm-keeper"
                ]
              }
            },
            "storm-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-cep": {
              "service": {
                "cepServerPort": 3005,
                "xRayDataPort": 6580
              }
            },
            "xray-storm-topologies": {
              "image": "registry.connect.redhat.com/nastel/xray-storm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "thriftPort": 6627
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/xray-operator-bundle@sha256:9654e6ed07b457b4bd7766bde4227c8e27335215983b1526a23c8f1727ea8aeb",
      "bundle_path_digest": "sha256:9654e6ed07b457b4bd7766bde4227c8e27335215983b1526a23c8f1727ea8aeb",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-10T06:33:13.341000+00:00",
      "csv_description": "The operator deploys Nastel XRay component containers:\n  * Nastel Domain Server\n  * XRay Complex Event Processing (CEP)\n  * Solr indexing service\n  * Machine Learning (ML)\n  * XRay WebApp\n  * Storm Topologies (optional)\n\nin one go.\n\n[Nastel XRay](https://www.nastel.com/nastel-xray/) allows you to Track & Trace Transaction and Message Flows, Analyze, Visualize and Report your Big Data.\n",
      "csv_display_name": "Nastel XRay Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel XRay",
      "csv_name": "nastel-xray-operator.v1.325.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:07:32.731000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "nastel-xray-operator",
      "provided_apis": [
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRay",
          "plural": "nastelxrays",
          "version": "v1alpha3"
        },
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRayTopology",
          "plural": "nastelxraytopologies",
          "version": "v1alpha3"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:5dc6090cd20acc85a8cc443e903d56b01f062af9d1be0c92790ff68c3cefa2eb",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:5dc6090cd20acc85a8cc443e903d56b01f062af9d1be0c92790ff68c3cefa2eb",
          "name": "xray-operator-5dc6090cd20acc85a8cc443e903d56b01f062af9d1be0c92790ff68c3cefa2eb-annotation"
        },
        {
          "digest": "sha256:5699df0d8daf9084961758d1e86ac2a16c2b16377619c9bedd902692175069eb",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5699df0d8daf9084961758d1e86ac2a16c2b16377619c9bedd902692175069eb",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:5dc6090cd20acc85a8cc443e903d56b01f062af9d1be0c92790ff68c3cefa2eb",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:5dc6090cd20acc85a8cc443e903d56b01f062af9d1be0c92790ff68c3cefa2eb",
          "name": "nastel-xray-operator"
        },
        {
          "digest": "sha256:9e2bd3d35793fca5839f8cc2af268009a165d83dda60ca4f071799cde4687f61",
          "image": "registry.connect.redhat.com/nastel/nastel-ap-domain@sha256:9e2bd3d35793fca5839f8cc2af268009a165d83dda60ca4f071799cde4687f61",
          "name": "domain"
        },
        {
          "digest": "sha256:b24d9afe743570f9d2f5c5ca0a4606ceddfce8f799390346704692bb466cd4d8",
          "image": "registry.connect.redhat.com/nastel/xray-cep@sha256:b24d9afe743570f9d2f5c5ca0a4606ceddfce8f799390346704692bb466cd4d8",
          "name": "cep"
        },
        {
          "digest": "sha256:2064034a0afe4a7808fdd949e7251e333d867ba9b165fe8b830a66d154c3cfa0",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:2064034a0afe4a7808fdd949e7251e333d867ba9b165fe8b830a66d154c3cfa0",
          "name": "ose_cli"
        },
        {
          "digest": "sha256:96099363e389e9658e4e5a1ce87b3620e7eb3f38c54e4bf79cacd8dcb9da9e94",
          "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr@sha256:96099363e389e9658e4e5a1ce87b3620e7eb3f38c54e4bf79cacd8dcb9da9e94",
          "name": "solr_dbapi"
        },
        {
          "digest": "sha256:2fdcab2efa8627b33ae9148b0d14f22171dbbd64ccdf00e0a65e234e3e09d2ae",
          "image": "registry.connect.redhat.com/nastel/xray-ml@sha256:2fdcab2efa8627b33ae9148b0d14f22171dbbd64ccdf00e0a65e234e3e09d2ae",
          "name": "ml"
        },
        {
          "digest": "sha256:be63ea6573626f186a61263e39d0c1353517188f270a850f8c307559f67fc8ba",
          "image": "registry.connect.redhat.com/nastel/xray-ui@sha256:be63ea6573626f186a61263e39d0c1353517188f270a850f8c307559f67fc8ba",
          "name": "xray"
        },
        {
          "digest": "sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "image": "registry.connect.redhat.com/nastel/nastel-activemq@sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "name": "active_mq"
        },
        {
          "digest": "sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "image": "registry.connect.redhat.com/nastel/nastel-zookeeper@sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "name": "zookeeper"
        },
        {
          "digest": "sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "image": "registry.connect.redhat.com/nastel/nastel-solr@sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "name": "solr"
        },
        {
          "digest": "sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "image": "registry.connect.redhat.com/nastel/nastel-storm@sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "name": "storm"
        },
        {
          "digest": "sha256:ecb3a948d1a2e3eac6bfdd6e9eb18b26ddfecd2449d7191f03a1451a18c0f6f3",
          "image": "registry.connect.redhat.com/nastel/xray-storm@sha256:ecb3a948d1a2e3eac6bfdd6e9eb18b26ddfecd2449d7191f03a1451a18c0f6f3",
          "name": "storm_topology"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.325.0",
      "version_original": "1.325.0"
    },
    {
      "_id": "60c1b261ba99c76846ab4a53",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:c20625e1364f7ccdd95d36fbed3a21ac131a092a56e0a0447dfc5af3e06e543b",
      "bundle_path_digest": "sha256:c20625e1364f7ccdd95d36fbed3a21ac131a092a56e0a0447dfc5af3e06e543b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.15",
      "creation_date": "2021-06-10T06:34:09.465000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.15.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:46:51.969000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:48b3a1f162ace3388159d2e858f00aef8ca9755f1ef328bb77ffd37d71df07e4",
          "image": "quay.io/tigera/operator@sha256:48b3a1f162ace3388159d2e858f00aef8ca9755f1ef328bb77ffd37d71df07e4",
          "name": "operator-48b3a1f162ace3388159d2e858f00aef8ca9755f1ef328bb77ffd37d71df07e4-annotation"
        },
        {
          "digest": "sha256:48b3a1f162ace3388159d2e858f00aef8ca9755f1ef328bb77ffd37d71df07e4",
          "image": "quay.io/tigera/operator@sha256:48b3a1f162ace3388159d2e858f00aef8ca9755f1ef328bb77ffd37d71df07e4",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.15.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.15.2",
      "version_original": "1.15.2"
    },
    {
      "_id": "60c1b278adf15566a5a97bc1",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:f2a043445e12b0d6ad88fa003eaf58f3c53cc6ae0d57038976ec2b029d9be8e4",
      "bundle_path_digest": "sha256:f2a043445e12b0d6ad88fa003eaf58f3c53cc6ae0d57038976ec2b029d9be8e4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-10T06:34:32.927000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100200.12",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:01:32.009000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "navigator-operator-8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3-annotation"
        },
        {
          "digest": "sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "name": "domain"
        },
        {
          "digest": "sha256:6793dfc67e8f79629124975bda8ff5666ffaf5d6e2b8cbcecd7cfa740aa0ed24",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:6793dfc67e8f79629124975bda8ff5666ffaf5d6e2b8cbcecd7cfa740aa0ed24",
          "name": "cm"
        },
        {
          "digest": "sha256:c6d3302d446ab7be53c4fabe12406c87023c6a5c59c40831b1f110b076cb0b08",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:c6d3302d446ab7be53c4fabe12406c87023c6a5c59c40831b1f110b076cb0b08",
          "name": "wgs"
        },
        {
          "digest": "sha256:7e8894a54d55db35e281c0323030dfe5225fdda3838e33966cdadbc7b116a4fb",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:7e8894a54d55db35e281c0323030dfe5225fdda3838e33966cdadbc7b116a4fb",
          "name": "navigator"
        },
        {
          "digest": "sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "name": "mysql"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.100200.12",
      "version_original": "1.100200.12"
    },
    {
      "_id": "60c1b2e7adf15566a5a97bc2",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:f2a043445e12b0d6ad88fa003eaf58f3c53cc6ae0d57038976ec2b029d9be8e4",
      "bundle_path_digest": "sha256:f2a043445e12b0d6ad88fa003eaf58f3c53cc6ae0d57038976ec2b029d9be8e4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-10T06:36:23.220000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100200.12",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:03:20.278000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "navigator-operator-8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3-annotation"
        },
        {
          "digest": "sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "name": "domain"
        },
        {
          "digest": "sha256:6793dfc67e8f79629124975bda8ff5666ffaf5d6e2b8cbcecd7cfa740aa0ed24",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:6793dfc67e8f79629124975bda8ff5666ffaf5d6e2b8cbcecd7cfa740aa0ed24",
          "name": "cm"
        },
        {
          "digest": "sha256:c6d3302d446ab7be53c4fabe12406c87023c6a5c59c40831b1f110b076cb0b08",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:c6d3302d446ab7be53c4fabe12406c87023c6a5c59c40831b1f110b076cb0b08",
          "name": "wgs"
        },
        {
          "digest": "sha256:7e8894a54d55db35e281c0323030dfe5225fdda3838e33966cdadbc7b116a4fb",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:7e8894a54d55db35e281c0323030dfe5225fdda3838e33966cdadbc7b116a4fb",
          "name": "navigator"
        },
        {
          "digest": "sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "name": "mysql"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.100200.12",
      "version_original": "1.100200.12"
    },
    {
      "_id": "60c1b2edba99c76846ab4a54",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:c20625e1364f7ccdd95d36fbed3a21ac131a092a56e0a0447dfc5af3e06e543b",
      "bundle_path_digest": "sha256:c20625e1364f7ccdd95d36fbed3a21ac131a092a56e0a0447dfc5af3e06e543b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.15",
      "creation_date": "2021-06-10T06:36:29.278000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.15.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T00:51:42.312000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:48b3a1f162ace3388159d2e858f00aef8ca9755f1ef328bb77ffd37d71df07e4",
          "image": "quay.io/tigera/operator@sha256:48b3a1f162ace3388159d2e858f00aef8ca9755f1ef328bb77ffd37d71df07e4",
          "name": "operator-48b3a1f162ace3388159d2e858f00aef8ca9755f1ef328bb77ffd37d71df07e4-annotation"
        },
        {
          "digest": "sha256:48b3a1f162ace3388159d2e858f00aef8ca9755f1ef328bb77ffd37d71df07e4",
          "image": "quay.io/tigera/operator@sha256:48b3a1f162ace3388159d2e858f00aef8ca9755f1ef328bb77ffd37d71df07e4",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.15.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.15.2",
      "version_original": "1.15.2"
    },
    {
      "_id": "60c1b318ba99c76846ab4a55",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:f2a043445e12b0d6ad88fa003eaf58f3c53cc6ae0d57038976ec2b029d9be8e4",
      "bundle_path_digest": "sha256:f2a043445e12b0d6ad88fa003eaf58f3c53cc6ae0d57038976ec2b029d9be8e4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-10T06:37:12.759000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100200.12",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:11:26.449000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "navigator-operator-8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3-annotation"
        },
        {
          "digest": "sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "name": "domain"
        },
        {
          "digest": "sha256:6793dfc67e8f79629124975bda8ff5666ffaf5d6e2b8cbcecd7cfa740aa0ed24",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:6793dfc67e8f79629124975bda8ff5666ffaf5d6e2b8cbcecd7cfa740aa0ed24",
          "name": "cm"
        },
        {
          "digest": "sha256:c6d3302d446ab7be53c4fabe12406c87023c6a5c59c40831b1f110b076cb0b08",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:c6d3302d446ab7be53c4fabe12406c87023c6a5c59c40831b1f110b076cb0b08",
          "name": "wgs"
        },
        {
          "digest": "sha256:7e8894a54d55db35e281c0323030dfe5225fdda3838e33966cdadbc7b116a4fb",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:7e8894a54d55db35e281c0323030dfe5225fdda3838e33966cdadbc7b116a4fb",
          "name": "navigator"
        },
        {
          "digest": "sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "name": "mysql"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.100200.12",
      "version_original": "1.100200.12"
    },
    {
      "_id": "60c1b35eba99c76846ab4a56",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:f2a043445e12b0d6ad88fa003eaf58f3c53cc6ae0d57038976ec2b029d9be8e4",
      "bundle_path_digest": "sha256:f2a043445e12b0d6ad88fa003eaf58f3c53cc6ae0d57038976ec2b029d9be8e4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-10T06:38:22.981000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100200.12",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:03:30.076000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "navigator-operator-8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3-annotation"
        },
        {
          "digest": "sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "name": "domain"
        },
        {
          "digest": "sha256:6793dfc67e8f79629124975bda8ff5666ffaf5d6e2b8cbcecd7cfa740aa0ed24",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:6793dfc67e8f79629124975bda8ff5666ffaf5d6e2b8cbcecd7cfa740aa0ed24",
          "name": "cm"
        },
        {
          "digest": "sha256:c6d3302d446ab7be53c4fabe12406c87023c6a5c59c40831b1f110b076cb0b08",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:c6d3302d446ab7be53c4fabe12406c87023c6a5c59c40831b1f110b076cb0b08",
          "name": "wgs"
        },
        {
          "digest": "sha256:7e8894a54d55db35e281c0323030dfe5225fdda3838e33966cdadbc7b116a4fb",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:7e8894a54d55db35e281c0323030dfe5225fdda3838e33966cdadbc7b116a4fb",
          "name": "navigator"
        },
        {
          "digest": "sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "name": "mysql"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.100200.12",
      "version_original": "1.100200.12"
    },
    {
      "_id": "60c1b37be1f052817b72bc3f",
      "alm_examples": [
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRay",
          "metadata": {
            "name": "nastelxray"
          },
          "spec": {
            "active-mq": {
              "image": "registry.connect.redhat.com/nastel/nastel-activemq",
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "1000Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "500Mi"
                }
              },
              "service": {
                "amqpPort": 5672,
                "httpPort": 8161,
                "ingress": {
                  "enabled": true
                },
                "mqttPort": 1883,
                "servicePort": 61616,
                "stopmPort": 61613,
                "type": "ClusterIP",
                "wsPort": 61614
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "ap-domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-ap-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 5440,
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "solr-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "solr-node": {
              "affinity": {},
              "exporter": {
                "configFile": "/opt/solr/contrib/prometheus-exporter/conf/solr-exporter-config.xml",
                "enabled": false,
                "livenessProbe": {
                  "initialDelaySeconds": 20,
                  "periodSeconds": 10
                },
                "podAnnotations": {},
                "port": 9983,
                "readinessProbe": {
                  "initialDelaySeconds": 15,
                  "periodSeconds": 5
                },
                "resources": {},
                "service": {
                  "annotations": {},
                  "type": "ClusterIP"
                },
                "threads": 7,
                "updateStrategy": {}
              },
              "image": {
                "pullPolicy": "Always",
                "repository": "registry.connect.redhat.com/nastel/nastel-solr"
              },
              "javaMem": "-Xms2g -Xmx3g",
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 10
              },
              "logLevel": "INFO",
              "podAnnotations": {},
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "port": 8983,
              "readinessProbe": {
                "initialDelaySeconds": 15,
                "periodSeconds": 5
              },
              "replicaCount": 4,
              "resources": {},
              "service": {
                "annotations": {},
                "ingress": {
                  "enabled": true
                },
                "type": "ClusterIP"
              },
              "terminationGracePeriodSeconds": 180,
              "tls": {
                "caSecret": {
                  "bundlePath": "",
                  "name": ""
                },
                "certSecret": {
                  "certPath": "tls.crt",
                  "keyPath": "tls.key",
                  "name": ""
                },
                "checkPeerName": "false",
                "enabled": false,
                "importKubernetesCA": "false",
                "keystorePassword": "changeit",
                "needClientAuth": "false",
                "wantClientAuth": "false"
              },
              "updateStrategy": {
                "type": "OnDelete"
              },
              "volumeClaimTemplates": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "storageClassName": "ibmc-block-gold",
                "storageSize": "20Gi"
              },
              "zookeeper": {
                "replicaCount": 1
              }
            },
            "xray": {
              "image": "registry.connect.redhat.com/nastel/xray-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "node": {},
                "type": "LoadBalancer"
              }
            },
            "xray-cep": {
              "image": "registry.connect.redhat.com/nastel/xray-cep",
              "init": {
                "dbapi-solr": {
                  "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr"
                },
                "kafka": {
                  "image": "registry.redhat.io/openshift4/ose-cli"
                }
              },
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "LoadBalancer",
                "xRayDataPort": 6580
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-ml-persistance": {
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-file-silver-gid"
              }
            },
            "xray-ml-queries": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-ml-train": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            }
          }
        },
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRayTopology",
          "metadata": {
            "name": "nastelxraytopology"
          },
          "spec": {
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "storm": {
              "enabled": true,
              "fullnameOverride": "storm",
              "name": "storm",
              "nameOverride": "storm",
              "nimbus": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "nimbus",
                  "port": 6627,
                  "type": "ClusterIP"
                }
              },
              "supervisor": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 3,
                "resources": {},
                "service": {
                  "name": "supervisor",
                  "port": 6700
                }
              },
              "ui": {
                "enabled": true,
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": true,
                  "tls": []
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "ui",
                  "port": 8080,
                  "type": "ClusterIP"
                }
              },
              "zookeeper": {
                "enabled": false,
                "fullnameOverride": "storm-keeper",
                "port": 2181,
                "replicaCount": 1,
                "servers": [
                  "storm-keeper"
                ]
              }
            },
            "storm-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-cep": {
              "service": {
                "cepServerPort": 3005,
                "xRayDataPort": 6580
              }
            },
            "xray-storm-topologies": {
              "image": "registry.connect.redhat.com/nastel/xray-storm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "thriftPort": 6627
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/xray-operator-bundle@sha256:9654e6ed07b457b4bd7766bde4227c8e27335215983b1526a23c8f1727ea8aeb",
      "bundle_path_digest": "sha256:9654e6ed07b457b4bd7766bde4227c8e27335215983b1526a23c8f1727ea8aeb",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-10T06:38:51.390000+00:00",
      "csv_description": "The operator deploys Nastel XRay component containers:\n  * Nastel Domain Server\n  * XRay Complex Event Processing (CEP)\n  * Solr indexing service\n  * Machine Learning (ML)\n  * XRay WebApp\n  * Storm Topologies (optional)\n\nin one go.\n\n[Nastel XRay](https://www.nastel.com/nastel-xray/) allows you to Track & Trace Transaction and Message Flows, Analyze, Visualize and Report your Big Data.\n",
      "csv_display_name": "Nastel XRay Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel XRay",
      "csv_name": "nastel-xray-operator.v1.325.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:03:05.581000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "nastel-xray-operator",
      "provided_apis": [
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRayTopology",
          "plural": "nastelxraytopologies",
          "version": "v1alpha3"
        },
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRay",
          "plural": "nastelxrays",
          "version": "v1alpha3"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:5dc6090cd20acc85a8cc443e903d56b01f062af9d1be0c92790ff68c3cefa2eb",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:5dc6090cd20acc85a8cc443e903d56b01f062af9d1be0c92790ff68c3cefa2eb",
          "name": "xray-operator-5dc6090cd20acc85a8cc443e903d56b01f062af9d1be0c92790ff68c3cefa2eb-annotation"
        },
        {
          "digest": "sha256:5699df0d8daf9084961758d1e86ac2a16c2b16377619c9bedd902692175069eb",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5699df0d8daf9084961758d1e86ac2a16c2b16377619c9bedd902692175069eb",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:5dc6090cd20acc85a8cc443e903d56b01f062af9d1be0c92790ff68c3cefa2eb",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:5dc6090cd20acc85a8cc443e903d56b01f062af9d1be0c92790ff68c3cefa2eb",
          "name": "nastel-xray-operator"
        },
        {
          "digest": "sha256:9e2bd3d35793fca5839f8cc2af268009a165d83dda60ca4f071799cde4687f61",
          "image": "registry.connect.redhat.com/nastel/nastel-ap-domain@sha256:9e2bd3d35793fca5839f8cc2af268009a165d83dda60ca4f071799cde4687f61",
          "name": "domain"
        },
        {
          "digest": "sha256:b24d9afe743570f9d2f5c5ca0a4606ceddfce8f799390346704692bb466cd4d8",
          "image": "registry.connect.redhat.com/nastel/xray-cep@sha256:b24d9afe743570f9d2f5c5ca0a4606ceddfce8f799390346704692bb466cd4d8",
          "name": "cep"
        },
        {
          "digest": "sha256:2064034a0afe4a7808fdd949e7251e333d867ba9b165fe8b830a66d154c3cfa0",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:2064034a0afe4a7808fdd949e7251e333d867ba9b165fe8b830a66d154c3cfa0",
          "name": "ose_cli"
        },
        {
          "digest": "sha256:96099363e389e9658e4e5a1ce87b3620e7eb3f38c54e4bf79cacd8dcb9da9e94",
          "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr@sha256:96099363e389e9658e4e5a1ce87b3620e7eb3f38c54e4bf79cacd8dcb9da9e94",
          "name": "solr_dbapi"
        },
        {
          "digest": "sha256:2fdcab2efa8627b33ae9148b0d14f22171dbbd64ccdf00e0a65e234e3e09d2ae",
          "image": "registry.connect.redhat.com/nastel/xray-ml@sha256:2fdcab2efa8627b33ae9148b0d14f22171dbbd64ccdf00e0a65e234e3e09d2ae",
          "name": "ml"
        },
        {
          "digest": "sha256:be63ea6573626f186a61263e39d0c1353517188f270a850f8c307559f67fc8ba",
          "image": "registry.connect.redhat.com/nastel/xray-ui@sha256:be63ea6573626f186a61263e39d0c1353517188f270a850f8c307559f67fc8ba",
          "name": "xray"
        },
        {
          "digest": "sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "image": "registry.connect.redhat.com/nastel/nastel-activemq@sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "name": "active_mq"
        },
        {
          "digest": "sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "image": "registry.connect.redhat.com/nastel/nastel-zookeeper@sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "name": "zookeeper"
        },
        {
          "digest": "sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "image": "registry.connect.redhat.com/nastel/nastel-solr@sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "name": "solr"
        },
        {
          "digest": "sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "image": "registry.connect.redhat.com/nastel/nastel-storm@sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "name": "storm"
        },
        {
          "digest": "sha256:ecb3a948d1a2e3eac6bfdd6e9eb18b26ddfecd2449d7191f03a1451a18c0f6f3",
          "image": "registry.connect.redhat.com/nastel/xray-storm@sha256:ecb3a948d1a2e3eac6bfdd6e9eb18b26ddfecd2449d7191f03a1451a18c0f6f3",
          "name": "storm_topology"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.325.0",
      "version_original": "1.325.0"
    },
    {
      "_id": "60c1b398233d5ea79c3083c2",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:c20625e1364f7ccdd95d36fbed3a21ac131a092a56e0a0447dfc5af3e06e543b",
      "bundle_path_digest": "sha256:c20625e1364f7ccdd95d36fbed3a21ac131a092a56e0a0447dfc5af3e06e543b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.15",
      "creation_date": "2021-06-10T06:39:20.377000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.15.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T00:58:28.715000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:48b3a1f162ace3388159d2e858f00aef8ca9755f1ef328bb77ffd37d71df07e4",
          "image": "quay.io/tigera/operator@sha256:48b3a1f162ace3388159d2e858f00aef8ca9755f1ef328bb77ffd37d71df07e4",
          "name": "operator-48b3a1f162ace3388159d2e858f00aef8ca9755f1ef328bb77ffd37d71df07e4-annotation"
        },
        {
          "digest": "sha256:48b3a1f162ace3388159d2e858f00aef8ca9755f1ef328bb77ffd37d71df07e4",
          "image": "quay.io/tigera/operator@sha256:48b3a1f162ace3388159d2e858f00aef8ca9755f1ef328bb77ffd37d71df07e4",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.15.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.15.2",
      "version_original": "1.15.2"
    },
    {
      "_id": "60c1ba87adf15566a5a97bc7",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:9ef728f5811b602cc6648b7cd7e83ea28b3df7b49e4e58fc52cb8a2e88d8160a",
      "bundle_path_digest": "sha256:9ef728f5811b602cc6648b7cd7e83ea28b3df7b49e4e58fc52cb8a2e88d8160a",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.17",
      "creation_date": "2021-06-10T07:08:55.850000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.17.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:17:15.729000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:c90489c91dd6c98669d6b35b02a54ab2bcf56caed19a9f5a011c4eec05f63788",
          "image": "quay.io/tigera/operator@sha256:c90489c91dd6c98669d6b35b02a54ab2bcf56caed19a9f5a011c4eec05f63788",
          "name": "operator-c90489c91dd6c98669d6b35b02a54ab2bcf56caed19a9f5a011c4eec05f63788-annotation"
        },
        {
          "digest": "sha256:c90489c91dd6c98669d6b35b02a54ab2bcf56caed19a9f5a011c4eec05f63788",
          "image": "quay.io/tigera/operator@sha256:c90489c91dd6c98669d6b35b02a54ab2bcf56caed19a9f5a011c4eec05f63788",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.17.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.17.2",
      "version_original": "1.17.2"
    },
    {
      "_id": "60c1bb1aadf15566a5a97bc8",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:9ef728f5811b602cc6648b7cd7e83ea28b3df7b49e4e58fc52cb8a2e88d8160a",
      "bundle_path_digest": "sha256:9ef728f5811b602cc6648b7cd7e83ea28b3df7b49e4e58fc52cb8a2e88d8160a",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.17",
      "creation_date": "2021-06-10T07:11:22.270000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.17.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:52:37.473000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:c90489c91dd6c98669d6b35b02a54ab2bcf56caed19a9f5a011c4eec05f63788",
          "image": "quay.io/tigera/operator@sha256:c90489c91dd6c98669d6b35b02a54ab2bcf56caed19a9f5a011c4eec05f63788",
          "name": "operator-c90489c91dd6c98669d6b35b02a54ab2bcf56caed19a9f5a011c4eec05f63788-annotation"
        },
        {
          "digest": "sha256:c90489c91dd6c98669d6b35b02a54ab2bcf56caed19a9f5a011c4eec05f63788",
          "image": "quay.io/tigera/operator@sha256:c90489c91dd6c98669d6b35b02a54ab2bcf56caed19a9f5a011c4eec05f63788",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.17.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.17.2",
      "version_original": "1.17.2"
    },
    {
      "_id": "60c1c8c4adf15566a5a97bc9",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:9ef728f5811b602cc6648b7cd7e83ea28b3df7b49e4e58fc52cb8a2e88d8160a",
      "bundle_path_digest": "sha256:9ef728f5811b602cc6648b7cd7e83ea28b3df7b49e4e58fc52cb8a2e88d8160a",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.17",
      "creation_date": "2021-06-10T08:09:40.904000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.17.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T00:57:34.953000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:c90489c91dd6c98669d6b35b02a54ab2bcf56caed19a9f5a011c4eec05f63788",
          "image": "quay.io/tigera/operator@sha256:c90489c91dd6c98669d6b35b02a54ab2bcf56caed19a9f5a011c4eec05f63788",
          "name": "operator-c90489c91dd6c98669d6b35b02a54ab2bcf56caed19a9f5a011c4eec05f63788-annotation"
        },
        {
          "digest": "sha256:c90489c91dd6c98669d6b35b02a54ab2bcf56caed19a9f5a011c4eec05f63788",
          "image": "quay.io/tigera/operator@sha256:c90489c91dd6c98669d6b35b02a54ab2bcf56caed19a9f5a011c4eec05f63788",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.17.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.17.2",
      "version_original": "1.17.2"
    },
    {
      "_id": "60c22a1cba99c76846ab4a91",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/runai/runai-operator@sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "bundle_path_digest": "sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "fast",
      "creation_date": "2021-06-10T15:05:00.245000+00:00",
      "csv_description": "Run:AI is a cloud-native compute management platform for the AI era. Run:AI gives data scientists access to all of the pooled compute power they need to accelerate AI development and deployment - whether on-premises or in the cloud. The platform provides IT and MLOps with real-time visibility and control over scheduling and dynamic provisioning of GPUs to deliver more than 2X gains in utilization of existing GPU infrastructure. Built on Kubernetes, Run:AI enables seamless integration with existing IT and data science workflows. More at www.run.ai.",
      "csv_display_name": "Run:AI",
      "csv_metadata_description": "",
      "csv_name": "installkit-customer.v2.0.15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:25:35.958000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "installkit-customer",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "image": "gcr.io/runai-openshift/operator@sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "name": "operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.1.5",
      "version_original": "2.1.5"
    },
    {
      "_id": "60c22a94e1f052817b72bcd0",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/runai/runai-operator@sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "bundle_path_digest": "sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-10T15:07:00.878000+00:00",
      "csv_description": "Run:AI is a cloud-native compute management platform for the AI era. Run:AI gives data scientists access to all of the pooled compute power they need to accelerate AI development and deployment - whether on-premises or in the cloud. The platform provides IT and MLOps with real-time visibility and control over scheduling and dynamic provisioning of GPUs to deliver more than 2X gains in utilization of existing GPU infrastructure. Built on Kubernetes, Run:AI enables seamless integration with existing IT and data science workflows. More at www.run.ai.",
      "csv_display_name": "Run:AI",
      "csv_metadata_description": "",
      "csv_name": "installkit-customer.v2.0.15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:53:02.950000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "installkit-customer",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "image": "gcr.io/runai-openshift/operator@sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "name": "operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.1.5",
      "version_original": "2.1.5"
    },
    {
      "_id": "60c22accadf15566a5a97d14",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/runai/runai-operator@sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "bundle_path_digest": "sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "fast",
      "creation_date": "2021-06-10T15:07:56.344000+00:00",
      "csv_description": "Run:AI is a cloud-native compute management platform for the AI era. Run:AI gives data scientists access to all of the pooled compute power they need to accelerate AI development and deployment - whether on-premises or in the cloud. The platform provides IT and MLOps with real-time visibility and control over scheduling and dynamic provisioning of GPUs to deliver more than 2X gains in utilization of existing GPU infrastructure. Built on Kubernetes, Run:AI enables seamless integration with existing IT and data science workflows. More at www.run.ai.",
      "csv_display_name": "Run:AI",
      "csv_metadata_description": "",
      "csv_name": "installkit-customer.v2.0.15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T16:41:05.388000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "installkit-customer",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "image": "gcr.io/runai-openshift/operator@sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "name": "operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.1.5",
      "version_original": "2.1.5"
    },
    {
      "_id": "60c22ad0adf15566a5a97d15",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/runai/runai-operator@sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "bundle_path_digest": "sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "preview",
      "creation_date": "2021-06-10T15:08:00.909000+00:00",
      "csv_description": "Run:AI is a cloud-native compute management platform for the AI era. Run:AI gives data scientists access to all of the pooled compute power they need to accelerate AI development and deployment - whether on-premises or in the cloud. The platform provides IT and MLOps with real-time visibility and control over scheduling and dynamic provisioning of GPUs to deliver more than 2X gains in utilization of existing GPU infrastructure. Built on Kubernetes, Run:AI enables seamless integration with existing IT and data science workflows. More at www.run.ai.",
      "csv_display_name": "Run:AI",
      "csv_metadata_description": "",
      "csv_name": "installkit-customer.v2.0.15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T16:40:43.767000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "installkit-customer",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "image": "gcr.io/runai-openshift/operator@sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "name": "operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.1.5",
      "version_original": "2.1.5"
    },
    {
      "_id": "60c22b10adf15566a5a97d16",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/runai/runai-operator@sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "bundle_path_digest": "sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "preview",
      "creation_date": "2021-06-10T15:09:04.450000+00:00",
      "csv_description": "Run:AI is a cloud-native compute management platform for the AI era. Run:AI gives data scientists access to all of the pooled compute power they need to accelerate AI development and deployment - whether on-premises or in the cloud. The platform provides IT and MLOps with real-time visibility and control over scheduling and dynamic provisioning of GPUs to deliver more than 2X gains in utilization of existing GPU infrastructure. Built on Kubernetes, Run:AI enables seamless integration with existing IT and data science workflows. More at www.run.ai.",
      "csv_display_name": "Run:AI",
      "csv_metadata_description": "",
      "csv_name": "installkit-customer.v2.0.15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:01:22.656000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "installkit-customer",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "image": "gcr.io/runai-openshift/operator@sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "name": "operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.1.5",
      "version_original": "2.1.5"
    },
    {
      "_id": "60c22b9ae1f052817b72bcd1",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/runai/runai-operator@sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "bundle_path_digest": "sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-10T15:11:22.590000+00:00",
      "csv_description": "Run:AI is a cloud-native compute management platform for the AI era. Run:AI gives data scientists access to all of the pooled compute power they need to accelerate AI development and deployment - whether on-premises or in the cloud. The platform provides IT and MLOps with real-time visibility and control over scheduling and dynamic provisioning of GPUs to deliver more than 2X gains in utilization of existing GPU infrastructure. Built on Kubernetes, Run:AI enables seamless integration with existing IT and data science workflows. More at www.run.ai.",
      "csv_display_name": "Run:AI",
      "csv_metadata_description": "",
      "csv_name": "installkit-customer.v2.0.15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:11:35.942000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "installkit-customer",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "image": "gcr.io/runai-openshift/operator@sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "name": "operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.1.5",
      "version_original": "2.1.5"
    },
    {
      "_id": "60c24659ba99c76846ab4ade",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:a6556aa2775319e5518f8aed255bdec24f7cb1ed9ab93748d3e5b59c9d5ed306",
      "bundle_path_digest": "sha256:a6556aa2775319e5518f8aed255bdec24f7cb1ed9ab93748d3e5b59c9d5ed306",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.15",
      "creation_date": "2021-06-10T17:05:29.951000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.15.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:23:12.776000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847",
          "image": "quay.io/tigera/operator@sha256:030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847",
          "name": "operator-030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847-annotation"
        },
        {
          "digest": "sha256:030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847",
          "image": "quay.io/tigera/operator@sha256:030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.15.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.15.3",
      "version_original": "1.15.3"
    },
    {
      "_id": "60c246cf233d5ea79c308518",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:a6556aa2775319e5518f8aed255bdec24f7cb1ed9ab93748d3e5b59c9d5ed306",
      "bundle_path_digest": "sha256:a6556aa2775319e5518f8aed255bdec24f7cb1ed9ab93748d3e5b59c9d5ed306",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.15",
      "creation_date": "2021-06-10T17:07:27.530000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.15.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:28:27.559000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847",
          "image": "quay.io/tigera/operator@sha256:030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847",
          "name": "operator-030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847-annotation"
        },
        {
          "digest": "sha256:030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847",
          "image": "quay.io/tigera/operator@sha256:030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.15.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.15.3",
      "version_original": "1.15.3"
    },
    {
      "_id": "60c24797e1f052817b72bd2d",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:a6556aa2775319e5518f8aed255bdec24f7cb1ed9ab93748d3e5b59c9d5ed306",
      "bundle_path_digest": "sha256:a6556aa2775319e5518f8aed255bdec24f7cb1ed9ab93748d3e5b59c9d5ed306",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.15",
      "creation_date": "2021-06-10T17:10:47.536000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.15.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:05:12.189000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847",
          "image": "quay.io/tigera/operator@sha256:030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847",
          "name": "operator-030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847-annotation"
        },
        {
          "digest": "sha256:030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847",
          "image": "quay.io/tigera/operator@sha256:030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.15.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.15.3",
      "version_original": "1.15.3"
    },
    {
      "_id": "60c24de3ba99c76846ab4b4b",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:9ee5b5d0929502d609cc8fb5267293432f6b8963ce1187810d84979be2cb5edd",
      "bundle_path_digest": "sha256:9ee5b5d0929502d609cc8fb5267293432f6b8963ce1187810d84979be2cb5edd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.17",
      "creation_date": "2021-06-10T17:37:39.680000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.17.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:07:14.242000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d",
          "image": "quay.io/tigera/operator@sha256:4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d",
          "name": "operator-4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d-annotation"
        },
        {
          "digest": "sha256:4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d",
          "image": "quay.io/tigera/operator@sha256:4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.17.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.17.3",
      "version_original": "1.17.3"
    },
    {
      "_id": "60c24e02adf15566a5a97d5c",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:27b53a6972c5accc17d20770828d782bcf6a76432b2231fd8fd4aef41919c8de",
      "bundle_path_digest": "sha256:27b53a6972c5accc17d20770828d782bcf6a76432b2231fd8fd4aef41919c8de",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-10T17:38:10.380000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:12:54.656000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "image": "quay.io/tigera/operator@sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "name": "operator-6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8-annotation"
        },
        {
          "digest": "sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "image": "quay.io/tigera/operator@sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.13.3",
      "version_original": "1.13.3"
    },
    {
      "_id": "60c24e32ba99c76846ab4b52",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:9ee5b5d0929502d609cc8fb5267293432f6b8963ce1187810d84979be2cb5edd",
      "bundle_path_digest": "sha256:9ee5b5d0929502d609cc8fb5267293432f6b8963ce1187810d84979be2cb5edd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.17",
      "creation_date": "2021-06-10T17:38:58.303000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.17.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:59:55.664000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d",
          "image": "quay.io/tigera/operator@sha256:4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d",
          "name": "operator-4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d-annotation"
        },
        {
          "digest": "sha256:4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d",
          "image": "quay.io/tigera/operator@sha256:4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.17.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.17.3",
      "version_original": "1.17.3"
    },
    {
      "_id": "60c24e56adf15566a5a97d60",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:27b53a6972c5accc17d20770828d782bcf6a76432b2231fd8fd4aef41919c8de",
      "bundle_path_digest": "sha256:27b53a6972c5accc17d20770828d782bcf6a76432b2231fd8fd4aef41919c8de",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-10T17:39:34.329000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:11:32.215000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "image": "quay.io/tigera/operator@sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "name": "operator-6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8-annotation"
        },
        {
          "digest": "sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "image": "quay.io/tigera/operator@sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.13.3",
      "version_original": "1.13.3"
    },
    {
      "_id": "60c24e59ba99c76846ab4b53",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:9ee5b5d0929502d609cc8fb5267293432f6b8963ce1187810d84979be2cb5edd",
      "bundle_path_digest": "sha256:9ee5b5d0929502d609cc8fb5267293432f6b8963ce1187810d84979be2cb5edd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.17",
      "creation_date": "2021-06-10T17:39:37.829000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.17.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:19:08.063000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d",
          "image": "quay.io/tigera/operator@sha256:4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d",
          "name": "operator-4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d-annotation"
        },
        {
          "digest": "sha256:4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d",
          "image": "quay.io/tigera/operator@sha256:4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.17.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.17.3",
      "version_original": "1.17.3"
    },
    {
      "_id": "60c374e247c96fe63ef4c4b0",
      "alm_examples": [
        {
          "api_version": "nvmesh.excelero.com/v1",
          "kind": "NVMesh",
          "metadata": {
            "name": "cluster1"
          },
          "spec": {
            "core": {
              "azureOptimized": true,
              "version": "2.2.1"
            },
            "csi": {
              "controllerReplicas": 1,
              "version": "v1.1.4-7"
            },
            "management": {
              "mongoDB": {
                "replicas": 1
              },
              "replicas": 1,
              "version": "2.2.1-1"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/excelero/nvmesh-operator-bundle@sha256:31d2c78ff1afd16b0e5db2cee34d8cb325c61bcf2f6c0f0fccff7899e97548d9",
      "bundle_path_digest": "sha256:31d2c78ff1afd16b0e5db2cee34d8cb325c61bcf2f6c0f0fccff7899e97548d9",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "beta",
      "creation_date": "2021-06-11T14:36:18.059000+00:00",
      "csv_description": "Excelero NVMesh is a low-latency distributed block storage solution providing web-scale applications access to hot data in any cloud, private or public. NVMesh enables pooling and sharing NVMe across any network. It drives both local and distributed file systems. The solution features an intelligent management layer that abstracts underlying hardware with CPU offload, creates logical volumes with redundancy and provides centralized, intelligent management and monitoring. Applications can enjoy the latency, throughput and IO/s of local NVMe devices with the convenience of centralized storage while avoiding proprietary hardware lock-in and reducing the overall storage TCO. In public cloud environments, NVMesh supports instances, both virtualized and containerized, that feature NVMe drives. Public cloud instances with local NVMe drives have become widely available allowing easy transition between on-premises and public cloud deployments of NVMesh.\n\nExcelero NVMesh has a flexible distributed data protection architecture providing multiple redundancy schemes that can be tuned for specific use cases and data center restrictions and requirements to ensure reliability and to reduce cost. The system can also work around failure to strive for maximal data availability. In NVMesh, drives are perceived as resources that are pooled into a large storage area. Logical volumes are then carved out of the storage area and presented to clients as block devices. Volumes may span multiple physical drives and target hosts, but do not need to use entire drives, so a single drive can be allocated to multiple volumes.\n\nVolumes can be configured in any of the following redundancy levels:\n\n**Concatenated** \u2013 Data is laid out on a single or multiple drives with no data redundancy. This volume type can be used for applications requiring temporary storage. Failures are typically isolated to a single device or host.\n\n**Striped** \u2013 Data is laid out across a set of drives and hosts with no data redundancy. This volume type can be used for applications requiring high performance temporary storage.\n\n**Mirrored** \u2013 Data is protected by mirroring data across drive segments. To increase data availability, the drive segments are allocated from drives on different target hosts. These hosts should be connected to different power supplies, preferably in separate upgrade zones and availability zones and any other zoning used to protect against risk. The software\u2019s management layer provides the agility to ensure such separation. Multi-way, active-active multipath networking is used for availability and for performance.\n\n**Striped** and Mirrored \u2013 Data is protected by mirroring data across drive segments and striping across these mirrors. Data is serviced from many drives and hosts, achieving high performance without sacrificing redundancy.\n\nFor details on licensing, support and usage under Red Hat OpenShift please access [https://www.excelero.com/openshift](https://www.excelero.com/openshift)\n",
      "csv_display_name": "NVMesh Operator",
      "csv_metadata_description": "NVMesh Operator enables users to install Excelero NVMesh on Kubernetes and OpenShift clusters",
      "csv_name": "nvmesh-operator.0.7.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:53:32.610000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "nvmesh-operator",
      "provided_apis": [
        {
          "group": "nvmesh.excelero.com",
          "kind": "NVMesh",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:dcbf50781a1beda4cdb88a6706a1ad190118274c58b30f5c65db52e550a2852d",
          "image": "registry.connect.redhat.com/excelero/nvmesh-operator@sha256:dcbf50781a1beda4cdb88a6706a1ad190118274c58b30f5c65db52e550a2852d",
          "name": "nvmesh-operator-dcbf50781a1beda4cdb88a6706a1ad190118274c58b30f5c65db52e550a2852d-annotation"
        },
        {
          "digest": "sha256:dcbf50781a1beda4cdb88a6706a1ad190118274c58b30f5c65db52e550a2852d",
          "image": "registry.connect.redhat.com/excelero/nvmesh-operator@sha256:dcbf50781a1beda4cdb88a6706a1ad190118274c58b30f5c65db52e550a2852d",
          "name": "controller"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.7.0-48",
      "version_original": "0.7.0-48"
    },
    {
      "_id": "60c38317102db8eff44130c5",
      "alm_examples": [
        {
          "api_version": "nvmesh.excelero.com/v1",
          "kind": "NVMesh",
          "metadata": {
            "name": "cluster1"
          },
          "spec": {
            "core": {
              "azureOptimized": true,
              "version": "2.2.1"
            },
            "csi": {
              "controllerReplicas": 1,
              "version": "v1.1.4-7"
            },
            "management": {
              "mongoDB": {
                "replicas": 1
              },
              "replicas": 1,
              "version": "2.2.1-1"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/excelero/nvmesh-operator-bundle@sha256:31d2c78ff1afd16b0e5db2cee34d8cb325c61bcf2f6c0f0fccff7899e97548d9",
      "bundle_path_digest": "sha256:31d2c78ff1afd16b0e5db2cee34d8cb325c61bcf2f6c0f0fccff7899e97548d9",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "beta",
      "creation_date": "2021-06-11T15:36:55.761000+00:00",
      "csv_description": "Excelero NVMesh is a low-latency distributed block storage solution providing web-scale applications access to hot data in any cloud, private or public. NVMesh enables pooling and sharing NVMe across any network. It drives both local and distributed file systems. The solution features an intelligent management layer that abstracts underlying hardware with CPU offload, creates logical volumes with redundancy and provides centralized, intelligent management and monitoring. Applications can enjoy the latency, throughput and IO/s of local NVMe devices with the convenience of centralized storage while avoiding proprietary hardware lock-in and reducing the overall storage TCO. In public cloud environments, NVMesh supports instances, both virtualized and containerized, that feature NVMe drives. Public cloud instances with local NVMe drives have become widely available allowing easy transition between on-premises and public cloud deployments of NVMesh.\n\nExcelero NVMesh has a flexible distributed data protection architecture providing multiple redundancy schemes that can be tuned for specific use cases and data center restrictions and requirements to ensure reliability and to reduce cost. The system can also work around failure to strive for maximal data availability. In NVMesh, drives are perceived as resources that are pooled into a large storage area. Logical volumes are then carved out of the storage area and presented to clients as block devices. Volumes may span multiple physical drives and target hosts, but do not need to use entire drives, so a single drive can be allocated to multiple volumes.\n\nVolumes can be configured in any of the following redundancy levels:\n\n**Concatenated** \u2013 Data is laid out on a single or multiple drives with no data redundancy. This volume type can be used for applications requiring temporary storage. Failures are typically isolated to a single device or host.\n\n**Striped** \u2013 Data is laid out across a set of drives and hosts with no data redundancy. This volume type can be used for applications requiring high performance temporary storage.\n\n**Mirrored** \u2013 Data is protected by mirroring data across drive segments. To increase data availability, the drive segments are allocated from drives on different target hosts. These hosts should be connected to different power supplies, preferably in separate upgrade zones and availability zones and any other zoning used to protect against risk. The software\u2019s management layer provides the agility to ensure such separation. Multi-way, active-active multipath networking is used for availability and for performance.\n\n**Striped** and Mirrored \u2013 Data is protected by mirroring data across drive segments and striping across these mirrors. Data is serviced from many drives and hosts, achieving high performance without sacrificing redundancy.\n\nFor details on licensing, support and usage under Red Hat OpenShift please access [https://www.excelero.com/openshift](https://www.excelero.com/openshift)\n",
      "csv_display_name": "NVMesh Operator",
      "csv_metadata_description": "NVMesh Operator enables users to install Excelero NVMesh on Kubernetes and OpenShift clusters",
      "csv_name": "nvmesh-operator.0.7.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:47:39.365000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "nvmesh-operator",
      "provided_apis": [
        {
          "group": "nvmesh.excelero.com",
          "kind": "NVMesh",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:dcbf50781a1beda4cdb88a6706a1ad190118274c58b30f5c65db52e550a2852d",
          "image": "registry.connect.redhat.com/excelero/nvmesh-operator@sha256:dcbf50781a1beda4cdb88a6706a1ad190118274c58b30f5c65db52e550a2852d",
          "name": "nvmesh-operator-dcbf50781a1beda4cdb88a6706a1ad190118274c58b30f5c65db52e550a2852d-annotation"
        },
        {
          "digest": "sha256:dcbf50781a1beda4cdb88a6706a1ad190118274c58b30f5c65db52e550a2852d",
          "image": "registry.connect.redhat.com/excelero/nvmesh-operator@sha256:dcbf50781a1beda4cdb88a6706a1ad190118274c58b30f5c65db52e550a2852d",
          "name": "controller"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.7.0-48",
      "version_original": "0.7.0-48"
    },
    {
      "_id": "60c3982347c96fe63ef4c4c4",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:59d4aaee1dbaf11f12c7ce24380ed029610799af0367b6efaedfa6ff34bfb24a",
      "bundle_path_digest": "sha256:59d4aaee1dbaf11f12c7ce24380ed029610799af0367b6efaedfa6ff34bfb24a",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.15",
      "creation_date": "2021-06-11T17:06:43.134000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.15.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:11:11.279000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96",
          "image": "quay.io/tigera/operator@sha256:8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96",
          "name": "operator-8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96-annotation"
        },
        {
          "digest": "sha256:8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96",
          "image": "quay.io/tigera/operator@sha256:8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.15.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.15.4",
      "version_original": "1.15.4"
    },
    {
      "_id": "60c39ed66819538376be264f",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:59d4aaee1dbaf11f12c7ce24380ed029610799af0367b6efaedfa6ff34bfb24a",
      "bundle_path_digest": "sha256:59d4aaee1dbaf11f12c7ce24380ed029610799af0367b6efaedfa6ff34bfb24a",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.15",
      "creation_date": "2021-06-11T17:35:18.033000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.15.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:10:46.261000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96",
          "image": "quay.io/tigera/operator@sha256:8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96",
          "name": "operator-8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96-annotation"
        },
        {
          "digest": "sha256:8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96",
          "image": "quay.io/tigera/operator@sha256:8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.15.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.15.4",
      "version_original": "1.15.4"
    },
    {
      "_id": "60c39f1f6819538376be2650",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:3cac2148e9dbefb6a8c7142c9692098f279d8d196a6254161dffbd9ad1634f2e",
      "bundle_path_digest": "sha256:3cac2148e9dbefb6a8c7142c9692098f279d8d196a6254161dffbd9ad1634f2e",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.17",
      "creation_date": "2021-06-11T17:36:31.127000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.17.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:11:46.998000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61",
          "image": "quay.io/tigera/operator@sha256:e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61",
          "name": "operator-e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61-annotation"
        },
        {
          "digest": "sha256:e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61",
          "image": "quay.io/tigera/operator@sha256:e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.17.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.17.4",
      "version_original": "1.17.4"
    },
    {
      "_id": "60c39fbdcea799d7301bec42",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:3cac2148e9dbefb6a8c7142c9692098f279d8d196a6254161dffbd9ad1634f2e",
      "bundle_path_digest": "sha256:3cac2148e9dbefb6a8c7142c9692098f279d8d196a6254161dffbd9ad1634f2e",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.17",
      "creation_date": "2021-06-11T17:39:09.637000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.17.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:01:12.455000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61",
          "image": "quay.io/tigera/operator@sha256:e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61",
          "name": "operator-e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61-annotation"
        },
        {
          "digest": "sha256:e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61",
          "image": "quay.io/tigera/operator@sha256:e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.17.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.17.4",
      "version_original": "1.17.4"
    },
    {
      "_id": "60c39fda102db8eff44130d2",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:59d4aaee1dbaf11f12c7ce24380ed029610799af0367b6efaedfa6ff34bfb24a",
      "bundle_path_digest": "sha256:59d4aaee1dbaf11f12c7ce24380ed029610799af0367b6efaedfa6ff34bfb24a",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.15",
      "creation_date": "2021-06-11T17:39:38.969000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.15.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T00:55:46.766000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96",
          "image": "quay.io/tigera/operator@sha256:8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96",
          "name": "operator-8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96-annotation"
        },
        {
          "digest": "sha256:8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96",
          "image": "quay.io/tigera/operator@sha256:8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.15.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.15.4",
      "version_original": "1.15.4"
    },
    {
      "_id": "60c3a012cea799d7301bec43",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:3cac2148e9dbefb6a8c7142c9692098f279d8d196a6254161dffbd9ad1634f2e",
      "bundle_path_digest": "sha256:3cac2148e9dbefb6a8c7142c9692098f279d8d196a6254161dffbd9ad1634f2e",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.17",
      "creation_date": "2021-06-11T17:40:34.634000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.17.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:08:55.825000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61",
          "image": "quay.io/tigera/operator@sha256:e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61",
          "name": "operator-e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61-annotation"
        },
        {
          "digest": "sha256:e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61",
          "image": "quay.io/tigera/operator@sha256:e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.17.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.17.4",
      "version_original": "1.17.4"
    },
    {
      "_id": "60c3d7f647c96fe63ef4c4ce",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:27b53a6972c5accc17d20770828d782bcf6a76432b2231fd8fd4aef41919c8de",
      "bundle_path_digest": "sha256:27b53a6972c5accc17d20770828d782bcf6a76432b2231fd8fd4aef41919c8de",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-11T21:39:02.309000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:07:54.157000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "image": "quay.io/tigera/operator@sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "name": "operator-6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8-annotation"
        },
        {
          "digest": "sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "image": "quay.io/tigera/operator@sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.13.3",
      "version_original": "1.13.3"
    },
    {
      "_id": "60c3de0c102db8eff44130d5",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:24dcf20c56686336983ff099e526f20a8350154e6da2d117ceafb136d8a34d51",
      "bundle_path_digest": "sha256:24dcf20c56686336983ff099e526f20a8350154e6da2d117ceafb136d8a34d51",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-11T22:05:00.409000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:49:54.202000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:309358ba7634183b7c18506c46634202a88b3c790937ef1fbdf8ab0a7218c935",
          "image": "quay.io/tigera/operator@sha256:309358ba7634183b7c18506c46634202a88b3c790937ef1fbdf8ab0a7218c935",
          "name": "operator-309358ba7634183b7c18506c46634202a88b3c790937ef1fbdf8ab0a7218c935-annotation"
        },
        {
          "digest": "sha256:309358ba7634183b7c18506c46634202a88b3c790937ef1fbdf8ab0a7218c935",
          "image": "quay.io/tigera/operator@sha256:309358ba7634183b7c18506c46634202a88b3c790937ef1fbdf8ab0a7218c935",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.13.0",
      "version_original": "1.13.0"
    },
    {
      "_id": "60c415d4102db8eff44130dd",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:4a1252b44e037c8965f5f2fd98585cbdd4a0516a7f9e059c12af10ee3a5ddd83",
      "bundle_path_digest": "sha256:4a1252b44e037c8965f5f2fd98585cbdd4a0516a7f9e059c12af10ee3a5ddd83",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-12T02:03:00.369000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:14:25.807000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:6e7d248a30c34204e6df445f03d61b7855bd9f188181b2abf68972da97aebde4",
          "image": "quay.io/tigera/operator@sha256:6e7d248a30c34204e6df445f03d61b7855bd9f188181b2abf68972da97aebde4",
          "name": "operator-6e7d248a30c34204e6df445f03d61b7855bd9f188181b2abf68972da97aebde4-annotation"
        },
        {
          "digest": "sha256:6e7d248a30c34204e6df445f03d61b7855bd9f188181b2abf68972da97aebde4",
          "image": "quay.io/tigera/operator@sha256:6e7d248a30c34204e6df445f03d61b7855bd9f188181b2abf68972da97aebde4",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.13.2",
      "version_original": "1.13.2"
    },
    {
      "_id": "60c415db6819538376be2673",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:27b53a6972c5accc17d20770828d782bcf6a76432b2231fd8fd4aef41919c8de",
      "bundle_path_digest": "sha256:27b53a6972c5accc17d20770828d782bcf6a76432b2231fd8fd4aef41919c8de",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-12T02:03:07.403000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:50:11.975000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "image": "quay.io/tigera/operator@sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "name": "operator-6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8-annotation"
        },
        {
          "digest": "sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "image": "quay.io/tigera/operator@sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.13.3",
      "version_original": "1.13.3"
    },
    {
      "_id": "60c4173047c96fe63ef4c4d9",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:48cea9ecdf166e21be9d179c629c531d27f75552d126a7a421ae1b844652dcc6",
      "bundle_path_digest": "sha256:48cea9ecdf166e21be9d179c629c531d27f75552d126a7a421ae1b844652dcc6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-12T02:08:48.034000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:54:07.946000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:098d1a2d1adc475743daab6b9a936c4c1be37b93d66fa2afbcc2957c224bdf57",
          "image": "quay.io/tigera/operator@sha256:098d1a2d1adc475743daab6b9a936c4c1be37b93d66fa2afbcc2957c224bdf57",
          "name": "operator-098d1a2d1adc475743daab6b9a936c4c1be37b93d66fa2afbcc2957c224bdf57-annotation"
        },
        {
          "digest": "sha256:098d1a2d1adc475743daab6b9a936c4c1be37b93d66fa2afbcc2957c224bdf57",
          "image": "quay.io/tigera/operator@sha256:098d1a2d1adc475743daab6b9a936c4c1be37b93d66fa2afbcc2957c224bdf57",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.13.1",
      "version_original": "1.13.1"
    },
    {
      "_id": "60c4a27b47c96fe63ef4c4e7",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:98242d7e3d34eb8d812a492b8f3f1b2ca47bff8f4dbe6b6005a587d020fe0e52",
      "bundle_path_digest": "sha256:98242d7e3d34eb8d812a492b8f3f1b2ca47bff8f4dbe6b6005a587d020fe0e52",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-12T12:03:07.485000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100200.13",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:16:41.076000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "navigator-operator-8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3-annotation"
        },
        {
          "digest": "sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "name": "domain"
        },
        {
          "digest": "sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "name": "cm"
        },
        {
          "digest": "sha256:5521d96c82370708b7bdd96143a70fded1e073ded24a7eb1082d6971890ec8d1",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:5521d96c82370708b7bdd96143a70fded1e073ded24a7eb1082d6971890ec8d1",
          "name": "wgs"
        },
        {
          "digest": "sha256:7e8894a54d55db35e281c0323030dfe5225fdda3838e33966cdadbc7b116a4fb",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:7e8894a54d55db35e281c0323030dfe5225fdda3838e33966cdadbc7b116a4fb",
          "name": "navigator"
        },
        {
          "digest": "sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "name": "mysql"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.100200.13",
      "version_original": "1.100200.13"
    },
    {
      "_id": "60c4a3d9cea799d7301bec5c",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:98242d7e3d34eb8d812a492b8f3f1b2ca47bff8f4dbe6b6005a587d020fe0e52",
      "bundle_path_digest": "sha256:98242d7e3d34eb8d812a492b8f3f1b2ca47bff8f4dbe6b6005a587d020fe0e52",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-12T12:08:57.665000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100200.13",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:58:23.259000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "navigator-operator-8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3-annotation"
        },
        {
          "digest": "sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "name": "domain"
        },
        {
          "digest": "sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "name": "cm"
        },
        {
          "digest": "sha256:5521d96c82370708b7bdd96143a70fded1e073ded24a7eb1082d6971890ec8d1",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:5521d96c82370708b7bdd96143a70fded1e073ded24a7eb1082d6971890ec8d1",
          "name": "wgs"
        },
        {
          "digest": "sha256:7e8894a54d55db35e281c0323030dfe5225fdda3838e33966cdadbc7b116a4fb",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:7e8894a54d55db35e281c0323030dfe5225fdda3838e33966cdadbc7b116a4fb",
          "name": "navigator"
        },
        {
          "digest": "sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "name": "mysql"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.100200.13",
      "version_original": "1.100200.13"
    },
    {
      "_id": "60c4a414cea799d7301bec5d",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:98242d7e3d34eb8d812a492b8f3f1b2ca47bff8f4dbe6b6005a587d020fe0e52",
      "bundle_path_digest": "sha256:98242d7e3d34eb8d812a492b8f3f1b2ca47bff8f4dbe6b6005a587d020fe0e52",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-12T12:09:56.146000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100200.13",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:06:14.134000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "navigator-operator-8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3-annotation"
        },
        {
          "digest": "sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "name": "domain"
        },
        {
          "digest": "sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "name": "cm"
        },
        {
          "digest": "sha256:5521d96c82370708b7bdd96143a70fded1e073ded24a7eb1082d6971890ec8d1",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:5521d96c82370708b7bdd96143a70fded1e073ded24a7eb1082d6971890ec8d1",
          "name": "wgs"
        },
        {
          "digest": "sha256:7e8894a54d55db35e281c0323030dfe5225fdda3838e33966cdadbc7b116a4fb",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:7e8894a54d55db35e281c0323030dfe5225fdda3838e33966cdadbc7b116a4fb",
          "name": "navigator"
        },
        {
          "digest": "sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "name": "mysql"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.100200.13",
      "version_original": "1.100200.13"
    },
    {
      "_id": "60c4aa55cea799d7301bec5e",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:98242d7e3d34eb8d812a492b8f3f1b2ca47bff8f4dbe6b6005a587d020fe0e52",
      "bundle_path_digest": "sha256:98242d7e3d34eb8d812a492b8f3f1b2ca47bff8f4dbe6b6005a587d020fe0e52",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-12T12:36:37.777000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100200.13",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:04:35.881000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "navigator-operator-8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3-annotation"
        },
        {
          "digest": "sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "name": "domain"
        },
        {
          "digest": "sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "name": "cm"
        },
        {
          "digest": "sha256:5521d96c82370708b7bdd96143a70fded1e073ded24a7eb1082d6971890ec8d1",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:5521d96c82370708b7bdd96143a70fded1e073ded24a7eb1082d6971890ec8d1",
          "name": "wgs"
        },
        {
          "digest": "sha256:7e8894a54d55db35e281c0323030dfe5225fdda3838e33966cdadbc7b116a4fb",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:7e8894a54d55db35e281c0323030dfe5225fdda3838e33966cdadbc7b116a4fb",
          "name": "navigator"
        },
        {
          "digest": "sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "name": "mysql"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.100200.13",
      "version_original": "1.100200.13"
    },
    {
      "_id": "60c7f58347c96fe63ef4ca20",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:f4a4dd85a542527a6c7768d6c4a68079e2414d794e736027c8362040259739dd",
      "bundle_path_digest": "sha256:f4a4dd85a542527a6c7768d6c4a68079e2414d794e736027c8362040259739dd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-15T00:34:11.811000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:00:30.883000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "image": "quay.io/tigera/operator@sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "name": "operator-d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66-annotation"
        },
        {
          "digest": "sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "image": "quay.io/tigera/operator@sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.13.4",
      "version_original": "1.13.4"
    },
    {
      "_id": "60c7f66acea799d7301bf24b",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:f4a4dd85a542527a6c7768d6c4a68079e2414d794e736027c8362040259739dd",
      "bundle_path_digest": "sha256:f4a4dd85a542527a6c7768d6c4a68079e2414d794e736027c8362040259739dd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-15T00:38:02.555000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T00:57:10.397000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "image": "quay.io/tigera/operator@sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "name": "operator-d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66-annotation"
        },
        {
          "digest": "sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "image": "quay.io/tigera/operator@sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.13.4",
      "version_original": "1.13.4"
    },
    {
      "_id": "60c7f7336819538376be28be",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:f4a4dd85a542527a6c7768d6c4a68079e2414d794e736027c8362040259739dd",
      "bundle_path_digest": "sha256:f4a4dd85a542527a6c7768d6c4a68079e2414d794e736027c8362040259739dd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-15T00:41:23.612000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:30:07.815000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "image": "quay.io/tigera/operator@sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "name": "operator-d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66-annotation"
        },
        {
          "digest": "sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "image": "quay.io/tigera/operator@sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.13.4",
      "version_original": "1.13.4"
    },
    {
      "_id": "60c803eb102db8eff441327d",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:f4a4dd85a542527a6c7768d6c4a68079e2414d794e736027c8362040259739dd",
      "bundle_path_digest": "sha256:f4a4dd85a542527a6c7768d6c4a68079e2414d794e736027c8362040259739dd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-15T01:35:39.646000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:10:51.958000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "image": "quay.io/tigera/operator@sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "name": "operator-d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66-annotation"
        },
        {
          "digest": "sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "image": "quay.io/tigera/operator@sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.13.4",
      "version_original": "1.13.4"
    },
    {
      "_id": "60c8437b47c96fe63ef4cef1",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme"
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:b8ac62cfe07d974c7140d1a594047bc796760c0546dfcd56e83805a434c5f871",
      "bundle_path_digest": "sha256:b8ac62cfe07d974c7140d1a594047bc796760c0546dfcd56e83805a434c5f871",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-15T06:06:51.360000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://cloud.ibm.com/docs/services/Cloudant?topic=Cloudant-apache-couchdb-operator)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v1.4.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:07:20.672000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.4.4",
      "version_original": "1.4.4"
    },
    {
      "_id": "60c8443147c96fe63ef4cef2",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme"
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:b8ac62cfe07d974c7140d1a594047bc796760c0546dfcd56e83805a434c5f871",
      "bundle_path_digest": "sha256:b8ac62cfe07d974c7140d1a594047bc796760c0546dfcd56e83805a434c5f871",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v1.4",
      "creation_date": "2021-06-15T06:09:53.848000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://cloud.ibm.com/docs/services/Cloudant?topic=Cloudant-apache-couchdb-operator)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v1.4.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:21:10.480000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.4.4",
      "version_original": "1.4.4"
    },
    {
      "_id": "60c8444fcea799d7301bf9ad",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme"
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:b8ac62cfe07d974c7140d1a594047bc796760c0546dfcd56e83805a434c5f871",
      "bundle_path_digest": "sha256:b8ac62cfe07d974c7140d1a594047bc796760c0546dfcd56e83805a434c5f871",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v1.4",
      "creation_date": "2021-06-15T06:10:23.678000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://cloud.ibm.com/docs/services/Cloudant?topic=Cloudant-apache-couchdb-operator)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v1.4.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:48:49.540000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.4.4",
      "version_original": "1.4.4"
    },
    {
      "_id": "60c94ef81e47f18b44877e57",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:000bfd00ee565fa58b562c7ef97058677a1ade9e987ae60f6b20dd95804fd3d9",
      "bundle_path_digest": "sha256:000bfd00ee565fa58b562c7ef97058677a1ade9e987ae60f6b20dd95804fd3d9",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-16T01:08:08.822000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:21:04.602000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1",
          "image": "quay.io/tigera/operator@sha256:ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1",
          "name": "operator-ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1-annotation"
        },
        {
          "digest": "sha256:ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1",
          "image": "quay.io/tigera/operator@sha256:ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.5",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.13.5",
      "version_original": "1.13.5"
    },
    {
      "_id": "60c94f8948e99376f66308ee",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:000bfd00ee565fa58b562c7ef97058677a1ade9e987ae60f6b20dd95804fd3d9",
      "bundle_path_digest": "sha256:000bfd00ee565fa58b562c7ef97058677a1ade9e987ae60f6b20dd95804fd3d9",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-16T01:10:33.359000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:59:48.465000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1",
          "image": "quay.io/tigera/operator@sha256:ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1",
          "name": "operator-ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1-annotation"
        },
        {
          "digest": "sha256:ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1",
          "image": "quay.io/tigera/operator@sha256:ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.5",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.13.5",
      "version_original": "1.13.5"
    },
    {
      "_id": "60c94f9948e99376f66308ef",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:000bfd00ee565fa58b562c7ef97058677a1ade9e987ae60f6b20dd95804fd3d9",
      "bundle_path_digest": "sha256:000bfd00ee565fa58b562c7ef97058677a1ade9e987ae60f6b20dd95804fd3d9",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-16T01:10:49.804000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:24:11.617000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1",
          "image": "quay.io/tigera/operator@sha256:ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1",
          "name": "operator-ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1-annotation"
        },
        {
          "digest": "sha256:ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1",
          "image": "quay.io/tigera/operator@sha256:ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.5",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.13.5",
      "version_original": "1.13.5"
    },
    {
      "_id": "60c9a9cf2ec20576b977fc25",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:aa9d2bf965b948b63984c559222951341ce834047cbc43a4fce597b14541ec2c",
      "bundle_path_digest": "sha256:aa9d2bf965b948b63984c559222951341ce834047cbc43a4fce597b14541ec2c",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-16T07:35:43.539000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:07:04.857000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87",
          "image": "quay.io/tigera/operator@sha256:da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87",
          "name": "operator-da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87-annotation"
        },
        {
          "digest": "sha256:da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87",
          "image": "quay.io/tigera/operator@sha256:da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.6",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.13.6",
      "version_original": "1.13.6"
    },
    {
      "_id": "60c9a9ef1e47f18b44877e5b",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:aa9d2bf965b948b63984c559222951341ce834047cbc43a4fce597b14541ec2c",
      "bundle_path_digest": "sha256:aa9d2bf965b948b63984c559222951341ce834047cbc43a4fce597b14541ec2c",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-16T07:36:15.021000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:55:28.954000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87",
          "image": "quay.io/tigera/operator@sha256:da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87",
          "name": "operator-da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87-annotation"
        },
        {
          "digest": "sha256:da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87",
          "image": "quay.io/tigera/operator@sha256:da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.6",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.13.6",
      "version_original": "1.13.6"
    },
    {
      "_id": "60c9ab282ec20576b977fc26",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:aa9d2bf965b948b63984c559222951341ce834047cbc43a4fce597b14541ec2c",
      "bundle_path_digest": "sha256:aa9d2bf965b948b63984c559222951341ce834047cbc43a4fce597b14541ec2c",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-16T07:41:28.863000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:10:05.649000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87",
          "image": "quay.io/tigera/operator@sha256:da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87",
          "name": "operator-da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87-annotation"
        },
        {
          "digest": "sha256:da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87",
          "image": "quay.io/tigera/operator@sha256:da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.6",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.13.6",
      "version_original": "1.13.6"
    },
    {
      "_id": "60ca1a1e73de3533cd9400c3",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "dcgmExporter": {
              "affinity": {},
              "image": "dcgm-exporter",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.dcgm-exporter": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:8af02463a8b60b21202d0bf69bc1ee0bb12f684fa367f903d138df6cacc2d0ac"
            },
            "devicePlugin": {
              "affinity": {},
              "args": [],
              "env": [
                {
                  "name": "PASS_DEVICE_SPECS",
                  "value": "true"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                },
                {
                  "name": "DEVICE_LIST_STRATEGY",
                  "value": "envvar"
                },
                {
                  "name": "DEVICE_ID_STRATEGY",
                  "value": "uuid"
                },
                {
                  "name": "NVIDIA_VISIBLE_DEVICES",
                  "value": "all"
                },
                {
                  "name": "NVIDIA_DRIVER_CAPABILITIES",
                  "value": "all"
                }
              ],
              "image": "k8s-device-plugin",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.device-plugin": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05"
            },
            "driver": {
              "affinity": {},
              "enabled": true,
              "image": "driver",
              "imagePullSecrets": [],
              "licensingConfig": {
                "configMapName": ""
              },
              "nodeSelector": {
                "nvidia.com/gpu.deploy.driver": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repoConfig": {
                "configMapName": "",
                "destinationDir": ""
              },
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:09ba3eca64a80fab010a9fcd647a2675260272a8c3eb515dfed6dc38a2d31ead"
            },
            "gfd": {
              "affinity": {},
              "env": [
                {
                  "name": "GFD_SLEEP_INTERVAL",
                  "value": "60s"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                }
              ],
              "image": "gpu-feature-discovery",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.gpu-feature-discovery": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f"
            },
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "affinity": {},
              "enabled": true,
              "env": [
                {
                  "name": "WITH_REBOOT",
                  "value": "false"
                }
              ],
              "image": "k8s-mig-manager",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.mig-manager": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:495ed3b42e0541590c537ab1b33bda772aad530d3ef6a4f9384d3741a59e2bf8"
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {
                "image": "cuda",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia",
                "version": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce"
              }
            },
            "toolkit": {
              "affinity": {},
              "enabled": true,
              "image": "container-toolkit",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.container-toolkit": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:ffa284f1f359d70f0e1d6d8e7752d7c92ef7445b0d74965a8682775de37febf8"
            },
            "validator": {
              "affinity": {},
              "env": [
                {
                  "name": "WITH_WORKLOAD",
                  "value": "true"
                }
              ],
              "image": "gpu-operator-validator",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.operator-validator": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:aa1f7bd526ae132c46f3ebe6ecfabe675889e240776ccc2155e31e0c48cc659e"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:cfe7d0a44fd39d3b273f05167ecb156dab0b8383e6931372258007f8b077fe44",
      "bundle_path_digest": "sha256:cfe7d0a44fd39d3b273f05167ecb156dab0b8383e6931372258007f8b077fe44",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.7",
      "creation_date": "2021-06-16T15:34:54.499000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/kubernetes/openshift-on-gpu-install-guide/index.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.7.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:02:30.425000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3a812cf113f416baca9262fa8423f36141f35696eb6e7a51a7abb40f5ccd5f8c",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:3a812cf113f416baca9262fa8423f36141f35696eb6e7a51a7abb40f5ccd5f8c",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:8af02463a8b60b21202d0bf69bc1ee0bb12f684fa367f903d138df6cacc2d0ac",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:8af02463a8b60b21202d0bf69bc1ee0bb12f684fa367f903d138df6cacc2d0ac",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:ffa284f1f359d70f0e1d6d8e7752d7c92ef7445b0d74965a8682775de37febf8",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:ffa284f1f359d70f0e1d6d8e7752d7c92ef7445b0d74965a8682775de37febf8",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:09ba3eca64a80fab010a9fcd647a2675260272a8c3eb515dfed6dc38a2d31ead",
          "image": "nvcr.io/nvidia/driver@sha256:09ba3eca64a80fab010a9fcd647a2675260272a8c3eb515dfed6dc38a2d31ead",
          "name": "driver-image"
        },
        {
          "digest": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:495ed3b42e0541590c537ab1b33bda772aad530d3ef6a4f9384d3741a59e2bf8",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:495ed3b42e0541590c537ab1b33bda772aad530d3ef6a4f9384d3741a59e2bf8",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "image": "nvcr.io/nvidia/cuda@sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:aa1f7bd526ae132c46f3ebe6ecfabe675889e240776ccc2155e31e0c48cc659e",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:aa1f7bd526ae132c46f3ebe6ecfabe675889e240776ccc2155e31e0c48cc659e",
          "name": "gpu-operator-validator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.7.1",
      "version_original": "1.7.1"
    },
    {
      "_id": "60ca1b922ec20576b977fd5a",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "dcgmExporter": {
              "affinity": {},
              "image": "dcgm-exporter",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.dcgm-exporter": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:8af02463a8b60b21202d0bf69bc1ee0bb12f684fa367f903d138df6cacc2d0ac"
            },
            "devicePlugin": {
              "affinity": {},
              "args": [],
              "env": [
                {
                  "name": "PASS_DEVICE_SPECS",
                  "value": "true"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                },
                {
                  "name": "DEVICE_LIST_STRATEGY",
                  "value": "envvar"
                },
                {
                  "name": "DEVICE_ID_STRATEGY",
                  "value": "uuid"
                },
                {
                  "name": "NVIDIA_VISIBLE_DEVICES",
                  "value": "all"
                },
                {
                  "name": "NVIDIA_DRIVER_CAPABILITIES",
                  "value": "all"
                }
              ],
              "image": "k8s-device-plugin",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.device-plugin": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05"
            },
            "driver": {
              "affinity": {},
              "enabled": true,
              "image": "driver",
              "imagePullSecrets": [],
              "licensingConfig": {
                "configMapName": ""
              },
              "nodeSelector": {
                "nvidia.com/gpu.deploy.driver": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repoConfig": {
                "configMapName": "",
                "destinationDir": ""
              },
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:09ba3eca64a80fab010a9fcd647a2675260272a8c3eb515dfed6dc38a2d31ead"
            },
            "gfd": {
              "affinity": {},
              "env": [
                {
                  "name": "GFD_SLEEP_INTERVAL",
                  "value": "60s"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                }
              ],
              "image": "gpu-feature-discovery",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.gpu-feature-discovery": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f"
            },
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "affinity": {},
              "enabled": true,
              "env": [
                {
                  "name": "WITH_REBOOT",
                  "value": "false"
                }
              ],
              "image": "k8s-mig-manager",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.mig-manager": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:495ed3b42e0541590c537ab1b33bda772aad530d3ef6a4f9384d3741a59e2bf8"
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {
                "image": "cuda",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia",
                "version": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce"
              }
            },
            "toolkit": {
              "affinity": {},
              "enabled": true,
              "image": "container-toolkit",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.container-toolkit": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:ffa284f1f359d70f0e1d6d8e7752d7c92ef7445b0d74965a8682775de37febf8"
            },
            "validator": {
              "affinity": {},
              "env": [
                {
                  "name": "WITH_WORKLOAD",
                  "value": "true"
                }
              ],
              "image": "gpu-operator-validator",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.operator-validator": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:aa1f7bd526ae132c46f3ebe6ecfabe675889e240776ccc2155e31e0c48cc659e"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:cfe7d0a44fd39d3b273f05167ecb156dab0b8383e6931372258007f8b077fe44",
      "bundle_path_digest": "sha256:cfe7d0a44fd39d3b273f05167ecb156dab0b8383e6931372258007f8b077fe44",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.7",
      "creation_date": "2021-06-16T15:41:06.614000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/kubernetes/openshift-on-gpu-install-guide/index.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.7.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:01:35.706000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3a812cf113f416baca9262fa8423f36141f35696eb6e7a51a7abb40f5ccd5f8c",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:3a812cf113f416baca9262fa8423f36141f35696eb6e7a51a7abb40f5ccd5f8c",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:8af02463a8b60b21202d0bf69bc1ee0bb12f684fa367f903d138df6cacc2d0ac",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:8af02463a8b60b21202d0bf69bc1ee0bb12f684fa367f903d138df6cacc2d0ac",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:ffa284f1f359d70f0e1d6d8e7752d7c92ef7445b0d74965a8682775de37febf8",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:ffa284f1f359d70f0e1d6d8e7752d7c92ef7445b0d74965a8682775de37febf8",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:09ba3eca64a80fab010a9fcd647a2675260272a8c3eb515dfed6dc38a2d31ead",
          "image": "nvcr.io/nvidia/driver@sha256:09ba3eca64a80fab010a9fcd647a2675260272a8c3eb515dfed6dc38a2d31ead",
          "name": "driver-image"
        },
        {
          "digest": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:495ed3b42e0541590c537ab1b33bda772aad530d3ef6a4f9384d3741a59e2bf8",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:495ed3b42e0541590c537ab1b33bda772aad530d3ef6a4f9384d3741a59e2bf8",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "image": "nvcr.io/nvidia/cuda@sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:aa1f7bd526ae132c46f3ebe6ecfabe675889e240776ccc2155e31e0c48cc659e",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:aa1f7bd526ae132c46f3ebe6ecfabe675889e240776ccc2155e31e0c48cc659e",
          "name": "gpu-operator-validator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.7.1",
      "version_original": "1.7.1"
    },
    {
      "_id": "60ca2f3e2ec20576b977fe2d",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:2f9ae23e5d031fbb99d4dd7981de0c94a084b3264833dfd5b0e270ead872d624",
      "bundle_path_digest": "sha256:2f9ae23e5d031fbb99d4dd7981de0c94a084b3264833dfd5b0e270ead872d624",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-16T17:05:02.108000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:06:52.190000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f",
          "image": "quay.io/tigera/operator@sha256:35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f",
          "name": "operator-35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f-annotation"
        },
        {
          "digest": "sha256:35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f",
          "image": "quay.io/tigera/operator@sha256:35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.7",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.13.7",
      "version_original": "1.13.7"
    },
    {
      "_id": "60ca30762ec20576b977fe2e",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:2f9ae23e5d031fbb99d4dd7981de0c94a084b3264833dfd5b0e270ead872d624",
      "bundle_path_digest": "sha256:2f9ae23e5d031fbb99d4dd7981de0c94a084b3264833dfd5b0e270ead872d624",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-16T17:10:14.222000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:17:54.041000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f",
          "image": "quay.io/tigera/operator@sha256:35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f",
          "name": "operator-35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f-annotation"
        },
        {
          "digest": "sha256:35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f",
          "image": "quay.io/tigera/operator@sha256:35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.7",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.13.7",
      "version_original": "1.13.7"
    },
    {
      "_id": "60ca368573de3533cd94019b",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:2f9ae23e5d031fbb99d4dd7981de0c94a084b3264833dfd5b0e270ead872d624",
      "bundle_path_digest": "sha256:2f9ae23e5d031fbb99d4dd7981de0c94a084b3264833dfd5b0e270ead872d624",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-16T17:36:05.394000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:08:27.107000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f",
          "image": "quay.io/tigera/operator@sha256:35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f",
          "name": "operator-35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f-annotation"
        },
        {
          "digest": "sha256:35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f",
          "image": "quay.io/tigera/operator@sha256:35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.7",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.13.7",
      "version_original": "1.13.7"
    },
    {
      "_id": "60ca670f9a087cbed9d02c74",
      "alm_examples": [
        {
          "api_version": "agent.stonebranch.com/v1alpha1",
          "kind": "Stonebranch",
          "metadata": {
            "name": "stonebranch-sample"
          },
          "spec": {
            "config": {
              "omsAutoStart": "no",
              "uagAgentClusters": "AGENT_CLUSTER_APP_5461d88d5",
              "uagAutoStart": "yes",
              "uagEnableSsl": "yes",
              "uagNetname": "OPSAUTOCONF",
              "uagOmsServers": "7878\\\\@ps2.stonebranchdev.cloud",
              "uagTransient": "yes",
              "uagUsername": "stonebranch",
              "uemAutoStart": "yes"
            },
            "createSharedPersistentVolumeClaim": {
              "enable": true,
              "storage#": "5Gi",
              "storage_class": "ibmc-file-bronze-gid"
            },
            "useExistingSharedStorage": {
              "enable": false,
              "storage_name": "my-custom-pvc"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stonebranch/stonebranch-operator-bundle@sha256:f9b6fc609704afb3a1872e38e7015b603ac06bd62530684c4fb22289051ff7b0",
      "bundle_path_digest": "sha256:f9b6fc609704afb3a1872e38e7015b603ac06bd62530684c4fb22289051ff7b0",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-16T21:03:11.996000+00:00",
      "csv_description": "Stonebranch Universal Agent IT Automation software",
      "csv_display_name": "Universalagent Operator",
      "csv_metadata_description": "Stonebranch Universal Agent IT Automation software",
      "csv_name": "universalagent-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:49:00.936000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "stonebranch-universalagent-operator-certified",
      "provided_apis": [
        {
          "group": "agent.stonebranch.com",
          "kind": "Stonebranch",
          "plural": "stonebranches",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9",
          "image": "registry.connect.redhat.com/stonebranch/universal-agent@sha256:aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9",
          "name": "universal-agent-aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:6709fd47319626e898e9fa1d778f1bd6ce977f9b2e9f67971810b4263b9fb2be",
          "image": "registry.connect.redhat.com/stonebranch/stonebranch-operator@sha256:6709fd47319626e898e9fa1d778f1bd6ce977f9b2e9f67971810b4263b9fb2be",
          "name": "manager"
        },
        {
          "digest": "sha256:aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9",
          "image": "registry.connect.redhat.com/stonebranch/universal-agent@sha256:aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9",
          "name": "universal_agent"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "60ca68e1a5f4191b6335f5ca",
      "alm_examples": [
        {
          "api_version": "agent.stonebranch.com/v1alpha1",
          "kind": "Stonebranch",
          "metadata": {
            "name": "stonebranch-sample"
          },
          "spec": {
            "config": {
              "omsAutoStart": "no",
              "uagAgentClusters": "AGENT_CLUSTER_APP_5461d88d5",
              "uagAutoStart": "yes",
              "uagEnableSsl": "yes",
              "uagNetname": "OPSAUTOCONF",
              "uagOmsServers": "7878\\\\@ps2.stonebranchdev.cloud",
              "uagTransient": "yes",
              "uagUsername": "stonebranch",
              "uemAutoStart": "yes"
            },
            "createSharedPersistentVolumeClaim": {
              "enable": true,
              "storage#": "5Gi",
              "storage_class": "ibmc-file-bronze-gid"
            },
            "useExistingSharedStorage": {
              "enable": false,
              "storage_name": "my-custom-pvc"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stonebranch/stonebranch-operator-bundle@sha256:f9b6fc609704afb3a1872e38e7015b603ac06bd62530684c4fb22289051ff7b0",
      "bundle_path_digest": "sha256:f9b6fc609704afb3a1872e38e7015b603ac06bd62530684c4fb22289051ff7b0",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-16T21:10:57.899000+00:00",
      "csv_description": "Stonebranch Universal Agent IT Automation software",
      "csv_display_name": "Universalagent Operator",
      "csv_metadata_description": "Stonebranch Universal Agent IT Automation software",
      "csv_name": "universalagent-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:06:28.710000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "stonebranch-universalagent-operator-certified",
      "provided_apis": [
        {
          "group": "agent.stonebranch.com",
          "kind": "Stonebranch",
          "plural": "stonebranches",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9",
          "image": "registry.connect.redhat.com/stonebranch/universal-agent@sha256:aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9",
          "name": "universal-agent-aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:6709fd47319626e898e9fa1d778f1bd6ce977f9b2e9f67971810b4263b9fb2be",
          "image": "registry.connect.redhat.com/stonebranch/stonebranch-operator@sha256:6709fd47319626e898e9fa1d778f1bd6ce977f9b2e9f67971810b4263b9fb2be",
          "name": "manager"
        },
        {
          "digest": "sha256:aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9",
          "image": "registry.connect.redhat.com/stonebranch/universal-agent@sha256:aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9",
          "name": "universal_agent"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "60ca6ebd9a087cbed9d02c79",
      "alm_examples": [
        {
          "api_version": "agent.stonebranch.com/v1alpha1",
          "kind": "Stonebranch",
          "metadata": {
            "name": "stonebranch-sample"
          },
          "spec": {
            "config": {
              "omsAutoStart": "no",
              "uagAgentClusters": "AGENT_CLUSTER_APP_5461d88d5",
              "uagAutoStart": "yes",
              "uagEnableSsl": "yes",
              "uagNetname": "OPSAUTOCONF",
              "uagOmsServers": "7878\\\\@ps2.stonebranchdev.cloud",
              "uagTransient": "yes",
              "uagUsername": "stonebranch",
              "uemAutoStart": "yes"
            },
            "createSharedPersistentVolumeClaim": {
              "enable": true,
              "storage#": "5Gi",
              "storage_class": "ibmc-file-bronze-gid"
            },
            "useExistingSharedStorage": {
              "enable": false,
              "storage_name": "my-custom-pvc"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stonebranch/stonebranch-operator-bundle@sha256:f9b6fc609704afb3a1872e38e7015b603ac06bd62530684c4fb22289051ff7b0",
      "bundle_path_digest": "sha256:f9b6fc609704afb3a1872e38e7015b603ac06bd62530684c4fb22289051ff7b0",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-16T21:35:57.335000+00:00",
      "csv_description": "Stonebranch Universal Agent IT Automation software",
      "csv_display_name": "Universalagent Operator",
      "csv_metadata_description": "Stonebranch Universal Agent IT Automation software",
      "csv_name": "universalagent-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:50:54.939000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "stonebranch-universalagent-operator-certified",
      "provided_apis": [
        {
          "group": "agent.stonebranch.com",
          "kind": "Stonebranch",
          "plural": "stonebranches",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9",
          "image": "registry.connect.redhat.com/stonebranch/universal-agent@sha256:aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9",
          "name": "universal-agent-aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:6709fd47319626e898e9fa1d778f1bd6ce977f9b2e9f67971810b4263b9fb2be",
          "image": "registry.connect.redhat.com/stonebranch/stonebranch-operator@sha256:6709fd47319626e898e9fa1d778f1bd6ce977f9b2e9f67971810b4263b9fb2be",
          "name": "manager"
        },
        {
          "digest": "sha256:aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9",
          "image": "registry.connect.redhat.com/stonebranch/universal-agent@sha256:aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9",
          "name": "universal_agent"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "60ca9147a5f4191b6335f5ee",
      "alm_examples": [
        {
          "api_version": "hedvig.io/v1",
          "kind": "HedvigDeploy",
          "metadata": {
            "name": "testdeploy",
            "namespace": "hedvig"
          },
          "spec": {
            "cluster": {
              "name": "hedvigcl",
              "seeds": [
                "hedvigcl1.hedvig.io",
                "hedvigcl2.hedvig.io",
                "hedvigcl3.hedvig.io"
              ]
            },
            "controller": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "hedvig/hedvig-csi-volume-driver",
              "tag": "v-2.0"
            },
            "k8s": {
              "name": "k8scl"
            },
            "node": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "hedvig/hedvig-csi-volume-driver",
              "tag": "v-2.0"
            },
            "proxy": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "hedvig/hedvig-proxy",
              "tag": "v-4.3.1"
            },
            "sidecars": [
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-provisioner",
                "repository": "quay.io/k8scsi/csi-provisioner",
                "tag": "v1.6.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-snapshotter",
                "repository": "quay.io/k8scsi/csi-snapshotter",
                "tag": "v2.1.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-resizer",
                "repository": "quay.io/k8scsi/csi-resizer",
                "tag": "v0.5.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-node-driver-registrar",
                "repository": "quay.io/k8scsi/csi-node-driver-registrar",
                "tag": "v1.0-canary"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/commvault-hedvig/hedvig-operator@sha256:a68668ac612e5240c61c22f05f7c5c53054058d2caa624c6a49576e61de5d193",
      "bundle_path_digest": "sha256:a68668ac612e5240c61c22f05f7c5c53054058d2caa624c6a49576e61de5d193",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-17T00:03:19.963000+00:00",
      "csv_description": "The Hedvig Distributed Storage Platform is a software-defined, scale-out storage solution. It distributes data simultaneously across multiple locations \u2013 from on-premises data centers to the cloud \u2013 and scales capacity on-demand by leveraging the storage of commodity x86/ARM servers. The distributed write maximizes availability and protects data from hardware failures ranging from a single disk to an entire site, improving disaster recovery planning.\n\nHedvig provides a CSI Driver for accelerating your journey into the container ecosystem. CSI Driver enables containerized applications to maintain state by dynamically provisioning and consuming Hedvig virtual disks as persistent volumes. \n### \n\nHedvig Operator deploys the Hedvig Storage Proxy and the Hedvig CSI Driver to manage the life cycle of persistent storage in Kubernetes and Openshift.\n\n**Supported Container Orchestrators:**\n* Kubernetes 1.13 to 1.20\n* Red Hat OpenShift 4.1 to 4.7\n\n**Supported Hedvig Releases:**\n* Hedvig 4.0\n* Hedvig 4.1\n* Hedvig 4.2\n* Hedvig 4.3\n\nPlease refer to the [documentation](https://documentation.commvault.com/commvault/hedvig/others/pdf/Hedvig_Operator_User_Guide.pdf) for steps to install and use the operator.\n\n\n\n\n\n",
      "csv_display_name": "Hedvig Operator",
      "csv_metadata_description": "Hedvig Operator is the official operator to deploy and manage Hedvig components in container orchestrators such as Kubernetes and Openshift.",
      "csv_name": "hedvig-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:21:01.661000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "hedvig-operator",
      "provided_apis": [
        {
          "group": "hedvig.io",
          "kind": "HedvigDeploy",
          "plural": "hedvigdeploys",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "image": "registry.connect.redhat.com/commvault-hedvig/hedvig-operator1@sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "name": "hedvig-operator1-49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1-annotation"
        },
        {
          "digest": "sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "image": "registry.connect.redhat.com/commvault-hedvig/hedvig-operator1@sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "name": "hedvig-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "60ca92189a087cbed9d02c9a",
      "alm_examples": [
        {
          "api_version": "hedvig.io/v1",
          "kind": "HedvigDeploy",
          "metadata": {
            "name": "testdeploy",
            "namespace": "hedvig"
          },
          "spec": {
            "cluster": {
              "name": "hedvigcl",
              "seeds": [
                "hedvigcl1.hedvig.io",
                "hedvigcl2.hedvig.io",
                "hedvigcl3.hedvig.io"
              ]
            },
            "controller": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "hedvig/hedvig-csi-volume-driver",
              "tag": "v-2.0"
            },
            "k8s": {
              "name": "k8scl"
            },
            "node": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "hedvig/hedvig-csi-volume-driver",
              "tag": "v-2.0"
            },
            "proxy": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "hedvig/hedvig-proxy",
              "tag": "v-4.3.1"
            },
            "sidecars": [
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-provisioner",
                "repository": "quay.io/k8scsi/csi-provisioner",
                "tag": "v1.6.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-snapshotter",
                "repository": "quay.io/k8scsi/csi-snapshotter",
                "tag": "v2.1.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-resizer",
                "repository": "quay.io/k8scsi/csi-resizer",
                "tag": "v0.5.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-node-driver-registrar",
                "repository": "quay.io/k8scsi/csi-node-driver-registrar",
                "tag": "v1.0-canary"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/commvault-hedvig/hedvig-operator@sha256:a68668ac612e5240c61c22f05f7c5c53054058d2caa624c6a49576e61de5d193",
      "bundle_path_digest": "sha256:a68668ac612e5240c61c22f05f7c5c53054058d2caa624c6a49576e61de5d193",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-17T00:06:48.438000+00:00",
      "csv_description": "The Hedvig Distributed Storage Platform is a software-defined, scale-out storage solution. It distributes data simultaneously across multiple locations \u2013 from on-premises data centers to the cloud \u2013 and scales capacity on-demand by leveraging the storage of commodity x86/ARM servers. The distributed write maximizes availability and protects data from hardware failures ranging from a single disk to an entire site, improving disaster recovery planning.\n\nHedvig provides a CSI Driver for accelerating your journey into the container ecosystem. CSI Driver enables containerized applications to maintain state by dynamically provisioning and consuming Hedvig virtual disks as persistent volumes. \n### \n\nHedvig Operator deploys the Hedvig Storage Proxy and the Hedvig CSI Driver to manage the life cycle of persistent storage in Kubernetes and Openshift.\n\n**Supported Container Orchestrators:**\n* Kubernetes 1.13 to 1.20\n* Red Hat OpenShift 4.1 to 4.7\n\n**Supported Hedvig Releases:**\n* Hedvig 4.0\n* Hedvig 4.1\n* Hedvig 4.2\n* Hedvig 4.3\n\nPlease refer to the [documentation](https://documentation.commvault.com/commvault/hedvig/others/pdf/Hedvig_Operator_User_Guide.pdf) for steps to install and use the operator.\n\n\n\n\n\n",
      "csv_display_name": "Hedvig Operator",
      "csv_metadata_description": "Hedvig Operator is the official operator to deploy and manage Hedvig components in container orchestrators such as Kubernetes and Openshift.",
      "csv_name": "hedvig-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:17:45.404000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "hedvig-operator",
      "provided_apis": [
        {
          "group": "hedvig.io",
          "kind": "HedvigDeploy",
          "plural": "hedvigdeploys",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "image": "registry.connect.redhat.com/commvault-hedvig/hedvig-operator1@sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "name": "hedvig-operator1-49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1-annotation"
        },
        {
          "digest": "sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "image": "registry.connect.redhat.com/commvault-hedvig/hedvig-operator1@sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "name": "hedvig-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "60ca921da5f4191b6335f5ef",
      "alm_examples": [
        {
          "api_version": "hedvig.io/v1",
          "kind": "HedvigDeploy",
          "metadata": {
            "name": "testdeploy",
            "namespace": "hedvig"
          },
          "spec": {
            "cluster": {
              "name": "hedvigcl",
              "seeds": [
                "hedvigcl1.hedvig.io",
                "hedvigcl2.hedvig.io",
                "hedvigcl3.hedvig.io"
              ]
            },
            "controller": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "hedvig/hedvig-csi-volume-driver",
              "tag": "v-2.0"
            },
            "k8s": {
              "name": "k8scl"
            },
            "node": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "hedvig/hedvig-csi-volume-driver",
              "tag": "v-2.0"
            },
            "proxy": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "hedvig/hedvig-proxy",
              "tag": "v-4.3.1"
            },
            "sidecars": [
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-provisioner",
                "repository": "quay.io/k8scsi/csi-provisioner",
                "tag": "v1.6.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-snapshotter",
                "repository": "quay.io/k8scsi/csi-snapshotter",
                "tag": "v2.1.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-resizer",
                "repository": "quay.io/k8scsi/csi-resizer",
                "tag": "v0.5.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-node-driver-registrar",
                "repository": "quay.io/k8scsi/csi-node-driver-registrar",
                "tag": "v1.0-canary"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/commvault-hedvig/hedvig-operator@sha256:a68668ac612e5240c61c22f05f7c5c53054058d2caa624c6a49576e61de5d193",
      "bundle_path_digest": "sha256:a68668ac612e5240c61c22f05f7c5c53054058d2caa624c6a49576e61de5d193",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-17T00:06:53.186000+00:00",
      "csv_description": "The Hedvig Distributed Storage Platform is a software-defined, scale-out storage solution. It distributes data simultaneously across multiple locations \u2013 from on-premises data centers to the cloud \u2013 and scales capacity on-demand by leveraging the storage of commodity x86/ARM servers. The distributed write maximizes availability and protects data from hardware failures ranging from a single disk to an entire site, improving disaster recovery planning.\n\nHedvig provides a CSI Driver for accelerating your journey into the container ecosystem. CSI Driver enables containerized applications to maintain state by dynamically provisioning and consuming Hedvig virtual disks as persistent volumes. \n### \n\nHedvig Operator deploys the Hedvig Storage Proxy and the Hedvig CSI Driver to manage the life cycle of persistent storage in Kubernetes and Openshift.\n\n**Supported Container Orchestrators:**\n* Kubernetes 1.13 to 1.20\n* Red Hat OpenShift 4.1 to 4.7\n\n**Supported Hedvig Releases:**\n* Hedvig 4.0\n* Hedvig 4.1\n* Hedvig 4.2\n* Hedvig 4.3\n\nPlease refer to the [documentation](https://documentation.commvault.com/commvault/hedvig/others/pdf/Hedvig_Operator_User_Guide.pdf) for steps to install and use the operator.\n\n\n\n\n\n",
      "csv_display_name": "Hedvig Operator",
      "csv_metadata_description": "Hedvig Operator is the official operator to deploy and manage Hedvig components in container orchestrators such as Kubernetes and Openshift.",
      "csv_name": "hedvig-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:01:17.076000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "hedvig-operator",
      "provided_apis": [
        {
          "group": "hedvig.io",
          "kind": "HedvigDeploy",
          "plural": "hedvigdeploys",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "image": "registry.connect.redhat.com/commvault-hedvig/hedvig-operator1@sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "name": "hedvig-operator1-49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1-annotation"
        },
        {
          "digest": "sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "image": "registry.connect.redhat.com/commvault-hedvig/hedvig-operator1@sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "name": "hedvig-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "60ca9275bb0cfd2a15da34b3",
      "alm_examples": [
        {
          "api_version": "hedvig.io/v1",
          "kind": "HedvigDeploy",
          "metadata": {
            "name": "testdeploy",
            "namespace": "hedvig"
          },
          "spec": {
            "cluster": {
              "name": "hedvigcl",
              "seeds": [
                "hedvigcl1.hedvig.io",
                "hedvigcl2.hedvig.io",
                "hedvigcl3.hedvig.io"
              ]
            },
            "controller": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "hedvig/hedvig-csi-volume-driver",
              "tag": "v-2.0"
            },
            "k8s": {
              "name": "k8scl"
            },
            "node": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "hedvig/hedvig-csi-volume-driver",
              "tag": "v-2.0"
            },
            "proxy": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "hedvig/hedvig-proxy",
              "tag": "v-4.3.1"
            },
            "sidecars": [
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-provisioner",
                "repository": "quay.io/k8scsi/csi-provisioner",
                "tag": "v1.6.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-snapshotter",
                "repository": "quay.io/k8scsi/csi-snapshotter",
                "tag": "v2.1.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-resizer",
                "repository": "quay.io/k8scsi/csi-resizer",
                "tag": "v0.5.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-node-driver-registrar",
                "repository": "quay.io/k8scsi/csi-node-driver-registrar",
                "tag": "v1.0-canary"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/commvault-hedvig/hedvig-operator@sha256:a68668ac612e5240c61c22f05f7c5c53054058d2caa624c6a49576e61de5d193",
      "bundle_path_digest": "sha256:a68668ac612e5240c61c22f05f7c5c53054058d2caa624c6a49576e61de5d193",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-17T00:08:21.155000+00:00",
      "csv_description": "The Hedvig Distributed Storage Platform is a software-defined, scale-out storage solution. It distributes data simultaneously across multiple locations \u2013 from on-premises data centers to the cloud \u2013 and scales capacity on-demand by leveraging the storage of commodity x86/ARM servers. The distributed write maximizes availability and protects data from hardware failures ranging from a single disk to an entire site, improving disaster recovery planning.\n\nHedvig provides a CSI Driver for accelerating your journey into the container ecosystem. CSI Driver enables containerized applications to maintain state by dynamically provisioning and consuming Hedvig virtual disks as persistent volumes. \n### \n\nHedvig Operator deploys the Hedvig Storage Proxy and the Hedvig CSI Driver to manage the life cycle of persistent storage in Kubernetes and Openshift.\n\n**Supported Container Orchestrators:**\n* Kubernetes 1.13 to 1.20\n* Red Hat OpenShift 4.1 to 4.7\n\n**Supported Hedvig Releases:**\n* Hedvig 4.0\n* Hedvig 4.1\n* Hedvig 4.2\n* Hedvig 4.3\n\nPlease refer to the [documentation](https://documentation.commvault.com/commvault/hedvig/others/pdf/Hedvig_Operator_User_Guide.pdf) for steps to install and use the operator.\n\n\n\n\n\n",
      "csv_display_name": "Hedvig Operator",
      "csv_metadata_description": "Hedvig Operator is the official operator to deploy and manage Hedvig components in container orchestrators such as Kubernetes and Openshift.",
      "csv_name": "hedvig-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:22:46.010000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "hedvig-operator",
      "provided_apis": [
        {
          "group": "hedvig.io",
          "kind": "HedvigDeploy",
          "plural": "hedvigdeploys",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "image": "registry.connect.redhat.com/commvault-hedvig/hedvig-operator1@sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "name": "hedvig-operator1-49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1-annotation"
        },
        {
          "digest": "sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "image": "registry.connect.redhat.com/commvault-hedvig/hedvig-operator1@sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "name": "hedvig-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "60cae683bb0cfd2a15da34d7",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:ab36fb9782da2e6c9e69a582e43afec638786b9a58acca2faf4ca7510aac2e5b",
      "bundle_path_digest": "sha256:ab36fb9782da2e6c9e69a582e43afec638786b9a58acca2faf4ca7510aac2e5b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-17T06:06:59.352000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:11:39.622000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5",
          "image": "quay.io/tigera/operator@sha256:bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5",
          "name": "operator-bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5-annotation"
        },
        {
          "digest": "sha256:bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5",
          "image": "quay.io/tigera/operator@sha256:bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.8",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.13.8",
      "version_original": "1.13.8"
    },
    {
      "_id": "60cae6d6bb0cfd2a15da34d8",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:ab36fb9782da2e6c9e69a582e43afec638786b9a58acca2faf4ca7510aac2e5b",
      "bundle_path_digest": "sha256:ab36fb9782da2e6c9e69a582e43afec638786b9a58acca2faf4ca7510aac2e5b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-17T06:08:22.583000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:09:21.401000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5",
          "image": "quay.io/tigera/operator@sha256:bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5",
          "name": "operator-bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5-annotation"
        },
        {
          "digest": "sha256:bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5",
          "image": "quay.io/tigera/operator@sha256:bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.8",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.13.8",
      "version_original": "1.13.8"
    },
    {
      "_id": "60cae786bb0cfd2a15da34d9",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:ab36fb9782da2e6c9e69a582e43afec638786b9a58acca2faf4ca7510aac2e5b",
      "bundle_path_digest": "sha256:ab36fb9782da2e6c9e69a582e43afec638786b9a58acca2faf4ca7510aac2e5b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-17T06:11:18.220000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T00:50:09.515000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5",
          "image": "quay.io/tigera/operator@sha256:bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5",
          "name": "operator-bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5-annotation"
        },
        {
          "digest": "sha256:bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5",
          "image": "quay.io/tigera/operator@sha256:bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.8",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.13.8",
      "version_original": "1.13.8"
    },
    {
      "_id": "60cb87489a087cbed9d02d60",
      "alm_examples": [
        {
          "api_version": "xcrypt.zettaset.com/v1alpha1",
          "kind": "XCrypt",
          "metadata": {
            "name": "zts-masterset"
          },
          "spec": {
            "status": {
              "podNames": "zts-ca",
              "replicas": "1,"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zts/xcrypt-operator-1-bundle@sha256:6a9b95934c0b8b3dfa3f71c0052a5e55091c560d8db490bb227f9c4c2219f493",
      "bundle_path_digest": "sha256:6a9b95934c0b8b3dfa3f71c0052a5e55091c560d8db490bb227f9c4c2219f493",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-17T17:32:56.104000+00:00",
      "csv_description": "Zettaset\u2019s RedHat Certified XCrypt Operator allows users to deploy multiple XCrypt components on OpenShift with just a few simple commands. The XCrypt Operator deployment provides software-defined encryption that transparently protects container data throughout your OpenShift environment.\n\n## Core Features\n* **Automated XCrypt provisioning** - Deploying a Zettaset XCrypt has never been easier. Adjust cluster specific configuration and let the Zettaset Operator take care of provisioning XCrypt services and setting up the XCrypt encryption to your exact specification. \n* **CSI Driver deployment**: Zettaset XCrypt Operator automatically deploys Zettaset XCrypt CSI Driver in order to provide automated and transparent data-at-rest  encryption functionality compatible with Openshift and any other container orchestrator. Once the Operator is provisioned, the driver runs fine tuned and ready to work with other XCrypt components.\n* **Multi-node topology**: Encrypt as many nodes and volumes as you need to. XCrypt components can be installed on multiple nodes across the cluster. This is defined by two labels: zts-master and zts-worker. Normally zts-master node is a single node that runs Zettaset XCrypt major services required for the product operation. Multiple nodes can be marked as zts-worker and those are the nodes that can have encrypted volumes.\n* **Seamless Encrypted Volume mount**: Volumes are not only being encrypted, but also are mounted/unmounted to containers with Persistent Volume Claims. This happens as seamlessly as regular volumes provision and mount/unmount.\n* **Robust failover**: A node failure doesn\u2019t affect XCrypt operations on other nodes of the cluster. Encryption on a restarted/recovered node gets back to normal functioning if the node stays healthy and data hasn\u2019t been corrupted during the restart\n\n## About Zettaset XCrypt Kubernetes Encryption for OpenShift\nXCrypt Kubernetes Encryption for OpenShift is a software-only solution that enables encryption of data at rest stored in Red Hat OpenShift container environments without slowing down the DevSecOps process. In addition to providing a transparent and high-performance layer of security that flexibly protects container data across on-premise, in hybrid, and multi-cloud environments, it also helps your organization efficiently transition from DevOps to DevSecOps.  \n\nMore information about Zettaset XCrypt Kubernetes Encryption for OpenShift can be found in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)\n\n## RedHat OpenShift + Zettaset: The next generation of secure enterprise infrastructure for DevSecOps  \nBy combining RedHat\u2019s Container Platform with Zettaset\u2019s certified software-defined encryption, you can create the next generation of secure enterprise infrastructure that DevSecOps requires. Together they create the stable, consistent, and supported base that your organization needs to develop applications faster, simplify updates, drive innovation, and reduce the risk of potential security breaches and data theft.\n### Core Features\n* Software-only for simple and scalable deployments \n* Negligible performance impact\n* Transparent to developers and administrators \n* Works with AWS, Google, and Azure \n* Unique encryption key per container volume \n* Encrypted volumes are only available when in use\n* Direct integration with OpenShift \n* Automated encryption policy management Secure erase of volumes\n* Ability to securely decommission a node\n\n## How does XCrypt Kubernetes Encryption fit into OpenShift? \nXCrypt XCrypt Kubernetes Encryption for OpenShift Encryption makes it incredibly easy to protect container data in your OpenShift environment. \n### Use cases include:\n* Transitioning from DevOps to DevSecOps \n* Ensuring data protection in OpenShift container environments with negligible performance impact \n* Achieving compliance in regulated industries like healthcare and finance\n\n## Other Information\nRole-based access control needs to be configured prior to the Operator installation. Please find details in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)    ",
      "csv_display_name": "Zettaset XCrypt Operator",
      "csv_metadata_description": "XCrypt Operator deploys Zettaset XCrypt Container Encryption  - the only software-defined solution that offers transparent high performance data-at-rest encryption of critical data in container environments.",
      "csv_name": "zts-xcrypt-operator.v0.0.14",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:10:01.604000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "xcrypt-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "name": "xcrypt-operator-1-7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac-annotation"
        },
        {
          "digest": "sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "name": "zts-xcrypt-operator"
        },
        {
          "digest": "sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "image": "registry.connect.redhat.com/zts/xcrypt-ca-1@sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "name": "ca"
        },
        {
          "digest": "sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "image": "registry.connect.redhat.com/zts/xcrypt-kmip-server-1@sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "name": "kmip"
        },
        {
          "digest": "sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "image": "registry.connect.redhat.com/zts/xcrypt-license-server-1@sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "name": "ls"
        },
        {
          "digest": "sha256:9faa4b597eb74df412761dffa057b64fb69dbf9fa016414962eb2099a343e734",
          "image": "registry.connect.redhat.com/zts/xcrypt-host-manager-1@sha256:9faa4b597eb74df412761dffa057b64fb69dbf9fa016414962eb2099a343e734",
          "name": "hm"
        },
        {
          "digest": "sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "image": "registry.connect.redhat.com/zts/zts-csi-driver-1@sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "name": "csi_driver"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.14",
      "version_original": "0.0.14"
    },
    {
      "_id": "60cbd4aa9de9b6266503fa84",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "example-neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {},
              "azureFileShare": {
                "enabled": false
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem"
              },
              "configmap": {
                "enabled": false
              },
              "enabled": true,
              "federation": {
                "managedsvc": {},
                "mastersvc": {}
              },
              "image": "registry.connect.redhat.com/neuvector/controller@sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "path": "/",
                "tls": false
              },
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "enabled": false
              },
              "replicas": 3,
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
                "replicas": 3,
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:aec01a874399c3a3c31033b35761b28aef605504ade888f98f637442cc56b5c0",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "exporter": {
              "CTRL_PASSWORD": "admin",
              "CTRL_USERNAME": "admin",
              "enabled": false,
              "scrapping": true
            },
            "imagePullSecrets": "regsecret",
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem"
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager@sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "path": "/",
                "tls": false
              },
              "svc": {
                "annotations": {},
                "type": "NodePort"
              }
            },
            "openshift": true,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:df5719e58365fbd71274838705de8e49fe52a30417960fef6e799e01debf6c48",
      "bundle_path_digest": "sha256:df5719e58365fbd71274838705de8e49fe52a30417960fef6e799e01debf6c48",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-06-17T23:03:06.010000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [NeuVector Helm Chart](https://github.com/neuvector/neuvector-helm) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart. \n\n**Complete below steps to create secret for accessing Docker or similar registry and Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nConfigure OpenShift to pull images from the private NeuVector registry on Docker Hub\n\n         oc create secret docker-registry regsecret -n neuvector --docker-server=https://index.docker.io/v1/ --docker-username=your-name --docker-password=your-pword --docker-email=your-email\n\t\t\t\t \n\nWhere \u2019your-name\u2019 is your Docker username, \u2019your-pword\u2019 is your Docker password, \u2019your-email\u2019 is your Docker email.\n\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "Neuvector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:55:53.357000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e8159bafce02033f3d285bac809dff1bfdaae091d2ab2bdc0816736b510b2937",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:e8159bafce02033f3d285bac809dff1bfdaae091d2ab2bdc0816736b510b2937",
          "name": "neuvector-operator-e8159bafce02033f3d285bac809dff1bfdaae091d2ab2bdc0816736b510b2937-annotation"
        },
        {
          "digest": "sha256:e8159bafce02033f3d285bac809dff1bfdaae091d2ab2bdc0816736b510b2937",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:e8159bafce02033f3d285bac809dff1bfdaae091d2ab2bdc0816736b510b2937",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "name": "controller"
        },
        {
          "digest": "sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "name": "enforcer"
        },
        {
          "digest": "sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "name": "manager"
        },
        {
          "digest": "sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "name": "scanner"
        },
        {
          "digest": "sha256:aec01a874399c3a3c31033b35761b28aef605504ade888f98f637442cc56b5c0",
          "image": "registry.access.redhat.com/ubi8@sha256:aec01a874399c3a3c31033b35761b28aef605504ade888f98f637442cc56b5c0",
          "name": "updater"
        },
        {
          "digest": "sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "name": "manager-33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc-annotation"
        },
        {
          "digest": "sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "name": "enforcer-7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0-annotation"
        },
        {
          "digest": "sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "name": "scanner-ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7-annotation"
        },
        {
          "digest": "sha256:aec01a874399c3a3c31033b35761b28aef605504ade888f98f637442cc56b5c0",
          "image": "registry.access.redhat.com/ubi8@sha256:aec01a874399c3a3c31033b35761b28aef605504ade888f98f637442cc56b5c0",
          "name": "ubi8-aec01a874399c3a3c31033b35761b28aef605504ade888f98f637442cc56b5c0-annotation"
        },
        {
          "digest": "sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "name": "controller-c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.2.3",
      "version_original": "1.2.3"
    },
    {
      "_id": "60cbd53a5f14ddb47d3b7286",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "example-neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {},
              "azureFileShare": {
                "enabled": false
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem"
              },
              "configmap": {
                "enabled": false
              },
              "enabled": true,
              "federation": {
                "managedsvc": {},
                "mastersvc": {}
              },
              "image": "registry.connect.redhat.com/neuvector/controller@sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "path": "/",
                "tls": false
              },
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "enabled": false
              },
              "replicas": 3,
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
                "replicas": 3,
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:aec01a874399c3a3c31033b35761b28aef605504ade888f98f637442cc56b5c0",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "exporter": {
              "CTRL_PASSWORD": "admin",
              "CTRL_USERNAME": "admin",
              "enabled": false,
              "scrapping": true
            },
            "imagePullSecrets": "regsecret",
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem"
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager@sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "path": "/",
                "tls": false
              },
              "svc": {
                "annotations": {},
                "type": "NodePort"
              }
            },
            "openshift": true,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:df5719e58365fbd71274838705de8e49fe52a30417960fef6e799e01debf6c48",
      "bundle_path_digest": "sha256:df5719e58365fbd71274838705de8e49fe52a30417960fef6e799e01debf6c48",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-06-17T23:05:30.275000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [NeuVector Helm Chart](https://github.com/neuvector/neuvector-helm) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart. \n\n**Complete below steps to create secret for accessing Docker or similar registry and Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nConfigure OpenShift to pull images from the private NeuVector registry on Docker Hub\n\n         oc create secret docker-registry regsecret -n neuvector --docker-server=https://index.docker.io/v1/ --docker-username=your-name --docker-password=your-pword --docker-email=your-email\n\t\t\t\t \n\nWhere \u2019your-name\u2019 is your Docker username, \u2019your-pword\u2019 is your Docker password, \u2019your-email\u2019 is your Docker email.\n\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "Neuvector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:55:40.529000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e8159bafce02033f3d285bac809dff1bfdaae091d2ab2bdc0816736b510b2937",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:e8159bafce02033f3d285bac809dff1bfdaae091d2ab2bdc0816736b510b2937",
          "name": "neuvector-operator-e8159bafce02033f3d285bac809dff1bfdaae091d2ab2bdc0816736b510b2937-annotation"
        },
        {
          "digest": "sha256:e8159bafce02033f3d285bac809dff1bfdaae091d2ab2bdc0816736b510b2937",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:e8159bafce02033f3d285bac809dff1bfdaae091d2ab2bdc0816736b510b2937",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "name": "controller"
        },
        {
          "digest": "sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "name": "enforcer"
        },
        {
          "digest": "sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "name": "manager"
        },
        {
          "digest": "sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "name": "scanner"
        },
        {
          "digest": "sha256:aec01a874399c3a3c31033b35761b28aef605504ade888f98f637442cc56b5c0",
          "image": "registry.access.redhat.com/ubi8@sha256:aec01a874399c3a3c31033b35761b28aef605504ade888f98f637442cc56b5c0",
          "name": "updater"
        },
        {
          "digest": "sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "name": "manager-33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc-annotation"
        },
        {
          "digest": "sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "name": "enforcer-7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0-annotation"
        },
        {
          "digest": "sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "name": "scanner-ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7-annotation"
        },
        {
          "digest": "sha256:aec01a874399c3a3c31033b35761b28aef605504ade888f98f637442cc56b5c0",
          "image": "registry.access.redhat.com/ubi8@sha256:aec01a874399c3a3c31033b35761b28aef605504ade888f98f637442cc56b5c0",
          "name": "ubi8-aec01a874399c3a3c31033b35761b28aef605504ade888f98f637442cc56b5c0-annotation"
        },
        {
          "digest": "sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "name": "controller-c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.2.3",
      "version_original": "1.2.3"
    },
    {
      "_id": "60cc14155f14ddb47d3b729b",
      "alm_examples": [
        {
          "api_version": "storage.hpe.com/v1",
          "kind": "HPECSIDriver",
          "metadata": {
            "name": "csi-driver"
          },
          "spec": {
            "cspClientTimeout": 60,
            "disable": {
              "alletra6000": false,
              "alletra9000": false,
              "nimble": false,
              "primera": false
            },
            "disableNodeConformance": false,
            "disableNodeGetVolumeStats": false,
            "imagePullPolicy": "IfNotPresent",
            "iscsi": {
              "chapPassword": "",
              "chapUser": ""
            },
            "kubeletRootDir": "/var/lib/kubelet/",
            "logLevel": "info",
            "registry": "quay.io"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/csi-driver-operator-bundle@sha256:24d8008a3b72f61d720a20f0f12eecc5b13fdc0916edcb7cb0ae99498c012c9b",
      "bundle_path_digest": "sha256:24d8008a3b72f61d720a20f0f12eecc5b13fdc0916edcb7cb0ae99498c012c9b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-18T03:33:41.336000+00:00",
      "csv_description": "The HPE CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE storage systems.\nThe HPE CSI Driver for Kubernetes leverages HPE storage platforms to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://scod.hpedev.io/csi_driver/index.html) for supported HPE platforms and full list of supported CSI features.\n## Installation\nRefer to the HPE CSI Operator for Kubernetes [documentation](https://scod.hpedev.io/csi_driver/deployment.html#operator).\n",
      "csv_display_name": "HPE CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE storage platforms. The CSI driver allows you to use HPE storage with your preferred container orchestrator.",
      "csv_name": "hpe-csi-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:01:45.400000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "hpe-csi-operator",
      "provided_apis": [
        {
          "group": "storage.hpe.com",
          "kind": "HPECSIDriver",
          "plural": "hpecsidrivers",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "name": "csi-driver-operator-e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771-annotation"
        },
        {
          "digest": "sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "name": "hpe-csi-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "60cc155b5f14ddb47d3b729c",
      "alm_examples": [
        {
          "api_version": "storage.hpe.com/v1",
          "kind": "HPECSIDriver",
          "metadata": {
            "name": "csi-driver"
          },
          "spec": {
            "cspClientTimeout": 60,
            "disable": {
              "alletra6000": false,
              "alletra9000": false,
              "nimble": false,
              "primera": false
            },
            "disableNodeConformance": false,
            "disableNodeGetVolumeStats": false,
            "imagePullPolicy": "IfNotPresent",
            "iscsi": {
              "chapPassword": "",
              "chapUser": ""
            },
            "kubeletRootDir": "/var/lib/kubelet/",
            "logLevel": "info",
            "registry": "quay.io"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/csi-driver-operator-bundle@sha256:24d8008a3b72f61d720a20f0f12eecc5b13fdc0916edcb7cb0ae99498c012c9b",
      "bundle_path_digest": "sha256:24d8008a3b72f61d720a20f0f12eecc5b13fdc0916edcb7cb0ae99498c012c9b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-18T03:39:07.413000+00:00",
      "csv_description": "The HPE CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE storage systems.\nThe HPE CSI Driver for Kubernetes leverages HPE storage platforms to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://scod.hpedev.io/csi_driver/index.html) for supported HPE platforms and full list of supported CSI features.\n## Installation\nRefer to the HPE CSI Operator for Kubernetes [documentation](https://scod.hpedev.io/csi_driver/deployment.html#operator).\n",
      "csv_display_name": "HPE CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE storage platforms. The CSI driver allows you to use HPE storage with your preferred container orchestrator.",
      "csv_name": "hpe-csi-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:50:48.088000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "hpe-csi-operator",
      "provided_apis": [
        {
          "group": "storage.hpe.com",
          "kind": "HPECSIDriver",
          "plural": "hpecsidrivers",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "name": "csi-driver-operator-e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771-annotation"
        },
        {
          "digest": "sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "name": "hpe-csi-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "60cc15c94924e145193315c0",
      "alm_examples": [
        {
          "api_version": "storage.hpe.com/v1",
          "kind": "HPECSIDriver",
          "metadata": {
            "name": "csi-driver"
          },
          "spec": {
            "cspClientTimeout": 60,
            "disable": {
              "alletra6000": false,
              "alletra9000": false,
              "nimble": false,
              "primera": false
            },
            "disableNodeConformance": false,
            "disableNodeGetVolumeStats": false,
            "imagePullPolicy": "IfNotPresent",
            "iscsi": {
              "chapPassword": "",
              "chapUser": ""
            },
            "kubeletRootDir": "/var/lib/kubelet/",
            "logLevel": "info",
            "registry": "quay.io"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/csi-driver-operator-bundle@sha256:24d8008a3b72f61d720a20f0f12eecc5b13fdc0916edcb7cb0ae99498c012c9b",
      "bundle_path_digest": "sha256:24d8008a3b72f61d720a20f0f12eecc5b13fdc0916edcb7cb0ae99498c012c9b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-18T03:40:57.948000+00:00",
      "csv_description": "The HPE CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE storage systems.\nThe HPE CSI Driver for Kubernetes leverages HPE storage platforms to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://scod.hpedev.io/csi_driver/index.html) for supported HPE platforms and full list of supported CSI features.\n## Installation\nRefer to the HPE CSI Operator for Kubernetes [documentation](https://scod.hpedev.io/csi_driver/deployment.html#operator).\n",
      "csv_display_name": "HPE CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE storage platforms. The CSI driver allows you to use HPE storage with your preferred container orchestrator.",
      "csv_name": "hpe-csi-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:15:27.128000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "hpe-csi-operator",
      "provided_apis": [
        {
          "group": "storage.hpe.com",
          "kind": "HPECSIDriver",
          "plural": "hpecsidrivers",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "name": "csi-driver-operator-e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771-annotation"
        },
        {
          "digest": "sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "name": "hpe-csi-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "60cc15cd42099979d645f28a",
      "alm_examples": [
        {
          "api_version": "storage.hpe.com/v1",
          "kind": "HPECSIDriver",
          "metadata": {
            "name": "csi-driver"
          },
          "spec": {
            "cspClientTimeout": 60,
            "disable": {
              "alletra6000": false,
              "alletra9000": false,
              "nimble": false,
              "primera": false
            },
            "disableNodeConformance": false,
            "disableNodeGetVolumeStats": false,
            "imagePullPolicy": "IfNotPresent",
            "iscsi": {
              "chapPassword": "",
              "chapUser": ""
            },
            "kubeletRootDir": "/var/lib/kubelet/",
            "logLevel": "info",
            "registry": "quay.io"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/csi-driver-operator-bundle@sha256:24d8008a3b72f61d720a20f0f12eecc5b13fdc0916edcb7cb0ae99498c012c9b",
      "bundle_path_digest": "sha256:24d8008a3b72f61d720a20f0f12eecc5b13fdc0916edcb7cb0ae99498c012c9b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-18T03:41:01.588000+00:00",
      "csv_description": "The HPE CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE storage systems.\nThe HPE CSI Driver for Kubernetes leverages HPE storage platforms to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://scod.hpedev.io/csi_driver/index.html) for supported HPE platforms and full list of supported CSI features.\n## Installation\nRefer to the HPE CSI Operator for Kubernetes [documentation](https://scod.hpedev.io/csi_driver/deployment.html#operator).\n",
      "csv_display_name": "HPE CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE storage platforms. The CSI driver allows you to use HPE storage with your preferred container orchestrator.",
      "csv_name": "hpe-csi-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:04:41.187000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "hpe-csi-operator",
      "provided_apis": [
        {
          "group": "storage.hpe.com",
          "kind": "HPECSIDriver",
          "plural": "hpecsidrivers",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "name": "csi-driver-operator-e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771-annotation"
        },
        {
          "digest": "sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "name": "hpe-csi-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "60cc5a2842099979d645f296",
      "alm_examples": [
        {
          "api_version": "ca.broadcom.com/v1alpha1",
          "kind": "UniversalMonitoringAgent",
          "metadata": {
            "name": "uma-monitor"
          },
          "spec": {
            "agentManager": {
              "url": "localhost:5001"
            },
            "cloudmonitoring": {
              "aws": {
                "enabled": false
              }
            },
            "clusterName": "DevelopmentCluster",
            "monitor": {
              "application": {
                "autoattach": {
                  "dotnet": {
                    "enabled": true
                  },
                  "filterType": "whitelist",
                  "java": {
                    "dynamicPropertyResolution": {
                      "agentName": "",
                      "hostName": "{k8s_deployment_name},{k8s_daemonset_name},{k8s_pod_name},ContainerHost"
                    },
                    "enabled": true
                  }
                },
                "jmx": {
                  "enabled": true
                },
                "opentracing": {
                  "correlation": {
                    "enabled": false
                  },
                  "enabled": true,
                  "grpc": {}
                },
                "zipkinTracing": {
                  "enabled": true,
                  "zipkinServer": {}
                }
              },
              "clusterPerformance": {
                "enabled": true
              },
              "container": {
                "dockerstats": {
                  "enabled": true
                },
                "prometheus": {
                  "backend": {
                    "enabled": false,
                    "endPoint": {
                      "metricAlias": "container_name=container,pod_name=pod"
                    },
                    "filter": {}
                  },
                  "exporter": {
                    "enabled": true
                  }
                }
              }
            },
            "type": "Openshift"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ca/uma-operator-bundle@sha256:99abcf874cce95c5c3980221c322569a7272ab0dfe79f267886153c071f37a2f",
      "bundle_path_digest": "sha256:99abcf874cce95c5c3980221c322569a7272ab0dfe79f267886153c071f37a2f",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-18T08:32:40.256000+00:00",
      "csv_description": "The **DX APM Universal Monitoring Agent** for Kubernetes (UMA for Kubernetes) acts as a single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes. UMA for Kubernetes discovers and monitors all the containers on a host. This capability allows to monitor both the Kubernetes Infrastructure ( like Node, Pods, Containers, Cluster Services etc ) and applications running on this infrastructure & correlate them together which can help the triager to isolate if the the problem is related to the application or infrastructure\n\n**Usage**:\n```\n apiVersion: ca.broadcom.com/v1alpha1\n kind: UniversalMonitoringAgent\n metadata:\n   name: uma-monitor\n spec:\n   # The agent and Enterprise Manager connection details.\n   agentManager:\n     url: localhost:5001\n     # Agent/EM login credentials.\n     credential:\n\n   clusterName: DevelopmentCluster\n   # type should be Kubernetes or Openshift depending on the environment\n   type: Openshift\n   monitor:\n     application:\n       # autoattach properties\n       autoattach:\n         filterType: whitelist\n         # java autoattach properties\n         java:\n           enabled: true\n           propertiesOverride:\n         # dotnet autoattach properties\n         dotnet:\n           enabled: true\n           propertiesOverride:\n       jmx:\n         enabled: true\n       opentracing:\n         enabled: true\n         grpc:\n           hostport:\n         correlation:\n           enabled: false\n     container:\n       prometheus:\n         exporter:\n           enabled: true\n         backend:\n           enabled: false\n           endPoint:\n             # Defines the URL endpoint of the Prometheus backend.\n             url:\n             # Username (if any) for connecting to the Prometheus backend URL.\n             username:\n             # Password (if any) for connecting to the Prometheus backend URL.\n             password:\n             # Token (if any) for connecting to the Prometheus backend URL.\n             token:\n             configFiles:\n             metricAlias: container_name=container,pod_name=pod\n           filter:\n             name:\n             value:\n\n       dockerstats:\n         enabled: true\n     clusterPerformance:\n       enabled: true\n\n```\n",
      "csv_display_name": "DX APM Universal Monitoring Agent",
      "csv_metadata_description": "The Universal Monitoring Agent for Kubernetes (UMA for Kubernetes) acts as single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes.",
      "csv_name": "uma-operator.v21.4.0-32",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:24:08.109000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "uma-operator",
      "provided_apis": [
        {
          "group": "ca.broadcom.com",
          "kind": "UniversalMonitoringAgent",
          "plural": "universalmonitoringagents",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:c50fef5d0ce1e8e084e4b786a40e8214f1726ed08edd8c15d9e6011312719502",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:c50fef5d0ce1e8e084e4b786a40e8214f1726ed08edd8c15d9e6011312719502",
          "name": "uma-operator-c50fef5d0ce1e8e084e4b786a40e8214f1726ed08edd8c15d9e6011312719502-annotation"
        },
        {
          "digest": "sha256:c50fef5d0ce1e8e084e4b786a40e8214f1726ed08edd8c15d9e6011312719502",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:c50fef5d0ce1e8e084e4b786a40e8214f1726ed08edd8c15d9e6011312719502",
          "name": "uma-operator"
        },
        {
          "digest": "sha256:71b8554dcf13756e5769184b6af9e2971544cc38006a408cc4446d58c305b4d7",
          "image": "registry.connect.redhat.com/ca/universalmonitoragent@sha256:71b8554dcf13756e5769184b6af9e2971544cc38006a408cc4446d58c305b4d7",
          "name": "uma"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "21.4.0-32",
      "version_original": "21.4.0-32"
    },
    {
      "_id": "60cc9a0242099979d645f2b1",
      "alm_examples": [
        {
          "api_version": "densify.com/v1",
          "kind": "Densify",
          "metadata": {
            "name": "densify"
          },
          "spec": {
            "affinity": {},
            "config": {
              "cronJob": {
                "schedule": "0 * * * *"
              },
              "debug": false,
              "densify": {
                "epassword": "<encrypted densify user password>",
                "hostname": "<instance>.densify.com",
                "port": 443,
                "protocol": "https",
                "user": "<densify user>"
              },
              "prometheus": {
                "hostname": "<prometheus hostname>",
                "port": "<prometheus port>",
                "protocol": "http"
              },
              "zipEnabled": true,
              "zipname": "data/<zip name>"
            },
            "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
            "nodeSelector": {},
            "pullPolicy": "Always",
            "replicaCount": 1,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/densify/densify-operator-bundle@sha256:b3f96cea8295b88e41a54f80161ac32e79b28f5b0218f93f1f042ff1b9af847f",
      "bundle_path_digest": "sha256:b3f96cea8295b88e41a54f80161ac32e79b28f5b0218f93f1f042ff1b9af847f",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.0",
      "creation_date": "2021-06-18T13:05:06.692000+00:00",
      "csv_description": "The Densify-Operator deploys the Densify Container Data Collection utility, which collects data from a Prometheus server and sends it to a Densify instance for analysis. \n\n# Prerequisites\n\n- Densify account, which is provided with a Densify subscription or through a free trial (https://www.densify.com/service/signup)\n- Prometheus (https://prometheus.io/)\n- Kube-state-metrics (https://github.com/kubernetes/kube-state-metrics)\n\n# Installing\n\n## Basic Install\nThe instruction below deploys the basic Densify Container Data Collection with minimal configuration.\n1. update the Densify hostname, user and encrypted password, Prometheus hostname and port, and zip filename:\n```\napiVersion: densify.com/v1\nkind: Densify\nmetadata:\n  name: densify\nspec:\n  config:\n    densify:\n      hostname: <instance>.densify.com\n      port: 443\n      protocol: https\n      user: <densify user>\n      epassword: <encrypted densify user password>\n    prometheus:\n      hostname: <prometheus hostname>\n      port: <prometheus port>\n      protocol: http\n    zipname: data/<zip name>\n```\n\n## Install Using a Secret for User and Password\nThe instructions below deploy the Densify Container Data Collection using a secret to store the username and encrypted password.\n1. Create a secret that contains the username and epassword keys.\n```\noc -n \"<namespace deploying operator into>\" create secret generic densify-secret \\\n  --from-literal=username=\"<densify username>\" \\\n  --from-literal=epassword=\"<encrypted password>\" \\\n```\n2. Update the Densify hostname, Prometheus hostname and port, and zip filename:\n```\napiVersion: densify.com/v1\nkind: Densify\nmetadata:\n  name: densify\nspec:\n  config:\n    densify:\n      hostname: <instance>.densify.com\n      port: 443\n      protocol: https\n      UserSecretName: densify-secret\n    prometheus:\n      hostname: <prometheus hostname>\n      port: <prometheus port>\n      protocol: http\n    zipname: data/<zip name>\n```\n# Configuration\n \nThe configuration parameters are the same set as the [Densify Forwarder](https://github.com/densify-dev/helm-charts/tree/master/charts/container-optimization-data-forwarder#configuration) helm chart:\n\n| Parameter        | Description           | Default |\n| ------------- |-------------|--------|\n| `config.densify.hostname` | Specify the Densify instance hostname. You may need to specify a fully qualified domain name. | `<instance>.densify.com` |\n| `config.densify.protocol` | Specify the Densify connection protocol: http or https. | `<http/https>` |\n| `config.densify.port` | Specify the Densify connection port number. | `443` |\n| `config.densify.user` | Specify the Densify user account. You must specify either a password or an epassword along with this parameter. This user must already exist in your Densify instance and have API access privileges. Alternatively, you can use config.densify.UserSecretName for authentication instead of user/(e)password combination (see UserSecretName below). | `nil` |\n| `config.densify.password` | Specify the password for the Densify user. Only specify a password or an encrypted password (not both). | `nil` |\n| `config.densify.epassword` | Specify the encrypted password for the Densify User. If you specify an encrypted password, then disable the config.densify.password paramter. | `nil` |\n| `config.densify.UserSecretName` | Specify the secret name used to store the Densify user and epassword (keys must contain username and epassword). If this parameter is used, then config.densify.username\\password\\epassword parameters must be disabled. | `nil` |\n| `config.prometheus.hostname` | Specify the Prometheus address. Using the internal service name is recommended (i.e. `<service name>.<namespace>.svc`). | `nil` |\n| `config.prometheus.protocol` | Specify the Prometheus connection protocol: http or https. | `<http/https>` |\n| `config.prometheus.port` | Specify the Prometheus service connection port. | `9090` |\n| `config.prometheus.clustername` | Specify the name to identify the cluster in the Densify UI. If this parameter is disabled, then the specified Prometheus hostname is used to identify the cluster in the Densify UI. | `nil` |\n| `config.zipname` | Specify the name of the zipfile to send to Densify. | `data/nil` |\n| `rbac.create` | This flag indicates if RBAC resources are created and used. This flag must be \"true\" for API access to Prometheus in a secured cluster. | `true` |\n| `serviceAccount.create` | Specify \"true\" to create a Service Account with the name specified by the serviceAccount.name parameter (see below). | `true` |\n| `serviceAccount.name` | Specify the name of the Service Account. If this parameter is disabled, then the Helm chart name is used as the Service Account name. You can specify an existing Service Account name to use, if serviceAccount.create == \"false\". | `nil` |\n\nRefer to the [Densify Forwarder](https://github.com/densify-dev/helm-charts/tree/master/charts/container-optimization-data-forwarder#configuration) helm chart for the full list of parameters.\n\n# Limitation\n* OS Support: Linux\n* Architecture: AMD64\n\n# Documentation\n* [Densify Feature Description and Reference Guide](https://www.densify.com/docs/Content/Welcome.htm)\n\n# License\nApache 2 Licensed. See [LICENSE](LICENSE) for full details.",
      "csv_display_name": "Densify Operator",
      "csv_metadata_description": "Densify Container Resource Management works to identify better supply (resource) allocations for your underlying containers based on key technical, business and cost criteria.  Any infrastructure changes recommended by Densify can be moderated through your existing ITSM framework / processes.",
      "csv_name": "densify-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:25:27.477000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "densify-operator",
      "provided_apis": [
        {
          "group": "densify.com",
          "kind": "Densify",
          "plural": "densifies",
          "version": "v1"
        },
        {
          "group": "densify.com",
          "kind": "Densify",
          "plural": "densifies",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "image": "registry.connect.redhat.com/densify/densify-operator@sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "name": "densify-operator-4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c-annotation"
        },
        {
          "digest": "sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "image": "registry.connect.redhat.com/densify/densify-operator@sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "name": "densify-operator"
        },
        {
          "digest": "sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "name": "densify"
        },
        {
          "digest": "sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "name": "container-data-collection-forwarder-35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360-annotation"
        }
      ],
      "replaces": "",
      "skip_range": ">=0.0.2 <1.0.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "60cc9a0c5f14ddb47d3b72eb",
      "alm_examples": [
        {
          "api_version": "densify.com/v1",
          "kind": "Densify",
          "metadata": {
            "name": "densify"
          },
          "spec": {
            "affinity": {},
            "config": {
              "cronJob": {
                "schedule": "0 * * * *"
              },
              "debug": false,
              "densify": {
                "epassword": "<encrypted densify user password>",
                "hostname": "<instance>.densify.com",
                "port": 443,
                "protocol": "https",
                "user": "<densify user>"
              },
              "prometheus": {
                "hostname": "<prometheus hostname>",
                "port": "<prometheus port>",
                "protocol": "http"
              },
              "zipEnabled": true,
              "zipname": "data/<zip name>"
            },
            "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
            "nodeSelector": {},
            "pullPolicy": "Always",
            "replicaCount": 1,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/densify/densify-operator-bundle@sha256:b3f96cea8295b88e41a54f80161ac32e79b28f5b0218f93f1f042ff1b9af847f",
      "bundle_path_digest": "sha256:b3f96cea8295b88e41a54f80161ac32e79b28f5b0218f93f1f042ff1b9af847f",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.0",
      "creation_date": "2021-06-18T13:05:16.072000+00:00",
      "csv_description": "The Densify-Operator deploys the Densify Container Data Collection utility, which collects data from a Prometheus server and sends it to a Densify instance for analysis. \n\n# Prerequisites\n\n- Densify account, which is provided with a Densify subscription or through a free trial (https://www.densify.com/service/signup)\n- Prometheus (https://prometheus.io/)\n- Kube-state-metrics (https://github.com/kubernetes/kube-state-metrics)\n\n# Installing\n\n## Basic Install\nThe instruction below deploys the basic Densify Container Data Collection with minimal configuration.\n1. update the Densify hostname, user and encrypted password, Prometheus hostname and port, and zip filename:\n```\napiVersion: densify.com/v1\nkind: Densify\nmetadata:\n  name: densify\nspec:\n  config:\n    densify:\n      hostname: <instance>.densify.com\n      port: 443\n      protocol: https\n      user: <densify user>\n      epassword: <encrypted densify user password>\n    prometheus:\n      hostname: <prometheus hostname>\n      port: <prometheus port>\n      protocol: http\n    zipname: data/<zip name>\n```\n\n## Install Using a Secret for User and Password\nThe instructions below deploy the Densify Container Data Collection using a secret to store the username and encrypted password.\n1. Create a secret that contains the username and epassword keys.\n```\noc -n \"<namespace deploying operator into>\" create secret generic densify-secret \\\n  --from-literal=username=\"<densify username>\" \\\n  --from-literal=epassword=\"<encrypted password>\" \\\n```\n2. Update the Densify hostname, Prometheus hostname and port, and zip filename:\n```\napiVersion: densify.com/v1\nkind: Densify\nmetadata:\n  name: densify\nspec:\n  config:\n    densify:\n      hostname: <instance>.densify.com\n      port: 443\n      protocol: https\n      UserSecretName: densify-secret\n    prometheus:\n      hostname: <prometheus hostname>\n      port: <prometheus port>\n      protocol: http\n    zipname: data/<zip name>\n```\n# Configuration\n \nThe configuration parameters are the same set as the [Densify Forwarder](https://github.com/densify-dev/helm-charts/tree/master/charts/container-optimization-data-forwarder#configuration) helm chart:\n\n| Parameter        | Description           | Default |\n| ------------- |-------------|--------|\n| `config.densify.hostname` | Specify the Densify instance hostname. You may need to specify a fully qualified domain name. | `<instance>.densify.com` |\n| `config.densify.protocol` | Specify the Densify connection protocol: http or https. | `<http/https>` |\n| `config.densify.port` | Specify the Densify connection port number. | `443` |\n| `config.densify.user` | Specify the Densify user account. You must specify either a password or an epassword along with this parameter. This user must already exist in your Densify instance and have API access privileges. Alternatively, you can use config.densify.UserSecretName for authentication instead of user/(e)password combination (see UserSecretName below). | `nil` |\n| `config.densify.password` | Specify the password for the Densify user. Only specify a password or an encrypted password (not both). | `nil` |\n| `config.densify.epassword` | Specify the encrypted password for the Densify User. If you specify an encrypted password, then disable the config.densify.password paramter. | `nil` |\n| `config.densify.UserSecretName` | Specify the secret name used to store the Densify user and epassword (keys must contain username and epassword). If this parameter is used, then config.densify.username\\password\\epassword parameters must be disabled. | `nil` |\n| `config.prometheus.hostname` | Specify the Prometheus address. Using the internal service name is recommended (i.e. `<service name>.<namespace>.svc`). | `nil` |\n| `config.prometheus.protocol` | Specify the Prometheus connection protocol: http or https. | `<http/https>` |\n| `config.prometheus.port` | Specify the Prometheus service connection port. | `9090` |\n| `config.prometheus.clustername` | Specify the name to identify the cluster in the Densify UI. If this parameter is disabled, then the specified Prometheus hostname is used to identify the cluster in the Densify UI. | `nil` |\n| `config.zipname` | Specify the name of the zipfile to send to Densify. | `data/nil` |\n| `rbac.create` | This flag indicates if RBAC resources are created and used. This flag must be \"true\" for API access to Prometheus in a secured cluster. | `true` |\n| `serviceAccount.create` | Specify \"true\" to create a Service Account with the name specified by the serviceAccount.name parameter (see below). | `true` |\n| `serviceAccount.name` | Specify the name of the Service Account. If this parameter is disabled, then the Helm chart name is used as the Service Account name. You can specify an existing Service Account name to use, if serviceAccount.create == \"false\". | `nil` |\n\nRefer to the [Densify Forwarder](https://github.com/densify-dev/helm-charts/tree/master/charts/container-optimization-data-forwarder#configuration) helm chart for the full list of parameters.\n\n# Limitation\n* OS Support: Linux\n* Architecture: AMD64\n\n# Documentation\n* [Densify Feature Description and Reference Guide](https://www.densify.com/docs/Content/Welcome.htm)\n\n# License\nApache 2 Licensed. See [LICENSE](LICENSE) for full details.",
      "csv_display_name": "Densify Operator",
      "csv_metadata_description": "Densify Container Resource Management works to identify better supply (resource) allocations for your underlying containers based on key technical, business and cost criteria.  Any infrastructure changes recommended by Densify can be moderated through your existing ITSM framework / processes.",
      "csv_name": "densify-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:45:05.958000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "densify-operator",
      "provided_apis": [
        {
          "group": "densify.com",
          "kind": "Densify",
          "plural": "densifies",
          "version": "v1"
        },
        {
          "group": "densify.com",
          "kind": "Densify",
          "plural": "densifies",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "image": "registry.connect.redhat.com/densify/densify-operator@sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "name": "densify-operator-4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c-annotation"
        },
        {
          "digest": "sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "image": "registry.connect.redhat.com/densify/densify-operator@sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "name": "densify-operator"
        },
        {
          "digest": "sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "name": "densify"
        },
        {
          "digest": "sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "name": "container-data-collection-forwarder-35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360-annotation"
        }
      ],
      "replaces": "",
      "skip_range": ">=0.0.2 <1.0.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "60cc9a929de9b6266503fab7",
      "alm_examples": [
        {
          "api_version": "densify.com/v1",
          "kind": "Densify",
          "metadata": {
            "name": "densify"
          },
          "spec": {
            "affinity": {},
            "config": {
              "cronJob": {
                "schedule": "0 * * * *"
              },
              "debug": false,
              "densify": {
                "epassword": "<encrypted densify user password>",
                "hostname": "<instance>.densify.com",
                "port": 443,
                "protocol": "https",
                "user": "<densify user>"
              },
              "prometheus": {
                "hostname": "<prometheus hostname>",
                "port": "<prometheus port>",
                "protocol": "http"
              },
              "zipEnabled": true,
              "zipname": "data/<zip name>"
            },
            "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
            "nodeSelector": {},
            "pullPolicy": "Always",
            "replicaCount": 1,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/densify/densify-operator-bundle@sha256:b3f96cea8295b88e41a54f80161ac32e79b28f5b0218f93f1f042ff1b9af847f",
      "bundle_path_digest": "sha256:b3f96cea8295b88e41a54f80161ac32e79b28f5b0218f93f1f042ff1b9af847f",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.0",
      "creation_date": "2021-06-18T13:07:30.471000+00:00",
      "csv_description": "The Densify-Operator deploys the Densify Container Data Collection utility, which collects data from a Prometheus server and sends it to a Densify instance for analysis. \n\n# Prerequisites\n\n- Densify account, which is provided with a Densify subscription or through a free trial (https://www.densify.com/service/signup)\n- Prometheus (https://prometheus.io/)\n- Kube-state-metrics (https://github.com/kubernetes/kube-state-metrics)\n\n# Installing\n\n## Basic Install\nThe instruction below deploys the basic Densify Container Data Collection with minimal configuration.\n1. update the Densify hostname, user and encrypted password, Prometheus hostname and port, and zip filename:\n```\napiVersion: densify.com/v1\nkind: Densify\nmetadata:\n  name: densify\nspec:\n  config:\n    densify:\n      hostname: <instance>.densify.com\n      port: 443\n      protocol: https\n      user: <densify user>\n      epassword: <encrypted densify user password>\n    prometheus:\n      hostname: <prometheus hostname>\n      port: <prometheus port>\n      protocol: http\n    zipname: data/<zip name>\n```\n\n## Install Using a Secret for User and Password\nThe instructions below deploy the Densify Container Data Collection using a secret to store the username and encrypted password.\n1. Create a secret that contains the username and epassword keys.\n```\noc -n \"<namespace deploying operator into>\" create secret generic densify-secret \\\n  --from-literal=username=\"<densify username>\" \\\n  --from-literal=epassword=\"<encrypted password>\" \\\n```\n2. Update the Densify hostname, Prometheus hostname and port, and zip filename:\n```\napiVersion: densify.com/v1\nkind: Densify\nmetadata:\n  name: densify\nspec:\n  config:\n    densify:\n      hostname: <instance>.densify.com\n      port: 443\n      protocol: https\n      UserSecretName: densify-secret\n    prometheus:\n      hostname: <prometheus hostname>\n      port: <prometheus port>\n      protocol: http\n    zipname: data/<zip name>\n```\n# Configuration\n \nThe configuration parameters are the same set as the [Densify Forwarder](https://github.com/densify-dev/helm-charts/tree/master/charts/container-optimization-data-forwarder#configuration) helm chart:\n\n| Parameter        | Description           | Default |\n| ------------- |-------------|--------|\n| `config.densify.hostname` | Specify the Densify instance hostname. You may need to specify a fully qualified domain name. | `<instance>.densify.com` |\n| `config.densify.protocol` | Specify the Densify connection protocol: http or https. | `<http/https>` |\n| `config.densify.port` | Specify the Densify connection port number. | `443` |\n| `config.densify.user` | Specify the Densify user account. You must specify either a password or an epassword along with this parameter. This user must already exist in your Densify instance and have API access privileges. Alternatively, you can use config.densify.UserSecretName for authentication instead of user/(e)password combination (see UserSecretName below). | `nil` |\n| `config.densify.password` | Specify the password for the Densify user. Only specify a password or an encrypted password (not both). | `nil` |\n| `config.densify.epassword` | Specify the encrypted password for the Densify User. If you specify an encrypted password, then disable the config.densify.password paramter. | `nil` |\n| `config.densify.UserSecretName` | Specify the secret name used to store the Densify user and epassword (keys must contain username and epassword). If this parameter is used, then config.densify.username\\password\\epassword parameters must be disabled. | `nil` |\n| `config.prometheus.hostname` | Specify the Prometheus address. Using the internal service name is recommended (i.e. `<service name>.<namespace>.svc`). | `nil` |\n| `config.prometheus.protocol` | Specify the Prometheus connection protocol: http or https. | `<http/https>` |\n| `config.prometheus.port` | Specify the Prometheus service connection port. | `9090` |\n| `config.prometheus.clustername` | Specify the name to identify the cluster in the Densify UI. If this parameter is disabled, then the specified Prometheus hostname is used to identify the cluster in the Densify UI. | `nil` |\n| `config.zipname` | Specify the name of the zipfile to send to Densify. | `data/nil` |\n| `rbac.create` | This flag indicates if RBAC resources are created and used. This flag must be \"true\" for API access to Prometheus in a secured cluster. | `true` |\n| `serviceAccount.create` | Specify \"true\" to create a Service Account with the name specified by the serviceAccount.name parameter (see below). | `true` |\n| `serviceAccount.name` | Specify the name of the Service Account. If this parameter is disabled, then the Helm chart name is used as the Service Account name. You can specify an existing Service Account name to use, if serviceAccount.create == \"false\". | `nil` |\n\nRefer to the [Densify Forwarder](https://github.com/densify-dev/helm-charts/tree/master/charts/container-optimization-data-forwarder#configuration) helm chart for the full list of parameters.\n\n# Limitation\n* OS Support: Linux\n* Architecture: AMD64\n\n# Documentation\n* [Densify Feature Description and Reference Guide](https://www.densify.com/docs/Content/Welcome.htm)\n\n# License\nApache 2 Licensed. See [LICENSE](LICENSE) for full details.",
      "csv_display_name": "Densify Operator",
      "csv_metadata_description": "Densify Container Resource Management works to identify better supply (resource) allocations for your underlying containers based on key technical, business and cost criteria.  Any infrastructure changes recommended by Densify can be moderated through your existing ITSM framework / processes.",
      "csv_name": "densify-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:16:22.375000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "densify-operator",
      "provided_apis": [
        {
          "group": "densify.com",
          "kind": "Densify",
          "plural": "densifies",
          "version": "v1"
        },
        {
          "group": "densify.com",
          "kind": "Densify",
          "plural": "densifies",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "image": "registry.connect.redhat.com/densify/densify-operator@sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "name": "densify-operator-4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c-annotation"
        },
        {
          "digest": "sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "image": "registry.connect.redhat.com/densify/densify-operator@sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "name": "densify-operator"
        },
        {
          "digest": "sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "name": "densify"
        },
        {
          "digest": "sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "name": "container-data-collection-forwarder-35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360-annotation"
        }
      ],
      "replaces": "",
      "skip_range": ">=0.0.2 <1.0.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "60cc9b2b4924e145193315e2",
      "alm_examples": [
        {
          "api_version": "densify.com/v1",
          "kind": "Densify",
          "metadata": {
            "name": "densify"
          },
          "spec": {
            "affinity": {},
            "config": {
              "cronJob": {
                "schedule": "0 * * * *"
              },
              "debug": false,
              "densify": {
                "epassword": "<encrypted densify user password>",
                "hostname": "<instance>.densify.com",
                "port": 443,
                "protocol": "https",
                "user": "<densify user>"
              },
              "prometheus": {
                "hostname": "<prometheus hostname>",
                "port": "<prometheus port>",
                "protocol": "http"
              },
              "zipEnabled": true,
              "zipname": "data/<zip name>"
            },
            "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
            "nodeSelector": {},
            "pullPolicy": "Always",
            "replicaCount": 1,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/densify/densify-operator-bundle@sha256:b3f96cea8295b88e41a54f80161ac32e79b28f5b0218f93f1f042ff1b9af847f",
      "bundle_path_digest": "sha256:b3f96cea8295b88e41a54f80161ac32e79b28f5b0218f93f1f042ff1b9af847f",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.0",
      "creation_date": "2021-06-18T13:10:03.968000+00:00",
      "csv_description": "The Densify-Operator deploys the Densify Container Data Collection utility, which collects data from a Prometheus server and sends it to a Densify instance for analysis. \n\n# Prerequisites\n\n- Densify account, which is provided with a Densify subscription or through a free trial (https://www.densify.com/service/signup)\n- Prometheus (https://prometheus.io/)\n- Kube-state-metrics (https://github.com/kubernetes/kube-state-metrics)\n\n# Installing\n\n## Basic Install\nThe instruction below deploys the basic Densify Container Data Collection with minimal configuration.\n1. update the Densify hostname, user and encrypted password, Prometheus hostname and port, and zip filename:\n```\napiVersion: densify.com/v1\nkind: Densify\nmetadata:\n  name: densify\nspec:\n  config:\n    densify:\n      hostname: <instance>.densify.com\n      port: 443\n      protocol: https\n      user: <densify user>\n      epassword: <encrypted densify user password>\n    prometheus:\n      hostname: <prometheus hostname>\n      port: <prometheus port>\n      protocol: http\n    zipname: data/<zip name>\n```\n\n## Install Using a Secret for User and Password\nThe instructions below deploy the Densify Container Data Collection using a secret to store the username and encrypted password.\n1. Create a secret that contains the username and epassword keys.\n```\noc -n \"<namespace deploying operator into>\" create secret generic densify-secret \\\n  --from-literal=username=\"<densify username>\" \\\n  --from-literal=epassword=\"<encrypted password>\" \\\n```\n2. Update the Densify hostname, Prometheus hostname and port, and zip filename:\n```\napiVersion: densify.com/v1\nkind: Densify\nmetadata:\n  name: densify\nspec:\n  config:\n    densify:\n      hostname: <instance>.densify.com\n      port: 443\n      protocol: https\n      UserSecretName: densify-secret\n    prometheus:\n      hostname: <prometheus hostname>\n      port: <prometheus port>\n      protocol: http\n    zipname: data/<zip name>\n```\n# Configuration\n \nThe configuration parameters are the same set as the [Densify Forwarder](https://github.com/densify-dev/helm-charts/tree/master/charts/container-optimization-data-forwarder#configuration) helm chart:\n\n| Parameter        | Description           | Default |\n| ------------- |-------------|--------|\n| `config.densify.hostname` | Specify the Densify instance hostname. You may need to specify a fully qualified domain name. | `<instance>.densify.com` |\n| `config.densify.protocol` | Specify the Densify connection protocol: http or https. | `<http/https>` |\n| `config.densify.port` | Specify the Densify connection port number. | `443` |\n| `config.densify.user` | Specify the Densify user account. You must specify either a password or an epassword along with this parameter. This user must already exist in your Densify instance and have API access privileges. Alternatively, you can use config.densify.UserSecretName for authentication instead of user/(e)password combination (see UserSecretName below). | `nil` |\n| `config.densify.password` | Specify the password for the Densify user. Only specify a password or an encrypted password (not both). | `nil` |\n| `config.densify.epassword` | Specify the encrypted password for the Densify User. If you specify an encrypted password, then disable the config.densify.password paramter. | `nil` |\n| `config.densify.UserSecretName` | Specify the secret name used to store the Densify user and epassword (keys must contain username and epassword). If this parameter is used, then config.densify.username\\password\\epassword parameters must be disabled. | `nil` |\n| `config.prometheus.hostname` | Specify the Prometheus address. Using the internal service name is recommended (i.e. `<service name>.<namespace>.svc`). | `nil` |\n| `config.prometheus.protocol` | Specify the Prometheus connection protocol: http or https. | `<http/https>` |\n| `config.prometheus.port` | Specify the Prometheus service connection port. | `9090` |\n| `config.prometheus.clustername` | Specify the name to identify the cluster in the Densify UI. If this parameter is disabled, then the specified Prometheus hostname is used to identify the cluster in the Densify UI. | `nil` |\n| `config.zipname` | Specify the name of the zipfile to send to Densify. | `data/nil` |\n| `rbac.create` | This flag indicates if RBAC resources are created and used. This flag must be \"true\" for API access to Prometheus in a secured cluster. | `true` |\n| `serviceAccount.create` | Specify \"true\" to create a Service Account with the name specified by the serviceAccount.name parameter (see below). | `true` |\n| `serviceAccount.name` | Specify the name of the Service Account. If this parameter is disabled, then the Helm chart name is used as the Service Account name. You can specify an existing Service Account name to use, if serviceAccount.create == \"false\". | `nil` |\n\nRefer to the [Densify Forwarder](https://github.com/densify-dev/helm-charts/tree/master/charts/container-optimization-data-forwarder#configuration) helm chart for the full list of parameters.\n\n# Limitation\n* OS Support: Linux\n* Architecture: AMD64\n\n# Documentation\n* [Densify Feature Description and Reference Guide](https://www.densify.com/docs/Content/Welcome.htm)\n\n# License\nApache 2 Licensed. See [LICENSE](LICENSE) for full details.",
      "csv_display_name": "Densify Operator",
      "csv_metadata_description": "Densify Container Resource Management works to identify better supply (resource) allocations for your underlying containers based on key technical, business and cost criteria.  Any infrastructure changes recommended by Densify can be moderated through your existing ITSM framework / processes.",
      "csv_name": "densify-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:17:57.602000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "densify-operator",
      "provided_apis": [
        {
          "group": "densify.com",
          "kind": "Densify",
          "plural": "densifies",
          "version": "v1"
        },
        {
          "group": "densify.com",
          "kind": "Densify",
          "plural": "densifies",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "image": "registry.connect.redhat.com/densify/densify-operator@sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "name": "densify-operator-4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c-annotation"
        },
        {
          "digest": "sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "image": "registry.connect.redhat.com/densify/densify-operator@sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "name": "densify-operator"
        },
        {
          "digest": "sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "name": "densify"
        },
        {
          "digest": "sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "name": "container-data-collection-forwarder-35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360-annotation"
        }
      ],
      "replaces": "",
      "skip_range": ">=0.0.2 <1.0.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "60cd264a5f14ddb47d3b731e",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "example-neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "exporter": {
              "CTRL_PASSWORD": "admin",
              "CTRL_USERNAME": "admin",
              "enabled": false,
              "scrapping": true
            },
            "imagePullSecrets": "regsecret",
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "route": {
                  "enabled": true,
                  "termination": "passthrough"
                },
                "type": "NodePort"
              }
            },
            "openshift": true,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:a3150ff18aa21ddeb3a7e052b3bbc65616b62c1d557e910b13528c85c8b9196a",
      "bundle_path_digest": "sha256:a3150ff18aa21ddeb3a7e052b3bbc65616b62c1d557e910b13528c85c8b9196a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-06-18T23:03:38.667000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [NeuVector Helm Chart](https://github.com/neuvector/neuvector-helm) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart. \n\n**Complete below steps to create secret for accessing Docker or similar registry and Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nConfigure OpenShift to pull images from the private NeuVector registry on Docker Hub\n\n         oc create secret docker-registry regsecret -n neuvector --docker-server=https://index.docker.io/v1/ --docker-username=your-name --docker-password=your-pword --docker-email=your-email\n\t\t\t\t \n\nWhere \u2019your-name\u2019 is your Docker username, \u2019your-pword\u2019 is your Docker password, \u2019your-email\u2019 is your Docker email.\n\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "Neuvector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:00:18.465000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "name": "neuvector-operator-9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37-annotation"
        },
        {
          "digest": "sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "updater"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager-0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d-annotation"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer-5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1-annotation"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner-2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544-annotation"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "ubi8-2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5-annotation"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller-063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.2.6",
      "version_original": "1.2.6"
    },
    {
      "_id": "60cd27095f14ddb47d3b731f",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "example-neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "exporter": {
              "CTRL_PASSWORD": "admin",
              "CTRL_USERNAME": "admin",
              "enabled": false,
              "scrapping": true
            },
            "imagePullSecrets": "regsecret",
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "route": {
                  "enabled": true,
                  "termination": "passthrough"
                },
                "type": "NodePort"
              }
            },
            "openshift": true,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:a3150ff18aa21ddeb3a7e052b3bbc65616b62c1d557e910b13528c85c8b9196a",
      "bundle_path_digest": "sha256:a3150ff18aa21ddeb3a7e052b3bbc65616b62c1d557e910b13528c85c8b9196a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-06-18T23:06:49.846000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [NeuVector Helm Chart](https://github.com/neuvector/neuvector-helm) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart. \n\n**Complete below steps to create secret for accessing Docker or similar registry and Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nConfigure OpenShift to pull images from the private NeuVector registry on Docker Hub\n\n         oc create secret docker-registry regsecret -n neuvector --docker-server=https://index.docker.io/v1/ --docker-username=your-name --docker-password=your-pword --docker-email=your-email\n\t\t\t\t \n\nWhere \u2019your-name\u2019 is your Docker username, \u2019your-pword\u2019 is your Docker password, \u2019your-email\u2019 is your Docker email.\n\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "Neuvector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:52:13.784000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "name": "neuvector-operator-9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37-annotation"
        },
        {
          "digest": "sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "updater"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager-0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d-annotation"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer-5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1-annotation"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner-2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544-annotation"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "ubi8-2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5-annotation"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller-063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.2.6",
      "version_original": "1.2.6"
    },
    {
      "_id": "60cd271f4924e1451933160f",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "example-neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "exporter": {
              "CTRL_PASSWORD": "admin",
              "CTRL_USERNAME": "admin",
              "enabled": false,
              "scrapping": true
            },
            "imagePullSecrets": "regsecret",
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "route": {
                  "enabled": true,
                  "termination": "passthrough"
                },
                "type": "NodePort"
              }
            },
            "openshift": true,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:a3150ff18aa21ddeb3a7e052b3bbc65616b62c1d557e910b13528c85c8b9196a",
      "bundle_path_digest": "sha256:a3150ff18aa21ddeb3a7e052b3bbc65616b62c1d557e910b13528c85c8b9196a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-06-18T23:07:11.093000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [NeuVector Helm Chart](https://github.com/neuvector/neuvector-helm) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart. \n\n**Complete below steps to create secret for accessing Docker or similar registry and Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nConfigure OpenShift to pull images from the private NeuVector registry on Docker Hub\n\n         oc create secret docker-registry regsecret -n neuvector --docker-server=https://index.docker.io/v1/ --docker-username=your-name --docker-password=your-pword --docker-email=your-email\n\t\t\t\t \n\nWhere \u2019your-name\u2019 is your Docker username, \u2019your-pword\u2019 is your Docker password, \u2019your-email\u2019 is your Docker email.\n\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "Neuvector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:16:08.015000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "name": "neuvector-operator-9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37-annotation"
        },
        {
          "digest": "sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "updater"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager-0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d-annotation"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer-5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1-annotation"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner-2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544-annotation"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "ubi8-2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5-annotation"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller-063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.2.6",
      "version_original": "1.2.6"
    },
    {
      "_id": "60cd2d555f14ddb47d3b7320",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "example-neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "exporter": {
              "CTRL_PASSWORD": "admin",
              "CTRL_USERNAME": "admin",
              "enabled": false,
              "scrapping": true
            },
            "imagePullSecrets": "regsecret",
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "route": {
                  "enabled": true,
                  "termination": "passthrough"
                },
                "type": "NodePort"
              }
            },
            "openshift": true,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:a3150ff18aa21ddeb3a7e052b3bbc65616b62c1d557e910b13528c85c8b9196a",
      "bundle_path_digest": "sha256:a3150ff18aa21ddeb3a7e052b3bbc65616b62c1d557e910b13528c85c8b9196a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-06-18T23:33:41.097000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [NeuVector Helm Chart](https://github.com/neuvector/neuvector-helm) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart. \n\n**Complete below steps to create secret for accessing Docker or similar registry and Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nConfigure OpenShift to pull images from the private NeuVector registry on Docker Hub\n\n         oc create secret docker-registry regsecret -n neuvector --docker-server=https://index.docker.io/v1/ --docker-username=your-name --docker-password=your-pword --docker-email=your-email\n\t\t\t\t \n\nWhere \u2019your-name\u2019 is your Docker username, \u2019your-pword\u2019 is your Docker password, \u2019your-email\u2019 is your Docker email.\n\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "Neuvector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:15:47.210000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "name": "neuvector-operator-9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37-annotation"
        },
        {
          "digest": "sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "updater"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager-0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d-annotation"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer-5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1-annotation"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner-2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544-annotation"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "ubi8-2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5-annotation"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller-063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.2.6",
      "version_original": "1.2.6"
    },
    {
      "_id": "60d1bca4e8987f225c721735",
      "alm_examples": [
        {
          "api_version": "sriovfec.intel.com/v1",
          "kind": "SriovFecClusterConfig",
          "metadata": {
            "name": "config",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "nodes": [
              {
                "nodeName": "",
                "physicalFunctions": [
                  {
                    "bbDevConfig": {
                      "n3000": {
                        "downlink": {
                          "bandwidth": 3,
                          "loadBalance": 128,
                          "queues": {
                            "vf0": 16,
                            "vf1": 16,
                            "vf2": 0,
                            "vf3": 0,
                            "vf4": 0,
                            "vf5": 0,
                            "vf6": 0,
                            "vf7": 0
                          }
                        },
                        "flrTimeout": 610,
                        "networkType": "FPGA_5GNR",
                        "pfMode": true,
                        "uplink": {
                          "bandwidth": 3,
                          "loadBalance": 128,
                          "queues": {
                            "vf0": 16,
                            "vf1": 16,
                            "vf2": 0,
                            "vf3": 0,
                            "vf4": 0,
                            "vf5": 0,
                            "vf6": 0,
                            "vf7": 0
                          }
                        }
                      }
                    },
                    "pciAddress": "",
                    "pfDriver": "pci-pf-stub",
                    "vfAmount": 2,
                    "vfDriver": "vfio-pci"
                  }
                ]
              }
            ]
          }
        },
        {
          "api_version": "sriovfec.intel.com/v1",
          "kind": "SriovFecNodeConfig",
          "metadata": {
            "name": "worker-0",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "physicalFunctions": [
              {
                "bbDevConfig": {
                  "n3000": {
                    "downlink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    },
                    "flrTimeout": 610,
                    "networkType": "FPGA_5GNR",
                    "pfMode": true,
                    "uplink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    }
                  }
                },
                "pci_addr": "",
                "pf_driver": "pci-pf-stub",
                "vf_amount": 2,
                "vf_driver": "vfio-pci"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/sriov-fec-operator-bundle@sha256:d4f50ab741cc4df402ed5feaf67e9d01d004e5c0100bde3dedafed1c85ee7aad",
      "bundle_path_digest": "sha256:d4f50ab741cc4df402ed5feaf67e9d01d004e5c0100bde3dedafed1c85ee7aad",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-22T10:34:12.388000+00:00",
      "csv_description": "The Intel\u00ae FPGA Programmable Acceleration Card N3000 (Intel\u00ae FPGA PAC N3000) is a highly customizable FPGA SmartNIC which enables high-throughput, low latency and high-bandwith applications.  It allows the optimization of data plane performance to reduce total cost of ownership while maintaining a high degree of flexibility.  The Intel FPGA PAC N3000 plays a key role in accelerating 5G and network functions virtualization (NFV) adoption for ecosystem partners such as telecommunications equipment manufacturers (TEMs) virtual network functions (VNF) vendors, system integrators and telcos, to bring scalable and high-performance solutions to market. The Intel FPGA PAC N3000 includes a variant that is design to be Network Equipment Building System (NEBS)-friendly, and features a Root-of-Trust device that helps protect systems from FPGA host security exploits. This document explains how the FPGA resource can be used on the Open Network Edge Services Software (OpenNESS) platform for accelerating network functions and edge application workloads. We use the Intel\u00ae FPGA PAC N3000 as a reference FPGA PAC and use LTE/5G Forward Error Correction (FEC) as an example workload that accelerates the 5G or 4G L1 base station network function. The same concept and mechanism is applicable for application acceleration workloads like AI and ML on FPGA for Inference applications. The Intel\u00ae FPGA PAC N3000 is a full-duplex, 100 Gbps in-system, re-programmable acceleration card for multi-workload networking application acceleration. It has an optimal memory mixture designed for network functions, with an integrated network interface card (NIC) in a small form factor that enables high throughput, low latency, and low power per bit for a custom networking pipeline. The ACC100 supports the O-RAN adopted DPDK BBDev API - an API which Intel contributed to the opensource community to enable choice and TTM for FEC acceleration solutions. The FlexRAN software reference architecture supports the ACC100 which enables users to quickly evaluate and build platforms for the wide range of vRAN networks. Reduces platform power, E2E latency and Intel\u00ae CPU core count requirements as well as increases cell capacity than existing programmable accelerator. Accelerates both 4G and 5G data concurrently.\tLowers development cost using commercial off the shelf (COTS) servers. Accommodates space-constrained implementations via a low-profile PCIe card form factor. Enables a variety of flexible FlexRAN deployments from small cell to macro to Massive MIMO networks. Supports extended temperature for the most challenging of RAN deployment scenario\u2019s.",
      "csv_display_name": "OpenNESS SR-IOV Operator for Wireless FEC Accelerators",
      "csv_metadata_description": "",
      "csv_name": "sriov-fec.v1.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:06:07.624000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "sriov-fec",
      "provided_apis": [
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecClusterConfig",
          "plural": "sriovfecclusterconfigs",
          "version": "v1"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecNodeConfig",
          "plural": "sriovfecnodeconfigs",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:2bf5d908eb9e5a6ce4ae4785b7afb72aae454138540d632d61a261665d06f5f6",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:2bf5d908eb9e5a6ce4ae4785b7afb72aae454138540d632d61a261665d06f5f6",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.2.1",
      "version_original": "1.2.1"
    },
    {
      "_id": "60d2e3a3e8987f225c721778",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:093d48116235a4f03dbd35f876c9d0497e0fb050514c9e07beece810f52d27fd",
      "bundle_path_digest": "sha256:093d48116235a4f03dbd35f876c9d0497e0fb050514c9e07beece810f52d27fd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-23T07:32:51.749000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100200.14",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:49:05.145000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "navigator-operator-8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3-annotation"
        },
        {
          "digest": "sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "name": "domain"
        },
        {
          "digest": "sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "name": "cm"
        },
        {
          "digest": "sha256:0c2094915caa244aa04d0ae9cb5b9c360d7767056493953675b0b7ce38cb1d45",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:0c2094915caa244aa04d0ae9cb5b9c360d7767056493953675b0b7ce38cb1d45",
          "name": "wgs"
        },
        {
          "digest": "sha256:57cc96e8925607f9c74d43b49867809d97d4d65586ded202219604334311a7af",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:57cc96e8925607f9c74d43b49867809d97d4d65586ded202219604334311a7af",
          "name": "navigator"
        },
        {
          "digest": "sha256:8bc136d1b81e007eb01d8753df04e14e5bdc2fe4a502f26ba878f549cbc5b647",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:8bc136d1b81e007eb01d8753df04e14e5bdc2fe4a502f26ba878f549cbc5b647",
          "name": "mysql"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.100200.14",
      "version_original": "1.100200.14"
    },
    {
      "_id": "60d2e3b3e8987f225c721779",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:093d48116235a4f03dbd35f876c9d0497e0fb050514c9e07beece810f52d27fd",
      "bundle_path_digest": "sha256:093d48116235a4f03dbd35f876c9d0497e0fb050514c9e07beece810f52d27fd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-23T07:33:07.787000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100200.14",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:20:22.091000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "navigator-operator-8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3-annotation"
        },
        {
          "digest": "sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "name": "domain"
        },
        {
          "digest": "sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "name": "cm"
        },
        {
          "digest": "sha256:0c2094915caa244aa04d0ae9cb5b9c360d7767056493953675b0b7ce38cb1d45",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:0c2094915caa244aa04d0ae9cb5b9c360d7767056493953675b0b7ce38cb1d45",
          "name": "wgs"
        },
        {
          "digest": "sha256:57cc96e8925607f9c74d43b49867809d97d4d65586ded202219604334311a7af",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:57cc96e8925607f9c74d43b49867809d97d4d65586ded202219604334311a7af",
          "name": "navigator"
        },
        {
          "digest": "sha256:8bc136d1b81e007eb01d8753df04e14e5bdc2fe4a502f26ba878f549cbc5b647",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:8bc136d1b81e007eb01d8753df04e14e5bdc2fe4a502f26ba878f549cbc5b647",
          "name": "mysql"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.100200.14",
      "version_original": "1.100200.14"
    },
    {
      "_id": "60d2e4afe8987f225c72177e",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:093d48116235a4f03dbd35f876c9d0497e0fb050514c9e07beece810f52d27fd",
      "bundle_path_digest": "sha256:093d48116235a4f03dbd35f876c9d0497e0fb050514c9e07beece810f52d27fd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-23T07:37:19.141000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100200.14",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:12:31.958000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "navigator-operator-8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3-annotation"
        },
        {
          "digest": "sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "name": "domain"
        },
        {
          "digest": "sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "name": "cm"
        },
        {
          "digest": "sha256:0c2094915caa244aa04d0ae9cb5b9c360d7767056493953675b0b7ce38cb1d45",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:0c2094915caa244aa04d0ae9cb5b9c360d7767056493953675b0b7ce38cb1d45",
          "name": "wgs"
        },
        {
          "digest": "sha256:57cc96e8925607f9c74d43b49867809d97d4d65586ded202219604334311a7af",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:57cc96e8925607f9c74d43b49867809d97d4d65586ded202219604334311a7af",
          "name": "navigator"
        },
        {
          "digest": "sha256:8bc136d1b81e007eb01d8753df04e14e5bdc2fe4a502f26ba878f549cbc5b647",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:8bc136d1b81e007eb01d8753df04e14e5bdc2fe4a502f26ba878f549cbc5b647",
          "name": "mysql"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.100200.14",
      "version_original": "1.100200.14"
    },
    {
      "_id": "60d2e4c5e8987f225c72177f",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:093d48116235a4f03dbd35f876c9d0497e0fb050514c9e07beece810f52d27fd",
      "bundle_path_digest": "sha256:093d48116235a4f03dbd35f876c9d0497e0fb050514c9e07beece810f52d27fd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-23T07:37:41.348000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100200.14",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:10:20.426000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "navigator-operator-8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3-annotation"
        },
        {
          "digest": "sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "name": "domain"
        },
        {
          "digest": "sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "name": "cm"
        },
        {
          "digest": "sha256:0c2094915caa244aa04d0ae9cb5b9c360d7767056493953675b0b7ce38cb1d45",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:0c2094915caa244aa04d0ae9cb5b9c360d7767056493953675b0b7ce38cb1d45",
          "name": "wgs"
        },
        {
          "digest": "sha256:57cc96e8925607f9c74d43b49867809d97d4d65586ded202219604334311a7af",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:57cc96e8925607f9c74d43b49867809d97d4d65586ded202219604334311a7af",
          "name": "navigator"
        },
        {
          "digest": "sha256:8bc136d1b81e007eb01d8753df04e14e5bdc2fe4a502f26ba878f549cbc5b647",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:8bc136d1b81e007eb01d8753df04e14e5bdc2fe4a502f26ba878f549cbc5b647",
          "name": "mysql"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.100200.14",
      "version_original": "1.100200.14"
    },
    {
      "_id": "60d2f202e8987f225c721782",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Db2-zos-db",
          "metadata": {
            "name": "db2-zos-db-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-operator@sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-nocode@sha256:f801fcb8a5c445ffce1dadcdca2f557f58ab40538721646320cff9401523561a",
      "bundle_path_digest": "sha256:f801fcb8a5c445ffce1dadcdca2f557f58ab40538721646320cff9401523561a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-23T08:34:10.123000+00:00",
      "csv_description": "OpenLegacy no-code application that allows simple configuration-based integration to DB2 DBs",
      "csv_display_name": "OpenLegacy Db2 Integration Image",
      "csv_metadata_description": "This image contains an OpenLegacy no-code application that allows simple configuration-based integration to DB2 DBs.",
      "csv_name": "db2-zos-db-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:54:59.218000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "db2-zos-db-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Db2-zos-db",
          "plural": "db2-zos-dbs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-operator@sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "name": "db2-zos-db-operator-129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-operator@sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "name": "db2-zos-db-operator"
        },
        {
          "digest": "sha256:eb195fbbea2b261a55f69c074d057eb5813330e6f25d846e603e752c3d1662ed",
          "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db@sha256:eb195fbbea2b261a55f69c074d057eb5813330e6f25d846e603e752c3d1662ed",
          "name": "db2_zos_db"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "60d2f288e8987f225c721784",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Db2-zos-db",
          "metadata": {
            "name": "db2-zos-db-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-operator@sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-nocode@sha256:f801fcb8a5c445ffce1dadcdca2f557f58ab40538721646320cff9401523561a",
      "bundle_path_digest": "sha256:f801fcb8a5c445ffce1dadcdca2f557f58ab40538721646320cff9401523561a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-23T08:36:24.533000+00:00",
      "csv_description": "OpenLegacy no-code application that allows simple configuration-based integration to DB2 DBs",
      "csv_display_name": "OpenLegacy Db2 Integration Image",
      "csv_metadata_description": "This image contains an OpenLegacy no-code application that allows simple configuration-based integration to DB2 DBs.",
      "csv_name": "db2-zos-db-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:21:52.262000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "db2-zos-db-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Db2-zos-db",
          "plural": "db2-zos-dbs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-operator@sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "name": "db2-zos-db-operator-129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-operator@sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "name": "db2-zos-db-operator"
        },
        {
          "digest": "sha256:eb195fbbea2b261a55f69c074d057eb5813330e6f25d846e603e752c3d1662ed",
          "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db@sha256:eb195fbbea2b261a55f69c074d057eb5813330e6f25d846e603e752c3d1662ed",
          "name": "db2_zos_db"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "60d2f294ff2993d811818489",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Db2-zos-db",
          "metadata": {
            "name": "db2-zos-db-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-operator@sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-nocode@sha256:f801fcb8a5c445ffce1dadcdca2f557f58ab40538721646320cff9401523561a",
      "bundle_path_digest": "sha256:f801fcb8a5c445ffce1dadcdca2f557f58ab40538721646320cff9401523561a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-23T08:36:36.574000+00:00",
      "csv_description": "OpenLegacy no-code application that allows simple configuration-based integration to DB2 DBs",
      "csv_display_name": "OpenLegacy Db2 Integration Image",
      "csv_metadata_description": "This image contains an OpenLegacy no-code application that allows simple configuration-based integration to DB2 DBs.",
      "csv_name": "db2-zos-db-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:05:10.210000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "db2-zos-db-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Db2-zos-db",
          "plural": "db2-zos-dbs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-operator@sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "name": "db2-zos-db-operator-129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-operator@sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "name": "db2-zos-db-operator"
        },
        {
          "digest": "sha256:eb195fbbea2b261a55f69c074d057eb5813330e6f25d846e603e752c3d1662ed",
          "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db@sha256:eb195fbbea2b261a55f69c074d057eb5813330e6f25d846e603e752c3d1662ed",
          "name": "db2_zos_db"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "60d2f339e8987f225c721785",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Db2-zos-db",
          "metadata": {
            "name": "db2-zos-db-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-operator@sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-nocode@sha256:f801fcb8a5c445ffce1dadcdca2f557f58ab40538721646320cff9401523561a",
      "bundle_path_digest": "sha256:f801fcb8a5c445ffce1dadcdca2f557f58ab40538721646320cff9401523561a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-23T08:39:21.302000+00:00",
      "csv_description": "OpenLegacy no-code application that allows simple configuration-based integration to DB2 DBs",
      "csv_display_name": "OpenLegacy Db2 Integration Image",
      "csv_metadata_description": "This image contains an OpenLegacy no-code application that allows simple configuration-based integration to DB2 DBs.",
      "csv_name": "db2-zos-db-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:09:01.751000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "db2-zos-db-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Db2-zos-db",
          "plural": "db2-zos-dbs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-operator@sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "name": "db2-zos-db-operator-129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-operator@sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "name": "db2-zos-db-operator"
        },
        {
          "digest": "sha256:eb195fbbea2b261a55f69c074d057eb5813330e6f25d846e603e752c3d1662ed",
          "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db@sha256:eb195fbbea2b261a55f69c074d057eb5813330e6f25d846e603e752c3d1662ed",
          "name": "db2_zos_db"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "60d30013e8987f225c721789",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Ibm-mq",
          "metadata": {
            "name": "ibm-mq-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq@sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/ibm-mq-nocode@sha256:b9e465dbc5c71c11b11b65bc06aec82e8cb933e0bd610ce36de20cc36028930b",
      "bundle_path_digest": "sha256:b9e465dbc5c71c11b11b65bc06aec82e8cb933e0bd610ce36de20cc36028930b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-23T09:34:11.328000+00:00",
      "csv_description": "no-code application that allows simple configuration-based integration to MQ queues.",
      "csv_display_name": "OpenLegacy No-code Integration with MQ",
      "csv_metadata_description": "This image contains an OpenLegacy no-code application that allows simple configuration-based integration to MQ queues.",
      "csv_name": "ibm-mq-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:22:58.919000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "ibm-mq-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Ibm-mq",
          "plural": "ibm-mqs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa",
          "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq-operator@sha256:8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa",
          "name": "ibm-mq-operator-8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa",
          "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq-operator@sha256:8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa",
          "name": "ibm-mq-operator"
        },
        {
          "digest": "sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
          "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq@sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
          "name": "ibm_mq"
        },
        {
          "digest": "sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
          "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq@sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
          "name": "ibm-mq-49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "60d306bee8987f225c72178b",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Ibm-mq",
          "metadata": {
            "name": "ibm-mq-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq@sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/ibm-mq-nocode@sha256:b9e465dbc5c71c11b11b65bc06aec82e8cb933e0bd610ce36de20cc36028930b",
      "bundle_path_digest": "sha256:b9e465dbc5c71c11b11b65bc06aec82e8cb933e0bd610ce36de20cc36028930b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-23T10:02:38.065000+00:00",
      "csv_description": "no-code application that allows simple configuration-based integration to MQ queues.",
      "csv_display_name": "OpenLegacy No-code Integration with MQ",
      "csv_metadata_description": "This image contains an OpenLegacy no-code application that allows simple configuration-based integration to MQ queues.",
      "csv_name": "ibm-mq-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:16:49.148000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "ibm-mq-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Ibm-mq",
          "plural": "ibm-mqs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa",
          "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq-operator@sha256:8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa",
          "name": "ibm-mq-operator-8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa",
          "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq-operator@sha256:8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa",
          "name": "ibm-mq-operator"
        },
        {
          "digest": "sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
          "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq@sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
          "name": "ibm_mq"
        },
        {
          "digest": "sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
          "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq@sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
          "name": "ibm-mq-49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "60d307f1ff2993d81181848d",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Ibm-mq",
          "metadata": {
            "name": "ibm-mq-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq@sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/ibm-mq-nocode@sha256:b9e465dbc5c71c11b11b65bc06aec82e8cb933e0bd610ce36de20cc36028930b",
      "bundle_path_digest": "sha256:b9e465dbc5c71c11b11b65bc06aec82e8cb933e0bd610ce36de20cc36028930b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-23T10:07:45.936000+00:00",
      "csv_description": "no-code application that allows simple configuration-based integration to MQ queues.",
      "csv_display_name": "OpenLegacy No-code Integration with MQ",
      "csv_metadata_description": "This image contains an OpenLegacy no-code application that allows simple configuration-based integration to MQ queues.",
      "csv_name": "ibm-mq-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:59:13.763000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "ibm-mq-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Ibm-mq",
          "plural": "ibm-mqs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa",
          "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq-operator@sha256:8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa",
          "name": "ibm-mq-operator-8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa",
          "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq-operator@sha256:8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa",
          "name": "ibm-mq-operator"
        },
        {
          "digest": "sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
          "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq@sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
          "name": "ibm_mq"
        },
        {
          "digest": "sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
          "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq@sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
          "name": "ibm-mq-49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "60d34671e8987f225c721793",
      "alm_examples": [
        {
          "api_version": "operator.ionir.com/v1",
          "kind": "System",
          "metadata": {
            "name": "ionir"
          },
          "spec": {
            "imageRegistry": "quay.io/ionir",
            "profile": "minimal",
            "tag": "v2.4"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ionir/ionir-operator-bundle@sha256:ec331fa12813b989f8f43998b754cc7a724a2c6c472a9ccb23c21b51d0bcbbfe",
      "bundle_path_digest": "sha256:ec331fa12813b989f8f43998b754cc7a724a2c6c472a9ccb23c21b51d0bcbbfe",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-23T14:34:25.819000+00:00",
      "csv_description": "Ionir is a container-native data platform for Kubernetes.\nIonir virtualizes all available storage in a Kubernetes cluster to create a single pool of highly scalable storage.\nHaving a Container Storage Interface (CSI) plugin, Ionir storage can be provisioned and managed by Kubernetes,\nthe common control plane in the environment. In addition to providing resilient, high-performance storage, Ionir\nalso provides end-to-end data management capabilities. The Ionir architecture separates the metadata from the data,\nwhich enables unique data management capabilities such as instant clones. The microservices architecture provides\na unified data platform that is elastic, scalable, and agile, which is critical for containerized deployments.\n### Instant Data Mobility\nIonir gives K8s application data wings. Persistent volumes move at the speed of applications, in any direction, to and from anywhere - on-prem, cloud, public, private - in seconds!\nWhat\u2019s more, ionir transparently delivers everything you\u2019ve come to expect from enterprise storage \u2013 performance and scalability, data protection, replication, deduplication and more - built to run natively on Kubernetes clusters.\n### Enterprise-Class Data Protection\nOffering instant point-in-time restore with one second granularity, ionir\u2019s highly efficient data protection capabilities exceed even traditional monolithic arrays, and are unrivaled in K8s native storage.\n### Simple. Converged. Native.\nOne comprehensive platform \u2015 orchestrated by Kubernetes \u2015 serves, stores and manages all your K8s application data. All based on RESTful APIs for easy automation.\n### Aligned to Applications\nAdvanced machine learning ensures data is mapped to the optimal storage resource based on performance, density, cost, location, and other key factors.\n### How to install Ionir\n### Prerequisites\n* See details in [Ionir Deployment Requirements - OCP](https://github.com/ionir-cloud/deployments/blob/main/OpenShift/documents/Ionir%20Deployment%20Requirements%20-%20OCP.pdf)\n* Review Ionir [EULA] (https://ionir.com/legal/eula/)\n\n### Uninstall\nFirst remove all applications consuming Ionir storage prior to deleting Ionir system custom resource.<br>\nNote: Storage classes with Ionir provisioner should be deleted manually\n> :warning: This action uninstalls Ionir completely and wipes the entire data. This action can not be reversed.\n",
      "csv_display_name": "Ionir",
      "csv_metadata_description": "Ionir is a container-native data platform built in Kubernetes",
      "csv_name": "ionir-operator.v1.0.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:12:15.115000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "ionir-operator",
      "provided_apis": [
        {
          "group": "operator.ionir.com",
          "kind": "System",
          "plural": "systems",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d1763d87e8ff07d46bcc756d21e8c7ee54cf3761d98b84bc256c243bbb8fde0d",
          "image": "registry.connect.redhat.com/ionir/ionir-operator@sha256:d1763d87e8ff07d46bcc756d21e8c7ee54cf3761d98b84bc256c243bbb8fde0d",
          "name": "ionir-operator-d1763d87e8ff07d46bcc756d21e8c7ee54cf3761d98b84bc256c243bbb8fde0d-annotation"
        },
        {
          "digest": "sha256:d1763d87e8ff07d46bcc756d21e8c7ee54cf3761d98b84bc256c243bbb8fde0d",
          "image": "registry.connect.redhat.com/ionir/ionir-operator@sha256:d1763d87e8ff07d46bcc756d21e8c7ee54cf3761d98b84bc256c243bbb8fde0d",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.5",
      "version_original": "1.0.5"
    },
    {
      "_id": "60d34786e8987f225c721794",
      "alm_examples": [
        {
          "api_version": "operator.ionir.com/v1",
          "kind": "System",
          "metadata": {
            "name": "ionir"
          },
          "spec": {
            "imageRegistry": "quay.io/ionir",
            "profile": "minimal",
            "tag": "v2.4"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ionir/ionir-operator-bundle@sha256:ec331fa12813b989f8f43998b754cc7a724a2c6c472a9ccb23c21b51d0bcbbfe",
      "bundle_path_digest": "sha256:ec331fa12813b989f8f43998b754cc7a724a2c6c472a9ccb23c21b51d0bcbbfe",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-23T14:39:02.491000+00:00",
      "csv_description": "Ionir is a container-native data platform for Kubernetes.\nIonir virtualizes all available storage in a Kubernetes cluster to create a single pool of highly scalable storage.\nHaving a Container Storage Interface (CSI) plugin, Ionir storage can be provisioned and managed by Kubernetes,\nthe common control plane in the environment. In addition to providing resilient, high-performance storage, Ionir\nalso provides end-to-end data management capabilities. The Ionir architecture separates the metadata from the data,\nwhich enables unique data management capabilities such as instant clones. The microservices architecture provides\na unified data platform that is elastic, scalable, and agile, which is critical for containerized deployments.\n### Instant Data Mobility\nIonir gives K8s application data wings. Persistent volumes move at the speed of applications, in any direction, to and from anywhere - on-prem, cloud, public, private - in seconds!\nWhat\u2019s more, ionir transparently delivers everything you\u2019ve come to expect from enterprise storage \u2013 performance and scalability, data protection, replication, deduplication and more - built to run natively on Kubernetes clusters.\n### Enterprise-Class Data Protection\nOffering instant point-in-time restore with one second granularity, ionir\u2019s highly efficient data protection capabilities exceed even traditional monolithic arrays, and are unrivaled in K8s native storage.\n### Simple. Converged. Native.\nOne comprehensive platform \u2015 orchestrated by Kubernetes \u2015 serves, stores and manages all your K8s application data. All based on RESTful APIs for easy automation.\n### Aligned to Applications\nAdvanced machine learning ensures data is mapped to the optimal storage resource based on performance, density, cost, location, and other key factors.\n### How to install Ionir\n### Prerequisites\n* See details in [Ionir Deployment Requirements - OCP](https://github.com/ionir-cloud/deployments/blob/main/OpenShift/documents/Ionir%20Deployment%20Requirements%20-%20OCP.pdf)\n* Review Ionir [EULA] (https://ionir.com/legal/eula/)\n\n### Uninstall\nFirst remove all applications consuming Ionir storage prior to deleting Ionir system custom resource.<br>\nNote: Storage classes with Ionir provisioner should be deleted manually\n> :warning: This action uninstalls Ionir completely and wipes the entire data. This action can not be reversed.\n",
      "csv_display_name": "Ionir",
      "csv_metadata_description": "Ionir is a container-native data platform built in Kubernetes",
      "csv_name": "ionir-operator.v1.0.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:51:49.516000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "ionir-operator",
      "provided_apis": [
        {
          "group": "operator.ionir.com",
          "kind": "System",
          "plural": "systems",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d1763d87e8ff07d46bcc756d21e8c7ee54cf3761d98b84bc256c243bbb8fde0d",
          "image": "registry.connect.redhat.com/ionir/ionir-operator@sha256:d1763d87e8ff07d46bcc756d21e8c7ee54cf3761d98b84bc256c243bbb8fde0d",
          "name": "ionir-operator-d1763d87e8ff07d46bcc756d21e8c7ee54cf3761d98b84bc256c243bbb8fde0d-annotation"
        },
        {
          "digest": "sha256:d1763d87e8ff07d46bcc756d21e8c7ee54cf3761d98b84bc256c243bbb8fde0d",
          "image": "registry.connect.redhat.com/ionir/ionir-operator@sha256:d1763d87e8ff07d46bcc756d21e8c7ee54cf3761d98b84bc256c243bbb8fde0d",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.5",
      "version_original": "1.0.5"
    },
    {
      "_id": "60d3be84c7208e1f82577fe2",
      "alm_examples": [
        {
          "api_version": "csi.hpe.com/v1",
          "kind": "XSPC",
          "metadata": {
            "name": "xspc",
            "namespace": "kube-system"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/xspc-csi-operator-bundle@sha256:903632bab40110356f458d7e3e914c31bbff4eb3889e59bb05c1b588867a727a",
      "bundle_path_digest": "sha256:903632bab40110356f458d7e3e914c31bbff4eb3889e59bb05c1b588867a727a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-23T23:06:44.258000+00:00",
      "csv_description": "## About\n\n## Requirements\n\n### Supported Driver Version\n\n* XSPC v3.6.0\n\n### Supported Platforms\n\n* OpenShift v4.5, v4.6, v4.7\n\n### Supported Operating Systems\n\n* RHEL 7.x",
      "csv_display_name": "HPE XP Storage CSI Driver Operator for Kubernetes",
      "csv_metadata_description": "An operator for managing HPE XP Storage CSI Driver Operator for Kubernetes.",
      "csv_name": "xspc-operator.1.6.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:13:38.575000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "xspc-operator",
      "provided_apis": [
        {
          "group": "csi.hpe.com",
          "kind": "XSPC",
          "plural": "xspcs",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:66ff4a5990587df41e6973352ac4cf92fa3be213c815b0c01e336f0e609c521d",
          "image": "registry.connect.redhat.com/hpestorage/xspc-csi-driver-operator@sha256:66ff4a5990587df41e6973352ac4cf92fa3be213c815b0c01e336f0e609c521d",
          "name": "xspc-csi-driver-operator-66ff4a5990587df41e6973352ac4cf92fa3be213c815b0c01e336f0e609c521d-annotation"
        },
        {
          "digest": "sha256:66ff4a5990587df41e6973352ac4cf92fa3be213c815b0c01e336f0e609c521d",
          "image": "registry.connect.redhat.com/hpestorage/xspc-csi-driver-operator@sha256:66ff4a5990587df41e6973352ac4cf92fa3be213c815b0c01e336f0e609c521d",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.6.0",
      "version_original": "1.6.0"
    },
    {
      "_id": "60d45f7dbc87930656669ba4",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Mf-cics-ts",
          "metadata": {
            "name": "mf-cics-ts-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts@sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts-nocode@sha256:cc02375c897a1163e1adf315286d008488beb8eecdc0b1804867434c9448e809",
      "bundle_path_digest": "sha256:cc02375c897a1163e1adf315286d008488beb8eecdc0b1804867434c9448e809",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-24T10:33:33.307000+00:00",
      "csv_description": "This image contains an OpenLegacy no-code application that allows simple configuration-based integration to CICS system leveraging a basic CICS application for connectivity.",
      "csv_display_name": "OpenLegacy CICS Adapter Integration Image",
      "csv_metadata_description": "OpenLegacy connects to core systems, automatically generates digital services. This container includes the assets necessary to deploy to OpenShift once you generate CICS specific content.",
      "csv_name": "mf-cics-ts-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:02:58.183000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "mf-cics-ts-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Mf-cics-ts",
          "plural": "mf-cics-tss",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts-operator@sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "name": "mf-cics-ts-operator-d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts-operator@sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "name": "mf-cics-ts-operator"
        },
        {
          "digest": "sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts@sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "name": "mf_cics_ts"
        },
        {
          "digest": "sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts@sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "name": "mf-cics-ts-606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "60d45fe3bc87930656669ba5",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Mf-cics-ts",
          "metadata": {
            "name": "mf-cics-ts-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts@sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts-nocode@sha256:cc02375c897a1163e1adf315286d008488beb8eecdc0b1804867434c9448e809",
      "bundle_path_digest": "sha256:cc02375c897a1163e1adf315286d008488beb8eecdc0b1804867434c9448e809",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-24T10:35:15.033000+00:00",
      "csv_description": "This image contains an OpenLegacy no-code application that allows simple configuration-based integration to CICS system leveraging a basic CICS application for connectivity.",
      "csv_display_name": "OpenLegacy CICS Adapter Integration Image",
      "csv_metadata_description": "OpenLegacy connects to core systems, automatically generates digital services. This container includes the assets necessary to deploy to OpenShift once you generate CICS specific content.",
      "csv_name": "mf-cics-ts-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:00:26.715000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "mf-cics-ts-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Mf-cics-ts",
          "plural": "mf-cics-tss",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts-operator@sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "name": "mf-cics-ts-operator-d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts-operator@sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "name": "mf-cics-ts-operator"
        },
        {
          "digest": "sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts@sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "name": "mf_cics_ts"
        },
        {
          "digest": "sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts@sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "name": "mf-cics-ts-606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "60d45fe7bc87930656669ba6",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Mf-cics-ts",
          "metadata": {
            "name": "mf-cics-ts-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts@sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts-nocode@sha256:cc02375c897a1163e1adf315286d008488beb8eecdc0b1804867434c9448e809",
      "bundle_path_digest": "sha256:cc02375c897a1163e1adf315286d008488beb8eecdc0b1804867434c9448e809",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-24T10:35:19.151000+00:00",
      "csv_description": "This image contains an OpenLegacy no-code application that allows simple configuration-based integration to CICS system leveraging a basic CICS application for connectivity.",
      "csv_display_name": "OpenLegacy CICS Adapter Integration Image",
      "csv_metadata_description": "OpenLegacy connects to core systems, automatically generates digital services. This container includes the assets necessary to deploy to OpenShift once you generate CICS specific content.",
      "csv_name": "mf-cics-ts-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:57:53.478000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "mf-cics-ts-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Mf-cics-ts",
          "plural": "mf-cics-tss",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts-operator@sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "name": "mf-cics-ts-operator-d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts-operator@sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "name": "mf-cics-ts-operator"
        },
        {
          "digest": "sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts@sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "name": "mf_cics_ts"
        },
        {
          "digest": "sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts@sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "name": "mf-cics-ts-606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "60d46d7bbc87930656669baf",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Mf-cics-ts",
          "metadata": {
            "name": "mf-cics-ts-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts@sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts-nocode@sha256:cc02375c897a1163e1adf315286d008488beb8eecdc0b1804867434c9448e809",
      "bundle_path_digest": "sha256:cc02375c897a1163e1adf315286d008488beb8eecdc0b1804867434c9448e809",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-24T11:33:15.357000+00:00",
      "csv_description": "This image contains an OpenLegacy no-code application that allows simple configuration-based integration to CICS system leveraging a basic CICS application for connectivity.",
      "csv_display_name": "OpenLegacy CICS Adapter Integration Image",
      "csv_metadata_description": "OpenLegacy connects to core systems, automatically generates digital services. This container includes the assets necessary to deploy to OpenShift once you generate CICS specific content.",
      "csv_name": "mf-cics-ts-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:57:15.448000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "mf-cics-ts-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Mf-cics-ts",
          "plural": "mf-cics-tss",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts-operator@sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "name": "mf-cics-ts-operator-d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts-operator@sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "name": "mf-cics-ts-operator"
        },
        {
          "digest": "sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts@sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "name": "mf_cics_ts"
        },
        {
          "digest": "sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts@sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "name": "mf-cics-ts-606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "60d46e82bc87930656669bb2",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Mf-cics-tg",
          "metadata": {
            "name": "mf-cics-tg-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg@sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg-nocode@sha256:bf84c776f995025ffac87b50971ff401cf92badf987d5c34a19915fa5e124b87",
      "bundle_path_digest": "sha256:bf84c776f995025ffac87b50971ff401cf92badf987d5c34a19915fa5e124b87",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-24T11:37:38.937000+00:00",
      "csv_description": "no-code application that allows simple configuration-based integration to CICS systems with CTG installed",
      "csv_display_name": "OpenLegacy No-code Integration with CICS CTG",
      "csv_metadata_description": "OpenLegacy connects to core systems, automatically generates digital services. This container includes the assets necessary to deploy to OpenShift once you generate the CICS specific content. It leverages CTG for the connection services. Please us the OpenLegacy No-code Integration with CICS system operator if you don't have CTG installed.",
      "csv_name": "mf-cics-tg-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:19:45.055000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "mf-cics-tg-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Mf-cics-tg",
          "plural": "mf-cics-tgs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg-operator@sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "name": "mf-cics-tg-operator-103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg-operator@sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "name": "mf-cics-tg-operator"
        },
        {
          "digest": "sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg@sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "name": "mf_cics_tg"
        },
        {
          "digest": "sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg@sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "name": "mf-cics-tg-bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "60d46ebec7208e1f82577ff0",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Mf-cics-tg",
          "metadata": {
            "name": "mf-cics-tg-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg@sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg-nocode@sha256:bf84c776f995025ffac87b50971ff401cf92badf987d5c34a19915fa5e124b87",
      "bundle_path_digest": "sha256:bf84c776f995025ffac87b50971ff401cf92badf987d5c34a19915fa5e124b87",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-24T11:38:38.828000+00:00",
      "csv_description": "no-code application that allows simple configuration-based integration to CICS systems with CTG installed",
      "csv_display_name": "OpenLegacy No-code Integration with CICS CTG",
      "csv_metadata_description": "OpenLegacy connects to core systems, automatically generates digital services. This container includes the assets necessary to deploy to OpenShift once you generate the CICS specific content. It leverages CTG for the connection services. Please us the OpenLegacy No-code Integration with CICS system operator if you don't have CTG installed.",
      "csv_name": "mf-cics-tg-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:00:57.168000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "mf-cics-tg-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Mf-cics-tg",
          "plural": "mf-cics-tgs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg-operator@sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "name": "mf-cics-tg-operator-103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg-operator@sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "name": "mf-cics-tg-operator"
        },
        {
          "digest": "sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg@sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "name": "mf_cics_tg"
        },
        {
          "digest": "sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg@sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "name": "mf-cics-tg-bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "60d4747fc7208e1f82577ff1",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Mf-cics-tg",
          "metadata": {
            "name": "mf-cics-tg-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg@sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg-nocode@sha256:bf84c776f995025ffac87b50971ff401cf92badf987d5c34a19915fa5e124b87",
      "bundle_path_digest": "sha256:bf84c776f995025ffac87b50971ff401cf92badf987d5c34a19915fa5e124b87",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-24T12:03:11.507000+00:00",
      "csv_description": "no-code application that allows simple configuration-based integration to CICS systems with CTG installed",
      "csv_display_name": "OpenLegacy No-code Integration with CICS CTG",
      "csv_metadata_description": "OpenLegacy connects to core systems, automatically generates digital services. This container includes the assets necessary to deploy to OpenShift once you generate the CICS specific content. It leverages CTG for the connection services. Please us the OpenLegacy No-code Integration with CICS system operator if you don't have CTG installed.",
      "csv_name": "mf-cics-tg-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:44:45.322000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "mf-cics-tg-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Mf-cics-tg",
          "plural": "mf-cics-tgs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg-operator@sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "name": "mf-cics-tg-operator-103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg-operator@sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "name": "mf-cics-tg-operator"
        },
        {
          "digest": "sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg@sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "name": "mf_cics_tg"
        },
        {
          "digest": "sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg@sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "name": "mf-cics-tg-bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "60d4751dbc87930656669bb3",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Mf-cics-tg",
          "metadata": {
            "name": "mf-cics-tg-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg@sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg-nocode@sha256:bf84c776f995025ffac87b50971ff401cf92badf987d5c34a19915fa5e124b87",
      "bundle_path_digest": "sha256:bf84c776f995025ffac87b50971ff401cf92badf987d5c34a19915fa5e124b87",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-24T12:05:49.411000+00:00",
      "csv_description": "no-code application that allows simple configuration-based integration to CICS systems with CTG installed",
      "csv_display_name": "OpenLegacy No-code Integration with CICS CTG",
      "csv_metadata_description": "OpenLegacy connects to core systems, automatically generates digital services. This container includes the assets necessary to deploy to OpenShift once you generate the CICS specific content. It leverages CTG for the connection services. Please us the OpenLegacy No-code Integration with CICS system operator if you don't have CTG installed.",
      "csv_name": "mf-cics-tg-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:03:39.318000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "mf-cics-tg-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Mf-cics-tg",
          "plural": "mf-cics-tgs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg-operator@sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "name": "mf-cics-tg-operator-103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg-operator@sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "name": "mf-cics-tg-operator"
        },
        {
          "digest": "sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg@sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "name": "mf_cics_tg"
        },
        {
          "digest": "sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg@sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "name": "mf-cics-tg-bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "60da09702d9a1be0419f7ff4",
      "alm_examples": [
        {
          "api_version": "apps.gitlab.com/v1beta2",
          "kind": "Runner",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "gitlabUrl": "https://gitlab.com",
            "imagePullPolicy": "Always",
            "tags": "openshift, test",
            "token": "gitlab-dev-runner-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-runner-operator-bundle@sha256:9a88454a1cb9fe76e6a3a788c0d7a9015af3cc1fd42caf63ad46602959fba2b8",
      "bundle_path_digest": "sha256:9a88454a1cb9fe76e6a3a788c0d7a9015af3cc1fd42caf63ad46602959fba2b8",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-28T17:40:00.879000+00:00",
      "csv_description": "GitLab Runner is the lightweight, highly-scalable agent that runs your build jobs and sends the results back to a GitLab instance. GitLab Runner works in conjunction with GitLab CI/CD, the open-source continuous integration service included with GitLab.\n\nThe GitLab Runner operator manages the lifecycle of GitLab Runner in Kubernetes or Openshift clusters. The operator aims to automate the tasks needed to run your CI/CD jobs in your container orchestration platform.\n\n## Usage\n\n To link a GitLab Runner instance to a self-hosted GitLab instance or the hosted [GitLab](https://gitlab.com), you first need to:\n\n 1. create a secret containing the `runner-registration-token` from your GitLab project.\n\n   ```\n  cat > gitlab-runner-secret.yml << EOF\n  apiVersion: v1\n  kind: Secret\n  metadata:\n    name: gitlab-runner-secret\n  type: Opaque\n  stringData:\n    runner-registration-token: REPLACE_ME # your project runner secret\n  EOF\n  ```\n\n  ```\n  oc apply -f gitlab-runner-secret.yml\n  ```\n\n 2. Create the Custom Resource Definition (CRD) file and include the following information. The tags value must be openshift for the job to run.\n\n   ```\n   cat > gitlab-runner.yml << EOF\n   apiVersion: apps.gitlab.com/v1beta2\n   kind: Runner\n   metadata:\n     name: gitlab-runner\n   spec:\n     gitlabUrl: https://gitlab.example.com\n     buildImage: alpine\n     token: gitlab-runner-secret\n     tags: openshift\n   EOF\n   ```\n\n  ```\n  oc apply -f gitlab-runner.yml\n  ```\n\n## Full documentation\n\nVisit [Install GitLab Runner on Red Hat OpenShift](https://docs.gitlab.com/runner/install/openshift.html)\n",
      "csv_display_name": "GitLab Runner",
      "csv_metadata_description": "GitLab Runner operator manages lifecycle of GitLab Runner instances",
      "csv_name": "gitlab-runner-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:12:25.471000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "gitlab-runner-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0ac74dadb45986ba59d3080446441bf0de35ea58d320c14d1d81558c52beaf9d",
          "image": "registry.connect.redhat.com/gitlab/gitlab-runner@sha256:0ac74dadb45986ba59d3080446441bf0de35ea58d320c14d1d81558c52beaf9d",
          "name": "gitlab-runner"
        },
        {
          "digest": "sha256:20d6b89d8880f1796e3d3fff84940803a0ea084eb5417773511d6a7e4650ffbf",
          "image": "registry.connect.redhat.com/gitlab/gitlab-runner-helper@sha256:20d6b89d8880f1796e3d3fff84940803a0ea084eb5417773511d6a7e4650ffbf",
          "name": "gitlab-runner-helper"
        },
        {
          "digest": "sha256:74924b4c33290eb557680b4584f45890f7731f6b252bf5009e318d2d74f48735",
          "image": "registry.connect.redhat.com/gitlab/gitlab-runner-operator@sha256:74924b4c33290eb557680b4584f45890f7731f6b252bf5009e318d2d74f48735",
          "name": "gitlab-runner-operator"
        },
        {
          "digest": "sha256:dc0f91e256c86c3f7cb930d0e4d48eb68576425bc4bd288fb76decb0577c7e9e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:dc0f91e256c86c3f7cb930d0e4d48eb68576425bc4bd288fb76decb0577c7e9e",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "60da48473a733787222135f5",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1alpha1",
          "kind": "OpenshiftArtifactoryHa",
          "metadata": {
            "name": "openshiftartifactoryha"
          },
          "spec": {
            "artifactory-ha": {
              "artifactory": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/artifactory-pro",
                  "tag": "7.19.4-1"
                },
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE",
                "node": {
                  "replicaCount": 2,
                  "waitForPrimaryStartup": {
                    "enabled": false
                  }
                },
                "uid": "1000721030"
              },
              "database": {
                "driver": "OVERRIDE",
                "password": "OVERRIDE",
                "type": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "databaseUpgradeReady": true,
              "initContainerImage": "registry.connect.redhat.com/jfrog/init@sha256:4073f6eb6eb55cd8012a7b929e583ba915dbc0d92be9d6b057e6daac520283b9",
              "nginx": {
                "gid": "1000720107",
                "http": {
                  "externalPort": 80,
                  "internalPort": 8080
                },
                "https": {
                  "externalPort": 443,
                  "internalPort": 8443
                },
                "image": {
                  "registry": "registry.redhat.io",
                  "repository": "rhel8/nginx-116",
                  "tag": "latest"
                },
                "service": {
                  "ssloffload": false
                },
                "tlsSecretName": "OVERRIDE",
                "uid": "1000720104"
              },
              "postgresql": {
                "enabled": false
              },
              "waitForDatabase": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/artifactory-operator-bundle@sha256:c791ad2b333614b4409381e5898c1a48029104af25f722cc5c93945fbfe1a800",
      "bundle_path_digest": "sha256:c791ad2b333614b4409381e5898c1a48029104af25f722cc5c93945fbfe1a800",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-28T22:08:07.973000+00:00",
      "csv_description": " ## Breaking change\nPlease update to version 1.1.10 of the operator.\nVersion 1.1.8 and 1.1.9 have issues. Please skip these versions.\n\n## Overview\nOpenshift Operator to deploy JFrog Artifactory Enterprise into your Openshift cluster.\n## Security Context Constraints\nTo deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc.\n```\noc adm policy add-scc-to-user anyuid -z artifactory-ha-operator -n openshift-operators\n```\nAdd the service account for the Artifactory chart to deploy successfully:\n``` oc adm policy add-scc-to-user anyuid -z openshiftartifactoryha-artifactory-ha -n artifactory ```\n### Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Artifactory Enterprise Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Artifactory Enterprise Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Artifactory HA.\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\nDATABASE_TYPE\nDATABASE_DRIVER\nDATABASE_URL\nDATABASE_USER\nDATABASE_PASSWORD\n```\nMaster key and Join key must be supplied. To generate a new key for each run the command below:\n\n```\n# Create a key\nexport JOIN_KEY=$(openssl rand -hex 32)\necho ${JOIN_KEY}\n```\n\nTo use TLS you will need to first create a k8s tls secret to store your .crt and .key file into.\nThen supply the value of this k8s secret into the TLS_SECRET field.\n``` oc create secret tls my_tls_secret --cert=tls.crt --key=tls.key --namespace=my_namespace ```\nClick Create for Artifactory Enterprise to deploy into OpenShift and connect to it on the external IP exposed by the load balancer.\n### Create a route\nTo expose Artifactory from Openshift we recommend you create a new route in Openshift.\nYou can either use the oc command line tool or the Openshift web console to generate a new route.\nDepending upon where you terminate TLS you will need to either specify pass through or edge.\nCommand Line (Edge):\n``` oc create route edge --service=openshiftartifactory-ha --cert=tls.crt --key=tls.key --ca-cert=ca.crt --hostname=www.example.com ```\nOr for more information visit the official Openshift documentation on routes here:\nhttps://docs.openshift.com/container-platform/4.6/networking/routes/route-configuration.html\n\n",
      "csv_display_name": "JFrog Artifactory Enterprise Operator",
      "csv_metadata_description": "JFrog Artifactory Enterprise deploys Artifactory in a high availability environment across multiple pods",
      "csv_name": "artifactory-ha-operator.v1.1.13",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:50:44.025000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "plural": "openshiftartifactoryhas",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:97a64d13e85f782c55d9975bd478df61c6037a2fbe9213a0fbe076882d450185",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:97a64d13e85f782c55d9975bd478df61c6037a2fbe9213a0fbe076882d450185",
          "name": "artifactory-operator-97a64d13e85f782c55d9975bd478df61c6037a2fbe9213a0fbe076882d450185-annotation"
        },
        {
          "digest": "sha256:97a64d13e85f782c55d9975bd478df61c6037a2fbe9213a0fbe076882d450185",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:97a64d13e85f782c55d9975bd478df61c6037a2fbe9213a0fbe076882d450185",
          "name": "artifactory-ha-operator"
        },
        {
          "digest": "sha256:34d7ea895d6eb132bcf388a520d9d2d0cd5a6ed995fad141dc03ac5bf0ec7aeb",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:34d7ea895d6eb132bcf388a520d9d2d0cd5a6ed995fad141dc03ac5bf0ec7aeb",
          "name": "artifactory_image_repository"
        },
        {
          "digest": "sha256:cddf1f73ce3db90d27a65cf0fed5c2987d30e37ff5d0c8bda50cbeca0dd78ece",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:cddf1f73ce3db90d27a65cf0fed5c2987d30e37ff5d0c8bda50cbeca0dd78ece",
          "name": "nginx_image_repository"
        },
        {
          "digest": "sha256:4073f6eb6eb55cd8012a7b929e583ba915dbc0d92be9d6b057e6daac520283b9",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:4073f6eb6eb55cd8012a7b929e583ba915dbc0d92be9d6b057e6daac520283b9",
          "name": "init-4073f6eb6eb55cd8012a7b929e583ba915dbc0d92be9d6b057e6daac520283b9-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.1.13",
      "version_original": "1.1.13"
    },
    {
      "_id": "60dc80c14f8f52ae12028765",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "example-neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "exporter": {
              "CTRL_PASSWORD": "admin",
              "CTRL_USERNAME": "admin",
              "enabled": false,
              "scrapping": true
            },
            "imagePullSecrets": "regsecret",
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "route": {
                  "enabled": true,
                  "termination": "passthrough"
                },
                "type": "NodePort"
              }
            },
            "openshift": true,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:a8c0bb66bd911a2720df2cf08391b768e719c2e23344d58913e681066fbbb556",
      "bundle_path_digest": "sha256:a8c0bb66bd911a2720df2cf08391b768e719c2e23344d58913e681066fbbb556",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-06-30T14:33:37.030000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [NeuVector Helm Chart](https://github.com/neuvector/neuvector-helm) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart. \n\n**Complete below steps to create secret for accessing Docker or similar registry and Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nConfigure OpenShift to pull images from the private NeuVector registry on Docker Hub\n\n         oc create secret docker-registry regsecret -n neuvector --docker-server=https://index.docker.io/v1/ --docker-username=your-name --docker-password=your-pword --docker-email=your-email\n\t\t\t\t \n\nWhere \u2019your-name\u2019 is your Docker username, \u2019your-pword\u2019 is your Docker password, \u2019your-email\u2019 is your Docker email.\n\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "Neuvector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:01:34.368000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "name": "neuvector-operator-c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3-annotation"
        },
        {
          "digest": "sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "updater"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager-0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d-annotation"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer-5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1-annotation"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner-2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544-annotation"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "ubi8-2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5-annotation"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller-063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.2.7",
      "version_original": "1.2.7"
    },
    {
      "_id": "60dc81822d9a1be0419f8a8c",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "example-neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "exporter": {
              "CTRL_PASSWORD": "admin",
              "CTRL_USERNAME": "admin",
              "enabled": false,
              "scrapping": true
            },
            "imagePullSecrets": "regsecret",
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "route": {
                  "enabled": true,
                  "termination": "passthrough"
                },
                "type": "NodePort"
              }
            },
            "openshift": true,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:a8c0bb66bd911a2720df2cf08391b768e719c2e23344d58913e681066fbbb556",
      "bundle_path_digest": "sha256:a8c0bb66bd911a2720df2cf08391b768e719c2e23344d58913e681066fbbb556",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-06-30T14:36:50.716000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [NeuVector Helm Chart](https://github.com/neuvector/neuvector-helm) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart. \n\n**Complete below steps to create secret for accessing Docker or similar registry and Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nConfigure OpenShift to pull images from the private NeuVector registry on Docker Hub\n\n         oc create secret docker-registry regsecret -n neuvector --docker-server=https://index.docker.io/v1/ --docker-username=your-name --docker-password=your-pword --docker-email=your-email\n\t\t\t\t \n\nWhere \u2019your-name\u2019 is your Docker username, \u2019your-pword\u2019 is your Docker password, \u2019your-email\u2019 is your Docker email.\n\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "Neuvector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:04:03.636000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "name": "neuvector-operator-c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3-annotation"
        },
        {
          "digest": "sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "updater"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager-0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d-annotation"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer-5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1-annotation"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner-2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544-annotation"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "ubi8-2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5-annotation"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller-063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.2.7",
      "version_original": "1.2.7"
    },
    {
      "_id": "60dc87cc2d9a1be0419f8a90",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "example-neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "exporter": {
              "CTRL_PASSWORD": "admin",
              "CTRL_USERNAME": "admin",
              "enabled": false,
              "scrapping": true
            },
            "imagePullSecrets": "regsecret",
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "route": {
                  "enabled": true,
                  "termination": "passthrough"
                },
                "type": "NodePort"
              }
            },
            "openshift": true,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:a8c0bb66bd911a2720df2cf08391b768e719c2e23344d58913e681066fbbb556",
      "bundle_path_digest": "sha256:a8c0bb66bd911a2720df2cf08391b768e719c2e23344d58913e681066fbbb556",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-06-30T15:03:40.026000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [NeuVector Helm Chart](https://github.com/neuvector/neuvector-helm) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart. \n\n**Complete below steps to create secret for accessing Docker or similar registry and Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nConfigure OpenShift to pull images from the private NeuVector registry on Docker Hub\n\n         oc create secret docker-registry regsecret -n neuvector --docker-server=https://index.docker.io/v1/ --docker-username=your-name --docker-password=your-pword --docker-email=your-email\n\t\t\t\t \n\nWhere \u2019your-name\u2019 is your Docker username, \u2019your-pword\u2019 is your Docker password, \u2019your-email\u2019 is your Docker email.\n\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "Neuvector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:15:13.593000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "name": "neuvector-operator-c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3-annotation"
        },
        {
          "digest": "sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "updater"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager-0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d-annotation"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer-5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1-annotation"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner-2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544-annotation"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "ubi8-2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5-annotation"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller-063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.2.7",
      "version_original": "1.2.7"
    },
    {
      "_id": "60dc885d4eeb9bde82ff5a63",
      "alm_examples": [
        {
          "api_version": "cortex.cognitivescale.com/v1",
          "kind": "Certifai",
          "metadata": {
            "name": "default-certifai"
          },
          "spec": {
            "console": {
              "authorization-type": "none",
              "azure": {
                "account-key": "your account key",
                "account-name": "your account name",
                "sas-token": "your SAS token"
              },
              "create-ingress": true,
              "gcs": {
                "application-credentials": "{\n  \"type\": \"\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"\",\n  \"token_uri\": \"\",\n  \"auth_provider_x509_cert_url\": \"\",\n  \"client_x509_cert_url\": \"\"\n}\n"
              },
              "replicas": 1,
              "route-type": "none",
              "s3": {
                "access-key": "your access key",
                "endpoint": "https://s3.amazonaws.com",
                "secret-key": "your secret key",
                "verify-cert": false
              },
              "scan-dir": ""
            },
            "deployment-type": "openshift",
            "dex": {
              "connector": {
                "add-config": "orgs:\n- name: my-org\n",
                "client-id": "clientid",
                "client-secret": "clientsecret",
                "name": "Github",
                "type": "github"
              },
              "create-ingress": true,
              "enabled": false,
              "replicas": 1
            },
            "policy": {
              "authorization-type": "none",
              "azure": {
                "account-key": "your account key",
                "account-name": "your account name",
                "sas-token": "your SAS token"
              },
              "create-ingress": true,
              "enabled": false,
              "gcs": {
                "application-credentials": "{\n  \"type\": \"\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"\",\n  \"token_uri\": \"\",\n  \"auth_provider_x509_cert_url\": \"\",\n  \"client_x509_cert_url\": \"\"\n}\n"
              },
              "questionnaire-dir": "",
              "replicas": 1,
              "route-type": "none",
              "s3": {
                "access-key": "your access key",
                "endpoint": "https://s3.amazonaws.com",
                "secret-key": "your secret key",
                "verify-cert": false
              }
            },
            "reference-model": {
              "enabled": true
            },
            "reporting": {
              "db-conn-str": "postgresql://user:password@service:port/db",
              "enabled": true,
              "period": "*/15 * * * *"
            }
          }
        },
        {
          "api_version": "cortex.cognitivescale.com/v1",
          "kind": "CertifaiScan",
          "metadata": {
            "name": "example-certifai-scan",
            "namespace": "certifai"
          },
          "spec": {
            "scanconfig": {
              "concurrency": 4,
              "requests": {
                "cpu": "800m",
                "memory": "800Mi"
              },
              "scanargs": "command line args here",
              "scandef": "definition file text here"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-certifai-operator-bundle@sha256:7beaacb9261b0ab823443b4f7c3f3c3bff8250caee7f1ca68887e2457e8f963b",
      "bundle_path_digest": "sha256:7beaacb9261b0ab823443b4f7c3f3c3bff8250caee7f1ca68887e2457e8f963b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-30T15:06:05.573000+00:00",
      "csv_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production. It evaluates AI models and allows users to compare different models or model versions for the following qualities.\n* **Robustness:** measures how well models retain an outcome given changes to the data feature values. The more robust a model is, the greater the changes required to alter the outcome.\n* **Fairness by group:** measures the difference required to change the outcome for different groups implicit in a feature given the same model and dataset. For example, implicit groups male, female, and nonbinary belong to the feature, \u201cgender\u201d. A fair model shows that all 3 groups require a similar amount of change to alter the results.\n* **Explainability:** measures the average simplicity of counterfactual explanations provided for each model. An explanation that requires a single changed feature will score 100%. Explanations that require more changed features will score lower.\n* **Explanations:** display the prediction provided through the generation of counterfactuals for the change that must occur in a dataset with given restrictions to obtain a different outcome. Users can explore the entire dataset one observation at a time to understand what features changed and by how much to obtain a different result.\nSee our [documentation](https://cognitivescale.github.io/cortex-certifai/) for information about how to deploy the Certifai Operator and how to get started using our toolkit.\n## License Copyright 2020 Cognitive Scale, Inc. All Rights Reserved.\nBy downloading you agree to the terms of CognitiveScale's [End User License Agreement](https://www.cognitivescale.com/legal-information/).\n",
      "csv_display_name": "Cortex Certifai Operator",
      "csv_metadata_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production.",
      "csv_name": "cortex-certifai-operator.v1.3.10",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:46:25.086000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cortex-certifai-operator",
      "provided_apis": [
        {
          "group": "cortex.cognitivescale.com",
          "kind": "Certifai",
          "plural": "certifais",
          "version": "v1"
        },
        {
          "group": "cortex.cognitivescale.com",
          "kind": "CertifaiScan",
          "plural": "certifaiscans",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879",
          "name": "cortex-certifai-operator-4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879-annotation"
        },
        {
          "digest": "sha256:082cf0c8e1289a7e08bb324b512a737e0ea3f618ea5b6fd8cecbb415ff07a230",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:082cf0c8e1289a7e08bb324b512a737e0ea3f618ea5b6fd8cecbb415ff07a230",
          "name": "cortex-certifai-operator"
        },
        {
          "digest": "sha256:e0b34632bffe7d9ea186e7412030e404d081adb4216145f676cddda46a8746fa",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reference-model-server@sha256:e0b34632bffe7d9ea186e7412030e404d081adb4216145f676cddda46a8746fa",
          "name": "refmodel"
        },
        {
          "digest": "sha256:97209356148d10f8e1621ac5246c13ef7f4a6ccb62479e8bbfa3151a768f4f90",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-console@sha256:97209356148d10f8e1621ac5246c13ef7f4a6ccb62479e8bbfa3151a768f4f90",
          "name": "console"
        },
        {
          "digest": "sha256:f54857468f12e918d3b31144d9e63e3c497a408cd4b545c5ef2d60cd74c9a3ba",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-policy-chooser@sha256:f54857468f12e918d3b31144d9e63e3c497a408cd4b545c5ef2d60cd74c9a3ba",
          "name": "policy_chooser"
        },
        {
          "digest": "sha256:3e554f5baf161ec2297a452316045d20e628fd935c4a6584ba05043be574bf37",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-scanner@sha256:3e554f5baf161ec2297a452316045d20e628fd935c4a6584ba05043be574bf37",
          "name": "scanner"
        },
        {
          "digest": "sha256:88d0caeac7265cc1553c7f443cd7f8afddd8cfbb01c916381f8c1e8447a17497",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reporting-etl@sha256:88d0caeac7265cc1553c7f443cd7f8afddd8cfbb01c916381f8c1e8447a17497",
          "name": "reporting_etl"
        },
        {
          "digest": "sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:091e3df91531223aac50435fabc384b1d900aaaf2c5ce639a3e141e2fcb3eb8d",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-scan-manager@sha256:091e3df91531223aac50435fabc384b1d900aaaf2c5ce639a3e141e2fcb3eb8d",
          "name": "scan_manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.3.10",
      "version_original": "1.3.10"
    },
    {
      "_id": "60dc88614eeb9bde82ff5a64",
      "alm_examples": [
        {
          "api_version": "cortex.cognitivescale.com/v1",
          "kind": "Certifai",
          "metadata": {
            "name": "default-certifai"
          },
          "spec": {
            "console": {
              "authorization-type": "none",
              "azure": {
                "account-key": "your account key",
                "account-name": "your account name",
                "sas-token": "your SAS token"
              },
              "create-ingress": true,
              "gcs": {
                "application-credentials": "{\n  \"type\": \"\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"\",\n  \"token_uri\": \"\",\n  \"auth_provider_x509_cert_url\": \"\",\n  \"client_x509_cert_url\": \"\"\n}\n"
              },
              "replicas": 1,
              "route-type": "none",
              "s3": {
                "access-key": "your access key",
                "endpoint": "https://s3.amazonaws.com",
                "secret-key": "your secret key",
                "verify-cert": false
              },
              "scan-dir": ""
            },
            "deployment-type": "openshift",
            "dex": {
              "connector": {
                "add-config": "orgs:\n- name: my-org\n",
                "client-id": "clientid",
                "client-secret": "clientsecret",
                "name": "Github",
                "type": "github"
              },
              "create-ingress": true,
              "enabled": false,
              "replicas": 1
            },
            "policy": {
              "authorization-type": "none",
              "azure": {
                "account-key": "your account key",
                "account-name": "your account name",
                "sas-token": "your SAS token"
              },
              "create-ingress": true,
              "enabled": false,
              "gcs": {
                "application-credentials": "{\n  \"type\": \"\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"\",\n  \"token_uri\": \"\",\n  \"auth_provider_x509_cert_url\": \"\",\n  \"client_x509_cert_url\": \"\"\n}\n"
              },
              "questionnaire-dir": "",
              "replicas": 1,
              "route-type": "none",
              "s3": {
                "access-key": "your access key",
                "endpoint": "https://s3.amazonaws.com",
                "secret-key": "your secret key",
                "verify-cert": false
              }
            },
            "reference-model": {
              "enabled": true
            },
            "reporting": {
              "db-conn-str": "postgresql://user:password@service:port/db",
              "enabled": true,
              "period": "*/15 * * * *"
            }
          }
        },
        {
          "api_version": "cortex.cognitivescale.com/v1",
          "kind": "CertifaiScan",
          "metadata": {
            "name": "example-certifai-scan",
            "namespace": "certifai"
          },
          "spec": {
            "scanconfig": {
              "concurrency": 4,
              "requests": {
                "cpu": "800m",
                "memory": "800Mi"
              },
              "scanargs": "command line args here",
              "scandef": "definition file text here"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-certifai-operator-bundle@sha256:7beaacb9261b0ab823443b4f7c3f3c3bff8250caee7f1ca68887e2457e8f963b",
      "bundle_path_digest": "sha256:7beaacb9261b0ab823443b4f7c3f3c3bff8250caee7f1ca68887e2457e8f963b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-06-30T15:06:09.442000+00:00",
      "csv_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production. It evaluates AI models and allows users to compare different models or model versions for the following qualities.\n* **Robustness:** measures how well models retain an outcome given changes to the data feature values. The more robust a model is, the greater the changes required to alter the outcome.\n* **Fairness by group:** measures the difference required to change the outcome for different groups implicit in a feature given the same model and dataset. For example, implicit groups male, female, and nonbinary belong to the feature, \u201cgender\u201d. A fair model shows that all 3 groups require a similar amount of change to alter the results.\n* **Explainability:** measures the average simplicity of counterfactual explanations provided for each model. An explanation that requires a single changed feature will score 100%. Explanations that require more changed features will score lower.\n* **Explanations:** display the prediction provided through the generation of counterfactuals for the change that must occur in a dataset with given restrictions to obtain a different outcome. Users can explore the entire dataset one observation at a time to understand what features changed and by how much to obtain a different result.\nSee our [documentation](https://cognitivescale.github.io/cortex-certifai/) for information about how to deploy the Certifai Operator and how to get started using our toolkit.\n## License Copyright 2020 Cognitive Scale, Inc. All Rights Reserved.\nBy downloading you agree to the terms of CognitiveScale's [End User License Agreement](https://www.cognitivescale.com/legal-information/).\n",
      "csv_display_name": "Cortex Certifai Operator",
      "csv_metadata_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production.",
      "csv_name": "cortex-certifai-operator.v1.3.10",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:45:32.006000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cortex-certifai-operator",
      "provided_apis": [
        {
          "group": "cortex.cognitivescale.com",
          "kind": "Certifai",
          "plural": "certifais",
          "version": "v1"
        },
        {
          "group": "cortex.cognitivescale.com",
          "kind": "CertifaiScan",
          "plural": "certifaiscans",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879",
          "name": "cortex-certifai-operator-4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879-annotation"
        },
        {
          "digest": "sha256:082cf0c8e1289a7e08bb324b512a737e0ea3f618ea5b6fd8cecbb415ff07a230",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:082cf0c8e1289a7e08bb324b512a737e0ea3f618ea5b6fd8cecbb415ff07a230",
          "name": "cortex-certifai-operator"
        },
        {
          "digest": "sha256:e0b34632bffe7d9ea186e7412030e404d081adb4216145f676cddda46a8746fa",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reference-model-server@sha256:e0b34632bffe7d9ea186e7412030e404d081adb4216145f676cddda46a8746fa",
          "name": "refmodel"
        },
        {
          "digest": "sha256:97209356148d10f8e1621ac5246c13ef7f4a6ccb62479e8bbfa3151a768f4f90",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-console@sha256:97209356148d10f8e1621ac5246c13ef7f4a6ccb62479e8bbfa3151a768f4f90",
          "name": "console"
        },
        {
          "digest": "sha256:f54857468f12e918d3b31144d9e63e3c497a408cd4b545c5ef2d60cd74c9a3ba",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-policy-chooser@sha256:f54857468f12e918d3b31144d9e63e3c497a408cd4b545c5ef2d60cd74c9a3ba",
          "name": "policy_chooser"
        },
        {
          "digest": "sha256:3e554f5baf161ec2297a452316045d20e628fd935c4a6584ba05043be574bf37",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-scanner@sha256:3e554f5baf161ec2297a452316045d20e628fd935c4a6584ba05043be574bf37",
          "name": "scanner"
        },
        {
          "digest": "sha256:88d0caeac7265cc1553c7f443cd7f8afddd8cfbb01c916381f8c1e8447a17497",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reporting-etl@sha256:88d0caeac7265cc1553c7f443cd7f8afddd8cfbb01c916381f8c1e8447a17497",
          "name": "reporting_etl"
        },
        {
          "digest": "sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:091e3df91531223aac50435fabc384b1d900aaaf2c5ce639a3e141e2fcb3eb8d",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-scan-manager@sha256:091e3df91531223aac50435fabc384b1d900aaaf2c5ce639a3e141e2fcb3eb8d",
          "name": "scan_manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.3.10",
      "version_original": "1.3.10"
    },
    {
      "_id": "60dc89044f8f52ae1202876c",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "example-neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "exporter": {
              "CTRL_PASSWORD": "admin",
              "CTRL_USERNAME": "admin",
              "enabled": false,
              "scrapping": true
            },
            "imagePullSecrets": "regsecret",
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "route": {
                  "enabled": true,
                  "termination": "passthrough"
                },
                "type": "NodePort"
              }
            },
            "openshift": true,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:a8c0bb66bd911a2720df2cf08391b768e719c2e23344d58913e681066fbbb556",
      "bundle_path_digest": "sha256:a8c0bb66bd911a2720df2cf08391b768e719c2e23344d58913e681066fbbb556",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-06-30T15:08:52.404000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [NeuVector Helm Chart](https://github.com/neuvector/neuvector-helm) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart. \n\n**Complete below steps to create secret for accessing Docker or similar registry and Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nConfigure OpenShift to pull images from the private NeuVector registry on Docker Hub\n\n         oc create secret docker-registry regsecret -n neuvector --docker-server=https://index.docker.io/v1/ --docker-username=your-name --docker-password=your-pword --docker-email=your-email\n\t\t\t\t \n\nWhere \u2019your-name\u2019 is your Docker username, \u2019your-pword\u2019 is your Docker password, \u2019your-email\u2019 is your Docker email.\n\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "Neuvector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:08:34.803000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "name": "neuvector-operator-c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3-annotation"
        },
        {
          "digest": "sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "updater"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager-0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d-annotation"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer-5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1-annotation"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner-2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544-annotation"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "ubi8-2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5-annotation"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller-063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.2.7",
      "version_original": "1.2.7"
    },
    {
      "_id": "60de1a824eeb9bde82ff5dd5",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:8dea6665a8cd0a40b0ad7daa52f22ff341ae29c5b592636bfac25e4767224324",
      "bundle_path_digest": "sha256:8dea6665a8cd0a40b0ad7daa52f22ff341ae29c5b592636bfac25e4767224324",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-07-01T19:41:54.356000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.2.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:20:15.250000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "8.2.2",
      "version_original": "8.2.2"
    },
    {
      "_id": "60e47213db72db7d0fadcf1f",
      "alm_examples": [
        {
          "api_version": "apik10.kasten.io/v1alpha1",
          "kind": "K10",
          "metadata": {
            "name": "k10-sample"
          },
          "spec": {
            "ambassadorImage": {
              "image": "ambassador",
              "registry": "quay.io",
              "repository": "datawire"
            },
            "apigateway": {
              "serviceResolver": "dns"
            },
            "apiservices": {
              "deployed": true
            },
            "auth": {
              "basicAuth": {
                "enabled": false,
                "htpasswd": "",
                "secretName": ""
              },
              "dex": {
                "enabled": false,
                "providerURL": "",
                "redirectURL": ""
              },
              "groupAllowList": [],
              "k10AdminGroups": [],
              "k10AdminUsers": [],
              "ldap": {
                "bindDN": "",
                "bindPW": "",
                "bindPWSecretName": "",
                "dashboardURL": "",
                "enabled": false,
                "groupSearch": {
                  "baseDN": "",
                  "filter": "",
                  "nameAttr": "",
                  "userMatchers": []
                },
                "groupnameClaim": "groups",
                "groupnamePrefix": "",
                "host": "",
                "insecureNoSSL": false,
                "insecureSkipVerifySSL": false,
                "restartPod": false,
                "secretName": "",
                "startTLS": false,
                "userSearch": {
                  "baseDN": "",
                  "emailAttr": "",
                  "filter": "",
                  "idAttr": "",
                  "nameAttr": "",
                  "preferredUsernameAttr": "",
                  "username": ""
                },
                "usernameClaim": "email",
                "usernamePrefix": ""
              },
              "oidcAuth": {
                "clientID": "",
                "clientSecret": "",
                "enabled": false,
                "groupClaim": "",
                "groupPrefix": "",
                "logoutURL": "",
                "prompt": "",
                "providerURL": "",
                "redirectURL": "",
                "scopes": "",
                "secretName": "",
                "usernameClaim": "",
                "usernamePrefix": ""
              },
              "openshift": {
                "clientSecret": "",
                "dashboardURL": "",
                "enabled": false,
                "groupnameClaim": "groups",
                "groupnamePrefix": "",
                "insecureCA": false,
                "openshiftURL": "",
                "secretName": "",
                "serviceAccount": "",
                "useServiceAccountCA": false,
                "usernameClaim": "email",
                "usernamePrefix": ""
              },
              "tokenAuth": {
                "enabled": false
              }
            },
            "cacertconfigmap": {
              "name": ""
            },
            "cluster": {
              "domainName": "cluster.local"
            },
            "clusterName": "",
            "dexImage": {
              "image": "dex",
              "registry": "quay.io",
              "repository": "dexidp"
            },
            "eula": {
              "accept": false
            },
            "executorReplicas": 3,
            "externalGateway": {
              "annotations": {},
              "awsSSLCertARN": "",
              "create": false,
              "fqdn": {
                "name": "",
                "type": ""
              }
            },
            "gateway": {
              "insecureDisableSSLVerify": false
            },
            "genericVolumeSnapshot": {
              "resources": {
                "limits": {
                  "cpu": "",
                  "memory": ""
                },
                "requests": {
                  "cpu": "",
                  "memory": ""
                }
              }
            },
            "global": {
              "airgapped": {
                "repository": ""
              },
              "images": {
                "aggregatedapis": "",
                "ambassador": "",
                "auth": "",
                "catalog": "",
                "cephtool": "",
                "config": "",
                "configmap-reload": "",
                "crypto": "",
                "dashboardbff": "",
                "datamover": "",
                "dex": "",
                "executor": "",
                "frontend": "",
                "jobs": "",
                "kanister": "",
                "kanister-tools": "",
                "logging": "",
                "metering": "",
                "prometheus": "",
                "state": "",
                "upgrade": ""
              },
              "persistence": {
                "accessMode": "ReadWriteOnce",
                "catalog": {
                  "size": ""
                },
                "enabled": true,
                "jobs": {
                  "size": ""
                },
                "logging": {
                  "size": ""
                },
                "metering": {
                  "size": "2Gi"
                },
                "mountPath": "/mnt/k10state",
                "size": "20Gi",
                "storageClass": ""
              },
              "rhMarketPlace": true,
              "upstreamCertifiedImages": true
            },
            "image": {
              "image": "",
              "pullPolicy": "Always",
              "registry": "gcr.io",
              "repository": "kasten-images",
              "tag": ""
            },
            "ingress": {
              "class": "",
              "create": false,
              "host": "",
              "tls": {
                "enabled": false
              },
              "urlPath": ""
            },
            "injectKanisterSidecar": {
              "enabled": false,
              "namespaceSelector": {
                "matchLabels": {}
              },
              "objectSelector": {
                "matchLabels": {}
              },
              "webhookServer": {
                "port": 8080
              }
            },
            "jaeger": {
              "agentDNS": "",
              "enabled": false
            },
            "kanisterPodCustomAnnotations": "",
            "kanisterPodCustomLabels": "",
            "kanisterToolsImage": {
              "image": "kanister-tools",
              "pullPolicy": "Always",
              "registry": "ghcr.io",
              "repository": "kanisterio"
            },
            "license": "",
            "limiter": {
              "csiSnapshots": 10,
              "genericVolumeCopies": 10,
              "genericVolumeRestores": 10,
              "genericVolumeSnapshots": 10,
              "providerSnapshots": 10
            },
            "logLevel": "info",
            "metering": {
              "awsMarketPlaceIamRole": "",
              "consumerId": "",
              "reportingKey": "",
              "serviceAccount": {
                "create": false,
                "name": ""
              }
            },
            "networkPolicy": {
              "create": true
            },
            "prometheus": {
              "alertmanager": {
                "affinity": {},
                "baseURL": "/",
                "configFileName": "alertmanager.yml",
                "configFromSecret": "",
                "configMapOverrideName": "",
                "deploymentAnnotations": {},
                "dnsConfig": {},
                "emptyDir": {
                  "sizeLimit": ""
                },
                "enabled": false,
                "extraArgs": {},
                "extraEnv": {},
                "extraInitContainers": [],
                "extraSecretMounts": [],
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/prometheus/alertmanager",
                  "tag": "v0.21.0"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": false,
                  "extraLabels": {},
                  "extraPaths": [],
                  "hosts": [],
                  "tls": []
                },
                "name": "alertmanager",
                "nodeSelector": {},
                "persistentVolume": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "annotations": {},
                  "enabled": true,
                  "existingClaim": "",
                  "mountPath": "/data",
                  "size": "2Gi",
                  "subPath": ""
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podLabels": {},
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "prefixURL": "",
                "priorityClassName": "",
                "replicaCount": 1,
                "resources": {},
                "securityContext": {
                  "fsGroup": 65534,
                  "runAsGroup": 65534,
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {},
                  "clusterIP": "",
                  "externalIPs": [],
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 80,
                  "sessionAffinity": "None",
                  "type": "ClusterIP"
                },
                "statefulSet": {
                  "annotations": {},
                  "enabled": false,
                  "headless": {
                    "annotations": {},
                    "enableMeshPeer": false,
                    "labels": {},
                    "servicePort": 80
                  },
                  "labels": {},
                  "podManagementPolicy": "OrderedReady"
                },
                "tolerations": [],
                "useClusterRole": true,
                "useExistingRole": false
              },
              "alertmanagerFiles": {
                "alertmanager.yml": {
                  "global": {},
                  "receivers": [
                    {
                      "name": "default-receiver"
                    }
                  ],
                  "route": {
                    "group_interval": "5m",
                    "group_wait": "10s",
                    "receiver": "default-receiver",
                    "repeat_interval": "3h"
                  }
                }
              },
              "configmapReload": {
                "alertmanager": {
                  "enabled": true,
                  "extraArgs": {},
                  "extraConfigmapMounts": [],
                  "extraVolumeDirs": [],
                  "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "jimmidyson/configmap-reload"
                  },
                  "name": "configmap-reload",
                  "resources": {}
                },
                "prometheus": {
                  "enabled": true,
                  "extraArgs": {},
                  "extraConfigmapMounts": [],
                  "extraVolumeDirs": [],
                  "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "jimmidyson/configmap-reload"
                  },
                  "name": "configmap-reload",
                  "resources": {}
                }
              },
              "global": {
                "airgapped": {
                  "repository": ""
                },
                "images": {
                  "aggregatedapis": "",
                  "ambassador": "",
                  "auth": "",
                  "catalog": "",
                  "cephtool": "",
                  "config": "",
                  "configmap-reload": "",
                  "crypto": "",
                  "dashboardbff": "",
                  "datamover": "",
                  "dex": "",
                  "executor": "",
                  "frontend": "",
                  "jobs": "",
                  "kanister": "",
                  "kanister-tools": "",
                  "logging": "",
                  "metering": "",
                  "prometheus": "",
                  "state": "",
                  "upgrade": ""
                },
                "persistence": {
                  "accessMode": "ReadWriteOnce",
                  "catalog": {
                    "size": ""
                  },
                  "enabled": true,
                  "jobs": {
                    "size": ""
                  },
                  "logging": {
                    "size": ""
                  },
                  "metering": {
                    "size": "2Gi"
                  },
                  "mountPath": "/mnt/k10state",
                  "size": "20Gi",
                  "storageClass": ""
                },
                "rhMarketPlace": true,
                "upstreamCertifiedImages": true
              },
              "initChownData": {
                "enabled": false
              },
              "k10image": {
                "registry": "gcr.io",
                "repository": "kasten-images"
              },
              "kubeStateMetrics": {
                "enabled": false
              },
              "networkPolicy": {
                "enabled": true
              },
              "nodeExporter": {
                "dnsConfig": {},
                "enabled": false,
                "extraArgs": {},
                "extraConfigmapMounts": [],
                "extraHostPathMounts": [],
                "extraInitContainers": [],
                "hostNetwork": true,
                "hostPID": true,
                "hostRootfs": true,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/prometheus/node-exporter",
                  "tag": "v1.1.2"
                },
                "name": "node-exporter",
                "nodeSelector": {},
                "pod": {
                  "labels": {}
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "priorityClassName": "",
                "resources": {},
                "securityContext": {
                  "fsGroup": 65534,
                  "runAsGroup": 65534,
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {
                    "prometheus.io/scrape": "true"
                  },
                  "clusterIP": "None",
                  "externalIPs": [],
                  "hostPort": 9100,
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 9100,
                  "type": "ClusterIP"
                },
                "tolerations": [],
                "updateStrategy": {
                  "type": "RollingUpdate"
                }
              },
              "podSecurityPolicy": {
                "enabled": false
              },
              "pushgateway": {
                "deploymentAnnotations": {},
                "dnsConfig": {},
                "enabled": false,
                "extraArgs": {},
                "extraInitContainers": [],
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "prom/pushgateway",
                  "tag": "v1.3.1"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": false,
                  "extraPaths": [],
                  "hosts": [],
                  "tls": []
                },
                "name": "pushgateway",
                "nodeSelector": {},
                "persistentVolume": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "annotations": {},
                  "enabled": false,
                  "existingClaim": "",
                  "mountPath": "/data",
                  "size": "2Gi",
                  "subPath": ""
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podLabels": {},
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "priorityClassName": "",
                "replicaCount": 1,
                "resources": {},
                "securityContext": {
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {
                    "prometheus.io/probe": "pushgateway"
                  },
                  "clusterIP": "",
                  "externalIPs": [],
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 9091,
                  "type": "ClusterIP"
                },
                "tolerations": []
              },
              "rbac": {
                "create": false
              },
              "scrapeCAdvisor": false,
              "server": {
                "affinity": {},
                "alertmanagers": [],
                "baseURL": "/k10/prometheus/",
                "configMapOverrideName": "k10-prometheus-config",
                "configPath": "/etc/config/prometheus.yml",
                "deploymentAnnotations": {},
                "dnsConfig": {},
                "dnsPolicy": "ClusterFirst",
                "emptyDir": {
                  "sizeLimit": ""
                },
                "enableServiceLinks": true,
                "enabled": true,
                "env": [],
                "extraArgs": {},
                "extraConfigmapMounts": [],
                "extraFlags": [
                  "web.enable-lifecycle"
                ],
                "extraHostPathMounts": [],
                "extraInitContainers": [],
                "extraSecretMounts": [],
                "extraVolumeMounts": [],
                "extraVolumes": [],
                "fullnameOverride": "prometheus-server",
                "global": {
                  "evaluation_interval": "1m",
                  "scrape_interval": "1m",
                  "scrape_timeout": "10s"
                },
                "hostAliases": [],
                "hostNetwork": false,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/prometheus/prometheus"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": false,
                  "extraLabels": {},
                  "extraPaths": [],
                  "hosts": [],
                  "tls": []
                },
                "livenessProbeFailureThreshold": 3,
                "livenessProbeInitialDelay": 30,
                "livenessProbePeriodSeconds": 15,
                "livenessProbeSuccessThreshold": 1,
                "livenessProbeTimeout": 10,
                "name": "server",
                "nodeSelector": {},
                "persistentVolume": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "annotations": {},
                  "enabled": true,
                  "existingClaim": "",
                  "mountPath": "/data",
                  "size": "8Gi",
                  "storageClass": "",
                  "subPath": ""
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podLabels": {},
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "prefixURL": "/k10/prometheus/",
                "priorityClassName": "",
                "readinessProbeFailureThreshold": 3,
                "readinessProbeInitialDelay": 30,
                "readinessProbePeriodSeconds": 5,
                "readinessProbeSuccessThreshold": 1,
                "readinessProbeTimeout": 4,
                "remoteRead": [],
                "remoteWrite": [],
                "replicaCount": 1,
                "resources": {},
                "retention": "30d",
                "securityContext": {
                  "fsGroup": 65534,
                  "runAsGroup": 65534,
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {},
                  "clusterIP": "",
                  "externalIPs": [],
                  "gRPC": {
                    "enabled": false,
                    "servicePort": 10901
                  },
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 80,
                  "sessionAffinity": "None",
                  "statefulsetReplica": {
                    "enabled": false,
                    "replica": 0
                  },
                  "type": "ClusterIP"
                },
                "sidecarContainers": {},
                "statefulSet": {
                  "annotations": {},
                  "enabled": false,
                  "headless": {
                    "annotations": {},
                    "gRPC": {
                      "enabled": false,
                      "servicePort": 10901
                    },
                    "labels": {},
                    "servicePort": 80
                  },
                  "labels": {},
                  "podManagementPolicy": "OrderedReady"
                },
                "storagePath": "",
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": "100%",
                    "maxUnavailable": "100%"
                  },
                  "type": "RollingUpdate"
                },
                "terminationGracePeriodSeconds": 300,
                "tolerations": [],
                "verticalAutoscaler": {
                  "enabled": false
                }
              },
              "serverFiles": {
                "alerting_rules.yml": {},
                "alerts": {},
                "prometheus.yml": {
                  "rule_files": [
                    "/etc/config/recording_rules.yml",
                    "/etc/config/alerting_rules.yml",
                    "/etc/config/rules",
                    "/etc/config/alerts"
                  ],
                  "scrape_configs": [
                    {
                      "job_name": "prometheus",
                      "static_configs": [
                        {
                          "targets": [
                            "localhost:9090"
                          ]
                        }
                      ]
                    },
                    {
                      "bearer_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                      "job_name": "kubernetes-apiservers",
                      "kubernetes_sd_configs": [
                        {
                          "role": "endpoints"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": "default;kubernetes;https",
                          "source_labels": [
                            "__meta_kubernetes_namespace",
                            "__meta_kubernetes_service_name",
                            "__meta_kubernetes_endpoint_port_name"
                          ]
                        }
                      ],
                      "scheme": "https",
                      "tls_config": {
                        "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                        "insecure_skip_verify": true
                      }
                    },
                    {
                      "bearer_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                      "job_name": "kubernetes-nodes",
                      "kubernetes_sd_configs": [
                        {
                          "role": "node"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_node_label_(.+)"
                        },
                        {
                          "replacement": "kubernetes.default.svc:443",
                          "target_label": "__address__"
                        },
                        {
                          "regex": "(.+)",
                          "replacement": "/api/v1/nodes/$1/proxy/metrics",
                          "source_labels": [
                            "__meta_kubernetes_node_name"
                          ],
                          "target_label": "__metrics_path__"
                        }
                      ],
                      "scheme": "https",
                      "tls_config": {
                        "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                        "insecure_skip_verify": true
                      }
                    },
                    {
                      "bearer_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                      "job_name": "kubernetes-nodes-cadvisor",
                      "kubernetes_sd_configs": [
                        {
                          "role": "node"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_node_label_(.+)"
                        },
                        {
                          "replacement": "kubernetes.default.svc:443",
                          "target_label": "__address__"
                        },
                        {
                          "regex": "(.+)",
                          "replacement": "/api/v1/nodes/$1/proxy/metrics/cadvisor",
                          "source_labels": [
                            "__meta_kubernetes_node_name"
                          ],
                          "target_label": "__metrics_path__"
                        }
                      ],
                      "scheme": "https",
                      "tls_config": {
                        "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                        "insecure_skip_verify": true
                      }
                    },
                    {
                      "job_name": "kubernetes-service-endpoints",
                      "kubernetes_sd_configs": [
                        {
                          "role": "endpoints"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scrape"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(https?)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scheme"
                          ],
                          "target_label": "__scheme__"
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_service_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_service_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "kubernetes_namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_service_name"
                          ],
                          "target_label": "kubernetes_name"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_node_name"
                          ],
                          "target_label": "kubernetes_node"
                        }
                      ]
                    },
                    {
                      "job_name": "kubernetes-service-endpoints-slow",
                      "kubernetes_sd_configs": [
                        {
                          "role": "endpoints"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scrape_slow"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(https?)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scheme"
                          ],
                          "target_label": "__scheme__"
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_service_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_service_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "kubernetes_namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_service_name"
                          ],
                          "target_label": "kubernetes_name"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_node_name"
                          ],
                          "target_label": "kubernetes_node"
                        }
                      ],
                      "scrape_interval": "5m",
                      "scrape_timeout": "30s"
                    },
                    {
                      "honor_labels": true,
                      "job_name": "prometheus-pushgateway",
                      "kubernetes_sd_configs": [
                        {
                          "role": "service"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": "pushgateway",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_probe"
                          ]
                        }
                      ]
                    },
                    {
                      "job_name": "kubernetes-services",
                      "kubernetes_sd_configs": [
                        {
                          "role": "service"
                        }
                      ],
                      "metrics_path": "/probe",
                      "params": {
                        "module": [
                          "http_2xx"
                        ]
                      },
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_probe"
                          ]
                        },
                        {
                          "source_labels": [
                            "__address__"
                          ],
                          "target_label": "__param_target"
                        },
                        {
                          "replacement": "blackbox",
                          "target_label": "__address__"
                        },
                        {
                          "source_labels": [
                            "__param_target"
                          ],
                          "target_label": "instance"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_service_label_(.+)"
                        },
                        {
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "kubernetes_namespace"
                        },
                        {
                          "source_labels": [
                            "__meta_kubernetes_service_name"
                          ],
                          "target_label": "kubernetes_name"
                        }
                      ]
                    },
                    {
                      "job_name": "kubernetes-pods",
                      "kubernetes_sd_configs": [
                        {
                          "role": "pod"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_scrape"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(https?)",
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_scheme"
                          ],
                          "target_label": "__scheme__"
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_pod_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_pod_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "kubernetes_namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_name"
                          ],
                          "target_label": "kubernetes_pod_name"
                        },
                        {
                          "action": "drop",
                          "regex": "Pending|Succeeded|Failed",
                          "source_labels": [
                            "__meta_kubernetes_pod_phase"
                          ]
                        }
                      ]
                    },
                    {
                      "job_name": "kubernetes-pods-slow",
                      "kubernetes_sd_configs": [
                        {
                          "role": "pod"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_scrape_slow"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(https?)",
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_scheme"
                          ],
                          "target_label": "__scheme__"
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_pod_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_pod_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "kubernetes_namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_name"
                          ],
                          "target_label": "kubernetes_pod_name"
                        },
                        {
                          "action": "drop",
                          "regex": "Pending|Succeeded|Failed",
                          "source_labels": [
                            "__meta_kubernetes_pod_phase"
                          ]
                        }
                      ],
                      "scrape_interval": "5m",
                      "scrape_timeout": "30s"
                    }
                  ]
                },
                "recording_rules.yml": {},
                "rules": {}
              },
              "serviceAccounts": {
                "alertmanager": {
                  "annotations": {},
                  "create": false
                },
                "kubeStateMetrics": {
                  "create": false
                },
                "nodeExporter": {
                  "annotations": {},
                  "create": false
                },
                "pushgateway": {
                  "annotations": {},
                  "create": false
                },
                "server": {
                  "annotations": {},
                  "create": true
                }
              }
            },
            "rbac": {
              "create": true
            },
            "resources": {},
            "route": {
              "annotations": {},
              "enabled": false,
              "host": "",
              "labels": {},
              "path": "/",
              "tls": {
                "enabled": false,
                "insecureEdgeTerminationPolicy": "Redirect",
                "termination": "edge"
              }
            },
            "scc": {
              "create": true
            },
            "secrets": {
              "apiTlsCrt": "",
              "apiTlsKey": "",
              "awsAccessKeyId": "",
              "awsIamRole": "",
              "awsSecretAccessKey": "",
              "azureADEndpoint": "",
              "azureADResourceID": "",
              "azureClientId": "",
              "azureClientSecret": "",
              "azureResourceGroup": "",
              "azureResourceMgrEndpoint": "",
              "azureSubscriptionID": "",
              "azureTenantId": "",
              "dockerConfig": "",
              "dockerConfigPath": "",
              "googleApiKey": "",
              "ibmSoftLayerApiKey": "",
              "ibmSoftLayerApiUsername": "",
              "vsphereEndpoint": "",
              "vspherePassword": "",
              "vsphereUsername": ""
            },
            "service": {
              "aggregatedApiPort": 10250,
              "externalPort": 8000,
              "gatewayAdminPort": 8877,
              "internalPort": 8000
            },
            "serviceAccount": {
              "create": true,
              "name": ""
            },
            "services": {
              "dashboardbff": {
                "hostNetwork": false
              },
              "executor": {
                "hostNetwork": false
              },
              "securityContext": {
                "fsGroup": 1000,
                "runAsUser": 1000
              }
            },
            "toolsImage": {
              "enabled": true,
              "pullPolicy": "Always"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/kasten/kasten-bundle@sha256:aca1212f1ffd5d2b76817b0f29a76fef27501cdf5c44798cb5363da9b6397051",
      "bundle_path_digest": "sha256:aca1212f1ffd5d2b76817b0f29a76fef27501cdf5c44798cb5363da9b6397051",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-07-06T15:09:07.414000+00:00",
      "csv_description": "K10 data management platform for OpenShift, The Market Leader for Kubernetes Backup and DR",
      "csv_display_name": "K10 Helm Operator",
      "csv_metadata_description": "K10 data management platform for OpenShift, The Market Leader for Kubernetes Backup and DR",
      "csv_name": "k10-kasten-operator.4.0.5003",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:18:07.140000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "k10-kasten-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:298c6b0f529604ea78321619c7ad2e116f2c86787960a03a201edb706a37ec0b",
          "image": "registry.connect.redhat.com/kasten/k10-operator@sha256:298c6b0f529604ea78321619c7ad2e116f2c86787960a03a201edb706a37ec0b",
          "name": "k10-operator-298c6b0f529604ea78321619c7ad2e116f2c86787960a03a201edb706a37ec0b-annotation"
        },
        {
          "digest": "sha256:6d0286b8a8f6f3cd9d6cd8319400acf27b70fbb52df5808ec6fe2d9849be7d8c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6d0286b8a8f6f3cd9d6cd8319400acf27b70fbb52df5808ec6fe2d9849be7d8c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:298c6b0f529604ea78321619c7ad2e116f2c86787960a03a201edb706a37ec0b",
          "image": "registry.connect.redhat.com/kasten/k10-operator@sha256:298c6b0f529604ea78321619c7ad2e116f2c86787960a03a201edb706a37ec0b",
          "name": "manager"
        },
        {
          "digest": "sha256:fd1958a016b874869adaa864ee07401bc1c55dd6a334929e6db38380b7f56543",
          "image": "registry.connect.redhat.com/kasten/aggregatedapis@sha256:fd1958a016b874869adaa864ee07401bc1c55dd6a334929e6db38380b7f56543",
          "name": "aggregatedapis"
        },
        {
          "digest": "sha256:a4acda5ee385396464e943c11380e6ed4cee55d1388f924d4983bf3a8ef59dbc",
          "image": "registry.connect.redhat.com/kasten/auth@sha256:a4acda5ee385396464e943c11380e6ed4cee55d1388f924d4983bf3a8ef59dbc",
          "name": "auth"
        },
        {
          "digest": "sha256:0c602e22c528dd271617e090827b240e9811e3e430a3ed1c5f0bb3cbc0ff449a",
          "image": "registry.connect.redhat.com/kasten/catalog@sha256:0c602e22c528dd271617e090827b240e9811e3e430a3ed1c5f0bb3cbc0ff449a",
          "name": "catalog"
        },
        {
          "digest": "sha256:6634c555a2d63f8a683e017f83fcaa91934b6d90b28fa8c6d6e81887b153d8ab",
          "image": "registry.connect.redhat.com/kasten/config@sha256:6634c555a2d63f8a683e017f83fcaa91934b6d90b28fa8c6d6e81887b153d8ab",
          "name": "config"
        },
        {
          "digest": "sha256:51514e0db8f672b91a2ec66fb39170bcdcac7d4ec5f76744c7f9d12e1fec7209",
          "image": "registry.connect.redhat.com/kasten/crypto@sha256:51514e0db8f672b91a2ec66fb39170bcdcac7d4ec5f76744c7f9d12e1fec7209",
          "name": "crypto"
        },
        {
          "digest": "sha256:7ae8f647b44494a687922c423dff8d8b63125df17a55e2952fe9e2625438cc1a",
          "image": "registry.connect.redhat.com/kasten/dashboardbff@sha256:7ae8f647b44494a687922c423dff8d8b63125df17a55e2952fe9e2625438cc1a",
          "name": "dashboardbff"
        },
        {
          "digest": "sha256:69d899fdb06a963b29bd3281e84e44022587f9bcd5be29bc406b6fd8b4357592",
          "image": "registry.connect.redhat.com/kasten/executor@sha256:69d899fdb06a963b29bd3281e84e44022587f9bcd5be29bc406b6fd8b4357592",
          "name": "executor"
        },
        {
          "digest": "sha256:287a2d8fc20d6ac0d7c35b962d14a70d4057286e48f5d428a5f252cfc6c669f6",
          "image": "registry.connect.redhat.com/kasten/frontend@sha256:287a2d8fc20d6ac0d7c35b962d14a70d4057286e48f5d428a5f252cfc6c669f6",
          "name": "frontend"
        },
        {
          "digest": "sha256:d11d4becac2bf961bbaa25577d9a4fc1d8b23efe85cb6ccbc9b9328cb177c59b",
          "image": "registry.connect.redhat.com/kasten/jobs@sha256:d11d4becac2bf961bbaa25577d9a4fc1d8b23efe85cb6ccbc9b9328cb177c59b",
          "name": "jobs"
        },
        {
          "digest": "sha256:ee74eb557c4b4ecdca57830416ce7af09ef7d4a3bd853da73fc8b3e06da7027f",
          "image": "registry.connect.redhat.com/kasten/kanister@sha256:ee74eb557c4b4ecdca57830416ce7af09ef7d4a3bd853da73fc8b3e06da7027f",
          "name": "kanister"
        },
        {
          "digest": "sha256:a5f3aab57929ef590899d225c67ff5039a635654fae8fe4a873154a36e3fb341",
          "image": "registry.connect.redhat.com/kasten/logging@sha256:a5f3aab57929ef590899d225c67ff5039a635654fae8fe4a873154a36e3fb341",
          "name": "logging"
        },
        {
          "digest": "sha256:ba2fb55bc7f7e5d2fd18d7cc5711ac3104a96c746180205beb9c550259132b2f",
          "image": "registry.connect.redhat.com/kasten/metering@sha256:ba2fb55bc7f7e5d2fd18d7cc5711ac3104a96c746180205beb9c550259132b2f",
          "name": "metering"
        },
        {
          "digest": "sha256:f39c1822afd602fbfec3a5b47bae106c13bd096dc3e0782dc83d39db4db970e8",
          "image": "registry.connect.redhat.com/kasten/state@sha256:f39c1822afd602fbfec3a5b47bae106c13bd096dc3e0782dc83d39db4db970e8",
          "name": "state"
        },
        {
          "digest": "sha256:adebb0e44b451773465345d518c7470851ff0c88408d079532e5398152da54ea",
          "image": "registry.connect.redhat.com/kasten/ambassador@sha256:adebb0e44b451773465345d518c7470851ff0c88408d079532e5398152da54ea",
          "name": "ambassador"
        },
        {
          "digest": "sha256:72546dde6d69358ba01260361abb8474958fe63c4b717a4504ecc74b306fc670",
          "image": "registry.connect.redhat.com/kasten/prometheus@sha256:72546dde6d69358ba01260361abb8474958fe63c4b717a4504ecc74b306fc670",
          "name": "prometheus"
        },
        {
          "digest": "sha256:a320d6893b7b7ef006d0c4ee51bc223ecd07d845e8ec633e3485c7d1cc700395",
          "image": "registry.connect.redhat.com/kasten/configmap-reload@sha256:a320d6893b7b7ef006d0c4ee51bc223ecd07d845e8ec633e3485c7d1cc700395",
          "name": "configmapreload"
        },
        {
          "digest": "sha256:6c1e284cdc03f4e0888653a90edef7d541a9e7eae87ce181b81e2b69edebfda1",
          "image": "registry.connect.redhat.com/kasten/dex@sha256:6c1e284cdc03f4e0888653a90edef7d541a9e7eae87ce181b81e2b69edebfda1",
          "name": "dex"
        },
        {
          "digest": "sha256:e33203b51a1905204b9a6b474641a1b82a0db71e4cca55ddb10b5f390babeb29",
          "image": "registry.connect.redhat.com/kasten/kanister-tools@sha256:e33203b51a1905204b9a6b474641a1b82a0db71e4cca55ddb10b5f390babeb29",
          "name": "kanistertools"
        },
        {
          "digest": "sha256:216fcd6c27f9372518051ce20ceb8b887f5e7a62338a82fba25ff912305ce718",
          "image": "registry.connect.redhat.com/kasten/upgrade@sha256:216fcd6c27f9372518051ce20ceb8b887f5e7a62338a82fba25ff912305ce718",
          "name": "upgrade"
        },
        {
          "digest": "sha256:741a44bb4482e0c25f3680acd8fa02899ea9e41b44b46ff6aa3877a3180c6e07",
          "image": "registry.connect.redhat.com/kasten/cephtool@sha256:741a44bb4482e0c25f3680acd8fa02899ea9e41b44b46ff6aa3877a3180c6e07",
          "name": "cephtool"
        },
        {
          "digest": "sha256:19e04b7db994cb4e0b0626620d11b4d7f6a930e81d3de9c17ff8b06449c96a98",
          "image": "registry.connect.redhat.com/kasten/datamover@sha256:19e04b7db994cb4e0b0626620d11b4d7f6a930e81d3de9c17ff8b06449c96a98",
          "name": "datamover"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "4.0.5003",
      "version_original": "4.0.5003"
    },
    {
      "_id": "60e4db8fdb72db7d0fadcf37",
      "alm_examples": [
        {
          "api_version": "apps.gitlab.com/v1beta2",
          "kind": "Runner",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "gitlabUrl": "https://gitlab.com",
            "imagePullPolicy": "Always",
            "tags": "openshift, test",
            "token": "gitlab-dev-runner-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-runner-operator-bundle@sha256:abe1504fedbf38bc1cb45e5393216bae9cca95066ca84fa730c7e8b129930074",
      "bundle_path_digest": "sha256:abe1504fedbf38bc1cb45e5393216bae9cca95066ca84fa730c7e8b129930074",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2021-07-06T22:39:11.154000+00:00",
      "csv_description": "GitLab Runner is the lightweight, highly-scalable agent that runs your build jobs and sends the results back to a GitLab instance. GitLab Runner works in conjunction with GitLab CI/CD, the open-source continuous integration service included with GitLab.\n\nThe GitLab Runner operator manages the lifecycle of GitLab Runner in Kubernetes or Openshift clusters. The operator aims to automate the tasks needed to run your CI/CD jobs in your container orchestration platform.\n\n## Usage\n\n To link a GitLab Runner instance to a self-hosted GitLab instance or the hosted [GitLab](https://gitlab.com), you first need to:\n\n 1. create a secret containing the `runner-registration-token` from your GitLab project.\n\n   ```\n  cat > gitlab-runner-secret.yml << EOF\n  apiVersion: v1\n  kind: Secret\n  metadata:\n    name: gitlab-runner-secret\n  type: Opaque\n  stringData:\n    runner-registration-token: REPLACE_ME # your project runner secret\n  EOF\n  ```\n\n  ```\n  oc apply -f gitlab-runner-secret.yml\n  ```\n\n 2. Create the Custom Resource Definition (CRD) file and include the following information. The tags value must be openshift for the job to run.\n\n   ```\n   cat > gitlab-runner.yml << EOF\n   apiVersion: apps.gitlab.com/v1beta2\n   kind: Runner\n   metadata:\n     name: gitlab-runner\n   spec:\n     gitlabUrl: https://gitlab.example.com\n     buildImage: alpine\n     token: gitlab-runner-secret\n     tags: openshift\n   EOF\n   ```\n\n  ```\n  oc apply -f gitlab-runner.yml\n  ```\n\n## Full documentation\n\nVisit [Install GitLab Runner on Red Hat OpenShift](https://docs.gitlab.com/runner/install/openshift.html)\n",
      "csv_display_name": "GitLab Runner",
      "csv_metadata_description": "GitLab Runner operator manages lifecycle of GitLab Runner instances",
      "csv_name": "gitlab-runner-operator.v1.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:49:40.319000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "gitlab-runner-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:f48d93d89905284a35a72ec312ad4313bb1a42deaaab662eb181a65d34a89cd9",
          "image": "registry.connect.redhat.com/gitlab/gitlab-runner@sha256:f48d93d89905284a35a72ec312ad4313bb1a42deaaab662eb181a65d34a89cd9",
          "name": "gitlab-runner"
        },
        {
          "digest": "sha256:9148c4c10685871e3bbed037d9c36e85f0603da38e721c5db2a85b9c6defeac9",
          "image": "registry.connect.redhat.com/gitlab/gitlab-runner-helper@sha256:9148c4c10685871e3bbed037d9c36e85f0603da38e721c5db2a85b9c6defeac9",
          "name": "gitlab-runner-helper"
        },
        {
          "digest": "sha256:6ac79da50858f82949e1dae4a016cbe86b75de977fe747a958d28dcd5c8e4080",
          "image": "registry.connect.redhat.com/gitlab/gitlab-runner-operator@sha256:6ac79da50858f82949e1dae4a016cbe86b75de977fe747a958d28dcd5c8e4080",
          "name": "gitlab-runner-operator"
        },
        {
          "digest": "sha256:dc0f91e256c86c3f7cb930d0e4d48eb68576425bc4bd288fb76decb0577c7e9e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:dc0f91e256c86c3f7cb930d0e4d48eb68576425bc4bd288fb76decb0577c7e9e",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.2.0",
      "version_original": "1.2.0"
    },
    {
      "_id": "60e88b058ce8053fa514bdc5",
      "alm_examples": [
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AirgappedDeployment",
          "metadata": {
            "name": "airgappeddeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AnalyticsProxy",
          "metadata": {
            "name": "analyticsproxy"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "DeleteCluster",
          "metadata": {
            "name": "deletecluster"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "FullDeployment",
          "metadata": {
            "name": "fulldeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "GenerateKey",
          "metadata": {
            "name": "bas-api-key"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "StoreForwardMetric",
          "metadata": {
            "name": "storeforwardmetric"
          },
          "spec": {
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "Dashboard",
          "metadata": {
            "name": "dashboard"
          },
          "spec": {
            "enable_test_api": true,
            "image_pull_secret": "bas-images-pull-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator-bundle@sha256:c73665a97beb2f5def36868ecd42cf870d7a92a0f2f728099ec05dd3abf584d8",
      "bundle_path_digest": "sha256:c73665a97beb2f5def36868ecd42cf870d7a92a0f2f728099ec05dd3abf584d8",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-07-09T17:44:37.554000+00:00",
      "csv_description": "Behavior Analytics Services Operator is a service that collects, transforms and transmits product usage data.\nThe Operator supports deployments using-\nA. Dashboard\nB. Openshift portal or CLI\n\n**A. Dashboard**\n----\nWhen the Operator is installed, the Dashboard is installed too. Goto the Dashboard Custom Resource to get the URL to the Dashboard.\n\n\n**B. Openshift portal or CLI**\n----\n----\nFor manual installation using Openshift portal or CLI, follow the steps below\n\n\n**Pre-requisites**\n----\nStep 1: Create a new Project\n```sh\noc new-project <project-name>\n```\n\nStep 2: Create a secret named \"database-credentials\" for PostgreSQL DB\n```sh\n oc create secret generic database-credentials --from-literal=db_username=<DB Username> --from-literal=db_password=<DB Password> -n <project-name>\n```\n\nStep 3: [Optional] If the images require a secret to pull the container images, create a secret of type dockerconfigjson. Pass this secret name in the CR spec image\\_pull\\_secret\n```sh\noc create secret generic bas-images-pull-secret --from-file=.dockerconfigjson=<path/to/.docker/config.json>  --type=kubernetes.io/dockerconfigjson\n```\n\nStep 4: Create a secret named \"mtls-proxy-secret\" which has the client key and certificate to connect to IBM Proxy service. If you don't have certificates then refer link https://developers.cloudflare.com/access/service-auth/mtls-testing#generating-the-root-ca to create root and client certificates. Please ensure to share root certificate with edge@us.ibm.com to allow access to IBM proxy service using client certificate.\n```sh\noc create secret tls mtls-proxy-secret --key client-key.pem --cert client.pem\n```\n\n**Installing the Behavior Analytics Services**\n----\n\nSelect any one of the deployments to setup the Behavior Analytics Services\n1. Full Deployment\n2. Analytics Proxy Deployment\n3. Store and Forward metrics Deployment\n4. Airgapped Analytics Proxy Deployment\n\n| Spec                                                      | Description                                                      | Default Value          |\n| --------------------------------------------------------- | ------------------------------------------------------------ | ---------------------- |\n| `ibmproxyurl`                                               | URL of IBM Proxy Service                                     | `https://iaps.ibm.com`   |\n| `postgres.storage_class`                                    | Storage class of type ReadWriteOnce                          | Required user input        |\n| `postgres.size`                                             | Size (in G) of the storage to be attached to Database        | `10G`                    |\n| `kafka.storage_class`                                       | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.storage_size`                                        | Size (in G) of the storage to be attached to Kafka  | `5G`                     |\n| `kafka.zookeeper_storage_class`                                 | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.zookeeper_storage_size`                                 | Size (in G) of the storage to be attached to Zookeeper | `5G`                     |\n| `airgapped.enabled`                                         | Set value to \"true\" if airgapped setup is to be enabled otherwise keep the default value \"false\" | `false`                  |\n| `airgapped.backup_retention_period`   | Number of days to keep the backup files in the storage       | `7`                     |\n| `airgapped.backup_deletion_frequency` | Frequency of job to delete files from the storage. It accepts values in Cron format (https://en.wikipedia.org/wiki/Cron) | `@daily`                 |\n| `event_scheduler_frequency`                               | Frequency at which events will be forwarded to proxy in Cron format. In case if internet connection available on the cluster only during a certain time frame, specify time in UTC equivalent Cron format. | `@hourly`                |\n| `prometheus_scheduler_frequency`                          | Frequency in Cronjob format to pull metrics from Prometheus  | `@daily`                |\n| `image_pull_secret`                                       | Secret to pull container images from registry                | `bas-images-pull-secret` |\n| `db_archive.frequency`                                    | Frequency in Cronjob format to run archive job                                                           | `@monthly`             |\n| `db_archive.retention_age`                                | Number of months to retain the data in Database              | `6`                    |\n| `db_archive.persistent_storage.storage_class`             |Storage class of type ReadWriteMany         | Required user input    |\n| `db_archive.persistent_storage.storage_size`              | Size (in G) of the storage to be attached for saving airgapped files | `10G`                  |\n| `prometheus_metrics`                                      | Array of metrics information to be send to destination at desired frequency | []\n| `env_type`              | Type of environment. Can be **prod** (HA) or **lite** (non HA)   | `lite`                  |\n| `allowed_domains`                                         | Comma separated values of domains allowed by BAS. By default all domains are allowed | '*'\n\n\n**Generating the API Key**\n----\nOnce the deployment is complete, to use the Behavior Analytics Services Endpoints, generate an API key using the CR GenerateKey. This API key to be used to authenticate Behavior Analytics Services Endpoints.\n\nNote- Key can be retrieved from the secret with same name used while creating Generate Key CR's instance.\nOnce you get key from the secret, decode it using below command:\n```sh\necho -n <secret key> | base64 -d\n```\n\n**Deleting the API Key**\n----\nTo revoke the Key, delete the corresponding GenerateKey instance.\n\n**Using Behavior Analytics Services Endpoints**\n---\nFor all BAS APIs, use the Generated API Key for Authentication. Pass it as the Header- X-API-KEY and the key while using the APIs.",
      "csv_display_name": "Behavior Analytics Services",
      "csv_metadata_description": "Behavior Analytics Services is a service that collects, transforms and transmits product usage data.",
      "csv_name": "behavior-analytics-services-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:21:40.262000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "behavior-analytics-services-operator-certified",
      "provided_apis": [
        {
          "group": "bas.ibm.com",
          "kind": "GenerateKey",
          "plural": "generatekeys",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "StoreForwardMetric",
          "plural": "storeforwardmetrics",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AirgappedDeployment",
          "plural": "airgappeddeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AnalyticsProxy",
          "plural": "analyticsproxies",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "Dashboard",
          "plural": "dashboards",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "DeleteCluster",
          "plural": "deleteclusters",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "FullDeployment",
          "plural": "fulldeployments",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8d56736a7de882786e0568659ffbf18879f3dc3125aee141072e9dfcd6e9579a",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8d56736a7de882786e0568659ffbf18879f3dc3125aee141072e9dfcd6e9579a",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:52e3c8d530e2a0e3d7c37206579037e8354cf76bb880605a09d623a5754c0bca",
          "image": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator@sha256:52e3c8d530e2a0e3d7c37206579037e8354cf76bb880605a09d623a5754c0bca",
          "name": "behavior-analytics-services-operator"
        },
        {
          "digest": "sha256:5bc5f622a05b8993785c996890b7e8b19ca680788e525ae9e7833e365c1774f9",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:5bc5f622a05b8993785c996890b7e8b19ca680788e525ae9e7833e365c1774f9",
          "name": "dashboardinstaller"
        },
        {
          "digest": "sha256:13902a13f7bca0d346e1af4719ac0be4b92d8d283c2c35068ecc1f1dedd676ab",
          "image": "registry.connect.redhat.com/ibm-edge/event-api@sha256:13902a13f7bca0d346e1af4719ac0be4b92d8d283c2c35068ecc1f1dedd676ab",
          "name": "event_api"
        },
        {
          "digest": "sha256:e5dc124a4e9c9b1a85fc421c557bdd071b25330a093c61ba7430d69d477fcd4b",
          "image": "registry.connect.redhat.com/ibm-edge/store-api@sha256:e5dc124a4e9c9b1a85fc421c557bdd071b25330a093c61ba7430d69d477fcd4b",
          "name": "store_api"
        },
        {
          "digest": "sha256:819ffaf71e72b744cd9d8ce8fb40a60f1a2ada42c27bdfd160e6678b4538c38b",
          "image": "registry.connect.redhat.com/ibm-edge/event-reader@sha256:819ffaf71e72b744cd9d8ce8fb40a60f1a2ada42c27bdfd160e6678b4538c38b",
          "name": "reader"
        },
        {
          "digest": "sha256:93dd46f5a4e7cf5ff2b9c440fb75147bd7dffb426ba261355f39adcf91d86117",
          "image": "registry.connect.redhat.com/ibm-edge/event-scheduler@sha256:93dd46f5a4e7cf5ff2b9c440fb75147bd7dffb426ba261355f39adcf91d86117",
          "name": "event_scheduler"
        },
        {
          "digest": "sha256:b7feb7e1ab0faa1fe2ec0fc0ce7d823e5476e9f5c13d7ed6a4c1eff013bf07bc",
          "image": "registry.connect.redhat.com/ibm-edge/prometheus-scheduler@sha256:b7feb7e1ab0faa1fe2ec0fc0ce7d823e5476e9f5c13d7ed6a4c1eff013bf07bc",
          "name": "prometheus_scheduler"
        },
        {
          "digest": "sha256:5af6f4603b6c5a173f75a408aabf806e660ce60ced5d3dbe76a0ccfcb01c78da",
          "image": "registry.connect.redhat.com/ibm-edge/pgo-client@sha256:5af6f4603b6c5a173f75a408aabf806e660ce60ced5d3dbe76a0ccfcb01c78da",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:865d9288eb8a2ab50c1e75bf7849b0a8e4b33d0f72a984eed22639a20aeb8c7d",
          "image": "registry.connect.redhat.com/ibm-edge/reverse-proxy@sha256:865d9288eb8a2ab50c1e75bf7849b0a8e4b33d0f72a984eed22639a20aeb8c7d",
          "name": "nginx"
        },
        {
          "digest": "sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "image": "registry.redhat.io/openshift4/ose-grafana@sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "name": "grafana"
        },
        {
          "digest": "sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "image": "registry.redhat.io/openshift3/ose-kube-state-metrics@sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "name": "ksm"
        },
        {
          "digest": "sha256:e42df9b4eac95f43d4abafa1cdfe4ea471941cb884d454a58533f3650d667064",
          "image": "registry.connect.redhat.com/ibm-edge/growth-stack-base@sha256:e42df9b4eac95f43d4abafa1cdfe4ea471941cb884d454a58533f3650d667064",
          "name": "init_container"
        },
        {
          "digest": "sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "image": "registry.access.redhat.com/ubi8/ubi@sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "name": "ubi"
        },
        {
          "digest": "sha256:a05b0b82ca02f4cf731f0d18c1196084d8f3c1d4c78e5d4e6a2b593efe274bc7",
          "image": "registry.connect.redhat.com/ibm-edge/airgap-download-ui@sha256:a05b0b82ca02f4cf731f0d18c1196084d8f3c1d4c78e5d4e6a2b593efe274bc7",
          "name": "download_ui"
        },
        {
          "digest": "sha256:0151e5dbe0a25e30a0f22b788329f35a918ab8649c59ebd3fa1e0d1dd0c3bb3f",
          "image": "registry.connect.redhat.com/ibm-edge/bas-operator-dashboard@sha256:0151e5dbe0a25e30a0f22b788329f35a918ab8649c59ebd3fa1e0d1dd0c3bb3f",
          "name": "dashboard_ui"
        },
        {
          "digest": "sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "image": "registry.connect.redhat.com/crunchydata/pgo-deployer@sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "name": "pgo_deployer"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "60e8979e146e762beb225da2",
      "alm_examples": [
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AirgappedDeployment",
          "metadata": {
            "name": "airgappeddeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AnalyticsProxy",
          "metadata": {
            "name": "analyticsproxy"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "DeleteCluster",
          "metadata": {
            "name": "deletecluster"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "FullDeployment",
          "metadata": {
            "name": "fulldeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "GenerateKey",
          "metadata": {
            "name": "bas-api-key"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "StoreForwardMetric",
          "metadata": {
            "name": "storeforwardmetric"
          },
          "spec": {
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "Dashboard",
          "metadata": {
            "name": "dashboard"
          },
          "spec": {
            "enable_test_api": true,
            "image_pull_secret": "bas-images-pull-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator-bundle@sha256:c73665a97beb2f5def36868ecd42cf870d7a92a0f2f728099ec05dd3abf584d8",
      "bundle_path_digest": "sha256:c73665a97beb2f5def36868ecd42cf870d7a92a0f2f728099ec05dd3abf584d8",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-07-09T18:38:22.939000+00:00",
      "csv_description": "Behavior Analytics Services Operator is a service that collects, transforms and transmits product usage data.\nThe Operator supports deployments using-\nA. Dashboard\nB. Openshift portal or CLI\n\n**A. Dashboard**\n----\nWhen the Operator is installed, the Dashboard is installed too. Goto the Dashboard Custom Resource to get the URL to the Dashboard.\n\n\n**B. Openshift portal or CLI**\n----\n----\nFor manual installation using Openshift portal or CLI, follow the steps below\n\n\n**Pre-requisites**\n----\nStep 1: Create a new Project\n```sh\noc new-project <project-name>\n```\n\nStep 2: Create a secret named \"database-credentials\" for PostgreSQL DB\n```sh\n oc create secret generic database-credentials --from-literal=db_username=<DB Username> --from-literal=db_password=<DB Password> -n <project-name>\n```\n\nStep 3: [Optional] If the images require a secret to pull the container images, create a secret of type dockerconfigjson. Pass this secret name in the CR spec image\\_pull\\_secret\n```sh\noc create secret generic bas-images-pull-secret --from-file=.dockerconfigjson=<path/to/.docker/config.json>  --type=kubernetes.io/dockerconfigjson\n```\n\nStep 4: Create a secret named \"mtls-proxy-secret\" which has the client key and certificate to connect to IBM Proxy service. If you don't have certificates then refer link https://developers.cloudflare.com/access/service-auth/mtls-testing#generating-the-root-ca to create root and client certificates. Please ensure to share root certificate with edge@us.ibm.com to allow access to IBM proxy service using client certificate.\n```sh\noc create secret tls mtls-proxy-secret --key client-key.pem --cert client.pem\n```\n\n**Installing the Behavior Analytics Services**\n----\n\nSelect any one of the deployments to setup the Behavior Analytics Services\n1. Full Deployment\n2. Analytics Proxy Deployment\n3. Store and Forward metrics Deployment\n4. Airgapped Analytics Proxy Deployment\n\n| Spec                                                      | Description                                                      | Default Value          |\n| --------------------------------------------------------- | ------------------------------------------------------------ | ---------------------- |\n| `ibmproxyurl`                                               | URL of IBM Proxy Service                                     | `https://iaps.ibm.com`   |\n| `postgres.storage_class`                                    | Storage class of type ReadWriteOnce                          | Required user input        |\n| `postgres.size`                                             | Size (in G) of the storage to be attached to Database        | `10G`                    |\n| `kafka.storage_class`                                       | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.storage_size`                                        | Size (in G) of the storage to be attached to Kafka  | `5G`                     |\n| `kafka.zookeeper_storage_class`                                 | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.zookeeper_storage_size`                                 | Size (in G) of the storage to be attached to Zookeeper | `5G`                     |\n| `airgapped.enabled`                                         | Set value to \"true\" if airgapped setup is to be enabled otherwise keep the default value \"false\" | `false`                  |\n| `airgapped.backup_retention_period`   | Number of days to keep the backup files in the storage       | `7`                     |\n| `airgapped.backup_deletion_frequency` | Frequency of job to delete files from the storage. It accepts values in Cron format (https://en.wikipedia.org/wiki/Cron) | `@daily`                 |\n| `event_scheduler_frequency`                               | Frequency at which events will be forwarded to proxy in Cron format. In case if internet connection available on the cluster only during a certain time frame, specify time in UTC equivalent Cron format. | `@hourly`                |\n| `prometheus_scheduler_frequency`                          | Frequency in Cronjob format to pull metrics from Prometheus  | `@daily`                |\n| `image_pull_secret`                                       | Secret to pull container images from registry                | `bas-images-pull-secret` |\n| `db_archive.frequency`                                    | Frequency in Cronjob format to run archive job                                                           | `@monthly`             |\n| `db_archive.retention_age`                                | Number of months to retain the data in Database              | `6`                    |\n| `db_archive.persistent_storage.storage_class`             |Storage class of type ReadWriteMany         | Required user input    |\n| `db_archive.persistent_storage.storage_size`              | Size (in G) of the storage to be attached for saving airgapped files | `10G`                  |\n| `prometheus_metrics`                                      | Array of metrics information to be send to destination at desired frequency | []\n| `env_type`              | Type of environment. Can be **prod** (HA) or **lite** (non HA)   | `lite`                  |\n| `allowed_domains`                                         | Comma separated values of domains allowed by BAS. By default all domains are allowed | '*'\n\n\n**Generating the API Key**\n----\nOnce the deployment is complete, to use the Behavior Analytics Services Endpoints, generate an API key using the CR GenerateKey. This API key to be used to authenticate Behavior Analytics Services Endpoints.\n\nNote- Key can be retrieved from the secret with same name used while creating Generate Key CR's instance.\nOnce you get key from the secret, decode it using below command:\n```sh\necho -n <secret key> | base64 -d\n```\n\n**Deleting the API Key**\n----\nTo revoke the Key, delete the corresponding GenerateKey instance.\n\n**Using Behavior Analytics Services Endpoints**\n---\nFor all BAS APIs, use the Generated API Key for Authentication. Pass it as the Header- X-API-KEY and the key while using the APIs.",
      "csv_display_name": "Behavior Analytics Services",
      "csv_metadata_description": "Behavior Analytics Services is a service that collects, transforms and transmits product usage data.",
      "csv_name": "behavior-analytics-services-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:00:06.926000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "behavior-analytics-services-operator-certified",
      "provided_apis": [
        {
          "group": "bas.ibm.com",
          "kind": "AirgappedDeployment",
          "plural": "airgappeddeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AnalyticsProxy",
          "plural": "analyticsproxies",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "Dashboard",
          "plural": "dashboards",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "DeleteCluster",
          "plural": "deleteclusters",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "FullDeployment",
          "plural": "fulldeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "GenerateKey",
          "plural": "generatekeys",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "StoreForwardMetric",
          "plural": "storeforwardmetrics",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8d56736a7de882786e0568659ffbf18879f3dc3125aee141072e9dfcd6e9579a",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8d56736a7de882786e0568659ffbf18879f3dc3125aee141072e9dfcd6e9579a",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:52e3c8d530e2a0e3d7c37206579037e8354cf76bb880605a09d623a5754c0bca",
          "image": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator@sha256:52e3c8d530e2a0e3d7c37206579037e8354cf76bb880605a09d623a5754c0bca",
          "name": "behavior-analytics-services-operator"
        },
        {
          "digest": "sha256:5bc5f622a05b8993785c996890b7e8b19ca680788e525ae9e7833e365c1774f9",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:5bc5f622a05b8993785c996890b7e8b19ca680788e525ae9e7833e365c1774f9",
          "name": "dashboardinstaller"
        },
        {
          "digest": "sha256:13902a13f7bca0d346e1af4719ac0be4b92d8d283c2c35068ecc1f1dedd676ab",
          "image": "registry.connect.redhat.com/ibm-edge/event-api@sha256:13902a13f7bca0d346e1af4719ac0be4b92d8d283c2c35068ecc1f1dedd676ab",
          "name": "event_api"
        },
        {
          "digest": "sha256:e5dc124a4e9c9b1a85fc421c557bdd071b25330a093c61ba7430d69d477fcd4b",
          "image": "registry.connect.redhat.com/ibm-edge/store-api@sha256:e5dc124a4e9c9b1a85fc421c557bdd071b25330a093c61ba7430d69d477fcd4b",
          "name": "store_api"
        },
        {
          "digest": "sha256:819ffaf71e72b744cd9d8ce8fb40a60f1a2ada42c27bdfd160e6678b4538c38b",
          "image": "registry.connect.redhat.com/ibm-edge/event-reader@sha256:819ffaf71e72b744cd9d8ce8fb40a60f1a2ada42c27bdfd160e6678b4538c38b",
          "name": "reader"
        },
        {
          "digest": "sha256:93dd46f5a4e7cf5ff2b9c440fb75147bd7dffb426ba261355f39adcf91d86117",
          "image": "registry.connect.redhat.com/ibm-edge/event-scheduler@sha256:93dd46f5a4e7cf5ff2b9c440fb75147bd7dffb426ba261355f39adcf91d86117",
          "name": "event_scheduler"
        },
        {
          "digest": "sha256:b7feb7e1ab0faa1fe2ec0fc0ce7d823e5476e9f5c13d7ed6a4c1eff013bf07bc",
          "image": "registry.connect.redhat.com/ibm-edge/prometheus-scheduler@sha256:b7feb7e1ab0faa1fe2ec0fc0ce7d823e5476e9f5c13d7ed6a4c1eff013bf07bc",
          "name": "prometheus_scheduler"
        },
        {
          "digest": "sha256:5af6f4603b6c5a173f75a408aabf806e660ce60ced5d3dbe76a0ccfcb01c78da",
          "image": "registry.connect.redhat.com/ibm-edge/pgo-client@sha256:5af6f4603b6c5a173f75a408aabf806e660ce60ced5d3dbe76a0ccfcb01c78da",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:865d9288eb8a2ab50c1e75bf7849b0a8e4b33d0f72a984eed22639a20aeb8c7d",
          "image": "registry.connect.redhat.com/ibm-edge/reverse-proxy@sha256:865d9288eb8a2ab50c1e75bf7849b0a8e4b33d0f72a984eed22639a20aeb8c7d",
          "name": "nginx"
        },
        {
          "digest": "sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "image": "registry.redhat.io/openshift4/ose-grafana@sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "name": "grafana"
        },
        {
          "digest": "sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "image": "registry.redhat.io/openshift3/ose-kube-state-metrics@sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "name": "ksm"
        },
        {
          "digest": "sha256:e42df9b4eac95f43d4abafa1cdfe4ea471941cb884d454a58533f3650d667064",
          "image": "registry.connect.redhat.com/ibm-edge/growth-stack-base@sha256:e42df9b4eac95f43d4abafa1cdfe4ea471941cb884d454a58533f3650d667064",
          "name": "init_container"
        },
        {
          "digest": "sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "image": "registry.access.redhat.com/ubi8/ubi@sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "name": "ubi"
        },
        {
          "digest": "sha256:a05b0b82ca02f4cf731f0d18c1196084d8f3c1d4c78e5d4e6a2b593efe274bc7",
          "image": "registry.connect.redhat.com/ibm-edge/airgap-download-ui@sha256:a05b0b82ca02f4cf731f0d18c1196084d8f3c1d4c78e5d4e6a2b593efe274bc7",
          "name": "download_ui"
        },
        {
          "digest": "sha256:0151e5dbe0a25e30a0f22b788329f35a918ab8649c59ebd3fa1e0d1dd0c3bb3f",
          "image": "registry.connect.redhat.com/ibm-edge/bas-operator-dashboard@sha256:0151e5dbe0a25e30a0f22b788329f35a918ab8649c59ebd3fa1e0d1dd0c3bb3f",
          "name": "dashboard_ui"
        },
        {
          "digest": "sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "image": "registry.connect.redhat.com/crunchydata/pgo-deployer@sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "name": "pgo_deployer"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "60e8c0d8ba43af88444a3fe1",
      "alm_examples": [
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCluster",
          "metadata": {
            "name": "cb-example"
          },
          "spec": {
            "backup": {
              "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              },
              "serviceAccountName": "couchbase-backup"
            },
            "buckets": {
              "managed": true,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            },
            "cluster": {
              "analyticsServiceMemoryQuota": "1Gi",
              "autoCompaction": {
                "databaseFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                },
                "parallelCompaction": false,
                "timeWindow": {
                  "abortCompactionOutsideWindow": true,
                  "end": "06:00",
                  "start": "02:00"
                },
                "tombstonePurgeInterval": "72h",
                "viewFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                }
              },
              "autoFailoverMaxCount": 3,
              "autoFailoverOnDataDiskIssues": true,
              "autoFailoverOnDataDiskIssuesTimePeriod": "120s",
              "autoFailoverServerGroup": false,
              "autoFailoverTimeout": "120s",
              "clusterName": "cb-example",
              "dataServiceMemoryQuota": "256Mi",
              "eventingServiceMemoryQuota": "256Mi",
              "indexServiceMemoryQuota": "256Mi",
              "indexStorageSetting": "memory_optimized",
              "searchServiceMemoryQuota": "256Mi"
            },
            "enablePreviewScaling": false,
            "hibernate": false,
            "hibernationStrategy": "Immediate",
            "image": "registry.connect.redhat.com/couchbase/server@sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
            "logRetentionCount": 20,
            "logRetentionTime": "604800s",
            "monitoring": {
              "prometheus": {
                "enabled": false,
                "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784"
              }
            },
            "networking": {
              "adminConsoleServiceType": "NodePort",
              "adminConsoleServices": [
                "data"
              ],
              "exposeAdminConsole": true,
              "exposedFeatureServiceType": "NodePort",
              "exposedFeatures": [
                "xdcr"
              ]
            },
            "recoveryPolicy": "PrioritizeDataIntegrity",
            "security": {
              "adminSecret": "cb-example-auth",
              "rbac": {
                "managed": true,
                "selector": {
                  "matchLabels": {
                    "cluster": "cb-example"
                  }
                }
              }
            },
            "servers": [
              {
                "name": "all_services",
                "services": [
                  "data",
                  "index",
                  "query",
                  "search",
                  "eventing",
                  "analytics"
                ],
                "size": 3
              }
            ],
            "upgradeStrategy": "RollingUpgrade",
            "xdcr": {
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "default"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "enableIndexReplica": true,
            "evictionPolicy": "valueOnly",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseEphemeralBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "ephemeral-bucket"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "evictionPolicy": "noEviction",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseMemcachedBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "memcached-bucket"
          },
          "spec": {
            "enableFlush": false,
            "memoryQuota": "100Mi"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseUser",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-user"
          },
          "spec": {
            "authDomain": "local",
            "authSecret": "cb-example-auth",
            "fullName": "My User"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseGroup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-group"
          },
          "spec": {
            "roles": [
              {
                "bucket": "default",
                "name": "bucket_admin"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseRoleBinding",
          "metadata": {
            "name": "my-role-binding"
          },
          "spec": {
            "roleRef": {
              "kind": "CouchbaseGroup",
              "name": "my-group"
            },
            "subjects": [
              {
                "kind": "CouchbaseUser",
                "name": "my-user"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseReplication",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-replication"
          },
          "spec": {
            "bucket": "default",
            "compressionType": "Snappy",
            "filterExpression": "",
            "paused": false,
            "remoteBucket": "default"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-backup"
          },
          "spec": {
            "backOffLimit": 2,
            "backupRetention": "24h",
            "failedJobsHistoryLimit": 3,
            "full": {
              "schedule": "0 3 * * 6"
            },
            "incremental": {
              "schedule": "0 3 * * 1-6"
            },
            "logRetention": "24h",
            "size": "5Gi",
            "strategy": "full_incremental",
            "successfulJobsHistoryLimit": 1
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackupRestore",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-restore"
          },
          "spec": {
            "backOffLimit": 2,
            "backup": "cb-backup",
            "end": {
              "int": 1
            },
            "logRetention": "24h",
            "repo": "cb-example-2020-10-29T19_00_03",
            "start": {
              "int": 1
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseAutoscaler",
          "metadata": {
            "name": "do.not.create.internal.only"
          },
          "spec": {
            "servers": "internal",
            "size": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:69c9d29a8a5ba4eac037051a256a458d5772fca8b813c764ddbe02f80d89b76f",
      "bundle_path_digest": "sha256:69c9d29a8a5ba4eac037051a256a458d5772fca8b813c764ddbe02f80d89b76f",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-07-09T21:34:16.912000+00:00",
      "csv_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments on OpenShift. By installing this integration you will be able to deply Couchbase Server clusters with a single command.\n\n## Supported Features\n\n* **Automated cluster provisioning** - Deploying a Couchbase Cluster has never been easier. Fill out a Couchbase specific configuration and let the Couchbase Operator take care of provisioning nodes and setting up cluster to your exact specification.\n\n* **On-demand scalability** - Automatically scale your cluster up or down by changing a simple configuration parameter and let the Couchbase Operator handle provisioning of new nodes and joining them into the cluster.\n\n* **Auto-recovery** - Detect Couchbase node failures, rebalance out bad nodes, and bring the cluster back up to the desired capacity. Auto-recovery is completely automated so you can sleep easy through the night knowing that the Couchbase Operator will handle any failures.\n\n* **Geo-distribution** - Replicate your data between datacenters to move data closer to the users who consume it and protect against disaster scenarios where an entire datacenter becomes unavailable.\n\n* **Persistent storage** - Define persistent network-attached storage for each node in your cluster to allow pods to be recovered even if the node they were running on is no longer available.\n\n* **Rack/zone awareness** - Tell the Couchbase Operator about availability zones in your datacenter and let the operator take care of ensuring that nodes in your cluster are deployed equally across each zone.\n\n* **Supportability** - When things go wrong, use the cbopinfo tool provided with the Couchbase Operator to collect relevant data about your Couchbase deployment so that you can quickly address issues.\n\n* **Centralized configuration management** - Manage your configuration centrally with OpenShift. Updates to the configuration are watched by the Couchbase Operator and actions are taken to make the target cluster match the desired configuration.\n## Required Parameters\n* `authSecret` - provide the name of a secret that contains two keys for the `username` and `password` of the super user ([documentation](https://docs.couchbase.com/operator/1.2/couchbase-cluster-config.html))\n\n## About Couchbase Server\n\nBuilt on the most powerful NoSQL technology, Couchbase Server delivers unparalleled performance at scale, in any cloud. With features like memory-first architecture, geo-distributed deployments, and workload isolation, Couchbase Server excels at supporting mission-critical applications at scale while maintaining submillisecond latencies and 99.999% availability. Plus, with the most comprehensive SQL-compatible query language (N1QL), migrating from RDBMS to Couchbase Server is easy with ANSI joins.\n",
      "csv_display_name": "Couchbase Operator",
      "csv_metadata_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments",
      "csv_name": "couchbase-operator.v2.2.0-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:24:36.523000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "plural": "couchbasememcachedbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseAutoscaler",
          "plural": "couchbaseautoscalers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "plural": "couchbasebackuprestores",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "plural": "couchbasereplications",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "plural": "couchbaseephemeralbuckets",
          "version": "v2"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:59c872ac4b19b5086a47ce95675f11df2925aa0c5d3dc0afda8df4599a8b0649",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:59c872ac4b19b5086a47ce95675f11df2925aa0c5d3dc0afda8df4599a8b0649",
          "name": "operator-59c872ac4b19b5086a47ce95675f11df2925aa0c5d3dc0afda8df4599a8b0649-annotation"
        },
        {
          "digest": "sha256:59c872ac4b19b5086a47ce95675f11df2925aa0c5d3dc0afda8df4599a8b0649",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:59c872ac4b19b5086a47ce95675f11df2925aa0c5d3dc0afda8df4599a8b0649",
          "name": "couchbase-operator"
        },
        {
          "digest": "sha256:187046a848f32233e7e92705c57fa864b1d373c2078a92b51c9706bec6e372e5",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:187046a848f32233e7e92705c57fa864b1d373c2078a92b51c9706bec6e372e5",
          "name": "couchbase_server"
        },
        {
          "digest": "sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "name": "couchbase_backup"
        },
        {
          "digest": "sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "name": "couchbase_metrics"
        },
        {
          "digest": "sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "name": "exporter-b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784-annotation"
        },
        {
          "digest": "sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "name": "operator-backup-c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76-annotation"
        },
        {
          "digest": "sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
          "name": "server-c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.2.0-1",
      "version_original": "2.2.0-1"
    },
    {
      "_id": "60e8c12a146e762beb225dc0",
      "alm_examples": [
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCluster",
          "metadata": {
            "name": "cb-example"
          },
          "spec": {
            "backup": {
              "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              },
              "serviceAccountName": "couchbase-backup"
            },
            "buckets": {
              "managed": true,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            },
            "cluster": {
              "analyticsServiceMemoryQuota": "1Gi",
              "autoCompaction": {
                "databaseFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                },
                "parallelCompaction": false,
                "timeWindow": {
                  "abortCompactionOutsideWindow": true,
                  "end": "06:00",
                  "start": "02:00"
                },
                "tombstonePurgeInterval": "72h",
                "viewFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                }
              },
              "autoFailoverMaxCount": 3,
              "autoFailoverOnDataDiskIssues": true,
              "autoFailoverOnDataDiskIssuesTimePeriod": "120s",
              "autoFailoverServerGroup": false,
              "autoFailoverTimeout": "120s",
              "clusterName": "cb-example",
              "dataServiceMemoryQuota": "256Mi",
              "eventingServiceMemoryQuota": "256Mi",
              "indexServiceMemoryQuota": "256Mi",
              "indexStorageSetting": "memory_optimized",
              "searchServiceMemoryQuota": "256Mi"
            },
            "enablePreviewScaling": false,
            "hibernate": false,
            "hibernationStrategy": "Immediate",
            "image": "registry.connect.redhat.com/couchbase/server@sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
            "logRetentionCount": 20,
            "logRetentionTime": "604800s",
            "monitoring": {
              "prometheus": {
                "enabled": false,
                "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784"
              }
            },
            "networking": {
              "adminConsoleServiceType": "NodePort",
              "adminConsoleServices": [
                "data"
              ],
              "exposeAdminConsole": true,
              "exposedFeatureServiceType": "NodePort",
              "exposedFeatures": [
                "xdcr"
              ]
            },
            "recoveryPolicy": "PrioritizeDataIntegrity",
            "security": {
              "adminSecret": "cb-example-auth",
              "rbac": {
                "managed": true,
                "selector": {
                  "matchLabels": {
                    "cluster": "cb-example"
                  }
                }
              }
            },
            "servers": [
              {
                "name": "all_services",
                "services": [
                  "data",
                  "index",
                  "query",
                  "search",
                  "eventing",
                  "analytics"
                ],
                "size": 3
              }
            ],
            "upgradeStrategy": "RollingUpgrade",
            "xdcr": {
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "default"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "enableIndexReplica": true,
            "evictionPolicy": "valueOnly",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseEphemeralBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "ephemeral-bucket"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "evictionPolicy": "noEviction",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseMemcachedBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "memcached-bucket"
          },
          "spec": {
            "enableFlush": false,
            "memoryQuota": "100Mi"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseUser",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-user"
          },
          "spec": {
            "authDomain": "local",
            "authSecret": "cb-example-auth",
            "fullName": "My User"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseGroup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-group"
          },
          "spec": {
            "roles": [
              {
                "bucket": "default",
                "name": "bucket_admin"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseRoleBinding",
          "metadata": {
            "name": "my-role-binding"
          },
          "spec": {
            "roleRef": {
              "kind": "CouchbaseGroup",
              "name": "my-group"
            },
            "subjects": [
              {
                "kind": "CouchbaseUser",
                "name": "my-user"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseReplication",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-replication"
          },
          "spec": {
            "bucket": "default",
            "compressionType": "Snappy",
            "filterExpression": "",
            "paused": false,
            "remoteBucket": "default"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-backup"
          },
          "spec": {
            "backOffLimit": 2,
            "backupRetention": "24h",
            "failedJobsHistoryLimit": 3,
            "full": {
              "schedule": "0 3 * * 6"
            },
            "incremental": {
              "schedule": "0 3 * * 1-6"
            },
            "logRetention": "24h",
            "size": "5Gi",
            "strategy": "full_incremental",
            "successfulJobsHistoryLimit": 1
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackupRestore",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-restore"
          },
          "spec": {
            "backOffLimit": 2,
            "backup": "cb-backup",
            "end": {
              "int": 1
            },
            "logRetention": "24h",
            "repo": "cb-example-2020-10-29T19_00_03",
            "start": {
              "int": 1
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseAutoscaler",
          "metadata": {
            "name": "do.not.create.internal.only"
          },
          "spec": {
            "servers": "internal",
            "size": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:69c9d29a8a5ba4eac037051a256a458d5772fca8b813c764ddbe02f80d89b76f",
      "bundle_path_digest": "sha256:69c9d29a8a5ba4eac037051a256a458d5772fca8b813c764ddbe02f80d89b76f",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-07-09T21:35:38.972000+00:00",
      "csv_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments on OpenShift. By installing this integration you will be able to deply Couchbase Server clusters with a single command.\n\n## Supported Features\n\n* **Automated cluster provisioning** - Deploying a Couchbase Cluster has never been easier. Fill out a Couchbase specific configuration and let the Couchbase Operator take care of provisioning nodes and setting up cluster to your exact specification.\n\n* **On-demand scalability** - Automatically scale your cluster up or down by changing a simple configuration parameter and let the Couchbase Operator handle provisioning of new nodes and joining them into the cluster.\n\n* **Auto-recovery** - Detect Couchbase node failures, rebalance out bad nodes, and bring the cluster back up to the desired capacity. Auto-recovery is completely automated so you can sleep easy through the night knowing that the Couchbase Operator will handle any failures.\n\n* **Geo-distribution** - Replicate your data between datacenters to move data closer to the users who consume it and protect against disaster scenarios where an entire datacenter becomes unavailable.\n\n* **Persistent storage** - Define persistent network-attached storage for each node in your cluster to allow pods to be recovered even if the node they were running on is no longer available.\n\n* **Rack/zone awareness** - Tell the Couchbase Operator about availability zones in your datacenter and let the operator take care of ensuring that nodes in your cluster are deployed equally across each zone.\n\n* **Supportability** - When things go wrong, use the cbopinfo tool provided with the Couchbase Operator to collect relevant data about your Couchbase deployment so that you can quickly address issues.\n\n* **Centralized configuration management** - Manage your configuration centrally with OpenShift. Updates to the configuration are watched by the Couchbase Operator and actions are taken to make the target cluster match the desired configuration.\n## Required Parameters\n* `authSecret` - provide the name of a secret that contains two keys for the `username` and `password` of the super user ([documentation](https://docs.couchbase.com/operator/1.2/couchbase-cluster-config.html))\n\n## About Couchbase Server\n\nBuilt on the most powerful NoSQL technology, Couchbase Server delivers unparalleled performance at scale, in any cloud. With features like memory-first architecture, geo-distributed deployments, and workload isolation, Couchbase Server excels at supporting mission-critical applications at scale while maintaining submillisecond latencies and 99.999% availability. Plus, with the most comprehensive SQL-compatible query language (N1QL), migrating from RDBMS to Couchbase Server is easy with ANSI joins.\n",
      "csv_display_name": "Couchbase Operator",
      "csv_metadata_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments",
      "csv_name": "couchbase-operator.v2.2.0-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:13:09.983000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "plural": "couchbaseephemeralbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseAutoscaler",
          "plural": "couchbaseautoscalers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "plural": "couchbasebackuprestores",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "plural": "couchbasememcachedbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "plural": "couchbasereplications",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v2"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:59c872ac4b19b5086a47ce95675f11df2925aa0c5d3dc0afda8df4599a8b0649",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:59c872ac4b19b5086a47ce95675f11df2925aa0c5d3dc0afda8df4599a8b0649",
          "name": "operator-59c872ac4b19b5086a47ce95675f11df2925aa0c5d3dc0afda8df4599a8b0649-annotation"
        },
        {
          "digest": "sha256:59c872ac4b19b5086a47ce95675f11df2925aa0c5d3dc0afda8df4599a8b0649",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:59c872ac4b19b5086a47ce95675f11df2925aa0c5d3dc0afda8df4599a8b0649",
          "name": "couchbase-operator"
        },
        {
          "digest": "sha256:187046a848f32233e7e92705c57fa864b1d373c2078a92b51c9706bec6e372e5",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:187046a848f32233e7e92705c57fa864b1d373c2078a92b51c9706bec6e372e5",
          "name": "couchbase_server"
        },
        {
          "digest": "sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "name": "couchbase_backup"
        },
        {
          "digest": "sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "name": "couchbase_metrics"
        },
        {
          "digest": "sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "name": "exporter-b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784-annotation"
        },
        {
          "digest": "sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "name": "operator-backup-c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76-annotation"
        },
        {
          "digest": "sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
          "name": "server-c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.2.0-1",
      "version_original": "2.2.0-1"
    },
    {
      "_id": "60e8c9826814ca1184699835",
      "alm_examples": [
        {
          "api_version": "aps.appranix.com/v1",
          "kind": "BackupStorageLocation",
          "metadata": {
            "labels": {
              "component": "appranix"
            },
            "name": "default",
            "namespace": "appranix"
          },
          "spec": {
            "objectStorage": {
              "bucket": "aps-bucket-store"
            },
            "provider": "gcp"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/appranix/apx-operator-bundle@sha256:126965743834b9d3fa15f354f41fe47618cea51c6f2ab88d3401b62b0362b1b6",
      "bundle_path_digest": "sha256:126965743834b9d3fa15f354f41fe47618cea51c6f2ab88d3401b62b0362b1b6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-07-09T22:11:14.157000+00:00",
      "csv_description": "## About this Operator\n\nAppranix helps you to securely backup and restore, perform a disaster\nrecovery and migrate OpenShift cluster resources and persistent\nvolumes.\n\nThe operator works with Appranix to:\n\n- Install and initiate Appranix controller on your cluster\n\n- Take backups of your cluster and restore it in case of loss.\n\n- Migrate cluster resources to other clusters.\n\n- Replicate your production cluster to development and testing clusters.\n\n## Prerequisites\n\n- A storage bucket in GCP or AWS & credentials to access it\n- Appranix token generated for your cluster obtained from the Appranix console\n- A Configmap and Secret in your cluster for the bucket config and credentials\n\n#### Step 1: Creating a storage bucket\n\nNote: Currently only Google Storage bucket is supported, support for AWS S3 Bucket will be available in a future release.\n\n- You can create a bucket through the GCP console or by running the following command in [Google Cloud Shell](https://cloud.google.com/shell/)\n\n```shell\nAX_APS_BUCKET_NAME=<bucket_name>\ngsutil mb -b on gs://$AX_APS_BUCKET_NAME/\ngcloud iam service-accounts create appranix --display-name \"Appranix service account\"\nAX_SERVICE_ACCOUNT_EMAIL=$(gcloud iam service-accounts list --filter=\"displayName:Appranix service account\" --format 'value(email)')\ngsutil iam ch serviceAccount:$AX_SERVICE_ACCOUNT_EMAIL:objectAdmin gs://${AX_APS_BUCKET_NAME}\ngcloud iam service-accounts keys create ax_service_account.json --iam-account $AX_SERVICE_ACCOUNT_EMAIL\n```\n\nNote: You will require the ```ax_service_account.json``` created here in Step 3.\n\n\n#### Step 2: Obtaining the Appranix token for the cluster\n\n- Log in to your Appranix console and create a cluster connection. Upon connection creation copy the token generated for that cluster.\n\n#### Step 3: Creating the Configmap and Secret in the cluster\n\nA Configmap and Secret which contains the credetianls and bucket configuration has to be created before instaling the operator. It can be done by running the following command against your cluster.\n\nNote: Replace **token** wih the value obtained in Step 2.\n\n\n```shell\nAX_TOKEN=<token>\nAX_SERVICE_ACCOUNT=$(cat ax_service_account.json | base64 -w 0)\ncurl -Ls -H \"Content-Type: application/json\" https://us-central1-appranix-dev-07.cloudfunctions.net/operator-setup  -d '{\"token\": \"'$AX_TOKEN'\", \"secret\": \"'$AX_SERVICE_ACCOUNT'\"}' | oc apply -f -\n```\n\n#### Step 4: Deploying Operator from OperatorHub\n\n- Login to the OpenShift console and switch to ```appranix``` project\n\n- Search for Appranix in OperatorHub and install it.\n\n- Once installed go to the Appranix operator under Installed Operators and click on the BackupStorageLocation tab.\n\n- Now click on **Create BackupStorageLocation** and enter the bucket name under **Objectstorage** and click **Create**.\n\n- You can verify if the insallation is successful by checking the status in the Appranix console.",
      "csv_display_name": "Appranix APS Operator",
      "csv_metadata_description": "The Appranix operator enables you to back up and restore your OpenShift cluster resources and persistent volumes.",
      "csv_name": "appranix-operator.v2.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:16:20.139000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "appranix-cps",
      "provided_apis": [
        {
          "group": "aps.appranix.com",
          "kind": "BackupStorageLocation",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b2015405734f4949d0a8dedf5701f0398ff5645dfe4b461a312f3b96b2659a08",
          "image": "registry.connect.redhat.com/appranix/apx-operator@sha256:b2015405734f4949d0a8dedf5701f0398ff5645dfe4b461a312f3b96b2659a08",
          "name": "apx-operator-b2015405734f4949d0a8dedf5701f0398ff5645dfe4b461a312f3b96b2659a08-annotation"
        },
        {
          "digest": "sha256:b2015405734f4949d0a8dedf5701f0398ff5645dfe4b461a312f3b96b2659a08",
          "image": "registry.connect.redhat.com/appranix/apx-operator@sha256:b2015405734f4949d0a8dedf5701f0398ff5645dfe4b461a312f3b96b2659a08",
          "name": "manager"
        },
        {
          "digest": "sha256:78d3471a6152df1cb066a82f93904110cb80a18f7e576edb3cd3fd180161bab4",
          "image": "registry.connect.redhat.com/appranix/apx-controller@sha256:78d3471a6152df1cb066a82f93904110cb80a18f7e576edb3cd3fd180161bab4",
          "name": "controller"
        },
        {
          "digest": "sha256:46ca904bb0c9b3f4628011b610de3dce2ff9abae52294c111e953dc7e6140cd4",
          "image": "registry.connect.redhat.com/appranix/apx-manager@sha256:46ca904bb0c9b3f4628011b610de3dce2ff9abae52294c111e953dc7e6140cd4",
          "name": "agent"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.5.0",
      "version_original": "2.5.0"
    },
    {
      "_id": "60e8c9f78ce8053fa514bdd9",
      "alm_examples": [
        {
          "api_version": "aps.appranix.com/v1",
          "kind": "BackupStorageLocation",
          "metadata": {
            "labels": {
              "component": "appranix"
            },
            "name": "default",
            "namespace": "appranix"
          },
          "spec": {
            "objectStorage": {
              "bucket": "aps-bucket-store"
            },
            "provider": "gcp"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/appranix/apx-operator-bundle@sha256:126965743834b9d3fa15f354f41fe47618cea51c6f2ab88d3401b62b0362b1b6",
      "bundle_path_digest": "sha256:126965743834b9d3fa15f354f41fe47618cea51c6f2ab88d3401b62b0362b1b6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-07-09T22:13:11.427000+00:00",
      "csv_description": "## About this Operator\n\nAppranix helps you to securely backup and restore, perform a disaster\nrecovery and migrate OpenShift cluster resources and persistent\nvolumes.\n\nThe operator works with Appranix to:\n\n- Install and initiate Appranix controller on your cluster\n\n- Take backups of your cluster and restore it in case of loss.\n\n- Migrate cluster resources to other clusters.\n\n- Replicate your production cluster to development and testing clusters.\n\n## Prerequisites\n\n- A storage bucket in GCP or AWS & credentials to access it\n- Appranix token generated for your cluster obtained from the Appranix console\n- A Configmap and Secret in your cluster for the bucket config and credentials\n\n#### Step 1: Creating a storage bucket\n\nNote: Currently only Google Storage bucket is supported, support for AWS S3 Bucket will be available in a future release.\n\n- You can create a bucket through the GCP console or by running the following command in [Google Cloud Shell](https://cloud.google.com/shell/)\n\n```shell\nAX_APS_BUCKET_NAME=<bucket_name>\ngsutil mb -b on gs://$AX_APS_BUCKET_NAME/\ngcloud iam service-accounts create appranix --display-name \"Appranix service account\"\nAX_SERVICE_ACCOUNT_EMAIL=$(gcloud iam service-accounts list --filter=\"displayName:Appranix service account\" --format 'value(email)')\ngsutil iam ch serviceAccount:$AX_SERVICE_ACCOUNT_EMAIL:objectAdmin gs://${AX_APS_BUCKET_NAME}\ngcloud iam service-accounts keys create ax_service_account.json --iam-account $AX_SERVICE_ACCOUNT_EMAIL\n```\n\nNote: You will require the ```ax_service_account.json``` created here in Step 3.\n\n\n#### Step 2: Obtaining the Appranix token for the cluster\n\n- Log in to your Appranix console and create a cluster connection. Upon connection creation copy the token generated for that cluster.\n\n#### Step 3: Creating the Configmap and Secret in the cluster\n\nA Configmap and Secret which contains the credetianls and bucket configuration has to be created before instaling the operator. It can be done by running the following command against your cluster.\n\nNote: Replace **token** wih the value obtained in Step 2.\n\n\n```shell\nAX_TOKEN=<token>\nAX_SERVICE_ACCOUNT=$(cat ax_service_account.json | base64 -w 0)\ncurl -Ls -H \"Content-Type: application/json\" https://us-central1-appranix-dev-07.cloudfunctions.net/operator-setup  -d '{\"token\": \"'$AX_TOKEN'\", \"secret\": \"'$AX_SERVICE_ACCOUNT'\"}' | oc apply -f -\n```\n\n#### Step 4: Deploying Operator from OperatorHub\n\n- Login to the OpenShift console and switch to ```appranix``` project\n\n- Search for Appranix in OperatorHub and install it.\n\n- Once installed go to the Appranix operator under Installed Operators and click on the BackupStorageLocation tab.\n\n- Now click on **Create BackupStorageLocation** and enter the bucket name under **Objectstorage** and click **Create**.\n\n- You can verify if the insallation is successful by checking the status in the Appranix console.",
      "csv_display_name": "Appranix APS Operator",
      "csv_metadata_description": "The Appranix operator enables you to back up and restore your OpenShift cluster resources and persistent volumes.",
      "csv_name": "appranix-operator.v2.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:02:49.983000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "appranix-cps",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b2015405734f4949d0a8dedf5701f0398ff5645dfe4b461a312f3b96b2659a08",
          "image": "registry.connect.redhat.com/appranix/apx-operator@sha256:b2015405734f4949d0a8dedf5701f0398ff5645dfe4b461a312f3b96b2659a08",
          "name": "apx-operator-b2015405734f4949d0a8dedf5701f0398ff5645dfe4b461a312f3b96b2659a08-annotation"
        },
        {
          "digest": "sha256:b2015405734f4949d0a8dedf5701f0398ff5645dfe4b461a312f3b96b2659a08",
          "image": "registry.connect.redhat.com/appranix/apx-operator@sha256:b2015405734f4949d0a8dedf5701f0398ff5645dfe4b461a312f3b96b2659a08",
          "name": "manager"
        },
        {
          "digest": "sha256:78d3471a6152df1cb066a82f93904110cb80a18f7e576edb3cd3fd180161bab4",
          "image": "registry.connect.redhat.com/appranix/apx-controller@sha256:78d3471a6152df1cb066a82f93904110cb80a18f7e576edb3cd3fd180161bab4",
          "name": "controller"
        },
        {
          "digest": "sha256:46ca904bb0c9b3f4628011b610de3dce2ff9abae52294c111e953dc7e6140cd4",
          "image": "registry.connect.redhat.com/appranix/apx-manager@sha256:46ca904bb0c9b3f4628011b610de3dce2ff9abae52294c111e953dc7e6140cd4",
          "name": "agent"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2.5.0",
      "version_original": "2.5.0"
    },
    {
      "_id": "60ea04a3ba43af88444a400a",
      "alm_examples": [
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AirgappedDeployment",
          "metadata": {
            "name": "airgappeddeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AnalyticsProxy",
          "metadata": {
            "name": "analyticsproxy"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "DeleteCluster",
          "metadata": {
            "name": "deletecluster"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "FullDeployment",
          "metadata": {
            "name": "fulldeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "GenerateKey",
          "metadata": {
            "name": "bas-api-key"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "StoreForwardMetric",
          "metadata": {
            "name": "storeforwardmetric"
          },
          "spec": {
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "Dashboard",
          "metadata": {
            "name": "dashboard"
          },
          "spec": {
            "enable_test_api": true,
            "image_pull_secret": "bas-images-pull-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator-bundle@sha256:c73665a97beb2f5def36868ecd42cf870d7a92a0f2f728099ec05dd3abf584d8",
      "bundle_path_digest": "sha256:c73665a97beb2f5def36868ecd42cf870d7a92a0f2f728099ec05dd3abf584d8",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-07-10T20:35:47.348000+00:00",
      "csv_description": "Behavior Analytics Services Operator is a service that collects, transforms and transmits product usage data.\nThe Operator supports deployments using-\nA. Dashboard\nB. Openshift portal or CLI\n\n**A. Dashboard**\n----\nWhen the Operator is installed, the Dashboard is installed too. Goto the Dashboard Custom Resource to get the URL to the Dashboard.\n\n\n**B. Openshift portal or CLI**\n----\n----\nFor manual installation using Openshift portal or CLI, follow the steps below\n\n\n**Pre-requisites**\n----\nStep 1: Create a new Project\n```sh\noc new-project <project-name>\n```\n\nStep 2: Create a secret named \"database-credentials\" for PostgreSQL DB\n```sh\n oc create secret generic database-credentials --from-literal=db_username=<DB Username> --from-literal=db_password=<DB Password> -n <project-name>\n```\n\nStep 3: [Optional] If the images require a secret to pull the container images, create a secret of type dockerconfigjson. Pass this secret name in the CR spec image\\_pull\\_secret\n```sh\noc create secret generic bas-images-pull-secret --from-file=.dockerconfigjson=<path/to/.docker/config.json>  --type=kubernetes.io/dockerconfigjson\n```\n\nStep 4: Create a secret named \"mtls-proxy-secret\" which has the client key and certificate to connect to IBM Proxy service. If you don't have certificates then refer link https://developers.cloudflare.com/access/service-auth/mtls-testing#generating-the-root-ca to create root and client certificates. Please ensure to share root certificate with edge@us.ibm.com to allow access to IBM proxy service using client certificate.\n```sh\noc create secret tls mtls-proxy-secret --key client-key.pem --cert client.pem\n```\n\n**Installing the Behavior Analytics Services**\n----\n\nSelect any one of the deployments to setup the Behavior Analytics Services\n1. Full Deployment\n2. Analytics Proxy Deployment\n3. Store and Forward metrics Deployment\n4. Airgapped Analytics Proxy Deployment\n\n| Spec                                                      | Description                                                      | Default Value          |\n| --------------------------------------------------------- | ------------------------------------------------------------ | ---------------------- |\n| `ibmproxyurl`                                               | URL of IBM Proxy Service                                     | `https://iaps.ibm.com`   |\n| `postgres.storage_class`                                    | Storage class of type ReadWriteOnce                          | Required user input        |\n| `postgres.size`                                             | Size (in G) of the storage to be attached to Database        | `10G`                    |\n| `kafka.storage_class`                                       | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.storage_size`                                        | Size (in G) of the storage to be attached to Kafka  | `5G`                     |\n| `kafka.zookeeper_storage_class`                                 | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.zookeeper_storage_size`                                 | Size (in G) of the storage to be attached to Zookeeper | `5G`                     |\n| `airgapped.enabled`                                         | Set value to \"true\" if airgapped setup is to be enabled otherwise keep the default value \"false\" | `false`                  |\n| `airgapped.backup_retention_period`   | Number of days to keep the backup files in the storage       | `7`                     |\n| `airgapped.backup_deletion_frequency` | Frequency of job to delete files from the storage. It accepts values in Cron format (https://en.wikipedia.org/wiki/Cron) | `@daily`                 |\n| `event_scheduler_frequency`                               | Frequency at which events will be forwarded to proxy in Cron format. In case if internet connection available on the cluster only during a certain time frame, specify time in UTC equivalent Cron format. | `@hourly`                |\n| `prometheus_scheduler_frequency`                          | Frequency in Cronjob format to pull metrics from Prometheus  | `@daily`                |\n| `image_pull_secret`                                       | Secret to pull container images from registry                | `bas-images-pull-secret` |\n| `db_archive.frequency`                                    | Frequency in Cronjob format to run archive job                                                           | `@monthly`             |\n| `db_archive.retention_age`                                | Number of months to retain the data in Database              | `6`                    |\n| `db_archive.persistent_storage.storage_class`             |Storage class of type ReadWriteMany         | Required user input    |\n| `db_archive.persistent_storage.storage_size`              | Size (in G) of the storage to be attached for saving airgapped files | `10G`                  |\n| `prometheus_metrics`                                      | Array of metrics information to be send to destination at desired frequency | []\n| `env_type`              | Type of environment. Can be **prod** (HA) or **lite** (non HA)   | `lite`                  |\n| `allowed_domains`                                         | Comma separated values of domains allowed by BAS. By default all domains are allowed | '*'\n\n\n**Generating the API Key**\n----\nOnce the deployment is complete, to use the Behavior Analytics Services Endpoints, generate an API key using the CR GenerateKey. This API key to be used to authenticate Behavior Analytics Services Endpoints.\n\nNote- Key can be retrieved from the secret with same name used while creating Generate Key CR's instance.\nOnce you get key from the secret, decode it using below command:\n```sh\necho -n <secret key> | base64 -d\n```\n\n**Deleting the API Key**\n----\nTo revoke the Key, delete the corresponding GenerateKey instance.\n\n**Using Behavior Analytics Services Endpoints**\n---\nFor all BAS APIs, use the Generated API Key for Authentication. Pass it as the Header- X-API-KEY and the key while using the APIs.",
      "csv_display_name": "Behavior Analytics Services",
      "csv_metadata_description": "Behavior Analytics Services is a service that collects, transforms and transmits product usage data.",
      "csv_name": "behavior-analytics-services-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:13:57.102000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "behavior-analytics-services-operator-certified",
      "provided_apis": [
        {
          "group": "bas.ibm.com",
          "kind": "AnalyticsProxy",
          "plural": "analyticsproxies",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "Dashboard",
          "plural": "dashboards",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "DeleteCluster",
          "plural": "deleteclusters",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "FullDeployment",
          "plural": "fulldeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "GenerateKey",
          "plural": "generatekeys",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "StoreForwardMetric",
          "plural": "storeforwardmetrics",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AirgappedDeployment",
          "plural": "airgappeddeployments",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8d56736a7de882786e0568659ffbf18879f3dc3125aee141072e9dfcd6e9579a",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8d56736a7de882786e0568659ffbf18879f3dc3125aee141072e9dfcd6e9579a",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:52e3c8d530e2a0e3d7c37206579037e8354cf76bb880605a09d623a5754c0bca",
          "image": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator@sha256:52e3c8d530e2a0e3d7c37206579037e8354cf76bb880605a09d623a5754c0bca",
          "name": "behavior-analytics-services-operator"
        },
        {
          "digest": "sha256:5bc5f622a05b8993785c996890b7e8b19ca680788e525ae9e7833e365c1774f9",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:5bc5f622a05b8993785c996890b7e8b19ca680788e525ae9e7833e365c1774f9",
          "name": "dashboardinstaller"
        },
        {
          "digest": "sha256:13902a13f7bca0d346e1af4719ac0be4b92d8d283c2c35068ecc1f1dedd676ab",
          "image": "registry.connect.redhat.com/ibm-edge/event-api@sha256:13902a13f7bca0d346e1af4719ac0be4b92d8d283c2c35068ecc1f1dedd676ab",
          "name": "event_api"
        },
        {
          "digest": "sha256:e5dc124a4e9c9b1a85fc421c557bdd071b25330a093c61ba7430d69d477fcd4b",
          "image": "registry.connect.redhat.com/ibm-edge/store-api@sha256:e5dc124a4e9c9b1a85fc421c557bdd071b25330a093c61ba7430d69d477fcd4b",
          "name": "store_api"
        },
        {
          "digest": "sha256:819ffaf71e72b744cd9d8ce8fb40a60f1a2ada42c27bdfd160e6678b4538c38b",
          "image": "registry.connect.redhat.com/ibm-edge/event-reader@sha256:819ffaf71e72b744cd9d8ce8fb40a60f1a2ada42c27bdfd160e6678b4538c38b",
          "name": "reader"
        },
        {
          "digest": "sha256:93dd46f5a4e7cf5ff2b9c440fb75147bd7dffb426ba261355f39adcf91d86117",
          "image": "registry.connect.redhat.com/ibm-edge/event-scheduler@sha256:93dd46f5a4e7cf5ff2b9c440fb75147bd7dffb426ba261355f39adcf91d86117",
          "name": "event_scheduler"
        },
        {
          "digest": "sha256:b7feb7e1ab0faa1fe2ec0fc0ce7d823e5476e9f5c13d7ed6a4c1eff013bf07bc",
          "image": "registry.connect.redhat.com/ibm-edge/prometheus-scheduler@sha256:b7feb7e1ab0faa1fe2ec0fc0ce7d823e5476e9f5c13d7ed6a4c1eff013bf07bc",
          "name": "prometheus_scheduler"
        },
        {
          "digest": "sha256:5af6f4603b6c5a173f75a408aabf806e660ce60ced5d3dbe76a0ccfcb01c78da",
          "image": "registry.connect.redhat.com/ibm-edge/pgo-client@sha256:5af6f4603b6c5a173f75a408aabf806e660ce60ced5d3dbe76a0ccfcb01c78da",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:865d9288eb8a2ab50c1e75bf7849b0a8e4b33d0f72a984eed22639a20aeb8c7d",
          "image": "registry.connect.redhat.com/ibm-edge/reverse-proxy@sha256:865d9288eb8a2ab50c1e75bf7849b0a8e4b33d0f72a984eed22639a20aeb8c7d",
          "name": "nginx"
        },
        {
          "digest": "sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "image": "registry.redhat.io/openshift4/ose-grafana@sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "name": "grafana"
        },
        {
          "digest": "sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "image": "registry.redhat.io/openshift3/ose-kube-state-metrics@sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "name": "ksm"
        },
        {
          "digest": "sha256:e42df9b4eac95f43d4abafa1cdfe4ea471941cb884d454a58533f3650d667064",
          "image": "registry.connect.redhat.com/ibm-edge/growth-stack-base@sha256:e42df9b4eac95f43d4abafa1cdfe4ea471941cb884d454a58533f3650d667064",
          "name": "init_container"
        },
        {
          "digest": "sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "image": "registry.access.redhat.com/ubi8/ubi@sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "name": "ubi"
        },
        {
          "digest": "sha256:a05b0b82ca02f4cf731f0d18c1196084d8f3c1d4c78e5d4e6a2b593efe274bc7",
          "image": "registry.connect.redhat.com/ibm-edge/airgap-download-ui@sha256:a05b0b82ca02f4cf731f0d18c1196084d8f3c1d4c78e5d4e6a2b593efe274bc7",
          "name": "download_ui"
        },
        {
          "digest": "sha256:0151e5dbe0a25e30a0f22b788329f35a918ab8649c59ebd3fa1e0d1dd0c3bb3f",
          "image": "registry.connect.redhat.com/ibm-edge/bas-operator-dashboard@sha256:0151e5dbe0a25e30a0f22b788329f35a918ab8649c59ebd3fa1e0d1dd0c3bb3f",
          "name": "dashboard_ui"
        },
        {
          "digest": "sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "image": "registry.connect.redhat.com/crunchydata/pgo-deployer@sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "name": "pgo_deployer"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "60ea04fc8ce8053fa514bdde",
      "alm_examples": [
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCluster",
          "metadata": {
            "name": "cb-example"
          },
          "spec": {
            "backup": {
              "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              },
              "serviceAccountName": "couchbase-backup"
            },
            "buckets": {
              "managed": true,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            },
            "cluster": {
              "analyticsServiceMemoryQuota": "1Gi",
              "autoCompaction": {
                "databaseFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                },
                "parallelCompaction": false,
                "timeWindow": {
                  "abortCompactionOutsideWindow": true,
                  "end": "06:00",
                  "start": "02:00"
                },
                "tombstonePurgeInterval": "72h",
                "viewFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                }
              },
              "autoFailoverMaxCount": 3,
              "autoFailoverOnDataDiskIssues": true,
              "autoFailoverOnDataDiskIssuesTimePeriod": "120s",
              "autoFailoverServerGroup": false,
              "autoFailoverTimeout": "120s",
              "clusterName": "cb-example",
              "dataServiceMemoryQuota": "256Mi",
              "eventingServiceMemoryQuota": "256Mi",
              "indexServiceMemoryQuota": "256Mi",
              "indexStorageSetting": "memory_optimized",
              "searchServiceMemoryQuota": "256Mi"
            },
            "enablePreviewScaling": false,
            "hibernate": false,
            "hibernationStrategy": "Immediate",
            "image": "registry.connect.redhat.com/couchbase/server@sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
            "logRetentionCount": 20,
            "logRetentionTime": "604800s",
            "monitoring": {
              "prometheus": {
                "enabled": false,
                "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784"
              }
            },
            "networking": {
              "adminConsoleServiceType": "NodePort",
              "adminConsoleServices": [
                "data"
              ],
              "exposeAdminConsole": true,
              "exposedFeatureServiceType": "NodePort",
              "exposedFeatures": [
                "xdcr"
              ]
            },
            "recoveryPolicy": "PrioritizeDataIntegrity",
            "security": {
              "adminSecret": "cb-example-auth",
              "rbac": {
                "managed": true,
                "selector": {
                  "matchLabels": {
                    "cluster": "cb-example"
                  }
                }
              }
            },
            "servers": [
              {
                "name": "all_services",
                "services": [
                  "data",
                  "index",
                  "query",
                  "search",
                  "eventing",
                  "analytics"
                ],
                "size": 3
              }
            ],
            "upgradeStrategy": "RollingUpgrade",
            "xdcr": {
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "default"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "enableIndexReplica": true,
            "evictionPolicy": "valueOnly",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseEphemeralBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "ephemeral-bucket"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "evictionPolicy": "noEviction",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseMemcachedBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "memcached-bucket"
          },
          "spec": {
            "enableFlush": false,
            "memoryQuota": "100Mi"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseUser",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-user"
          },
          "spec": {
            "authDomain": "local",
            "authSecret": "cb-example-auth",
            "fullName": "My User"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseGroup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-group"
          },
          "spec": {
            "roles": [
              {
                "bucket": "default",
                "name": "bucket_admin"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseRoleBinding",
          "metadata": {
            "name": "my-role-binding"
          },
          "spec": {
            "roleRef": {
              "kind": "CouchbaseGroup",
              "name": "my-group"
            },
            "subjects": [
              {
                "kind": "CouchbaseUser",
                "name": "my-user"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseReplication",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-replication"
          },
          "spec": {
            "bucket": "default",
            "compressionType": "Snappy",
            "filterExpression": "",
            "paused": false,
            "remoteBucket": "default"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-backup"
          },
          "spec": {
            "backOffLimit": 2,
            "backupRetention": "24h",
            "failedJobsHistoryLimit": 3,
            "full": {
              "schedule": "0 3 * * 6"
            },
            "incremental": {
              "schedule": "0 3 * * 1-6"
            },
            "logRetention": "24h",
            "size": "5Gi",
            "strategy": "full_incremental",
            "successfulJobsHistoryLimit": 1
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackupRestore",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-restore"
          },
          "spec": {
            "backOffLimit": 2,
            "backup": "cb-backup",
            "end": {
              "int": 1
            },
            "logRetention": "24h",
            "repo": "cb-example-2020-10-29T19_00_03",
            "start": {
              "int": 1
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseAutoscaler",
          "metadata": {
            "name": "do.not.create.internal.only"
          },
          "spec": {
            "servers": "internal",
            "size": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:69c9d29a8a5ba4eac037051a256a458d5772fca8b813c764ddbe02f80d89b76f",
      "bundle_path_digest": "sha256:69c9d29a8a5ba4eac037051a256a458d5772fca8b813c764ddbe02f80d89b76f",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-07-10T20:37:16.211000+00:00",
      "csv_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments on OpenShift. By installing this integration you will be able to deply Couchbase Server clusters with a single command.\n\n## Supported Features\n\n* **Automated cluster provisioning** - Deploying a Couchbase Cluster has never been easier. Fill out a Couchbase specific configuration and let the Couchbase Operator take care of provisioning nodes and setting up cluster to your exact specification.\n\n* **On-demand scalability** - Automatically scale your cluster up or down by changing a simple configuration parameter and let the Couchbase Operator handle provisioning of new nodes and joining them into the cluster.\n\n* **Auto-recovery** - Detect Couchbase node failures, rebalance out bad nodes, and bring the cluster back up to the desired capacity. Auto-recovery is completely automated so you can sleep easy through the night knowing that the Couchbase Operator will handle any failures.\n\n* **Geo-distribution** - Replicate your data between datacenters to move data closer to the users who consume it and protect against disaster scenarios where an entire datacenter becomes unavailable.\n\n* **Persistent storage** - Define persistent network-attached storage for each node in your cluster to allow pods to be recovered even if the node they were running on is no longer available.\n\n* **Rack/zone awareness** - Tell the Couchbase Operator about availability zones in your datacenter and let the operator take care of ensuring that nodes in your cluster are deployed equally across each zone.\n\n* **Supportability** - When things go wrong, use the cbopinfo tool provided with the Couchbase Operator to collect relevant data about your Couchbase deployment so that you can quickly address issues.\n\n* **Centralized configuration management** - Manage your configuration centrally with OpenShift. Updates to the configuration are watched by the Couchbase Operator and actions are taken to make the target cluster match the desired configuration.\n## Required Parameters\n* `authSecret` - provide the name of a secret that contains two keys for the `username` and `password` of the super user ([documentation](https://docs.couchbase.com/operator/1.2/couchbase-cluster-config.html))\n\n## About Couchbase Server\n\nBuilt on the most powerful NoSQL technology, Couchbase Server delivers unparalleled performance at scale, in any cloud. With features like memory-first architecture, geo-distributed deployments, and workload isolation, Couchbase Server excels at supporting mission-critical applications at scale while maintaining submillisecond latencies and 99.999% availability. Plus, with the most comprehensive SQL-compatible query language (N1QL), migrating from RDBMS to Couchbase Server is easy with ANSI joins.\n",
      "csv_display_name": "Couchbase Operator",
      "csv_metadata_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments",
      "csv_name": "couchbase-operator.v2.2.0-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:16:36.359000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "plural": "couchbasereplications",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseAutoscaler",
          "plural": "couchbaseautoscalers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "plural": "couchbasebackuprestores",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "plural": "couchbaseephemeralbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "plural": "couchbasememcachedbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v2"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:59c872ac4b19b5086a47ce95675f11df2925aa0c5d3dc0afda8df4599a8b0649",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:59c872ac4b19b5086a47ce95675f11df2925aa0c5d3dc0afda8df4599a8b0649",
          "name": "operator-59c872ac4b19b5086a47ce95675f11df2925aa0c5d3dc0afda8df4599a8b0649-annotation"
        },
        {
          "digest": "sha256:59c872ac4b19b5086a47ce95675f11df2925aa0c5d3dc0afda8df4599a8b0649",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:59c872ac4b19b5086a47ce95675f11df2925aa0c5d3dc0afda8df4599a8b0649",
          "name": "couchbase-operator"
        },
        {
          "digest": "sha256:187046a848f32233e7e92705c57fa864b1d373c2078a92b51c9706bec6e372e5",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:187046a848f32233e7e92705c57fa864b1d373c2078a92b51c9706bec6e372e5",
          "name": "couchbase_server"
        },
        {
          "digest": "sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "name": "couchbase_backup"
        },
        {
          "digest": "sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "name": "couchbase_metrics"
        },
        {
          "digest": "sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "name": "exporter-b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784-annotation"
        },
        {
          "digest": "sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "name": "operator-backup-c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76-annotation"
        },
        {
          "digest": "sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
          "name": "server-c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.2.0-1",
      "version_original": "2.2.0-1"
    },
    {
      "_id": "60ea054cba43af88444a400b",
      "alm_examples": [
        {
          "api_version": "aps.appranix.com/v1",
          "kind": "BackupStorageLocation",
          "metadata": {
            "labels": {
              "component": "appranix"
            },
            "name": "default",
            "namespace": "appranix"
          },
          "spec": {
            "objectStorage": {
              "bucket": "aps-bucket-store"
            },
            "provider": "gcp"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/appranix/apx-operator-bundle@sha256:126965743834b9d3fa15f354f41fe47618cea51c6f2ab88d3401b62b0362b1b6",
      "bundle_path_digest": "sha256:126965743834b9d3fa15f354f41fe47618cea51c6f2ab88d3401b62b0362b1b6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-07-10T20:38:36.612000+00:00",
      "csv_description": "## About this Operator\n\nAppranix helps you to securely backup and restore, perform a disaster\nrecovery and migrate OpenShift cluster resources and persistent\nvolumes.\n\nThe operator works with Appranix to:\n\n- Install and initiate Appranix controller on your cluster\n\n- Take backups of your cluster and restore it in case of loss.\n\n- Migrate cluster resources to other clusters.\n\n- Replicate your production cluster to development and testing clusters.\n\n## Prerequisites\n\n- A storage bucket in GCP or AWS & credentials to access it\n- Appranix token generated for your cluster obtained from the Appranix console\n- A Configmap and Secret in your cluster for the bucket config and credentials\n\n#### Step 1: Creating a storage bucket\n\nNote: Currently only Google Storage bucket is supported, support for AWS S3 Bucket will be available in a future release.\n\n- You can create a bucket through the GCP console or by running the following command in [Google Cloud Shell](https://cloud.google.com/shell/)\n\n```shell\nAX_APS_BUCKET_NAME=<bucket_name>\ngsutil mb -b on gs://$AX_APS_BUCKET_NAME/\ngcloud iam service-accounts create appranix --display-name \"Appranix service account\"\nAX_SERVICE_ACCOUNT_EMAIL=$(gcloud iam service-accounts list --filter=\"displayName:Appranix service account\" --format 'value(email)')\ngsutil iam ch serviceAccount:$AX_SERVICE_ACCOUNT_EMAIL:objectAdmin gs://${AX_APS_BUCKET_NAME}\ngcloud iam service-accounts keys create ax_service_account.json --iam-account $AX_SERVICE_ACCOUNT_EMAIL\n```\n\nNote: You will require the ```ax_service_account.json``` created here in Step 3.\n\n\n#### Step 2: Obtaining the Appranix token for the cluster\n\n- Log in to your Appranix console and create a cluster connection. Upon connection creation copy the token generated for that cluster.\n\n#### Step 3: Creating the Configmap and Secret in the cluster\n\nA Configmap and Secret which contains the credetianls and bucket configuration has to be created before instaling the operator. It can be done by running the following command against your cluster.\n\nNote: Replace **token** wih the value obtained in Step 2.\n\n\n```shell\nAX_TOKEN=<token>\nAX_SERVICE_ACCOUNT=$(cat ax_service_account.json | base64 -w 0)\ncurl -Ls -H \"Content-Type: application/json\" https://us-central1-appranix-dev-07.cloudfunctions.net/operator-setup  -d '{\"token\": \"'$AX_TOKEN'\", \"secret\": \"'$AX_SERVICE_ACCOUNT'\"}' | oc apply -f -\n```\n\n#### Step 4: Deploying Operator from OperatorHub\n\n- Login to the OpenShift console and switch to ```appranix``` project\n\n- Search for Appranix in OperatorHub and install it.\n\n- Once installed go to the Appranix operator under Installed Operators and click on the BackupStorageLocation tab.\n\n- Now click on **Create BackupStorageLocation** and enter the bucket name under **Objectstorage** and click **Create**.\n\n- You can verify if the insallation is successful by checking the status in the Appranix console.",
      "csv_display_name": "Appranix APS Operator",
      "csv_metadata_description": "The Appranix operator enables you to back up and restore your OpenShift cluster resources and persistent volumes.",
      "csv_name": "appranix-operator.v2.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:15:08.139000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "appranix-cps",
      "provided_apis": [
        {
          "group": "aps.appranix.com",
          "kind": "BackupStorageLocation",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b2015405734f4949d0a8dedf5701f0398ff5645dfe4b461a312f3b96b2659a08",
          "image": "registry.connect.redhat.com/appranix/apx-operator@sha256:b2015405734f4949d0a8dedf5701f0398ff5645dfe4b461a312f3b96b2659a08",
          "name": "apx-operator-b2015405734f4949d0a8dedf5701f0398ff5645dfe4b461a312f3b96b2659a08-annotation"
        },
        {
          "digest": "sha256:b2015405734f4949d0a8dedf5701f0398ff5645dfe4b461a312f3b96b2659a08",
          "image": "registry.connect.redhat.com/appranix/apx-operator@sha256:b2015405734f4949d0a8dedf5701f0398ff5645dfe4b461a312f3b96b2659a08",
          "name": "manager"
        },
        {
          "digest": "sha256:78d3471a6152df1cb066a82f93904110cb80a18f7e576edb3cd3fd180161bab4",
          "image": "registry.connect.redhat.com/appranix/apx-controller@sha256:78d3471a6152df1cb066a82f93904110cb80a18f7e576edb3cd3fd180161bab4",
          "name": "controller"
        },
        {
          "digest": "sha256:46ca904bb0c9b3f4628011b610de3dce2ff9abae52294c111e953dc7e6140cd4",
          "image": "registry.connect.redhat.com/appranix/apx-manager@sha256:46ca904bb0c9b3f4628011b610de3dce2ff9abae52294c111e953dc7e6140cd4",
          "name": "agent"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.5.0",
      "version_original": "2.5.0"
    },
    {
      "_id": "60eaad45ba43af88444a4030",
      "alm_examples": [
        {
          "api_version": "csi.ibm.com/v1",
          "kind": "IBMBlockCSI",
          "metadata": {
            "name": "ibm-block-csi"
          },
          "spec": {
            "controller": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64",
                              "s390x"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-controller",
              "tag": "1.5.0"
            },
            "node": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64",
                              "s390x"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-node",
              "tag": "1.5.0"
            },
            "sidecars": [
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-node-driver-registrar",
                "repository": "k8s.gcr.io/sig-storage/csi-node-driver-registrar",
                "tag": "v2.0.1"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-provisioner",
                "repository": "k8s.gcr.io/sig-storage/csi-provisioner",
                "tag": "v2.0.4"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-attacher",
                "repository": "k8s.gcr.io/sig-storage/csi-attacher",
                "tag": "v3.0.2"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-snapshotter",
                "repository": "k8s.gcr.io/sig-storage/csi-snapshotter",
                "tag": "v3.0.2"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-resizer",
                "repository": "k8s.gcr.io/sig-storage/csi-resizer",
                "tag": "v1.0.1"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "livenessprobe",
                "repository": "k8s.gcr.io/sig-storage/livenessprobe",
                "tag": "v2.1.0"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/ibm-block-csi-operator-bundle@sha256:4e6b7b6006f6ad537b75fb681805003d4873230ef2706cab3333c4567502361c",
      "bundle_path_digest": "sha256:4e6b7b6006f6ad537b75fb681805003d4873230ef2706cab3333c4567502361c",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "maintenance-1.5",
      "creation_date": "2021-07-11T08:35:17.569000+00:00",
      "csv_description": "The Container Storage Interface (CSI) Driver for IBM block storage systems enables container orchestrators such as Kubernetes to manage the life cycle of persistent storage.\nThis is the official operator to deploy and manage IBM block storage CSI driver.\nSupported container platforms (and architectures):\n  - OpenShift v4.4 (x86, IBM Z, and IBM PowerPC)\n  - OpenShift v4.5 (x86, IBM Z, and IBM PowerPC)\n  - Kubernetes v1.18 (x86)\n  - Kubernetes v1.19 (x86)\nSupported IBM storage systems:\n  - IBM Spectrum Virtualize Family including IBM SAN Volume Controller (SVC) and IBM FlashSystem\u00ae family members built with IBM Spectrum\u00ae Virtualize (FlashSystem 5010, 5030, 5100, 7200, 9100, 9200, 9200R)\n  - IBM FlashSystem A9000 and A9000R\n  - IBM DS8000 Family\nSupported operating systems (and architectures):\n  - RHEL 7.x (x86)\n  - RHCOS (x86, IBM Z, and IBM PowerPC)\nFull documentation can be found on the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSRQ8T).\n## Prerequisites\n> **Note**: The operator can be installed directly from the RedHat OpenShift web console, through the OperatorHub. The prerequisites below also mentioned and can be viewed via OpenShift.\n### Preparing worker nodes\nPerform these steps for each worker node in Kubernetes cluster:\n#### 1. Perform this step to ensure iSCSI connectivity, when using RHEL OS.\nIf using RHCOS or if the packages are already installed, continue to the next step.\nRHEL 7.x:\n```bash\nyum -y install iscsi-initiator-utils   # Only if iSCSI connectivity is required\nyum -y install xfsprogs                # Only if XFS file system is required\n```\n#### 2. Configure Linux\u00ae multipath devices on the host.\n**Important:** Be sure to configure each worker with storage connectivity according to your storage system instructions.\nFor more information, find your storage system documentation on [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter).\n##### 2.1 Additional configuration steps for OpenShift\u00ae Container Platform users (RHEL and RHCOS). Other users can continue to step 3.\nThe following yaml file example is for both Fibre Channel and iSCSI configurations. To support iSCSI, uncomment the last two lines in the file:\n**Important:** The  `99-ibm-attach.yaml` configuration file overrides any files that already exist on your system. Only use this file if the files mentioned in the yaml below are not already created. If one or more have been created, edit this yaml file, as necessary.\nSave the `99-ibm-attach.yaml` file.\n```bash\napiVersion: machineconfiguration.openshift.io/v1\nkind: MachineConfig\nmetadata:\nlabels:\nmachineconfiguration.openshift.io/role: worker\nname: 99-ibm-attach\nspec:\nconfig:\nignition:\nversion: 2.2.0\nstorage:\nfiles:\n- path: /etc/multipath.conf\nmode: 384\nfilesystem: root\ncontents:\nsource: data:,defaults%20%7B%0A%20%20%20%20path_checker%20tur%0A%20%20%20%20path_selector\n%20%22round-robin%200%22%0A%20%20%20%20rr_weight%20uniform%0A%20%20%20%20prio%20const%0A\n%20%20%20%20rr_min_io_rq%201%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20polling_interval\n%2030%0A%20%20%20%20path_grouping_policy%20multibus%0A%20%20%20%20find_multipaths%20yes%0A\n%20%20%20%20no_path_retry%20fail%0A%20%20%20%20user_friendly_names%20yes%0A%20%20%20%20failback\n%20immediate%0A%20%20%20%20checker_timeout%2010%0A%20%20%20%20fast_io_fail_tmo%20off%0A%7D%0A%0Adevices\n%20%7B%0A%20%20%20%20device%20%7B%0A%20%20%20%20%20%20%20%20path_checker%20tur%0A\n%20%20%20%20%20%20%20%20product%20%22FlashSystem%22%0A%20%20%20%20%20%20%20%20vendor%20%22IBM%22%0A\n%20%20%20%20%20%20%20%20rr_weight%20uniform%0A%20%20%20%20%20%20%20%20rr_min_io_rq\n%204%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20path_grouping_policy\n%20multibus%0A%20%20%20%20%20%20%20%20path_selector%20%22round-robin%200%22%0A\n%20%20%20%20%20%20%20%20no_path_retry%20fail%0A%20%20%20%20%20%20%20%20failback%20immediate%0A\n%20%20%20%20%7D%0A%20%20%20%20device%20%7B%0A%20%20%20%20%20%20%20%20path_checker%20tur%0A\n%20%20%20%20%20%20%20%20product%20%22FlashSystem-9840%22%0A%20%20%20%20%20%20%20%20vendor%20%22IBM%22%0A\n%20%20%20%20%20%20%20%20fast_io_fail_tmo%20off%0A%20%20%20%20%20%20%20%20rr_weight%20uniform%0A\n%20%20%20%20%20%20%20%20rr_min_io_rq%201000%20%20%20%20%20%20%20%20%20%20%20%20%0A\n%20%20%20%20%20%20%20%20path_grouping_policy%20multibus%0A%20%20%20%20%20%20%20%20path_selector\n%20%22round-robin%200%22%0A%20%20%20%20%20%20%20%20no_path_retry%20fail%0A\n%20%20%20%20%20%20%20%20failback%20immediate%0A%20%20%20%20%7D%0A%20%20%20%20device%20%7B%0A\n%20%20%20%20%20%20%20%20vendor%20%22IBM%22%0A%20%20%20%20%20%20%20%20product%20%222145%22%0A\n%20%20%20%20%20%20%20%20path_checker%20tur%0A%20%20%20%20%20%20%20%20features%20%221%20queue_if_no_path\n%22%0A%20%20%20%20%20%20%20%20path_grouping_policy%20group_by_prio%0A\n%20%20%20%20%20%20%20%20path_selector%20%22service-time%200%22%20%23%20Used%20by%20Red%20Hat%207.x%0A\n%20%20%20%20%20%20%20%20prio%20alua%0A%20%20%20%20%20%20%20%20rr_min_io_rq%201%0A\n%20%20%20%20%20%20%20%20rr_weight%20uniform%20%0A%20%20%20%20%20%20%20%20no_path_retry%20%225%22%0A\n%20%20%20%20%20%20%20%20dev_loss_tmo%20120%0A%20%20%20%20%20%20%20%20failback%20immediate%0A%20%20%20%7D\n%0A%7D%0A\nverification: {}\n- path: /etc/udev/rules.d/99-ibm-2145.rules\nmode: 420\nfilesystem: root\ncontents:\nsource: data:,%23%20Set%20SCSI%20command%20timeout%20to%20120s%20%28default%20%3D%3D\n%2030%20or%2060%29%20for%20IBM%202145%20devices%0ASUBSYSTEM%3D%3D%22block%22%2C%20ACTION%3D%3D%22add\n%22%2C%20ENV%7BID_VENDOR%7D%3D%3D%22IBM%22%2CENV%7BID_MODEL%7D%3D%3D%222145%22%2C%20RUN%2B%3D%22/bin/sh\n%20-c%20%27echo%20120%20%3E/sys/block/%25k/device/timeout%27%22%0A\nverification: {}\nsystemd:\nunits:\n- name: multipathd.service\nenabled: true\n# Uncomment the following lines if this MachineConfig will be used with iSCSI connectivity\n#- name: iscsid.service\n#    enabled: true\n```\nApply the yaml file.\n```bash\noc apply -f 99-ibm-attach.yaml\n```\n#### 3. If needed, enable support for volume snapshots (FlashCopy\u00ae function) on your Kubernetes cluster.\nFor more information and instructions, see the Kubernetes blog post, [Kubernetes 1.17 Feature: Kubernetes Volume Snapshot Moves to Beta](https://kubernetes.io/blog/2019/12/09/kubernetes-1-17-feature-cis-volume-snapshot-beta/).\n#### 4. Configure storage system connectivity\n##### 4.1. Define the hostname of each Kubernetes node on the relevant storage systems with the valid WWPN(for Fibre Channel) or IQN(for iSCSI) of the node.\n##### 4.2. For Fibre Channel, configure the relevant zoning from the storage to the host.\n## Installation\n### Install the operator\n#### 1. Download the manifest from GitHub.\n```bash\ncurl https://raw.githubusercontent.com/IBM/ibm-block-csi-operator/master/deploy/installer/generated/ibm-block-csi-operator.yaml > ibm-block-csi-operator.yaml\n```\n#### 2. (Optional): If required, update the image fields in the ibm-block-csi-operator.yaml.\n#### 3. Create a namespace.\n```bash\n$ kubectl create ns <namespace>\n```\n#### 4. Install the operator, while using a user-defined namespace.\n```bash\n$ kubectl -n <namespace> apply -f ibm-block-csi-operator.yaml\n```\n### Verify the operator is running:\n```bash\n$ kubectl get pod -l app.kubernetes.io/name=ibm-block-csi-operator -n <namespace>\nNAME                                    READY   STATUS    RESTARTS   AGE\nibm-block-csi-operator-5bb7996b86-xntss 1/1     Running   0          10m\n```\n### Create an IBMBlockCSI custom resource\n#### 1. Download the manifest from GitHub.\n```bash\ncurl https://raw.githubusercontent.com/IBM/ibm-block-csi-operator/master/deploy/crds/csi.ibm.com_v1_ibmblockcsi_cr.yaml > csi.ibm.com_v1_ibmblockcsi_cr.yaml\n```\n#### 2. (Optional): If required, update the image fields in the csi.ibm.com_v1_ibmblockcsi_cr.yaml.\n#### 3. Install the csi.ibm.com_v1_ibmblockcsi_cr.yaml.\n```bash\n$ kubectl -n <namespace> apply -f csi.ibm.com_v1_ibmblockcsi_cr.yaml\n```\n### Verify the driver is running:\n```bash\n$ kubectl get all -n <namespace>  -l csi\nNAME                             READY   STATUS    RESTARTS   AGE\npod/ibm-block-csi-controller-0   6/6     Running   0          9m36s\npod/ibm-block-csi-node-jvmvh     3/3     Running   0          9m36s\npod/ibm-block-csi-node-tsppw     3/3     Running   0          9m36s\nNAME                                DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE\ndaemonset.apps/ibm-block-csi-node   2         2         2       2            2           <none>          9m36s\nNAME                                        READY   AGE\nstatefulset.apps/ibm-block-csi-controller   1/1     9m36s\n```\n## Configuring k8s secret and storage class\nIn order to use the driver, create the relevant storage classes and secrets, as needed.\nThis section describes how to:\n 1. Create a storage system secret - to define the storage system credentials (user and password) and its address.\n 2. Configure the storage class - to define the storage system pool name, secret reference, `SpaceEfficiency`, and `fstype`.\n#### 1. Create an array secret\nCreate a secret file as follows `array-secret.yaml` and update the relevant credentials:\n```\nkind: Secret\napiVersion: v1\nmetadata:\n  name: <NAME>\n  namespace: <NAMESPACE>\ntype: Opaque\nstringData:\n  management_address: <ADDRESS-1, ADDRESS-2> # Array management addresses\n  username: <USERNAME>                   # Array username\ndata:\n  password: <PASSWORD base64>            # Array password\n```\nApply the secret:\n```\n$ kubectl apply -f array-secret.yaml\n```\nTo create the secret using a command line terminal, use the following command:\n```bash\nkubectl create secret generic <NAME> --from-literal=username=<USER> --fromliteral=password=<PASSWORD> --from-literal=management_address=<ARRAY_MGMT> -n <namespace>\n```\n#### 2. Create storage classes\nCreate a storage class `demo-storageclass-gold-pvc.yaml` file as follows, with the relevant capabilities, pool and, array secret.\nUse the `SpaceEfficiency` parameters for each storage system. These values are not case sensitive:\n* IBM FlashSystem A9000 and A9000R\n    * Always includes deduplication and compression.\n    No need to specify during configuration.\n* IBM Spectrum Virtualize Family\n    * `thick` (default value, if not specified)\n    * `thin`\n    * `compressed`\n    * `deduplicated`\n* IBM DS8000 Family\n    * `none` (default value, if not specified)\n    * `thin`\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: gold\nprovisioner: block.csi.ibm.com\nparameters:\n  SpaceEfficiency: <VALUE>          # Optional: Values applicable for Spectrum Virtualize Family are: thin, compressed, or deduplicated\n  pool: <POOL_NAME>\t                # DS8000 Family paramater is pool ID\n  csi.storage.k8s.io/provisioner-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/provisioner-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n  csi.storage.k8s.io/controller-publish-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/controller-publish-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n  csi.storage.k8s.io/controller-expand-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/controller-expand-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n  csi.storage.k8s.io/fstype: xfs    # Optional: Values ext4/xfs. The default is ext4.\n  volume_name_prefix: <prefix_name> # Optional: DS8000 Family maximum prefix length is 5 characters. Maximum prefix length for other systems is 20 characters.\nallowVolumeExpansion: true\n```\n#### 3. Apply the storage class:\n```bash\n$ kubectl apply -f demo-storageclass-gold-pvc.yaml\nstorageclass.storage.k8s.io/gold created\n```\n",
      "csv_display_name": "Operator for IBM block storage CSI driver",
      "csv_metadata_description": "Run IBM block storage CSI driver on OpenShift.",
      "csv_name": "ibm-block-csi-operator.v1.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:04:16.535000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "ibm-block-csi-operator",
      "provided_apis": [
        {
          "group": "csi.ibm.com",
          "kind": "IBMBlockCSI",
          "plural": "ibmblockcsis",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3fb101666d54174dbee133a726fdfcb569a30605f2d93d6fa26731583125ae84",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:3fb101666d54174dbee133a726fdfcb569a30605f2d93d6fa26731583125ae84",
          "name": "ibm-block-csi-operator-3fb101666d54174dbee133a726fdfcb569a30605f2d93d6fa26731583125ae84-annotation"
        },
        {
          "digest": "sha256:3fb101666d54174dbee133a726fdfcb569a30605f2d93d6fa26731583125ae84",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:3fb101666d54174dbee133a726fdfcb569a30605f2d93d6fa26731583125ae84",
          "name": "ibm-block-csi-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.5.0",
      "version_original": "1.5.0"
    },
    {
      "_id": "60eaad6dba43af88444a4031",
      "alm_examples": [
        {
          "api_version": "csi.ibm.com/v1",
          "kind": "IBMBlockCSI",
          "metadata": {
            "name": "ibm-block-csi"
          },
          "spec": {
            "controller": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64",
                              "s390x"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-controller",
              "tag": "1.4.0"
            },
            "node": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64",
                              "s390x"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-node",
              "tag": "1.4.0"
            },
            "sidecars": [
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-node-driver-registrar",
                "repository": "k8s.gcr.io/sig-storage/csi-node-driver-registrar",
                "tag": "v2.0.1"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-provisioner",
                "repository": "k8s.gcr.io/sig-storage/csi-provisioner",
                "tag": "v2.0.2"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-attacher",
                "repository": "k8s.gcr.io/sig-storage/csi-attacher",
                "tag": "v3.0.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-snapshotter",
                "repository": "k8s.gcr.io/sig-storage/csi-snapshotter",
                "tag": "v3.0.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-resizer",
                "repository": "k8s.gcr.io/sig-storage/csi-resizer",
                "tag": "v1.0.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "livenessprobe",
                "repository": "k8s.gcr.io/sig-storage/livenessprobe",
                "tag": "v2.1.0"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/ibm-block-csi-operator-bundle@sha256:d78c62ef65db4858374cb7bc8434ef6442f6aef306475eb482d130abce8db971",
      "bundle_path_digest": "sha256:d78c62ef65db4858374cb7bc8434ef6442f6aef306475eb482d130abce8db971",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "maintenance-1.5",
      "creation_date": "2021-07-11T08:35:57.151000+00:00",
      "csv_description": "The Container Storage Interface (CSI) Driver for IBM block storage systems enables container orchestrators such as Kubernetes to manage the life cycle of persistent storage.\nThis is the official operator to deploy and manage IBM block storage CSI driver.\nSupported container platforms (and architectures):\n  - OpenShift v4.4 (x86, IBM Z, and IBM PowerPC)\n  - OpenShift v4.5 (x86, IBM Z, and IBM PowerPC)\n  - Kubernetes v1.18 (x86)\n  - Kubernetes v1.19 (x86)\nSupported IBM storage systems:\n  - IBM Spectrum Virtualize Family including IBM SAN Volume Controller (SVC) and IBM FlashSystem\u00ae family members built with IBM Spectrum\u00ae Virtualize (FlashSystem 5010, 5030, 5100, 7200, 9100, 9200, 9200R)\n  - IBM FlashSystem A9000 and A9000R\n  - IBM DS8000 Family\nSupported operating systems (and architectures):\n  - RHEL 7.x (x86)\n  - RHCOS (x86, IBM Z, and IBM PowerPC)\nFull documentation can be found on the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSRQ8T).\n## Prerequisites\n> **Note**: The operator can be installed directly from the RedHat OpenShift web console, through the OperatorHub. The prerequisites below also mentioned and can be viewed via OpenShift.\n### Preparing worker nodes\nPerform these steps for each worker node in Kubernetes cluster:\n#### 1. Perform this step to ensure iSCSI connectivity, when using RHEL OS.\nIf using RHCOS or if the packages are already installed, continue to the next step.\nRHEL 7.x:\n```bash\nyum -y install iscsi-initiator-utils   # Only if iSCSI connectivity is required\nyum -y install xfsprogs                # Only if XFS file system is required\n```\n#### 2. Configure Linux\u00ae multipath devices on the host.\n**Important:** Be sure to configure each worker with storage connectivity according to your storage system instructions.\nFor more information, find your storage system documentation on [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter).\n##### 2.1 Additional configuration steps for OpenShift\u00ae Container Platform users (RHEL and RHCOS). Other users can continue to step 3.\nThe following yaml file example is for both Fibre Channel and iSCSI configurations. To support iSCSI, uncomment the last two lines in the file:\n**Important:** The  `99-ibm-attach.yaml` configuration file overrides any files that already exist on your system. Only use this file if the files mentioned in the yaml below are not already created. If one or more have been created, edit this yaml file, as necessary.\nSave the `99-ibm-attach.yaml` file.\n```bash\napiVersion: machineconfiguration.openshift.io/v1\nkind: MachineConfig\nmetadata:\nlabels:\nmachineconfiguration.openshift.io/role: worker\nname: 99-ibm-attach\nspec:\nconfig:\nignition:\nversion: 2.2.0\nstorage:\nfiles:\n- path: /etc/multipath.conf\nmode: 384\nfilesystem: root\ncontents:\nsource: data:,defaults%20%7B%0A%20%20%20%20path_checker%20tur%0A%20%20%20%20path_selector\n%20%22round-robin%200%22%0A%20%20%20%20rr_weight%20uniform%0A%20%20%20%20prio%20const%0A\n%20%20%20%20rr_min_io_rq%201%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20polling_interval\n%2030%0A%20%20%20%20path_grouping_policy%20multibus%0A%20%20%20%20find_multipaths%20yes%0A\n%20%20%20%20no_path_retry%20fail%0A%20%20%20%20user_friendly_names%20yes%0A%20%20%20%20failback\n%20immediate%0A%20%20%20%20checker_timeout%2010%0A%20%20%20%20fast_io_fail_tmo%20off%0A%7D%0A%0Adevices\n%20%7B%0A%20%20%20%20device%20%7B%0A%20%20%20%20%20%20%20%20path_checker%20tur%0A\n%20%20%20%20%20%20%20%20product%20%22FlashSystem%22%0A%20%20%20%20%20%20%20%20vendor%20%22IBM%22%0A\n%20%20%20%20%20%20%20%20rr_weight%20uniform%0A%20%20%20%20%20%20%20%20rr_min_io_rq\n%204%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20path_grouping_policy\n%20multibus%0A%20%20%20%20%20%20%20%20path_selector%20%22round-robin%200%22%0A\n%20%20%20%20%20%20%20%20no_path_retry%20fail%0A%20%20%20%20%20%20%20%20failback%20immediate%0A\n%20%20%20%20%7D%0A%20%20%20%20device%20%7B%0A%20%20%20%20%20%20%20%20path_checker%20tur%0A\n%20%20%20%20%20%20%20%20product%20%22FlashSystem-9840%22%0A%20%20%20%20%20%20%20%20vendor%20%22IBM%22%0A\n%20%20%20%20%20%20%20%20fast_io_fail_tmo%20off%0A%20%20%20%20%20%20%20%20rr_weight%20uniform%0A\n%20%20%20%20%20%20%20%20rr_min_io_rq%201000%20%20%20%20%20%20%20%20%20%20%20%20%0A\n%20%20%20%20%20%20%20%20path_grouping_policy%20multibus%0A%20%20%20%20%20%20%20%20path_selector\n%20%22round-robin%200%22%0A%20%20%20%20%20%20%20%20no_path_retry%20fail%0A\n%20%20%20%20%20%20%20%20failback%20immediate%0A%20%20%20%20%7D%0A%20%20%20%20device%20%7B%0A\n%20%20%20%20%20%20%20%20vendor%20%22IBM%22%0A%20%20%20%20%20%20%20%20product%20%222145%22%0A\n%20%20%20%20%20%20%20%20path_checker%20tur%0A%20%20%20%20%20%20%20%20features%20%221%20queue_if_no_path\n%22%0A%20%20%20%20%20%20%20%20path_grouping_policy%20group_by_prio%0A\n%20%20%20%20%20%20%20%20path_selector%20%22service-time%200%22%20%23%20Used%20by%20Red%20Hat%207.x%0A\n%20%20%20%20%20%20%20%20prio%20alua%0A%20%20%20%20%20%20%20%20rr_min_io_rq%201%0A\n%20%20%20%20%20%20%20%20rr_weight%20uniform%20%0A%20%20%20%20%20%20%20%20no_path_retry%20%225%22%0A\n%20%20%20%20%20%20%20%20dev_loss_tmo%20120%0A%20%20%20%20%20%20%20%20failback%20immediate%0A%20%20%20%7D\n%0A%7D%0A\nverification: {}\n- path: /etc/udev/rules.d/99-ibm-2145.rules\nmode: 420\nfilesystem: root\ncontents:\nsource: data:,%23%20Set%20SCSI%20command%20timeout%20to%20120s%20%28default%20%3D%3D\n%2030%20or%2060%29%20for%20IBM%202145%20devices%0ASUBSYSTEM%3D%3D%22block%22%2C%20ACTION%3D%3D%22add\n%22%2C%20ENV%7BID_VENDOR%7D%3D%3D%22IBM%22%2CENV%7BID_MODEL%7D%3D%3D%222145%22%2C%20RUN%2B%3D%22/bin/sh\n%20-c%20%27echo%20120%20%3E/sys/block/%25k/device/timeout%27%22%0A\nverification: {}\nsystemd:\nunits:\n- name: multipathd.service\nenabled: true\n# Uncomment the following lines if this MachineConfig will be used with iSCSI connectivity\n#- name: iscsid.service\n#    enabled: true\n```\nApply the yaml file.\n```bash\noc apply -f 99-ibm-attach.yaml\n```\n#### 3. If needed, enable support for volume snapshots (FlashCopy\u00ae function) on your Kubernetes cluster.\nFor more information and instructions, see the Kubernetes blog post, [Kubernetes 1.17 Feature: Kubernetes Volume Snapshot Moves to Beta](https://kubernetes.io/blog/2019/12/09/kubernetes-1-17-feature-cis-volume-snapshot-beta/).\n#### 4. Configure storage system connectivity\n##### 4.1. Define the hostname of each Kubernetes node on the relevant storage systems with the valid WWPN(for Fibre Channel) or IQN(for iSCSI) of the node.\n##### 4.2. For Fibre Channel, configure the relevant zoning from the storage to the host.\n## Installation\n### Install the operator\n#### 1. Download the manifest from GitHub.\n```bash\ncurl https://raw.githubusercontent.com/IBM/ibm-block-csi-operator/master/deploy/installer/generated/ibm-block-csi-operator.yaml > ibm-block-csi-operator.yaml\n```\n#### 2. (Optional): If required, update the image fields in the ibm-block-csi-operator.yaml.\n#### 3. Create a namespace.\n```bash\n$ kubectl create ns <namespace>\n```\n#### 4. Install the operator, while using a user-defined namespace.\n```bash\n$ kubectl -n <namespace> apply -f ibm-block-csi-operator.yaml\n```\n### Verify the operator is running:\n```bash\n$ kubectl get pod -l app.kubernetes.io/name=ibm-block-csi-operator -n <namespace>\nNAME                                    READY   STATUS    RESTARTS   AGE\nibm-block-csi-operator-5bb7996b86-xntss 1/1     Running   0          10m\n```\n### Create an IBMBlockCSI custom resource\n#### 1. Download the manifest from GitHub.\n```bash\ncurl https://raw.githubusercontent.com/IBM/ibm-block-csi-operator/master/deploy/crds/csi.ibm.com_v1_ibmblockcsi_cr.yaml > csi.ibm.com_v1_ibmblockcsi_cr.yaml\n```\n#### 2. (Optional): If required, update the image fields in the csi.ibm.com_v1_ibmblockcsi_cr.yaml.\n#### 3. Install the csi.ibm.com_v1_ibmblockcsi_cr.yaml.\n```bash\n$ kubectl -n <namespace> apply -f csi.ibm.com_v1_ibmblockcsi_cr.yaml\n```\n### Verify the driver is running:\n```bash\n$ kubectl get all -n <namespace>  -l csi\nNAME                             READY   STATUS    RESTARTS   AGE\npod/ibm-block-csi-controller-0   6/6     Running   0          9m36s\npod/ibm-block-csi-node-jvmvh     3/3     Running   0          9m36s\npod/ibm-block-csi-node-tsppw     3/3     Running   0          9m36s\nNAME                                DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE\ndaemonset.apps/ibm-block-csi-node   2         2         2       2            2           <none>          9m36s\nNAME                                        READY   AGE\nstatefulset.apps/ibm-block-csi-controller   1/1     9m36s\n```\n## Configuring k8s secret and storage class\nIn order to use the driver, create the relevant storage classes and secrets, as needed.\nThis section describes how to:\n 1. Create a storage system secret - to define the storage system credentials (user and password) and its address.\n 2. Configure the storage class - to define the storage system pool name, secret reference, `SpaceEfficiency`, and `fstype`.\n#### 1. Create an array secret\nCreate a secret file as follows `array-secret.yaml` and update the relevant credentials:\n```\nkind: Secret\napiVersion: v1\nmetadata:\n  name: <NAME>\n  namespace: <NAMESPACE>\ntype: Opaque\nstringData:\n  management_address: <ADDRESS-1, ADDRESS-2> # Array management addresses\n  username: <USERNAME>                   # Array username\ndata:\n  password: <PASSWORD base64>            # Array password\n```\nApply the secret:\n```\n$ kubectl apply -f array-secret.yaml\n```\nTo create the secret using a command line terminal, use the following command:\n```bash\nkubectl create secret generic <NAME> --from-literal=username=<USER> --fromliteral=password=<PASSWORD> --from-literal=management_address=<ARRAY_MGMT> -n <namespace>\n```\n#### 2. Create storage classes\nCreate a storage class `demo-storageclass-gold-pvc.yaml` file as follows, with the relevant capabilities, pool and, array secret.\nUse the `SpaceEfficiency` parameters for each storage system. These values are not case sensitive:\n* IBM FlashSystem A9000 and A9000R\n    * Always includes deduplication and compression.\n    No need to specify during configuration.\n* IBM Spectrum Virtualize Family\n    * `thick` (default value, if not specified)\n    * `thin`\n    * `compressed`\n    * `deduplicated`\n* IBM DS8000 Family\n    * `none` (default value, if not specified)\n    * `thin`\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: gold\nprovisioner: block.csi.ibm.com\nparameters:\n  SpaceEfficiency: <VALUE>          # Optional: Values applicable for Spectrum Virtualize Family are: thin, compressed, or deduplicated\n  pool: <POOL_NAME>\t                # DS8000 Family paramater is pool ID\n  csi.storage.k8s.io/provisioner-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/provisioner-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n  csi.storage.k8s.io/controller-publish-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/controller-publish-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n  csi.storage.k8s.io/controller-expand-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/controller-expand-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n  csi.storage.k8s.io/fstype: xfs    # Optional: Values ext4/xfs. The default is ext4.\n  volume_name_prefix: <prefix_name> # Optional: DS8000 Family maximum prefix length is 5 characters. Maximum prefix length for other systems is 20 characters.\nallowVolumeExpansion: true\n```\n#### 3. Apply the storage class:\n```bash\n$ kubectl apply -f demo-storageclass-gold-pvc.yaml\nstorageclass.storage.k8s.io/gold created\n```\n",
      "csv_display_name": "Operator for IBM block storage CSI driver",
      "csv_metadata_description": "Run IBM block storage CSI driver on OpenShift.",
      "csv_name": "ibm-block-csi-operator.v1.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:47:13.382000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "ibm-block-csi-operator",
      "provided_apis": [
        {
          "group": "csi.ibm.com",
          "kind": "IBMBlockCSI",
          "plural": "ibmblockcsis",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d5c1b8b6872e733076876ce89a4b56635156d0b6a1d1febd97f7117cef284712",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:d5c1b8b6872e733076876ce89a4b56635156d0b6a1d1febd97f7117cef284712",
          "name": "ibm-block-csi-operator-d5c1b8b6872e733076876ce89a4b56635156d0b6a1d1febd97f7117cef284712-annotation"
        },
        {
          "digest": "sha256:d5c1b8b6872e733076876ce89a4b56635156d0b6a1d1febd97f7117cef284712",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:d5c1b8b6872e733076876ce89a4b56635156d0b6a1d1febd97f7117cef284712",
          "name": "ibm-block-csi-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.4.0",
      "version_original": "1.4.0"
    },
    {
      "_id": "60eaad708ce8053fa514bdf9",
      "alm_examples": [
        {
          "api_version": "csi.ibm.com/v1",
          "kind": "IBMBlockCSI",
          "metadata": {
            "name": "ibm-block-csi"
          },
          "spec": {
            "controller": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64",
                              "s390x"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-controller",
              "tag": "1.3.0"
            },
            "node": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64",
                              "s390x"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-node",
              "tag": "1.3.0"
            },
            "sidecars": [
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-node-driver-registrar",
                "repository": "registry.redhat.io/openshift4/ose-csi-driver-registrar",
                "tag": "v4.3"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-provisioner",
                "repository": "registry.redhat.io/openshift4/ose-csi-external-provisioner-rhel7",
                "tag": "v4.4"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-attacher",
                "repository": "registry.redhat.io/openshift4/ose-csi-external-attacher",
                "tag": "v4.4"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-snapshotter",
                "repository": "registry.redhat.io/openshift4/ose-csi-external-snapshotter-rhel7",
                "tag": "v4.4"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "livenessprobe",
                "repository": "registry.redhat.io/openshift4/ose-csi-livenessprobe",
                "tag": "v4.4"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/ibm-block-csi-operator-bundle@sha256:aa2f7b4b4b2d489cd9671b0b45d696ca2fcb8f76ad2b2551a06475917b9fdc99",
      "bundle_path_digest": "sha256:aa2f7b4b4b2d489cd9671b0b45d696ca2fcb8f76ad2b2551a06475917b9fdc99",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "maintenance-1.5",
      "creation_date": "2021-07-11T08:36:00.587000+00:00",
      "csv_description": "The Container Storage Interface (CSI) Driver for IBM block storage systems enables container orchestrators such as Kubernetes to manage the life cycle of persistent storage.\n\nThis is the official operator to deploy and manage IBM block storage CSI driver.\n\nSupported container platforms (and architectures):\n  - OpenShift v4.3 (IBM Z and IBM PowerPC)\n  - OpenShift v4.4 (x86 and IBM Z)\n  - OpenShift v4.5 (x86)\n  - Kubernetes v1.17 (x86)\n  - Kubernetes v1.18 (x86)\n\nSupported IBM storage systems:\n  - IBM Spectrum Virtualize Family including IBM SAN Volume Controller (SVC) and IBM FlashSystem\u00ae family members built with IBM Spectrum\u00ae Virtualize (FlashSystem 5010, 5030, 5100, 7200, 9100, 9200, 9200R)\n  - IBM FlashSystem A9000/R\n  - IBM DS8880\n  - IBM DS8900\n\nSupported operating systems (and architectures):\n  - RHEL 7.x (x86)\n  - RHCOS (x86, IBM Z, and IBM PowerPC)\n\nFull documentation can be found on the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSRQ8T).\n\n## Prerequisites\n> **Note**: The operator can be installed directly from the RedHat OpenShift web console, through the OperatorHub. The prerequisites below also mentioned and can be viewed via OpenShift.\n\n### Preparing worker nodes\nPerform these steps for each worker node in Kubernetes cluster:\n\n#### 1. Perform this step to ensure iSCSI connectivity, when using RHEL OS.\nIf using RHCOS or if the packages are already installed, continue to the next step.\n\nRHEL 7.x:\n```bash\nyum -y install iscsi-initiator-utils   # Only if iSCSI connectivity is required\nyum -y install xfsprogs                # Only if XFS file system is required\n```\n\n#### 2. Configure Linux multipath devices on the host, using one of the following procedures.\n\n##### 2.1 Configuring for OpenShift Container Platform users (RHEL and RHCOS)\n\nThe following yaml file example is for both Fibre Channel and iSCSI configurations. To support iSCSI, uncomment the last two lines in the file:\n\n\n**Important:** The  `99-ibm-attach.yaml` configuration file overrides any files that already exist on your system. Only use this file if the files mentioned in the yaml below are not already created. If one or more have been created, edit this yaml file, as necessary.\n\nSave the `99-ibm-attach.yaml` file.\n\n```bash\napiVersion: machineconfiguration.openshift.io/v1\nkind: MachineConfig\nmetadata:\nlabels:\nmachineconfiguration.openshift.io/role: worker\nname: 99-ibm-attach\nspec:\nconfig:\nignition:\nversion: 2.2.0\nstorage:\nfiles:\n- path: /etc/multipath.conf\nmode: 384\nfilesystem: root\ncontents:\nsource: data:,defaults%20%7B%0A%20%20%20%20path_checker%20tur%0A%20%20%20%20path_selector\n%20%22round-robin%200%22%0A%20%20%20%20rr_weight%20uniform%0A%20%20%20%20prio%20const%0A\n%20%20%20%20rr_min_io_rq%201%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20polling_interval\n%2030%0A%20%20%20%20path_grouping_policy%20multibus%0A%20%20%20%20find_multipaths%20yes%0A\n%20%20%20%20no_path_retry%20fail%0A%20%20%20%20user_friendly_names%20yes%0A%20%20%20%20failback\n%20immediate%0A%20%20%20%20checker_timeout%2010%0A%20%20%20%20fast_io_fail_tmo%20off%0A%7D%0A%0Adevices\n%20%7B%0A%20%20%20%20device%20%7B%0A%20%20%20%20%20%20%20%20path_checker%20tur%0A\n%20%20%20%20%20%20%20%20product%20%22FlashSystem%22%0A%20%20%20%20%20%20%20%20vendor%20%22IBM%22%0A\n%20%20%20%20%20%20%20%20rr_weight%20uniform%0A%20%20%20%20%20%20%20%20rr_min_io_rq\n%204%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20path_grouping_policy\n%20multibus%0A%20%20%20%20%20%20%20%20path_selector%20%22round-robin%200%22%0A\n%20%20%20%20%20%20%20%20no_path_retry%20fail%0A%20%20%20%20%20%20%20%20failback%20immediate%0A\n%20%20%20%20%7D%0A%20%20%20%20device%20%7B%0A%20%20%20%20%20%20%20%20path_checker%20tur%0A\n%20%20%20%20%20%20%20%20product%20%22FlashSystem-9840%22%0A%20%20%20%20%20%20%20%20vendor%20%22IBM%22%0A\n%20%20%20%20%20%20%20%20fast_io_fail_tmo%20off%0A%20%20%20%20%20%20%20%20rr_weight%20uniform%0A\n%20%20%20%20%20%20%20%20rr_min_io_rq%201000%20%20%20%20%20%20%20%20%20%20%20%20%0A\n%20%20%20%20%20%20%20%20path_grouping_policy%20multibus%0A%20%20%20%20%20%20%20%20path_selector\n%20%22round-robin%200%22%0A%20%20%20%20%20%20%20%20no_path_retry%20fail%0A\n%20%20%20%20%20%20%20%20failback%20immediate%0A%20%20%20%20%7D%0A%20%20%20%20device%20%7B%0A\n%20%20%20%20%20%20%20%20vendor%20%22IBM%22%0A%20%20%20%20%20%20%20%20product%20%222145%22%0A\n%20%20%20%20%20%20%20%20path_checker%20tur%0A%20%20%20%20%20%20%20%20features%20%221%20queue_if_no_path\n%22%0A%20%20%20%20%20%20%20%20path_grouping_policy%20group_by_prio%0A\n%20%20%20%20%20%20%20%20path_selector%20%22service-time%200%22%20%23%20Used%20by%20Red%20Hat%207.x%0A\n%20%20%20%20%20%20%20%20prio%20alua%0A%20%20%20%20%20%20%20%20rr_min_io_rq%201%0A\n%20%20%20%20%20%20%20%20rr_weight%20uniform%20%0A%20%20%20%20%20%20%20%20no_path_retry%20%225%22%0A\n%20%20%20%20%20%20%20%20dev_loss_tmo%20120%0A%20%20%20%20%20%20%20%20failback%20immediate%0A%20%20%20%7D\n%0A%7D%0A\nverification: {}\n- path: /etc/udev/rules.d/99-ibm-2145.rules\nmode: 420\nfilesystem: root\ncontents:\nsource: data:,%23%20Set%20SCSI%20command%20timeout%20to%20120s%20%28default%20%3D%3D\n%2030%20or%2060%29%20for%20IBM%202145%20devices%0ASUBSYSTEM%3D%3D%22block%22%2C%20ACTION%3D%3D%22add\n%22%2C%20ENV%7BID_VENDOR%7D%3D%3D%22IBM%22%2CENV%7BID_MODEL%7D%3D%3D%222145%22%2C%20RUN%2B%3D%22/bin/sh\n%20-c%20%27echo%20120%20%3E/sys/block/%25k/device/timeout%27%22%0A\nverification: {}\nsystemd:\nunits:\n- name: multipathd.service\nenabled: true\n# Uncomment the following lines if this MachineConfig will be used with iSCSI connectivity\n#- name: iscsid.service\n#    enabled: true\n```\n\nApply the yaml file.\n```bash\noc apply -f 99-ibm-attach.yaml\n```\n\nRHEL users should verify that the `systemctl status multipathd` output indicates that the multipath status is active and error-free.\n\n```bash\nyum install device-mapper-multipath\nmodprobe dm-multipath\nsystemctl enable multipathd\nsystemctl start multipathd\nsystemctl status multipathd\nmultipath -ll\n```\n\n##### 2.2 Configuring for Kubernetes users (RHEL)\nCreate and set the relevant storage system parameters in the `/etc/multipath.conf` file. You can also use the default `multipath.conf` file, located in the `/usr/share/doc/device-mapper-multipath-*` directory.\n\nVerify that the `systemctl status multipathd` output indicates that the multipath status is active and error-free.\n\n```bash\nyum install device-mapper-multipath\nmodprobe dm-multipath\nsystemctl enable multipathd\nsystemctl start multipathd\nsystemctl status multipathd\nmultipath -ll\n```\n\n#### 3. Configure storage system connectivity\n3.1. Define the hostname of each Kubernetes node on the relevant storage systems with the valid WWPN(for Fibre Channel) or IQN(for iSCSI) of the node.\n\n3.2. For Fibre Channel, configure the relevant zoning from the storage to the host.\n\n\n## Installation\n\n### Install the operator\n\n\n#### 1. Download the manifest from GitHub.\n\n```bash\ncurl https://raw.githubusercontent.com/IBM/ibm-block-csi-operator/master/deploy/installer/generated/ibm-block-csi-operator.yaml > ibm-block-csi-operator.yaml\n```\n\n#### 2. (Optional): If required, update the image fields in the ibm-block-csi-operator.yaml.\n\n\n#### 3. Create a namespace.\n\n```bash\n$ kubectl create ns <namespace>\n```\n\n#### 4. Install the operator, while using a user-defined namespace.\n\n```bash\n$ kubectl -n <namespace> apply -f ibm-block-csi-operator.yaml\n```\n\n### Verify the operator is running:\n\n```bash\n$ kubectl get pod -l app.kubernetes.io/name=ibm-block-csi-operator -n <namespace>\nNAME                                    READY   STATUS    RESTARTS   AGE\nibm-block-csi-operator-5bb7996b86-xntss 1/1     Running   0          10m\n```\n\n### Create an IBMBlockCSI custom resource\n\n\n#### 1. Download the manifest from GitHub.\n```bash\ncurl https://raw.githubusercontent.com/IBM/ibm-block-csi-operator/master/deploy/crds/csi.ibm.com_v1_ibmblockcsi_cr.yaml > csi.ibm.com_v1_ibmblockcsi_cr.yaml\n```\n\n#### 2. (Optional): If required, update the image fields in the csi.ibm.com_v1_ibmblockcsi_cr.yaml.\n\n#### 3. Install the csi.ibm.com_v1_ibmblockcsi_cr.yaml.\n\n```bash\n$ kubectl -n <namespace> apply -f csi.ibm.com_v1_ibmblockcsi_cr.yaml\n```\n\n### Verify the driver is running:\n\n```bash\n$ kubectl get all -n <namespace>  -l csi\nNAME                             READY   STATUS    RESTARTS   AGE\npod/ibm-block-csi-controller-0   5/5     Running   0          9m36s\npod/ibm-block-csi-node-jvmvh     3/3     Running   0          9m36s\npod/ibm-block-csi-node-tsppw     3/3     Running   0          9m36s\n\nNAME                                DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE\ndaemonset.apps/ibm-block-csi-node   2         2         2       2            2           <none>          9m36s\n\nNAME                                        READY   AGE\nstatefulset.apps/ibm-block-csi-controller   1/1     9m36s\n```\n\n\n## Configuring k8s secret and storage class\nIn order to use the driver, create the relevant storage classes and secrets, as needed.\n\nThis section describes how to:\n 1. Create a storage system secret - to define the storage system credentials (user and password) and its address.\n 2. Configure the storage class - to define the storage system pool name, secret reference, `SpaceEfficiency`, and `fstype`.\n\n#### 1. Create an array secret\nCreate a secret file as follows `array-secret.yaml` and update the relevant credentials:\n\n```\nkind: Secret\napiVersion: v1\nmetadata:\n  name: <NAME>\n  namespace: <NAMESPACE>\ntype: Opaque\nstringData:\n  management_address: <ADDRESS-1, ADDRESS-2> # Array management addresses\n  username: <USERNAME>                   # Array username\ndata:\n  password: <PASSWORD base64>            # Array password\n```\n\nApply the secret:\n\n```\n$ kubectl apply -f array-secret.yaml\n```\n\nTo create the secret using a command line terminal, use the following command:\n```bash\nkubectl create secret generic <NAME> --from-literal=username=<USER> --fromliteral=password=<PASSWORD> --from-literal=management_address=<ARRAY_MGMT> -n <namespace>\n```\n\n#### 2. Create storage classes\n\nCreate a storage class `demo-storageclass-gold-pvc.yaml` file as follows, with the relevant capabilities, pool and, array secret.\n\nUse the `SpaceEfficiency` parameters for each storage system. These values are not case sensitive:\n* IBM FlashSystem A9000 and A9000R\n    * Always includes deduplication and compression.\n    No need to specify during configuration.\n* IBM Spectrum Virtualize Family\n    * `thin`\n    * `compressed`\n    * `deduplicated`\n* IBM DS8000 Family\n    * `standard` (default value, if not specified)\n    * `thin`\n\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: gold\nprovisioner: block.csi.ibm.com\nparameters:\n  SpaceEfficiency: <VALUE>          # Optional: Values applicable for Spectrum Virtualize Family are: thin, compressed, or deduplicated\n  pool: <POOL_NAME>\t                # DS8000 Family paramater is pool ID\n\n  csi.storage.k8s.io/provisioner-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/provisioner-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n  csi.storage.k8s.io/controller-publish-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/controller-publish-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n\n  csi.storage.k8s.io/fstype: xfs    # Optional: Values ext4/xfs. The default is ext4.\n  volume_name_prefix: <prefix_name> # Optional: DS8000 Family maximum prefix length is 5 characters. Maximum prefix length for other systems is 20 characters.\n```\n\n#### 3. Apply the storage class:\n\n```bash\n$ kubectl apply -f demo-storageclass-gold-pvc.yaml\nstorageclass.storage.k8s.io/gold created\n```\n",
      "csv_display_name": "Operator for IBM block storage CSI driver",
      "csv_metadata_description": "Run IBM block storage CSI driver on OpenShift.",
      "csv_name": "ibm-block-csi-operator.v1.3.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:09:48.307000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "ibm-block-csi-operator",
      "provided_apis": [
        {
          "group": "csi.ibm.com",
          "kind": "IBMBlockCSI",
          "plural": "ibmblockcsis",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:427c6fcc36ba960887e4f15bda4870c287f1573dcbc844706d5f02987fc0d0dc",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:427c6fcc36ba960887e4f15bda4870c287f1573dcbc844706d5f02987fc0d0dc",
          "name": "ibm-block-csi-operator-427c6fcc36ba960887e4f15bda4870c287f1573dcbc844706d5f02987fc0d0dc-annotation"
        },
        {
          "digest": "sha256:427c6fcc36ba960887e4f15bda4870c287f1573dcbc844706d5f02987fc0d0dc",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:427c6fcc36ba960887e4f15bda4870c287f1573dcbc844706d5f02987fc0d0dc",
          "name": "ibm-block-csi-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.3.0",
      "version_original": "1.3.0"
    },
    {
      "_id": "60eaad78146e762beb225e09",
      "alm_examples": [
        {
          "api_version": "csi.ibm.com/v1",
          "kind": "IBMBlockCSI",
          "metadata": {
            "name": "ibm-block-csi"
          },
          "spec": {
            "controller": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64",
                              "s390x"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-controller",
              "tag": "1.4.0"
            },
            "node": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64",
                              "s390x"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-node",
              "tag": "1.4.0"
            },
            "sidecars": [
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-node-driver-registrar",
                "repository": "k8s.gcr.io/sig-storage/csi-node-driver-registrar",
                "tag": "v2.0.1"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-provisioner",
                "repository": "k8s.gcr.io/sig-storage/csi-provisioner",
                "tag": "v2.0.2"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-attacher",
                "repository": "k8s.gcr.io/sig-storage/csi-attacher",
                "tag": "v3.0.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-snapshotter",
                "repository": "k8s.gcr.io/sig-storage/csi-snapshotter",
                "tag": "v3.0.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-resizer",
                "repository": "k8s.gcr.io/sig-storage/csi-resizer",
                "tag": "v1.0.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "livenessprobe",
                "repository": "k8s.gcr.io/sig-storage/livenessprobe",
                "tag": "v2.1.0"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/ibm-block-csi-operator-bundle@sha256:d78c62ef65db4858374cb7bc8434ef6442f6aef306475eb482d130abce8db971",
      "bundle_path_digest": "sha256:d78c62ef65db4858374cb7bc8434ef6442f6aef306475eb482d130abce8db971",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "maintenance-1.5",
      "creation_date": "2021-07-11T08:36:08.594000+00:00",
      "csv_description": "The Container Storage Interface (CSI) Driver for IBM block storage systems enables container orchestrators such as Kubernetes to manage the life cycle of persistent storage.\nThis is the official operator to deploy and manage IBM block storage CSI driver.\nSupported container platforms (and architectures):\n  - OpenShift v4.4 (x86, IBM Z, and IBM PowerPC)\n  - OpenShift v4.5 (x86, IBM Z, and IBM PowerPC)\n  - Kubernetes v1.18 (x86)\n  - Kubernetes v1.19 (x86)\nSupported IBM storage systems:\n  - IBM Spectrum Virtualize Family including IBM SAN Volume Controller (SVC) and IBM FlashSystem\u00ae family members built with IBM Spectrum\u00ae Virtualize (FlashSystem 5010, 5030, 5100, 7200, 9100, 9200, 9200R)\n  - IBM FlashSystem A9000 and A9000R\n  - IBM DS8000 Family\nSupported operating systems (and architectures):\n  - RHEL 7.x (x86)\n  - RHCOS (x86, IBM Z, and IBM PowerPC)\nFull documentation can be found on the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSRQ8T).\n## Prerequisites\n> **Note**: The operator can be installed directly from the RedHat OpenShift web console, through the OperatorHub. The prerequisites below also mentioned and can be viewed via OpenShift.\n### Preparing worker nodes\nPerform these steps for each worker node in Kubernetes cluster:\n#### 1. Perform this step to ensure iSCSI connectivity, when using RHEL OS.\nIf using RHCOS or if the packages are already installed, continue to the next step.\nRHEL 7.x:\n```bash\nyum -y install iscsi-initiator-utils   # Only if iSCSI connectivity is required\nyum -y install xfsprogs                # Only if XFS file system is required\n```\n#### 2. Configure Linux\u00ae multipath devices on the host.\n**Important:** Be sure to configure each worker with storage connectivity according to your storage system instructions.\nFor more information, find your storage system documentation on [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter).\n##### 2.1 Additional configuration steps for OpenShift\u00ae Container Platform users (RHEL and RHCOS). Other users can continue to step 3.\nThe following yaml file example is for both Fibre Channel and iSCSI configurations. To support iSCSI, uncomment the last two lines in the file:\n**Important:** The  `99-ibm-attach.yaml` configuration file overrides any files that already exist on your system. Only use this file if the files mentioned in the yaml below are not already created. If one or more have been created, edit this yaml file, as necessary.\nSave the `99-ibm-attach.yaml` file.\n```bash\napiVersion: machineconfiguration.openshift.io/v1\nkind: MachineConfig\nmetadata:\nlabels:\nmachineconfiguration.openshift.io/role: worker\nname: 99-ibm-attach\nspec:\nconfig:\nignition:\nversion: 2.2.0\nstorage:\nfiles:\n- path: /etc/multipath.conf\nmode: 384\nfilesystem: root\ncontents:\nsource: data:,defaults%20%7B%0A%20%20%20%20path_checker%20tur%0A%20%20%20%20path_selector\n%20%22round-robin%200%22%0A%20%20%20%20rr_weight%20uniform%0A%20%20%20%20prio%20const%0A\n%20%20%20%20rr_min_io_rq%201%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20polling_interval\n%2030%0A%20%20%20%20path_grouping_policy%20multibus%0A%20%20%20%20find_multipaths%20yes%0A\n%20%20%20%20no_path_retry%20fail%0A%20%20%20%20user_friendly_names%20yes%0A%20%20%20%20failback\n%20immediate%0A%20%20%20%20checker_timeout%2010%0A%20%20%20%20fast_io_fail_tmo%20off%0A%7D%0A%0Adevices\n%20%7B%0A%20%20%20%20device%20%7B%0A%20%20%20%20%20%20%20%20path_checker%20tur%0A\n%20%20%20%20%20%20%20%20product%20%22FlashSystem%22%0A%20%20%20%20%20%20%20%20vendor%20%22IBM%22%0A\n%20%20%20%20%20%20%20%20rr_weight%20uniform%0A%20%20%20%20%20%20%20%20rr_min_io_rq\n%204%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20path_grouping_policy\n%20multibus%0A%20%20%20%20%20%20%20%20path_selector%20%22round-robin%200%22%0A\n%20%20%20%20%20%20%20%20no_path_retry%20fail%0A%20%20%20%20%20%20%20%20failback%20immediate%0A\n%20%20%20%20%7D%0A%20%20%20%20device%20%7B%0A%20%20%20%20%20%20%20%20path_checker%20tur%0A\n%20%20%20%20%20%20%20%20product%20%22FlashSystem-9840%22%0A%20%20%20%20%20%20%20%20vendor%20%22IBM%22%0A\n%20%20%20%20%20%20%20%20fast_io_fail_tmo%20off%0A%20%20%20%20%20%20%20%20rr_weight%20uniform%0A\n%20%20%20%20%20%20%20%20rr_min_io_rq%201000%20%20%20%20%20%20%20%20%20%20%20%20%0A\n%20%20%20%20%20%20%20%20path_grouping_policy%20multibus%0A%20%20%20%20%20%20%20%20path_selector\n%20%22round-robin%200%22%0A%20%20%20%20%20%20%20%20no_path_retry%20fail%0A\n%20%20%20%20%20%20%20%20failback%20immediate%0A%20%20%20%20%7D%0A%20%20%20%20device%20%7B%0A\n%20%20%20%20%20%20%20%20vendor%20%22IBM%22%0A%20%20%20%20%20%20%20%20product%20%222145%22%0A\n%20%20%20%20%20%20%20%20path_checker%20tur%0A%20%20%20%20%20%20%20%20features%20%221%20queue_if_no_path\n%22%0A%20%20%20%20%20%20%20%20path_grouping_policy%20group_by_prio%0A\n%20%20%20%20%20%20%20%20path_selector%20%22service-time%200%22%20%23%20Used%20by%20Red%20Hat%207.x%0A\n%20%20%20%20%20%20%20%20prio%20alua%0A%20%20%20%20%20%20%20%20rr_min_io_rq%201%0A\n%20%20%20%20%20%20%20%20rr_weight%20uniform%20%0A%20%20%20%20%20%20%20%20no_path_retry%20%225%22%0A\n%20%20%20%20%20%20%20%20dev_loss_tmo%20120%0A%20%20%20%20%20%20%20%20failback%20immediate%0A%20%20%20%7D\n%0A%7D%0A\nverification: {}\n- path: /etc/udev/rules.d/99-ibm-2145.rules\nmode: 420\nfilesystem: root\ncontents:\nsource: data:,%23%20Set%20SCSI%20command%20timeout%20to%20120s%20%28default%20%3D%3D\n%2030%20or%2060%29%20for%20IBM%202145%20devices%0ASUBSYSTEM%3D%3D%22block%22%2C%20ACTION%3D%3D%22add\n%22%2C%20ENV%7BID_VENDOR%7D%3D%3D%22IBM%22%2CENV%7BID_MODEL%7D%3D%3D%222145%22%2C%20RUN%2B%3D%22/bin/sh\n%20-c%20%27echo%20120%20%3E/sys/block/%25k/device/timeout%27%22%0A\nverification: {}\nsystemd:\nunits:\n- name: multipathd.service\nenabled: true\n# Uncomment the following lines if this MachineConfig will be used with iSCSI connectivity\n#- name: iscsid.service\n#    enabled: true\n```\nApply the yaml file.\n```bash\noc apply -f 99-ibm-attach.yaml\n```\n#### 3. If needed, enable support for volume snapshots (FlashCopy\u00ae function) on your Kubernetes cluster.\nFor more information and instructions, see the Kubernetes blog post, [Kubernetes 1.17 Feature: Kubernetes Volume Snapshot Moves to Beta](https://kubernetes.io/blog/2019/12/09/kubernetes-1-17-feature-cis-volume-snapshot-beta/).\n#### 4. Configure storage system connectivity\n##### 4.1. Define the hostname of each Kubernetes node on the relevant storage systems with the valid WWPN(for Fibre Channel) or IQN(for iSCSI) of the node.\n##### 4.2. For Fibre Channel, configure the relevant zoning from the storage to the host.\n## Installation\n### Install the operator\n#### 1. Download the manifest from GitHub.\n```bash\ncurl https://raw.githubusercontent.com/IBM/ibm-block-csi-operator/master/deploy/installer/generated/ibm-block-csi-operator.yaml > ibm-block-csi-operator.yaml\n```\n#### 2. (Optional): If required, update the image fields in the ibm-block-csi-operator.yaml.\n#### 3. Create a namespace.\n```bash\n$ kubectl create ns <namespace>\n```\n#### 4. Install the operator, while using a user-defined namespace.\n```bash\n$ kubectl -n <namespace> apply -f ibm-block-csi-operator.yaml\n```\n### Verify the operator is running:\n```bash\n$ kubectl get pod -l app.kubernetes.io/name=ibm-block-csi-operator -n <namespace>\nNAME                                    READY   STATUS    RESTARTS   AGE\nibm-block-csi-operator-5bb7996b86-xntss 1/1     Running   0          10m\n```\n### Create an IBMBlockCSI custom resource\n#### 1. Download the manifest from GitHub.\n```bash\ncurl https://raw.githubusercontent.com/IBM/ibm-block-csi-operator/master/deploy/crds/csi.ibm.com_v1_ibmblockcsi_cr.yaml > csi.ibm.com_v1_ibmblockcsi_cr.yaml\n```\n#### 2. (Optional): If required, update the image fields in the csi.ibm.com_v1_ibmblockcsi_cr.yaml.\n#### 3. Install the csi.ibm.com_v1_ibmblockcsi_cr.yaml.\n```bash\n$ kubectl -n <namespace> apply -f csi.ibm.com_v1_ibmblockcsi_cr.yaml\n```\n### Verify the driver is running:\n```bash\n$ kubectl get all -n <namespace>  -l csi\nNAME                             READY   STATUS    RESTARTS   AGE\npod/ibm-block-csi-controller-0   6/6     Running   0          9m36s\npod/ibm-block-csi-node-jvmvh     3/3     Running   0          9m36s\npod/ibm-block-csi-node-tsppw     3/3     Running   0          9m36s\nNAME                                DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE\ndaemonset.apps/ibm-block-csi-node   2         2         2       2            2           <none>          9m36s\nNAME                                        READY   AGE\nstatefulset.apps/ibm-block-csi-controller   1/1     9m36s\n```\n## Configuring k8s secret and storage class\nIn order to use the driver, create the relevant storage classes and secrets, as needed.\nThis section describes how to:\n 1. Create a storage system secret - to define the storage system credentials (user and password) and its address.\n 2. Configure the storage class - to define the storage system pool name, secret reference, `SpaceEfficiency`, and `fstype`.\n#### 1. Create an array secret\nCreate a secret file as follows `array-secret.yaml` and update the relevant credentials:\n```\nkind: Secret\napiVersion: v1\nmetadata:\n  name: <NAME>\n  namespace: <NAMESPACE>\ntype: Opaque\nstringData:\n  management_address: <ADDRESS-1, ADDRESS-2> # Array management addresses\n  username: <USERNAME>                   # Array username\ndata:\n  password: <PASSWORD base64>            # Array password\n```\nApply the secret:\n```\n$ kubectl apply -f array-secret.yaml\n```\nTo create the secret using a command line terminal, use the following command:\n```bash\nkubectl create secret generic <NAME> --from-literal=username=<USER> --fromliteral=password=<PASSWORD> --from-literal=management_address=<ARRAY_MGMT> -n <namespace>\n```\n#### 2. Create storage classes\nCreate a storage class `demo-storageclass-gold-pvc.yaml` file as follows, with the relevant capabilities, pool and, array secret.\nUse the `SpaceEfficiency` parameters for each storage system. These values are not case sensitive:\n* IBM FlashSystem A9000 and A9000R\n    * Always includes deduplication and compression.\n    No need to specify during configuration.\n* IBM Spectrum Virtualize Family\n    * `thick` (default value, if not specified)\n    * `thin`\n    * `compressed`\n    * `deduplicated`\n* IBM DS8000 Family\n    * `none` (default value, if not specified)\n    * `thin`\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: gold\nprovisioner: block.csi.ibm.com\nparameters:\n  SpaceEfficiency: <VALUE>          # Optional: Values applicable for Spectrum Virtualize Family are: thin, compressed, or deduplicated\n  pool: <POOL_NAME>\t                # DS8000 Family paramater is pool ID\n  csi.storage.k8s.io/provisioner-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/provisioner-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n  csi.storage.k8s.io/controller-publish-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/controller-publish-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n  csi.storage.k8s.io/controller-expand-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/controller-expand-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n  csi.storage.k8s.io/fstype: xfs    # Optional: Values ext4/xfs. The default is ext4.\n  volume_name_prefix: <prefix_name> # Optional: DS8000 Family maximum prefix length is 5 characters. Maximum prefix length for other systems is 20 characters.\nallowVolumeExpansion: true\n```\n#### 3. Apply the storage class:\n```bash\n$ kubectl apply -f demo-storageclass-gold-pvc.yaml\nstorageclass.storage.k8s.io/gold created\n```\n",
      "csv_display_name": "Operator for IBM block storage CSI driver",
      "csv_metadata_description": "Run IBM block storage CSI driver on OpenShift.",
      "csv_name": "ibm-block-csi-operator.v1.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:08:03.374000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "ibm-block-csi-operator",
      "provided_apis": [
        {
          "group": "csi.ibm.com",
          "kind": "IBMBlockCSI",
          "plural": "ibmblockcsis",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d5c1b8b6872e733076876ce89a4b56635156d0b6a1d1febd97f7117cef284712",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:d5c1b8b6872e733076876ce89a4b56635156d0b6a1d1febd97f7117cef284712",
          "name": "ibm-block-csi-operator-d5c1b8b6872e733076876ce89a4b56635156d0b6a1d1febd97f7117cef284712-annotation"
        },
        {
          "digest": "sha256:d5c1b8b6872e733076876ce89a4b56635156d0b6a1d1febd97f7117cef284712",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:d5c1b8b6872e733076876ce89a4b56635156d0b6a1d1febd97f7117cef284712",
          "name": "ibm-block-csi-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.4.0",
      "version_original": "1.4.0"
    },
    {
      "_id": "60eaae366814ca1184699842",
      "alm_examples": [
        {
          "api_version": "csi.ibm.com/v1",
          "kind": "IBMBlockCSI",
          "metadata": {
            "name": "ibm-block-csi"
          },
          "spec": {
            "controller": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64",
                              "s390x"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-controller",
              "tag": "1.5.1"
            },
            "node": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64",
                              "s390x"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-node",
              "tag": "1.5.1"
            },
            "sidecars": [
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-node-driver-registrar",
                "repository": "k8s.gcr.io/sig-storage/csi-node-driver-registrar",
                "tag": "v2.0.1"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-provisioner",
                "repository": "k8s.gcr.io/sig-storage/csi-provisioner",
                "tag": "v2.0.4"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-attacher",
                "repository": "k8s.gcr.io/sig-storage/csi-attacher",
                "tag": "v3.0.2"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-snapshotter",
                "repository": "k8s.gcr.io/sig-storage/csi-snapshotter",
                "tag": "v3.0.2"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-resizer",
                "repository": "k8s.gcr.io/sig-storage/csi-resizer",
                "tag": "v1.0.1"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "livenessprobe",
                "repository": "k8s.gcr.io/sig-storage/livenessprobe",
                "tag": "v2.1.0"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/ibm-block-csi-operator-bundle@sha256:247ae1d4a93986badc409e5840d4b45c78c41c712d338f12f7bae74a1a025a20",
      "bundle_path_digest": "sha256:247ae1d4a93986badc409e5840d4b45c78c41c712d338f12f7bae74a1a025a20",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "maintenance-1.5",
      "creation_date": "2021-07-11T08:39:18.324000+00:00",
      "csv_description": "The Container Storage Interface (CSI) Driver for IBM block storage systems enables container orchestrators such as Kubernetes to manage the life cycle of persistent storage.\nThis is the official operator to deploy and manage IBM block storage CSI driver.\nSupported container platforms (and architectures):\n  - OpenShift v4.6 (x86, IBM Z, and IBM Power Systems)\n  - OpenShift v4.7 (x86, IBM Z, and IBM Power Systems)\n  - Kubernetes v1.19 (x86)\n  - Kubernetes v1.20 (x86)\nSupported IBM storage systems:\n  - IBM Spectrum Virtualize Family including IBM SAN Volume Controller (SVC) and IBM FlashSystem\u00ae family members built with IBM Spectrum\u00ae Virtualize (FlashSystem 5010, 5030, 5100, 5200, 7200, 9100, 9200, 9200R)\n  - IBM FlashSystem A9000 and A9000R\n  - IBM DS8000 Family\nSupported operating systems (and architectures):\n  - RHEL 7.x (x86)\n  - RHCOS (x86, IBM Z, and IBM Power Systems)\nFull documentation can be found on the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSRQ8T).\n## Prerequisites\n> **Note**: The operator can be installed directly from the RedHat OpenShift web console, through the OperatorHub. The prerequisites below also mentioned and can be viewed via OpenShift.\n### Preparing worker nodes\nPerform these steps for each worker node in Kubernetes cluster:\n#### 1. Perform this step to ensure iSCSI connectivity, when using RHEL OS.\nIf using RHCOS or if the packages are already installed, continue to the next step.\nRHEL 7.x:\n```bash\nyum -y install iscsi-initiator-utils   # Only if iSCSI connectivity is required\nyum -y install xfsprogs                # Only if XFS file system is required\n```\n#### 2. Configure Linux\u00ae multipath devices on the host.\n**Important:** Be sure to configure each worker with storage connectivity according to your storage system instructions.\nFor more information, find your storage system documentation on [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter).\n##### 2.1 Additional configuration steps for OpenShift\u00ae Container Platform users (RHEL and RHCOS). Other users can continue to step 3.\nDownload and save the following yaml file:\n```bash\ncurl https://raw.githubusercontent.com/IBM/ibm-block-csi-operator/master/deploy/99-ibm-attach.yaml > 99-ibm-attach.yaml\n```\nThis file can be used for both Fibre Channel and iSCSI configurations. To support iSCSI, uncomment the last two lines in the file.\n\n**Important:** The  `99-ibm-attach.yaml` configuration file overrides any files that already exist on your system. Only use this file if the files mentioned in the yaml below are not already created. If one or more have been created, edit this yaml file, as necessary.\n\nApply the yaml file.\n```bash\noc apply -f 99-ibm-attach.yaml\n```\n#### 3. If needed, enable support for volume snapshots (FlashCopy\u00ae function) on your Kubernetes cluster.\nFor more information and instructions, see the Kubernetes blog post, [Kubernetes 1.17 Feature: Kubernetes Volume Snapshot Moves to Beta](https://kubernetes.io/blog/2019/12/09/kubernetes-1-17-feature-cis-volume-snapshot-beta/).\n#### 4. Configure storage system connectivity\n##### 4.1. Define the hostname of each Kubernetes node on the relevant storage systems with the valid WWPN(for Fibre Channel) or IQN(for iSCSI) of the node.\n##### 4.2. For Fibre Channel, configure the relevant zoning from the storage to the host.\n## Installation\n### Install the operator\n#### 1. Download the manifest from GitHub.\n```bash\ncurl https://raw.githubusercontent.com/IBM/ibm-block-csi-operator/master/deploy/installer/generated/ibm-block-csi-operator.yaml > ibm-block-csi-operator.yaml\n```\n#### 2. (Optional): If required, update the image fields in the ibm-block-csi-operator.yaml.\n#### 3. Create a namespace.\n```bash\n$ kubectl create ns <namespace>\n```\n#### 4. Install the operator, while using a user-defined namespace.\n```bash\n$ kubectl -n <namespace> apply -f ibm-block-csi-operator.yaml\n```\n### Verify the operator is running:\n```bash\n$ kubectl get pod -l app.kubernetes.io/name=ibm-block-csi-operator -n <namespace>\nNAME                                    READY   STATUS    RESTARTS   AGE\nibm-block-csi-operator-5bb7996b86-xntss 1/1     Running   0          10m\n```\n### Create an IBMBlockCSI custom resource\n#### 1. Download the manifest from GitHub.\n```bash\ncurl https://raw.githubusercontent.com/IBM/ibm-block-csi-operator/master/deploy/crds/csi.ibm.com_v1_ibmblockcsi_cr.yaml > csi.ibm.com_v1_ibmblockcsi_cr.yaml\n```\n#### 2. (Optional): If required, update the image fields in the csi.ibm.com_v1_ibmblockcsi_cr.yaml.\n#### 3. Install the csi.ibm.com_v1_ibmblockcsi_cr.yaml.\n```bash\n$ kubectl -n <namespace> apply -f csi.ibm.com_v1_ibmblockcsi_cr.yaml\n```\n### Verify the driver is running:\n```bash\n$ kubectl get all -n <namespace>  -l csi\nNAME                             READY   STATUS    RESTARTS   AGE\npod/ibm-block-csi-controller-0   6/6     Running   0          9m36s\npod/ibm-block-csi-node-jvmvh     3/3     Running   0          9m36s\npod/ibm-block-csi-node-tsppw     3/3     Running   0          9m36s\nNAME                                DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE\ndaemonset.apps/ibm-block-csi-node   2         2         2       2            2           <none>          9m36s\nNAME                                        READY   AGE\nstatefulset.apps/ibm-block-csi-controller   1/1     9m36s\n```\n## Configuring k8s secret and storage class\nIn order to use the driver, create the relevant storage classes and secrets, as needed.\nThis section describes how to:\n 1. Create a storage system secret - to define the storage system credentials (user and password) and its address.\n 2. Configure the storage class - to define the storage system pool name, secret reference, `SpaceEfficiency`, and `fstype`.\n#### 1. Create an array secret\nCreate a secret file as follows `array-secret.yaml` and update the relevant credentials:\n```\nkind: Secret\napiVersion: v1\nmetadata:\n  name: <NAME>\n  namespace: <NAMESPACE>\ntype: Opaque\nstringData:\n  management_address: <ADDRESS-1, ADDRESS-2> # Array management addresses\n  username: <USERNAME>                   # Array username\ndata:\n  password: <PASSWORD base64>            # Array password\n```\nApply the secret:\n```\n$ kubectl apply -f array-secret.yaml\n```\nTo create the secret using a command line terminal, use the following command:\n```bash\nkubectl create secret generic <NAME> --from-literal=username=<USER> --fromliteral=password=<PASSWORD> --from-literal=management_address=<ARRAY_MGMT> -n <namespace>\n```\n#### 2. Create storage classes\nCreate a storage class `demo-storageclass-gold-pvc.yaml` file as follows, with the relevant capabilities, pool and, array secret.\nUse the `SpaceEfficiency` parameters for each storage system. These values are not case sensitive:\n* IBM FlashSystem A9000 and A9000R\n    * Always includes deduplication and compression.\n    No need to specify during configuration.\n* IBM Spectrum Virtualize Family\n    * `thick` (default value, if not specified)\n    * `thin`\n    * `compressed`\n    * `deduplicated`\n* IBM DS8000 Family\n    * `none` (default value, if not specified)\n    * `thin`\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: gold\nprovisioner: block.csi.ibm.com\nparameters:\n  SpaceEfficiency: <VALUE>          # Optional: Values applicable for Spectrum Virtualize Family are: thin, compressed, or deduplicated\n  pool: <POOL_NAME>\t                # DS8000 Family paramater is pool ID\n  csi.storage.k8s.io/provisioner-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/provisioner-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n  csi.storage.k8s.io/controller-publish-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/controller-publish-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n  csi.storage.k8s.io/controller-expand-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/controller-expand-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n  csi.storage.k8s.io/fstype: xfs    # Optional: Values ext4/xfs. The default is ext4.\n  volume_name_prefix: <prefix_name> # Optional: DS8000 Family maximum prefix length is 5 characters. Maximum prefix length for other systems is 20 characters.\nallowVolumeExpansion: true\n```\n#### 3. Apply the storage class:\n```bash\n$ kubectl apply -f demo-storageclass-gold-pvc.yaml\nstorageclass.storage.k8s.io/gold created\n```\n",
      "csv_display_name": "Operator for IBM block storage CSI driver",
      "csv_metadata_description": "Run IBM block storage CSI driver on OpenShift.",
      "csv_name": "ibm-block-csi-operator.v1.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:17:05.795000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "ibm-block-csi-operator",
      "provided_apis": [
        {
          "group": "csi.ibm.com",
          "kind": "IBMBlockCSI",
          "plural": "ibmblockcsis",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:db6864698ca0591cdea5e63d18955d2620db24608cb2d71ea952745e75a12f62",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:db6864698ca0591cdea5e63d18955d2620db24608cb2d71ea952745e75a12f62",
          "name": "ibm-block-csi-operator-db6864698ca0591cdea5e63d18955d2620db24608cb2d71ea952745e75a12f62-annotation"
        },
        {
          "digest": "sha256:db6864698ca0591cdea5e63d18955d2620db24608cb2d71ea952745e75a12f62",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:db6864698ca0591cdea5e63d18955d2620db24608cb2d71ea952745e75a12f62",
          "name": "ibm-block-csi-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.5.1",
      "version_original": "1.5.1"
    },
    {
      "_id": "60eaaeb2146e762beb225e0a",
      "alm_examples": [
        {
          "api_version": "csi.ibm.com/v1",
          "kind": "IBMBlockCSI",
          "metadata": {
            "name": "ibm-block-csi"
          },
          "spec": {
            "controller": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64",
                              "s390x"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-controller",
              "tag": "1.3.0"
            },
            "node": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64",
                              "s390x"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-node",
              "tag": "1.3.0"
            },
            "sidecars": [
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-node-driver-registrar",
                "repository": "registry.redhat.io/openshift4/ose-csi-driver-registrar",
                "tag": "v4.3"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-provisioner",
                "repository": "registry.redhat.io/openshift4/ose-csi-external-provisioner-rhel7",
                "tag": "v4.4"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-attacher",
                "repository": "registry.redhat.io/openshift4/ose-csi-external-attacher",
                "tag": "v4.4"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-snapshotter",
                "repository": "registry.redhat.io/openshift4/ose-csi-external-snapshotter-rhel7",
                "tag": "v4.4"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "livenessprobe",
                "repository": "registry.redhat.io/openshift4/ose-csi-livenessprobe",
                "tag": "v4.4"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/ibm-block-csi-operator-bundle@sha256:aa2f7b4b4b2d489cd9671b0b45d696ca2fcb8f76ad2b2551a06475917b9fdc99",
      "bundle_path_digest": "sha256:aa2f7b4b4b2d489cd9671b0b45d696ca2fcb8f76ad2b2551a06475917b9fdc99",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "maintenance-1.5",
      "creation_date": "2021-07-11T08:41:22.003000+00:00",
      "csv_description": "The Container Storage Interface (CSI) Driver for IBM block storage systems enables container orchestrators such as Kubernetes to manage the life cycle of persistent storage.\n\nThis is the official operator to deploy and manage IBM block storage CSI driver.\n\nSupported container platforms (and architectures):\n  - OpenShift v4.3 (IBM Z and IBM PowerPC)\n  - OpenShift v4.4 (x86 and IBM Z)\n  - OpenShift v4.5 (x86)\n  - Kubernetes v1.17 (x86)\n  - Kubernetes v1.18 (x86)\n\nSupported IBM storage systems:\n  - IBM Spectrum Virtualize Family including IBM SAN Volume Controller (SVC) and IBM FlashSystem\u00ae family members built with IBM Spectrum\u00ae Virtualize (FlashSystem 5010, 5030, 5100, 7200, 9100, 9200, 9200R)\n  - IBM FlashSystem A9000/R\n  - IBM DS8880\n  - IBM DS8900\n\nSupported operating systems (and architectures):\n  - RHEL 7.x (x86)\n  - RHCOS (x86, IBM Z, and IBM PowerPC)\n\nFull documentation can be found on the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSRQ8T).\n\n## Prerequisites\n> **Note**: The operator can be installed directly from the RedHat OpenShift web console, through the OperatorHub. The prerequisites below also mentioned and can be viewed via OpenShift.\n\n### Preparing worker nodes\nPerform these steps for each worker node in Kubernetes cluster:\n\n#### 1. Perform this step to ensure iSCSI connectivity, when using RHEL OS.\nIf using RHCOS or if the packages are already installed, continue to the next step.\n\nRHEL 7.x:\n```bash\nyum -y install iscsi-initiator-utils   # Only if iSCSI connectivity is required\nyum -y install xfsprogs                # Only if XFS file system is required\n```\n\n#### 2. Configure Linux multipath devices on the host, using one of the following procedures.\n\n##### 2.1 Configuring for OpenShift Container Platform users (RHEL and RHCOS)\n\nThe following yaml file example is for both Fibre Channel and iSCSI configurations. To support iSCSI, uncomment the last two lines in the file:\n\n\n**Important:** The  `99-ibm-attach.yaml` configuration file overrides any files that already exist on your system. Only use this file if the files mentioned in the yaml below are not already created. If one or more have been created, edit this yaml file, as necessary.\n\nSave the `99-ibm-attach.yaml` file.\n\n```bash\napiVersion: machineconfiguration.openshift.io/v1\nkind: MachineConfig\nmetadata:\nlabels:\nmachineconfiguration.openshift.io/role: worker\nname: 99-ibm-attach\nspec:\nconfig:\nignition:\nversion: 2.2.0\nstorage:\nfiles:\n- path: /etc/multipath.conf\nmode: 384\nfilesystem: root\ncontents:\nsource: data:,defaults%20%7B%0A%20%20%20%20path_checker%20tur%0A%20%20%20%20path_selector\n%20%22round-robin%200%22%0A%20%20%20%20rr_weight%20uniform%0A%20%20%20%20prio%20const%0A\n%20%20%20%20rr_min_io_rq%201%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20polling_interval\n%2030%0A%20%20%20%20path_grouping_policy%20multibus%0A%20%20%20%20find_multipaths%20yes%0A\n%20%20%20%20no_path_retry%20fail%0A%20%20%20%20user_friendly_names%20yes%0A%20%20%20%20failback\n%20immediate%0A%20%20%20%20checker_timeout%2010%0A%20%20%20%20fast_io_fail_tmo%20off%0A%7D%0A%0Adevices\n%20%7B%0A%20%20%20%20device%20%7B%0A%20%20%20%20%20%20%20%20path_checker%20tur%0A\n%20%20%20%20%20%20%20%20product%20%22FlashSystem%22%0A%20%20%20%20%20%20%20%20vendor%20%22IBM%22%0A\n%20%20%20%20%20%20%20%20rr_weight%20uniform%0A%20%20%20%20%20%20%20%20rr_min_io_rq\n%204%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20path_grouping_policy\n%20multibus%0A%20%20%20%20%20%20%20%20path_selector%20%22round-robin%200%22%0A\n%20%20%20%20%20%20%20%20no_path_retry%20fail%0A%20%20%20%20%20%20%20%20failback%20immediate%0A\n%20%20%20%20%7D%0A%20%20%20%20device%20%7B%0A%20%20%20%20%20%20%20%20path_checker%20tur%0A\n%20%20%20%20%20%20%20%20product%20%22FlashSystem-9840%22%0A%20%20%20%20%20%20%20%20vendor%20%22IBM%22%0A\n%20%20%20%20%20%20%20%20fast_io_fail_tmo%20off%0A%20%20%20%20%20%20%20%20rr_weight%20uniform%0A\n%20%20%20%20%20%20%20%20rr_min_io_rq%201000%20%20%20%20%20%20%20%20%20%20%20%20%0A\n%20%20%20%20%20%20%20%20path_grouping_policy%20multibus%0A%20%20%20%20%20%20%20%20path_selector\n%20%22round-robin%200%22%0A%20%20%20%20%20%20%20%20no_path_retry%20fail%0A\n%20%20%20%20%20%20%20%20failback%20immediate%0A%20%20%20%20%7D%0A%20%20%20%20device%20%7B%0A\n%20%20%20%20%20%20%20%20vendor%20%22IBM%22%0A%20%20%20%20%20%20%20%20product%20%222145%22%0A\n%20%20%20%20%20%20%20%20path_checker%20tur%0A%20%20%20%20%20%20%20%20features%20%221%20queue_if_no_path\n%22%0A%20%20%20%20%20%20%20%20path_grouping_policy%20group_by_prio%0A\n%20%20%20%20%20%20%20%20path_selector%20%22service-time%200%22%20%23%20Used%20by%20Red%20Hat%207.x%0A\n%20%20%20%20%20%20%20%20prio%20alua%0A%20%20%20%20%20%20%20%20rr_min_io_rq%201%0A\n%20%20%20%20%20%20%20%20rr_weight%20uniform%20%0A%20%20%20%20%20%20%20%20no_path_retry%20%225%22%0A\n%20%20%20%20%20%20%20%20dev_loss_tmo%20120%0A%20%20%20%20%20%20%20%20failback%20immediate%0A%20%20%20%7D\n%0A%7D%0A\nverification: {}\n- path: /etc/udev/rules.d/99-ibm-2145.rules\nmode: 420\nfilesystem: root\ncontents:\nsource: data:,%23%20Set%20SCSI%20command%20timeout%20to%20120s%20%28default%20%3D%3D\n%2030%20or%2060%29%20for%20IBM%202145%20devices%0ASUBSYSTEM%3D%3D%22block%22%2C%20ACTION%3D%3D%22add\n%22%2C%20ENV%7BID_VENDOR%7D%3D%3D%22IBM%22%2CENV%7BID_MODEL%7D%3D%3D%222145%22%2C%20RUN%2B%3D%22/bin/sh\n%20-c%20%27echo%20120%20%3E/sys/block/%25k/device/timeout%27%22%0A\nverification: {}\nsystemd:\nunits:\n- name: multipathd.service\nenabled: true\n# Uncomment the following lines if this MachineConfig will be used with iSCSI connectivity\n#- name: iscsid.service\n#    enabled: true\n```\n\nApply the yaml file.\n```bash\noc apply -f 99-ibm-attach.yaml\n```\n\nRHEL users should verify that the `systemctl status multipathd` output indicates that the multipath status is active and error-free.\n\n```bash\nyum install device-mapper-multipath\nmodprobe dm-multipath\nsystemctl enable multipathd\nsystemctl start multipathd\nsystemctl status multipathd\nmultipath -ll\n```\n\n##### 2.2 Configuring for Kubernetes users (RHEL)\nCreate and set the relevant storage system parameters in the `/etc/multipath.conf` file. You can also use the default `multipath.conf` file, located in the `/usr/share/doc/device-mapper-multipath-*` directory.\n\nVerify that the `systemctl status multipathd` output indicates that the multipath status is active and error-free.\n\n```bash\nyum install device-mapper-multipath\nmodprobe dm-multipath\nsystemctl enable multipathd\nsystemctl start multipathd\nsystemctl status multipathd\nmultipath -ll\n```\n\n#### 3. Configure storage system connectivity\n3.1. Define the hostname of each Kubernetes node on the relevant storage systems with the valid WWPN(for Fibre Channel) or IQN(for iSCSI) of the node.\n\n3.2. For Fibre Channel, configure the relevant zoning from the storage to the host.\n\n\n## Installation\n\n### Install the operator\n\n\n#### 1. Download the manifest from GitHub.\n\n```bash\ncurl https://raw.githubusercontent.com/IBM/ibm-block-csi-operator/master/deploy/installer/generated/ibm-block-csi-operator.yaml > ibm-block-csi-operator.yaml\n```\n\n#### 2. (Optional): If required, update the image fields in the ibm-block-csi-operator.yaml.\n\n\n#### 3. Create a namespace.\n\n```bash\n$ kubectl create ns <namespace>\n```\n\n#### 4. Install the operator, while using a user-defined namespace.\n\n```bash\n$ kubectl -n <namespace> apply -f ibm-block-csi-operator.yaml\n```\n\n### Verify the operator is running:\n\n```bash\n$ kubectl get pod -l app.kubernetes.io/name=ibm-block-csi-operator -n <namespace>\nNAME                                    READY   STATUS    RESTARTS   AGE\nibm-block-csi-operator-5bb7996b86-xntss 1/1     Running   0          10m\n```\n\n### Create an IBMBlockCSI custom resource\n\n\n#### 1. Download the manifest from GitHub.\n```bash\ncurl https://raw.githubusercontent.com/IBM/ibm-block-csi-operator/master/deploy/crds/csi.ibm.com_v1_ibmblockcsi_cr.yaml > csi.ibm.com_v1_ibmblockcsi_cr.yaml\n```\n\n#### 2. (Optional): If required, update the image fields in the csi.ibm.com_v1_ibmblockcsi_cr.yaml.\n\n#### 3. Install the csi.ibm.com_v1_ibmblockcsi_cr.yaml.\n\n```bash\n$ kubectl -n <namespace> apply -f csi.ibm.com_v1_ibmblockcsi_cr.yaml\n```\n\n### Verify the driver is running:\n\n```bash\n$ kubectl get all -n <namespace>  -l csi\nNAME                             READY   STATUS    RESTARTS   AGE\npod/ibm-block-csi-controller-0   5/5     Running   0          9m36s\npod/ibm-block-csi-node-jvmvh     3/3     Running   0          9m36s\npod/ibm-block-csi-node-tsppw     3/3     Running   0          9m36s\n\nNAME                                DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE\ndaemonset.apps/ibm-block-csi-node   2         2         2       2            2           <none>          9m36s\n\nNAME                                        READY   AGE\nstatefulset.apps/ibm-block-csi-controller   1/1     9m36s\n```\n\n\n## Configuring k8s secret and storage class\nIn order to use the driver, create the relevant storage classes and secrets, as needed.\n\nThis section describes how to:\n 1. Create a storage system secret - to define the storage system credentials (user and password) and its address.\n 2. Configure the storage class - to define the storage system pool name, secret reference, `SpaceEfficiency`, and `fstype`.\n\n#### 1. Create an array secret\nCreate a secret file as follows `array-secret.yaml` and update the relevant credentials:\n\n```\nkind: Secret\napiVersion: v1\nmetadata:\n  name: <NAME>\n  namespace: <NAMESPACE>\ntype: Opaque\nstringData:\n  management_address: <ADDRESS-1, ADDRESS-2> # Array management addresses\n  username: <USERNAME>                   # Array username\ndata:\n  password: <PASSWORD base64>            # Array password\n```\n\nApply the secret:\n\n```\n$ kubectl apply -f array-secret.yaml\n```\n\nTo create the secret using a command line terminal, use the following command:\n```bash\nkubectl create secret generic <NAME> --from-literal=username=<USER> --fromliteral=password=<PASSWORD> --from-literal=management_address=<ARRAY_MGMT> -n <namespace>\n```\n\n#### 2. Create storage classes\n\nCreate a storage class `demo-storageclass-gold-pvc.yaml` file as follows, with the relevant capabilities, pool and, array secret.\n\nUse the `SpaceEfficiency` parameters for each storage system. These values are not case sensitive:\n* IBM FlashSystem A9000 and A9000R\n    * Always includes deduplication and compression.\n    No need to specify during configuration.\n* IBM Spectrum Virtualize Family\n    * `thin`\n    * `compressed`\n    * `deduplicated`\n* IBM DS8000 Family\n    * `standard` (default value, if not specified)\n    * `thin`\n\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: gold\nprovisioner: block.csi.ibm.com\nparameters:\n  SpaceEfficiency: <VALUE>          # Optional: Values applicable for Spectrum Virtualize Family are: thin, compressed, or deduplicated\n  pool: <POOL_NAME>\t                # DS8000 Family paramater is pool ID\n\n  csi.storage.k8s.io/provisioner-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/provisioner-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n  csi.storage.k8s.io/controller-publish-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/controller-publish-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n\n  csi.storage.k8s.io/fstype: xfs    # Optional: Values ext4/xfs. The default is ext4.\n  volume_name_prefix: <prefix_name> # Optional: DS8000 Family maximum prefix length is 5 characters. Maximum prefix length for other systems is 20 characters.\n```\n\n#### 3. Apply the storage class:\n\n```bash\n$ kubectl apply -f demo-storageclass-gold-pvc.yaml\nstorageclass.storage.k8s.io/gold created\n```\n",
      "csv_display_name": "Operator for IBM block storage CSI driver",
      "csv_metadata_description": "Run IBM block storage CSI driver on OpenShift.",
      "csv_name": "ibm-block-csi-operator.v1.3.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:02:14.705000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "ibm-block-csi-operator",
      "provided_apis": [
        {
          "group": "csi.ibm.com",
          "kind": "IBMBlockCSI",
          "plural": "ibmblockcsis",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:427c6fcc36ba960887e4f15bda4870c287f1573dcbc844706d5f02987fc0d0dc",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:427c6fcc36ba960887e4f15bda4870c287f1573dcbc844706d5f02987fc0d0dc",
          "name": "ibm-block-csi-operator-427c6fcc36ba960887e4f15bda4870c287f1573dcbc844706d5f02987fc0d0dc-annotation"
        },
        {
          "digest": "sha256:427c6fcc36ba960887e4f15bda4870c287f1573dcbc844706d5f02987fc0d0dc",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:427c6fcc36ba960887e4f15bda4870c287f1573dcbc844706d5f02987fc0d0dc",
          "name": "ibm-block-csi-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.3.0",
      "version_original": "1.3.0"
    },
    {
      "_id": "60eaaec96814ca1184699843",
      "alm_examples": [
        {
          "api_version": "csi.ibm.com/v1",
          "kind": "IBMBlockCSI",
          "metadata": {
            "name": "ibm-block-csi"
          },
          "spec": {
            "controller": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64",
                              "s390x"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-controller",
              "tag": "1.5.1"
            },
            "node": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64",
                              "s390x"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-node",
              "tag": "1.5.1"
            },
            "sidecars": [
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-node-driver-registrar",
                "repository": "k8s.gcr.io/sig-storage/csi-node-driver-registrar",
                "tag": "v2.0.1"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-provisioner",
                "repository": "k8s.gcr.io/sig-storage/csi-provisioner",
                "tag": "v2.0.4"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-attacher",
                "repository": "k8s.gcr.io/sig-storage/csi-attacher",
                "tag": "v3.0.2"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-snapshotter",
                "repository": "k8s.gcr.io/sig-storage/csi-snapshotter",
                "tag": "v3.0.2"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-resizer",
                "repository": "k8s.gcr.io/sig-storage/csi-resizer",
                "tag": "v1.0.1"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "livenessprobe",
                "repository": "k8s.gcr.io/sig-storage/livenessprobe",
                "tag": "v2.1.0"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/ibm-block-csi-operator-bundle@sha256:247ae1d4a93986badc409e5840d4b45c78c41c712d338f12f7bae74a1a025a20",
      "bundle_path_digest": "sha256:247ae1d4a93986badc409e5840d4b45c78c41c712d338f12f7bae74a1a025a20",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "maintenance-1.5",
      "creation_date": "2021-07-11T08:41:45.122000+00:00",
      "csv_description": "The Container Storage Interface (CSI) Driver for IBM block storage systems enables container orchestrators such as Kubernetes to manage the life cycle of persistent storage.\nThis is the official operator to deploy and manage IBM block storage CSI driver.\nSupported container platforms (and architectures):\n  - OpenShift v4.6 (x86, IBM Z, and IBM Power Systems)\n  - OpenShift v4.7 (x86, IBM Z, and IBM Power Systems)\n  - Kubernetes v1.19 (x86)\n  - Kubernetes v1.20 (x86)\nSupported IBM storage systems:\n  - IBM Spectrum Virtualize Family including IBM SAN Volume Controller (SVC) and IBM FlashSystem\u00ae family members built with IBM Spectrum\u00ae Virtualize (FlashSystem 5010, 5030, 5100, 5200, 7200, 9100, 9200, 9200R)\n  - IBM FlashSystem A9000 and A9000R\n  - IBM DS8000 Family\nSupported operating systems (and architectures):\n  - RHEL 7.x (x86)\n  - RHCOS (x86, IBM Z, and IBM Power Systems)\nFull documentation can be found on the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSRQ8T).\n## Prerequisites\n> **Note**: The operator can be installed directly from the RedHat OpenShift web console, through the OperatorHub. The prerequisites below also mentioned and can be viewed via OpenShift.\n### Preparing worker nodes\nPerform these steps for each worker node in Kubernetes cluster:\n#### 1. Perform this step to ensure iSCSI connectivity, when using RHEL OS.\nIf using RHCOS or if the packages are already installed, continue to the next step.\nRHEL 7.x:\n```bash\nyum -y install iscsi-initiator-utils   # Only if iSCSI connectivity is required\nyum -y install xfsprogs                # Only if XFS file system is required\n```\n#### 2. Configure Linux\u00ae multipath devices on the host.\n**Important:** Be sure to configure each worker with storage connectivity according to your storage system instructions.\nFor more information, find your storage system documentation on [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter).\n##### 2.1 Additional configuration steps for OpenShift\u00ae Container Platform users (RHEL and RHCOS). Other users can continue to step 3.\nDownload and save the following yaml file:\n```bash\ncurl https://raw.githubusercontent.com/IBM/ibm-block-csi-operator/master/deploy/99-ibm-attach.yaml > 99-ibm-attach.yaml\n```\nThis file can be used for both Fibre Channel and iSCSI configurations. To support iSCSI, uncomment the last two lines in the file.\n\n**Important:** The  `99-ibm-attach.yaml` configuration file overrides any files that already exist on your system. Only use this file if the files mentioned in the yaml below are not already created. If one or more have been created, edit this yaml file, as necessary.\n\nApply the yaml file.\n```bash\noc apply -f 99-ibm-attach.yaml\n```\n#### 3. If needed, enable support for volume snapshots (FlashCopy\u00ae function) on your Kubernetes cluster.\nFor more information and instructions, see the Kubernetes blog post, [Kubernetes 1.17 Feature: Kubernetes Volume Snapshot Moves to Beta](https://kubernetes.io/blog/2019/12/09/kubernetes-1-17-feature-cis-volume-snapshot-beta/).\n#### 4. Configure storage system connectivity\n##### 4.1. Define the hostname of each Kubernetes node on the relevant storage systems with the valid WWPN(for Fibre Channel) or IQN(for iSCSI) of the node.\n##### 4.2. For Fibre Channel, configure the relevant zoning from the storage to the host.\n## Installation\n### Install the operator\n#### 1. Download the manifest from GitHub.\n```bash\ncurl https://raw.githubusercontent.com/IBM/ibm-block-csi-operator/master/deploy/installer/generated/ibm-block-csi-operator.yaml > ibm-block-csi-operator.yaml\n```\n#### 2. (Optional): If required, update the image fields in the ibm-block-csi-operator.yaml.\n#### 3. Create a namespace.\n```bash\n$ kubectl create ns <namespace>\n```\n#### 4. Install the operator, while using a user-defined namespace.\n```bash\n$ kubectl -n <namespace> apply -f ibm-block-csi-operator.yaml\n```\n### Verify the operator is running:\n```bash\n$ kubectl get pod -l app.kubernetes.io/name=ibm-block-csi-operator -n <namespace>\nNAME                                    READY   STATUS    RESTARTS   AGE\nibm-block-csi-operator-5bb7996b86-xntss 1/1     Running   0          10m\n```\n### Create an IBMBlockCSI custom resource\n#### 1. Download the manifest from GitHub.\n```bash\ncurl https://raw.githubusercontent.com/IBM/ibm-block-csi-operator/master/deploy/crds/csi.ibm.com_v1_ibmblockcsi_cr.yaml > csi.ibm.com_v1_ibmblockcsi_cr.yaml\n```\n#### 2. (Optional): If required, update the image fields in the csi.ibm.com_v1_ibmblockcsi_cr.yaml.\n#### 3. Install the csi.ibm.com_v1_ibmblockcsi_cr.yaml.\n```bash\n$ kubectl -n <namespace> apply -f csi.ibm.com_v1_ibmblockcsi_cr.yaml\n```\n### Verify the driver is running:\n```bash\n$ kubectl get all -n <namespace>  -l csi\nNAME                             READY   STATUS    RESTARTS   AGE\npod/ibm-block-csi-controller-0   6/6     Running   0          9m36s\npod/ibm-block-csi-node-jvmvh     3/3     Running   0          9m36s\npod/ibm-block-csi-node-tsppw     3/3     Running   0          9m36s\nNAME                                DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE\ndaemonset.apps/ibm-block-csi-node   2         2         2       2            2           <none>          9m36s\nNAME                                        READY   AGE\nstatefulset.apps/ibm-block-csi-controller   1/1     9m36s\n```\n## Configuring k8s secret and storage class\nIn order to use the driver, create the relevant storage classes and secrets, as needed.\nThis section describes how to:\n 1. Create a storage system secret - to define the storage system credentials (user and password) and its address.\n 2. Configure the storage class - to define the storage system pool name, secret reference, `SpaceEfficiency`, and `fstype`.\n#### 1. Create an array secret\nCreate a secret file as follows `array-secret.yaml` and update the relevant credentials:\n```\nkind: Secret\napiVersion: v1\nmetadata:\n  name: <NAME>\n  namespace: <NAMESPACE>\ntype: Opaque\nstringData:\n  management_address: <ADDRESS-1, ADDRESS-2> # Array management addresses\n  username: <USERNAME>                   # Array username\ndata:\n  password: <PASSWORD base64>            # Array password\n```\nApply the secret:\n```\n$ kubectl apply -f array-secret.yaml\n```\nTo create the secret using a command line terminal, use the following command:\n```bash\nkubectl create secret generic <NAME> --from-literal=username=<USER> --fromliteral=password=<PASSWORD> --from-literal=management_address=<ARRAY_MGMT> -n <namespace>\n```\n#### 2. Create storage classes\nCreate a storage class `demo-storageclass-gold-pvc.yaml` file as follows, with the relevant capabilities, pool and, array secret.\nUse the `SpaceEfficiency` parameters for each storage system. These values are not case sensitive:\n* IBM FlashSystem A9000 and A9000R\n    * Always includes deduplication and compression.\n    No need to specify during configuration.\n* IBM Spectrum Virtualize Family\n    * `thick` (default value, if not specified)\n    * `thin`\n    * `compressed`\n    * `deduplicated`\n* IBM DS8000 Family\n    * `none` (default value, if not specified)\n    * `thin`\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: gold\nprovisioner: block.csi.ibm.com\nparameters:\n  SpaceEfficiency: <VALUE>          # Optional: Values applicable for Spectrum Virtualize Family are: thin, compressed, or deduplicated\n  pool: <POOL_NAME>\t                # DS8000 Family paramater is pool ID\n  csi.storage.k8s.io/provisioner-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/provisioner-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n  csi.storage.k8s.io/controller-publish-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/controller-publish-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n  csi.storage.k8s.io/controller-expand-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/controller-expand-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n  csi.storage.k8s.io/fstype: xfs    # Optional: Values ext4/xfs. The default is ext4.\n  volume_name_prefix: <prefix_name> # Optional: DS8000 Family maximum prefix length is 5 characters. Maximum prefix length for other systems is 20 characters.\nallowVolumeExpansion: true\n```\n#### 3. Apply the storage class:\n```bash\n$ kubectl apply -f demo-storageclass-gold-pvc.yaml\nstorageclass.storage.k8s.io/gold created\n```\n",
      "csv_display_name": "Operator for IBM block storage CSI driver",
      "csv_metadata_description": "Run IBM block storage CSI driver on OpenShift.",
      "csv_name": "ibm-block-csi-operator.v1.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:05:56.143000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "ibm-block-csi-operator",
      "provided_apis": [
        {
          "group": "csi.ibm.com",
          "kind": "IBMBlockCSI",
          "plural": "ibmblockcsis",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:db6864698ca0591cdea5e63d18955d2620db24608cb2d71ea952745e75a12f62",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:db6864698ca0591cdea5e63d18955d2620db24608cb2d71ea952745e75a12f62",
          "name": "ibm-block-csi-operator-db6864698ca0591cdea5e63d18955d2620db24608cb2d71ea952745e75a12f62-annotation"
        },
        {
          "digest": "sha256:db6864698ca0591cdea5e63d18955d2620db24608cb2d71ea952745e75a12f62",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:db6864698ca0591cdea5e63d18955d2620db24608cb2d71ea952745e75a12f62",
          "name": "ibm-block-csi-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.5.1",
      "version_original": "1.5.1"
    },
    {
      "_id": "60eaaf1aba43af88444a4032",
      "alm_examples": [
        {
          "api_version": "csi.ibm.com/v1",
          "kind": "IBMBlockCSI",
          "metadata": {
            "name": "ibm-block-csi"
          },
          "spec": {
            "controller": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64",
                              "s390x"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-controller",
              "tag": "1.5.0"
            },
            "node": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64",
                              "s390x"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-node",
              "tag": "1.5.0"
            },
            "sidecars": [
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-node-driver-registrar",
                "repository": "k8s.gcr.io/sig-storage/csi-node-driver-registrar",
                "tag": "v2.0.1"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-provisioner",
                "repository": "k8s.gcr.io/sig-storage/csi-provisioner",
                "tag": "v2.0.4"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-attacher",
                "repository": "k8s.gcr.io/sig-storage/csi-attacher",
                "tag": "v3.0.2"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-snapshotter",
                "repository": "k8s.gcr.io/sig-storage/csi-snapshotter",
                "tag": "v3.0.2"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-resizer",
                "repository": "k8s.gcr.io/sig-storage/csi-resizer",
                "tag": "v1.0.1"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "livenessprobe",
                "repository": "k8s.gcr.io/sig-storage/livenessprobe",
                "tag": "v2.1.0"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/ibm-block-csi-operator-bundle@sha256:4e6b7b6006f6ad537b75fb681805003d4873230ef2706cab3333c4567502361c",
      "bundle_path_digest": "sha256:4e6b7b6006f6ad537b75fb681805003d4873230ef2706cab3333c4567502361c",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "maintenance-1.5",
      "creation_date": "2021-07-11T08:43:06.133000+00:00",
      "csv_description": "The Container Storage Interface (CSI) Driver for IBM block storage systems enables container orchestrators such as Kubernetes to manage the life cycle of persistent storage.\nThis is the official operator to deploy and manage IBM block storage CSI driver.\nSupported container platforms (and architectures):\n  - OpenShift v4.4 (x86, IBM Z, and IBM PowerPC)\n  - OpenShift v4.5 (x86, IBM Z, and IBM PowerPC)\n  - Kubernetes v1.18 (x86)\n  - Kubernetes v1.19 (x86)\nSupported IBM storage systems:\n  - IBM Spectrum Virtualize Family including IBM SAN Volume Controller (SVC) and IBM FlashSystem\u00ae family members built with IBM Spectrum\u00ae Virtualize (FlashSystem 5010, 5030, 5100, 7200, 9100, 9200, 9200R)\n  - IBM FlashSystem A9000 and A9000R\n  - IBM DS8000 Family\nSupported operating systems (and architectures):\n  - RHEL 7.x (x86)\n  - RHCOS (x86, IBM Z, and IBM PowerPC)\nFull documentation can be found on the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSRQ8T).\n## Prerequisites\n> **Note**: The operator can be installed directly from the RedHat OpenShift web console, through the OperatorHub. The prerequisites below also mentioned and can be viewed via OpenShift.\n### Preparing worker nodes\nPerform these steps for each worker node in Kubernetes cluster:\n#### 1. Perform this step to ensure iSCSI connectivity, when using RHEL OS.\nIf using RHCOS or if the packages are already installed, continue to the next step.\nRHEL 7.x:\n```bash\nyum -y install iscsi-initiator-utils   # Only if iSCSI connectivity is required\nyum -y install xfsprogs                # Only if XFS file system is required\n```\n#### 2. Configure Linux\u00ae multipath devices on the host.\n**Important:** Be sure to configure each worker with storage connectivity according to your storage system instructions.\nFor more information, find your storage system documentation on [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter).\n##### 2.1 Additional configuration steps for OpenShift\u00ae Container Platform users (RHEL and RHCOS). Other users can continue to step 3.\nThe following yaml file example is for both Fibre Channel and iSCSI configurations. To support iSCSI, uncomment the last two lines in the file:\n**Important:** The  `99-ibm-attach.yaml` configuration file overrides any files that already exist on your system. Only use this file if the files mentioned in the yaml below are not already created. If one or more have been created, edit this yaml file, as necessary.\nSave the `99-ibm-attach.yaml` file.\n```bash\napiVersion: machineconfiguration.openshift.io/v1\nkind: MachineConfig\nmetadata:\nlabels:\nmachineconfiguration.openshift.io/role: worker\nname: 99-ibm-attach\nspec:\nconfig:\nignition:\nversion: 2.2.0\nstorage:\nfiles:\n- path: /etc/multipath.conf\nmode: 384\nfilesystem: root\ncontents:\nsource: data:,defaults%20%7B%0A%20%20%20%20path_checker%20tur%0A%20%20%20%20path_selector\n%20%22round-robin%200%22%0A%20%20%20%20rr_weight%20uniform%0A%20%20%20%20prio%20const%0A\n%20%20%20%20rr_min_io_rq%201%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20polling_interval\n%2030%0A%20%20%20%20path_grouping_policy%20multibus%0A%20%20%20%20find_multipaths%20yes%0A\n%20%20%20%20no_path_retry%20fail%0A%20%20%20%20user_friendly_names%20yes%0A%20%20%20%20failback\n%20immediate%0A%20%20%20%20checker_timeout%2010%0A%20%20%20%20fast_io_fail_tmo%20off%0A%7D%0A%0Adevices\n%20%7B%0A%20%20%20%20device%20%7B%0A%20%20%20%20%20%20%20%20path_checker%20tur%0A\n%20%20%20%20%20%20%20%20product%20%22FlashSystem%22%0A%20%20%20%20%20%20%20%20vendor%20%22IBM%22%0A\n%20%20%20%20%20%20%20%20rr_weight%20uniform%0A%20%20%20%20%20%20%20%20rr_min_io_rq\n%204%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20path_grouping_policy\n%20multibus%0A%20%20%20%20%20%20%20%20path_selector%20%22round-robin%200%22%0A\n%20%20%20%20%20%20%20%20no_path_retry%20fail%0A%20%20%20%20%20%20%20%20failback%20immediate%0A\n%20%20%20%20%7D%0A%20%20%20%20device%20%7B%0A%20%20%20%20%20%20%20%20path_checker%20tur%0A\n%20%20%20%20%20%20%20%20product%20%22FlashSystem-9840%22%0A%20%20%20%20%20%20%20%20vendor%20%22IBM%22%0A\n%20%20%20%20%20%20%20%20fast_io_fail_tmo%20off%0A%20%20%20%20%20%20%20%20rr_weight%20uniform%0A\n%20%20%20%20%20%20%20%20rr_min_io_rq%201000%20%20%20%20%20%20%20%20%20%20%20%20%0A\n%20%20%20%20%20%20%20%20path_grouping_policy%20multibus%0A%20%20%20%20%20%20%20%20path_selector\n%20%22round-robin%200%22%0A%20%20%20%20%20%20%20%20no_path_retry%20fail%0A\n%20%20%20%20%20%20%20%20failback%20immediate%0A%20%20%20%20%7D%0A%20%20%20%20device%20%7B%0A\n%20%20%20%20%20%20%20%20vendor%20%22IBM%22%0A%20%20%20%20%20%20%20%20product%20%222145%22%0A\n%20%20%20%20%20%20%20%20path_checker%20tur%0A%20%20%20%20%20%20%20%20features%20%221%20queue_if_no_path\n%22%0A%20%20%20%20%20%20%20%20path_grouping_policy%20group_by_prio%0A\n%20%20%20%20%20%20%20%20path_selector%20%22service-time%200%22%20%23%20Used%20by%20Red%20Hat%207.x%0A\n%20%20%20%20%20%20%20%20prio%20alua%0A%20%20%20%20%20%20%20%20rr_min_io_rq%201%0A\n%20%20%20%20%20%20%20%20rr_weight%20uniform%20%0A%20%20%20%20%20%20%20%20no_path_retry%20%225%22%0A\n%20%20%20%20%20%20%20%20dev_loss_tmo%20120%0A%20%20%20%20%20%20%20%20failback%20immediate%0A%20%20%20%7D\n%0A%7D%0A\nverification: {}\n- path: /etc/udev/rules.d/99-ibm-2145.rules\nmode: 420\nfilesystem: root\ncontents:\nsource: data:,%23%20Set%20SCSI%20command%20timeout%20to%20120s%20%28default%20%3D%3D\n%2030%20or%2060%29%20for%20IBM%202145%20devices%0ASUBSYSTEM%3D%3D%22block%22%2C%20ACTION%3D%3D%22add\n%22%2C%20ENV%7BID_VENDOR%7D%3D%3D%22IBM%22%2CENV%7BID_MODEL%7D%3D%3D%222145%22%2C%20RUN%2B%3D%22/bin/sh\n%20-c%20%27echo%20120%20%3E/sys/block/%25k/device/timeout%27%22%0A\nverification: {}\nsystemd:\nunits:\n- name: multipathd.service\nenabled: true\n# Uncomment the following lines if this MachineConfig will be used with iSCSI connectivity\n#- name: iscsid.service\n#    enabled: true\n```\nApply the yaml file.\n```bash\noc apply -f 99-ibm-attach.yaml\n```\n#### 3. If needed, enable support for volume snapshots (FlashCopy\u00ae function) on your Kubernetes cluster.\nFor more information and instructions, see the Kubernetes blog post, [Kubernetes 1.17 Feature: Kubernetes Volume Snapshot Moves to Beta](https://kubernetes.io/blog/2019/12/09/kubernetes-1-17-feature-cis-volume-snapshot-beta/).\n#### 4. Configure storage system connectivity\n##### 4.1. Define the hostname of each Kubernetes node on the relevant storage systems with the valid WWPN(for Fibre Channel) or IQN(for iSCSI) of the node.\n##### 4.2. For Fibre Channel, configure the relevant zoning from the storage to the host.\n## Installation\n### Install the operator\n#### 1. Download the manifest from GitHub.\n```bash\ncurl https://raw.githubusercontent.com/IBM/ibm-block-csi-operator/master/deploy/installer/generated/ibm-block-csi-operator.yaml > ibm-block-csi-operator.yaml\n```\n#### 2. (Optional): If required, update the image fields in the ibm-block-csi-operator.yaml.\n#### 3. Create a namespace.\n```bash\n$ kubectl create ns <namespace>\n```\n#### 4. Install the operator, while using a user-defined namespace.\n```bash\n$ kubectl -n <namespace> apply -f ibm-block-csi-operator.yaml\n```\n### Verify the operator is running:\n```bash\n$ kubectl get pod -l app.kubernetes.io/name=ibm-block-csi-operator -n <namespace>\nNAME                                    READY   STATUS    RESTARTS   AGE\nibm-block-csi-operator-5bb7996b86-xntss 1/1     Running   0          10m\n```\n### Create an IBMBlockCSI custom resource\n#### 1. Download the manifest from GitHub.\n```bash\ncurl https://raw.githubusercontent.com/IBM/ibm-block-csi-operator/master/deploy/crds/csi.ibm.com_v1_ibmblockcsi_cr.yaml > csi.ibm.com_v1_ibmblockcsi_cr.yaml\n```\n#### 2. (Optional): If required, update the image fields in the csi.ibm.com_v1_ibmblockcsi_cr.yaml.\n#### 3. Install the csi.ibm.com_v1_ibmblockcsi_cr.yaml.\n```bash\n$ kubectl -n <namespace> apply -f csi.ibm.com_v1_ibmblockcsi_cr.yaml\n```\n### Verify the driver is running:\n```bash\n$ kubectl get all -n <namespace>  -l csi\nNAME                             READY   STATUS    RESTARTS   AGE\npod/ibm-block-csi-controller-0   6/6     Running   0          9m36s\npod/ibm-block-csi-node-jvmvh     3/3     Running   0          9m36s\npod/ibm-block-csi-node-tsppw     3/3     Running   0          9m36s\nNAME                                DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE\ndaemonset.apps/ibm-block-csi-node   2         2         2       2            2           <none>          9m36s\nNAME                                        READY   AGE\nstatefulset.apps/ibm-block-csi-controller   1/1     9m36s\n```\n## Configuring k8s secret and storage class\nIn order to use the driver, create the relevant storage classes and secrets, as needed.\nThis section describes how to:\n 1. Create a storage system secret - to define the storage system credentials (user and password) and its address.\n 2. Configure the storage class - to define the storage system pool name, secret reference, `SpaceEfficiency`, and `fstype`.\n#### 1. Create an array secret\nCreate a secret file as follows `array-secret.yaml` and update the relevant credentials:\n```\nkind: Secret\napiVersion: v1\nmetadata:\n  name: <NAME>\n  namespace: <NAMESPACE>\ntype: Opaque\nstringData:\n  management_address: <ADDRESS-1, ADDRESS-2> # Array management addresses\n  username: <USERNAME>                   # Array username\ndata:\n  password: <PASSWORD base64>            # Array password\n```\nApply the secret:\n```\n$ kubectl apply -f array-secret.yaml\n```\nTo create the secret using a command line terminal, use the following command:\n```bash\nkubectl create secret generic <NAME> --from-literal=username=<USER> --fromliteral=password=<PASSWORD> --from-literal=management_address=<ARRAY_MGMT> -n <namespace>\n```\n#### 2. Create storage classes\nCreate a storage class `demo-storageclass-gold-pvc.yaml` file as follows, with the relevant capabilities, pool and, array secret.\nUse the `SpaceEfficiency` parameters for each storage system. These values are not case sensitive:\n* IBM FlashSystem A9000 and A9000R\n    * Always includes deduplication and compression.\n    No need to specify during configuration.\n* IBM Spectrum Virtualize Family\n    * `thick` (default value, if not specified)\n    * `thin`\n    * `compressed`\n    * `deduplicated`\n* IBM DS8000 Family\n    * `none` (default value, if not specified)\n    * `thin`\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: gold\nprovisioner: block.csi.ibm.com\nparameters:\n  SpaceEfficiency: <VALUE>          # Optional: Values applicable for Spectrum Virtualize Family are: thin, compressed, or deduplicated\n  pool: <POOL_NAME>\t                # DS8000 Family paramater is pool ID\n  csi.storage.k8s.io/provisioner-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/provisioner-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n  csi.storage.k8s.io/controller-publish-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/controller-publish-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n  csi.storage.k8s.io/controller-expand-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/controller-expand-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n  csi.storage.k8s.io/fstype: xfs    # Optional: Values ext4/xfs. The default is ext4.\n  volume_name_prefix: <prefix_name> # Optional: DS8000 Family maximum prefix length is 5 characters. Maximum prefix length for other systems is 20 characters.\nallowVolumeExpansion: true\n```\n#### 3. Apply the storage class:\n```bash\n$ kubectl apply -f demo-storageclass-gold-pvc.yaml\nstorageclass.storage.k8s.io/gold created\n```\n",
      "csv_display_name": "Operator for IBM block storage CSI driver",
      "csv_metadata_description": "Run IBM block storage CSI driver on OpenShift.",
      "csv_name": "ibm-block-csi-operator.v1.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:13:27.747000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "ibm-block-csi-operator",
      "provided_apis": [
        {
          "group": "csi.ibm.com",
          "kind": "IBMBlockCSI",
          "plural": "ibmblockcsis",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3fb101666d54174dbee133a726fdfcb569a30605f2d93d6fa26731583125ae84",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:3fb101666d54174dbee133a726fdfcb569a30605f2d93d6fa26731583125ae84",
          "name": "ibm-block-csi-operator-3fb101666d54174dbee133a726fdfcb569a30605f2d93d6fa26731583125ae84-annotation"
        },
        {
          "digest": "sha256:3fb101666d54174dbee133a726fdfcb569a30605f2d93d6fa26731583125ae84",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:3fb101666d54174dbee133a726fdfcb569a30605f2d93d6fa26731583125ae84",
          "name": "ibm-block-csi-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.5.0",
      "version_original": "1.5.0"
    },
    {
      "_id": "60ec45f38ce8053fa514be5d",
      "alm_examples": [
        {
          "api_version": "intel.com/v1alpha1",
          "kind": "ModelServer",
          "metadata": {
            "name": "model-server-sample"
          },
          "spec": {
            "annotations": {},
            "aws_access_key_id": "",
            "aws_region": "",
            "aws_secret_access_key": "",
            "batch#": "",
            "config_configmap_name": "",
            "file_system_poll_wait_seconds": 0,
            "gcp_creds_secret_name": "",
            "grpc_port": 8080,
            "https_proxy": "",
            "image_name": "registry.connect.redhat.com/intel/openvino-model-server@sha256:4ee88853cd8361e9d0a3461ad552f79c14f22406f1e32c8cbbb9341ae9780671",
            "log_level": "INFO",
            "model_name": "resnet",
            "model_path": "gs://ovms-public-eu/resnet50-binary",
            "model_version_policy": "{\\\"latest\\\": { \\\"num_versions\\\":1 }}",
            "models_host_path": "",
            "models_volume_claim": "",
            "nireq": "",
            "plugin_config": "{\\\"CPU_THROUGHPUT_STREAMS\\\":\\\"1\\\"}",
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": 4,
                "memory": "250Mi"
              }
            },
            "rest_port": 8081,
            "s3_compat_api_endpoint": "",
            "security_context": {},
            "service_type": "ClusterIP",
            "shape": "",
            "target_device": "CPU"
          }
        },
        {
          "api_version": "intel.com/v1alpha1",
          "kind": "Notebook",
          "metadata": {
            "name": "openvino-notebook"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/ovms-operator-bundle@sha256:2b863f5777ba23d8ea38f23b6a9c974e87c282bf85acb4a8c1746bd51453937b",
      "bundle_path_digest": "sha256:2b863f5777ba23d8ea38f23b6a9c974e87c282bf85acb4a8c1746bd51453937b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-07-12T13:38:59.340000+00:00",
      "csv_description": "OpenVINO Toolkit Operator manages OpenVINO components in OpenShift.\n\nCurrently there are components ModelServer and Notebook.\n\n# Model Server\n[OpenVINO\u2122 Model Server](https://github.com/openvinotoolkit/model_server) (OVMS) is a scalable, high-performance solution for serving machine learning models optimized for Intel\u00ae architectures. The server provides an inference service via gRPC or REST API - making it easy to deploy new algorithms and AI experiments using the same architecture as [TensorFlow Serving](https://github.com/tensorflow/serving) for any models trained in a framework that is supported by [OpenVINO](https://software.intel.com/en-us/openvino-toolkit).\nModel Server configuration is identical with a [Helm chart](https://github.com/openvinotoolkit/model_server/tree/main/deploy) for OVMS. It supports all the parameters from the helm chart.\n## Using the cluster\nOpenVINO Model Server can be consumed as a `Service`. It is called like with `ModelServer` resource with `-ovms` suffix.\nThe suffix is ommited when `ovms` phrase is included in the name.\nThe service exposes gRPC and REST API interfaces to run inference requests.\n```\noc get pods\nNAME                                        READY   STATUS    RESTARTS   AGE\nmodel-server-sample-ovms-586f6f76df-dpps4   1/1     Running   0          8h\n\noc get services\nNAME                       TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)             AGE\nmodel-server-sample-ovms   ClusterIP   172.25.199.210   <none>        8080/TCP,8081/TCP   8h\n```\n## Before you start\nDepending on the deployment configuration there might be pre-requisites for additional records to be created in the cluster. \n## References\nOpenVINO Model Server on [Github](https://github.com/openvinotoolkit/model_server/tree/main/extras/openvino-operator-openshift)\n\n# Notebook\nThe Notebook resource integrates JupyterHub from OpenShift Data Science or Open Data Hub with a container image that includes [developer\ntools](https://github.com/openvinotoolkit/openvino/blob/master/docs/install_guides/pypi-openvino-dev.md)\nfrom the OpenVINO toolkit and a set of Jupyter notebook tutorials. It enables selecting a defined image `openvino-notebook` from\nthe Jupyter Spawner drop-down menu.\n\nCreate the `Notebook` resource in the same project with JupyterHub and RedHat OpenShift Data Science operator.\nIt builds the image in the cluster based on Dockerfile from [openvino_notebooks](https://github.com/openvinotoolkit/openvino_notebooks).\n",
      "csv_display_name": "OpenVINO Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "openvino-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:23:33.964000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "ovms-operator",
      "provided_apis": [
        {
          "group": "intel.com",
          "kind": "ModelServer",
          "plural": "modelservers",
          "version": "v1alpha1"
        },
        {
          "group": "intel.com",
          "kind": "Notebook",
          "plural": "notebooks",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:6d0286b8a8f6f3cd9d6cd8319400acf27b70fbb52df5808ec6fe2d9849be7d8c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6d0286b8a8f6f3cd9d6cd8319400acf27b70fbb52df5808ec6fe2d9849be7d8c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8385d6de20d1e59a931c44f6a785b53c96495833756f8ed07602f9ac54d62eb4",
          "image": "registry.connect.redhat.com/intel/ovms-operator@sha256:8385d6de20d1e59a931c44f6a785b53c96495833756f8ed07602f9ac54d62eb4",
          "name": "manager"
        },
        {
          "digest": "sha256:4ee88853cd8361e9d0a3461ad552f79c14f22406f1e32c8cbbb9341ae9780671",
          "image": "registry.connect.redhat.com/intel/openvino-model-server@sha256:4ee88853cd8361e9d0a3461ad552f79c14f22406f1e32c8cbbb9341ae9780671",
          "name": "openvino-model-server-4ee88853cd8361e9d0a3461ad552f79c14f22406f1e32c8cbbb9341ae9780671-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.2.0",
      "version_original": "0.2.0"
    },
    {
      "_id": "60ec46a86814ca1184699887",
      "alm_examples": [
        {
          "api_version": "intel.com/v1alpha1",
          "kind": "ModelServer",
          "metadata": {
            "name": "model-server-sample"
          },
          "spec": {
            "annotations": {},
            "aws_access_key_id": "",
            "aws_region": "",
            "aws_secret_access_key": "",
            "batch#": "",
            "config_configmap_name": "",
            "file_system_poll_wait_seconds": 0,
            "gcp_creds_secret_name": "",
            "grpc_port": 8080,
            "https_proxy": "",
            "image_name": "registry.connect.redhat.com/intel/openvino-model-server@sha256:4ee88853cd8361e9d0a3461ad552f79c14f22406f1e32c8cbbb9341ae9780671",
            "log_level": "INFO",
            "model_name": "resnet",
            "model_path": "gs://ovms-public-eu/resnet50-binary",
            "model_version_policy": "{\\\"latest\\\": { \\\"num_versions\\\":1 }}",
            "models_host_path": "",
            "models_volume_claim": "",
            "nireq": "",
            "plugin_config": "{\\\"CPU_THROUGHPUT_STREAMS\\\":\\\"1\\\"}",
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": 4,
                "memory": "250Mi"
              }
            },
            "rest_port": 8081,
            "s3_compat_api_endpoint": "",
            "security_context": {},
            "service_type": "ClusterIP",
            "shape": "",
            "target_device": "CPU"
          }
        },
        {
          "api_version": "intel.com/v1alpha1",
          "kind": "Notebook",
          "metadata": {
            "name": "openvino-notebook"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/ovms-operator-bundle@sha256:2b863f5777ba23d8ea38f23b6a9c974e87c282bf85acb4a8c1746bd51453937b",
      "bundle_path_digest": "sha256:2b863f5777ba23d8ea38f23b6a9c974e87c282bf85acb4a8c1746bd51453937b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-07-12T13:42:00.574000+00:00",
      "csv_description": "OpenVINO Toolkit Operator manages OpenVINO components in OpenShift.\n\nCurrently there are components ModelServer and Notebook.\n\n# Model Server\n[OpenVINO\u2122 Model Server](https://github.com/openvinotoolkit/model_server) (OVMS) is a scalable, high-performance solution for serving machine learning models optimized for Intel\u00ae architectures. The server provides an inference service via gRPC or REST API - making it easy to deploy new algorithms and AI experiments using the same architecture as [TensorFlow Serving](https://github.com/tensorflow/serving) for any models trained in a framework that is supported by [OpenVINO](https://software.intel.com/en-us/openvino-toolkit).\nModel Server configuration is identical with a [Helm chart](https://github.com/openvinotoolkit/model_server/tree/main/deploy) for OVMS. It supports all the parameters from the helm chart.\n## Using the cluster\nOpenVINO Model Server can be consumed as a `Service`. It is called like with `ModelServer` resource with `-ovms` suffix.\nThe suffix is ommited when `ovms` phrase is included in the name.\nThe service exposes gRPC and REST API interfaces to run inference requests.\n```\noc get pods\nNAME                                        READY   STATUS    RESTARTS   AGE\nmodel-server-sample-ovms-586f6f76df-dpps4   1/1     Running   0          8h\n\noc get services\nNAME                       TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)             AGE\nmodel-server-sample-ovms   ClusterIP   172.25.199.210   <none>        8080/TCP,8081/TCP   8h\n```\n## Before you start\nDepending on the deployment configuration there might be pre-requisites for additional records to be created in the cluster. \n## References\nOpenVINO Model Server on [Github](https://github.com/openvinotoolkit/model_server/tree/main/extras/openvino-operator-openshift)\n\n# Notebook\nThe Notebook resource integrates JupyterHub from OpenShift Data Science or Open Data Hub with a container image that includes [developer\ntools](https://github.com/openvinotoolkit/openvino/blob/master/docs/install_guides/pypi-openvino-dev.md)\nfrom the OpenVINO toolkit and a set of Jupyter notebook tutorials. It enables selecting a defined image `openvino-notebook` from\nthe Jupyter Spawner drop-down menu.\n\nCreate the `Notebook` resource in the same project with JupyterHub and RedHat OpenShift Data Science operator.\nIt builds the image in the cluster based on Dockerfile from [openvino_notebooks](https://github.com/openvinotoolkit/openvino_notebooks).\n",
      "csv_display_name": "OpenVINO Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "openvino-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:16:54.799000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "ovms-operator",
      "provided_apis": [
        {
          "group": "intel.com",
          "kind": "Notebook",
          "plural": "notebooks",
          "version": "v1alpha1"
        },
        {
          "group": "intel.com",
          "kind": "ModelServer",
          "plural": "modelservers",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:6d0286b8a8f6f3cd9d6cd8319400acf27b70fbb52df5808ec6fe2d9849be7d8c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6d0286b8a8f6f3cd9d6cd8319400acf27b70fbb52df5808ec6fe2d9849be7d8c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8385d6de20d1e59a931c44f6a785b53c96495833756f8ed07602f9ac54d62eb4",
          "image": "registry.connect.redhat.com/intel/ovms-operator@sha256:8385d6de20d1e59a931c44f6a785b53c96495833756f8ed07602f9ac54d62eb4",
          "name": "manager"
        },
        {
          "digest": "sha256:4ee88853cd8361e9d0a3461ad552f79c14f22406f1e32c8cbbb9341ae9780671",
          "image": "registry.connect.redhat.com/intel/openvino-model-server@sha256:4ee88853cd8361e9d0a3461ad552f79c14f22406f1e32c8cbbb9341ae9780671",
          "name": "openvino-model-server-4ee88853cd8361e9d0a3461ad552f79c14f22406f1e32c8cbbb9341ae9780671-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.2.0",
      "version_original": "0.2.0"
    },
    {
      "_id": "60ec4bf96814ca1184699888",
      "alm_examples": [
        {
          "api_version": "intel.com/v1alpha1",
          "kind": "ModelServer",
          "metadata": {
            "name": "model-server-sample"
          },
          "spec": {
            "annotations": {},
            "aws_access_key_id": "",
            "aws_region": "",
            "aws_secret_access_key": "",
            "batch#": "",
            "config_configmap_name": "",
            "file_system_poll_wait_seconds": 0,
            "gcp_creds_secret_name": "",
            "grpc_port": 8080,
            "https_proxy": "",
            "image_name": "registry.connect.redhat.com/intel/openvino-model-server@sha256:4ee88853cd8361e9d0a3461ad552f79c14f22406f1e32c8cbbb9341ae9780671",
            "log_level": "INFO",
            "model_name": "resnet",
            "model_path": "gs://ovms-public-eu/resnet50-binary",
            "model_version_policy": "{\\\"latest\\\": { \\\"num_versions\\\":1 }}",
            "models_host_path": "",
            "models_volume_claim": "",
            "nireq": "",
            "plugin_config": "{\\\"CPU_THROUGHPUT_STREAMS\\\":\\\"1\\\"}",
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": 4,
                "memory": "250Mi"
              }
            },
            "rest_port": 8081,
            "s3_compat_api_endpoint": "",
            "security_context": {},
            "service_type": "ClusterIP",
            "shape": "",
            "target_device": "CPU"
          }
        },
        {
          "api_version": "intel.com/v1alpha1",
          "kind": "Notebook",
          "metadata": {
            "name": "openvino-notebook"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/ovms-operator-bundle@sha256:2b863f5777ba23d8ea38f23b6a9c974e87c282bf85acb4a8c1746bd51453937b",
      "bundle_path_digest": "sha256:2b863f5777ba23d8ea38f23b6a9c974e87c282bf85acb4a8c1746bd51453937b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-07-12T14:04:41.320000+00:00",
      "csv_description": "OpenVINO Toolkit Operator manages OpenVINO components in OpenShift.\n\nCurrently there are components ModelServer and Notebook.\n\n# Model Server\n[OpenVINO\u2122 Model Server](https://github.com/openvinotoolkit/model_server) (OVMS) is a scalable, high-performance solution for serving machine learning models optimized for Intel\u00ae architectures. The server provides an inference service via gRPC or REST API - making it easy to deploy new algorithms and AI experiments using the same architecture as [TensorFlow Serving](https://github.com/tensorflow/serving) for any models trained in a framework that is supported by [OpenVINO](https://software.intel.com/en-us/openvino-toolkit).\nModel Server configuration is identical with a [Helm chart](https://github.com/openvinotoolkit/model_server/tree/main/deploy) for OVMS. It supports all the parameters from the helm chart.\n## Using the cluster\nOpenVINO Model Server can be consumed as a `Service`. It is called like with `ModelServer` resource with `-ovms` suffix.\nThe suffix is ommited when `ovms` phrase is included in the name.\nThe service exposes gRPC and REST API interfaces to run inference requests.\n```\noc get pods\nNAME                                        READY   STATUS    RESTARTS   AGE\nmodel-server-sample-ovms-586f6f76df-dpps4   1/1     Running   0          8h\n\noc get services\nNAME                       TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)             AGE\nmodel-server-sample-ovms   ClusterIP   172.25.199.210   <none>        8080/TCP,8081/TCP   8h\n```\n## Before you start\nDepending on the deployment configuration there might be pre-requisites for additional records to be created in the cluster. \n## References\nOpenVINO Model Server on [Github](https://github.com/openvinotoolkit/model_server/tree/main/extras/openvino-operator-openshift)\n\n# Notebook\nThe Notebook resource integrates JupyterHub from OpenShift Data Science or Open Data Hub with a container image that includes [developer\ntools](https://github.com/openvinotoolkit/openvino/blob/master/docs/install_guides/pypi-openvino-dev.md)\nfrom the OpenVINO toolkit and a set of Jupyter notebook tutorials. It enables selecting a defined image `openvino-notebook` from\nthe Jupyter Spawner drop-down menu.\n\nCreate the `Notebook` resource in the same project with JupyterHub and RedHat OpenShift Data Science operator.\nIt builds the image in the cluster based on Dockerfile from [openvino_notebooks](https://github.com/openvinotoolkit/openvino_notebooks).\n",
      "csv_display_name": "OpenVINO Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "openvino-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:47:10.695000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "ovms-operator",
      "provided_apis": [
        {
          "group": "intel.com",
          "kind": "ModelServer",
          "plural": "modelservers",
          "version": "v1alpha1"
        },
        {
          "group": "intel.com",
          "kind": "Notebook",
          "plural": "notebooks",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:6d0286b8a8f6f3cd9d6cd8319400acf27b70fbb52df5808ec6fe2d9849be7d8c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6d0286b8a8f6f3cd9d6cd8319400acf27b70fbb52df5808ec6fe2d9849be7d8c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8385d6de20d1e59a931c44f6a785b53c96495833756f8ed07602f9ac54d62eb4",
          "image": "registry.connect.redhat.com/intel/ovms-operator@sha256:8385d6de20d1e59a931c44f6a785b53c96495833756f8ed07602f9ac54d62eb4",
          "name": "manager"
        },
        {
          "digest": "sha256:4ee88853cd8361e9d0a3461ad552f79c14f22406f1e32c8cbbb9341ae9780671",
          "image": "registry.connect.redhat.com/intel/openvino-model-server@sha256:4ee88853cd8361e9d0a3461ad552f79c14f22406f1e32c8cbbb9341ae9780671",
          "name": "openvino-model-server-4ee88853cd8361e9d0a3461ad552f79c14f22406f1e32c8cbbb9341ae9780671-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.2.0",
      "version_original": "0.2.0"
    },
    {
      "_id": "60eca148c0dc0487102e283e",
      "alm_examples": [
        {
          "api_version": "aps.appranix.com/v1",
          "kind": "BackupStorageLocation",
          "metadata": {
            "labels": {
              "component": "appranix"
            },
            "name": "default",
            "namespace": "appranix"
          },
          "spec": {
            "objectStorage": {
              "bucket": "aps-bucket-store"
            },
            "provider": "gcp"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/appranix/apx-operator-bundle@sha256:126965743834b9d3fa15f354f41fe47618cea51c6f2ab88d3401b62b0362b1b6",
      "bundle_path_digest": "sha256:126965743834b9d3fa15f354f41fe47618cea51c6f2ab88d3401b62b0362b1b6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-07-12T20:08:40.530000+00:00",
      "csv_description": "## About this Operator\n\nAppranix helps you to securely backup and restore, perform a disaster\nrecovery and migrate OpenShift cluster resources and persistent\nvolumes.\n\nThe operator works with Appranix to:\n\n- Install and initiate Appranix controller on your cluster\n\n- Take backups of your cluster and restore it in case of loss.\n\n- Migrate cluster resources to other clusters.\n\n- Replicate your production cluster to development and testing clusters.\n\n## Prerequisites\n\n- A storage bucket in GCP or AWS & credentials to access it\n- Appranix token generated for your cluster obtained from the Appranix console\n- A Configmap and Secret in your cluster for the bucket config and credentials\n\n#### Step 1: Creating a storage bucket\n\nNote: Currently only Google Storage bucket is supported, support for AWS S3 Bucket will be available in a future release.\n\n- You can create a bucket through the GCP console or by running the following command in [Google Cloud Shell](https://cloud.google.com/shell/)\n\n```shell\nAX_APS_BUCKET_NAME=<bucket_name>\ngsutil mb -b on gs://$AX_APS_BUCKET_NAME/\ngcloud iam service-accounts create appranix --display-name \"Appranix service account\"\nAX_SERVICE_ACCOUNT_EMAIL=$(gcloud iam service-accounts list --filter=\"displayName:Appranix service account\" --format 'value(email)')\ngsutil iam ch serviceAccount:$AX_SERVICE_ACCOUNT_EMAIL:objectAdmin gs://${AX_APS_BUCKET_NAME}\ngcloud iam service-accounts keys create ax_service_account.json --iam-account $AX_SERVICE_ACCOUNT_EMAIL\n```\n\nNote: You will require the ```ax_service_account.json``` created here in Step 3.\n\n\n#### Step 2: Obtaining the Appranix token for the cluster\n\n- Log in to your Appranix console and create a cluster connection. Upon connection creation copy the token generated for that cluster.\n\n#### Step 3: Creating the Configmap and Secret in the cluster\n\nA Configmap and Secret which contains the credetianls and bucket configuration has to be created before instaling the operator. It can be done by running the following command against your cluster.\n\nNote: Replace **token** wih the value obtained in Step 2.\n\n\n```shell\nAX_TOKEN=<token>\nAX_SERVICE_ACCOUNT=$(cat ax_service_account.json | base64 -w 0)\ncurl -Ls -H \"Content-Type: application/json\" https://us-central1-appranix-dev-07.cloudfunctions.net/operator-setup  -d '{\"token\": \"'$AX_TOKEN'\", \"secret\": \"'$AX_SERVICE_ACCOUNT'\"}' | oc apply -f -\n```\n\n#### Step 4: Deploying Operator from OperatorHub\n\n- Login to the OpenShift console and switch to ```appranix``` project\n\n- Search for Appranix in OperatorHub and install it.\n\n- Once installed go to the Appranix operator under Installed Operators and click on the BackupStorageLocation tab.\n\n- Now click on **Create BackupStorageLocation** and enter the bucket name under **Objectstorage** and click **Create**.\n\n- You can verify if the insallation is successful by checking the status in the Appranix console.",
      "csv_display_name": "Appranix APS Operator",
      "csv_metadata_description": "The Appranix operator enables you to back up and restore your OpenShift cluster resources and persistent volumes.",
      "csv_name": "appranix-operator.v2.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:02:08.415000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "appranix-cps",
      "provided_apis": [
        {
          "group": "aps.appranix.com",
          "kind": "BackupStorageLocation",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b2015405734f4949d0a8dedf5701f0398ff5645dfe4b461a312f3b96b2659a08",
          "image": "registry.connect.redhat.com/appranix/apx-operator@sha256:b2015405734f4949d0a8dedf5701f0398ff5645dfe4b461a312f3b96b2659a08",
          "name": "apx-operator-b2015405734f4949d0a8dedf5701f0398ff5645dfe4b461a312f3b96b2659a08-annotation"
        },
        {
          "digest": "sha256:b2015405734f4949d0a8dedf5701f0398ff5645dfe4b461a312f3b96b2659a08",
          "image": "registry.connect.redhat.com/appranix/apx-operator@sha256:b2015405734f4949d0a8dedf5701f0398ff5645dfe4b461a312f3b96b2659a08",
          "name": "manager"
        },
        {
          "digest": "sha256:78d3471a6152df1cb066a82f93904110cb80a18f7e576edb3cd3fd180161bab4",
          "image": "registry.connect.redhat.com/appranix/apx-controller@sha256:78d3471a6152df1cb066a82f93904110cb80a18f7e576edb3cd3fd180161bab4",
          "name": "controller"
        },
        {
          "digest": "sha256:46ca904bb0c9b3f4628011b610de3dce2ff9abae52294c111e953dc7e6140cd4",
          "image": "registry.connect.redhat.com/appranix/apx-manager@sha256:46ca904bb0c9b3f4628011b610de3dce2ff9abae52294c111e953dc7e6140cd4",
          "name": "agent"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.5.0",
      "version_original": "2.5.0"
    },
    {
      "_id": "60ed2579c0dc0487102e2851",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-97.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:099ce5ed6a2a9a8217676d2901f0872b7aa3d4ada5000b52a44878d5c4bf1cac",
      "bundle_path_digest": "sha256:099ce5ed6a2a9a8217676d2901f0872b7aa3d4ada5000b52a44878d5c4bf1cac",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "preview",
      "creation_date": "2021-07-13T05:32:41.134000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator-preview.v6.0.20-12",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:04:10.683000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator-f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730-annotation"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.0.20-12",
      "version_original": "6.0.20-12"
    },
    {
      "_id": "60ed601e744684587e2186e1",
      "alm_examples": [
        {
          "api_version": "ca.broadcom.com/v1alpha1",
          "kind": "UniversalMonitoringAgent",
          "metadata": {
            "name": "uma-monitor"
          },
          "spec": {
            "agentManager": {
              "credential": "",
              "url": "localhost:5001"
            },
            "cloudmonitoring": {
              "aws": {
                "enabled": false
              }
            },
            "clusterName": "DevelopmentCluster",
            "monitor": {
              "application": {
                "autoattach": {
                  "dotnet": {
                    "enabled": true
                  },
                  "dynamicPropertyResolution": {
                    "agentName": "",
                    "hostName": "{k8s_deployment_name},{k8s_daemonset_name},{k8s_deploymentconfig_name},{k8s_pod_name},ContainerHost"
                  },
                  "filterType": "whitelist",
                  "java": {
                    "enabled": true
                  },
                  "probe": {
                    "enabled": true
                  }
                },
                "jmx": {
                  "enabled": true
                },
                "opentracing": {
                  "correlation": {
                    "enabled": false
                  },
                  "enabled": true,
                  "grpc": {}
                },
                "zipkinTracing": {
                  "enabled": true,
                  "zipkinServer": {}
                }
              },
              "clusterPerformance": {
                "enabled": true
              },
              "container": {
                "dockerstats": {
                  "enabled": true
                },
                "prometheus": {
                  "backend": {
                    "enabled": false,
                    "endPoint": {
                      "metricAlias": "container_name=container,pod_name=pod"
                    },
                    "filter": {}
                  },
                  "exporter": {
                    "enabled": true
                  }
                }
              }
            },
            "role": "common",
            "type": "Openshift"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ca/uma-operator-bundle@sha256:f5b938c27c07fb9fde2440529040fd6ba52b69ca3482205d87a066f54cf30f22",
      "bundle_path_digest": "sha256:f5b938c27c07fb9fde2440529040fd6ba52b69ca3482205d87a066f54cf30f22",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-07-13T09:42:54.065000+00:00",
      "csv_description": "The **DX APM Universal Monitoring Agent** for Kubernetes (UMA for Kubernetes) acts as a single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes. UMA for Kubernetes discovers and monitors all the containers on a host. This capability allows to monitor both the Kubernetes Infrastructure ( like Node, Pods, Containers, Cluster Services etc ) and applications running on this infrastructure & correlate them together which can help the triager to isolate if the the problem is related to the application or infrastructure\n\n**Usage**:\n```\n apiVersion: ca.broadcom.com/v1alpha1\n kind: UniversalMonitoringAgent\n metadata:\n   name: uma-monitor\n spec:\n   # The agent and Enterprise Manager connection details.\n   agentManager:\n     url: localhost:5001\n     # Agent/EM login credentials.\n     credential:\n\n   clusterName: DevelopmentCluster\n   # type should be Kubernetes or Openshift depending on the environment\n   type: Openshift\n   monitor:\n     application:\n       # autoattach properties\n       autoattach:\n         filterType: whitelist\n         # java autoattach properties\n         java:\n           enabled: true\n           propertiesOverride:\n         # dotnet autoattach properties\n         dotnet:\n           enabled: true\n           propertiesOverride:\n       jmx:\n         enabled: true\n       opentracing:\n         enabled: true\n         grpc:\n           hostport:\n         correlation:\n           enabled: false\n     container:\n       prometheus:\n         exporter:\n           enabled: true\n         backend:\n           enabled: false\n           endPoint:\n             # Defines the URL endpoint of the Prometheus backend.\n             url:\n             # Username (if any) for connecting to the Prometheus backend URL.\n             username:\n             # Password (if any) for connecting to the Prometheus backend URL.\n             password:\n             # Token (if any) for connecting to the Prometheus backend URL.\n             token:\n             configFiles:\n             metricAlias: container_name=container,pod_name=pod\n           filter:\n             name:\n             value:\n\n       dockerstats:\n         enabled: true\n     clusterPerformance:\n       enabled: true\n\n```\n",
      "csv_display_name": "DX APM Universal Monitoring Agent",
      "csv_metadata_description": "The Universal Monitoring Agent for Kubernetes (UMA for Kubernetes) acts as single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes.",
      "csv_name": "uma-operator.v21.6.0-28",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:13:59.404000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "uma-operator",
      "provided_apis": [
        {
          "group": "ca.broadcom.com",
          "kind": "UniversalMonitoringAgent",
          "plural": "universalmonitoringagents",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:c50fef5d0ce1e8e084e4b786a40e8214f1726ed08edd8c15d9e6011312719502",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:c50fef5d0ce1e8e084e4b786a40e8214f1726ed08edd8c15d9e6011312719502",
          "name": "uma-operator-c50fef5d0ce1e8e084e4b786a40e8214f1726ed08edd8c15d9e6011312719502-annotation"
        },
        {
          "digest": "sha256:c50fef5d0ce1e8e084e4b786a40e8214f1726ed08edd8c15d9e6011312719502",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:c50fef5d0ce1e8e084e4b786a40e8214f1726ed08edd8c15d9e6011312719502",
          "name": "uma-operator"
        },
        {
          "digest": "sha256:71b8554dcf13756e5769184b6af9e2971544cc38006a408cc4446d58c305b4d7",
          "image": "registry.connect.redhat.com/ca/universalmonitoragent@sha256:71b8554dcf13756e5769184b6af9e2971544cc38006a408cc4446d58c305b4d7",
          "name": "uma"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "21.6.0-28",
      "version_original": "21.6.0-28"
    },
    {
      "_id": "60ed90a1ee05ae7c5b8eff52",
      "alm_examples": [
        {
          "api_version": "ca.broadcom.com/v1alpha1",
          "kind": "UniversalMonitoringAgent",
          "metadata": {
            "name": "uma-monitor"
          },
          "spec": {
            "agentManager": {
              "credential": "",
              "url": "localhost:5001"
            },
            "cloudmonitoring": {
              "aws": {
                "enabled": false
              }
            },
            "clusterName": "DevelopmentCluster",
            "monitor": {
              "application": {
                "autoattach": {
                  "dotnet": {
                    "enabled": true
                  },
                  "dynamicPropertyResolution": {
                    "agentName": "",
                    "hostName": "{k8s_deployment_name},{k8s_daemonset_name},{k8s_deploymentconfig_name},{k8s_pod_name},ContainerHost"
                  },
                  "filterType": "whitelist",
                  "java": {
                    "enabled": true
                  },
                  "probe": {
                    "enabled": true
                  }
                },
                "jmx": {
                  "enabled": true
                },
                "opentracing": {
                  "correlation": {
                    "enabled": false
                  },
                  "enabled": true,
                  "grpc": {}
                },
                "zipkinTracing": {
                  "enabled": true,
                  "zipkinServer": {}
                }
              },
              "clusterPerformance": {
                "enabled": true
              },
              "container": {
                "dockerstats": {
                  "enabled": true
                },
                "prometheus": {
                  "backend": {
                    "enabled": false,
                    "endPoint": {
                      "metricAlias": "container_name=container,pod_name=pod"
                    },
                    "filter": {}
                  },
                  "exporter": {
                    "enabled": true
                  }
                }
              }
            },
            "role": "common",
            "type": "Openshift"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ca/uma-operator-bundle@sha256:9ac8ad4f8e1b43fe92b34c28ff77ebad503264f790109f0d6dbc65e70a85e72d",
      "bundle_path_digest": "sha256:9ac8ad4f8e1b43fe92b34c28ff77ebad503264f790109f0d6dbc65e70a85e72d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-07-13T13:09:53.882000+00:00",
      "csv_description": "The **DX APM Universal Monitoring Agent** for Kubernetes (UMA for Kubernetes) acts as a single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes. UMA for Kubernetes discovers and monitors all the containers on a host. This capability allows to monitor both the Kubernetes Infrastructure ( like Node, Pods, Containers, Cluster Services etc ) and applications running on this infrastructure & correlate them together which can help the triager to isolate if the the problem is related to the application or infrastructure\n\n**Usage**:\n```\n apiVersion: ca.broadcom.com/v1alpha1\n kind: UniversalMonitoringAgent\n metadata:\n   name: uma-monitor\n spec:\n   # The agent and Enterprise Manager connection details.\n   agentManager:\n     url: localhost:5001\n     # Agent/EM login credentials.\n     credential:\n\n   clusterName: DevelopmentCluster\n   # type should be Kubernetes or Openshift depending on the environment\n   type: Openshift\n   monitor:\n     application:\n       # autoattach properties\n       autoattach:\n         filterType: whitelist\n         # java autoattach properties\n         java:\n           enabled: true\n           propertiesOverride:\n         # dotnet autoattach properties\n         dotnet:\n           enabled: true\n           propertiesOverride:\n       jmx:\n         enabled: true\n       opentracing:\n         enabled: true\n         grpc:\n           hostport:\n         correlation:\n           enabled: false\n     container:\n       prometheus:\n         exporter:\n           enabled: true\n         backend:\n           enabled: false\n           endPoint:\n             # Defines the URL endpoint of the Prometheus backend.\n             url:\n             # Username (if any) for connecting to the Prometheus backend URL.\n             username:\n             # Password (if any) for connecting to the Prometheus backend URL.\n             password:\n             # Token (if any) for connecting to the Prometheus backend URL.\n             token:\n             configFiles:\n             metricAlias: container_name=container,pod_name=pod\n           filter:\n             name:\n             value:\n\n       dockerstats:\n         enabled: true\n     clusterPerformance:\n       enabled: true\n\n```\n",
      "csv_display_name": "DX APM Universal Monitoring Agent",
      "csv_metadata_description": "The Universal Monitoring Agent for Kubernetes (UMA for Kubernetes) acts as single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes.",
      "csv_name": "uma-operator.v21.6.0-29",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:16:19.980000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "uma-operator",
      "provided_apis": [
        {
          "group": "ca.broadcom.com",
          "kind": "UniversalMonitoringAgent",
          "plural": "universalmonitoringagents",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4a3d73ecee551884c9bd69ca1eff58da78d8f123e36dcbf4217dbc10c92292ff",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:4a3d73ecee551884c9bd69ca1eff58da78d8f123e36dcbf4217dbc10c92292ff",
          "name": "uma-operator-4a3d73ecee551884c9bd69ca1eff58da78d8f123e36dcbf4217dbc10c92292ff-annotation"
        },
        {
          "digest": "sha256:4a3d73ecee551884c9bd69ca1eff58da78d8f123e36dcbf4217dbc10c92292ff",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:4a3d73ecee551884c9bd69ca1eff58da78d8f123e36dcbf4217dbc10c92292ff",
          "name": "uma-operator"
        },
        {
          "digest": "sha256:c1aed98a7083ac984cf4d3801f744e0dfa7305b5ef877c787a3e014e35afc617",
          "image": "registry.connect.redhat.com/ca/universalmonitoragent@sha256:c1aed98a7083ac984cf4d3801f744e0dfa7305b5ef877c787a3e014e35afc617",
          "name": "uma"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "21.6.0-29",
      "version_original": "21.6.0-29"
    },
    {
      "_id": "60f03a3ac0dc0487102e2eaa",
      "alm_examples": [
        {
          "api_version": "sonatype.com/v1alpha1",
          "kind": "NexusRepo",
          "metadata": {
            "name": "example-nexusrepo"
          },
          "spec": {
            "config": {
              "enabled": false,
              "mountPath": "/sonatype-nexus-conf"
            },
            "deployment": {
              "annotations": {},
              "postStart": {},
              "preStart": {},
              "terminationGracePeriodSeconds": 120
            },
            "deploymentStrategy": {},
            "ingress": {
              "annotations": {},
              "enabled": false,
              "path": "/",
              "tls": {
                "enabled": true,
                "secretName": "nexus-tls"
              }
            },
            "nexus": {
              "dockerPort": 5003,
              "env": [
                {
                  "name": "install4jAddVmParams",
                  "value": "-Xms1200M -Xmx1200M -XX:MaxDirectMemorySize=2G -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
                },
                {
                  "name": "NEXUS_SECURITY_RANDOMPASSWORD",
                  "value": "false"
                }
              ],
              "hostAliases": [],
              "imageName": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:e3cba97702a7a5a005e1d0b1dadc492c22a16cd6f39a74835d4757c638fc5214",
              "imagePullPolicy": "IfNotPresent",
              "imagePullSecret": "",
              "livenessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "path": "/",
                "periodSeconds": 30
              },
              "nexusPort": 8081,
              "podAnnotations": {},
              "readinessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "path": "/",
                "periodSeconds": 30
              },
              "resources": {},
              "securityContext": {},
              "service": {
                "type": "NodePort"
              }
            },
            "nexusProxyRoute": {
              "enabled": false
            },
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "enabled": true,
              "storageSize": "8Gi"
            },
            "replicaCount": 1,
            "route": {
              "enabled": false,
              "name": "docker",
              "portName": "docker"
            },
            "secret": {
              "enabled": false,
              "mountPath": "/etc/secret-volume",
              "readOnly": true
            },
            "service": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "ports": [
                {
                  "name": "nexus-service",
                  "port": 80,
                  "targetPort": 80
                }
              ]
            },
            "statefulset": {
              "enabled": false
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxrm-operator-bundle@sha256:ba710f12a4c97b1a1e851d2a47b1b009543bdbe5c2a769a613d2b25238c19cb8",
      "bundle_path_digest": "sha256:ba710f12a4c97b1a1e851d2a47b1b009543bdbe5c2a769a613d2b25238c19cb8",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-07-15T13:38:02.369000+00:00",
      "csv_description": "Nexus Repository is the central source of control to efficiently manage all binaries\nand build artifacts across your DevOps pipeline.\nThe flow of open source and third-party components into and through an organization\ncreates a complex software supply chain.\nNexus Repository delivers speed, efficiency, and quality to the governance\nand management of all dependencies, libraries, and applications for your DevOps teams.\n\n## Core Capabilities\n\n* **Dependency Management**:\n  Improves reliability with repeatable, fast access to secure dependencies\n* **Developer Productivity**:\n  Streamline developer workflows by enabling the sharing of components and applications across teams\n* **Supply Chain Performance**:\n  Improve speed-to-market and reduced build times with release advanced staging and component tagging\n* **CI/CD Integrations**:\n  Increase DevOps scalability with integrations to the most popular build and deployment tools\n\nVersion control systems and package registries do not scale when managing proprietary,\nopen source, and third-party components.\nOrganizations need a central binary and build artifact repository to manage dependencies\nacross the entire software supply chain.\n\n## Limitations\n\nHigh Availability Clustering (HA-C) is not supported for Nexus Repository Pro for OpenShift.\n\n## Usage\n\nOnce the server instance is created by the operator and running,\nyou'll want to expose the service as you see fit:\n1. Create a Route to that service for nexus.port (8081).\n\nBy default, the Nexus Repository starts up in OSS mode until a license is installed.\n\nThe Nexus Repository can be further configured via the NexusRepo custom resource definition:\n\n| Parameter                                   | Description                         | Default                                 |\n| ------------------------------------------  | ----------------------------------  | ----------------------------------------|\n| `statefulset.enabled`                       | Use statefulset instead of deployment | `false` |\n| `deploymentStrategy`                        | Deployment Strategy     |  `rollingUpdate` |\n| `nexus.env`                                 | Nexus environment variables         | `[{install4jAddVmParams: -Xms1200M -Xmx1200M -XX:MaxDirectMemorySize=2G -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap}]` |\n| `nexus.resources`                           | Nexus resource requests and limits  | `{}`                                    |\n| `nexus.dockerPort`                          | Port to access docker               | `5003`                                  |\n| `nexus.nexusPort`                           | Internal port for Nexus service     | `8081`                                  |\n| `nexus.service.type`                        | Service for Nexus                   |`NodePort`                                |\n| `nexus.service.clusterIp`                   | Specific cluster IP when service type is cluster IP. Use None for headless service |`nil`   |\n| `nexus.securityContext`                     | Security Context |\n| `nexus.labels`                              | Service labels                      | `{}`                                    |\n| `nexus.podAnnotations`                      | Pod Annotations                     | `{}`\n| `nexus.livenessProbe.initialDelaySeconds`   | LivenessProbe initial delay         | 30                                      |\n| `nexus.livenessProbe.periodSeconds`         | Seconds between polls               | 30                                      |\n| `nexus.livenessProbe.failureThreshold`      | Number of attempts before failure   | 6                                       |\n| `nexus.livenessProbe.timeoutSeconds`        | Time in seconds after liveness probe times out    | `nil`                     |\n| `nexus.livenessProbe.path`                  | Path for LivenessProbe              | /                                       |\n| `nexus.readinessProbe.initialDelaySeconds`  | ReadinessProbe initial delay        | 30                                      |\n| `nexus.readinessProbe.periodSeconds`        | Seconds between polls               | 30                                      |\n| `nexus.readinessProbe.failureThreshold`     | Number of attempts before failure   | 6                                       |\n| `nexus.readinessProbe.timeoutSeconds`       | Time in seconds after readiness probe times out    | `nil`                    |\n| `nexus.readinessProbe.path`                 | Path for ReadinessProbe             | /                                       |\n| `nexus.hostAliases`                         | Aliases for IPs in /etc/hosts       | []                                      |\n| `ingress.enabled`                           | Create an ingress for Nexus         | `true`                                  |\n| `ingress.annotations`                       | Annotations to enhance ingress configuration  | `{}`                          |\n| `ingress.tls.enabled`                       | Enable TLS                          | `true`                                 |\n| `ingress.tls.secretName`                    | Name of the secret storing TLS cert, `false` to use the Ingress' default certificate | `nexus-tls`                             |\n| `ingress.path`                              | Path for ingress rules. GCP users should set to `/*` | `/`                    |\n| `tolerations`                               | tolerations list                    | `[]`                                    |\n| `config.enabled`                            | Enable configmap                    | `false`                                 |\n| `config.mountPath`                          | Path to mount the config            | `/sonatype-nexus-conf`                  |\n| `config.data`                               | Configmap data                      | `nil`                                   |\n| `deployment.terminationGracePeriodSeconds`  | Time to allow for clean shutdown    | 120                                     |\n| `deployment.annotations`                    | Annotations to enhance deployment configuration  | `{}`                       |\n| `deployment.initContainers`                 | Init containers to run before main containers  | `nil`                        |\n| `deployment.postStart.command`              | Command to run after starting the nexus container  | `nil`                    |\n| `deployment.preStart.command`               | Command to run before starting the nexus container  | `nil`                   |\n| `deployment.additionalContainers`           | Add additional Container         | `nil`                                      |\n| `deployment.additionalVolumes`              | Add additional Volumes           | `nil`                                      |\n| `deployment.additionalVolumeMounts`         | Add additional Volume mounts     | `nil`                                      |\n| `secret.enabled`                            | Enable secret                    | `false`                                    |\n| `secret.mountPath`                          | Path to mount the secret         | `/etc/secret-volume`                       |\n| `secret.readOnly`                           | Secret readonly state            | `true`                                     |\n| `secret.data`                               | Secret data                      | `nil`                                      |\n| `service.enabled`                           | Enable additional service        | `nil`                                      |\n| `service.name`                              | Service name                     | `nil`                                      |\n| `service.portName`                          | Service port name                | `nil`                                      |\n| `service.labels`                            | Service labels                   | `nil`                                      |\n| `service.annotations`                       | Service annotations              | `nil`                                      |\n| `service.loadBalancerSourceRanges`          | Service LoadBalancer source IP whitelist | `nil`                              |\n| `service.targetPort`                        | Service port                     | `nil`                                      |\n| `service.port`                              | Port for exposing service        | `nil`                                      |\n| `route.enabled`         | Set to true to create route for additional service | `false` |\n| `route.name`            | Name of route                                      | `docker` |\n| `route.portName`        | Target port name of service                        | `docker` |\n| `route.labels`          | Labels to be added to route                        | `{}` |\n| `route.annotations`     | Annotations to be added to route                   | `{}` |\n| `route.path`            | Host name of Route e.g jenkins.example.com         | nil |",
      "csv_display_name": "Nexus Repository Operator",
      "csv_metadata_description": "Nexus Repository is the central source of control to efficiently manage all binaries\nand build artifacts across your DevOps pipeline.",
      "csv_name": "nxrm-operator-certified.v3.31.1-2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:53:47.143000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nxrm-operator-certified",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:dae573660ac877c6a225ac3f95e38853976be130df5703f2aaba2e8cc522bccd",
          "image": "registry.connect.redhat.com/sonatype/nxrm-operator-certified@sha256:dae573660ac877c6a225ac3f95e38853976be130df5703f2aaba2e8cc522bccd",
          "name": "nxrm-operator-certified-dae573660ac877c6a225ac3f95e38853976be130df5703f2aaba2e8cc522bccd-annotation"
        },
        {
          "digest": "sha256:dae573660ac877c6a225ac3f95e38853976be130df5703f2aaba2e8cc522bccd",
          "image": "registry.connect.redhat.com/sonatype/nxrm-operator-certified@sha256:dae573660ac877c6a225ac3f95e38853976be130df5703f2aaba2e8cc522bccd",
          "name": "nxrm-operator-certified"
        },
        {
          "digest": "sha256:e3cba97702a7a5a005e1d0b1dadc492c22a16cd6f39a74835d4757c638fc5214",
          "image": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:e3cba97702a7a5a005e1d0b1dadc492c22a16cd6f39a74835d4757c638fc5214",
          "name": "nexus"
        },
        {
          "digest": "sha256:e3cba97702a7a5a005e1d0b1dadc492c22a16cd6f39a74835d4757c638fc5214",
          "image": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:e3cba97702a7a5a005e1d0b1dadc492c22a16cd6f39a74835d4757c638fc5214",
          "name": "nexus-repository-manager-e3cba97702a7a5a005e1d0b1dadc492c22a16cd6f39a74835d4757c638fc5214-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "3.31.1-2",
      "version_original": "3.31.1-2"
    },
    {
      "_id": "60f70b79ebf5f7ae5891bf06",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:0b2f67a260db9662f8a048169e1d3af6f53f2c32dbd8a3c5966a98abedf2fde4",
      "bundle_path_digest": "sha256:0b2f67a260db9662f8a048169e1d3af6f53f2c32dbd8a3c5966a98abedf2fde4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.17",
      "creation_date": "2021-07-20T17:44:25.092000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.17.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:15:07.815000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:f04683a1abcc2fde42037afeb3543294d14f78d61d0cd5b83bd5e9f84933f510",
          "image": "quay.io/tigera/operator@sha256:f04683a1abcc2fde42037afeb3543294d14f78d61d0cd5b83bd5e9f84933f510",
          "name": "operator-f04683a1abcc2fde42037afeb3543294d14f78d61d0cd5b83bd5e9f84933f510-annotation"
        },
        {
          "digest": "sha256:f04683a1abcc2fde42037afeb3543294d14f78d61d0cd5b83bd5e9f84933f510",
          "image": "quay.io/tigera/operator@sha256:f04683a1abcc2fde42037afeb3543294d14f78d61d0cd5b83bd5e9f84933f510",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.17.5",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.17.5",
      "version_original": "1.17.5"
    },
    {
      "_id": "60fb00435cb211dea0b148fc",
      "alm_examples": [
        {
          "api_version": "crd.nutanix.com/v1alpha1",
          "kind": "NutanixCsiStorage",
          "metadata": {
            "name": "nutanixcsistorage"
          },
          "spec": {
            "imagePullPolicy": "IfNotPresent",
            "node": {
              "image": "registry.connect.redhat.com/nutanix/ntnx-csi-os@sha256:2289045e0f79733c4f1871f7c686e35b49a4d484aa82446784e3713dfa3d23c7"
            },
            "provisioner": {
              "image": "registry.connect.redhat.com/nutanix/ntnx-csi-os@sha256:2289045e0f79733c4f1871f7c686e35b49a4d484aa82446784e3713dfa3d23c7"
            },
            "scc": "yes",
            "sidecars": {
              "livenessprobe": {
                "image": "quay.io/k8scsi/livenessprobe@sha256:04a9c4a49de1bd83d21e962122da2ac768f356119fb384660aa33d93183996c3"
              },
              "provisioner": {
                "image": "quay.io/k8scsi/csi-provisioner@sha256:78e3393f5fd5ff6c1e5dada2478cfa456fb7164929e573cf9a87bf6532730679"
              },
              "registrar": {
                "image": "quay.io/k8scsi/csi-node-driver-registrar@sha256:9622c6a6dac7499a055a382930f4de82905a3c5735c0753f7094115c9c871309"
              },
              "resizer": {
                "image": "quay.io/k8scsi/csi-resizer@sha256:6c6a0332693a7c456378f6abd2bb40611826c1e1a733cadbdae2daab3125b71c"
              },
              "snapshotController": {
                "image": "quay.io/k8scsi/snapshot-controller@sha256:45720fd73a0de75ad512351a725c197a6c144912b1cb09500c09752a3741388c"
              },
              "snapshotter": {
                "image": "quay.io/k8scsi/csi-snapshotter@sha256:35ead85dd09aa8cc612fdb598d4e0e2f048bef816f1b74df5eeab67cd21b10aa"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nutanix/nutanix-csi-operator-bundle@sha256:95cb57529b51a318cc3e8a39f68d1424e4a6e5ec0550b0010ccf331b6cfedf54",
      "bundle_path_digest": "sha256:95cb57529b51a318cc3e8a39f68d1424e4a6e5ec0550b0010ccf331b6cfedf54",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2021-07-23T17:45:39.649000+00:00",
      "csv_description": "# Overview\n\nThe Nutanix CSI Operator for Kubernetes packages, deploys, manages, upgrades the Nutanix CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on Nutanix Enterprise Cloud platform.\n\nThe Nutanix Container Storage Interface (CSI) Driver for Kubernetes leverages Nutanix Volumes and Nutanix Files to provide scalable and persistent storage for stateful applications.\n\nWith Nutanix CSI Provider you can:\n\n  *  **Provide persistent storage to your containers**\n     * Leverage PVC ressources to consume dynamicaly Nutanix storage\n\n     * With Files storage classes, applications on multiple pods can access the same storage, and also have the benefit of multi-pod read and write access.\n\n## Configuring k8s secret and storage class\nIn order to use this driver, create the relevant storage classes and secrets, by followinig the below section:\n 1. Create a Nutanix system secret\n```\n apiVersion: v1\n kind: Secret\n metadata:\n   name: ntnx-secret\n   namespace: ntnx-system\n data:\n   # base64 encoded prism-ip:prism-port:admin:password. \n   # E.g.: echo -n \"10.0.0.14:9440:admin:mypassword\" | base64\n   key: MS4yLjMuNDo5NDQwOm51dGFuaXg6aXRpc21hZ2lj\n```\n 2. Create storage classes\n```\n kind: StorageClass\n apiVersion: storage.k8s.io/v1\n metadata:\n     name: nutanix-volume\n provisioner: csi.nutanix.com\n parameters:\n     csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n     csi.storage.k8s.io/provisioner-secret-namespace: ntnx-system\n     csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n     csi.storage.k8s.io/node-publish-secret-namespace: ntnx-system\n     csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n     csi.storage.k8s.io/controller-expand-secret-namespace: ntnx-system\n     csi.storage.k8s.io/fstype: ext4\n     dataServiceEndPoint: 10.0.0.15:3260\n     storageContainer: default-container\n     storageType: NutanixVolumes\n     #whitelistIPMode: ENABLED\n     #chapAuth: ENABLED\n allowVolumeExpansion: true\n reclaimPolicy: Delete\n```\n",
      "csv_display_name": "Nutanix CSI Operator",
      "csv_metadata_description": "An Operator for deploying and managing the Nutanix CSI Driver",
      "csv_name": "nutanixcsioperator.v0.1.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:18:10.396000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nutanixcsioperator",
      "provided_apis": [
        {
          "group": "crd.nutanix.com",
          "kind": "NutanixCsiStorage",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:6d0286b8a8f6f3cd9d6cd8319400acf27b70fbb52df5808ec6fe2d9849be7d8c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6d0286b8a8f6f3cd9d6cd8319400acf27b70fbb52df5808ec6fe2d9849be7d8c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:1a51992e5f0f3bea36996cb5e60cb9e62f51f8cff4a5dcc3e977e0b301546dd7",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:1a51992e5f0f3bea36996cb5e60cb9e62f51f8cff4a5dcc3e977e0b301546dd7",
          "name": "manager"
        },
        {
          "digest": "sha256:35ead85dd09aa8cc612fdb598d4e0e2f048bef816f1b74df5eeab67cd21b10aa",
          "image": "quay.io/k8scsi/csi-snapshotter@sha256:35ead85dd09aa8cc612fdb598d4e0e2f048bef816f1b74df5eeab67cd21b10aa",
          "name": "csi-snapshotter-35ead85dd09aa8cc612fdb598d4e0e2f048bef816f1b74df5eeab67cd21b10aa-annotation"
        },
        {
          "digest": "sha256:45720fd73a0de75ad512351a725c197a6c144912b1cb09500c09752a3741388c",
          "image": "quay.io/k8scsi/snapshot-controller@sha256:45720fd73a0de75ad512351a725c197a6c144912b1cb09500c09752a3741388c",
          "name": "snapshot-controller-45720fd73a0de75ad512351a725c197a6c144912b1cb09500c09752a3741388c-annotation"
        },
        {
          "digest": "sha256:6c6a0332693a7c456378f6abd2bb40611826c1e1a733cadbdae2daab3125b71c",
          "image": "quay.io/k8scsi/csi-resizer@sha256:6c6a0332693a7c456378f6abd2bb40611826c1e1a733cadbdae2daab3125b71c",
          "name": "csi-resizer-6c6a0332693a7c456378f6abd2bb40611826c1e1a733cadbdae2daab3125b71c-annotation"
        },
        {
          "digest": "sha256:9622c6a6dac7499a055a382930f4de82905a3c5735c0753f7094115c9c871309",
          "image": "quay.io/k8scsi/csi-node-driver-registrar@sha256:9622c6a6dac7499a055a382930f4de82905a3c5735c0753f7094115c9c871309",
          "name": "csi-node-driver-registrar-9622c6a6dac7499a055a382930f4de82905a3c5735c0753f7094115c9c871309-annotation"
        },
        {
          "digest": "sha256:78e3393f5fd5ff6c1e5dada2478cfa456fb7164929e573cf9a87bf6532730679",
          "image": "quay.io/k8scsi/csi-provisioner@sha256:78e3393f5fd5ff6c1e5dada2478cfa456fb7164929e573cf9a87bf6532730679",
          "name": "csi-provisioner-78e3393f5fd5ff6c1e5dada2478cfa456fb7164929e573cf9a87bf6532730679-annotation"
        },
        {
          "digest": "sha256:04a9c4a49de1bd83d21e962122da2ac768f356119fb384660aa33d93183996c3",
          "image": "quay.io/k8scsi/livenessprobe@sha256:04a9c4a49de1bd83d21e962122da2ac768f356119fb384660aa33d93183996c3",
          "name": "livenessprobe-04a9c4a49de1bd83d21e962122da2ac768f356119fb384660aa33d93183996c3-annotation"
        },
        {
          "digest": "sha256:2289045e0f79733c4f1871f7c686e35b49a4d484aa82446784e3713dfa3d23c7",
          "image": "registry.connect.redhat.com/nutanix/ntnx-csi-os@sha256:2289045e0f79733c4f1871f7c686e35b49a4d484aa82446784e3713dfa3d23c7",
          "name": "ntnx-csi-os-2289045e0f79733c4f1871f7c686e35b49a4d484aa82446784e3713dfa3d23c7-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.1.3",
      "version_original": "0.1.3"
    },
    {
      "_id": "60fbe43391952e12696e5baf",
      "alm_examples": [
        {
          "api_version": "crd.nutanix.com/v1alpha1",
          "kind": "NutanixCsiStorage",
          "metadata": {
            "name": "nutanixcsistorage"
          },
          "spec": {
            "imagePullPolicy": "IfNotPresent",
            "node": {
              "image": "registry.connect.redhat.com/nutanix/ntnx-csi-os@sha256:2289045e0f79733c4f1871f7c686e35b49a4d484aa82446784e3713dfa3d23c7"
            },
            "provisioner": {
              "image": "registry.connect.redhat.com/nutanix/ntnx-csi-os@sha256:2289045e0f79733c4f1871f7c686e35b49a4d484aa82446784e3713dfa3d23c7"
            },
            "scc": "yes",
            "sidecars": {
              "livenessprobe": {
                "image": "quay.io/k8scsi/livenessprobe@sha256:04a9c4a49de1bd83d21e962122da2ac768f356119fb384660aa33d93183996c3"
              },
              "provisioner": {
                "image": "quay.io/k8scsi/csi-provisioner@sha256:78e3393f5fd5ff6c1e5dada2478cfa456fb7164929e573cf9a87bf6532730679"
              },
              "registrar": {
                "image": "quay.io/k8scsi/csi-node-driver-registrar@sha256:9622c6a6dac7499a055a382930f4de82905a3c5735c0753f7094115c9c871309"
              },
              "resizer": {
                "image": "quay.io/k8scsi/csi-resizer@sha256:6c6a0332693a7c456378f6abd2bb40611826c1e1a733cadbdae2daab3125b71c"
              },
              "snapshotController": {
                "image": "quay.io/k8scsi/snapshot-controller@sha256:45720fd73a0de75ad512351a725c197a6c144912b1cb09500c09752a3741388c"
              },
              "snapshotter": {
                "image": "quay.io/k8scsi/csi-snapshotter@sha256:35ead85dd09aa8cc612fdb598d4e0e2f048bef816f1b74df5eeab67cd21b10aa"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nutanix/nutanix-csi-operator-bundle@sha256:95cb57529b51a318cc3e8a39f68d1424e4a6e5ec0550b0010ccf331b6cfedf54",
      "bundle_path_digest": "sha256:95cb57529b51a318cc3e8a39f68d1424e4a6e5ec0550b0010ccf331b6cfedf54",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2021-07-24T09:58:11.230000+00:00",
      "csv_description": "# Overview\n\nThe Nutanix CSI Operator for Kubernetes packages, deploys, manages, upgrades the Nutanix CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on Nutanix Enterprise Cloud platform.\n\nThe Nutanix Container Storage Interface (CSI) Driver for Kubernetes leverages Nutanix Volumes and Nutanix Files to provide scalable and persistent storage for stateful applications.\n\nWith Nutanix CSI Provider you can:\n\n  *  **Provide persistent storage to your containers**\n     * Leverage PVC ressources to consume dynamicaly Nutanix storage\n\n     * With Files storage classes, applications on multiple pods can access the same storage, and also have the benefit of multi-pod read and write access.\n\n## Configuring k8s secret and storage class\nIn order to use this driver, create the relevant storage classes and secrets, by followinig the below section:\n 1. Create a Nutanix system secret\n```\n apiVersion: v1\n kind: Secret\n metadata:\n   name: ntnx-secret\n   namespace: ntnx-system\n data:\n   # base64 encoded prism-ip:prism-port:admin:password. \n   # E.g.: echo -n \"10.0.0.14:9440:admin:mypassword\" | base64\n   key: MS4yLjMuNDo5NDQwOm51dGFuaXg6aXRpc21hZ2lj\n```\n 2. Create storage classes\n```\n kind: StorageClass\n apiVersion: storage.k8s.io/v1\n metadata:\n     name: nutanix-volume\n provisioner: csi.nutanix.com\n parameters:\n     csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n     csi.storage.k8s.io/provisioner-secret-namespace: ntnx-system\n     csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n     csi.storage.k8s.io/node-publish-secret-namespace: ntnx-system\n     csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n     csi.storage.k8s.io/controller-expand-secret-namespace: ntnx-system\n     csi.storage.k8s.io/fstype: ext4\n     dataServiceEndPoint: 10.0.0.15:3260\n     storageContainer: default-container\n     storageType: NutanixVolumes\n     #whitelistIPMode: ENABLED\n     #chapAuth: ENABLED\n allowVolumeExpansion: true\n reclaimPolicy: Delete\n```\n",
      "csv_display_name": "Nutanix CSI Operator",
      "csv_metadata_description": "An Operator for deploying and managing the Nutanix CSI Driver",
      "csv_name": "nutanixcsioperator.v0.1.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:59:46.409000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "nutanixcsioperator",
      "provided_apis": [
        {
          "group": "crd.nutanix.com",
          "kind": "NutanixCsiStorage",
          "plural": "nutanixcsistorages",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:6d0286b8a8f6f3cd9d6cd8319400acf27b70fbb52df5808ec6fe2d9849be7d8c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6d0286b8a8f6f3cd9d6cd8319400acf27b70fbb52df5808ec6fe2d9849be7d8c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:1a51992e5f0f3bea36996cb5e60cb9e62f51f8cff4a5dcc3e977e0b301546dd7",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:1a51992e5f0f3bea36996cb5e60cb9e62f51f8cff4a5dcc3e977e0b301546dd7",
          "name": "manager"
        },
        {
          "digest": "sha256:35ead85dd09aa8cc612fdb598d4e0e2f048bef816f1b74df5eeab67cd21b10aa",
          "image": "quay.io/k8scsi/csi-snapshotter@sha256:35ead85dd09aa8cc612fdb598d4e0e2f048bef816f1b74df5eeab67cd21b10aa",
          "name": "csi-snapshotter-35ead85dd09aa8cc612fdb598d4e0e2f048bef816f1b74df5eeab67cd21b10aa-annotation"
        },
        {
          "digest": "sha256:45720fd73a0de75ad512351a725c197a6c144912b1cb09500c09752a3741388c",
          "image": "quay.io/k8scsi/snapshot-controller@sha256:45720fd73a0de75ad512351a725c197a6c144912b1cb09500c09752a3741388c",
          "name": "snapshot-controller-45720fd73a0de75ad512351a725c197a6c144912b1cb09500c09752a3741388c-annotation"
        },
        {
          "digest": "sha256:6c6a0332693a7c456378f6abd2bb40611826c1e1a733cadbdae2daab3125b71c",
          "image": "quay.io/k8scsi/csi-resizer@sha256:6c6a0332693a7c456378f6abd2bb40611826c1e1a733cadbdae2daab3125b71c",
          "name": "csi-resizer-6c6a0332693a7c456378f6abd2bb40611826c1e1a733cadbdae2daab3125b71c-annotation"
        },
        {
          "digest": "sha256:9622c6a6dac7499a055a382930f4de82905a3c5735c0753f7094115c9c871309",
          "image": "quay.io/k8scsi/csi-node-driver-registrar@sha256:9622c6a6dac7499a055a382930f4de82905a3c5735c0753f7094115c9c871309",
          "name": "csi-node-driver-registrar-9622c6a6dac7499a055a382930f4de82905a3c5735c0753f7094115c9c871309-annotation"
        },
        {
          "digest": "sha256:78e3393f5fd5ff6c1e5dada2478cfa456fb7164929e573cf9a87bf6532730679",
          "image": "quay.io/k8scsi/csi-provisioner@sha256:78e3393f5fd5ff6c1e5dada2478cfa456fb7164929e573cf9a87bf6532730679",
          "name": "csi-provisioner-78e3393f5fd5ff6c1e5dada2478cfa456fb7164929e573cf9a87bf6532730679-annotation"
        },
        {
          "digest": "sha256:04a9c4a49de1bd83d21e962122da2ac768f356119fb384660aa33d93183996c3",
          "image": "quay.io/k8scsi/livenessprobe@sha256:04a9c4a49de1bd83d21e962122da2ac768f356119fb384660aa33d93183996c3",
          "name": "livenessprobe-04a9c4a49de1bd83d21e962122da2ac768f356119fb384660aa33d93183996c3-annotation"
        },
        {
          "digest": "sha256:2289045e0f79733c4f1871f7c686e35b49a4d484aa82446784e3713dfa3d23c7",
          "image": "registry.connect.redhat.com/nutanix/ntnx-csi-os@sha256:2289045e0f79733c4f1871f7c686e35b49a4d484aa82446784e3713dfa3d23c7",
          "name": "ntnx-csi-os-2289045e0f79733c4f1871f7c686e35b49a4d484aa82446784e3713dfa3d23c7-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.1.3",
      "version_original": "0.1.3"
    },
    {
      "_id": "60fbe4e791952e12696e5bb3",
      "alm_examples": [
        {
          "api_version": "apik10.kasten.io/v1alpha1",
          "kind": "K10",
          "metadata": {
            "name": "k10"
          },
          "spec": {
            "ambassadorImage": {
              "image": "ambassador",
              "registry": "quay.io",
              "repository": "datawire"
            },
            "apigateway": {
              "serviceResolver": "dns"
            },
            "apiservices": {
              "deployed": true
            },
            "auth": {
              "basicAuth": {
                "enabled": false,
                "htpasswd": "",
                "secretName": ""
              },
              "dex": {
                "enabled": false,
                "providerURL": "",
                "redirectURL": ""
              },
              "groupAllowList": [],
              "k10AdminGroups": [],
              "k10AdminUsers": [],
              "ldap": {
                "bindDN": "",
                "bindPW": "",
                "bindPWSecretName": "",
                "dashboardURL": "",
                "enabled": false,
                "groupSearch": {
                  "baseDN": "",
                  "filter": "",
                  "nameAttr": "",
                  "userMatchers": []
                },
                "groupnameClaim": "groups",
                "groupnamePrefix": "",
                "host": "",
                "insecureNoSSL": false,
                "insecureSkipVerifySSL": false,
                "restartPod": false,
                "secretName": "",
                "startTLS": false,
                "userSearch": {
                  "baseDN": "",
                  "emailAttr": "",
                  "filter": "",
                  "idAttr": "",
                  "nameAttr": "",
                  "preferredUsernameAttr": "",
                  "username": ""
                },
                "usernameClaim": "email",
                "usernamePrefix": ""
              },
              "oidcAuth": {
                "clientID": "",
                "clientSecret": "",
                "enabled": false,
                "groupClaim": "",
                "groupPrefix": "",
                "logoutURL": "",
                "prompt": "",
                "providerURL": "",
                "redirectURL": "",
                "scopes": "",
                "secretName": "",
                "usernameClaim": "",
                "usernamePrefix": ""
              },
              "openshift": {
                "clientSecret": "",
                "dashboardURL": "",
                "enabled": false,
                "groupnameClaim": "groups",
                "groupnamePrefix": "",
                "insecureCA": false,
                "openshiftURL": "",
                "secretName": "",
                "serviceAccount": "",
                "useServiceAccountCA": false,
                "usernameClaim": "email",
                "usernamePrefix": ""
              },
              "tokenAuth": {
                "enabled": false
              }
            },
            "cacertconfigmap": {
              "name": ""
            },
            "cluster": {
              "domainName": "cluster.local"
            },
            "clusterName": "",
            "dexImage": {
              "image": "dex",
              "registry": "quay.io",
              "repository": "dexidp"
            },
            "eula": {
              "accept": false
            },
            "executorReplicas": 3,
            "externalGateway": {
              "annotations": {},
              "awsSSLCertARN": "",
              "create": false,
              "fqdn": {
                "name": "",
                "type": ""
              }
            },
            "gateway": {
              "insecureDisableSSLVerify": false
            },
            "genericVolumeSnapshot": {
              "resources": {
                "limits": {
                  "cpu": "",
                  "memory": ""
                },
                "requests": {
                  "cpu": "",
                  "memory": ""
                }
              }
            },
            "global": {
              "airgapped": {
                "repository": ""
              },
              "images": {
                "aggregatedapis": "",
                "ambassador": "",
                "auth": "",
                "catalog": "",
                "cephtool": "",
                "config": "",
                "configmap-reload": "",
                "crypto": "",
                "dashboardbff": "",
                "datamover": "",
                "dex": "",
                "executor": "",
                "frontend": "",
                "jobs": "",
                "kanister": "",
                "kanister-tools": "",
                "logging": "",
                "metering": "",
                "prometheus": "",
                "state": "",
                "upgrade": ""
              },
              "persistence": {
                "accessMode": "ReadWriteOnce",
                "catalog": {
                  "size": ""
                },
                "enabled": true,
                "jobs": {
                  "size": ""
                },
                "logging": {
                  "size": ""
                },
                "metering": {
                  "size": "2Gi"
                },
                "mountPath": "/mnt/k10state",
                "size": "20Gi",
                "storageClass": ""
              },
              "rhMarketPlace": true,
              "upstreamCertifiedImages": false
            },
            "image": {
              "image": "",
              "pullPolicy": "Always",
              "registry": "gcr.io",
              "repository": "kasten-images",
              "tag": ""
            },
            "ingress": {
              "class": "",
              "create": false,
              "host": "",
              "tls": {
                "enabled": false
              },
              "urlPath": ""
            },
            "injectKanisterSidecar": {
              "enabled": false,
              "namespaceSelector": {
                "matchLabels": {}
              },
              "objectSelector": {
                "matchLabels": {}
              },
              "webhookServer": {
                "port": 8080
              }
            },
            "jaeger": {
              "agentDNS": "",
              "enabled": false
            },
            "kanister": {
              "backupTimeout": 45,
              "checkRepoTimeout": 20,
              "deleteTimeout": 45,
              "efsPostRestoreTimeout": 45,
              "hookTimeout": 20,
              "restoreTimeout": 600,
              "statsTimeout": 20
            },
            "kanisterPodCustomAnnotations": "",
            "kanisterPodCustomLabels": "",
            "kanisterToolsImage": {
              "image": "kanister-tools",
              "pullPolicy": "Always",
              "registry": "ghcr.io",
              "repository": "kanisterio"
            },
            "license": "",
            "limiter": {
              "csiSnapshots": 10,
              "genericVolumeCopies": 10,
              "genericVolumeRestores": 10,
              "genericVolumeSnapshots": 10,
              "providerSnapshots": 10
            },
            "logLevel": "info",
            "metering": {
              "awsMarketPlaceIamRole": "",
              "consumerId": "",
              "mode": "",
              "reportingKey": "",
              "serviceAccount": {
                "create": false,
                "name": ""
              }
            },
            "networkPolicy": {
              "create": true
            },
            "prometheus": {
              "alertmanager": {
                "affinity": {},
                "baseURL": "/",
                "configFileName": "alertmanager.yml",
                "configFromSecret": "",
                "configMapOverrideName": "",
                "deploymentAnnotations": {},
                "dnsConfig": {},
                "emptyDir": {
                  "sizeLimit": ""
                },
                "enabled": false,
                "extraArgs": {},
                "extraEnv": {},
                "extraInitContainers": [],
                "extraSecretMounts": [],
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/prometheus/alertmanager",
                  "tag": "v0.21.0"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": false,
                  "extraLabels": {},
                  "extraPaths": [],
                  "hosts": [],
                  "tls": []
                },
                "name": "alertmanager",
                "nodeSelector": {},
                "persistentVolume": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "annotations": {},
                  "enabled": true,
                  "existingClaim": "",
                  "mountPath": "/data",
                  "size": "2Gi",
                  "subPath": ""
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podLabels": {},
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "prefixURL": "",
                "priorityClassName": "",
                "replicaCount": 1,
                "resources": {},
                "securityContext": {
                  "fsGroup": 65534,
                  "runAsGroup": 65534,
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {},
                  "clusterIP": "",
                  "externalIPs": [],
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 80,
                  "sessionAffinity": "None",
                  "type": "ClusterIP"
                },
                "statefulSet": {
                  "annotations": {},
                  "enabled": false,
                  "headless": {
                    "annotations": {},
                    "enableMeshPeer": false,
                    "labels": {},
                    "servicePort": 80
                  },
                  "labels": {},
                  "podManagementPolicy": "OrderedReady"
                },
                "tolerations": [],
                "useClusterRole": true,
                "useExistingRole": false
              },
              "alertmanagerFiles": {
                "alertmanager.yml": {
                  "global": {},
                  "receivers": [
                    {
                      "name": "default-receiver"
                    }
                  ],
                  "route": {
                    "group_interval": "5m",
                    "group_wait": "10s",
                    "receiver": "default-receiver",
                    "repeat_interval": "3h"
                  }
                }
              },
              "configmapReload": {
                "alertmanager": {
                  "enabled": true,
                  "extraArgs": {},
                  "extraConfigmapMounts": [],
                  "extraVolumeDirs": [],
                  "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "jimmidyson/configmap-reload"
                  },
                  "name": "configmap-reload",
                  "resources": {}
                },
                "prometheus": {
                  "enabled": true,
                  "extraArgs": {},
                  "extraConfigmapMounts": [],
                  "extraVolumeDirs": [],
                  "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "jimmidyson/configmap-reload"
                  },
                  "name": "configmap-reload",
                  "resources": {}
                }
              },
              "global": {
                "airgapped": {
                  "repository": ""
                },
                "images": {
                  "aggregatedapis": "",
                  "ambassador": "",
                  "auth": "",
                  "catalog": "",
                  "cephtool": "",
                  "config": "",
                  "configmap-reload": "",
                  "crypto": "",
                  "dashboardbff": "",
                  "datamover": "",
                  "dex": "",
                  "executor": "",
                  "frontend": "",
                  "jobs": "",
                  "kanister": "",
                  "kanister-tools": "",
                  "logging": "",
                  "metering": "",
                  "prometheus": "",
                  "state": "",
                  "upgrade": ""
                },
                "persistence": {
                  "accessMode": "ReadWriteOnce",
                  "catalog": {
                    "size": ""
                  },
                  "enabled": true,
                  "jobs": {
                    "size": ""
                  },
                  "logging": {
                    "size": ""
                  },
                  "metering": {
                    "size": "2Gi"
                  },
                  "mountPath": "/mnt/k10state",
                  "size": "20Gi",
                  "storageClass": ""
                },
                "rhMarketPlace": true,
                "upstreamCertifiedImages": false
              },
              "initChownData": {
                "enabled": false
              },
              "k10image": {
                "registry": "gcr.io",
                "repository": "kasten-images"
              },
              "kubeStateMetrics": {
                "enabled": false
              },
              "networkPolicy": {
                "enabled": true
              },
              "nodeExporter": {
                "dnsConfig": {},
                "enabled": false,
                "extraArgs": {},
                "extraConfigmapMounts": [],
                "extraHostPathMounts": [],
                "extraInitContainers": [],
                "hostNetwork": true,
                "hostPID": true,
                "hostRootfs": true,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/prometheus/node-exporter",
                  "tag": "v1.1.2"
                },
                "name": "node-exporter",
                "nodeSelector": {},
                "pod": {
                  "labels": {}
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "priorityClassName": "",
                "resources": {},
                "securityContext": {
                  "fsGroup": 65534,
                  "runAsGroup": 65534,
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {
                    "prometheus.io/scrape": "true"
                  },
                  "clusterIP": "None",
                  "externalIPs": [],
                  "hostPort": 9100,
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 9100,
                  "type": "ClusterIP"
                },
                "tolerations": [],
                "updateStrategy": {
                  "type": "RollingUpdate"
                }
              },
              "podSecurityPolicy": {
                "enabled": false
              },
              "pushgateway": {
                "deploymentAnnotations": {},
                "dnsConfig": {},
                "enabled": false,
                "extraArgs": {},
                "extraInitContainers": [],
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "prom/pushgateway",
                  "tag": "v1.3.1"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": false,
                  "extraPaths": [],
                  "hosts": [],
                  "tls": []
                },
                "name": "pushgateway",
                "nodeSelector": {},
                "persistentVolume": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "annotations": {},
                  "enabled": false,
                  "existingClaim": "",
                  "mountPath": "/data",
                  "size": "2Gi",
                  "subPath": ""
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podLabels": {},
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "priorityClassName": "",
                "replicaCount": 1,
                "resources": {},
                "securityContext": {
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {
                    "prometheus.io/probe": "pushgateway"
                  },
                  "clusterIP": "",
                  "externalIPs": [],
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 9091,
                  "type": "ClusterIP"
                },
                "tolerations": []
              },
              "rbac": {
                "create": false
              },
              "scrapeCAdvisor": false,
              "server": {
                "affinity": {},
                "alertmanagers": [],
                "baseURL": "/k10/prometheus/",
                "configMapOverrideName": "k10-prometheus-config",
                "configPath": "/etc/config/prometheus.yml",
                "deploymentAnnotations": {},
                "dnsConfig": {},
                "dnsPolicy": "ClusterFirst",
                "emptyDir": {
                  "sizeLimit": ""
                },
                "enableServiceLinks": true,
                "enabled": true,
                "env": [],
                "extraArgs": {},
                "extraConfigmapMounts": [],
                "extraFlags": [
                  "web.enable-lifecycle"
                ],
                "extraHostPathMounts": [],
                "extraInitContainers": [],
                "extraSecretMounts": [],
                "extraVolumeMounts": [],
                "extraVolumes": [],
                "fullnameOverride": "prometheus-server",
                "global": {
                  "evaluation_interval": "1m",
                  "scrape_interval": "1m",
                  "scrape_timeout": "10s"
                },
                "hostAliases": [],
                "hostNetwork": false,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/prometheus/prometheus"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": false,
                  "extraLabels": {},
                  "extraPaths": [],
                  "hosts": [],
                  "tls": []
                },
                "livenessProbeFailureThreshold": 3,
                "livenessProbeInitialDelay": 30,
                "livenessProbePeriodSeconds": 15,
                "livenessProbeSuccessThreshold": 1,
                "livenessProbeTimeout": 10,
                "name": "server",
                "nodeSelector": {},
                "persistentVolume": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "annotations": {},
                  "enabled": true,
                  "existingClaim": "",
                  "mountPath": "/data",
                  "size": "8Gi",
                  "storageClass": "",
                  "subPath": ""
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podLabels": {},
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "prefixURL": "/k10/prometheus/",
                "priorityClassName": "",
                "readinessProbeFailureThreshold": 3,
                "readinessProbeInitialDelay": 30,
                "readinessProbePeriodSeconds": 5,
                "readinessProbeSuccessThreshold": 1,
                "readinessProbeTimeout": 4,
                "remoteRead": [],
                "remoteWrite": [],
                "replicaCount": 1,
                "resources": {},
                "retention": "30d",
                "securityContext": {
                  "fsGroup": 65534,
                  "runAsGroup": 65534,
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {},
                  "clusterIP": "",
                  "externalIPs": [],
                  "gRPC": {
                    "enabled": false,
                    "servicePort": 10901
                  },
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 80,
                  "sessionAffinity": "None",
                  "statefulsetReplica": {
                    "enabled": false,
                    "replica": 0
                  },
                  "type": "ClusterIP"
                },
                "sidecarContainers": {},
                "statefulSet": {
                  "annotations": {},
                  "enabled": false,
                  "headless": {
                    "annotations": {},
                    "gRPC": {
                      "enabled": false,
                      "servicePort": 10901
                    },
                    "labels": {},
                    "servicePort": 80
                  },
                  "labels": {},
                  "podManagementPolicy": "OrderedReady"
                },
                "storagePath": "",
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": "100%",
                    "maxUnavailable": "100%"
                  },
                  "type": "RollingUpdate"
                },
                "terminationGracePeriodSeconds": 300,
                "tolerations": [],
                "verticalAutoscaler": {
                  "enabled": false
                }
              },
              "serverFiles": {
                "alerting_rules.yml": {},
                "alerts": {},
                "prometheus.yml": {
                  "rule_files": [
                    "/etc/config/recording_rules.yml",
                    "/etc/config/alerting_rules.yml",
                    "/etc/config/rules",
                    "/etc/config/alerts"
                  ],
                  "scrape_configs": [
                    {
                      "job_name": "prometheus",
                      "static_configs": [
                        {
                          "targets": [
                            "localhost:9090"
                          ]
                        }
                      ]
                    },
                    {
                      "bearer_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                      "job_name": "kubernetes-apiservers",
                      "kubernetes_sd_configs": [
                        {
                          "role": "endpoints"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": "default;kubernetes;https",
                          "source_labels": [
                            "__meta_kubernetes_namespace",
                            "__meta_kubernetes_service_name",
                            "__meta_kubernetes_endpoint_port_name"
                          ]
                        }
                      ],
                      "scheme": "https",
                      "tls_config": {
                        "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                        "insecure_skip_verify": true
                      }
                    },
                    {
                      "bearer_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                      "job_name": "kubernetes-nodes",
                      "kubernetes_sd_configs": [
                        {
                          "role": "node"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_node_label_(.+)"
                        },
                        {
                          "replacement": "kubernetes.default.svc:443",
                          "target_label": "__address__"
                        },
                        {
                          "regex": "(.+)",
                          "replacement": "/api/v1/nodes/$1/proxy/metrics",
                          "source_labels": [
                            "__meta_kubernetes_node_name"
                          ],
                          "target_label": "__metrics_path__"
                        }
                      ],
                      "scheme": "https",
                      "tls_config": {
                        "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                        "insecure_skip_verify": true
                      }
                    },
                    {
                      "bearer_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                      "job_name": "kubernetes-nodes-cadvisor",
                      "kubernetes_sd_configs": [
                        {
                          "role": "node"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_node_label_(.+)"
                        },
                        {
                          "replacement": "kubernetes.default.svc:443",
                          "target_label": "__address__"
                        },
                        {
                          "regex": "(.+)",
                          "replacement": "/api/v1/nodes/$1/proxy/metrics/cadvisor",
                          "source_labels": [
                            "__meta_kubernetes_node_name"
                          ],
                          "target_label": "__metrics_path__"
                        }
                      ],
                      "scheme": "https",
                      "tls_config": {
                        "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                        "insecure_skip_verify": true
                      }
                    },
                    {
                      "job_name": "kubernetes-service-endpoints",
                      "kubernetes_sd_configs": [
                        {
                          "role": "endpoints"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scrape"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(https?)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scheme"
                          ],
                          "target_label": "__scheme__"
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_service_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_service_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "kubernetes_namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_service_name"
                          ],
                          "target_label": "kubernetes_name"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_node_name"
                          ],
                          "target_label": "kubernetes_node"
                        }
                      ]
                    },
                    {
                      "job_name": "kubernetes-service-endpoints-slow",
                      "kubernetes_sd_configs": [
                        {
                          "role": "endpoints"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scrape_slow"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(https?)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scheme"
                          ],
                          "target_label": "__scheme__"
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_service_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_service_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "kubernetes_namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_service_name"
                          ],
                          "target_label": "kubernetes_name"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_node_name"
                          ],
                          "target_label": "kubernetes_node"
                        }
                      ],
                      "scrape_interval": "5m",
                      "scrape_timeout": "30s"
                    },
                    {
                      "honor_labels": true,
                      "job_name": "prometheus-pushgateway",
                      "kubernetes_sd_configs": [
                        {
                          "role": "service"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": "pushgateway",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_probe"
                          ]
                        }
                      ]
                    },
                    {
                      "job_name": "kubernetes-services",
                      "kubernetes_sd_configs": [
                        {
                          "role": "service"
                        }
                      ],
                      "metrics_path": "/probe",
                      "params": {
                        "module": [
                          "http_2xx"
                        ]
                      },
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_probe"
                          ]
                        },
                        {
                          "source_labels": [
                            "__address__"
                          ],
                          "target_label": "__param_target"
                        },
                        {
                          "replacement": "blackbox",
                          "target_label": "__address__"
                        },
                        {
                          "source_labels": [
                            "__param_target"
                          ],
                          "target_label": "instance"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_service_label_(.+)"
                        },
                        {
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "kubernetes_namespace"
                        },
                        {
                          "source_labels": [
                            "__meta_kubernetes_service_name"
                          ],
                          "target_label": "kubernetes_name"
                        }
                      ]
                    },
                    {
                      "job_name": "kubernetes-pods",
                      "kubernetes_sd_configs": [
                        {
                          "role": "pod"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_scrape"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(https?)",
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_scheme"
                          ],
                          "target_label": "__scheme__"
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_pod_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_pod_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "kubernetes_namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_name"
                          ],
                          "target_label": "kubernetes_pod_name"
                        },
                        {
                          "action": "drop",
                          "regex": "Pending|Succeeded|Failed",
                          "source_labels": [
                            "__meta_kubernetes_pod_phase"
                          ]
                        }
                      ]
                    },
                    {
                      "job_name": "kubernetes-pods-slow",
                      "kubernetes_sd_configs": [
                        {
                          "role": "pod"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_scrape_slow"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(https?)",
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_scheme"
                          ],
                          "target_label": "__scheme__"
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_pod_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_pod_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "kubernetes_namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_name"
                          ],
                          "target_label": "kubernetes_pod_name"
                        },
                        {
                          "action": "drop",
                          "regex": "Pending|Succeeded|Failed",
                          "source_labels": [
                            "__meta_kubernetes_pod_phase"
                          ]
                        }
                      ],
                      "scrape_interval": "5m",
                      "scrape_timeout": "30s"
                    }
                  ]
                },
                "recording_rules.yml": {},
                "rules": {}
              },
              "serviceAccounts": {
                "alertmanager": {
                  "annotations": {},
                  "create": false
                },
                "kubeStateMetrics": {
                  "create": false
                },
                "nodeExporter": {
                  "annotations": {},
                  "create": false
                },
                "pushgateway": {
                  "annotations": {},
                  "create": false
                },
                "server": {
                  "annotations": {},
                  "create": true
                }
              }
            },
            "rbac": {
              "create": true
            },
            "resources": {},
            "route": {
              "annotations": {},
              "enabled": false,
              "host": "",
              "labels": {},
              "path": "",
              "tls": {
                "enabled": false,
                "insecureEdgeTerminationPolicy": "Redirect",
                "termination": "edge"
              }
            },
            "scc": {
              "create": true
            },
            "secrets": {
              "apiTlsCrt": "",
              "apiTlsKey": "",
              "awsAccessKeyId": "",
              "awsIamRole": "",
              "awsSecretAccessKey": "",
              "azureADEndpoint": "",
              "azureADResourceID": "",
              "azureClientId": "",
              "azureClientSecret": "",
              "azureResourceGroup": "",
              "azureResourceMgrEndpoint": "",
              "azureSubscriptionID": "",
              "azureTenantId": "",
              "dockerConfig": "",
              "dockerConfigPath": "",
              "googleApiKey": "",
              "ibmSoftLayerApiKey": "",
              "ibmSoftLayerApiUsername": "",
              "vsphereEndpoint": "",
              "vspherePassword": "",
              "vsphereUsername": ""
            },
            "service": {
              "aggregatedApiPort": 10250,
              "externalPort": 8000,
              "gatewayAdminPort": 8877,
              "internalPort": 8000
            },
            "serviceAccount": {
              "create": true,
              "name": ""
            },
            "services": {
              "dashboardbff": {
                "hostNetwork": false
              },
              "executor": {
                "hostNetwork": false
              },
              "securityContext": {
                "fsGroup": 1000,
                "runAsUser": 1000
              }
            },
            "toolsImage": {
              "enabled": true,
              "pullPolicy": "Always"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/kasten/kasten-bundle@sha256:d2290057a7c9e3ad365bcc21d3a8c88c6917ae9bf3d2822b31c9372b705156e7",
      "bundle_path_digest": "sha256:d2290057a7c9e3ad365bcc21d3a8c88c6917ae9bf3d2822b31c9372b705156e7",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-07-24T10:01:11.630000+00:00",
      "csv_description": "K10 data management platform for OpenShift, The Market Leader for Kubernetes Backup and DR",
      "csv_display_name": "K10 Helm Operator",
      "csv_metadata_description": "K10 data management platform for OpenShift, The Market Leader for Kubernetes Backup and DR",
      "csv_name": "k10-kasten-operator.4.0.6000",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:29:15.363000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "k10-kasten-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:99df6a815017a15b370646287b567da36fadf7f583aeb58c5ad5b4400c81a0f4",
          "image": "registry.connect.redhat.com/kasten/k10-operator@sha256:99df6a815017a15b370646287b567da36fadf7f583aeb58c5ad5b4400c81a0f4",
          "name": "k10-operator-99df6a815017a15b370646287b567da36fadf7f583aeb58c5ad5b4400c81a0f4-annotation"
        },
        {
          "digest": "sha256:6ccd70ad24d9b2c50c77aa3acd0560a2f87ff4592279e3a3e9ac111e2ef40d93",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6ccd70ad24d9b2c50c77aa3acd0560a2f87ff4592279e3a3e9ac111e2ef40d93",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:99df6a815017a15b370646287b567da36fadf7f583aeb58c5ad5b4400c81a0f4",
          "image": "registry.connect.redhat.com/kasten/k10-operator@sha256:99df6a815017a15b370646287b567da36fadf7f583aeb58c5ad5b4400c81a0f4",
          "name": "manager"
        },
        {
          "digest": "sha256:ced84bb1b5eb7d86e76b37883a0e26483aa5e39d0137f6077f7dfee844a9a625",
          "image": "registry.connect.redhat.com/kasten/aggregatedapis@sha256:ced84bb1b5eb7d86e76b37883a0e26483aa5e39d0137f6077f7dfee844a9a625",
          "name": "aggregatedapis"
        },
        {
          "digest": "sha256:9fdcce9d7f23abf634d9d26d42a3b9fdf5f6c7a6f782446c2a6bb648d02032ef",
          "image": "registry.connect.redhat.com/kasten/auth@sha256:9fdcce9d7f23abf634d9d26d42a3b9fdf5f6c7a6f782446c2a6bb648d02032ef",
          "name": "auth"
        },
        {
          "digest": "sha256:d17d62779bd4c10cd470ebef278af3d014471580c2507108c41e345304304cf9",
          "image": "registry.connect.redhat.com/kasten/catalog@sha256:d17d62779bd4c10cd470ebef278af3d014471580c2507108c41e345304304cf9",
          "name": "catalog"
        },
        {
          "digest": "sha256:54cd0109667e12e80eee9035322cc90082a6eb907f7a06a269a2a06d2e537b4e",
          "image": "registry.connect.redhat.com/kasten/config@sha256:54cd0109667e12e80eee9035322cc90082a6eb907f7a06a269a2a06d2e537b4e",
          "name": "config"
        },
        {
          "digest": "sha256:0f082224fb505e61e0c1b446149b19d9e1c2aa62f99f8bc2954c974716f14461",
          "image": "registry.connect.redhat.com/kasten/crypto@sha256:0f082224fb505e61e0c1b446149b19d9e1c2aa62f99f8bc2954c974716f14461",
          "name": "crypto"
        },
        {
          "digest": "sha256:3d4c2bf6cd9baad0d88e3b02439db395f39cd02356d1a87c5439154e26828261",
          "image": "registry.connect.redhat.com/kasten/dashboardbff@sha256:3d4c2bf6cd9baad0d88e3b02439db395f39cd02356d1a87c5439154e26828261",
          "name": "dashboardbff"
        },
        {
          "digest": "sha256:92213a5a97077ed2aa5b101ed950925bd9806c6dc724151794c85d32c35ee8d8",
          "image": "registry.connect.redhat.com/kasten/executor@sha256:92213a5a97077ed2aa5b101ed950925bd9806c6dc724151794c85d32c35ee8d8",
          "name": "executor"
        },
        {
          "digest": "sha256:31e3b14fc785843121a081902ef56d1bd14c33605060da1027c44a3e429a0115",
          "image": "registry.connect.redhat.com/kasten/frontend@sha256:31e3b14fc785843121a081902ef56d1bd14c33605060da1027c44a3e429a0115",
          "name": "frontend"
        },
        {
          "digest": "sha256:936923d4c2c7cb7768e8299f932d3df767a32c39b412d6dfe4d55c0f119a2b76",
          "image": "registry.connect.redhat.com/kasten/jobs@sha256:936923d4c2c7cb7768e8299f932d3df767a32c39b412d6dfe4d55c0f119a2b76",
          "name": "jobs"
        },
        {
          "digest": "sha256:0fc81066999508d5d62f4c9fe3fe5948e1af20214f4205010ccd17a6b30d8822",
          "image": "registry.connect.redhat.com/kasten/kanister@sha256:0fc81066999508d5d62f4c9fe3fe5948e1af20214f4205010ccd17a6b30d8822",
          "name": "kanister"
        },
        {
          "digest": "sha256:c35227d52fe7ba17c4fb2ccb71ce37224e155cd5fb6a262e704969413622817d",
          "image": "registry.connect.redhat.com/kasten/logging@sha256:c35227d52fe7ba17c4fb2ccb71ce37224e155cd5fb6a262e704969413622817d",
          "name": "logging"
        },
        {
          "digest": "sha256:3e02903cd8a965f3981f3e973fa907cf0d2b066c1239409efb550a597d9a84ab",
          "image": "registry.connect.redhat.com/kasten/metering@sha256:3e02903cd8a965f3981f3e973fa907cf0d2b066c1239409efb550a597d9a84ab",
          "name": "metering"
        },
        {
          "digest": "sha256:10caf8a6ea1996fac07b27566dc5743bad4f9c995f87bfee9ede0bbfe7ab8b19",
          "image": "registry.connect.redhat.com/kasten/state@sha256:10caf8a6ea1996fac07b27566dc5743bad4f9c995f87bfee9ede0bbfe7ab8b19",
          "name": "state"
        },
        {
          "digest": "sha256:c3e9f8f738a87fa2f9c5254e57a4afe1ea7f94c2bb0f7a73bafd73e68aa22bbf",
          "image": "registry.connect.redhat.com/kasten/ambassador@sha256:c3e9f8f738a87fa2f9c5254e57a4afe1ea7f94c2bb0f7a73bafd73e68aa22bbf",
          "name": "ambassador"
        },
        {
          "digest": "sha256:72546dde6d69358ba01260361abb8474958fe63c4b717a4504ecc74b306fc670",
          "image": "registry.connect.redhat.com/kasten/prometheus@sha256:72546dde6d69358ba01260361abb8474958fe63c4b717a4504ecc74b306fc670",
          "name": "prometheus"
        },
        {
          "digest": "sha256:a320d6893b7b7ef006d0c4ee51bc223ecd07d845e8ec633e3485c7d1cc700395",
          "image": "registry.connect.redhat.com/kasten/configmap-reload@sha256:a320d6893b7b7ef006d0c4ee51bc223ecd07d845e8ec633e3485c7d1cc700395",
          "name": "configmapreload"
        },
        {
          "digest": "sha256:6c1e284cdc03f4e0888653a90edef7d541a9e7eae87ce181b81e2b69edebfda1",
          "image": "registry.connect.redhat.com/kasten/dex@sha256:6c1e284cdc03f4e0888653a90edef7d541a9e7eae87ce181b81e2b69edebfda1",
          "name": "dex"
        },
        {
          "digest": "sha256:d71e54952ff415f3e9c75b3194d8120e9027d7a48a544fb04f1ac296b42d6025",
          "image": "registry.connect.redhat.com/kasten/kanister-tools@sha256:d71e54952ff415f3e9c75b3194d8120e9027d7a48a544fb04f1ac296b42d6025",
          "name": "kanistertools"
        },
        {
          "digest": "sha256:873487f47390ac508b37a430595f00d2fbe8ab1c3ffdb94dde2a0d7338bbb644",
          "image": "registry.connect.redhat.com/kasten/upgrade@sha256:873487f47390ac508b37a430595f00d2fbe8ab1c3ffdb94dde2a0d7338bbb644",
          "name": "upgrade"
        },
        {
          "digest": "sha256:46478206ad38a3fb40e7832de688f179140f7ec185d75c797e85d1dea3816a34",
          "image": "registry.connect.redhat.com/kasten/cephtool@sha256:46478206ad38a3fb40e7832de688f179140f7ec185d75c797e85d1dea3816a34",
          "name": "cephtool"
        },
        {
          "digest": "sha256:e02086a0a6b73f64bafc3b60067b293ec100c8ea7e3bbcbe7d66bf57a3933c08",
          "image": "registry.connect.redhat.com/kasten/datamover@sha256:e02086a0a6b73f64bafc3b60067b293ec100c8ea7e3bbcbe7d66bf57a3933c08",
          "name": "datamover"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "4.0.6000",
      "version_original": "4.0.6000"
    },
    {
      "_id": "60fbe5aa782855b4297ea6e3",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:0b2f67a260db9662f8a048169e1d3af6f53f2c32dbd8a3c5966a98abedf2fde4",
      "bundle_path_digest": "sha256:0b2f67a260db9662f8a048169e1d3af6f53f2c32dbd8a3c5966a98abedf2fde4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.17",
      "creation_date": "2021-07-24T10:04:26.718000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.17.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:14:45.371000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:f04683a1abcc2fde42037afeb3543294d14f78d61d0cd5b83bd5e9f84933f510",
          "image": "quay.io/tigera/operator@sha256:f04683a1abcc2fde42037afeb3543294d14f78d61d0cd5b83bd5e9f84933f510",
          "name": "operator-f04683a1abcc2fde42037afeb3543294d14f78d61d0cd5b83bd5e9f84933f510-annotation"
        },
        {
          "digest": "sha256:f04683a1abcc2fde42037afeb3543294d14f78d61d0cd5b83bd5e9f84933f510",
          "image": "quay.io/tigera/operator@sha256:f04683a1abcc2fde42037afeb3543294d14f78d61d0cd5b83bd5e9f84933f510",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.17.5",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.17.5",
      "version_original": "1.17.5"
    },
    {
      "_id": "60fbe5c8a53bca1f564bb129",
      "alm_examples": [
        {
          "api_version": "crd.nutanix.com/v1alpha1",
          "kind": "NutanixCsiStorage",
          "metadata": {
            "name": "nutanixcsistorage"
          },
          "spec": {
            "imagePullPolicy": "IfNotPresent",
            "node": {
              "image": "registry.connect.redhat.com/nutanix/ntnx-csi-os@sha256:2289045e0f79733c4f1871f7c686e35b49a4d484aa82446784e3713dfa3d23c7"
            },
            "provisioner": {
              "image": "registry.connect.redhat.com/nutanix/ntnx-csi-os@sha256:2289045e0f79733c4f1871f7c686e35b49a4d484aa82446784e3713dfa3d23c7"
            },
            "scc": "yes",
            "sidecars": {
              "livenessprobe": {
                "image": "quay.io/k8scsi/livenessprobe@sha256:04a9c4a49de1bd83d21e962122da2ac768f356119fb384660aa33d93183996c3"
              },
              "provisioner": {
                "image": "quay.io/k8scsi/csi-provisioner@sha256:78e3393f5fd5ff6c1e5dada2478cfa456fb7164929e573cf9a87bf6532730679"
              },
              "registrar": {
                "image": "quay.io/k8scsi/csi-node-driver-registrar@sha256:9622c6a6dac7499a055a382930f4de82905a3c5735c0753f7094115c9c871309"
              },
              "resizer": {
                "image": "quay.io/k8scsi/csi-resizer@sha256:6c6a0332693a7c456378f6abd2bb40611826c1e1a733cadbdae2daab3125b71c"
              },
              "snapshotController": {
                "image": "quay.io/k8scsi/snapshot-controller@sha256:45720fd73a0de75ad512351a725c197a6c144912b1cb09500c09752a3741388c"
              },
              "snapshotter": {
                "image": "quay.io/k8scsi/csi-snapshotter@sha256:35ead85dd09aa8cc612fdb598d4e0e2f048bef816f1b74df5eeab67cd21b10aa"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nutanix/nutanix-csi-operator-bundle@sha256:95cb57529b51a318cc3e8a39f68d1424e4a6e5ec0550b0010ccf331b6cfedf54",
      "bundle_path_digest": "sha256:95cb57529b51a318cc3e8a39f68d1424e4a6e5ec0550b0010ccf331b6cfedf54",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2021-07-24T10:04:56.135000+00:00",
      "csv_description": "# Overview\n\nThe Nutanix CSI Operator for Kubernetes packages, deploys, manages, upgrades the Nutanix CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on Nutanix Enterprise Cloud platform.\n\nThe Nutanix Container Storage Interface (CSI) Driver for Kubernetes leverages Nutanix Volumes and Nutanix Files to provide scalable and persistent storage for stateful applications.\n\nWith Nutanix CSI Provider you can:\n\n  *  **Provide persistent storage to your containers**\n     * Leverage PVC ressources to consume dynamicaly Nutanix storage\n\n     * With Files storage classes, applications on multiple pods can access the same storage, and also have the benefit of multi-pod read and write access.\n\n## Configuring k8s secret and storage class\nIn order to use this driver, create the relevant storage classes and secrets, by followinig the below section:\n 1. Create a Nutanix system secret\n```\n apiVersion: v1\n kind: Secret\n metadata:\n   name: ntnx-secret\n   namespace: ntnx-system\n data:\n   # base64 encoded prism-ip:prism-port:admin:password. \n   # E.g.: echo -n \"10.0.0.14:9440:admin:mypassword\" | base64\n   key: MS4yLjMuNDo5NDQwOm51dGFuaXg6aXRpc21hZ2lj\n```\n 2. Create storage classes\n```\n kind: StorageClass\n apiVersion: storage.k8s.io/v1\n metadata:\n     name: nutanix-volume\n provisioner: csi.nutanix.com\n parameters:\n     csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n     csi.storage.k8s.io/provisioner-secret-namespace: ntnx-system\n     csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n     csi.storage.k8s.io/node-publish-secret-namespace: ntnx-system\n     csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n     csi.storage.k8s.io/controller-expand-secret-namespace: ntnx-system\n     csi.storage.k8s.io/fstype: ext4\n     dataServiceEndPoint: 10.0.0.15:3260\n     storageContainer: default-container\n     storageType: NutanixVolumes\n     #whitelistIPMode: ENABLED\n     #chapAuth: ENABLED\n allowVolumeExpansion: true\n reclaimPolicy: Delete\n```\n",
      "csv_display_name": "Nutanix CSI Operator",
      "csv_metadata_description": "An Operator for deploying and managing the Nutanix CSI Driver",
      "csv_name": "nutanixcsioperator.v0.1.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:14:36.385000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "nutanixcsioperator",
      "provided_apis": [
        {
          "group": "crd.nutanix.com",
          "kind": "NutanixCsiStorage",
          "plural": "nutanixcsistorages",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:6d0286b8a8f6f3cd9d6cd8319400acf27b70fbb52df5808ec6fe2d9849be7d8c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6d0286b8a8f6f3cd9d6cd8319400acf27b70fbb52df5808ec6fe2d9849be7d8c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:1a51992e5f0f3bea36996cb5e60cb9e62f51f8cff4a5dcc3e977e0b301546dd7",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:1a51992e5f0f3bea36996cb5e60cb9e62f51f8cff4a5dcc3e977e0b301546dd7",
          "name": "manager"
        },
        {
          "digest": "sha256:35ead85dd09aa8cc612fdb598d4e0e2f048bef816f1b74df5eeab67cd21b10aa",
          "image": "quay.io/k8scsi/csi-snapshotter@sha256:35ead85dd09aa8cc612fdb598d4e0e2f048bef816f1b74df5eeab67cd21b10aa",
          "name": "csi-snapshotter-35ead85dd09aa8cc612fdb598d4e0e2f048bef816f1b74df5eeab67cd21b10aa-annotation"
        },
        {
          "digest": "sha256:45720fd73a0de75ad512351a725c197a6c144912b1cb09500c09752a3741388c",
          "image": "quay.io/k8scsi/snapshot-controller@sha256:45720fd73a0de75ad512351a725c197a6c144912b1cb09500c09752a3741388c",
          "name": "snapshot-controller-45720fd73a0de75ad512351a725c197a6c144912b1cb09500c09752a3741388c-annotation"
        },
        {
          "digest": "sha256:6c6a0332693a7c456378f6abd2bb40611826c1e1a733cadbdae2daab3125b71c",
          "image": "quay.io/k8scsi/csi-resizer@sha256:6c6a0332693a7c456378f6abd2bb40611826c1e1a733cadbdae2daab3125b71c",
          "name": "csi-resizer-6c6a0332693a7c456378f6abd2bb40611826c1e1a733cadbdae2daab3125b71c-annotation"
        },
        {
          "digest": "sha256:9622c6a6dac7499a055a382930f4de82905a3c5735c0753f7094115c9c871309",
          "image": "quay.io/k8scsi/csi-node-driver-registrar@sha256:9622c6a6dac7499a055a382930f4de82905a3c5735c0753f7094115c9c871309",
          "name": "csi-node-driver-registrar-9622c6a6dac7499a055a382930f4de82905a3c5735c0753f7094115c9c871309-annotation"
        },
        {
          "digest": "sha256:78e3393f5fd5ff6c1e5dada2478cfa456fb7164929e573cf9a87bf6532730679",
          "image": "quay.io/k8scsi/csi-provisioner@sha256:78e3393f5fd5ff6c1e5dada2478cfa456fb7164929e573cf9a87bf6532730679",
          "name": "csi-provisioner-78e3393f5fd5ff6c1e5dada2478cfa456fb7164929e573cf9a87bf6532730679-annotation"
        },
        {
          "digest": "sha256:04a9c4a49de1bd83d21e962122da2ac768f356119fb384660aa33d93183996c3",
          "image": "quay.io/k8scsi/livenessprobe@sha256:04a9c4a49de1bd83d21e962122da2ac768f356119fb384660aa33d93183996c3",
          "name": "livenessprobe-04a9c4a49de1bd83d21e962122da2ac768f356119fb384660aa33d93183996c3-annotation"
        },
        {
          "digest": "sha256:2289045e0f79733c4f1871f7c686e35b49a4d484aa82446784e3713dfa3d23c7",
          "image": "registry.connect.redhat.com/nutanix/ntnx-csi-os@sha256:2289045e0f79733c4f1871f7c686e35b49a4d484aa82446784e3713dfa3d23c7",
          "name": "ntnx-csi-os-2289045e0f79733c4f1871f7c686e35b49a4d484aa82446784e3713dfa3d23c7-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.1.3",
      "version_original": "0.1.3"
    },
    {
      "_id": "60fbe5d591952e12696e5bb6",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:0b2f67a260db9662f8a048169e1d3af6f53f2c32dbd8a3c5966a98abedf2fde4",
      "bundle_path_digest": "sha256:0b2f67a260db9662f8a048169e1d3af6f53f2c32dbd8a3c5966a98abedf2fde4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.17",
      "creation_date": "2021-07-24T10:05:09.725000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.17.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:14:46.868000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:f04683a1abcc2fde42037afeb3543294d14f78d61d0cd5b83bd5e9f84933f510",
          "image": "quay.io/tigera/operator@sha256:f04683a1abcc2fde42037afeb3543294d14f78d61d0cd5b83bd5e9f84933f510",
          "name": "operator-f04683a1abcc2fde42037afeb3543294d14f78d61d0cd5b83bd5e9f84933f510-annotation"
        },
        {
          "digest": "sha256:f04683a1abcc2fde42037afeb3543294d14f78d61d0cd5b83bd5e9f84933f510",
          "image": "quay.io/tigera/operator@sha256:f04683a1abcc2fde42037afeb3543294d14f78d61d0cd5b83bd5e9f84933f510",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.17.5",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.17.5",
      "version_original": "1.17.5"
    },
    {
      "_id": "60ff2b4fa53bca1f564bb3fd",
      "alm_examples": [
        {
          "api_version": "cis.f5.com/v1",
          "kind": "F5BigIpCtlr",
          "metadata": {
            "name": "f5-server"
          },
          "spec": {
            "args": {
              "agent": "as3",
              "bigip_partition": "<BIGIP_PARTITION>",
              "bigip_url": "<BIGIP_IP_ADDRESS>",
              "insecure": true,
              "log_as3_response": true,
              "log_level": "<DEBUG_OR_INFO>",
              "manage_routes": true,
              "openshift_sdn_name": "</BIGIP_PARTITION/SDN_NAME>",
              "pool-member-type": "<CLUSTER_OR_NODEPORT_OR_LOADBALANCER>",
              "route_vserver_addr": "<IP_ADDRESS>"
            },
            "bigip_login_secret": "<BIGIP_LOGIN_K8S_SECRET>",
            "image": {
              "pullPolicy": "Always",
              "repo": "k8s-bigip-ctlr",
              "user": "f5networks"
            },
            "namespace": "kube-system",
            "rbac": {
              "create": true
            },
            "resources": {},
            "serviceAccount": {
              "create": true
            },
            "version": "latest"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/f5networks/k8s-bigip-ctlr-operator-bundle@sha256:5a11aee22850cd5c1bf3c627ad4cb58af3f9d3115dbd73a1074814b3eea2a5dc",
      "bundle_path_digest": "sha256:5a11aee22850cd5c1bf3c627ad4cb58af3f9d3115dbd73a1074814b3eea2a5dc",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-07-26T21:38:23.377000+00:00",
      "csv_description": "## Introduction\nThis Operator installs F5 Container Ingress Services (CIS) for BIG-IP in your Cluster. This enables to configure and deploy CIS using Helm Charts.\n## F5 Container Ingress Services for BIG-IP\nF5 Container Ingress Services (CIS) integrates with container orchestration environments to dynamically create L4/L7 services on F5 BIG-IP systems, and load balance network traffic across the services. \nMonitoring the orchestration API server, CIS is able to modify the BIG-IP system configuration based on changes made to containerized applications.\n## Documentation\nRefer to F5 documentation\n- CIS on OpenShift (https://clouddocs.f5.com/containers/latest/userguide/openshift/) - OpenShift Routes (https://clouddocs.f5.com/containers/latest/userguide/routes.html) \n## Prerequisites \nCreate BIG-IP login credentials for use with Operator Helm charts. A basic way be, \n```\noc create secret generic  <SECRET-NAME>  -n kube-system --from-literal=username=<USERNAME>  --from-literal=password=<PASSWORD>\n```\n### Support for Kubernetes networking.k8s.io/v1 Ingress resources\nCreate ingress class resource as follows if you are using networking.k8s.io/v1 ingresses in your openshift environment \n```\noc apply -f https://raw.githubusercontent.com/F5Networks/k8s-bigip-ctlr/master/docs/config_examples/ingress/networkingV1/example-default-ingress-class.yaml\n``` \n### Support for CIS CustomResources \nInstall CRDs manually as follows if using CIS CustomResources (VirtualServer/TransportServer/IngressLink): \n```\noc apply -f https://raw.githubusercontent.com/F5Networks/k8s-bigip-ctlr/master/docs/config_examples/crd/Install/customresourcedefinitions.yml\n```\n",
      "csv_display_name": "F5 Container Ingress Services",
      "csv_metadata_description": "Operator to install F5 Container Ingress Services (CIS) for BIG-IP.",
      "csv_name": "f5-bigip-ctlr-operator.v1.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:02:05.170000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "f5-bigip-ctlr-operator",
      "provided_apis": [
        {
          "group": "cis.f5.com",
          "kind": "F5BigIpCtlr",
          "plural": "f5bigipctlrs",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:ffb2a3c8892bf9155b8d90db475883dcefb178c43ba7abdab674d24517942671",
          "image": "registry.connect.redhat.com/f5networks/k8s-bigip-ctlr-operator@sha256:ffb2a3c8892bf9155b8d90db475883dcefb178c43ba7abdab674d24517942671",
          "name": "k8s-bigip-ctlr-operator-ffb2a3c8892bf9155b8d90db475883dcefb178c43ba7abdab674d24517942671-annotation"
        },
        {
          "digest": "sha256:ffb2a3c8892bf9155b8d90db475883dcefb178c43ba7abdab674d24517942671",
          "image": "registry.connect.redhat.com/f5networks/k8s-bigip-ctlr-operator@sha256:ffb2a3c8892bf9155b8d90db475883dcefb178c43ba7abdab674d24517942671",
          "name": "f5-bigip-ctlr-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.8.0",
      "version_original": "1.8.0"
    },
    {
      "_id": "61015d1525e711c0c3dc2f48",
      "alm_examples": [
        {
          "api_version": "sonatype.com/v1alpha1",
          "kind": "NexusRepo",
          "metadata": {
            "name": "example-nexusrepo"
          },
          "spec": {
            "config": {
              "enabled": false,
              "mountPath": "/sonatype-nexus-conf"
            },
            "deployment": {
              "annotations": {},
              "postStart": {},
              "preStart": {},
              "terminationGracePeriodSeconds": 120
            },
            "deploymentStrategy": {},
            "ingress": {
              "annotations": {},
              "enabled": false,
              "path": "/",
              "tls": {
                "enabled": true,
                "secretName": "nexus-tls"
              }
            },
            "nexus": {
              "dockerPort": 5003,
              "env": [
                {
                  "name": "install4jAddVmParams",
                  "value": "-Xms1200M -Xmx1200M -XX:MaxDirectMemorySize=2G -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
                },
                {
                  "name": "NEXUS_SECURITY_RANDOMPASSWORD",
                  "value": "false"
                }
              ],
              "hostAliases": [],
              "imageName": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:99fb565f267408f15df5ca4ef63b68faecefde04b570c936a2ff835f64891472",
              "imagePullPolicy": "IfNotPresent",
              "imagePullSecret": "",
              "livenessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "path": "/",
                "periodSeconds": 30
              },
              "nexusPort": 8081,
              "podAnnotations": {},
              "readinessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "path": "/",
                "periodSeconds": 30
              },
              "resources": {},
              "securityContext": {},
              "service": {
                "type": "NodePort"
              }
            },
            "nexusProxyRoute": {
              "enabled": false
            },
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "enabled": true,
              "storageSize": "8Gi"
            },
            "replicaCount": 1,
            "route": {
              "enabled": false,
              "name": "docker",
              "portName": "docker"
            },
            "secret": {
              "enabled": false,
              "mountPath": "/etc/secret-volume",
              "readOnly": true
            },
            "service": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "ports": [
                {
                  "name": "nexus-service",
                  "port": 80,
                  "targetPort": 80
                }
              ]
            },
            "statefulset": {
              "enabled": false
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxrm-operator-bundle@sha256:003b936ea11ad47de6b6412a5229314860d82282ffe2138be67862dab987c35c",
      "bundle_path_digest": "sha256:003b936ea11ad47de6b6412a5229314860d82282ffe2138be67862dab987c35c",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-07-28T13:35:17.058000+00:00",
      "csv_description": "Nexus Repository is the central source of control to efficiently manage all binaries\nand build artifacts across your DevOps pipeline.\nThe flow of open source and third-party components into and through an organization\ncreates a complex software supply chain.\nNexus Repository delivers speed, efficiency, and quality to the governance\nand management of all dependencies, libraries, and applications for your DevOps teams.\n\n## Core Capabilities\n\n* **Dependency Management**:\n  Improves reliability with repeatable, fast access to secure dependencies\n* **Developer Productivity**:\n  Streamline developer workflows by enabling the sharing of components and applications across teams\n* **Supply Chain Performance**:\n  Improve speed-to-market and reduced build times with release advanced staging and component tagging\n* **CI/CD Integrations**:\n  Increase DevOps scalability with integrations to the most popular build and deployment tools\n\nVersion control systems and package registries do not scale when managing proprietary,\nopen source, and third-party components.\nOrganizations need a central binary and build artifact repository to manage dependencies\nacross the entire software supply chain.\n\n## Limitations\n\nHigh Availability Clustering (HA-C) is not supported for Nexus Repository Pro for OpenShift.\n\n## Usage\n\nOnce the server instance is created by the operator and running,\nyou'll want to expose the service as you see fit:\n1. Create a Route to that service for nexus.port (8081).\n\nBy default, the Nexus Repository starts up in OSS mode until a license is installed.\n\nThe Nexus Repository can be further configured via the NexusRepo custom resource definition:\n\n| Parameter                                   | Description                         | Default                                 |\n| ------------------------------------------  | ----------------------------------  | ----------------------------------------|\n| `statefulset.enabled`                       | Use statefulset instead of deployment | `false` |\n| `deploymentStrategy`                        | Deployment Strategy     |  `rollingUpdate` |\n| `nexus.env`                                 | Nexus environment variables         | `[{install4jAddVmParams: -Xms1200M -Xmx1200M -XX:MaxDirectMemorySize=2G -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap}]` |\n| `nexus.resources`                           | Nexus resource requests and limits  | `{}`                                    |\n| `nexus.dockerPort`                          | Port to access docker               | `5003`                                  |\n| `nexus.nexusPort`                           | Internal port for Nexus service     | `8081`                                  |\n| `nexus.service.type`                        | Service for Nexus                   |`NodePort`                                |\n| `nexus.service.clusterIp`                   | Specific cluster IP when service type is cluster IP. Use None for headless service |`nil`   |\n| `nexus.securityContext`                     | Security Context |\n| `nexus.labels`                              | Service labels                      | `{}`                                    |\n| `nexus.podAnnotations`                      | Pod Annotations                     | `{}`\n| `nexus.livenessProbe.initialDelaySeconds`   | LivenessProbe initial delay         | 30                                      |\n| `nexus.livenessProbe.periodSeconds`         | Seconds between polls               | 30                                      |\n| `nexus.livenessProbe.failureThreshold`      | Number of attempts before failure   | 6                                       |\n| `nexus.livenessProbe.timeoutSeconds`        | Time in seconds after liveness probe times out    | `nil`                     |\n| `nexus.livenessProbe.path`                  | Path for LivenessProbe              | /                                       |\n| `nexus.readinessProbe.initialDelaySeconds`  | ReadinessProbe initial delay        | 30                                      |\n| `nexus.readinessProbe.periodSeconds`        | Seconds between polls               | 30                                      |\n| `nexus.readinessProbe.failureThreshold`     | Number of attempts before failure   | 6                                       |\n| `nexus.readinessProbe.timeoutSeconds`       | Time in seconds after readiness probe times out    | `nil`                    |\n| `nexus.readinessProbe.path`                 | Path for ReadinessProbe             | /                                       |\n| `nexus.hostAliases`                         | Aliases for IPs in /etc/hosts       | []                                      |\n| `ingress.enabled`                           | Create an ingress for Nexus         | `true`                                  |\n| `ingress.annotations`                       | Annotations to enhance ingress configuration  | `{}`                          |\n| `ingress.tls.enabled`                       | Enable TLS                          | `true`                                 |\n| `ingress.tls.secretName`                    | Name of the secret storing TLS cert, `false` to use the Ingress' default certificate | `nexus-tls`                             |\n| `ingress.path`                              | Path for ingress rules. GCP users should set to `/*` | `/`                    |\n| `tolerations`                               | tolerations list                    | `[]`                                    |\n| `config.enabled`                            | Enable configmap                    | `false`                                 |\n| `config.mountPath`                          | Path to mount the config            | `/sonatype-nexus-conf`                  |\n| `config.data`                               | Configmap data                      | `nil`                                   |\n| `deployment.terminationGracePeriodSeconds`  | Time to allow for clean shutdown    | 120                                     |\n| `deployment.annotations`                    | Annotations to enhance deployment configuration  | `{}`                       |\n| `deployment.initContainers`                 | Init containers to run before main containers  | `nil`                        |\n| `deployment.postStart.command`              | Command to run after starting the nexus container  | `nil`                    |\n| `deployment.preStart.command`               | Command to run before starting the nexus container  | `nil`                   |\n| `deployment.additionalContainers`           | Add additional Container         | `nil`                                      |\n| `deployment.additionalVolumes`              | Add additional Volumes           | `nil`                                      |\n| `deployment.additionalVolumeMounts`         | Add additional Volume mounts     | `nil`                                      |\n| `secret.enabled`                            | Enable secret                    | `false`                                    |\n| `secret.mountPath`                          | Path to mount the secret         | `/etc/secret-volume`                       |\n| `secret.readOnly`                           | Secret readonly state            | `true`                                     |\n| `secret.data`                               | Secret data                      | `nil`                                      |\n| `service.enabled`                           | Enable additional service        | `nil`                                      |\n| `service.name`                              | Service name                     | `nil`                                      |\n| `service.portName`                          | Service port name                | `nil`                                      |\n| `service.labels`                            | Service labels                   | `nil`                                      |\n| `service.annotations`                       | Service annotations              | `nil`                                      |\n| `service.loadBalancerSourceRanges`          | Service LoadBalancer source IP whitelist | `nil`                              |\n| `service.targetPort`                        | Service port                     | `nil`                                      |\n| `service.port`                              | Port for exposing service        | `nil`                                      |\n| `route.enabled`         | Set to true to create route for additional service | `false` |\n| `route.name`            | Name of route                                      | `docker` |\n| `route.portName`        | Target port name of service                        | `docker` |\n| `route.labels`          | Labels to be added to route                        | `{}` |\n| `route.annotations`     | Annotations to be added to route                   | `{}` |\n| `route.path`            | Host name of Route e.g jenkins.example.com         | nil |",
      "csv_display_name": "Nexus Repository Operator",
      "csv_metadata_description": "Nexus Repository is the central source of control to efficiently manage all binaries\nand build artifacts across your DevOps pipeline.",
      "csv_name": "nxrm-operator-certified.v3.32.0-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:27:52.345000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nxrm-operator-certified",
      "provided_apis": [
        {
          "group": "sonatype.com",
          "kind": "NexusRepo",
          "plural": "nexusrepos",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8bbebe8f75dcc937778e87699cfae41a498525f7289a55c02834ba609eb57079",
          "image": "registry.connect.redhat.com/sonatype/nxrm-operator-certified@sha256:8bbebe8f75dcc937778e87699cfae41a498525f7289a55c02834ba609eb57079",
          "name": "nxrm-operator-certified-8bbebe8f75dcc937778e87699cfae41a498525f7289a55c02834ba609eb57079-annotation"
        },
        {
          "digest": "sha256:8bbebe8f75dcc937778e87699cfae41a498525f7289a55c02834ba609eb57079",
          "image": "registry.connect.redhat.com/sonatype/nxrm-operator-certified@sha256:8bbebe8f75dcc937778e87699cfae41a498525f7289a55c02834ba609eb57079",
          "name": "nxrm-operator-certified"
        },
        {
          "digest": "sha256:99fb565f267408f15df5ca4ef63b68faecefde04b570c936a2ff835f64891472",
          "image": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:99fb565f267408f15df5ca4ef63b68faecefde04b570c936a2ff835f64891472",
          "name": "nexus"
        },
        {
          "digest": "sha256:99fb565f267408f15df5ca4ef63b68faecefde04b570c936a2ff835f64891472",
          "image": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:99fb565f267408f15df5ca4ef63b68faecefde04b570c936a2ff835f64891472",
          "name": "nexus-repository-manager-99fb565f267408f15df5ca4ef63b68faecefde04b570c936a2ff835f64891472-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "3.32.0-1",
      "version_original": "3.32.0-1"
    },
    {
      "_id": "61016cc054aa15ab56548df6",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "dcgmExporter": {
              "affinity": {},
              "image": "dcgm-exporter",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.dcgm-exporter": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:8af02463a8b60b21202d0bf69bc1ee0bb12f684fa367f903d138df6cacc2d0ac"
            },
            "devicePlugin": {
              "affinity": {},
              "args": [],
              "env": [
                {
                  "name": "PASS_DEVICE_SPECS",
                  "value": "true"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                },
                {
                  "name": "DEVICE_LIST_STRATEGY",
                  "value": "envvar"
                },
                {
                  "name": "DEVICE_ID_STRATEGY",
                  "value": "uuid"
                },
                {
                  "name": "NVIDIA_VISIBLE_DEVICES",
                  "value": "all"
                },
                {
                  "name": "NVIDIA_DRIVER_CAPABILITIES",
                  "value": "all"
                }
              ],
              "image": "k8s-device-plugin",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.device-plugin": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05"
            },
            "driver": {
              "affinity": {},
              "enabled": true,
              "image": "driver",
              "imagePullSecrets": [],
              "licensingConfig": {
                "configMapName": ""
              },
              "nodeSelector": {
                "nvidia.com/gpu.deploy.driver": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repoConfig": {
                "configMapName": "",
                "destinationDir": ""
              },
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:09ba3eca64a80fab010a9fcd647a2675260272a8c3eb515dfed6dc38a2d31ead"
            },
            "gfd": {
              "affinity": {},
              "env": [
                {
                  "name": "GFD_SLEEP_INTERVAL",
                  "value": "60s"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                }
              ],
              "image": "gpu-feature-discovery",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.gpu-feature-discovery": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f"
            },
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "affinity": {},
              "enabled": true,
              "env": [
                {
                  "name": "WITH_REBOOT",
                  "value": "false"
                }
              ],
              "image": "k8s-mig-manager",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.mig-manager": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:495ed3b42e0541590c537ab1b33bda772aad530d3ef6a4f9384d3741a59e2bf8"
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {
                "image": "cuda",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia",
                "version": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce"
              }
            },
            "toolkit": {
              "affinity": {},
              "enabled": true,
              "image": "container-toolkit",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.container-toolkit": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:ffa284f1f359d70f0e1d6d8e7752d7c92ef7445b0d74965a8682775de37febf8"
            },
            "validator": {
              "affinity": {},
              "env": [
                {
                  "name": "WITH_WORKLOAD",
                  "value": "true"
                }
              ],
              "image": "gpu-operator-validator",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.operator-validator": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:aa1f7bd526ae132c46f3ebe6ecfabe675889e240776ccc2155e31e0c48cc659e"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:380392c15740edd8853ea65b1e19f3b9bd3afea04612f204c244bf5a23b328ce",
      "bundle_path_digest": "sha256:380392c15740edd8853ea65b1e19f3b9bd3afea04612f204c244bf5a23b328ce",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.7",
      "creation_date": "2021-07-28T14:42:08.454000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/kubernetes/openshift-on-gpu-install-guide/index.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.7.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:50:30.016000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3a812cf113f416baca9262fa8423f36141f35696eb6e7a51a7abb40f5ccd5f8c",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:3a812cf113f416baca9262fa8423f36141f35696eb6e7a51a7abb40f5ccd5f8c",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:8af02463a8b60b21202d0bf69bc1ee0bb12f684fa367f903d138df6cacc2d0ac",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:8af02463a8b60b21202d0bf69bc1ee0bb12f684fa367f903d138df6cacc2d0ac",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:ffa284f1f359d70f0e1d6d8e7752d7c92ef7445b0d74965a8682775de37febf8",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:ffa284f1f359d70f0e1d6d8e7752d7c92ef7445b0d74965a8682775de37febf8",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:09ba3eca64a80fab010a9fcd647a2675260272a8c3eb515dfed6dc38a2d31ead",
          "image": "nvcr.io/nvidia/driver@sha256:09ba3eca64a80fab010a9fcd647a2675260272a8c3eb515dfed6dc38a2d31ead",
          "name": "driver-image"
        },
        {
          "digest": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:495ed3b42e0541590c537ab1b33bda772aad530d3ef6a4f9384d3741a59e2bf8",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:495ed3b42e0541590c537ab1b33bda772aad530d3ef6a4f9384d3741a59e2bf8",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "image": "nvcr.io/nvidia/cuda@sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:aa1f7bd526ae132c46f3ebe6ecfabe675889e240776ccc2155e31e0c48cc659e",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:aa1f7bd526ae132c46f3ebe6ecfabe675889e240776ccc2155e31e0c48cc659e",
          "name": "gpu-operator-validator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.7.1",
      "version_original": "1.7.1"
    },
    {
      "_id": "6104311551a316e788825eb5",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {
            "autopilot": {
              "enabled": false
            }
          }
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:9d9a3d6259b1b1ef0d48f08aafd9a7fef29ea243742c8ccdc0750fb3ec184e59",
      "bundle_path_digest": "sha256:9d9a3d6259b1b1ef0d48f08aafd9a7fef29ea243742c8ccdc0750fb3ec184e59",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-07-30T17:04:21.467000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:25:42.317000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.5.0",
      "version_original": "1.5.0"
    },
    {
      "_id": "61043352b7b63d77728dba48",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {
            "autopilot": {
              "enabled": false
            }
          }
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:9d9a3d6259b1b1ef0d48f08aafd9a7fef29ea243742c8ccdc0750fb3ec184e59",
      "bundle_path_digest": "sha256:9d9a3d6259b1b1ef0d48f08aafd9a7fef29ea243742c8ccdc0750fb3ec184e59",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-07-30T17:13:54.707000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:07:42.937000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.5.0",
      "version_original": "1.5.0"
    },
    {
      "_id": "6104cb851c15ccf8bf0e8e68",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-28.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "bundle_path_digest": "sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.20",
      "creation_date": "2021-07-31T04:03:17.912000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:44:06.571000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca",
          "image": "redislabs/operator@sha256:29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca",
          "name": "operator-29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca-annotation"
        },
        {
          "digest": "sha256:29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.8-1",
      "version_original": "6.0.8-1"
    },
    {
      "_id": "6104cba44c1205f78b59bfe8",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.12-57.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "bundle_path_digest": "sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.20",
      "creation_date": "2021-07-31T04:03:48.424000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.12-5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:01:41.797000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator-b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f-annotation"
        },
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.12-5",
      "version_original": "6.0.12-5"
    },
    {
      "_id": "6104cbf04c1205f78b59bfe9",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "bundle_path_digest": "sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.20",
      "creation_date": "2021-07-31T04:05:04.111000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:53:28.363000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "redislabs/operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "operator-998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b-annotation"
        },
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.6-24",
      "version_original": "6.0.6-24"
    },
    {
      "_id": "6104cc07b7b63d77728dba4f",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.20",
      "creation_date": "2021-07-31T04:05:27.847000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:59:51.253000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "6104cc6fb7b63d77728dba50",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-30.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "bundle_path_digest": "sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.20",
      "creation_date": "2021-07-31T04:07:11.275000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:50:36.413000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator-0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1-annotation"
        },
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.8-20",
      "version_original": "6.0.8-20"
    },
    {
      "_id": "6104cca451a316e788825ed5",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "bundle_path_digest": "sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.20",
      "creation_date": "2021-07-31T04:08:04.006000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:14:45.852000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "image": "redislabs/operator@sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "name": "operator-fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2-annotation"
        },
        {
          "digest": "sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.6-11",
      "version_original": "6.0.6-11"
    },
    {
      "_id": "6104ccbd1c15ccf8bf0e8e69",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-97.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "bundle_path_digest": "sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2021-07-31T04:08:29.084000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-12a",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:06:26.444000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator-f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730-annotation"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.20-12a",
      "version_original": "6.0.20-12a"
    },
    {
      "_id": "6104cccb1c15ccf8bf0e8e6a",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "bundle_path_digest": "sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "capabilities": [
        ""
      ],
      "channel_name": "6.0.20",
      "creation_date": "2021-07-31T04:08:43.231000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:11:21.553000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.8-1",
      "version_original": "6.0.8-1"
    },
    {
      "_id": "6104cd0351a316e788825ed6",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-35.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "bundle_path_digest": "sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.20",
      "creation_date": "2021-07-31T04:09:39.210000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:09:56.485000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:6b2879ece978e1a8e6a09be7b5f67dd3c9b25f9efbf92852af55ddabc0328c67",
          "image": "redislabs/operator@sha256:6b2879ece978e1a8e6a09be7b5f67dd3c9b25f9efbf92852af55ddabc0328c67",
          "name": "operator-6b2879ece978e1a8e6a09be7b5f67dd3c9b25f9efbf92852af55ddabc0328c67-annotation"
        },
        {
          "digest": "sha256:6b2879ece978e1a8e6a09be7b5f67dd3c9b25f9efbf92852af55ddabc0328c67",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:6b2879ece978e1a8e6a09be7b5f67dd3c9b25f9efbf92852af55ddabc0328c67",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.6-6",
      "version_original": "6.0.6-6"
    },
    {
      "_id": "6104cd724c1205f78b59bfea",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-97.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "bundle_path_digest": "sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2021-07-31T04:11:30.573000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-12a",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:45:53.332000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator-f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730-annotation"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.20-12a",
      "version_original": "6.0.20-12a"
    },
    {
      "_id": "6104cd9851a316e788825ed7",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-97.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "bundle_path_digest": "sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.20",
      "creation_date": "2021-07-31T04:12:08.890000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-12a",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:10:53.524000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator-f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730-annotation"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.0.20-12a",
      "version_original": "6.0.20-12a"
    },
    {
      "_id": "6104cdb251a316e788825ed8",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-97.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "bundle_path_digest": "sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2021-07-31T04:12:34.765000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-12a",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:59:51.672000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator-f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730-annotation"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.0.20-12a",
      "version_original": "6.0.20-12a"
    },
    {
      "_id": "6104ce1e1c15ccf8bf0e8e6b",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.20",
      "creation_date": "2021-07-31T04:14:22.405000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:07:08.931000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "6104ce3451a316e788825ed9",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.12-57.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "bundle_path_digest": "sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.20",
      "creation_date": "2021-07-31T04:14:44.475000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.12-5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:13:15.091000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator-b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f-annotation"
        },
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.12-5",
      "version_original": "6.0.12-5"
    },
    {
      "_id": "6104ce4f4c1205f78b59bfeb",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-97.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "bundle_path_digest": "sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.20",
      "creation_date": "2021-07-31T04:15:11.751000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-12a",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:45:02.273000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator-f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730-annotation"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.20-12a",
      "version_original": "6.0.20-12a"
    },
    {
      "_id": "6104ce7db7b63d77728dba51",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-97.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "bundle_path_digest": "sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.20",
      "creation_date": "2021-07-31T04:15:57.826000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-12a",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:17:43.092000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator-f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730-annotation"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.20-12a",
      "version_original": "6.0.20-12a"
    },
    {
      "_id": "6104ce9db7b63d77728dba52",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-97.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "bundle_path_digest": "sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.20",
      "creation_date": "2021-07-31T04:16:29.721000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-12a",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:57:06.786000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator-f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730-annotation"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.20-12a",
      "version_original": "6.0.20-12a"
    },
    {
      "_id": "6104cebc51a316e788825eda",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-30.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "bundle_path_digest": "sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.20",
      "creation_date": "2021-07-31T04:17:00.979000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:53:47.816000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator-0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1-annotation"
        },
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.8-20",
      "version_original": "6.0.8-20"
    },
    {
      "_id": "6104ced851a316e788825edb",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "bundle_path_digest": "sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "capabilities": [
        ""
      ],
      "channel_name": "6.0.20",
      "creation_date": "2021-07-31T04:17:28.193000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-6",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:28:53.549000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.6-6",
      "version_original": "6.0.6-6"
    },
    {
      "_id": "6104cee41c15ccf8bf0e8e6c",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "bundle_path_digest": "sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.20",
      "creation_date": "2021-07-31T04:17:40.679000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:16:23.372000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "redislabs/operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "operator-998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b-annotation"
        },
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.6-24",
      "version_original": "6.0.6-24"
    },
    {
      "_id": "6104cef91c15ccf8bf0e8e6d",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-97.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "bundle_path_digest": "sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2021-07-31T04:18:01.353000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-12a",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:19:02.521000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator-f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730-annotation"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.20-12a",
      "version_original": "6.0.20-12a"
    },
    {
      "_id": "6104cf451c15ccf8bf0e8e6e",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "bundle_path_digest": "sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "capabilities": [
        ""
      ],
      "channel_name": "6.0.20",
      "creation_date": "2021-07-31T04:19:17.650000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-11",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:27:35.434000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.6-11",
      "version_original": "6.0.6-11"
    },
    {
      "_id": "610825e051a316e7888262fc",
      "alm_examples": [
        {
          "api_version": "anzo.cambridgesemantics.com/v1",
          "kind": "Anzo",
          "metadata": {
            "name": "agent01"
          },
          "spec": {
            "nodeConfig": {
              "spec": {
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "app": "anzo"
                  }
                },
                "serviceName": "anzo-agent01",
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "anzo"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:d1c2d54ca205d669c5ea1bb6aae105afe2385cc5695cecd78423ffa1d98929f8",
                        "name": "anzo",
                        "resources": {
                          "limits": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          },
                          "requests": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          }
                        }
                      }
                    ],
                    "serviceAccountName": "anzo-operator"
                  }
                }
              }
            },
            "role": "AnzoAgent"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-operator-bundle@sha256:28703523a1c160570fc23fb1236d2a02108b97e4423d42b0d3cde98c94d351cb",
      "bundle_path_digest": "sha256:28703523a1c160570fc23fb1236d2a02108b97e4423d42b0d3cde98c94d351cb",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-02T17:05:36.739000+00:00",
      "csv_description": "The Anzo Operator provides the way to install and configure an anzo agent setup on Red Hat K8S environment.\nCurrently, this is supported only through when deployed as an Anzo Agent as part of an Anzo Unstructured deployment.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo/blob/v2.0.0/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Operator",
      "csv_metadata_description": "kubernetes operator for Anzo",
      "csv_name": "anzo-operator.v2.0.101",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:52:26.423000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "anzo-operator",
      "provided_apis": [
        {
          "group": "anzo.cambridgesemantics.com",
          "kind": "Anzo",
          "plural": "anzos",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:563e964f5771b9bfd860ea993b6e0936a54504908f5b2d1dff6f99ade74bb7a0",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:563e964f5771b9bfd860ea993b6e0936a54504908f5b2d1dff6f99ade74bb7a0",
          "name": "anzo-operator-563e964f5771b9bfd860ea993b6e0936a54504908f5b2d1dff6f99ade74bb7a0-annotation"
        },
        {
          "digest": "sha256:563e964f5771b9bfd860ea993b6e0936a54504908f5b2d1dff6f99ade74bb7a0",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:563e964f5771b9bfd860ea993b6e0936a54504908f5b2d1dff6f99ade74bb7a0",
          "name": "manager"
        },
        {
          "digest": "sha256:d1c2d54ca205d669c5ea1bb6aae105afe2385cc5695cecd78423ffa1d98929f8",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:d1c2d54ca205d669c5ea1bb6aae105afe2385cc5695cecd78423ffa1d98929f8",
          "name": "anzo"
        },
        {
          "digest": "sha256:d1c2d54ca205d669c5ea1bb6aae105afe2385cc5695cecd78423ffa1d98929f8",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:d1c2d54ca205d669c5ea1bb6aae105afe2385cc5695cecd78423ffa1d98929f8",
          "name": "anzo-d1c2d54ca205d669c5ea1bb6aae105afe2385cc5695cecd78423ffa1d98929f8-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "6109268851a316e788826c42",
      "alm_examples": [
        {
          "api_version": "anzounstructured.clusters.cambridgesemantics.com/v1",
          "kind": "AnzoUnstructured",
          "metadata": {
            "name": "au01"
          },
          "spec": {
            "auWorker": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-w",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2",
                          "name": "w",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            },
            "msLeader": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-ms",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286",
                          "name": "ms",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-operator-bundle@sha256:800c686058a8b80d2c082741019db9d35535b2ba2b59007cbde0c2dffa143e82",
      "bundle_path_digest": "sha256:800c686058a8b80d2c082741019db9d35535b2ba2b59007cbde0c2dffa143e82",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-03T11:20:40.188000+00:00",
      "csv_description": "The Anzo Unstructured Operator provides the way to install and configure an anzo unstructured setup on Red Hat K8S environment.\nCurrently, this is possible only through existing Anzo installation.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo-unstructured/blob/v2.0.0/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Unstructured Operator",
      "csv_metadata_description": "Kubernetes Operator for Anzo Unstructured",
      "csv_name": "anzounstructured-operator.v2.0.101",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:11:53.007000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "anzounstructured-operator",
      "provided_apis": [
        {
          "group": "anzounstructured.clusters.cambridgesemantics.com",
          "kind": "AnzoUnstructured",
          "plural": "anzounstructureds",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:a47af068a7aa55c12be84c80d263feeed5597ecc434986b4f2fff782b568bb04",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:a47af068a7aa55c12be84c80d263feeed5597ecc434986b4f2fff782b568bb04",
          "name": "unstructured-operator-a47af068a7aa55c12be84c80d263feeed5597ecc434986b4f2fff782b568bb04-annotation"
        },
        {
          "digest": "sha256:a47af068a7aa55c12be84c80d263feeed5597ecc434986b4f2fff782b568bb04",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:a47af068a7aa55c12be84c80d263feeed5597ecc434986b4f2fff782b568bb04",
          "name": "manager"
        },
        {
          "digest": "sha256:0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286",
          "name": "anzo_microservices_leader"
        },
        {
          "digest": "sha256:4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2",
          "name": "anzo_unstructured_worker"
        },
        {
          "digest": "sha256:0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286",
          "name": "anzo-microservices-leader-0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286-annotation"
        },
        {
          "digest": "sha256:4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2",
          "name": "anzo-unstructured-worker-4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "610953ba1c15ccf8bf0e9996",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "externalArangoDBName": "arangodb",
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.2.5"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:d1996f41abc640884dd988174df35b39e4d487bdfe4a1e2c39b1c365d20612e3",
      "bundle_path_digest": "sha256:d1996f41abc640884dd988174df35b39e4d487bdfe4a1e2c39b1c365d20612e3",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-03T14:33:30.933000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v8.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:16:15.158000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "8.2.0",
      "version_original": "8.2.0"
    },
    {
      "_id": "61095de551a316e788826e7f",
      "alm_examples": [
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDeBundle",
          "metadata": {
            "name": "my-bundle",
            "namespace": "my-namespace"
          },
          "spec": {
            "details": {
              "name": "my-bundle"
            }
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDatabaseService",
          "metadata": {
            "name": "my-entando-database-service",
            "namespace": "my-namespace"
          },
          "spec": {
            "createDeployment": true,
            "databaseName": "my_database",
            "dbms": "postgresql"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoKeycloakServer",
          "metadata": {
            "name": "my-keycloak",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "replicas": 1,
            "standardImage": "redhat-sso"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoClusterInfrastructure",
          "metadata": {
            "name": "my-entando-cluster-infrastructure",
            "namespace": "my-namespace"
          },
          "spec": {
            "environmentVariables": [],
            "replicas": 1
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoPlugin",
          "metadata": {
            "name": "my-entando-plugin",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "healthCheckPath": "/management/health",
            "image": "entando/entando-avatar-plugin:6.0.5",
            "ingressHostName": "my-plugin.apps-crc.testing",
            "ingressPath": "/avatarPlugin",
            "replicas": 1,
            "roles": [
              {
                "code": "admin",
                "name": "user"
              },
              {
                "code": "user",
                "name": "user"
              }
            ],
            "securityLevel": "strict"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoApp",
          "metadata": {
            "name": "my-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "ingressHostName": "my-app.apps-crc.testing",
            "replicas": 1,
            "standardServerImage": "eap"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoAppPluginLink",
          "metadata": {
            "name": "my-link",
            "namespace": "my-namespace"
          },
          "spec": {
            "entandoAppName": "my-app",
            "entandoPluginName": "my-plugin"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoCompositeApp",
          "metadata": {
            "name": "my-entando-composite-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "components": [
              {
                "kind": "EntandoDatabaseService",
                "metadata": {
                  "name": "inline-entando-database-service"
                },
                "spec": {
                  "createDeployment": true
                }
              },
              {
                "kind": "EntandoKeycloakServer",
                "metadata": {
                  "name": "inline-keycloak"
                },
                "spec": {
                  "standardImage": "redhat-sso"
                }
              },
              {
                "kind": "EntandoClusterInfrastructure",
                "metadata": {
                  "name": "inline-entando-cluster-infrastructure"
                },
                "spec": {}
              },
              {
                "kind": "EntandoApp",
                "metadata": {
                  "name": "inline-app"
                },
                "spec": {
                  "standardServerImage": "eap"
                }
              },
              {
                "kind": "EntandoPlugin",
                "metadata": {
                  "name": "inline-plugin"
                },
                "spec": {
                  "healthCheckPath": "/management/health",
                  "image": "entando/entando-avatar-plugin:6.0.5",
                  "ingressPath": "/avatarPlugin",
                  "roles": [
                    {
                      "code": "admin",
                      "name": "admin"
                    },
                    {
                      "code": "user",
                      "name": "user"
                    }
                  ]
                }
              },
              {
                "kind": "EntandoAppPluginLink",
                "metadata": {
                  "name": "inline-link"
                },
                "spec": {
                  "entandoAppName": "inline-app",
                  "entandoPluginName": "inline-plugin"
                }
              }
            ],
            "dbmsOverride": "postgresql",
            "ingressHostNameOverride": "entando.apps-crc.testing"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/entando/entando-operator@sha256:639e2d35738483c6c092ebe8636bbab50c0f2101bc06f2fe9a1c7f68b3ffc4a6",
      "bundle_path_digest": "sha256:639e2d35738483c6c092ebe8636bbab50c0f2101bc06f2fe9a1c7f68b3ffc4a6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-03T15:16:53.387000+00:00",
      "csv_description": "## Entando\n\nThe Entando platform accelerates the development and lifecycle  management of fully modularized applications on Kubernetes. It  provides tools to help developers create and manage applications  using modular frontend and backend components.\nThe Entando Operator automates the installation, provisioning, and  configuration management of the components that make up an Entando  application. Specifically, the operator manages the following custom  resources:\n**EntandoKeycloakServers** for centralized authentication of frontend  and backend components. The operator can deploy Keycloak, or in certified  environments, Red Hat SSO servers that can then be used by subsequent  deployments as an OpenID Connect provider.\n**EntandoApps** for hosting an Entando application. EntandoApps are hosted on Wildfly or JBoss EAP containers, and can also be used to deploy custom  EntandoApp containers.\n**EntandoPlugins** for deploying microservices to customize or enhance your EntandoApp. Entando microservice plugins are deployed to your cluster, and  then linked to one or more EntandoApps.\n## Using the Operator\nThe Entando Operator can be deployed using the default settings without any  configuration. Once deployed, the operator can be customized by editing  the *configmap* and secrets.\n### ConfigMap: entando-operator-config\nThe 'entando-operator-config' ConfigMap can be added after deployment and any changes to it will be picked up by the operator on subsequent event processing. It supports the following keys:\n\n    entando.k8s.operator.gc.controller.pods: set this to \"false\" to keep controller pods after completion.\n    entando.k8s.operator.compliance.mode: set this to \"community\" if there is no requirement for Red Hat compliance.\n    entando.k8s.operator.image.pull.secrets: a comma separated list containing the names of pull secrets that will be linked to all service accounts.\n    entando.k8s.operator.disable.pvc.garbage.collection: set this to \"false\" if you want Persistent Volume Claims to be deleted with the custom resources they are associated with.\n    entando.k8s.operator.impose.default.limits: set this to \"false\" if there is no need to limit the resource consumption of pods on your cluster.\n    entando.k8s.operator.request.to.limit.ratio: a decimal number that default limits will be multiplied by to calculate default requests for resources.\n    entando.k8s.operator.force.db.password.reset: set this to \"true\" if you plan to delete Secrets from your namespace but you want to retain the Database they point to.\n    entando.k8s.operator.pull.policy.override: specify your preferred pullPolicy for images. The default is Always.\n    entando.tls.secret.name: The name of a standard TLS secret to use for HTTPS Ingresses. See the section entando-tls-secret.\n    entando.ca.secret.name: The name of a secret containing CA certificates. See the section entando-ca-cert-secret.\n    entando.assume.external.https.provider: Set this to \"true\" if your cloud provider handles HTTPS for you.\n    entando.use.auto.cert.generation: Set this to \"true\" to have Openshift use its internal CA to generate certificates for your Routes.\n    entando.default.routing.suffix: The domain name that can be suffixed to deployment names when the ingressHostName is omitted. Needs to be preconfigured on your DNS provider.\n    entando.pod.completion.timeout.seconds: The time it will take before Entando fails a run-to-completion Pod.\n    entando.pod.readiness.timeout.seconds: The time it will take before Entando fails a Service Pod.\n    entando.pod.shutdown.timeout.seconds: The time Entando will give a Pod to shutdown gracefully.\n\n\n### entando-pull-secret\nThe secret to be used to pull Entando images from the Red Hat container registry. The name of this secret is hard coded as it is required for the ClusterServiceVersion of this Operator\n### entando-tls-secret\nA standard Kubernetes TLS secret that will be used on all deployments where no custom TLS secret name is specified.\n### entando-ca-cert-secret\nThis is an opaque secret in the Entando Operator's namespace that contains the certificates of all trusted certificate authorities in your environment. This is generally used mainly for self signed certificates. As is generally the case for opaque secrets, there are no constraints on the keys in this secret. However, limit the files inside the secret to X509 certificates or certificate chains. The Entando Operator will load all of these files into a Java keystore that it then configures as the trust store for each container that uses Java.\n",
      "csv_display_name": "Entando Operator",
      "csv_metadata_description": "Processes EntandoKeycloakServer, EntandoApp and EntandoPlugin custom resources and deploys the relevant containers in the Kubernetes cluster.",
      "csv_name": "entando-k8s-operator.v6.3.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:24:20.667000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "entando-k8s-operator",
      "provided_apis": [
        {
          "group": "entando.org",
          "kind": "EntandoDatabaseService",
          "plural": "entandodatabaseservices",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDeBundle",
          "plural": "entandodebundles",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoKeycloakServer",
          "plural": "entandokeycloakservers",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoPlugin",
          "plural": "entandoplugins",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoAppPluginLink",
          "plural": "entandoapppluginlinks",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoApp",
          "plural": "entandoapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoClusterInfrastructure",
          "plural": "entandoclusterinfrastructures",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoCompositeApp",
          "plural": "entandocompositeapps",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.3.2",
      "version_original": "6.3.2"
    },
    {
      "_id": "61096494453d6347735bd271",
      "alm_examples": [
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDeBundle",
          "metadata": {
            "name": "my-bundle",
            "namespace": "my-namespace"
          },
          "spec": {
            "details": {
              "name": "my-bundle"
            }
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDatabaseService",
          "metadata": {
            "name": "my-entando-database-service",
            "namespace": "my-namespace"
          },
          "spec": {
            "createDeployment": true,
            "databaseName": "my_database",
            "dbms": "postgresql"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoKeycloakServer",
          "metadata": {
            "name": "my-keycloak",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "replicas": 1,
            "standardImage": "redhat-sso"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoClusterInfrastructure",
          "metadata": {
            "name": "my-entando-cluster-infrastructure",
            "namespace": "my-namespace"
          },
          "spec": {
            "environmentVariables": [],
            "replicas": 1
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoPlugin",
          "metadata": {
            "name": "my-entando-plugin",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "healthCheckPath": "/management/health",
            "image": "entando/entando-avatar-plugin:6.0.5",
            "ingressHostName": "my-plugin.apps-crc.testing",
            "ingressPath": "/avatarPlugin",
            "replicas": 1,
            "roles": [
              {
                "code": "admin",
                "name": "user"
              },
              {
                "code": "user",
                "name": "user"
              }
            ],
            "securityLevel": "strict"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoApp",
          "metadata": {
            "name": "my-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "ingressHostName": "my-app.apps-crc.testing",
            "replicas": 1,
            "standardServerImage": "eap"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoAppPluginLink",
          "metadata": {
            "name": "my-link",
            "namespace": "my-namespace"
          },
          "spec": {
            "entandoAppName": "my-app",
            "entandoPluginName": "my-plugin"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoCompositeApp",
          "metadata": {
            "name": "my-entando-composite-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "components": [
              {
                "kind": "EntandoDatabaseService",
                "metadata": {
                  "name": "inline-entando-database-service"
                },
                "spec": {
                  "createDeployment": true
                }
              },
              {
                "kind": "EntandoKeycloakServer",
                "metadata": {
                  "name": "inline-keycloak"
                },
                "spec": {
                  "standardImage": "redhat-sso"
                }
              },
              {
                "kind": "EntandoClusterInfrastructure",
                "metadata": {
                  "name": "inline-entando-cluster-infrastructure"
                },
                "spec": {}
              },
              {
                "kind": "EntandoApp",
                "metadata": {
                  "name": "inline-app"
                },
                "spec": {
                  "standardServerImage": "eap"
                }
              },
              {
                "kind": "EntandoPlugin",
                "metadata": {
                  "name": "inline-plugin"
                },
                "spec": {
                  "healthCheckPath": "/management/health",
                  "image": "entando/entando-avatar-plugin:6.0.5",
                  "ingressPath": "/avatarPlugin",
                  "roles": [
                    {
                      "code": "admin",
                      "name": "admin"
                    },
                    {
                      "code": "user",
                      "name": "user"
                    }
                  ]
                }
              },
              {
                "kind": "EntandoAppPluginLink",
                "metadata": {
                  "name": "inline-link"
                },
                "spec": {
                  "entandoAppName": "inline-app",
                  "entandoPluginName": "inline-plugin"
                }
              }
            ],
            "dbmsOverride": "postgresql",
            "ingressHostNameOverride": "entando.apps-crc.testing"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/entando/entando-operator@sha256:639e2d35738483c6c092ebe8636bbab50c0f2101bc06f2fe9a1c7f68b3ffc4a6",
      "bundle_path_digest": "sha256:639e2d35738483c6c092ebe8636bbab50c0f2101bc06f2fe9a1c7f68b3ffc4a6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-03T15:45:24.593000+00:00",
      "csv_description": "## Entando\n\nThe Entando platform accelerates the development and lifecycle  management of fully modularized applications on Kubernetes. It  provides tools to help developers create and manage applications  using modular frontend and backend components.\nThe Entando Operator automates the installation, provisioning, and  configuration management of the components that make up an Entando  application. Specifically, the operator manages the following custom  resources:\n**EntandoKeycloakServers** for centralized authentication of frontend  and backend components. The operator can deploy Keycloak, or in certified  environments, Red Hat SSO servers that can then be used by subsequent  deployments as an OpenID Connect provider.\n**EntandoApps** for hosting an Entando application. EntandoApps are hosted on Wildfly or JBoss EAP containers, and can also be used to deploy custom  EntandoApp containers.\n**EntandoPlugins** for deploying microservices to customize or enhance your EntandoApp. Entando microservice plugins are deployed to your cluster, and  then linked to one or more EntandoApps.\n## Using the Operator\nThe Entando Operator can be deployed using the default settings without any  configuration. Once deployed, the operator can be customized by editing  the *configmap* and secrets.\n### ConfigMap: entando-operator-config\nThe 'entando-operator-config' ConfigMap can be added after deployment and any changes to it will be picked up by the operator on subsequent event processing. It supports the following keys:\n\n    entando.k8s.operator.gc.controller.pods: set this to \"false\" to keep controller pods after completion.\n    entando.k8s.operator.compliance.mode: set this to \"community\" if there is no requirement for Red Hat compliance.\n    entando.k8s.operator.image.pull.secrets: a comma separated list containing the names of pull secrets that will be linked to all service accounts.\n    entando.k8s.operator.disable.pvc.garbage.collection: set this to \"false\" if you want Persistent Volume Claims to be deleted with the custom resources they are associated with.\n    entando.k8s.operator.impose.default.limits: set this to \"false\" if there is no need to limit the resource consumption of pods on your cluster.\n    entando.k8s.operator.request.to.limit.ratio: a decimal number that default limits will be multiplied by to calculate default requests for resources.\n    entando.k8s.operator.force.db.password.reset: set this to \"true\" if you plan to delete Secrets from your namespace but you want to retain the Database they point to.\n    entando.k8s.operator.pull.policy.override: specify your preferred pullPolicy for images. The default is Always.\n    entando.tls.secret.name: The name of a standard TLS secret to use for HTTPS Ingresses. See the section entando-tls-secret.\n    entando.ca.secret.name: The name of a secret containing CA certificates. See the section entando-ca-cert-secret.\n    entando.assume.external.https.provider: Set this to \"true\" if your cloud provider handles HTTPS for you.\n    entando.use.auto.cert.generation: Set this to \"true\" to have Openshift use its internal CA to generate certificates for your Routes.\n    entando.default.routing.suffix: The domain name that can be suffixed to deployment names when the ingressHostName is omitted. Needs to be preconfigured on your DNS provider.\n    entando.pod.completion.timeout.seconds: The time it will take before Entando fails a run-to-completion Pod.\n    entando.pod.readiness.timeout.seconds: The time it will take before Entando fails a Service Pod.\n    entando.pod.shutdown.timeout.seconds: The time Entando will give a Pod to shutdown gracefully.\n\n\n### entando-pull-secret\nThe secret to be used to pull Entando images from the Red Hat container registry. The name of this secret is hard coded as it is required for the ClusterServiceVersion of this Operator\n### entando-tls-secret\nA standard Kubernetes TLS secret that will be used on all deployments where no custom TLS secret name is specified.\n### entando-ca-cert-secret\nThis is an opaque secret in the Entando Operator's namespace that contains the certificates of all trusted certificate authorities in your environment. This is generally used mainly for self signed certificates. As is generally the case for opaque secrets, there are no constraints on the keys in this secret. However, limit the files inside the secret to X509 certificates or certificate chains. The Entando Operator will load all of these files into a Java keystore that it then configures as the trust store for each container that uses Java.\n",
      "csv_display_name": "Entando Operator",
      "csv_metadata_description": "Processes EntandoKeycloakServer, EntandoApp and EntandoPlugin custom resources and deploys the relevant containers in the Kubernetes cluster.",
      "csv_name": "entando-k8s-operator.v6.3.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:13:35.501000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "entando-k8s-operator",
      "provided_apis": [
        {
          "group": "entando.org",
          "kind": "EntandoAppPluginLink",
          "plural": "entandoapppluginlinks",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoApp",
          "plural": "entandoapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoClusterInfrastructure",
          "plural": "entandoclusterinfrastructures",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoCompositeApp",
          "plural": "entandocompositeapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDatabaseService",
          "plural": "entandodatabaseservices",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDeBundle",
          "plural": "entandodebundles",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoKeycloakServer",
          "plural": "entandokeycloakservers",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoPlugin",
          "plural": "entandoplugins",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.3.2",
      "version_original": "6.3.2"
    },
    {
      "_id": "61096a476bbb00c64eecd5e5",
      "alm_examples": [
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDeBundle",
          "metadata": {
            "name": "my-bundle",
            "namespace": "my-namespace"
          },
          "spec": {
            "details": {
              "name": "my-bundle"
            }
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDatabaseService",
          "metadata": {
            "name": "my-entando-database-service",
            "namespace": "my-namespace"
          },
          "spec": {
            "createDeployment": true,
            "databaseName": "my_database",
            "dbms": "postgresql"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoKeycloakServer",
          "metadata": {
            "name": "my-keycloak",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "replicas": 1,
            "standardImage": "redhat-sso"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoClusterInfrastructure",
          "metadata": {
            "name": "my-entando-cluster-infrastructure",
            "namespace": "my-namespace"
          },
          "spec": {
            "environmentVariables": [],
            "replicas": 1
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoPlugin",
          "metadata": {
            "name": "my-entando-plugin",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "healthCheckPath": "/management/health",
            "image": "entando/entando-avatar-plugin:6.0.5",
            "ingressHostName": "my-plugin.apps-crc.testing",
            "ingressPath": "/avatarPlugin",
            "replicas": 1,
            "roles": [
              {
                "code": "admin",
                "name": "user"
              },
              {
                "code": "user",
                "name": "user"
              }
            ],
            "securityLevel": "strict"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoApp",
          "metadata": {
            "name": "my-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "ingressHostName": "my-app.apps-crc.testing",
            "replicas": 1,
            "standardServerImage": "eap"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoAppPluginLink",
          "metadata": {
            "name": "my-link",
            "namespace": "my-namespace"
          },
          "spec": {
            "entandoAppName": "my-app",
            "entandoPluginName": "my-plugin"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoCompositeApp",
          "metadata": {
            "name": "my-entando-composite-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "components": [
              {
                "kind": "EntandoDatabaseService",
                "metadata": {
                  "name": "inline-entando-database-service"
                },
                "spec": {
                  "createDeployment": true
                }
              },
              {
                "kind": "EntandoKeycloakServer",
                "metadata": {
                  "name": "inline-keycloak"
                },
                "spec": {
                  "standardImage": "redhat-sso"
                }
              },
              {
                "kind": "EntandoClusterInfrastructure",
                "metadata": {
                  "name": "inline-entando-cluster-infrastructure"
                },
                "spec": {}
              },
              {
                "kind": "EntandoApp",
                "metadata": {
                  "name": "inline-app"
                },
                "spec": {
                  "standardServerImage": "eap"
                }
              },
              {
                "kind": "EntandoPlugin",
                "metadata": {
                  "name": "inline-plugin"
                },
                "spec": {
                  "healthCheckPath": "/management/health",
                  "image": "entando/entando-avatar-plugin:6.0.5",
                  "ingressPath": "/avatarPlugin",
                  "roles": [
                    {
                      "code": "admin",
                      "name": "admin"
                    },
                    {
                      "code": "user",
                      "name": "user"
                    }
                  ]
                }
              },
              {
                "kind": "EntandoAppPluginLink",
                "metadata": {
                  "name": "inline-link"
                },
                "spec": {
                  "entandoAppName": "inline-app",
                  "entandoPluginName": "inline-plugin"
                }
              }
            ],
            "dbmsOverride": "postgresql",
            "ingressHostNameOverride": "entando.apps-crc.testing"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/entando/entando-operator@sha256:639e2d35738483c6c092ebe8636bbab50c0f2101bc06f2fe9a1c7f68b3ffc4a6",
      "bundle_path_digest": "sha256:639e2d35738483c6c092ebe8636bbab50c0f2101bc06f2fe9a1c7f68b3ffc4a6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-03T16:09:43.943000+00:00",
      "csv_description": "## Entando\n\nThe Entando platform accelerates the development and lifecycle  management of fully modularized applications on Kubernetes. It  provides tools to help developers create and manage applications  using modular frontend and backend components.\nThe Entando Operator automates the installation, provisioning, and  configuration management of the components that make up an Entando  application. Specifically, the operator manages the following custom  resources:\n**EntandoKeycloakServers** for centralized authentication of frontend  and backend components. The operator can deploy Keycloak, or in certified  environments, Red Hat SSO servers that can then be used by subsequent  deployments as an OpenID Connect provider.\n**EntandoApps** for hosting an Entando application. EntandoApps are hosted on Wildfly or JBoss EAP containers, and can also be used to deploy custom  EntandoApp containers.\n**EntandoPlugins** for deploying microservices to customize or enhance your EntandoApp. Entando microservice plugins are deployed to your cluster, and  then linked to one or more EntandoApps.\n## Using the Operator\nThe Entando Operator can be deployed using the default settings without any  configuration. Once deployed, the operator can be customized by editing  the *configmap* and secrets.\n### ConfigMap: entando-operator-config\nThe 'entando-operator-config' ConfigMap can be added after deployment and any changes to it will be picked up by the operator on subsequent event processing. It supports the following keys:\n\n    entando.k8s.operator.gc.controller.pods: set this to \"false\" to keep controller pods after completion.\n    entando.k8s.operator.compliance.mode: set this to \"community\" if there is no requirement for Red Hat compliance.\n    entando.k8s.operator.image.pull.secrets: a comma separated list containing the names of pull secrets that will be linked to all service accounts.\n    entando.k8s.operator.disable.pvc.garbage.collection: set this to \"false\" if you want Persistent Volume Claims to be deleted with the custom resources they are associated with.\n    entando.k8s.operator.impose.default.limits: set this to \"false\" if there is no need to limit the resource consumption of pods on your cluster.\n    entando.k8s.operator.request.to.limit.ratio: a decimal number that default limits will be multiplied by to calculate default requests for resources.\n    entando.k8s.operator.force.db.password.reset: set this to \"true\" if you plan to delete Secrets from your namespace but you want to retain the Database they point to.\n    entando.k8s.operator.pull.policy.override: specify your preferred pullPolicy for images. The default is Always.\n    entando.tls.secret.name: The name of a standard TLS secret to use for HTTPS Ingresses. See the section entando-tls-secret.\n    entando.ca.secret.name: The name of a secret containing CA certificates. See the section entando-ca-cert-secret.\n    entando.assume.external.https.provider: Set this to \"true\" if your cloud provider handles HTTPS for you.\n    entando.use.auto.cert.generation: Set this to \"true\" to have Openshift use its internal CA to generate certificates for your Routes.\n    entando.default.routing.suffix: The domain name that can be suffixed to deployment names when the ingressHostName is omitted. Needs to be preconfigured on your DNS provider.\n    entando.pod.completion.timeout.seconds: The time it will take before Entando fails a run-to-completion Pod.\n    entando.pod.readiness.timeout.seconds: The time it will take before Entando fails a Service Pod.\n    entando.pod.shutdown.timeout.seconds: The time Entando will give a Pod to shutdown gracefully.\n\n\n### entando-pull-secret\nThe secret to be used to pull Entando images from the Red Hat container registry. The name of this secret is hard coded as it is required for the ClusterServiceVersion of this Operator\n### entando-tls-secret\nA standard Kubernetes TLS secret that will be used on all deployments where no custom TLS secret name is specified.\n### entando-ca-cert-secret\nThis is an opaque secret in the Entando Operator's namespace that contains the certificates of all trusted certificate authorities in your environment. This is generally used mainly for self signed certificates. As is generally the case for opaque secrets, there are no constraints on the keys in this secret. However, limit the files inside the secret to X509 certificates or certificate chains. The Entando Operator will load all of these files into a Java keystore that it then configures as the trust store for each container that uses Java.\n",
      "csv_display_name": "Entando Operator",
      "csv_metadata_description": "Processes EntandoKeycloakServer, EntandoApp and EntandoPlugin custom resources and deploys the relevant containers in the Kubernetes cluster.",
      "csv_name": "entando-k8s-operator.v6.3.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:05:45.641000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "entando-k8s-operator",
      "provided_apis": [
        {
          "group": "entando.org",
          "kind": "EntandoCompositeApp",
          "plural": "entandocompositeapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDatabaseService",
          "plural": "entandodatabaseservices",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDeBundle",
          "plural": "entandodebundles",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoKeycloakServer",
          "plural": "entandokeycloakservers",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoPlugin",
          "plural": "entandoplugins",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoAppPluginLink",
          "plural": "entandoapppluginlinks",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoApp",
          "plural": "entandoapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoClusterInfrastructure",
          "plural": "entandoclusterinfrastructures",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.3.2",
      "version_original": "6.3.2"
    },
    {
      "_id": "61099407453d6347735bd2e3",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:64962f1aa0777ff7bec1605a7c13be82fa7596b3cc997ae62500b7714b75c084",
      "bundle_path_digest": "sha256:64962f1aa0777ff7bec1605a7c13be82fa7596b3cc997ae62500b7714b75c084",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-03T19:07:51.252000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.2.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:51:11.439000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "8.2.5",
      "version_original": "8.2.5"
    },
    {
      "_id": "610a4a05453d6347735bd568",
      "alm_examples": [
        {
          "api_version": "dynatrace.com/v1alpha1",
          "kind": "OneAgent",
          "metadata": {
            "name": "oneagent",
            "namespace": "dynatrace"
          },
          "spec": {
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api",
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists"
              }
            ],
            "useUnprivilegedMode": true
          }
        },
        {
          "api_version": "dynatrace.com/v1alpha1",
          "kind": "OneAgentAPM",
          "metadata": {
            "name": "oneagentapm",
            "namespace": "dynatrace"
          },
          "spec": {
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator-bundle@sha256:76c97a3d3feba26f2126c4dddb3d72648e0f4bda817880b4e13988c9fc69115e",
      "bundle_path_digest": "sha256:76c97a3d3feba26f2126c4dddb3d72648e0f4bda817880b4e13988c9fc69115e",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-08-04T08:04:21.559000+00:00",
      "csv_description": "The Dynatrace OneAgent Operator allows users to easily deploy full-stack monitoring for [OpenShift clusters](https://www.dynatrace.com/technologies/openshift-monitoring/). The Dynatrace OneAgent automatically monitors the workload running in containers down to the code and request level.\n\n### Installing the OneAgent\nOnce you've installed the Operator, you can create OneAgent custom resources to monitor your environment.\n\nFirst, please add a Secret within the Project you've deployed the Dynatrace Operator to, which would contain your API and PaaS tokens. Create tokens of type *Dynatrace API* (`API_TOKEN`) and *Platform as a Service* (`PAAS_TOKEN`) and use their values in the following commands respectively.\n\nFor assistance please refer to [Create user-generated access tokens](https://www.dynatrace.com/support/help/shortlink/token#create-user-generated-access-tokens).\n\n``` $ oc -n <project> create secret generic oneagent --from-literal=\"apiToken=API_TOKEN\" --from-literal=\"paasToken=PAAS_TOKEN\" ```\n\nYou may update this Secret at any time to rotate the tokens.\n\nThen please add an OneAgent object in the Project where the Operator has been deployed, configured to your needs.\n\n### Required Parameters\n* `apiUrl` - provide the URL to the API of your Dynatrace environment. In Dynatrace SaaS it will look like `https://<ENVIRONMENTID>.live.dynatrace.com/api` . In Dynatrace Managed like `https://<YourDynatraceServerURL>/e/<ENVIRONMENTID>/api` .\n\n### Advanced Options\n* **Image Override** - use a copy of the OneAgent container image from a registry other than Docker's or Red Hat's\n* **NodeSelectors** - select a subset of your cluster's nodes to run the Dynatrace OneAgent on, based on labels\n* **Tolerations** - add specific tolerations to the agent so that it can monitor all of the nodes in your cluster; we include the default toleration so that Dynatrace OneAgent also monitors the master nodes\n* **Priority Class Name** - define the priorityClassName for OneAgent pods\n* **Environment variables** - define environment variables for the OneAgent container\n* **Disable Certificate Checking** - disable any certificate validation that may interact poorly with proxies with in your cluster\n* **Disable OneAgent Update** - disable the Operator's auto-update feature for OneAgent pods\n* **Enable Istio Auto-config** - automatically create Istio objects for egress communication to the Dynatrace environment from the OneAgent\n\nFor a complete list of supported parameters please consult the [Operator Deploy Guide](https://www.dynatrace.com/support/help/shortlink/openshift-deploy).\n\n### Help\nYou can find more about our instructions in our [documentation](https://www.dynatrace.com/support/help/shortlink/openshift-deploy#install-oneagent-operator).\n",
      "csv_display_name": "Dynatrace OneAgent",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-monitoring.v0.10.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:52:13.030000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "oneagent-certified",
      "provided_apis": [
        {
          "group": "dynatrace.com",
          "kind": "OneAgentAPM",
          "version": "v1alpha1"
        },
        {
          "group": "dynatrace.com",
          "kind": "OneAgent",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "name": "dynatrace-oneagent-operator-0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2-annotation"
        },
        {
          "digest": "sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "name": "dynatrace-oneagent-operator"
        },
        {
          "digest": "sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "name": "webhook"
        },
        {
          "digest": "sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "name": "bootstrapper"
        },
        {
          "digest": "sha256:09c03345575f03325c4000d7eb98e1fc55502d7bb29c6fdb71c8b7e224f1ad7a",
          "image": "registry.connect.redhat.com/dynatrace/oneagent@sha256:09c03345575f03325c4000d7eb98e1fc55502d7bb29c6fdb71c8b7e224f1ad7a",
          "name": "dynatrace_oneagent"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.10.1",
      "version_original": "0.10.1"
    },
    {
      "_id": "610a4aab4b9725c294bb9a7a",
      "alm_examples": [
        {
          "api_version": "dynatrace.com/v1alpha1",
          "kind": "OneAgent",
          "metadata": {
            "name": "oneagent",
            "namespace": "dynatrace"
          },
          "spec": {
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api",
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists"
              }
            ],
            "useUnprivilegedMode": true
          }
        },
        {
          "api_version": "dynatrace.com/v1alpha1",
          "kind": "OneAgentAPM",
          "metadata": {
            "name": "oneagentapm",
            "namespace": "dynatrace"
          },
          "spec": {
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator-bundle@sha256:76c97a3d3feba26f2126c4dddb3d72648e0f4bda817880b4e13988c9fc69115e",
      "bundle_path_digest": "sha256:76c97a3d3feba26f2126c4dddb3d72648e0f4bda817880b4e13988c9fc69115e",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-08-04T08:07:07.633000+00:00",
      "csv_description": "The Dynatrace OneAgent Operator allows users to easily deploy full-stack monitoring for [OpenShift clusters](https://www.dynatrace.com/technologies/openshift-monitoring/). The Dynatrace OneAgent automatically monitors the workload running in containers down to the code and request level.\n\n### Installing the OneAgent\nOnce you've installed the Operator, you can create OneAgent custom resources to monitor your environment.\n\nFirst, please add a Secret within the Project you've deployed the Dynatrace Operator to, which would contain your API and PaaS tokens. Create tokens of type *Dynatrace API* (`API_TOKEN`) and *Platform as a Service* (`PAAS_TOKEN`) and use their values in the following commands respectively.\n\nFor assistance please refer to [Create user-generated access tokens](https://www.dynatrace.com/support/help/shortlink/token#create-user-generated-access-tokens).\n\n``` $ oc -n <project> create secret generic oneagent --from-literal=\"apiToken=API_TOKEN\" --from-literal=\"paasToken=PAAS_TOKEN\" ```\n\nYou may update this Secret at any time to rotate the tokens.\n\nThen please add an OneAgent object in the Project where the Operator has been deployed, configured to your needs.\n\n### Required Parameters\n* `apiUrl` - provide the URL to the API of your Dynatrace environment. In Dynatrace SaaS it will look like `https://<ENVIRONMENTID>.live.dynatrace.com/api` . In Dynatrace Managed like `https://<YourDynatraceServerURL>/e/<ENVIRONMENTID>/api` .\n\n### Advanced Options\n* **Image Override** - use a copy of the OneAgent container image from a registry other than Docker's or Red Hat's\n* **NodeSelectors** - select a subset of your cluster's nodes to run the Dynatrace OneAgent on, based on labels\n* **Tolerations** - add specific tolerations to the agent so that it can monitor all of the nodes in your cluster; we include the default toleration so that Dynatrace OneAgent also monitors the master nodes\n* **Priority Class Name** - define the priorityClassName for OneAgent pods\n* **Environment variables** - define environment variables for the OneAgent container\n* **Disable Certificate Checking** - disable any certificate validation that may interact poorly with proxies with in your cluster\n* **Disable OneAgent Update** - disable the Operator's auto-update feature for OneAgent pods\n* **Enable Istio Auto-config** - automatically create Istio objects for egress communication to the Dynatrace environment from the OneAgent\n\nFor a complete list of supported parameters please consult the [Operator Deploy Guide](https://www.dynatrace.com/support/help/shortlink/openshift-deploy).\n\n### Help\nYou can find more about our instructions in our [documentation](https://www.dynatrace.com/support/help/shortlink/openshift-deploy#install-oneagent-operator).\n",
      "csv_display_name": "Dynatrace OneAgent",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-monitoring.v0.10.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:52:46.990000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "oneagent-certified",
      "provided_apis": [
        {
          "group": "dynatrace.com",
          "kind": "OneAgentAPM",
          "plural": "oneagentapms",
          "version": "v1alpha1"
        },
        {
          "group": "dynatrace.com",
          "kind": "OneAgent",
          "plural": "oneagents",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "name": "dynatrace-oneagent-operator-0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2-annotation"
        },
        {
          "digest": "sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "name": "dynatrace-oneagent-operator"
        },
        {
          "digest": "sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "name": "webhook"
        },
        {
          "digest": "sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "name": "bootstrapper"
        },
        {
          "digest": "sha256:09c03345575f03325c4000d7eb98e1fc55502d7bb29c6fdb71c8b7e224f1ad7a",
          "image": "registry.connect.redhat.com/dynatrace/oneagent@sha256:09c03345575f03325c4000d7eb98e1fc55502d7bb29c6fdb71c8b7e224f1ad7a",
          "name": "dynatrace_oneagent"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.10.1",
      "version_original": "0.10.1"
    },
    {
      "_id": "610a4b3c6bbb00c64eecd944",
      "alm_examples": [
        {
          "api_version": "dynatrace.com/v1alpha1",
          "kind": "OneAgent",
          "metadata": {
            "name": "oneagent",
            "namespace": "dynatrace"
          },
          "spec": {
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api",
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists"
              }
            ],
            "useUnprivilegedMode": true
          }
        },
        {
          "api_version": "dynatrace.com/v1alpha1",
          "kind": "OneAgentAPM",
          "metadata": {
            "name": "oneagentapm",
            "namespace": "dynatrace"
          },
          "spec": {
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator-bundle@sha256:76c97a3d3feba26f2126c4dddb3d72648e0f4bda817880b4e13988c9fc69115e",
      "bundle_path_digest": "sha256:76c97a3d3feba26f2126c4dddb3d72648e0f4bda817880b4e13988c9fc69115e",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-08-04T08:09:32.487000+00:00",
      "csv_description": "The Dynatrace OneAgent Operator allows users to easily deploy full-stack monitoring for [OpenShift clusters](https://www.dynatrace.com/technologies/openshift-monitoring/). The Dynatrace OneAgent automatically monitors the workload running in containers down to the code and request level.\n\n### Installing the OneAgent\nOnce you've installed the Operator, you can create OneAgent custom resources to monitor your environment.\n\nFirst, please add a Secret within the Project you've deployed the Dynatrace Operator to, which would contain your API and PaaS tokens. Create tokens of type *Dynatrace API* (`API_TOKEN`) and *Platform as a Service* (`PAAS_TOKEN`) and use their values in the following commands respectively.\n\nFor assistance please refer to [Create user-generated access tokens](https://www.dynatrace.com/support/help/shortlink/token#create-user-generated-access-tokens).\n\n``` $ oc -n <project> create secret generic oneagent --from-literal=\"apiToken=API_TOKEN\" --from-literal=\"paasToken=PAAS_TOKEN\" ```\n\nYou may update this Secret at any time to rotate the tokens.\n\nThen please add an OneAgent object in the Project where the Operator has been deployed, configured to your needs.\n\n### Required Parameters\n* `apiUrl` - provide the URL to the API of your Dynatrace environment. In Dynatrace SaaS it will look like `https://<ENVIRONMENTID>.live.dynatrace.com/api` . In Dynatrace Managed like `https://<YourDynatraceServerURL>/e/<ENVIRONMENTID>/api` .\n\n### Advanced Options\n* **Image Override** - use a copy of the OneAgent container image from a registry other than Docker's or Red Hat's\n* **NodeSelectors** - select a subset of your cluster's nodes to run the Dynatrace OneAgent on, based on labels\n* **Tolerations** - add specific tolerations to the agent so that it can monitor all of the nodes in your cluster; we include the default toleration so that Dynatrace OneAgent also monitors the master nodes\n* **Priority Class Name** - define the priorityClassName for OneAgent pods\n* **Environment variables** - define environment variables for the OneAgent container\n* **Disable Certificate Checking** - disable any certificate validation that may interact poorly with proxies with in your cluster\n* **Disable OneAgent Update** - disable the Operator's auto-update feature for OneAgent pods\n* **Enable Istio Auto-config** - automatically create Istio objects for egress communication to the Dynatrace environment from the OneAgent\n\nFor a complete list of supported parameters please consult the [Operator Deploy Guide](https://www.dynatrace.com/support/help/shortlink/openshift-deploy).\n\n### Help\nYou can find more about our instructions in our [documentation](https://www.dynatrace.com/support/help/shortlink/openshift-deploy#install-oneagent-operator).\n",
      "csv_display_name": "Dynatrace OneAgent",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-monitoring.v0.10.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:11:25.973000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "oneagent-certified",
      "provided_apis": [
        {
          "group": "dynatrace.com",
          "kind": "OneAgentAPM",
          "plural": "oneagentapms",
          "version": "v1alpha1"
        },
        {
          "group": "dynatrace.com",
          "kind": "OneAgent",
          "plural": "oneagents",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "name": "dynatrace-oneagent-operator-0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2-annotation"
        },
        {
          "digest": "sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "name": "dynatrace-oneagent-operator"
        },
        {
          "digest": "sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "name": "webhook"
        },
        {
          "digest": "sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "name": "bootstrapper"
        },
        {
          "digest": "sha256:09c03345575f03325c4000d7eb98e1fc55502d7bb29c6fdb71c8b7e224f1ad7a",
          "image": "registry.connect.redhat.com/dynatrace/oneagent@sha256:09c03345575f03325c4000d7eb98e1fc55502d7bb29c6fdb71c8b7e224f1ad7a",
          "name": "dynatrace_oneagent"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.10.1",
      "version_original": "0.10.1"
    },
    {
      "_id": "610a4d39dd1aaa9129b0d053",
      "alm_examples": [
        {
          "api_version": "dynatrace.com/v1alpha1",
          "kind": "OneAgent",
          "metadata": {
            "name": "oneagent",
            "namespace": "dynatrace"
          },
          "spec": {
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api",
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists"
              }
            ],
            "useUnprivilegedMode": true
          }
        },
        {
          "api_version": "dynatrace.com/v1alpha1",
          "kind": "OneAgentAPM",
          "metadata": {
            "name": "oneagentapm",
            "namespace": "dynatrace"
          },
          "spec": {
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator-bundle@sha256:76c97a3d3feba26f2126c4dddb3d72648e0f4bda817880b4e13988c9fc69115e",
      "bundle_path_digest": "sha256:76c97a3d3feba26f2126c4dddb3d72648e0f4bda817880b4e13988c9fc69115e",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-08-04T08:18:01.326000+00:00",
      "csv_description": "The Dynatrace OneAgent Operator allows users to easily deploy full-stack monitoring for [OpenShift clusters](https://www.dynatrace.com/technologies/openshift-monitoring/). The Dynatrace OneAgent automatically monitors the workload running in containers down to the code and request level.\n\n### Installing the OneAgent\nOnce you've installed the Operator, you can create OneAgent custom resources to monitor your environment.\n\nFirst, please add a Secret within the Project you've deployed the Dynatrace Operator to, which would contain your API and PaaS tokens. Create tokens of type *Dynatrace API* (`API_TOKEN`) and *Platform as a Service* (`PAAS_TOKEN`) and use their values in the following commands respectively.\n\nFor assistance please refer to [Create user-generated access tokens](https://www.dynatrace.com/support/help/shortlink/token#create-user-generated-access-tokens).\n\n``` $ oc -n <project> create secret generic oneagent --from-literal=\"apiToken=API_TOKEN\" --from-literal=\"paasToken=PAAS_TOKEN\" ```\n\nYou may update this Secret at any time to rotate the tokens.\n\nThen please add an OneAgent object in the Project where the Operator has been deployed, configured to your needs.\n\n### Required Parameters\n* `apiUrl` - provide the URL to the API of your Dynatrace environment. In Dynatrace SaaS it will look like `https://<ENVIRONMENTID>.live.dynatrace.com/api` . In Dynatrace Managed like `https://<YourDynatraceServerURL>/e/<ENVIRONMENTID>/api` .\n\n### Advanced Options\n* **Image Override** - use a copy of the OneAgent container image from a registry other than Docker's or Red Hat's\n* **NodeSelectors** - select a subset of your cluster's nodes to run the Dynatrace OneAgent on, based on labels\n* **Tolerations** - add specific tolerations to the agent so that it can monitor all of the nodes in your cluster; we include the default toleration so that Dynatrace OneAgent also monitors the master nodes\n* **Priority Class Name** - define the priorityClassName for OneAgent pods\n* **Environment variables** - define environment variables for the OneAgent container\n* **Disable Certificate Checking** - disable any certificate validation that may interact poorly with proxies with in your cluster\n* **Disable OneAgent Update** - disable the Operator's auto-update feature for OneAgent pods\n* **Enable Istio Auto-config** - automatically create Istio objects for egress communication to the Dynatrace environment from the OneAgent\n\nFor a complete list of supported parameters please consult the [Operator Deploy Guide](https://www.dynatrace.com/support/help/shortlink/openshift-deploy).\n\n### Help\nYou can find more about our instructions in our [documentation](https://www.dynatrace.com/support/help/shortlink/openshift-deploy#install-oneagent-operator).\n",
      "csv_display_name": "Dynatrace OneAgent",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-monitoring.v0.10.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:15:49.379000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "oneagent-certified",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "name": "dynatrace-oneagent-operator-0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2-annotation"
        },
        {
          "digest": "sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "name": "dynatrace-oneagent-operator"
        },
        {
          "digest": "sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "name": "webhook"
        },
        {
          "digest": "sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:0c91309827f6b765068ac4f1e9b0e77c188e2aa4f127fb1463c5b0fc551826e2",
          "name": "bootstrapper"
        },
        {
          "digest": "sha256:09c03345575f03325c4000d7eb98e1fc55502d7bb29c6fdb71c8b7e224f1ad7a",
          "image": "registry.connect.redhat.com/dynatrace/oneagent@sha256:09c03345575f03325c4000d7eb98e1fc55502d7bb29c6fdb71c8b7e224f1ad7a",
          "name": "dynatrace_oneagent"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.10.1",
      "version_original": "0.10.1"
    },
    {
      "_id": "610a68746bbb00c64eecd9d8",
      "alm_examples": [
        {
          "api_version": "atlas.mongodb.com/v1",
          "kind": "AtlasCluster",
          "metadata": {
            "name": "my-atlas-cluster"
          },
          "spec": {
            "name": "test-cluster",
            "projectRef": {
              "name": "my-project"
            },
            "providerSettings": {
              "instanceSizeName": "M10",
              "providerName": "AWS",
              "regionName": "US_EAST_1"
            }
          }
        },
        {
          "api_version": "atlas.mongodb.com/v1",
          "kind": "AtlasDatabaseUser",
          "metadata": {
            "name": "my-database-user"
          },
          "spec": {
            "databaseName": "admin",
            "passwordSecretRef": {
              "name": "my-database-user-password"
            },
            "projectRef": {
              "name": "my-project"
            },
            "roles": [
              {
                "databaseName": "admin",
                "roleName": "readWriteAnyDatabase"
              }
            ],
            "username": "david"
          }
        },
        {
          "api_version": "atlas.mongodb.com/v1",
          "kind": "AtlasProject",
          "metadata": {
            "name": "my-project"
          },
          "spec": {
            "name": "Test Atlas Operator Project",
            "projectIpAccessList": [
              {
                "comment": "IP address for Application Server A",
                "ipAddress": "192.0.2.15"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/mongodb-atlas-kubernetes-operator-bundle@sha256:60239e3cd0dde55b7e5836daa867eecfa0ec6cf2a91c03fe03b2fa1acdd59f96",
      "bundle_path_digest": "sha256:60239e3cd0dde55b7e5836daa867eecfa0ec6cf2a91c03fe03b2fa1acdd59f96",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-08-04T10:14:12.204000+00:00",
      "csv_description": "The MongoDB Atlas Operator provides a native integration between the Kubernetes orchestration platform and MongoDB Atlas \u2014\nthe only multi-cloud document database service that gives you the versatility you need to build sophisticated and resilient applications that can adapt to changing customer demands and market trends.\n\n> Current Status: *trial version*. The Operator gives users the ability to provision\n> Atlas projects, clusters and database users using Kubernetes Specifications and bind connection information\n> into applications deployed to Kubernetes. More features like private endpoints, backup management, LDAP/X.509 authentication, etc.\n> are yet to come.\n\n\n## Quick Start guide\n### Step 1. Deploy Kubernetes operator by clicking Install button.\n\n### Step 2. Create Atlas Cluster\n\n**1.** Create an Atlas API Key Secret\nIn order to work with the Atlas Operator you need to provide [authentication information](https://docs.atlas.mongodb.com/configure-api-access)\n to allow the Atlas Operator to communicate with Atlas API. Once you have generated a Public and Private key in Atlas, you can create a Kuberentes Secret with:\n```\nkubectl create secret generic mongodb-atlas-operator-api-key \\\n         --from-literal=\"orgId=<the_atlas_organization_id>\" \\\n         --from-literal=\"publicApiKey=<the_atlas_api_public_key>\" \\\n         --from-literal=\"privateApiKey=<the_atlas_api_private_key>\" \\\n         -n openshift-operators\n```\n(Note, that you should use the namespace where the Operator was installed - it's `openshift-operators` by default)\n\n**2.** Create an `AtlasProject` Custom Resource\n\nThe `AtlasProject` CustomResource represents Atlas Projects in our Kubernetes cluster. You need to specify\n`projectIpAccessList` with the IP addresses or CIDR blocks of any hosts that will connect to the Atlas Cluster.\n```\napiVersion: atlas.mongodb.com/v1\nkind: AtlasProject\nmetadata:\n  name: my-project\nspec:\n  name: Test Atlas Operator Project\n  projectIpAccessList:\n    - ipAddress: \"192.0.2.15\"\n      comment: \"IP address for Application Server A\"\n    - ipAddress: \"203.0.113.0/24\"\n      comment: \"CIDR block for Application Server B - D\"\n```\n**3.** Create an `AtlasCluster` Custom Resource.\nThe example below is a minimal configuration to create an M10 Atlas cluster in the AWS US East region. For a full list of properties, check\n`atlasclusters.atlas.mongodb.com` [CRD specification](config/crd/bases/atlas.mongodb.com_atlasclusters.yaml)):\n```\napiVersion: atlas.mongodb.com/v1\nkind: AtlasCluster\nmetadata:\n  name: my-atlas-cluster\nspec:\n  name: \"Test-cluster\"\n  projectRef:\n    name: my-project\n  providerSettings:\n    instanceSizeName: M10\n    providerName: AWS\n    regionName: US_EAST_1\n```\n\n**4.** Create a database user password Kubernetes Secret\nThe Secret must be created in the same namespace as the `AtlasCluster` and `AtlasProject` were created.\n```\nkubectl create secret generic the-user-password --from-literal=\"password=P@@sword%\"\n```\n\n**5.** Create an `AtlasDatabaseUser` Custom Resource\n\nIn order to connect to an Atlas Cluster the database user needs to be created. `AtlasDatabaseUser` resource should reference\nthe password Kubernetes Secret created in the previous step.\n```\napiVersion: atlas.mongodb.com/v1\nkind: AtlasDatabaseUser\nmetadata:\n  name: my-database-user\nspec:\n  roles:\n    - roleName: \"readWriteAnyDatabase\"\n      databaseName: \"admin\"\n  projectRef:\n    name: my-project\n  username: theuser\n  passwordSecretRef:\n    name: the-user-password\n```\n**6.** Wait for the `AtlasDatabaseUser` Custom Resource to be ready\n\nWait until the AtlasDatabaseUser resource gets to \"ready\" status (it will wait until the cluster is created that may take around 10 minutes):\n```\nkubectl get atlasdatabaseusers my-database-user -o=jsonpath='{.status.conditions[?(@.type==\"Ready\")].status}'\nTrue\n```\n### Step 3. Connect your application to the Atlas Cluster\n\nThe Atlas Operator will create a Kubernetes Secret with the information necessary to connect to the Atlas Cluster created\nin the previous step. An application in the same Kubernetes Cluster can mount and use the Secret:\n\n```\n...\ncontainers:\n      - name: test-app\n        env:\n         - name: \"CONNECTION_STRING\"\n           valueFrom:\n             secretKeyRef:\n               name: test-atlas-operator-project-test-cluster-theuser\n               key: connectionStringStandardSrv\n\n```\n",
      "csv_display_name": "MongoDB Atlas Operator",
      "csv_metadata_description": "The MongoDB Atlas Kubernetes Operator enables easy management of Clusters in MongoDB Atlas",
      "csv_name": "mongodb-atlas-kubernetes.v0.6.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:22:16.581000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "mongodb-atlas-kubernetes",
      "provided_apis": [
        {
          "group": "atlas.mongodb.com",
          "kind": "AtlasProject",
          "plural": "atlasprojects",
          "version": "v1"
        },
        {
          "group": "atlas.mongodb.com",
          "kind": "AtlasCluster",
          "plural": "atlasclusters",
          "version": "v1"
        },
        {
          "group": "atlas.mongodb.com",
          "kind": "AtlasDatabaseUser",
          "plural": "atlasdatabaseusers",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:5f15d2d76518e1fcc87051651333167bf40df6dd060992f64e65ff8c1e1029be",
          "image": "registry.connect.redhat.com/mongodb/mongodb-atlas-kubernetes-operator@sha256:5f15d2d76518e1fcc87051651333167bf40df6dd060992f64e65ff8c1e1029be",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.6.1",
      "version_original": "0.6.1"
    },
    {
      "_id": "610bc8bf6bbb00c64eecdab8",
      "alm_examples": [
        {
          "api_version": "fep.fujitsu.io/v2",
          "kind": "FEPCluster",
          "metadata": {
            "name": "new-fep"
          },
          "spec": {
            "fep": {
              "customAnnotations": {
                "allDeployments": {}
              },
              "forceSsl": true,
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "instances": "1",
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "podAntiAffinity": false,
              "podDisruptionBudget": false,
              "servicePort": 27500,
              "syncMode": "off",
              "sysExtraLogging": false
            },
            "fepChildCrVal": {
              "backup": {
                "image": {
                  "pullPolicy": "IfNotPresent"
                },
                "mcSpec": {
                  "limits": {
                    "cpu": "0.2",
                    "memory": "300Mi"
                  },
                  "requests": {
                    "cpu": "0.1",
                    "memory": "200Mi"
                  }
                },
                "pgbackrestParams": " ",
                "postScript": " ",
                "preScript": " ",
                "schedule": {
                  "num": 2
                },
                "schedule1": {
                  "schedule": "15 0 * * 0",
                  "type": "full"
                },
                "schedule2": {
                  "schedule": "15 0 * * 1-6",
                  "type": "incr"
                },
                "schedule3": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule4": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule5": {
                  "schedule": " ",
                  "type": " "
                }
              },
              "customPgAudit": "# define pg audit custom params here to override defaults.\n# if log volume is not defined, log_directory should be \n# changed to '/database/userdata/data/log'\n[output]\nlogger = 'auditlog'\nlog_directory = '/database/log/audit'\n[rule]\n",
              "customPgHba": "# define pg_hba custom rules here to be merged with default rules.\n# TYPE     DATABASE        USER        ADDRESS        METHOD\n",
              "customPgParams": "# define custom postgresql.conf parameters below to override defaults.\n# Current values are as per default FEP deployment\nshared_preload_libraries='pgx_datamasking,vci,pgaudit,pg_prewarm'\nsession_preload_libraries='vci,pg_prewarm'\nmax_prepared_transactions = 100\nmax_worker_processes = 30\nmax_connections = 100\nwork_mem = 1MB\nmaintenance_work_mem = 12MB\nshared_buffers = 128MB\neffective_cache_size = 384MB\ncheckpoint_completion_target = 0.8\n\n# tcp parameters\ntcp_keepalives_idle = 30\ntcp_keepalives_interval = 10\ntcp_keepalives_count = 3\n\n# logging parameters in default fep installation\n# if log volume is not defined, log_directory should be \n# changed to '/database/userdata/data/log'\nlog_directory = '/database/log'\nlog_filename = 'logfile-%a.log'\nlog_file_mode = 0600\nlog_truncate_on_rotation = on\nlog_rotation_age = 1d\nlog_rotation_size = 0\nlog_checkpoints = on\nlog_line_prefix = '%e %t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h'\nlog_lock_waits = on\nlog_autovacuum_min_duration = 60s\nlogging_collector = on\npgaudit.config_file='/opt/app-root/src/pgaudit-cfg/pgaudit.conf'\nlog_replication_commands = on\nlog_min_messages = WARNING\nlog_destination = stderr\n\n# vci parameters in default fep installation\nvci.enable = on\nvci.maintenance_work_mem = 256MB\nvci.max_local_ros = 64MB\nvci.force_max_parallelism = off\n\n# wal_archive parameters in default fep installation\narchive_mode = on\narchive_command = 'pgbackrest --stanza=backupstanza --config=/database/userdata/pgbackrest.conf archive-push %p'\nwal_level = replica\nmax_wal_senders = 12\nwal_keep_segments = 64\n\n",
              "storage": {
                "archivewalVol": {
                  "size": "1Gi"
                },
                "backupVol": {
                  "size": "2Gi"
                },
                "dataVol": {
                  "size": "2Gi"
                },
                "logVol": {
                  "size": "1Gi"
                },
                "tablespaceVol": {
                  "size": "512Mi"
                },
                "walVol": {
                  "size": "1200Mi"
                }
              },
              "sysUsers": {
                "pgAdminPassword": "admin-password",
                "pgdb": "mydb",
                "pgpassword": "mydbpassword",
                "pgreplpassword": "repluserpwd",
                "pgrepluser": "repluser",
                "pguser": "mydbuser",
                "tdepassphrase": "tde-passphrase"
              },
              "systemCertificates": {
                "cacrt": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
                "crt": "-----BEGIN CERTIFICATE-----\nMIIDUTCCAjmgAwIBAgIRAMocW3qMoHrD6qRvMPppMkMwDQYJKoZIhvcNAQELBQAw\nNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9yIEt1\nYmVybmV0ZXMwHhcNMjEwMjA2MDQzMjM2WhcNMjYwMjA1MDQzMjM2WjA/MRAwDgYD\nVQQKEwdGdWppdHN1MSswKQYDVQQDEyJGVUpJVFNVIEVudGVycHJpc2UgUG9zdGdy\nZXMgU2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4AI33yvH\nZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I2e4SceTKi6O3C/I1XuvWlpng\n5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4ANB5JWWqDOjrRT3o7nRPGXfila\nbP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYpmjdbfxabTz07ig0+6/cwKoRR\nxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTFYvmAH7gcdssSFBt8NPlUATHE\nsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6Wdgmu5H2pDml8CDNLDv98Aj7i\n+I5SRKKcVPlnuQIDAQABo1AwTjAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUH\nAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBQcwrrUO0u+FhIUuVdrDRCQRsi6\nZjANBgkqhkiG9w0BAQsFAAOCAQEAm5dxBoI9pScOCvRAchg4CprdRDSJb9K6yB3O\nnCAxnM47iHeXnY3WlnI388kHu8DU7O4ba1tJbGs3KY9KzioPk43pU12jWkO1onoF\n+mTDjx/Ef1cYWA9r5q/LtgTa6Q2sxV4O2x67QW82aAnaxO34dV5zWCPIvAoovZBV\nHRT+BgCg3r2vD1RGKK2nl1aYJtWhO1SZubam+VttdZ/vbM9oOJctxmImsEtBXjkY\nKteePdQtLL5o03JhyXWyRshCq+HMmKf2KgyY8gvydGcP4eLQdBWcW40LcnVq6UjT\n0kJycJEKngMVademq1ZWHGaiYB7hyT6GhgIcHUJ2cKrPgbEh1Q==\n-----END CERTIFICATE-----",
                "key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEA4AI33yvHZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I\n2e4SceTKi6O3C/I1XuvWlpng5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4AN\nB5JWWqDOjrRT3o7nRPGXfilabP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYp\nmjdbfxabTz07ig0+6/cwKoRRxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTF\nYvmAH7gcdssSFBt8NPlUATHEsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6W\ndgmu5H2pDml8CDNLDv98Aj7i+I5SRKKcVPlnuQIDAQABAoIBAFPQYKlOzw/+BA0b\nyMIUpdctIMb/54CR/xR0mVw1DbSjigNVPjHUQvB8Y1B2FAITQObgJO06bAv0QdWN\nRb0/v/yYiNJDFjaLjaIAHlO/2+oWrXbFaZqgpVDJhB+e1xaZr2x7XGxm+p925k30\nl6pvIRY+I8JRKvZiV1VZHwL/R3JOtPr++xMZtLVjVOI+f+ySqJ+TZHuAjm49EKxj\ncEmmJ28b7QcziXsvKy00f+zbqLIBKXQdZAFU5eEr1BsDRXdRW+Kf0XIvftuy4BJZ\nvoKT+VGhEvF/qysswL4+6IAO6tpuYnnM0Y2d3sOGoWPkTcQK0MekYKzL/WmtCjNs\n9hodJtECgYEA5EWyhEOf4uOKe5TDp697UCUvXLoOR58FDe/S8XNvScn29jjOkqIg\nOMoqo9xAkJTNTzqn5UUdt1x/pgM2NxlPLFijrc0zQlX3SoOO2ryDd9WNi7YKtN16\nKJqa536WeZu2OEbuAZ+S3GALVy1RPeTNPnUOmKnF06DjDUGzLNCZy10CgYEA+zfw\n952DWuz1U0Z4wvAEqqcgUKXPKrkTXV/iUnjkDkrLYVr0ZofDNTXrdHl+UedFmaOC\ncieZn6DNhcdz5tKtyysGMH3g/qs9PfoGUngvcXsy0Egk04l3x1jc8TTCLqXZXYaQ\nHMsx51n+R58oncPtzYSUOr9qQ6PbC2CstTbFJA0CgYEAjGEsUliAB/jknfEzjXjG\nPdhQUxb8VyE864Az2lah9t/kJzFyIAziAeqZ5GE7t247AGFTBRTHHI8e1Qoemi3P\nWbc9GVIbFs1lIYbcIDpUIyrKPEP8O5QEXtoNLxXTFgAjRGKiVY87spjCAJ+W2ZhO\ne/1it5GYXfgQCYQA2yuBmOUCgYANRkR2YR1axaCk+NlSu6oTdmdPu6M5x7PNQE7O\nOtMaKjua9lppvIzFGAdMDUtueoEEAE7ZR1xnwfB6PDLUpJdIYAqgr1YfPt8qkjaZ\nTv56yZ7CwL0pbF8m6nwqRrZoDp1wwraEvvvxFKFKGY/k3kCHlpTakdjEoDjn3gDi\nRnWeVQKBgCEneMSzucei5LRppRtRaJw/Btll8qlPMlX3W7dxQ3cLwpmLOn0m51Fp\nPIZ44zYK8R6fu4+/sSrlfaIg86Ugeufp6YNxyNROKxUGza5vDIu5OftwWtBeg+UK\nZ8lLWNdX6pp7WMujmF3H1DrkBbauYMUKZ4UxUYtelgHERMePIxwb\n-----END RSA PRIVATE KEY-----"
              }
            }
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPAction",
          "metadata": {
            "name": "new-fep-action"
          },
          "spec": {
            "fepAction": {
              "args": [
                "new-fep-sts-0"
              ],
              "type": "reload"
            },
            "sysExtraLogging": false,
            "targetClusterName": "new-fep"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPPgpool2",
          "metadata": {
            "name": "new-fep-pgpool2"
          },
          "spec": {
            "customparams": "listen_addresses = '*'\npcp_listen_addresses = '*'\nnum_init_children = 32\nreserved_connections = 0\nenable_pool_hba = off\nallow_clear_text_frontend_auth = off\nauthentication_timeout = 80\nbackend_weight0 = 1\nbackend_weight1 = 1\nbackend_flag0 = 'DISALLOW_TO_FAILOVER'\nbackend_flag1 = 'DISALLOW_TO_FAILOVER'\nconnection_cache = on\nmax_pool = 4\nlisten_backlog_multiplier = 2\nserialize_accept = off\nchild_life_time = 300\nclient_idle_limit = 0\nchild_max_connections = 0\nconnection_life_time = 0\nreset_query_list = 'ABORT; DISCARD ALL'\nclient_min_messages = info\nlog_min_messages = debug1\nlog_statement = on\nlog_per_node_statement = on\nlog_client_messages = on\nlog_hostname = on\nlog_connections = on\nlog_line_prefix = '%t: pid %p: '\nload_balance_mode = on\nignore_leading_white_space = on\nwhite_function_list = ''\nblack_function_list = 'currval,lastval,nextval,setval'\nblack_query_pattern_list = ''\ndatabase_redirect_preference_list = ''\napp_name_redirect_preference_list = ''\nallow_sql_comments = off\ndisable_load_balance_on_write = 'transaction'\nstatement_level_load_balance = on\nconnect_timeout = 10000\nsr_check_period = 0\nsr_check_user = ' postgres '\ndelay_threshold = 0\nlog_standby_delay = 'none'\nssl = off\nssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL'\nssl_prefer_server_ciphers = off\nssl_ecdh_curve = 'prime256v1'\nssl_dh_params_file = ''\nrelcache_expire = 0\nrelcache_size = 256\ncheck_temp_table = catalog\ncheck_unlogged_table = on\nenable_shared_relcache = on\nrelcache_query_target = master\n\n",
            "fepclustername": "new-fep",
            "imagePullPolicy": "IfNotPresent"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPRestore",
          "metadata": {
            "name": "new-fep-restore"
          },
          "spec": {
            "fromFEPcluster": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "mcSpec": {
              "limits": {
                "cpu": "200m",
                "memory": "300Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "200Mi"
              }
            },
            "restoretype": "latest",
            "toFEPcluster": "new-fep-2"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/fujitsu-postgres/fujitsu-enterprise-postgres-bundle@sha256:c7c2737e5b4946c78c1f1d5433aef205c383681299b315784d3e5b7b46d2de34",
      "bundle_path_digest": "sha256:c7c2737e5b4946c78c1f1d5433aef205c383681299b315784d3e5b7b46d2de34",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-05T11:17:19.280000+00:00",
      "csv_description": "FUJITSU Enterprise Postgres 12 delivers an enterprise-grade PostgreSQL on OpenShift Container Platform.\n\nThis solution provides the flexibility of a hybrid cloud solution while delivering an enhanced distribution\nof PostgreSQL to support enterprise-level workloads and provide improved deployment and management,\navailability, performance, data governance and security.\n\nAvailable as a multi-architecture container built for both amd64 and s390x.\n\nUse of the product is subject to Fujitsu evaluation license located at:\nhttps://www.fast.fujitsu.com/fujitsu-enterprise-postgres-trial-version-software-evaluation-license-agreement\nand the license period is 90 days after the download\n",
      "csv_display_name": "FUJITSU Enterprise Postgres 12 Operator",
      "csv_metadata_description": "OpenShift Operator for Fujitsu Enterprise Postgres 12",
      "csv_name": "fujitsu-enterprise-operator.v2.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:49:36.911000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "fep-ansible-operator",
      "provided_apis": [
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCert",
          "plural": "fepcerts",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPRestore",
          "plural": "feprestores",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPVolume",
          "plural": "fepvolumes",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPAction",
          "plural": "fepactions",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPBackup",
          "plural": "fepbackups",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCluster",
          "plural": "fepclusters",
          "version": "v2"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPConfig",
          "plural": "fepconfigs",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2Cert",
          "plural": "feppgpool2certs",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2",
          "plural": "feppgpool2s",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPUser",
          "plural": "fepusers",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:f168bdac1c42b864ebb18f843debbd4da9033cd465025d01dcb0490b9fb573d9",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-operator@sha256:f168bdac1c42b864ebb18f843debbd4da9033cd465025d01dcb0490b9fb573d9",
          "name": "fujitsu-enterprise-postgres-12-operator-f168bdac1c42b864ebb18f843debbd4da9033cd465025d01dcb0490b9fb573d9-annotation"
        },
        {
          "digest": "sha256:618b61707b38fe8a9636766261a5ea70b45f4c2549dde769c5b20a8ebca8f59d",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-operator@sha256:618b61707b38fe8a9636766261a5ea70b45f4c2549dde769c5b20a8ebca8f59d",
          "name": "fep-ansible-operator"
        },
        {
          "digest": "sha256:a9edcb9a3464c19bd6e7d772a084f05452b893b9ae3dc1dbf30da35dcb681ee3",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-server@sha256:a9edcb9a3464c19bd6e7d772a084f05452b893b9ae3dc1dbf30da35dcb681ee3",
          "name": "fep"
        },
        {
          "digest": "sha256:953833154e75d79b15f96790368ad38fb20f05a48bf1b75be1968632fd5bdb40",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-backup@sha256:953833154e75d79b15f96790368ad38fb20f05a48bf1b75be1968632fd5bdb40",
          "name": "backup"
        },
        {
          "digest": "sha256:0bdff064fcebea38f4d796ddbf0de211e4ba6bb297e42dc514d5ef44980ee313",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-restore@sha256:0bdff064fcebea38f4d796ddbf0de211e4ba6bb297e42dc514d5ef44980ee313",
          "name": "restore"
        },
        {
          "digest": "sha256:2ecd8feb1a9fec0ed015908a5c53a8d4df405703068d0de21effdb3f3d33a8df",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-pgpool2@sha256:2ecd8feb1a9fec0ed015908a5c53a8d4df405703068d0de21effdb3f3d33a8df",
          "name": "pgpool2"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2.2.1",
      "version_original": "2.2.1"
    },
    {
      "_id": "610c311a1faba499d0f16894",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
                "priorityClassName": "",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              }
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:6f4ff463c67af42c1c3603e36e512a60dedb95775380a1a6b26c4cded86de5e1",
      "bundle_path_digest": "sha256:6f4ff463c67af42c1c3603e36e512a60dedb95775380a1a6b26c4cded86de5e1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-08-05T18:42:34.177000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.2.8 of the NeuVector Certified Operator deploys version 4.3.1 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         NAME                              ROLE                                          AGE     USERS   GROUPS   SERVICEACCOUNTS\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:51:38.420000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72",
          "name": "neuvector-operator-9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72-annotation"
        },
        {
          "digest": "sha256:9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:55b3d9873846d0a8670b58e8a8a76c426d3aba74d4e5c4fca43d05c1dd296f10",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:55b3d9873846d0a8670b58e8a8a76c426d3aba74d4e5c4fca43d05c1dd296f10",
          "name": "controller"
        },
        {
          "digest": "sha256:fdd66288454dd01f4f618c8cf04c7da501d4362773266ec6f448d63e26e3a35c",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:fdd66288454dd01f4f618c8cf04c7da501d4362773266ec6f448d63e26e3a35c",
          "name": "enforcer"
        },
        {
          "digest": "sha256:73445c18ea18f131b6fa630a97623a3043d05758205ef93fc02fa920abbedaa6",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:73445c18ea18f131b6fa630a97623a3043d05758205ef93fc02fa920abbedaa6",
          "name": "manager"
        },
        {
          "digest": "sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "name": "scanner"
        },
        {
          "digest": "sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
          "image": "registry.access.redhat.com/ubi8@sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
          "name": "updater"
        },
        {
          "digest": "sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "name": "scanner-a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06-annotation"
        },
        {
          "digest": "sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
          "image": "registry.access.redhat.com/ubi8@sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
          "name": "ubi8-091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.2.8",
      "version_original": "1.2.8"
    },
    {
      "_id": "610c322b1faba499d0f16895",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
                "priorityClassName": "",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              }
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:6f4ff463c67af42c1c3603e36e512a60dedb95775380a1a6b26c4cded86de5e1",
      "bundle_path_digest": "sha256:6f4ff463c67af42c1c3603e36e512a60dedb95775380a1a6b26c4cded86de5e1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-08-05T18:47:07.689000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.2.8 of the NeuVector Certified Operator deploys version 4.3.1 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         NAME                              ROLE                                          AGE     USERS   GROUPS   SERVICEACCOUNTS\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:25:18.802000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72",
          "name": "neuvector-operator-9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72-annotation"
        },
        {
          "digest": "sha256:9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:55b3d9873846d0a8670b58e8a8a76c426d3aba74d4e5c4fca43d05c1dd296f10",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:55b3d9873846d0a8670b58e8a8a76c426d3aba74d4e5c4fca43d05c1dd296f10",
          "name": "controller"
        },
        {
          "digest": "sha256:fdd66288454dd01f4f618c8cf04c7da501d4362773266ec6f448d63e26e3a35c",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:fdd66288454dd01f4f618c8cf04c7da501d4362773266ec6f448d63e26e3a35c",
          "name": "enforcer"
        },
        {
          "digest": "sha256:73445c18ea18f131b6fa630a97623a3043d05758205ef93fc02fa920abbedaa6",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:73445c18ea18f131b6fa630a97623a3043d05758205ef93fc02fa920abbedaa6",
          "name": "manager"
        },
        {
          "digest": "sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "name": "scanner"
        },
        {
          "digest": "sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
          "image": "registry.access.redhat.com/ubi8@sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
          "name": "updater"
        },
        {
          "digest": "sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "name": "scanner-a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06-annotation"
        },
        {
          "digest": "sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
          "image": "registry.access.redhat.com/ubi8@sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
          "name": "ubi8-091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.2.8",
      "version_original": "1.2.8"
    },
    {
      "_id": "610c330b0f5e559095d7e1ed",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
                "priorityClassName": "",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              }
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:6f4ff463c67af42c1c3603e36e512a60dedb95775380a1a6b26c4cded86de5e1",
      "bundle_path_digest": "sha256:6f4ff463c67af42c1c3603e36e512a60dedb95775380a1a6b26c4cded86de5e1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-08-05T18:50:51.421000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.2.8 of the NeuVector Certified Operator deploys version 4.3.1 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         NAME                              ROLE                                          AGE     USERS   GROUPS   SERVICEACCOUNTS\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:20:48.650000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72",
          "name": "neuvector-operator-9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72-annotation"
        },
        {
          "digest": "sha256:9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:55b3d9873846d0a8670b58e8a8a76c426d3aba74d4e5c4fca43d05c1dd296f10",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:55b3d9873846d0a8670b58e8a8a76c426d3aba74d4e5c4fca43d05c1dd296f10",
          "name": "controller"
        },
        {
          "digest": "sha256:fdd66288454dd01f4f618c8cf04c7da501d4362773266ec6f448d63e26e3a35c",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:fdd66288454dd01f4f618c8cf04c7da501d4362773266ec6f448d63e26e3a35c",
          "name": "enforcer"
        },
        {
          "digest": "sha256:73445c18ea18f131b6fa630a97623a3043d05758205ef93fc02fa920abbedaa6",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:73445c18ea18f131b6fa630a97623a3043d05758205ef93fc02fa920abbedaa6",
          "name": "manager"
        },
        {
          "digest": "sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "name": "scanner"
        },
        {
          "digest": "sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
          "image": "registry.access.redhat.com/ubi8@sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
          "name": "updater"
        },
        {
          "digest": "sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "name": "scanner-a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06-annotation"
        },
        {
          "digest": "sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
          "image": "registry.access.redhat.com/ubi8@sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
          "name": "ubi8-091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.2.8",
      "version_original": "1.2.8"
    },
    {
      "_id": "610c33761faba499d0f16896",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
                "priorityClassName": "",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              }
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:6f4ff463c67af42c1c3603e36e512a60dedb95775380a1a6b26c4cded86de5e1",
      "bundle_path_digest": "sha256:6f4ff463c67af42c1c3603e36e512a60dedb95775380a1a6b26c4cded86de5e1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-08-05T18:52:38.422000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.2.8 of the NeuVector Certified Operator deploys version 4.3.1 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         NAME                              ROLE                                          AGE     USERS   GROUPS   SERVICEACCOUNTS\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:03:54.914000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72",
          "name": "neuvector-operator-9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72-annotation"
        },
        {
          "digest": "sha256:9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:55b3d9873846d0a8670b58e8a8a76c426d3aba74d4e5c4fca43d05c1dd296f10",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:55b3d9873846d0a8670b58e8a8a76c426d3aba74d4e5c4fca43d05c1dd296f10",
          "name": "controller"
        },
        {
          "digest": "sha256:fdd66288454dd01f4f618c8cf04c7da501d4362773266ec6f448d63e26e3a35c",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:fdd66288454dd01f4f618c8cf04c7da501d4362773266ec6f448d63e26e3a35c",
          "name": "enforcer"
        },
        {
          "digest": "sha256:73445c18ea18f131b6fa630a97623a3043d05758205ef93fc02fa920abbedaa6",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:73445c18ea18f131b6fa630a97623a3043d05758205ef93fc02fa920abbedaa6",
          "name": "manager"
        },
        {
          "digest": "sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "name": "scanner"
        },
        {
          "digest": "sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
          "image": "registry.access.redhat.com/ubi8@sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
          "name": "updater"
        },
        {
          "digest": "sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "name": "scanner-a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06-annotation"
        },
        {
          "digest": "sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
          "image": "registry.access.redhat.com/ubi8@sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
          "name": "ubi8-091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.2.8",
      "version_original": "1.2.8"
    },
    {
      "_id": "61112872fbeeedc1ec2e69d9",
      "alm_examples": [
        {
          "api_version": "charts.cloudbees.com/v1alpha1",
          "kind": "CloudBeesCI",
          "metadata": {
            "name": "cloudbeesci-sample"
          },
          "spec": {
            "Agents": {
              "Enabled": true,
              "Image": {
                "dockerImage": "cloudbees/cloudbees-core-agent:2.289.3.2"
              },
              "SeparateNamespace": {
                "Create": false,
                "Enabled": false
              }
            },
            "Hibernation": {
              "Enabled": false,
              "Image": {
                "dockerImage": "cloudbees/managed-master-hibernation-monitor:247.c5dfce00a179"
              },
              "NodeSelector": {},
              "Tolerations": []
            },
            "Master": {
              "Enabled": true,
              "Image": {
                "dockerImage": "cloudbees/cloudbees-core-mm:2.289.3.2"
              }
            },
            "NetworkPolicy": {
              "Enabled": false,
              "JMXSelectors": [],
              "ingressControllerSelector": []
            },
            "OperationsCenter": {
              "AgentListenerPort": 50000,
              "Annotations": {},
              "CSRF": {
                "ProxyCompatibility": false
              },
              "CasC": {
                "ConfigMapName": "oc-casc-bundle",
                "Enabled": false
              },
              "ContainerPort": 8080,
              "Enabled": true,
              "ExtraConfigMaps": [],
              "ExtraContainers": [],
              "ExtraGroovyConfiguration": {},
              "ExtraVolumeMounts": [],
              "ExtraVolumes": [],
              "HealthProbeLivenessFailureThreshold": 12,
              "HealthProbes": true,
              "Image": {
                "dockerImage": "cloudbees/cloudbees-cloud-core-oc:2.289.3.2"
              },
              "Ingress": {
                "Annotations": {
                  "kubernetes.io/tls-acme": "false"
                },
                "Class": "nginx",
                "tls": {
                  "Enable": false
                }
              },
              "LoadBalancerSourceRanges": [
                "0.0.0.0/0"
              ],
              "Name": "cjoc",
              "NodeSelector": {},
              "Platform": "standard",
              "Protocol": "http",
              "Resources": {
                "Limits": {
                  "Cpu": 1,
                  "Memory": "2G"
                },
                "Requests": {
                  "Cpu": 1,
                  "Memory": "2G"
                }
              },
              "Route": {
                "tls": {
                  "Enable": false,
                  "InsecureEdgeTerminationPolicy": "Redirect",
                  "Termination": "edge"
                }
              },
              "ServiceAgentListenerPort": 50000,
              "ServiceAnnotations": {},
              "ServicePort": 80,
              "ServiceType": "ClusterIP",
              "Tolerations": []
            },
            "Persistence": {
              "AccessMode": "ReadWriteOnce",
              "Annotations": {},
              "Size": "20Gi"
            },
            "PodSecurityPolicy": {
              "Annotations": {},
              "Enabled": false
            },
            "Subdomain": false,
            "ingress-nginx": {
              "Enabled": false,
              "controller": {
                "admissionWebhooks": {
                  "patch": {
                    "nodeSelector": {
                      "kubernetes.io/os": "linux"
                    }
                  }
                },
                "ingressClass": "nginx",
                "nodeSelector": {
                  "kubernetes.io/os": "linux"
                },
                "service": {
                  "externalTrafficPolicy": "Local"
                }
              },
              "defaultBackend": {
                "nodeSelector": {
                  "kubernetes.io/os": "linux"
                }
              }
            },
            "nginx-ingress": {
              "Enabled": false,
              "controller": {
                "ingressClass": "nginx",
                "nodeSelector": {
                  "kubernetes.io/os": "linux"
                },
                "service": {
                  "externalTrafficPolicy": "Local"
                }
              },
              "defaultBackend": {
                "nodeSelector": {
                  "kubernetes.io/os": "linux"
                }
              }
            },
            "rbac": {
              "agentsServiceAccountName": "jenkins-agents",
              "hibernationMonitorServiceAccountName": "managed-master-hibernation-monitor",
              "install": true,
              "masterServiceAccountName": "jenkins",
              "serviceAccountName": "cjoc"
            },
            "sidecarinjector": {
              "Enabled": false
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cloudbees/cloudbees-core-modern@sha256:2cf058c819b40512094f84f4d374457455370ec4994d34cee6e39b9d87841f05",
      "bundle_path_digest": "sha256:2cf058c819b40512094f84f4d374457455370ec4994d34cee6e39b9d87841f05",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-08-09T13:06:58.115000+00:00",
      "csv_description": "CloudBees CI",
      "csv_display_name": "CloudBees CI",
      "csv_metadata_description": "",
      "csv_name": "cloudbees-ci.v3.34.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:17:18.116000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cloudbees-ci",
      "provided_apis": [
        {
          "group": "charts.cloudbees.com",
          "kind": "CloudBeesCI",
          "plural": "cloudbeescis",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:bd0bd72e9e7807b0fa307de8a93a56967221fe2dd181bac02383f0f9be9120e4",
          "image": "registry.connect.redhat.com/cloudbees/cloudbees-ci-operator@sha256:bd0bd72e9e7807b0fa307de8a93a56967221fe2dd181bac02383f0f9be9120e4",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "3.34.1",
      "version_original": "3.34.1"
    },
    {
      "_id": "611128a6fbeeedc1ec2e69da",
      "alm_examples": [
        {
          "api_version": "charts.cloudbees.com/v1alpha1",
          "kind": "CloudBeesCI",
          "metadata": {
            "name": "cloudbeesci-sample"
          },
          "spec": {
            "Agents": {
              "Enabled": true,
              "Image": {
                "dockerImage": "cloudbees/cloudbees-core-agent:2.289.3.2"
              },
              "SeparateNamespace": {
                "Create": false,
                "Enabled": false
              }
            },
            "Hibernation": {
              "Enabled": false,
              "Image": {
                "dockerImage": "cloudbees/managed-master-hibernation-monitor:247.c5dfce00a179"
              },
              "NodeSelector": {},
              "Tolerations": []
            },
            "Master": {
              "Enabled": true,
              "Image": {
                "dockerImage": "cloudbees/cloudbees-core-mm:2.289.3.2"
              }
            },
            "NetworkPolicy": {
              "Enabled": false,
              "JMXSelectors": [],
              "ingressControllerSelector": []
            },
            "OperationsCenter": {
              "AgentListenerPort": 50000,
              "Annotations": {},
              "CSRF": {
                "ProxyCompatibility": false
              },
              "CasC": {
                "ConfigMapName": "oc-casc-bundle",
                "Enabled": false
              },
              "ContainerPort": 8080,
              "Enabled": true,
              "ExtraConfigMaps": [],
              "ExtraContainers": [],
              "ExtraGroovyConfiguration": {},
              "ExtraVolumeMounts": [],
              "ExtraVolumes": [],
              "HealthProbeLivenessFailureThreshold": 12,
              "HealthProbes": true,
              "Image": {
                "dockerImage": "cloudbees/cloudbees-cloud-core-oc:2.289.3.2"
              },
              "Ingress": {
                "Annotations": {
                  "kubernetes.io/tls-acme": "false"
                },
                "Class": "nginx",
                "tls": {
                  "Enable": false
                }
              },
              "LoadBalancerSourceRanges": [
                "0.0.0.0/0"
              ],
              "Name": "cjoc",
              "NodeSelector": {},
              "Platform": "standard",
              "Protocol": "http",
              "Resources": {
                "Limits": {
                  "Cpu": 1,
                  "Memory": "2G"
                },
                "Requests": {
                  "Cpu": 1,
                  "Memory": "2G"
                }
              },
              "Route": {
                "tls": {
                  "Enable": false,
                  "InsecureEdgeTerminationPolicy": "Redirect",
                  "Termination": "edge"
                }
              },
              "ServiceAgentListenerPort": 50000,
              "ServiceAnnotations": {},
              "ServicePort": 80,
              "ServiceType": "ClusterIP",
              "Tolerations": []
            },
            "Persistence": {
              "AccessMode": "ReadWriteOnce",
              "Annotations": {},
              "Size": "20Gi"
            },
            "PodSecurityPolicy": {
              "Annotations": {},
              "Enabled": false
            },
            "Subdomain": false,
            "ingress-nginx": {
              "Enabled": false,
              "controller": {
                "admissionWebhooks": {
                  "patch": {
                    "nodeSelector": {
                      "kubernetes.io/os": "linux"
                    }
                  }
                },
                "ingressClass": "nginx",
                "nodeSelector": {
                  "kubernetes.io/os": "linux"
                },
                "service": {
                  "externalTrafficPolicy": "Local"
                }
              },
              "defaultBackend": {
                "nodeSelector": {
                  "kubernetes.io/os": "linux"
                }
              }
            },
            "nginx-ingress": {
              "Enabled": false,
              "controller": {
                "ingressClass": "nginx",
                "nodeSelector": {
                  "kubernetes.io/os": "linux"
                },
                "service": {
                  "externalTrafficPolicy": "Local"
                }
              },
              "defaultBackend": {
                "nodeSelector": {
                  "kubernetes.io/os": "linux"
                }
              }
            },
            "rbac": {
              "agentsServiceAccountName": "jenkins-agents",
              "hibernationMonitorServiceAccountName": "managed-master-hibernation-monitor",
              "install": true,
              "masterServiceAccountName": "jenkins",
              "serviceAccountName": "cjoc"
            },
            "sidecarinjector": {
              "Enabled": false
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cloudbees/cloudbees-core-modern@sha256:2cf058c819b40512094f84f4d374457455370ec4994d34cee6e39b9d87841f05",
      "bundle_path_digest": "sha256:2cf058c819b40512094f84f4d374457455370ec4994d34cee6e39b9d87841f05",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-08-09T13:07:50.436000+00:00",
      "csv_description": "CloudBees CI",
      "csv_display_name": "CloudBees CI",
      "csv_metadata_description": "",
      "csv_name": "cloudbees-ci.v3.34.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:02:14.217000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cloudbees-ci",
      "provided_apis": [
        {
          "group": "charts.cloudbees.com",
          "kind": "CloudBeesCI",
          "plural": "cloudbeescis",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:bd0bd72e9e7807b0fa307de8a93a56967221fe2dd181bac02383f0f9be9120e4",
          "image": "registry.connect.redhat.com/cloudbees/cloudbees-ci-operator@sha256:bd0bd72e9e7807b0fa307de8a93a56967221fe2dd181bac02383f0f9be9120e4",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "3.34.1",
      "version_original": "3.34.1"
    },
    {
      "_id": "6111bb9b0f5e559095d7e6a7",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {
              "priorityClassName": "system-node-critical",
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "nvidia.com/gpu",
                  "operator": "Exists"
                }
              ]
            },
            "dcgm": {
              "enabled": true,
              "hostPort": 5555,
              "image": "dcgm",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c"
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              },
              "env": [
                {
                  "name": "DCGM_EXPORTER_LISTEN",
                  "value": ":9400"
                },
                {
                  "name": "DCGM_EXPORTER_KUBERNETES",
                  "value": "true"
                },
                {
                  "name": "DCGM_EXPORTER_COLLECTORS",
                  "value": "/etc/dcgm-exporter/dcp-metrics-included.csv"
                }
              ],
              "image": "dcgm-exporter",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff"
            },
            "devicePlugin": {
              "args": [],
              "env": [
                {
                  "name": "PASS_DEVICE_SPECS",
                  "value": "true"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                },
                {
                  "name": "DEVICE_LIST_STRATEGY",
                  "value": "envvar"
                },
                {
                  "name": "DEVICE_ID_STRATEGY",
                  "value": "uuid"
                },
                {
                  "name": "NVIDIA_VISIBLE_DEVICES",
                  "value": "all"
                },
                {
                  "name": "NVIDIA_DRIVER_CAPABILITIES",
                  "value": "all"
                }
              ],
              "image": "k8s-device-plugin",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05"
            },
            "driver": {
              "enabled": true,
              "image": "driver",
              "imagePullSecrets": [],
              "licensingConfig": {
                "configMapName": ""
              },
              "manager": {
                "env": [
                  {
                    "name": "DRAIN_USE_FORCE",
                    "value": "false"
                  },
                  {
                    "name": "DRAIN_POD_SELECTOR_LABEL",
                    "value": ""
                  },
                  {
                    "name": "DRAIN_TIMEOUT_SECONDS",
                    "value": "0s"
                  },
                  {
                    "name": "DRAIN_DELETE_EMPTYDIR_DATA",
                    "value": "false"
                  }
                ],
                "image": "k8s-driver-manager",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia/cloud-native",
                "version": "sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b"
              },
              "nodeSelector": {
                "nvidia.com/gpu.deploy.driver": "true"
              },
              "podSecurityContext": {},
              "rdma": {
                "enabled": false
              },
              "repoConfig": {
                "configMapName": "",
                "destinationDir": ""
              },
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {
              "env": [
                {
                  "name": "GFD_SLEEP_INTERVAL",
                  "value": "60s"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                }
              ],
              "image": "gpu-feature-discovery",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f"
            },
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true,
              "env": [
                {
                  "name": "WITH_REBOOT",
                  "value": "false"
                }
              ],
              "image": "k8s-mig-manager",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:77b8e58a54c222bee3cc56b2305d4cebfa60722c122858f94301e611f87d7fec"
            },
            "nodeStatusExporter": {
              "enabled": true,
              "image": "gpu-operator-validator",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:1cce434a1722288bacab5eaa5c194ca2bdbad55679ba871a2814556853339585"
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {
                "image": "cuda",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia",
                "version": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce"
              }
            },
            "toolkit": {
              "enabled": true,
              "image": "container-toolkit",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "version": "sha256:8f9517b4c83b8730c40134df385088be41519b585176c66727ff6f181ae5e703"
            },
            "validator": {
              "env": [
                {
                  "name": "WITH_WORKLOAD",
                  "value": "true"
                }
              ],
              "image": "gpu-operator-validator",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:1cce434a1722288bacab5eaa5c194ca2bdbad55679ba871a2814556853339585"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:949e1d767985e99cde04a070667ba0b81e8422e71555c0c233c528fd746667d3",
      "bundle_path_digest": "sha256:949e1d767985e99cde04a070667ba0b81e8422e71555c0c233c528fd746667d3",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.8",
      "creation_date": "2021-08-09T23:34:51.472000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/kubernetes/openshift-on-gpu-install-guide/index.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:06:43.237000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3a0ff79c4edc24de708f82e5f9dc2946897aa4a50e8827203221ee2281008974",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:3a0ff79c4edc24de708f82e5f9dc2946897aa4a50e8827203221ee2281008974",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:8f9517b4c83b8730c40134df385088be41519b585176c66727ff6f181ae5e703",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:8f9517b4c83b8730c40134df385088be41519b585176c66727ff6f181ae5e703",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
          "image": "nvcr.io/nvidia/driver@sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
          "name": "driver-image"
        },
        {
          "digest": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:77b8e58a54c222bee3cc56b2305d4cebfa60722c122858f94301e611f87d7fec",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:77b8e58a54c222bee3cc56b2305d4cebfa60722c122858f94301e611f87d7fec",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "image": "nvcr.io/nvidia/cuda@sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:1cce434a1722288bacab5eaa5c194ca2bdbad55679ba871a2814556853339585",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:1cce434a1722288bacab5eaa5c194ca2bdbad55679ba871a2814556853339585",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b",
          "name": "k8s-driver-manager-image"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.8.0",
      "version_original": "1.8.0"
    },
    {
      "_id": "6111bc38fbeeedc1ec2e6bf7",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {
              "priorityClassName": "system-node-critical",
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "nvidia.com/gpu",
                  "operator": "Exists"
                }
              ]
            },
            "dcgm": {
              "enabled": true,
              "hostPort": 5555,
              "image": "dcgm",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c"
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              },
              "env": [
                {
                  "name": "DCGM_EXPORTER_LISTEN",
                  "value": ":9400"
                },
                {
                  "name": "DCGM_EXPORTER_KUBERNETES",
                  "value": "true"
                },
                {
                  "name": "DCGM_EXPORTER_COLLECTORS",
                  "value": "/etc/dcgm-exporter/dcp-metrics-included.csv"
                }
              ],
              "image": "dcgm-exporter",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff"
            },
            "devicePlugin": {
              "args": [],
              "env": [
                {
                  "name": "PASS_DEVICE_SPECS",
                  "value": "true"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                },
                {
                  "name": "DEVICE_LIST_STRATEGY",
                  "value": "envvar"
                },
                {
                  "name": "DEVICE_ID_STRATEGY",
                  "value": "uuid"
                },
                {
                  "name": "NVIDIA_VISIBLE_DEVICES",
                  "value": "all"
                },
                {
                  "name": "NVIDIA_DRIVER_CAPABILITIES",
                  "value": "all"
                }
              ],
              "image": "k8s-device-plugin",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05"
            },
            "driver": {
              "enabled": true,
              "image": "driver",
              "imagePullSecrets": [],
              "licensingConfig": {
                "configMapName": ""
              },
              "manager": {
                "env": [
                  {
                    "name": "DRAIN_USE_FORCE",
                    "value": "false"
                  },
                  {
                    "name": "DRAIN_POD_SELECTOR_LABEL",
                    "value": ""
                  },
                  {
                    "name": "DRAIN_TIMEOUT_SECONDS",
                    "value": "0s"
                  },
                  {
                    "name": "DRAIN_DELETE_EMPTYDIR_DATA",
                    "value": "false"
                  }
                ],
                "image": "k8s-driver-manager",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia/cloud-native",
                "version": "sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b"
              },
              "nodeSelector": {
                "nvidia.com/gpu.deploy.driver": "true"
              },
              "podSecurityContext": {},
              "rdma": {
                "enabled": false
              },
              "repoConfig": {
                "configMapName": "",
                "destinationDir": ""
              },
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {
              "env": [
                {
                  "name": "GFD_SLEEP_INTERVAL",
                  "value": "60s"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                }
              ],
              "image": "gpu-feature-discovery",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f"
            },
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true,
              "env": [
                {
                  "name": "WITH_REBOOT",
                  "value": "false"
                }
              ],
              "image": "k8s-mig-manager",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:77b8e58a54c222bee3cc56b2305d4cebfa60722c122858f94301e611f87d7fec"
            },
            "nodeStatusExporter": {
              "enabled": true,
              "image": "gpu-operator-validator",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:1cce434a1722288bacab5eaa5c194ca2bdbad55679ba871a2814556853339585"
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {
                "image": "cuda",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia",
                "version": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce"
              }
            },
            "toolkit": {
              "enabled": true,
              "image": "container-toolkit",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "version": "sha256:8f9517b4c83b8730c40134df385088be41519b585176c66727ff6f181ae5e703"
            },
            "validator": {
              "env": [
                {
                  "name": "WITH_WORKLOAD",
                  "value": "true"
                }
              ],
              "image": "gpu-operator-validator",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:1cce434a1722288bacab5eaa5c194ca2bdbad55679ba871a2814556853339585"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:949e1d767985e99cde04a070667ba0b81e8422e71555c0c233c528fd746667d3",
      "bundle_path_digest": "sha256:949e1d767985e99cde04a070667ba0b81e8422e71555c0c233c528fd746667d3",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.8",
      "creation_date": "2021-08-09T23:37:28.536000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/kubernetes/openshift-on-gpu-install-guide/index.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:53:46.085000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3a0ff79c4edc24de708f82e5f9dc2946897aa4a50e8827203221ee2281008974",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:3a0ff79c4edc24de708f82e5f9dc2946897aa4a50e8827203221ee2281008974",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:8f9517b4c83b8730c40134df385088be41519b585176c66727ff6f181ae5e703",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:8f9517b4c83b8730c40134df385088be41519b585176c66727ff6f181ae5e703",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
          "image": "nvcr.io/nvidia/driver@sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
          "name": "driver-image"
        },
        {
          "digest": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:77b8e58a54c222bee3cc56b2305d4cebfa60722c122858f94301e611f87d7fec",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:77b8e58a54c222bee3cc56b2305d4cebfa60722c122858f94301e611f87d7fec",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "image": "nvcr.io/nvidia/cuda@sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:1cce434a1722288bacab5eaa5c194ca2bdbad55679ba871a2814556853339585",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:1cce434a1722288bacab5eaa5c194ca2bdbad55679ba871a2814556853339585",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b",
          "name": "k8s-driver-manager-image"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.8.0",
      "version_original": "1.8.0"
    },
    {
      "_id": "6111bcbffbeeedc1ec2e6bf8",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {
              "priorityClassName": "system-node-critical",
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "nvidia.com/gpu",
                  "operator": "Exists"
                }
              ]
            },
            "dcgm": {
              "enabled": true,
              "hostPort": 5555,
              "image": "dcgm",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c"
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              },
              "env": [
                {
                  "name": "DCGM_EXPORTER_LISTEN",
                  "value": ":9400"
                },
                {
                  "name": "DCGM_EXPORTER_KUBERNETES",
                  "value": "true"
                },
                {
                  "name": "DCGM_EXPORTER_COLLECTORS",
                  "value": "/etc/dcgm-exporter/dcp-metrics-included.csv"
                }
              ],
              "image": "dcgm-exporter",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff"
            },
            "devicePlugin": {
              "args": [],
              "env": [
                {
                  "name": "PASS_DEVICE_SPECS",
                  "value": "true"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                },
                {
                  "name": "DEVICE_LIST_STRATEGY",
                  "value": "envvar"
                },
                {
                  "name": "DEVICE_ID_STRATEGY",
                  "value": "uuid"
                },
                {
                  "name": "NVIDIA_VISIBLE_DEVICES",
                  "value": "all"
                },
                {
                  "name": "NVIDIA_DRIVER_CAPABILITIES",
                  "value": "all"
                }
              ],
              "image": "k8s-device-plugin",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05"
            },
            "driver": {
              "enabled": true,
              "image": "driver",
              "imagePullSecrets": [],
              "licensingConfig": {
                "configMapName": ""
              },
              "manager": {
                "env": [
                  {
                    "name": "DRAIN_USE_FORCE",
                    "value": "false"
                  },
                  {
                    "name": "DRAIN_POD_SELECTOR_LABEL",
                    "value": ""
                  },
                  {
                    "name": "DRAIN_TIMEOUT_SECONDS",
                    "value": "0s"
                  },
                  {
                    "name": "DRAIN_DELETE_EMPTYDIR_DATA",
                    "value": "false"
                  }
                ],
                "image": "k8s-driver-manager",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia/cloud-native",
                "version": "sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b"
              },
              "nodeSelector": {
                "nvidia.com/gpu.deploy.driver": "true"
              },
              "podSecurityContext": {},
              "rdma": {
                "enabled": false
              },
              "repoConfig": {
                "configMapName": "",
                "destinationDir": ""
              },
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {
              "env": [
                {
                  "name": "GFD_SLEEP_INTERVAL",
                  "value": "60s"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                }
              ],
              "image": "gpu-feature-discovery",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f"
            },
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true,
              "env": [
                {
                  "name": "WITH_REBOOT",
                  "value": "false"
                }
              ],
              "image": "k8s-mig-manager",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:77b8e58a54c222bee3cc56b2305d4cebfa60722c122858f94301e611f87d7fec"
            },
            "nodeStatusExporter": {
              "enabled": true,
              "image": "gpu-operator-validator",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:1cce434a1722288bacab5eaa5c194ca2bdbad55679ba871a2814556853339585"
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {
                "image": "cuda",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia",
                "version": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce"
              }
            },
            "toolkit": {
              "enabled": true,
              "image": "container-toolkit",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "version": "sha256:8f9517b4c83b8730c40134df385088be41519b585176c66727ff6f181ae5e703"
            },
            "validator": {
              "env": [
                {
                  "name": "WITH_WORKLOAD",
                  "value": "true"
                }
              ],
              "image": "gpu-operator-validator",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:1cce434a1722288bacab5eaa5c194ca2bdbad55679ba871a2814556853339585"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:949e1d767985e99cde04a070667ba0b81e8422e71555c0c233c528fd746667d3",
      "bundle_path_digest": "sha256:949e1d767985e99cde04a070667ba0b81e8422e71555c0c233c528fd746667d3",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.8",
      "creation_date": "2021-08-09T23:39:43.820000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/kubernetes/openshift-on-gpu-install-guide/index.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:13:42.882000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3a0ff79c4edc24de708f82e5f9dc2946897aa4a50e8827203221ee2281008974",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:3a0ff79c4edc24de708f82e5f9dc2946897aa4a50e8827203221ee2281008974",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:8f9517b4c83b8730c40134df385088be41519b585176c66727ff6f181ae5e703",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:8f9517b4c83b8730c40134df385088be41519b585176c66727ff6f181ae5e703",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
          "image": "nvcr.io/nvidia/driver@sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
          "name": "driver-image"
        },
        {
          "digest": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:77b8e58a54c222bee3cc56b2305d4cebfa60722c122858f94301e611f87d7fec",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:77b8e58a54c222bee3cc56b2305d4cebfa60722c122858f94301e611f87d7fec",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "image": "nvcr.io/nvidia/cuda@sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:1cce434a1722288bacab5eaa5c194ca2bdbad55679ba871a2814556853339585",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:1cce434a1722288bacab5eaa5c194ca2bdbad55679ba871a2814556853339585",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b",
          "name": "k8s-driver-manager-image"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.8.0",
      "version_original": "1.8.0"
    },
    {
      "_id": "6112ab71836d19274c41a73e",
      "alm_examples": [
        {
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            },
            "route": true,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            }
          }
        },
        {
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            },
            "token": "<<your-token>>"
          }
        },
        {
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway.aqua:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.0"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            }
          }
        },
        {
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            }
          }
        },
        {
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:26b6039d957e1dd8de17b1f46bde410c797159c581a217d5e396b39ccfd304cf",
      "bundle_path_digest": "sha256:26b6039d957e1dd8de17b1f46bde410c797159c581a217d5e396b39ccfd304cf",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.0",
      "creation_date": "2021-08-10T16:38:09.879000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n* Automatically scale the number of Aqua scanners based on the number of images in the scan queue\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/6.0.0/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.0.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.0.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.0.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:56:56.956000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": ">=1.0.2 <6.0.8",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.8",
      "version_original": "6.0.8"
    },
    {
      "_id": "6112acce6e1e42ca4d6de2a6",
      "alm_examples": [
        {
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            },
            "route": true,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            }
          }
        },
        {
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            },
            "token": "<<your-token>>"
          }
        },
        {
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway.aqua:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.0"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            }
          }
        },
        {
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            }
          }
        },
        {
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:26b6039d957e1dd8de17b1f46bde410c797159c581a217d5e396b39ccfd304cf",
      "bundle_path_digest": "sha256:26b6039d957e1dd8de17b1f46bde410c797159c581a217d5e396b39ccfd304cf",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.0",
      "creation_date": "2021-08-10T16:43:58.465000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n* Automatically scale the number of Aqua scanners based on the number of images in the scan queue\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/6.0.0/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.0.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.0.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.0.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:37:38.058000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": ">=1.0.2 <6.0.8",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.0.8",
      "version_original": "6.0.8"
    },
    {
      "_id": "6112ada0828b767a4f5f9352",
      "alm_examples": [
        {
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            },
            "route": true,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            }
          }
        },
        {
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            },
            "token": "<<your-token>>"
          }
        },
        {
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway.aqua:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.0"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            }
          }
        },
        {
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            }
          }
        },
        {
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:26b6039d957e1dd8de17b1f46bde410c797159c581a217d5e396b39ccfd304cf",
      "bundle_path_digest": "sha256:26b6039d957e1dd8de17b1f46bde410c797159c581a217d5e396b39ccfd304cf",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.0",
      "creation_date": "2021-08-10T16:47:28.558000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n* Automatically scale the number of Aqua scanners based on the number of images in the scan queue\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/6.0.0/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.0.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.0.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.0.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:14:55.822000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": ">=1.0.2 <6.0.8",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.8",
      "version_original": "6.0.8"
    },
    {
      "_id": "611405c5828b767a4f5f98df",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:e56533516e64f88632df8ac576516c15ecc235614d317e9e7d62e558abeca3f8",
      "bundle_path_digest": "sha256:e56533516e64f88632df8ac576516c15ecc235614d317e9e7d62e558abeca3f8",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-11T17:15:49.470000+00:00",
      "csv_description": "Cloud Native PostgreSQL is an operator designed by EnterpriseDB\nto manage PostgreSQL workloads on any supported Kubernetes\ncluster running in private, public, or hybrid cloud environments,\nincluding OpenShift.\nCloud Native PostgreSQL adheres to DevOps principles and concepts\nsuch as declarative configuration and immutable infrastructure.\n\nIt defines a new Kubernetes resource called \"Cluster\" representing a PostgreSQL\ncluster made up of a single primary and an optional number of replicas that co-exist\nin a chosen Kubernetes namespace for High Availability and offloading of\nread-only queries.\n\nApplications that reside in the same Kubernetes cluster can access the\nPostgreSQL database using a service which is solely managed by the operator,\nwithout having to worry about changes of the primary role following a failover\nor a switchover. Applications that reside outside the Kubernetes cluster need\nto configure an Ingress object to expose the service via TCP.\n\nCloud Native PostgreSQL works with PostgreSQL (13, 12, 11 and 10) and\nEDB Postgres Advanced (13, 12, 11 and 10), and it is available under\nthe EnterpriseDB Limited Use License.\nYou can evaluate Cloud Native PostgreSQL for free.\nYou need a valid license key to use Cloud Native PostgreSQL in production.\n\n# Main features\n\n* Direct integration with Kubernetes API server for High Availability, without requiring an external tool\n* Self-Healing capability, through:\n    * failover of the primary instance by promoting the most aligned replica\n    * automated recreation of a replica\n* Planned switchover of the primary instance by promoting a selected replica\n* Scale up/down capabilities\n* Definition of an arbitrary number of instances (minimum 1 - one primary server)\n* Definition of the *read-write* service, to connect your applications to the only primary server of the cluster\n* Definition of the *read-only* service, to connect your applications to any of the instances for reading workloads\n* Support for Local Persistent Volumes with PVC templates\n* Reuse of Persistent Volumes storage in Pods\n* Rolling updates for PostgreSQL minor versions and operator upgrades\n* TLS connections and client certificate authentication\n* Support for custom TLS certificates (including integration with cert-manager)\n* Continuous backup to an S3 compatible object store\n* Full recovery and Point-In-Time recovery from an S3 compatible object store backup\n* Support for Synchronous Replicas\n* Support for node affinity via `nodeSelector`\n* Native customizable exporter of user defined metrics for Prometheus through the `metrics` port (9187)\n* Standard output logging of PostgreSQL error messages in JSON format\n* Support for the `restricted` security context constraint (SCC) in Red Hat OpenShift\n* `cnp` plugin for `kubectl`\n",
      "csv_display_name": "Cloud Native PostgreSQL",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.7.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:49:55.216000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e13f29706203df835bee73553183116032498b6562802466965878b43f068ae6",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:e13f29706203df835bee73553183116032498b6562802466965878b43f068ae6",
          "name": "cloud-native-postgresql-e13f29706203df835bee73553183116032498b6562802466965878b43f068ae6-annotation"
        },
        {
          "digest": "sha256:e13f29706203df835bee73553183116032498b6562802466965878b43f068ae6",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:e13f29706203df835bee73553183116032498b6562802466965878b43f068ae6",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": ">=0.6.0 <1.7.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.7.1",
      "version_original": "1.7.1"
    },
    {
      "_id": "611436056e1e42ca4d6ded6c",
      "alm_examples": [
        {
          "api_version": "anzograph.clusters.cambridgesemantics.com/v2",
          "kind": "AnzoGraph",
          "metadata": {
            "name": "azg01"
          },
          "spec": {
            "db": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app_data": "anzograph-data-grpc",
                      "app_mgmt": "anzograph-mgmt-grpc"
                    }
                  },
                  "serviceName": "anzograph-azg01",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app_data": "anzograph-data-grpc",
                        "app_mgmt": "anzograph-mgmt-grpc"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5",
                          "name": "db",
                          "resources": {
                            "limits": {
                              "cpu": "8000m",
                              "memory": "8Gi"
                            },
                            "requests": {
                              "cpu": "8000m",
                              "memory": "8Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "anzograph-operator"
                    }
                  }
                }
              }
            },
            "deployFrontend": false,
            "frontend": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app_mgmt": "anzograph-frontend"
                    }
                  },
                  "serviceName": "anzograph-azg01",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app_mgmt": "anzograph-frontend"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3",
                          "name": "frontend",
                          "resources": {
                            "limits": {
                              "cpu": "2000m",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2000m",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "anzograph-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator-bundle@sha256:9418a3505873ac387f2b5455ec7e696739a2bb6f03232f8c0f59489c605b96f2",
      "bundle_path_digest": "sha256:9418a3505873ac387f2b5455ec7e696739a2bb6f03232f8c0f59489c605b96f2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-11T20:41:41.515000+00:00",
      "csv_description": "The AnzoGraph Operator provides the way to install and configure an AnzoGraph\ncluster on Red Hat K8S environment.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzograph/blob/v2.0.1/README_openshift_marketplace.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzograph/userdoc/ )\n\n### Support\n\nWe offer Support to our customers with the AnzoGraph db Enterprise Edition License [here]( https://customercenter.cambridgesemantics.com/ ). For AnzoGraph db Free Edition questions, get help from our Anzograph User Community at Stack Overflow. When submitting a question, include the tag 'anzograph'.",
      "csv_display_name": "AnzoGraph Operator",
      "csv_metadata_description": "kubernetes operator for AnzoGraph DB",
      "csv_name": "anzograph-operator.v2.0.102",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:04:16.299000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "anzograph-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:a5b212558f748ddc8156541b546290320b656506e039a18903ad9fa6e638e732",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:a5b212558f748ddc8156541b546290320b656506e039a18903ad9fa6e638e732",
          "name": "anzograph-operator-a5b212558f748ddc8156541b546290320b656506e039a18903ad9fa6e638e732-annotation"
        },
        {
          "digest": "sha256:a5b212558f748ddc8156541b546290320b656506e039a18903ad9fa6e638e732",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:a5b212558f748ddc8156541b546290320b656506e039a18903ad9fa6e638e732",
          "name": "manager"
        },
        {
          "digest": "sha256:e3bdddf811b5ba69f388d023aea1ba538edd00e9f415c33ec555321d39129a36",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph@sha256:e3bdddf811b5ba69f388d023aea1ba538edd00e9f415c33ec555321d39129a36",
          "name": "anzograph_allinone"
        },
        {
          "digest": "sha256:8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5",
          "name": "anzograph_db"
        },
        {
          "digest": "sha256:c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3",
          "name": "anzograph_frontend"
        },
        {
          "digest": "sha256:c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3",
          "name": "anzograph-frontend-c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3-annotation"
        },
        {
          "digest": "sha256:8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5",
          "name": "anzograph-db-8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2.0.1",
      "version_original": "2.0.1"
    },
    {
      "_id": "6114e5df836d19274c41b054",
      "alm_examples": [
        {
          "api_version": "charts.anchore.io/v1alpha1",
          "kind": "AnchoreEngine",
          "metadata": {
            "name": "anchoreengine-sample"
          },
          "spec": {
            "anchoreGlobal": {
              "defaultAdminEmail": "example@email.com"
            },
            "postgresql": {
              "extraEnv": [
                {
                  "name": "POSTGRESQL_USER",
                  "value": "anchoreengine"
                },
                {
                  "name": "POSTGRESQL_PASSWORD",
                  "value": "anchore-postgres,123"
                },
                {
                  "name": "POSTGRESQL_DATABASE",
                  "value": "anchore"
                },
                {
                  "name": "PGUSER",
                  "value": "postgres"
                }
              ],
              "postgresDatabase": "anchore",
              "postgresPassword": "anchore-postgres,123",
              "postgresUser": "anchoreengine"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/anchore/engine-operator-bundle@sha256:aac8eefb589ceafced25b345b5f4d5ae6dbb7c2952ffb1985227ebee9ace1714",
      "bundle_path_digest": "sha256:aac8eefb589ceafced25b345b5f4d5ae6dbb7c2952ffb1985227ebee9ace1714",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-08-12T09:11:59.453000+00:00",
      "csv_description": "Anchore Engine is an open source software system that provides a centralized service for analyzing container images, \n scanning for security vulnerabilities, and enforcing deployment policies. Anchore Engine is provided as a Docker \n container image that can be run standalone or with an orchestration platform such as Kubernetes. Anchore Engine allows \n users to perform detailed analysis on their container images, run queries, produce reports, and define policies that \n can be used in CI/CD pipelines. Users can extend Anchore Engine with plugins that add new queries, image analysis, and \n policies. Anchore Engine can be accessed directly through a RESTful API or via the Anchore CLI.\n\n The Anchore Engine Operator is based on the official stable [Helm Chart](https://github.com/anchore/anchore-charts/tree/master/stable/anchore-engine).",
      "csv_display_name": "Anchore Engine Operator",
      "csv_metadata_description": "Anchore Engine - container image scanning service for policy-based security, best-practice and compliance enforcement.",
      "csv_name": "anchore-engine.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:49:02.567000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "anchore-engine",
      "provided_apis": [
        {
          "group": "charts.anchore.io",
          "kind": "AnchoreEngine",
          "plural": "anchoreengines",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:57bd6e4d776b0bc26c32201ecbbe256d91ad40348c52878e52a1d33a15d35dfb",
          "image": "registry.connect.redhat.com/anchore/engine-operator@sha256:57bd6e4d776b0bc26c32201ecbbe256d91ad40348c52878e52a1d33a15d35dfb",
          "name": "engine-operator-57bd6e4d776b0bc26c32201ecbbe256d91ad40348c52878e52a1d33a15d35dfb-annotation"
        },
        {
          "digest": "sha256:57bd6e4d776b0bc26c32201ecbbe256d91ad40348c52878e52a1d33a15d35dfb",
          "image": "registry.connect.redhat.com/anchore/engine-operator@sha256:57bd6e4d776b0bc26c32201ecbbe256d91ad40348c52878e52a1d33a15d35dfb",
          "name": "manager"
        },
        {
          "digest": "sha256:bde9eedf639d70ad1ff5f907ee530adfa8e771f8e5909fd75ec4088250a956b3",
          "image": "registry.connect.redhat.com/anchore/engine0@sha256:bde9eedf639d70ad1ff5f907ee530adfa8e771f8e5909fd75ec4088250a956b3",
          "name": "anchore_engine"
        },
        {
          "digest": "sha256:ed53ca7b191432f7cf9da0fd8629d7de14ade609ca5f38aba443716f83616f2e",
          "image": "registry.redhat.io/rhel8/postgresql-96@sha256:ed53ca7b191432f7cf9da0fd8629d7de14ade609ca5f38aba443716f83616f2e",
          "name": "anchore_postgresql"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "611eca7cbd674341b5c5f0ce",
      "alm_examples": [
        {
          "api_version": "elasticsearch.k8s.elastic.co/v1",
          "kind": "Elasticsearch",
          "metadata": {
            "name": "elasticsearch-sample"
          },
          "spec": {
            "nodeSets": [
              {
                "config": {
                  "node.attr.attr_name": "attr_value",
                  "node.roles": [
                    "master",
                    "data"
                  ],
                  "node.store.allow_mmap": false
                },
                "count": 3,
                "name": "default",
                "podTemplate": {
                  "metadata": {
                    "labels": {
                      "foo": "bar"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "name": "elasticsearch",
                        "resources": {
                          "limits": {
                            "cpu": 2,
                            "memory": "4Gi"
                          },
                          "requests": {
                            "cpu": 1,
                            "memory": "4Gi"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "version": "7.12.1"
          }
        },
        {
          "api_version": "kibana.k8s.elastic.co/v1",
          "kind": "Kibana",
          "metadata": {
            "name": "kibana-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "podTemplate": {
              "metadata": {
                "labels": {
                  "foo": "bar"
                }
              },
              "spec": {
                "containers": [
                  {
                    "name": "kibana",
                    "resources": {
                      "limits": {
                        "cpu": 2,
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": 0.5,
                        "memory": "1Gi"
                      }
                    }
                  }
                ]
              }
            },
            "version": "7.12.1"
          }
        },
        {
          "api_version": "apm.k8s.elastic.co/v1",
          "kind": "ApmServer",
          "metadata": {
            "name": "apmserver-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "7.12.1"
          }
        },
        {
          "api_version": "enterprisesearch.k8s.elastic.co/v1",
          "kind": "EnterpriseSearch",
          "metadata": {
            "name": "ent-sample"
          },
          "spec": {
            "config": {
              "ent_search.external_url": "https://localhost:3002"
            },
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "7.12.1"
          }
        },
        {
          "api_version": "beat.k8s.elastic.co/v1beta1",
          "kind": "Beat",
          "metadata": {
            "name": "heartbeat-sample"
          },
          "spec": {
            "config": {
              "heartbeat.monitors": [
                {
                  "hosts": [
                    "elasticsearch-sample-es-http.default.svc:9200"
                  ],
                  "schedule": "@every 5s",
                  "type": "tcp"
                }
              ]
            },
            "deployment": {
              "podTemplate": {
                "spec": {
                  "securityContext": {
                    "runAsUser": 0
                  }
                }
              },
              "replicas": 1
            },
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "type": "heartbeat",
            "version": "7.12.1"
          }
        },
        {
          "api_version": "agent.k8s.elastic.co/v1alpha1",
          "kind": "Agent",
          "metadata": {
            "name": "agent-sample"
          },
          "spec": {
            "config": {
              "inputs": [
                {
                  "data_stream": {
                    "namespace": "default"
                  },
                  "meta": {
                    "package": {
                      "name": "system",
                      "version": "0.9.1"
                    }
                  },
                  "name": "system-1",
                  "revision": 1,
                  "streams": [
                    {
                      "cpu.metrics": [
                        "percentages",
                        "normalized_percentages"
                      ],
                      "data_stream": {
                        "dataset": "system.cpu",
                        "type": "metrics"
                      },
                      "id": "system/metrics-system.cpu",
                      "metricsets": [
                        "cpu"
                      ],
                      "period": "10s"
                    }
                  ],
                  "type": "system/metrics",
                  "use_output": "default"
                }
              ]
            },
            "daemonSet": {},
            "elasticsearchRefs": [
              {
                "name": "elasticsearch-sample"
              }
            ],
            "version": "7.12.1"
          }
        },
        {
          "api_version": "maps.k8s.elastic.co/v1alpha1",
          "kind": "ElasticMapsServer",
          "metadata": {
            "name": "ems-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "7.12.1"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/elastic/eck@sha256:30333a951cdac81f368f047aad9d8b6b7261bd1cc8a8f7434c69d2ff103ecb1d",
      "bundle_path_digest": "sha256:30333a951cdac81f368f047aad9d8b6b7261bd1cc8a8f7434c69d2ff103ecb1d",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-19T21:17:48.389000+00:00",
      "csv_description": "Elastic Cloud on Kubernetes (ECK) is the official operator by Elastic for automating the deployment, provisioning, management, and orchestration of Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Beats, Elastic Agent, and Elastic Maps Server on Kubernetes.\n\nCurrent features:\n\n*  Elasticsearch, Kibana, APM Server, Enterprise Search, Beats, Elastic Agent and Elastic Maps Server deployments\n*  TLS Certificates management\n*  Safe Elasticsearch cluster configuration and topology changes\n*  Persistent volumes usage\n*  Custom node configuration and attributes\n*  Secure settings keystore updates\n\nSupported versions:\n\n* Kubernetes: 1.12+ or OpenShift 3.11+\n* Elasticsearch: 6.8+, 7.1+\n\nSee the [Quickstart](https://www.elastic.co/guide/en/cloud-on-k8s/1.6/k8s-quickstart.html) to get started with ECK.",
      "csv_display_name": "Elasticsearch (ECK) Operator",
      "csv_metadata_description": "Run Elasticsearch, Kibana, APM Server, Enterprise Search, Beats, Elastic Agent and Elastic Maps Server on Kubernetes and OpenShift",
      "csv_name": "elasticsearch-eck-operator-certified.v1.6.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:15:53.105000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "elasticsearch-eck-operator-certified",
      "provided_apis": [
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1alpha1"
        },
        {
          "group": "maps.k8s.elastic.co",
          "kind": "ElasticMapsServer",
          "plural": "elasticmapsservers",
          "version": "v1alpha1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1beta1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1beta1"
        },
        {
          "group": "agent.k8s.elastic.co",
          "kind": "Agent",
          "plural": "agents",
          "version": "v1alpha1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1alpha1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1beta1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1beta1"
        },
        {
          "group": "beat.k8s.elastic.co",
          "kind": "Beat",
          "plural": "beats",
          "version": "v1beta1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:91c6d22b19fddec0b49fa0336795019063d9c566704476d853b8a238dbbc8165",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:91c6d22b19fddec0b49fa0336795019063d9c566704476d853b8a238dbbc8165",
          "name": "eck-operator-91c6d22b19fddec0b49fa0336795019063d9c566704476d853b8a238dbbc8165-annotation"
        },
        {
          "digest": "sha256:91c6d22b19fddec0b49fa0336795019063d9c566704476d853b8a238dbbc8165",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:91c6d22b19fddec0b49fa0336795019063d9c566704476d853b8a238dbbc8165",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.6.0",
      "version_original": "1.6.0"
    },
    {
      "_id": "611fbd13bd674341b5c5f0ef",
      "alm_examples": [
        {
          "api_version": "anzo.cambridgesemantics.com/v1",
          "kind": "Anzo",
          "metadata": {
            "name": "agent01"
          },
          "spec": {
            "nodeConfig": {
              "spec": {
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "app": "anzo"
                  }
                },
                "serviceName": "anzo-agent01",
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "anzo"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:d1c2d54ca205d669c5ea1bb6aae105afe2385cc5695cecd78423ffa1d98929f8",
                        "name": "anzo",
                        "resources": {
                          "limits": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          },
                          "requests": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          }
                        }
                      }
                    ],
                    "serviceAccountName": "anzo-operator"
                  }
                }
              }
            },
            "role": "AnzoAgent"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-operator-bundle@sha256:28703523a1c160570fc23fb1236d2a02108b97e4423d42b0d3cde98c94d351cb",
      "bundle_path_digest": "sha256:28703523a1c160570fc23fb1236d2a02108b97e4423d42b0d3cde98c94d351cb",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-20T14:32:51.478000+00:00",
      "csv_description": "The Anzo Operator provides the way to install and configure an anzo agent setup on Red Hat K8S environment.\nCurrently, this is supported only through when deployed as an Anzo Agent as part of an Anzo Unstructured deployment.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo/blob/v2.0.0/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Operator",
      "csv_metadata_description": "kubernetes operator for Anzo",
      "csv_name": "anzo-operator.v2.0.101",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:45:36.153000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "anzo-operator",
      "provided_apis": [
        {
          "group": "anzo.cambridgesemantics.com",
          "kind": "Anzo",
          "plural": "anzos",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:563e964f5771b9bfd860ea993b6e0936a54504908f5b2d1dff6f99ade74bb7a0",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:563e964f5771b9bfd860ea993b6e0936a54504908f5b2d1dff6f99ade74bb7a0",
          "name": "anzo-operator-563e964f5771b9bfd860ea993b6e0936a54504908f5b2d1dff6f99ade74bb7a0-annotation"
        },
        {
          "digest": "sha256:563e964f5771b9bfd860ea993b6e0936a54504908f5b2d1dff6f99ade74bb7a0",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:563e964f5771b9bfd860ea993b6e0936a54504908f5b2d1dff6f99ade74bb7a0",
          "name": "manager"
        },
        {
          "digest": "sha256:d1c2d54ca205d669c5ea1bb6aae105afe2385cc5695cecd78423ffa1d98929f8",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:d1c2d54ca205d669c5ea1bb6aae105afe2385cc5695cecd78423ffa1d98929f8",
          "name": "anzo"
        },
        {
          "digest": "sha256:d1c2d54ca205d669c5ea1bb6aae105afe2385cc5695cecd78423ffa1d98929f8",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:d1c2d54ca205d669c5ea1bb6aae105afe2385cc5695cecd78423ffa1d98929f8",
          "name": "anzo-d1c2d54ca205d669c5ea1bb6aae105afe2385cc5695cecd78423ffa1d98929f8-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "611fbd1c9f14588c41ebe8e8",
      "alm_examples": [
        {
          "api_version": "crd.nutanix.com/v1alpha1",
          "kind": "NutanixCsiStorage",
          "metadata": {
            "name": "nutanixcsistorage"
          },
          "spec": {
            "imagePullPolicy": "IfNotPresent",
            "node": {
              "image": "registry.connect.redhat.com/nutanix/ntnx-csi-os@sha256:2289045e0f79733c4f1871f7c686e35b49a4d484aa82446784e3713dfa3d23c7"
            },
            "provisioner": {
              "image": "registry.connect.redhat.com/nutanix/ntnx-csi-os@sha256:2289045e0f79733c4f1871f7c686e35b49a4d484aa82446784e3713dfa3d23c7"
            },
            "scc": "yes",
            "sidecars": {
              "livenessprobe": {
                "image": "quay.io/k8scsi/livenessprobe@sha256:04a9c4a49de1bd83d21e962122da2ac768f356119fb384660aa33d93183996c3"
              },
              "provisioner": {
                "image": "quay.io/k8scsi/csi-provisioner@sha256:78e3393f5fd5ff6c1e5dada2478cfa456fb7164929e573cf9a87bf6532730679"
              },
              "registrar": {
                "image": "quay.io/k8scsi/csi-node-driver-registrar@sha256:9622c6a6dac7499a055a382930f4de82905a3c5735c0753f7094115c9c871309"
              },
              "resizer": {
                "image": "quay.io/k8scsi/csi-resizer@sha256:6c6a0332693a7c456378f6abd2bb40611826c1e1a733cadbdae2daab3125b71c"
              },
              "snapshotController": {
                "image": "quay.io/k8scsi/snapshot-controller@sha256:45720fd73a0de75ad512351a725c197a6c144912b1cb09500c09752a3741388c"
              },
              "snapshotter": {
                "image": "quay.io/k8scsi/csi-snapshotter@sha256:35ead85dd09aa8cc612fdb598d4e0e2f048bef816f1b74df5eeab67cd21b10aa"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nutanix/nutanix-csi-operator-bundle@sha256:95cb57529b51a318cc3e8a39f68d1424e4a6e5ec0550b0010ccf331b6cfedf54",
      "bundle_path_digest": "sha256:95cb57529b51a318cc3e8a39f68d1424e4a6e5ec0550b0010ccf331b6cfedf54",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2021-08-20T14:33:00.787000+00:00",
      "csv_description": "# Overview\n\nThe Nutanix CSI Operator for Kubernetes packages, deploys, manages, upgrades the Nutanix CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on Nutanix Enterprise Cloud platform.\n\nThe Nutanix Container Storage Interface (CSI) Driver for Kubernetes leverages Nutanix Volumes and Nutanix Files to provide scalable and persistent storage for stateful applications.\n\nWith Nutanix CSI Provider you can:\n\n  *  **Provide persistent storage to your containers**\n     * Leverage PVC ressources to consume dynamicaly Nutanix storage\n\n     * With Files storage classes, applications on multiple pods can access the same storage, and also have the benefit of multi-pod read and write access.\n\n## Configuring k8s secret and storage class\nIn order to use this driver, create the relevant storage classes and secrets, by followinig the below section:\n 1. Create a Nutanix system secret\n```\n apiVersion: v1\n kind: Secret\n metadata:\n   name: ntnx-secret\n   namespace: ntnx-system\n data:\n   # base64 encoded prism-ip:prism-port:admin:password. \n   # E.g.: echo -n \"10.0.0.14:9440:admin:mypassword\" | base64\n   key: MS4yLjMuNDo5NDQwOm51dGFuaXg6aXRpc21hZ2lj\n```\n 2. Create storage classes\n```\n kind: StorageClass\n apiVersion: storage.k8s.io/v1\n metadata:\n     name: nutanix-volume\n provisioner: csi.nutanix.com\n parameters:\n     csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n     csi.storage.k8s.io/provisioner-secret-namespace: ntnx-system\n     csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n     csi.storage.k8s.io/node-publish-secret-namespace: ntnx-system\n     csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n     csi.storage.k8s.io/controller-expand-secret-namespace: ntnx-system\n     csi.storage.k8s.io/fstype: ext4\n     dataServiceEndPoint: 10.0.0.15:3260\n     storageContainer: default-container\n     storageType: NutanixVolumes\n     #whitelistIPMode: ENABLED\n     #chapAuth: ENABLED\n allowVolumeExpansion: true\n reclaimPolicy: Delete\n```\n",
      "csv_display_name": "Nutanix CSI Operator",
      "csv_metadata_description": "An Operator for deploying and managing the Nutanix CSI Driver",
      "csv_name": "nutanixcsioperator.v0.1.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T00:56:53.192000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "nutanixcsioperator",
      "provided_apis": [
        {
          "group": "crd.nutanix.com",
          "kind": "NutanixCsiStorage",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:6d0286b8a8f6f3cd9d6cd8319400acf27b70fbb52df5808ec6fe2d9849be7d8c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6d0286b8a8f6f3cd9d6cd8319400acf27b70fbb52df5808ec6fe2d9849be7d8c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:1a51992e5f0f3bea36996cb5e60cb9e62f51f8cff4a5dcc3e977e0b301546dd7",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:1a51992e5f0f3bea36996cb5e60cb9e62f51f8cff4a5dcc3e977e0b301546dd7",
          "name": "manager"
        },
        {
          "digest": "sha256:35ead85dd09aa8cc612fdb598d4e0e2f048bef816f1b74df5eeab67cd21b10aa",
          "image": "quay.io/k8scsi/csi-snapshotter@sha256:35ead85dd09aa8cc612fdb598d4e0e2f048bef816f1b74df5eeab67cd21b10aa",
          "name": "csi-snapshotter-35ead85dd09aa8cc612fdb598d4e0e2f048bef816f1b74df5eeab67cd21b10aa-annotation"
        },
        {
          "digest": "sha256:45720fd73a0de75ad512351a725c197a6c144912b1cb09500c09752a3741388c",
          "image": "quay.io/k8scsi/snapshot-controller@sha256:45720fd73a0de75ad512351a725c197a6c144912b1cb09500c09752a3741388c",
          "name": "snapshot-controller-45720fd73a0de75ad512351a725c197a6c144912b1cb09500c09752a3741388c-annotation"
        },
        {
          "digest": "sha256:6c6a0332693a7c456378f6abd2bb40611826c1e1a733cadbdae2daab3125b71c",
          "image": "quay.io/k8scsi/csi-resizer@sha256:6c6a0332693a7c456378f6abd2bb40611826c1e1a733cadbdae2daab3125b71c",
          "name": "csi-resizer-6c6a0332693a7c456378f6abd2bb40611826c1e1a733cadbdae2daab3125b71c-annotation"
        },
        {
          "digest": "sha256:9622c6a6dac7499a055a382930f4de82905a3c5735c0753f7094115c9c871309",
          "image": "quay.io/k8scsi/csi-node-driver-registrar@sha256:9622c6a6dac7499a055a382930f4de82905a3c5735c0753f7094115c9c871309",
          "name": "csi-node-driver-registrar-9622c6a6dac7499a055a382930f4de82905a3c5735c0753f7094115c9c871309-annotation"
        },
        {
          "digest": "sha256:78e3393f5fd5ff6c1e5dada2478cfa456fb7164929e573cf9a87bf6532730679",
          "image": "quay.io/k8scsi/csi-provisioner@sha256:78e3393f5fd5ff6c1e5dada2478cfa456fb7164929e573cf9a87bf6532730679",
          "name": "csi-provisioner-78e3393f5fd5ff6c1e5dada2478cfa456fb7164929e573cf9a87bf6532730679-annotation"
        },
        {
          "digest": "sha256:04a9c4a49de1bd83d21e962122da2ac768f356119fb384660aa33d93183996c3",
          "image": "quay.io/k8scsi/livenessprobe@sha256:04a9c4a49de1bd83d21e962122da2ac768f356119fb384660aa33d93183996c3",
          "name": "livenessprobe-04a9c4a49de1bd83d21e962122da2ac768f356119fb384660aa33d93183996c3-annotation"
        },
        {
          "digest": "sha256:2289045e0f79733c4f1871f7c686e35b49a4d484aa82446784e3713dfa3d23c7",
          "image": "registry.connect.redhat.com/nutanix/ntnx-csi-os@sha256:2289045e0f79733c4f1871f7c686e35b49a4d484aa82446784e3713dfa3d23c7",
          "name": "ntnx-csi-os-2289045e0f79733c4f1871f7c686e35b49a4d484aa82446784e3713dfa3d23c7-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.1.3",
      "version_original": "0.1.3"
    },
    {
      "_id": "611fbd2edece23122b7a7834",
      "alm_examples": [
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCluster",
          "metadata": {
            "name": "cb-example"
          },
          "spec": {
            "backup": {
              "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              },
              "serviceAccountName": "couchbase-backup"
            },
            "buckets": {
              "managed": true,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            },
            "cluster": {
              "analyticsServiceMemoryQuota": "1Gi",
              "autoCompaction": {
                "databaseFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                },
                "parallelCompaction": false,
                "timeWindow": {
                  "abortCompactionOutsideWindow": true,
                  "end": "06:00",
                  "start": "02:00"
                },
                "tombstonePurgeInterval": "72h",
                "viewFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                }
              },
              "autoFailoverMaxCount": 3,
              "autoFailoverOnDataDiskIssues": true,
              "autoFailoverOnDataDiskIssuesTimePeriod": "120s",
              "autoFailoverServerGroup": false,
              "autoFailoverTimeout": "120s",
              "clusterName": "cb-example",
              "dataServiceMemoryQuota": "256Mi",
              "eventingServiceMemoryQuota": "256Mi",
              "indexServiceMemoryQuota": "256Mi",
              "indexStorageSetting": "memory_optimized",
              "searchServiceMemoryQuota": "256Mi"
            },
            "enablePreviewScaling": false,
            "hibernate": false,
            "hibernationStrategy": "Immediate",
            "image": "registry.connect.redhat.com/couchbase/server@sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
            "logRetentionCount": 20,
            "logRetentionTime": "604800s",
            "monitoring": {
              "prometheus": {
                "enabled": false,
                "image": "registry.connect.redhat.com/couchbase/exporter@sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df"
              }
            },
            "networking": {
              "adminConsoleServiceType": "NodePort",
              "adminConsoleServices": [
                "data"
              ],
              "exposeAdminConsole": true,
              "exposedFeatureServiceType": "NodePort",
              "exposedFeatures": [
                "xdcr"
              ]
            },
            "recoveryPolicy": "PrioritizeDataIntegrity",
            "security": {
              "adminSecret": "cb-example-auth",
              "rbac": {
                "managed": true,
                "selector": {
                  "matchLabels": {
                    "cluster": "cb-example"
                  }
                }
              }
            },
            "servers": [
              {
                "name": "all_services",
                "services": [
                  "data",
                  "index",
                  "query",
                  "search",
                  "eventing",
                  "analytics"
                ],
                "size": 3
              }
            ],
            "upgradeStrategy": "RollingUpgrade",
            "xdcr": {
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "default"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "enableIndexReplica": true,
            "evictionPolicy": "valueOnly",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseEphemeralBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "ephemeral-bucket"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "evictionPolicy": "noEviction",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseMemcachedBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "memcached-bucket"
          },
          "spec": {
            "enableFlush": false,
            "memoryQuota": "100Mi"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseUser",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-user"
          },
          "spec": {
            "authDomain": "local",
            "authSecret": "cb-example-auth",
            "fullName": "My User"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseGroup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-group"
          },
          "spec": {
            "roles": [
              {
                "bucket": "default",
                "name": "bucket_admin"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseRoleBinding",
          "metadata": {
            "name": "my-role-binding"
          },
          "spec": {
            "roleRef": {
              "kind": "CouchbaseGroup",
              "name": "my-group"
            },
            "subjects": [
              {
                "kind": "CouchbaseUser",
                "name": "my-user"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseReplication",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-replication"
          },
          "spec": {
            "bucket": "default",
            "compressionType": "Snappy",
            "filterExpression": "",
            "paused": false,
            "remoteBucket": "default"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-backup"
          },
          "spec": {
            "backOffLimit": 2,
            "backupRetention": "24h",
            "failedJobsHistoryLimit": 3,
            "full": {
              "schedule": "0 3 * * 6"
            },
            "incremental": {
              "schedule": "0 3 * * 1-6"
            },
            "logRetention": "24h",
            "size": "5Gi",
            "strategy": "full_incremental",
            "successfulJobsHistoryLimit": 1
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackupRestore",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-restore"
          },
          "spec": {
            "backOffLimit": 2,
            "backup": "cb-backup",
            "end": {
              "int": 1
            },
            "logRetention": "24h",
            "repo": "cb-example-2020-10-29T19_00_03",
            "start": {
              "int": 1
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseAutoscaler",
          "metadata": {
            "name": "do.not.create.internal.only"
          },
          "spec": {
            "servers": "internal",
            "size": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:78656ed0df41696e67429609e3262ec31f5ca9f5ca946300e6a4a6503c1bbd18",
      "bundle_path_digest": "sha256:78656ed0df41696e67429609e3262ec31f5ca9f5ca946300e6a4a6503c1bbd18",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-20T14:33:18.033000+00:00",
      "csv_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments on OpenShift. By installing this integration you will be able to deply Couchbase Server clusters with a single command.\n\n## Supported Features\n\n* **Automated cluster provisioning** - Deploying a Couchbase Cluster has never been easier. Fill out a Couchbase specific configuration and let the Couchbase Operator take care of provisioning nodes and setting up cluster to your exact specification.\n\n* **On-demand scalability** - Automatically scale your cluster up or down by changing a simple configuration parameter and let the Couchbase Operator handle provisioning of new nodes and joining them into the cluster.\n\n* **Auto-recovery** - Detect Couchbase node failures, rebalance out bad nodes, and bring the cluster back up to the desired capacity. Auto-recovery is completely automated so you can sleep easy through the night knowing that the Couchbase Operator will handle any failures.\n\n* **Geo-distribution** - Replicate your data between datacenters to move data closer to the users who consume it and protect against disaster scenarios where an entire datacenter becomes unavailable.\n\n* **Persistent storage** - Define persistent network-attached storage for each node in your cluster to allow pods to be recovered even if the node they were running on is no longer available.\n\n* **Rack/zone awareness** - Tell the Couchbase Operator about availability zones in your datacenter and let the operator take care of ensuring that nodes in your cluster are deployed equally across each zone.\n\n* **Supportability** - When things go wrong, use the cbopinfo tool provided with the Couchbase Operator to collect relevant data about your Couchbase deployment so that you can quickly address issues.\n\n* **Centralized configuration management** - Manage your configuration centrally with OpenShift. Updates to the configuration are watched by the Couchbase Operator and actions are taken to make the target cluster match the desired configuration.\n## Required Parameters\n* `authSecret` - provide the name of a secret that contains two keys for the `username` and `password` of the super user ([documentation](https://docs.couchbase.com/operator/1.2/couchbase-cluster-config.html))\n\n## About Couchbase Server\n\nBuilt on the most powerful NoSQL technology, Couchbase Server delivers unparalleled performance at scale, in any cloud. With features like memory-first architecture, geo-distributed deployments, and workload isolation, Couchbase Server excels at supporting mission-critical applications at scale while maintaining submillisecond latencies and 99.999% availability. Plus, with the most comprehensive SQL-compatible query language (N1QL), migrating from RDBMS to Couchbase Server is easy with ANSI joins.\n",
      "csv_display_name": "Couchbase Operator",
      "csv_metadata_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments",
      "csv_name": "couchbase-operator.v2.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:48:05.411000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "plural": "couchbaseephemeralbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseAutoscaler",
          "plural": "couchbaseautoscalers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "plural": "couchbasememcachedbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "plural": "couchbasebackuprestores",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "plural": "couchbasereplications",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v2"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:87f601a4fd68ba8a5fed9a610dc03661addc9db9b4e332bfc4907d754d91c496",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:87f601a4fd68ba8a5fed9a610dc03661addc9db9b4e332bfc4907d754d91c496",
          "name": "operator-87f601a4fd68ba8a5fed9a610dc03661addc9db9b4e332bfc4907d754d91c496-annotation"
        },
        {
          "digest": "sha256:87f601a4fd68ba8a5fed9a610dc03661addc9db9b4e332bfc4907d754d91c496",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:87f601a4fd68ba8a5fed9a610dc03661addc9db9b4e332bfc4907d754d91c496",
          "name": "couchbase-operator"
        },
        {
          "digest": "sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
          "name": "couchbase_server"
        },
        {
          "digest": "sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
          "name": "couchbase_backup"
        },
        {
          "digest": "sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df",
          "name": "couchbase_metrics"
        },
        {
          "digest": "sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df",
          "name": "exporter-18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df-annotation"
        },
        {
          "digest": "sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
          "name": "operator-backup-3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78-annotation"
        },
        {
          "digest": "sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
          "name": "server-fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.1.0",
      "version_original": "2.1.0"
    },
    {
      "_id": "611fbd4f9f14588c41ebe8f5",
      "alm_examples": [
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixAgent",
          "metadata": {
            "labels": {
              "app": "agent",
              "vendor": "zabbix"
            },
            "name": "zabbix-agent"
          },
          "spec": {
            "active_allow": true,
            "activeservers": "",
            "allow_key": "",
            "allow_privileged": true,
            "buffer#": 100,
            "buffer_send": 5,
            "debug_level": 3,
            "deny_key": "system.run[*]",
            "host_interface": "",
            "host_interface_item": "",
            "hostname": "",
            "hostname_item": "system.hostname",
            "load_module": "",
            "log_remote_commands": true,
            "max_lines_per_second": 20,
            "metadata": "",
            "metadata_item": "",
            "passive_allow": true,
            "passive_servers": "",
            "refresh_active_checks": 120,
            "server_host": "zabbix-server",
            "start_agents": 3,
            "timeout": 3,
            "tls_accept": "unencrypted",
            "tls_ca_file_name": "",
            "tls_cert_file_name": "",
            "tls_cipher_all": "",
            "tls_cipher_cert_13": "",
            "tls_cipher_psk": "",
            "tls_cipherall_13": "",
            "tls_connect": "unencrypted",
            "tls_crl_file_name": "",
            "tls_key_file_name": "",
            "tls_psk_file_name": "",
            "tls_psk_identity": "",
            "tls_server_cert_issuer": "",
            "tls_server_cert_subject": "",
            "tlsciphercert": "",
            "tlscipherpsk13": "",
            "unsafe_user_parameters": false
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixAppliance",
          "metadata": {
            "labels": {
              "app": "appliance",
              "vendor": "zabbix"
            },
            "name": "zabbix-appliance"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_double_ieee754": true,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixFull",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-full"
          },
          "spec": {
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlsciphercert": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixProxyMysql",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-mysql"
          },
          "spec": {
            "db_server_port": 3306,
            "internal_db": true,
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix_proxy",
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixProxySqlite",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-sqlite"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "proxy#": 1
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixServer",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-server"
          },
          "spec": {
            "db_server_host": "mysql-server",
            "db_server_port": 3306,
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix",
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixAgent",
          "metadata": {
            "labels": {
              "app": "agent",
              "vendor": "zabbix"
            },
            "name": "zabbix-agent"
          },
          "spec": {
            "active_allow": true,
            "activeservers": "",
            "allow_key": "",
            "allow_privileged": true,
            "buffer#": 100,
            "buffer_send": 5,
            "debug_level": 3,
            "deny_key": "system.run[*]",
            "host_interface": "",
            "host_interface_item": "",
            "hostname": "",
            "hostname_item": "system.hostname",
            "load_module": "",
            "log_remote_commands": true,
            "max_lines_per_second": 20,
            "metadata": "",
            "metadata_item": "",
            "passive_allow": true,
            "passive_servers": "",
            "refresh_active_checks": 120,
            "server_host": "zabbix-server",
            "start_agents": 3,
            "timeout": 3,
            "tls_accept": "unencrypted",
            "tls_ca_file_name": "",
            "tls_cert_file_name": "",
            "tls_cipher_all": "",
            "tls_cipher_cert_13": "",
            "tls_cipher_psk": "",
            "tls_cipherall_13": "",
            "tls_connect": "unencrypted",
            "tls_crl_file_name": "",
            "tls_key_file_name": "",
            "tls_psk_file_name": "",
            "tls_psk_identity": "",
            "tls_server_cert_issuer": "",
            "tls_server_cert_subject": "",
            "tlsciphercert": "",
            "tlscipherpsk13": "",
            "unsafe_user_parameters": false
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixServer",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-server"
          },
          "spec": {
            "db_server_host": "mysql-server",
            "db_server_port": 3306,
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix",
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysqlsecret": "mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixProxySqlite",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-sqlite"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "proxy#": 1
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixProxyMysql",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-mysql"
          },
          "spec": {
            "db_server_port": 3306,
            "internal_db": true,
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix_proxy",
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixFull",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-full"
          },
          "spec": {
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlsciphercert": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixAppliance",
          "metadata": {
            "labels": {
              "app": "appliance",
              "vendor": "zabbix"
            },
            "name": "zabbix-appliance"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_double_ieee754": true,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "mysql-secrets"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zabbix/zabbixoperator-certified-bundle@sha256:236d7cc772634f20540dc153f9a7fc66357d7d4852962c5c7b5daff61c99e5c8",
      "bundle_path_digest": "sha256:236d7cc772634f20540dc153f9a7fc66357d7d4852962c5c7b5daff61c99e5c8",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "lts",
      "creation_date": "2021-08-20T14:33:51.487000+00:00",
      "csv_description": "## About this Operator\n\nZabbix helps you to real-time monitoring of millions of metrics collected from tens of thousands of servers, virtual machines and network devices.\nThe Zabbix Operator allows users to easily deploy, manage, and maintain Zabbix deployments on OpenShift. By installing this integration you will be able to deploy Zabbix server / proxies and other components with a single command.\n## Supported Features\n* **Zabbix Server** - Simple Zabbix installation with included Zabbix server, Zabbix web-interface and Zabbix Java Gateway with MySQL database support. The feature does not provide MySQL service and requires an external MySQL database. \n* **Zabbix Server (Full)** - Zabbix installation with included Zabbix server, Zabbix web-interface, Zabbix Java Gateway and MySQL server instance.\n* **Zabbix proxy (SQLite3)** - Very simple way to gain power of Zabbix proxy. The feature has  SQLite3 support for Zabbix proxies and allow to specify amount of proxies. \n* **Zabbix proxy (MySQL)** - Another option of Zabbix proxy. The option support and deliver MySQL database.\n* **Zabbix agent** - Zabbix agent can be deployed on each available node for stability and performance monitoring on remote nodes. It allows to gather metrics with full automation!\n* **Zabbix Appliance** - Zabbix appliance very simple way to test and check Zabbix features. The option provides all core components in one solution. It includes Zabbix server, Zabbix Java Gateway, Zabbix web-interface and MySQL server in deployment. It is very useful for testing Zabbix features!\n## Prerequisites\nAll deployment options are require additional information during deployment. Please, check the following instructions and provide required configuration:\n* **Zabbix Server** - MySQL database host information and MySQL database credentials in specially formatted *Secret*. Additionally it is possible to specify SSL certificates for HTTPS support in *Secret*.\n* **Zabbix Server (Full)** - MySQL database credentials in specially formatted *Secret*. MySQL database volume name information. Additionally it is possible to specify SSL certificates for HTTPS support in *Secret*.\n* **Zabbix proxy (SQLite3)** - Zabbix server host information only.\n* **Zabbix proxy (MySQL)** - MySQL database credentials in specially formatted *Secrets* and Zabbix server host information.\n* **Zabbix agent** - Zabbix server host information only for outgoing and incoming connections. Zabbix agent uses \"privileged\" mode to monitor node resources! For example, running processes.\n* **Zabbix Appliance** - MySQL database credentials in specially formatted *Secret*. MySQL database volume name information. Additionally it is possible to specify SSL certificates for HTTPS support in *Secret*.\n### MySQL credentials\n```\nkind: Secret\napiVersion: v1\nmetadata:\n  name: zabbix-full-secrets\ndata:\n  mysql_root_password: emFiYml4X3N1cGVyX3Jvb3Q= [1]\n  mysql_zabbix_password: emFiYml4X3VzZXJfcGFzc3dvcmQ= [2]\n  mysql_zabbix_username: emFiYml4 [3]\ntype: Opaque\n```\nUsing MySQL root password (*mysqlrootpassword* [1]) Zabbix server / proxy will try to create MySQL database schema with grant permissions to *mysqlzabbixusername* [2] and *mysqlzabbixpassword* [3].\n### SSL certificates for HTTPS\n```\nkind: Secret\napiVersion: v1\nmetadata:\n  name: zabbix-web-sslsecret\ndata:\n  ssl.crt: >-\n   < ssl.crt data>\n  ssl.key: >-\n\t < ssl.key data >\n  dhparam.pem: >-\n   <  dhparam.pem data >\n```\nFiles *ssl.crt*, *ssl.key* and *dhparam.perm* are required for Zabbix web-interface for SSL support.\n",
      "csv_display_name": "Zabbix Operator",
      "csv_metadata_description": "Zabbix operator with multiple deployment variants and different components",
      "csv_name": "zabbix-operator-certified.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:02:47.213000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "zabbix-operator-certified",
      "provided_apis": [
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixProxyMysql",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixProxySqlite",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixServer",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixAgent",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixAppliance",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixFull",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "image": "registry.connect.redhat.com/zabbix/zabbixoperator-certified@sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "name": "zabbixoperator-certified-c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66-annotation"
        },
        {
          "digest": "sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "image": "registry.connect.redhat.com/zabbix/zabbixoperator-certified@sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "name": "ansible"
        },
        {
          "digest": "sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "image": "registry.connect.redhat.com/zabbix/zabbixoperator-certified@sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "name": "operator"
        },
        {
          "digest": "sha256:2f76e7cbece9d9366b613bcb1079b030ddbcc5e97b2f133b73bd0131f0869725",
          "image": "registry.connect.redhat.com/zabbix/zabbix-server-mysql-50@sha256:2f76e7cbece9d9366b613bcb1079b030ddbcc5e97b2f133b73bd0131f0869725",
          "name": "zbx_server_mysql"
        },
        {
          "digest": "sha256:9f3ba82445ea3d9754f016e21b2ea1c99c1958da928f49aee1b18377af78d365",
          "image": "registry.connect.redhat.com/zabbix/zabbix-web-mysql-50@sha256:9f3ba82445ea3d9754f016e21b2ea1c99c1958da928f49aee1b18377af78d365",
          "name": "zbx_web_mysql"
        },
        {
          "digest": "sha256:a216de448dc10b2797a70f4fc6664c2bd611840b7b6c26f066635d48c606bf06",
          "image": "registry.connect.redhat.com/zabbix/zabbix-java-gateway-50@sha256:a216de448dc10b2797a70f4fc6664c2bd611840b7b6c26f066635d48c606bf06",
          "name": "zbx_java_gateway"
        },
        {
          "digest": "sha256:054ad28ade616642fb50fd38a48df2d00a9c0c6a57df1e367caeceb6469f6c42",
          "image": "registry.connect.redhat.com/zabbix/zabbix-proxy-mysql-50@sha256:054ad28ade616642fb50fd38a48df2d00a9c0c6a57df1e367caeceb6469f6c42",
          "name": "zbx_proxy_mysql"
        },
        {
          "digest": "sha256:713a6223a01ee57efb719d6f491ef779d74104a1bc1b8599eade8b3f4a3318ed",
          "image": "registry.connect.redhat.com/zabbix/zabbix-proxy-sqlite-50@sha256:713a6223a01ee57efb719d6f491ef779d74104a1bc1b8599eade8b3f4a3318ed",
          "name": "zbx_proxy_sqlite"
        },
        {
          "digest": "sha256:229562a27ed45319ef17397fe81cac81129c84eccd2c14f6085531a86ef9b87d",
          "image": "registry.connect.redhat.com/zabbix/zabbix-agent-50@sha256:229562a27ed45319ef17397fe81cac81129c84eccd2c14f6085531a86ef9b87d",
          "name": "zbx_agent"
        },
        {
          "digest": "sha256:7236c68c494f572edf64ced85c3a083b7eafff1c6562e95bdc50e50c37e3e3bf",
          "image": "registry.connect.redhat.com/zabbix/zabbix-appliance-50@sha256:7236c68c494f572edf64ced85c3a083b7eafff1c6562e95bdc50e50c37e3e3bf",
          "name": "zbx_appliance"
        },
        {
          "digest": "sha256:e7541d9fbcb7a71ac8a68cc4efc1806bab74023961c7d3fb562ded320df90c43",
          "image": "registry.redhat.io/rhel8/mysql-80@sha256:e7541d9fbcb7a71ac8a68cc4efc1806bab74023961c7d3fb562ded320df90c43",
          "name": "db_mysql"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "611fbd53eb34b73652492dc9",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
                "priorityClassName": "",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              }
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:6f4ff463c67af42c1c3603e36e512a60dedb95775380a1a6b26c4cded86de5e1",
      "bundle_path_digest": "sha256:6f4ff463c67af42c1c3603e36e512a60dedb95775380a1a6b26c4cded86de5e1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-08-20T14:33:55.567000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.2.8 of the NeuVector Certified Operator deploys version 4.3.1 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         NAME                              ROLE                                          AGE     USERS   GROUPS   SERVICEACCOUNTS\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:55:57.999000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72",
          "name": "neuvector-operator-9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72-annotation"
        },
        {
          "digest": "sha256:9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:55b3d9873846d0a8670b58e8a8a76c426d3aba74d4e5c4fca43d05c1dd296f10",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:55b3d9873846d0a8670b58e8a8a76c426d3aba74d4e5c4fca43d05c1dd296f10",
          "name": "controller"
        },
        {
          "digest": "sha256:fdd66288454dd01f4f618c8cf04c7da501d4362773266ec6f448d63e26e3a35c",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:fdd66288454dd01f4f618c8cf04c7da501d4362773266ec6f448d63e26e3a35c",
          "name": "enforcer"
        },
        {
          "digest": "sha256:73445c18ea18f131b6fa630a97623a3043d05758205ef93fc02fa920abbedaa6",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:73445c18ea18f131b6fa630a97623a3043d05758205ef93fc02fa920abbedaa6",
          "name": "manager"
        },
        {
          "digest": "sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "name": "scanner"
        },
        {
          "digest": "sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
          "image": "registry.access.redhat.com/ubi8@sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
          "name": "updater"
        },
        {
          "digest": "sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "name": "scanner-a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06-annotation"
        },
        {
          "digest": "sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
          "image": "registry.access.redhat.com/ubi8@sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
          "name": "ubi8-091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.2.8",
      "version_original": "1.2.8"
    },
    {
      "_id": "611fbd60eb34b73652492dd1",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1alpha1",
          "kind": "OpenshiftArtifactoryHa",
          "metadata": {
            "name": "openshiftartifactoryha"
          },
          "spec": {
            "artifactory-ha": {
              "artifactory": {
                "image": {
                  "repository": "registry.connect.redhat.com/jfrog/artifactory-pro",
                  "version": "7.4.3"
                },
                "joinKey": "EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE",
                "masterKey": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                "node": {
                  "replicaCount": 2,
                  "waitForPrimaryStartup": {
                    "enabled": false
                  }
                }
              },
              "database": {
                "driver": "OVERRIDE",
                "password": "OVERRIDE",
                "type": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "initContainerImage": "registry.redhat.io/ubi8-minimal",
              "nginx": {
                "http": {
                  "externalPort": 80,
                  "internalPort": 8080
                },
                "https": {
                  "externalPort": 443,
                  "internalPort": 8443
                },
                "image": {
                  "repository": "registry.redhat.io/rhel8/nginx-116",
                  "version": "latest"
                },
                "service": {
                  "ssloffload": false
                },
                "tlsSecretName": "OVERRIDE"
              },
              "postgresql": {
                "enabled": false
              },
              "waitForDatabase": false
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/artifactory-operator-bundle@sha256:5526e86dd60790139a6620e2464cb3450091dd0e6941600e9dab66a6fc79012e",
      "bundle_path_digest": "sha256:5526e86dd60790139a6620e2464cb3450091dd0e6941600e9dab66a6fc79012e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-08-20T14:34:08.391000+00:00",
      "csv_description": "Openshift 4 Operator to deploy JFrog Artifactory Enterprise",
      "csv_display_name": "JFrog Artifactory Enterprise Operator",
      "csv_metadata_description": "JFrog Artifactory Enterprise deploys Artifactory in a high availability environment across multiple pods",
      "csv_name": "artifactory-ha-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:45:59.917000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "plural": "openshiftartifactoryhas",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:a5e9e99889cbe2c4ee96c80d908e80987371b66f9d99c6c6c6155583a9ef505a",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:a5e9e99889cbe2c4ee96c80d908e80987371b66f9d99c6c6c6155583a9ef505a",
          "name": "artifactory-operator-a5e9e99889cbe2c4ee96c80d908e80987371b66f9d99c6c6c6155583a9ef505a-annotation"
        },
        {
          "digest": "sha256:a5e9e99889cbe2c4ee96c80d908e80987371b66f9d99c6c6c6155583a9ef505a",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:a5e9e99889cbe2c4ee96c80d908e80987371b66f9d99c6c6c6155583a9ef505a",
          "name": "artifactory-ha-operator"
        },
        {
          "digest": "sha256:97eb6bd2639523ec5f8f7d7e87953ceda515244ef2e7ee4bef08f7eb19faa7ca",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:97eb6bd2639523ec5f8f7d7e87953ceda515244ef2e7ee4bef08f7eb19faa7ca",
          "name": "artifactory_image_repository"
        },
        {
          "digest": "sha256:0ba76a7b26e5ffb95b4354243337ac2b3ff84ae8637c0782631084d1b2f99a33",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:0ba76a7b26e5ffb95b4354243337ac2b3ff84ae8637c0782631084d1b2f99a33",
          "name": "nginx_image_repository"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "611fbd69bd674341b5c5f10b",
      "alm_examples": [
        {
          "api_version": "aci.ctrl/v1alpha1",
          "kind": "AciContainersOperator",
          "metadata": {
            "name": "acicnioperator",
            "namespace": "aci-containers-system"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/noiro/aci-operator-bundle@sha256:246f4479569bff74a54ffb0f19b6fec8f99839d0629c7ef9bf2f1c8ea2316e65",
      "bundle_path_digest": "sha256:246f4479569bff74a54ffb0f19b6fec8f99839d0629c7ef9bf2f1c8ea2316e65",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-20T14:34:17.721000+00:00",
      "csv_description": "## ACI CNI Plugin\n\nThe Cisco Application Centric Infrastructure (ACI) CNI plugin brings the ACI Networking and Policy model to Kubernetes clusters that reside on-prem or in the cloud. It is fully open source and relies on the Opflex Protocol to program Open vSwitch instances running on the Kubernetes nodes. It provides IP address management, L2/L3 networking, load balancing, and security functions for container workloads.\n\nFeatures of Cisco ACI?\nLinks to learn more about the Plugin?\n## ACI Containers Operator\n\nHow does the Operator work?\nWhat does the Operator do?\nLinks to learn more about the Operator?\n## Prerequisites for enabling this Operator\n\nPlease describe any steps a user needs to take prior to enabling this Operator (e.g. any Secrets or ConfigMaps that need to be in place upfront).\n",
      "csv_display_name": "Cisco ACI Containers Operator",
      "csv_metadata_description": "The Cisco Application Centric Infrastructure (ACI) Containers Operator brings the ACI CNI Plugin and Policy model to Kubernetes clusters.",
      "csv_name": "aci-containers-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:45:05.987000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "aci-containers-operator",
      "provided_apis": [
        {
          "group": "aci.ctrl",
          "kind": "AciContainersOperator",
          "plural": "acicontainersoperators",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0db556fc8f188159fbb18797d8fcbd96303176d7803acaaf6bf604de8dcc0fd0",
          "image": "quay.io/noiro/aci-containers-operator@sha256:0db556fc8f188159fbb18797d8fcbd96303176d7803acaaf6bf604de8dcc0fd0",
          "name": "aci-containers-operator-0db556fc8f188159fbb18797d8fcbd96303176d7803acaaf6bf604de8dcc0fd0-annotation"
        },
        {
          "digest": "sha256:0db556fc8f188159fbb18797d8fcbd96303176d7803acaaf6bf604de8dcc0fd0",
          "image": "quay.io/noiro/aci-containers-operator@sha256:0db556fc8f188159fbb18797d8fcbd96303176d7803acaaf6bf604de8dcc0fd0",
          "name": "aci-containers-operator"
        },
        {
          "digest": "sha256:0fc4c11704dd26a3b10e73cbffca34addc1a968e7b55032533717c70696db2ab",
          "image": "quay.io/noiro/acc-provision-operator@sha256:0fc4c11704dd26a3b10e73cbffca34addc1a968e7b55032533717c70696db2ab",
          "name": "acc-provision-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "611fbd72bd674341b5c5f10e",
      "alm_examples": [
        {
          "api_version": "anzounstructured.clusters.cambridgesemantics.com/v1",
          "kind": "AnzoUnstructured",
          "metadata": {
            "name": "au01"
          },
          "spec": {
            "auWorker": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-w",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2",
                          "name": "w",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            },
            "msLeader": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-ms",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286",
                          "name": "ms",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-operator-bundle@sha256:800c686058a8b80d2c082741019db9d35535b2ba2b59007cbde0c2dffa143e82",
      "bundle_path_digest": "sha256:800c686058a8b80d2c082741019db9d35535b2ba2b59007cbde0c2dffa143e82",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-20T14:34:26.997000+00:00",
      "csv_description": "The Anzo Unstructured Operator provides the way to install and configure an anzo unstructured setup on Red Hat K8S environment.\nCurrently, this is possible only through existing Anzo installation.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo-unstructured/blob/v2.0.0/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Unstructured Operator",
      "csv_metadata_description": "Kubernetes Operator for Anzo Unstructured",
      "csv_name": "anzounstructured-operator.v2.0.101",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:45:44.012000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "anzounstructured-operator",
      "provided_apis": [
        {
          "group": "anzounstructured.clusters.cambridgesemantics.com",
          "kind": "AnzoUnstructured",
          "plural": "anzounstructureds",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:a47af068a7aa55c12be84c80d263feeed5597ecc434986b4f2fff782b568bb04",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:a47af068a7aa55c12be84c80d263feeed5597ecc434986b4f2fff782b568bb04",
          "name": "unstructured-operator-a47af068a7aa55c12be84c80d263feeed5597ecc434986b4f2fff782b568bb04-annotation"
        },
        {
          "digest": "sha256:a47af068a7aa55c12be84c80d263feeed5597ecc434986b4f2fff782b568bb04",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:a47af068a7aa55c12be84c80d263feeed5597ecc434986b4f2fff782b568bb04",
          "name": "manager"
        },
        {
          "digest": "sha256:0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286",
          "name": "anzo_microservices_leader"
        },
        {
          "digest": "sha256:4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2",
          "name": "anzo_unstructured_worker"
        },
        {
          "digest": "sha256:0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286",
          "name": "anzo-microservices-leader-0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286-annotation"
        },
        {
          "digest": "sha256:4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2",
          "name": "anzo-unstructured-worker-4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "611fbd75bd674341b5c5f10f",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {
              "priorityClassName": "system-node-critical",
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "nvidia.com/gpu",
                  "operator": "Exists"
                }
              ]
            },
            "dcgm": {
              "enabled": true,
              "hostPort": 5555,
              "image": "dcgm",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c"
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              },
              "env": [
                {
                  "name": "DCGM_EXPORTER_LISTEN",
                  "value": ":9400"
                },
                {
                  "name": "DCGM_EXPORTER_KUBERNETES",
                  "value": "true"
                },
                {
                  "name": "DCGM_EXPORTER_COLLECTORS",
                  "value": "/etc/dcgm-exporter/dcp-metrics-included.csv"
                }
              ],
              "image": "dcgm-exporter",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff"
            },
            "devicePlugin": {
              "args": [],
              "env": [
                {
                  "name": "PASS_DEVICE_SPECS",
                  "value": "true"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                },
                {
                  "name": "DEVICE_LIST_STRATEGY",
                  "value": "envvar"
                },
                {
                  "name": "DEVICE_ID_STRATEGY",
                  "value": "uuid"
                },
                {
                  "name": "NVIDIA_VISIBLE_DEVICES",
                  "value": "all"
                },
                {
                  "name": "NVIDIA_DRIVER_CAPABILITIES",
                  "value": "all"
                }
              ],
              "image": "k8s-device-plugin",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05"
            },
            "driver": {
              "enabled": true,
              "image": "driver",
              "imagePullSecrets": [],
              "licensingConfig": {
                "configMapName": ""
              },
              "manager": {
                "env": [
                  {
                    "name": "DRAIN_USE_FORCE",
                    "value": "false"
                  },
                  {
                    "name": "DRAIN_POD_SELECTOR_LABEL",
                    "value": ""
                  },
                  {
                    "name": "DRAIN_TIMEOUT_SECONDS",
                    "value": "0s"
                  },
                  {
                    "name": "DRAIN_DELETE_EMPTYDIR_DATA",
                    "value": "false"
                  }
                ],
                "image": "k8s-driver-manager",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia/cloud-native",
                "version": "sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b"
              },
              "nodeSelector": {
                "nvidia.com/gpu.deploy.driver": "true"
              },
              "podSecurityContext": {},
              "rdma": {
                "enabled": false
              },
              "repoConfig": {
                "configMapName": "",
                "destinationDir": ""
              },
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {
              "env": [
                {
                  "name": "GFD_SLEEP_INTERVAL",
                  "value": "60s"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                }
              ],
              "image": "gpu-feature-discovery",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f"
            },
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true,
              "env": [
                {
                  "name": "WITH_REBOOT",
                  "value": "false"
                }
              ],
              "image": "k8s-mig-manager",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:77b8e58a54c222bee3cc56b2305d4cebfa60722c122858f94301e611f87d7fec"
            },
            "nodeStatusExporter": {
              "enabled": true,
              "image": "gpu-operator-validator",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:1cce434a1722288bacab5eaa5c194ca2bdbad55679ba871a2814556853339585"
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {
                "image": "cuda",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia",
                "version": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce"
              }
            },
            "toolkit": {
              "enabled": true,
              "image": "container-toolkit",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "version": "sha256:8f9517b4c83b8730c40134df385088be41519b585176c66727ff6f181ae5e703"
            },
            "validator": {
              "env": [
                {
                  "name": "WITH_WORKLOAD",
                  "value": "true"
                }
              ],
              "image": "gpu-operator-validator",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:1cce434a1722288bacab5eaa5c194ca2bdbad55679ba871a2814556853339585"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:949e1d767985e99cde04a070667ba0b81e8422e71555c0c233c528fd746667d3",
      "bundle_path_digest": "sha256:949e1d767985e99cde04a070667ba0b81e8422e71555c0c233c528fd746667d3",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.8",
      "creation_date": "2021-08-20T14:34:29.087000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/kubernetes/openshift-on-gpu-install-guide/index.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T00:50:42.716000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3a0ff79c4edc24de708f82e5f9dc2946897aa4a50e8827203221ee2281008974",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:3a0ff79c4edc24de708f82e5f9dc2946897aa4a50e8827203221ee2281008974",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:8f9517b4c83b8730c40134df385088be41519b585176c66727ff6f181ae5e703",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:8f9517b4c83b8730c40134df385088be41519b585176c66727ff6f181ae5e703",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
          "image": "nvcr.io/nvidia/driver@sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
          "name": "driver-image"
        },
        {
          "digest": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:77b8e58a54c222bee3cc56b2305d4cebfa60722c122858f94301e611f87d7fec",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:77b8e58a54c222bee3cc56b2305d4cebfa60722c122858f94301e611f87d7fec",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "image": "nvcr.io/nvidia/cuda@sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:1cce434a1722288bacab5eaa5c194ca2bdbad55679ba871a2814556853339585",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:1cce434a1722288bacab5eaa5c194ca2bdbad55679ba871a2814556853339585",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b",
          "name": "k8s-driver-manager-image"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.8.0",
      "version_original": "1.8.0"
    },
    {
      "_id": "611fbd829f14588c41ebe90e",
      "alm_examples": [
        {
          "api_version": "charts.cloudbees.com/v1alpha1",
          "kind": "CloudBeesCI",
          "metadata": {
            "name": "cloudbeesci-sample"
          },
          "spec": {
            "Agents": {
              "Enabled": true,
              "Image": {
                "dockerImage": "cloudbees/cloudbees-core-agent:2.289.3.2"
              },
              "SeparateNamespace": {
                "Create": false,
                "Enabled": false
              }
            },
            "Hibernation": {
              "Enabled": false,
              "Image": {
                "dockerImage": "cloudbees/managed-master-hibernation-monitor:247.c5dfce00a179"
              },
              "NodeSelector": {},
              "Tolerations": []
            },
            "Master": {
              "Enabled": true,
              "Image": {
                "dockerImage": "cloudbees/cloudbees-core-mm:2.289.3.2"
              }
            },
            "NetworkPolicy": {
              "Enabled": false,
              "JMXSelectors": [],
              "ingressControllerSelector": []
            },
            "OperationsCenter": {
              "AgentListenerPort": 50000,
              "Annotations": {},
              "CSRF": {
                "ProxyCompatibility": false
              },
              "CasC": {
                "ConfigMapName": "oc-casc-bundle",
                "Enabled": false
              },
              "ContainerPort": 8080,
              "Enabled": true,
              "ExtraConfigMaps": [],
              "ExtraContainers": [],
              "ExtraGroovyConfiguration": {},
              "ExtraVolumeMounts": [],
              "ExtraVolumes": [],
              "HealthProbeLivenessFailureThreshold": 12,
              "HealthProbes": true,
              "Image": {
                "dockerImage": "cloudbees/cloudbees-cloud-core-oc:2.289.3.2"
              },
              "Ingress": {
                "Annotations": {
                  "kubernetes.io/tls-acme": "false"
                },
                "Class": "nginx",
                "tls": {
                  "Enable": false
                }
              },
              "LoadBalancerSourceRanges": [
                "0.0.0.0/0"
              ],
              "Name": "cjoc",
              "NodeSelector": {},
              "Platform": "standard",
              "Protocol": "http",
              "Resources": {
                "Limits": {
                  "Cpu": 1,
                  "Memory": "2G"
                },
                "Requests": {
                  "Cpu": 1,
                  "Memory": "2G"
                }
              },
              "Route": {
                "tls": {
                  "Enable": false,
                  "InsecureEdgeTerminationPolicy": "Redirect",
                  "Termination": "edge"
                }
              },
              "ServiceAgentListenerPort": 50000,
              "ServiceAnnotations": {},
              "ServicePort": 80,
              "ServiceType": "ClusterIP",
              "Tolerations": []
            },
            "Persistence": {
              "AccessMode": "ReadWriteOnce",
              "Annotations": {},
              "Size": "20Gi"
            },
            "PodSecurityPolicy": {
              "Annotations": {},
              "Enabled": false
            },
            "Subdomain": false,
            "ingress-nginx": {
              "Enabled": false,
              "controller": {
                "admissionWebhooks": {
                  "patch": {
                    "nodeSelector": {
                      "kubernetes.io/os": "linux"
                    }
                  }
                },
                "ingressClass": "nginx",
                "nodeSelector": {
                  "kubernetes.io/os": "linux"
                },
                "service": {
                  "externalTrafficPolicy": "Local"
                }
              },
              "defaultBackend": {
                "nodeSelector": {
                  "kubernetes.io/os": "linux"
                }
              }
            },
            "nginx-ingress": {
              "Enabled": false,
              "controller": {
                "ingressClass": "nginx",
                "nodeSelector": {
                  "kubernetes.io/os": "linux"
                },
                "service": {
                  "externalTrafficPolicy": "Local"
                }
              },
              "defaultBackend": {
                "nodeSelector": {
                  "kubernetes.io/os": "linux"
                }
              }
            },
            "rbac": {
              "agentsServiceAccountName": "jenkins-agents",
              "hibernationMonitorServiceAccountName": "managed-master-hibernation-monitor",
              "install": true,
              "masterServiceAccountName": "jenkins",
              "serviceAccountName": "cjoc"
            },
            "sidecarinjector": {
              "Enabled": false
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cloudbees/cloudbees-core-modern@sha256:2cf058c819b40512094f84f4d374457455370ec4994d34cee6e39b9d87841f05",
      "bundle_path_digest": "sha256:2cf058c819b40512094f84f4d374457455370ec4994d34cee6e39b9d87841f05",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-08-20T14:34:42.135000+00:00",
      "csv_description": "CloudBees CI",
      "csv_display_name": "CloudBees CI",
      "csv_metadata_description": "",
      "csv_name": "cloudbees-ci.v3.34.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:47:21.936000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "cloudbees-ci",
      "provided_apis": [
        {
          "group": "charts.cloudbees.com",
          "kind": "CloudBeesCI",
          "plural": "cloudbeescis",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:bd0bd72e9e7807b0fa307de8a93a56967221fe2dd181bac02383f0f9be9120e4",
          "image": "registry.connect.redhat.com/cloudbees/cloudbees-ci-operator@sha256:bd0bd72e9e7807b0fa307de8a93a56967221fe2dd181bac02383f0f9be9120e4",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "3.34.1",
      "version_original": "3.34.1"
    },
    {
      "_id": "611fbdadeb34b73652492dec",
      "alm_examples": [
        {
          "api_version": "citrix.com/v1alpha1",
          "kind": "CitrixIngressController",
          "metadata": {
            "name": "cic"
          },
          "spec": {
            "adcCredentialSecret": "",
            "coeConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 30002
              },
              "transactions": {
                "enable": false,
                "port": 30001
              }
            },
            "crds": {
              "install": true,
              "retainOnDelete": false
            },
            "defaultSSLCertSecret": "",
            "entityPrefix": "",
            "exporter": {
              "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "IfNotPresent",
              "required": false
            },
            "ignoreNodeExternalIP": false,
            "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
            "ingressClass": "",
            "ipam": false,
            "kubernetesURL": "",
            "license": {
              "accept": false
            },
            "logLevel": "INFO",
            "logProxy": "",
            "namespaceLabels": "",
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nodeWatch": false,
            "nsCookieVersion": "0",
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "x.x.x.x",
            "nsPort": 443,
            "nsProtocol": "HTTPS",
            "nsSNIPS": "",
            "nsVIP": "",
            "openshift": true,
            "podIPsforServiceGroupMembers": false,
            "pullPolicy": "IfNotPresent",
            "routeLabels": "",
            "serviceAccount": {
              "create": true
            },
            "serviceClass": "",
            "setAsDefaultIngressClass": false,
            "tolerations": [],
            "updateIngressStatus": false
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-bundle@sha256:1cf84c905b444c613f67f5b2a7b80015226b6a99c5723503e87c795a719e6347",
      "bundle_path_digest": "sha256:1cf84c905b444c613f67f5b2a7b80015226b6a99c5723503e87c795a719e6347",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-08-20T14:35:25.690000+00:00",
      "csv_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an OpenShift environment.",
      "csv_display_name": "Citrix Ingress Controller",
      "csv_metadata_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an Openshift environment.",
      "csv_name": "citrix-ingress-controller-operator.v1.13.20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:47:12.660000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "citrix-ingress-controller-operator",
      "provided_apis": [
        {
          "group": "citrix.com",
          "kind": "CitrixIngressController",
          "plural": "citrixingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:a41bf2a59a5678d757c18c2d995e10f035676128726ded4b84d61522c3fca4fa",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:a41bf2a59a5678d757c18c2d995e10f035676128726ded4b84d61522c3fca4fa",
          "name": "citrix-k8s-ingress-controller-a41bf2a59a5678d757c18c2d995e10f035676128726ded4b84d61522c3fca4fa-annotation"
        },
        {
          "digest": "sha256:1fee9f7563afd0878288d60dce2c263a6333b18b40d88898ed0fca92e6e7048f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1fee9f7563afd0878288d60dce2c263a6333b18b40d88898ed0fca92e6e7048f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a41bf2a59a5678d757c18c2d995e10f035676128726ded4b84d61522c3fca4fa",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:a41bf2a59a5678d757c18c2d995e10f035676128726ded4b84d61522c3fca4fa",
          "name": "manager"
        },
        {
          "digest": "sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "name": "cic"
        },
        {
          "digest": "sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "name": "exporter"
        },
        {
          "digest": "sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "name": "citrix-ingress-controller-f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0-annotation"
        },
        {
          "digest": "sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "name": "citrix-adc-metrics-exporter-c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.13.20",
      "version_original": "1.13.20"
    },
    {
      "_id": "611fbdb2dece23122b7a7881",
      "alm_examples": [
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDeBundle",
          "metadata": {
            "name": "my-bundle",
            "namespace": "my-namespace"
          },
          "spec": {
            "details": {
              "name": "my-bundle"
            }
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDatabaseService",
          "metadata": {
            "name": "my-entando-database-service",
            "namespace": "my-namespace"
          },
          "spec": {
            "createDeployment": true,
            "databaseName": "my_database",
            "dbms": "postgresql"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoKeycloakServer",
          "metadata": {
            "name": "my-keycloak",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "replicas": 1,
            "standardImage": "redhat-sso"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoClusterInfrastructure",
          "metadata": {
            "name": "my-entando-cluster-infrastructure",
            "namespace": "my-namespace"
          },
          "spec": {
            "environmentVariables": [],
            "replicas": 1
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoPlugin",
          "metadata": {
            "name": "my-entando-plugin",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "healthCheckPath": "/management/health",
            "image": "entando/entando-avatar-plugin:6.0.5",
            "ingressHostName": "my-plugin.apps-crc.testing",
            "ingressPath": "/avatarPlugin",
            "replicas": 1,
            "roles": [
              {
                "code": "admin",
                "name": "user"
              },
              {
                "code": "user",
                "name": "user"
              }
            ],
            "securityLevel": "strict"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoApp",
          "metadata": {
            "name": "my-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "ingressHostName": "my-app.apps-crc.testing",
            "replicas": 1,
            "standardServerImage": "eap"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoAppPluginLink",
          "metadata": {
            "name": "my-link",
            "namespace": "my-namespace"
          },
          "spec": {
            "entandoAppName": "my-app",
            "entandoPluginName": "my-plugin"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoCompositeApp",
          "metadata": {
            "name": "my-entando-composite-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "components": [
              {
                "kind": "EntandoDatabaseService",
                "metadata": {
                  "name": "inline-entando-database-service"
                },
                "spec": {
                  "createDeployment": true
                }
              },
              {
                "kind": "EntandoKeycloakServer",
                "metadata": {
                  "name": "inline-keycloak"
                },
                "spec": {
                  "standardImage": "redhat-sso"
                }
              },
              {
                "kind": "EntandoClusterInfrastructure",
                "metadata": {
                  "name": "inline-entando-cluster-infrastructure"
                },
                "spec": {}
              },
              {
                "kind": "EntandoApp",
                "metadata": {
                  "name": "inline-app"
                },
                "spec": {
                  "standardServerImage": "eap"
                }
              },
              {
                "kind": "EntandoPlugin",
                "metadata": {
                  "name": "inline-plugin"
                },
                "spec": {
                  "healthCheckPath": "/management/health",
                  "image": "entando/entando-avatar-plugin:6.0.5",
                  "ingressPath": "/avatarPlugin",
                  "roles": [
                    {
                      "code": "admin",
                      "name": "admin"
                    },
                    {
                      "code": "user",
                      "name": "user"
                    }
                  ]
                }
              },
              {
                "kind": "EntandoAppPluginLink",
                "metadata": {
                  "name": "inline-link"
                },
                "spec": {
                  "entandoAppName": "inline-app",
                  "entandoPluginName": "inline-plugin"
                }
              }
            ],
            "dbmsOverride": "postgresql",
            "ingressHostNameOverride": "entando.apps-crc.testing"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/entando/entando-operator@sha256:639e2d35738483c6c092ebe8636bbab50c0f2101bc06f2fe9a1c7f68b3ffc4a6",
      "bundle_path_digest": "sha256:639e2d35738483c6c092ebe8636bbab50c0f2101bc06f2fe9a1c7f68b3ffc4a6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-20T14:35:30.853000+00:00",
      "csv_description": "## Entando\n\nThe Entando platform accelerates the development and lifecycle  management of fully modularized applications on Kubernetes. It  provides tools to help developers create and manage applications  using modular frontend and backend components.\nThe Entando Operator automates the installation, provisioning, and  configuration management of the components that make up an Entando  application. Specifically, the operator manages the following custom  resources:\n**EntandoKeycloakServers** for centralized authentication of frontend  and backend components. The operator can deploy Keycloak, or in certified  environments, Red Hat SSO servers that can then be used by subsequent  deployments as an OpenID Connect provider.\n**EntandoApps** for hosting an Entando application. EntandoApps are hosted on Wildfly or JBoss EAP containers, and can also be used to deploy custom  EntandoApp containers.\n**EntandoPlugins** for deploying microservices to customize or enhance your EntandoApp. Entando microservice plugins are deployed to your cluster, and  then linked to one or more EntandoApps.\n## Using the Operator\nThe Entando Operator can be deployed using the default settings without any  configuration. Once deployed, the operator can be customized by editing  the *configmap* and secrets.\n### ConfigMap: entando-operator-config\nThe 'entando-operator-config' ConfigMap can be added after deployment and any changes to it will be picked up by the operator on subsequent event processing. It supports the following keys:\n\n    entando.k8s.operator.gc.controller.pods: set this to \"false\" to keep controller pods after completion.\n    entando.k8s.operator.compliance.mode: set this to \"community\" if there is no requirement for Red Hat compliance.\n    entando.k8s.operator.image.pull.secrets: a comma separated list containing the names of pull secrets that will be linked to all service accounts.\n    entando.k8s.operator.disable.pvc.garbage.collection: set this to \"false\" if you want Persistent Volume Claims to be deleted with the custom resources they are associated with.\n    entando.k8s.operator.impose.default.limits: set this to \"false\" if there is no need to limit the resource consumption of pods on your cluster.\n    entando.k8s.operator.request.to.limit.ratio: a decimal number that default limits will be multiplied by to calculate default requests for resources.\n    entando.k8s.operator.force.db.password.reset: set this to \"true\" if you plan to delete Secrets from your namespace but you want to retain the Database they point to.\n    entando.k8s.operator.pull.policy.override: specify your preferred pullPolicy for images. The default is Always.\n    entando.tls.secret.name: The name of a standard TLS secret to use for HTTPS Ingresses. See the section entando-tls-secret.\n    entando.ca.secret.name: The name of a secret containing CA certificates. See the section entando-ca-cert-secret.\n    entando.assume.external.https.provider: Set this to \"true\" if your cloud provider handles HTTPS for you.\n    entando.use.auto.cert.generation: Set this to \"true\" to have Openshift use its internal CA to generate certificates for your Routes.\n    entando.default.routing.suffix: The domain name that can be suffixed to deployment names when the ingressHostName is omitted. Needs to be preconfigured on your DNS provider.\n    entando.pod.completion.timeout.seconds: The time it will take before Entando fails a run-to-completion Pod.\n    entando.pod.readiness.timeout.seconds: The time it will take before Entando fails a Service Pod.\n    entando.pod.shutdown.timeout.seconds: The time Entando will give a Pod to shutdown gracefully.\n\n\n### entando-pull-secret\nThe secret to be used to pull Entando images from the Red Hat container registry. The name of this secret is hard coded as it is required for the ClusterServiceVersion of this Operator\n### entando-tls-secret\nA standard Kubernetes TLS secret that will be used on all deployments where no custom TLS secret name is specified.\n### entando-ca-cert-secret\nThis is an opaque secret in the Entando Operator's namespace that contains the certificates of all trusted certificate authorities in your environment. This is generally used mainly for self signed certificates. As is generally the case for opaque secrets, there are no constraints on the keys in this secret. However, limit the files inside the secret to X509 certificates or certificate chains. The Entando Operator will load all of these files into a Java keystore that it then configures as the trust store for each container that uses Java.\n",
      "csv_display_name": "Entando Operator",
      "csv_metadata_description": "Processes EntandoKeycloakServer, EntandoApp and EntandoPlugin custom resources and deploys the relevant containers in the Kubernetes cluster.",
      "csv_name": "entando-k8s-operator.v6.3.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:49:33.240000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "entando-k8s-operator",
      "provided_apis": [
        {
          "group": "entando.org",
          "kind": "EntandoAppPluginLink",
          "plural": "entandoapppluginlinks",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoApp",
          "plural": "entandoapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoClusterInfrastructure",
          "plural": "entandoclusterinfrastructures",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoCompositeApp",
          "plural": "entandocompositeapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDatabaseService",
          "plural": "entandodatabaseservices",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDeBundle",
          "plural": "entandodebundles",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoKeycloakServer",
          "plural": "entandokeycloakservers",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoPlugin",
          "plural": "entandoplugins",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.3.2",
      "version_original": "6.3.2"
    },
    {
      "_id": "611fbdb9dece23122b7a7886",
      "alm_examples": [
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIIsilon",
          "metadata": {
            "name": "isilon",
            "namespace": "test-isilon"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VERBOSE",
                    "value": "1"
                  },
                  {
                    "name": "X_CSI_ISI_ENDPOINT",
                    "value": "1.1.1.1"
                  },
                  {
                    "name": "X_CSI_ISI_PORT",
                    "value": "8080"
                  },
                  {
                    "name": "X_CSI_ISI_PATH",
                    "value": "/ifs/data/csi"
                  },
                  {
                    "name": "X_CSI_ISILON_NO_PROBE_ON_START",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_ISI_AUTOPROBE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_INSECURE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_CUSTOM_TOPOLOGY_ENABLED",
                    "value": "false"
                  }
                ],
                "image": "dellemc/csi-isilon:v1.4.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v4",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_ISI_QUOTA_ENABLED",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_ACCESS_ZONE",
                    "value": "System"
                  }
                ]
              },
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_ISILON_NFS_V3",
                    "value": "false"
                  }
                ]
              },
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csipscale"
                  ],
                  "name": "provisioner"
                }
              ],
              "snapshotClass": [
                {
                  "name": "volumesnapshotclass",
                  "parameters": {
                    "IsiPath": "/ifs/data/csi"
                  }
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": true,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-isilon.dellemc.com/1.1.1.1",
                          "values": [
                            "csi-isilon.dellemc.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "default": true,
                  "name": "storageclass",
                  "parameters": {
                    "AccessZone": "System",
                    "AzServiceIP": "1.1.1.1",
                    "IsiPath": "/ifs/data/csi",
                    "RootClientEnabled": "false"
                  },
                  "reclaimPolicy": "Delete",
                  "volumeBindingMode": "WaitForFirstConsumer"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMax",
          "metadata": {
            "name": "test-powermax",
            "namespace": "test-powermax"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_POWERMAX_ENDPOINT",
                    "value": "https://0.0.0.0:8443/"
                  },
                  {
                    "name": "X_CSI_K8S_CLUSTER_PREFIX",
                    "value": "XYZ"
                  },
                  {
                    "name": "X_CSI_POWERMAX_PORTGROUPS",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_POWERMAX_ARRAYS",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_TRANSPORT_PROTOCOL",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_POWERMAX_PROXY_SERVICE_NAME",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_GRPC_MAX_THREADS",
                    "value": "4"
                  }
                ],
                "image": "dellemc/csi-powermax:v1.5.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v4",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERMAX_ISCSI_ENABLE_CHAP",
                    "value": "false"
                  }
                ]
              },
              "replicas": 2,
              "snapshotClass": [
                {
                  "name": "powermax-snapclass"
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": false,
                  "default": false,
                  "name": "bronze",
                  "parameters": {
                    "SRP": "DEFAULT_SRP",
                    "SYMID": "000000000001",
                    "ServiceLevel": "Bronze"
                  },
                  "reclaimPolicy": "Delete",
                  "volumeBindingMode": "Immediate"
                },
                {
                  "allowVolumeExpansion": false,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-powermax.dellemc.com/000000000001",
                          "values": [
                            "csi-powermax.dellemc.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "default": true,
                  "name": "bronze-topology",
                  "parameters": {
                    "SRP": "DEFAULT_SRP",
                    "SYMID": "000000000001",
                    "ServiceLevel": "Bronze"
                  },
                  "reclaimPolicy": "Delete",
                  "volumeBindingMode": "WaitForFirstConsumer"
                },
                {
                  "allowVolumeExpansion": true,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-powermax.dellemc.com/000000000001",
                          "values": [
                            "csi-powermax.dellemc.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "name": "bronze-topology-resize",
                  "parameters": {
                    "SRP": "DEFAULT_SRP",
                    "SYMID": "000000000001",
                    "ServiceLevel": "Bronze"
                  },
                  "reclaimPolicy": "Delete",
                  "volumeBindingMode": "WaitForFirstConsumer"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMaxRevProxy",
          "metadata": {
            "name": "powermax-reverseproxy",
            "namespace": "test-powermax"
          },
          "spec": {
            "config": {
              "linkConfig": {
                "backup": {
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                },
                "primary": {
                  "certSecret": "",
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                }
              },
              "mode": "Linked"
            },
            "image": "dellemc/csipowermax-reverseproxy:v1.1.0.000R",
            "imagePullPolicy": "Always",
            "tlsSecret": "csirevproxy-tls-secret"
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerStore",
          "metadata": {
            "name": "test-powerstore",
            "namespace": "test-powerstore"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_ENDPOINT",
                    "value": "https://127.0.0.1/api/rest"
                  },
                  {
                    "name": "X_CSI_POWERSTORE_NODE_NAME_PREFIX",
                    "value": "csi"
                  },
                  {
                    "name": "X_CSI_TRANSPORT_PROTOCOL",
                    "value": "ISCSI"
                  },
                  {
                    "name": "X_CSI_FC_PORTS_FILTER_FILE_PATH",
                    "value": "/etc/fc-ports-filter"
                  }
                ],
                "image": "dellemc/csi-powerstore:v1.2.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_ENABLE_CHAP",
                    "value": "true"
                  }
                ]
              },
              "replicas": 2,
              "snapshotClass": [
                {
                  "name": "powerstore-snapshot"
                }
              ],
              "storageClass": [
                {
                  "default": true,
                  "name": "powerstore",
                  "parameters": {
                    "csi.storage.k8s.io/fstype": "ext4"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "name": "powerstore-xfs",
                  "parameters": {
                    "csi.storage.k8s.io/fstype": "xfs"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-powerstore.dellemc.com/127.0.0.1-nfs",
                          "values": [
                            "true"
                          ]
                        }
                      ]
                    }
                  ],
                  "name": "powerstore-nfs",
                  "parameters": {
                    "csi.storage.k8s.io/fstype": "nfs",
                    "nasName": "nas-server"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIUnity",
          "metadata": {
            "name": "test-unity",
            "namespace": "test-unity"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_UNITY_DEBUG",
                    "value": "true"
                  }
                ],
                "image": "dellemc/csi-unity:v1.4.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v3",
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csiunity"
                  ],
                  "name": "provisioner"
                },
                {
                  "args": [
                    "--snapshot-name-prefix=csiunitysnap"
                  ],
                  "name": "snapshotter"
                }
              ],
              "snapshotClass": [
                {
                  "name": "test-snap",
                  "parameters": {
                    "retentionDuration": ""
                  }
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": true,
                  "default": true,
                  "name": "virt2016****-fc",
                  "parameters": {
                    "arrayId": "VIRT2016****",
                    "protocol": "FC",
                    "storagePool": "pool_1"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "name": "virt2017****-iscsi",
                  "parameters": {
                    "arrayId": "VIRT2017****",
                    "protocol": "iSCSI",
                    "storagePool": "pool_1"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "name": "virt2017****-nfs",
                  "parameters": {
                    "arrayId": "VIRT2017****",
                    "hostIoSize": "8192",
                    "nasServer": "nas_1",
                    "protocol": "NFS",
                    "storagePool": "pool_1"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-unity.dellemc.com/virt2017****-iscsi",
                          "values": [
                            "true"
                          ]
                        }
                      ]
                    }
                  ],
                  "name": "virt2017****-iscsi-topology",
                  "parameters": {
                    "arrayId": "VIRT2017****",
                    "protocol": "iSCSI",
                    "storagePool": "pool_1"
                  },
                  "reclaimPolicy": "Delete",
                  "volumeBindingMode": "WaitForFirstConsumer"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIVXFlexOS",
          "metadata": {
            "name": "test-vxflexos",
            "namespace": "test-vxflexos"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VXFLEXOS_SYSTEMNAME",
                    "value": "systemname"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENDPOINT",
                    "value": "https://127.0.0.1"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLELISTVOLUMESNAPSHOT",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLESNAPSHOTCGDELETE",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  }
                ],
                "image": "dellemc/csi-vxflexos:v1.3.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v3",
              "forceUpdate": false,
              "initContainers": [
                {
                  "envs": [
                    {
                      "name": "MDM",
                      "value": "10.xx.xx.xx,10.xx.xx.xx"
                    }
                  ],
                  "image": "dellemc/sdc:3.5.1.1",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "sdc"
                }
              ],
              "replicas": 1,
              "snapshotClass": [
                {
                  "name": "vxflexos-snapclass"
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": true,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-vxflexos.dellemc.com/X_CSI_VXFLEXOS_SYSTEMNAME",
                          "values": [
                            "csi-vxflexos.dellemc.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "default": true,
                  "name": "vxflexos",
                  "parameters": {
                    "storagepool": "pool1"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-vxflexos.dellemc.com/X_CSI_VXFLEXOS_SYSTEMNAME",
                          "values": [
                            "csi-vxflexos.dellemc.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "default": false,
                  "name": "vxflexos-xfs",
                  "parameters": {
                    "FsType": "xfs",
                    "storagepool": "pool1"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dell-emc/dell-csiop-bundle-110@sha256:36a685117aa33ae94e6e768a10e24f6a65b2cc6f14cdd778948108e613ae5abc",
      "bundle_path_digest": "sha256:36a685117aa33ae94e6e768a10e24f6a65b2cc6f14cdd778948108e613ae5abc",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-20T14:35:37.942000+00:00",
      "csv_description": "Dell CSI Operator for Dell EMC CSI Drivers",
      "csv_display_name": "Dell CSI Operator",
      "csv_metadata_description": "",
      "csv_name": "dell-csi-operator-certified.v1.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:48:48.607000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "dell-csi-operator-certified",
      "provided_apis": [
        {
          "group": "storage.dell.com",
          "kind": "CSIIsilon",
          "plural": "csiisilons",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMax",
          "plural": "csipowermaxes",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMaxRevProxy",
          "plural": "csipowermaxrevproxies",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerStore",
          "plural": "csipowerstores",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIUnity",
          "plural": "csiunities",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIVXFlexOS",
          "plural": "csivxflexoses",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:126790cbea5d21fa49e927791742c1a4a108ad7931c08247f822bb4d416b98a6",
          "image": "dellemc/dell-csi-operator@sha256:126790cbea5d21fa49e927791742c1a4a108ad7931c08247f822bb4d416b98a6",
          "name": "dell-csi-operator-126790cbea5d21fa49e927791742c1a4a108ad7931c08247f822bb4d416b98a6-annotation"
        },
        {
          "digest": "sha256:126790cbea5d21fa49e927791742c1a4a108ad7931c08247f822bb4d416b98a6",
          "image": "docker.io/dellemc/dell-csi-operator@sha256:126790cbea5d21fa49e927791742c1a4a108ad7931c08247f822bb4d416b98a6",
          "name": "dell-csi-operator-controller"
        },
        {
          "digest": "sha256:bde48e1751173b709090c2539fdf12d6ba64e88ec7a4301591227ce925f3c678",
          "image": "docker.io/busybox@sha256:bde48e1751173b709090c2539fdf12d6ba64e88ec7a4301591227ce925f3c678",
          "name": "config-copy"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.2.0",
      "version_original": "1.2.0"
    },
    {
      "_id": "611fbdbb9f14588c41ebe92b",
      "alm_examples": [
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIIsilon",
          "metadata": {
            "name": "isilon",
            "namespace": "test-isilon"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VERBOSE",
                    "value": "1"
                  },
                  {
                    "name": "X_CSI_ISI_ENDPOINT",
                    "value": "1.1.1.1"
                  },
                  {
                    "name": "X_CSI_ISI_PORT",
                    "value": "8080"
                  },
                  {
                    "name": "X_CSI_ISI_PATH",
                    "value": "/ifs/data/csi"
                  },
                  {
                    "name": "X_CSI_ISILON_NO_PROBE_ON_START",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_ISI_AUTOPROBE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_INSECURE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  }
                ],
                "image": "dellemc/csi-isilon:v1.3.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v3",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_ISI_QUOTA_ENABLED",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_ACCESS_ZONE",
                    "value": "System"
                  }
                ]
              },
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_ISILON_NFS_V3",
                    "value": "false"
                  }
                ]
              },
              "replicas": 1,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csipscale"
                  ],
                  "name": "provisioner"
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": true,
                  "default": true,
                  "name": "storageclass",
                  "parameters": {
                    "AccessZone": "System",
                    "AzServiceIP": "1.1.1.1",
                    "IsiPath": "/ifs/data/csi",
                    "RootClientEnabled": "false"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIIsilon",
          "metadata": {
            "name": "isilon",
            "namespace": "test-isilon"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VERBOSE",
                    "value": "1"
                  },
                  {
                    "name": "X_CSI_ISI_ENDPOINT",
                    "value": "1.1.1.1"
                  },
                  {
                    "name": "X_CSI_ISI_PORT",
                    "value": "8080"
                  },
                  {
                    "name": "X_CSI_ISI_PATH",
                    "value": "/ifs/data/csi"
                  },
                  {
                    "name": "X_CSI_ISILON_NO_PROBE_ON_START",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_ISI_AUTOPROBE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_INSECURE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "false"
                  }
                ],
                "image": "dellemc/csi-isilon:v1.3.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v3",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_ISI_QUOTA_ENABLED",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_ACCESS_ZONE",
                    "value": "System"
                  }
                ]
              },
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_ISILON_NFS_V3",
                    "value": "false"
                  }
                ]
              },
              "replicas": 1,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csipscale"
                  ],
                  "name": "provisioner"
                }
              ],
              "snapshotClass": [
                {
                  "name": "volumesnapshotclass",
                  "parameters": {
                    "IsiPath": "/ifs/data/csi"
                  }
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": true,
                  "default": true,
                  "name": "storageclass",
                  "parameters": {
                    "AccessZone": "System",
                    "AzServiceIP": "1.1.1.1",
                    "IsiPath": "/ifs/data/csi",
                    "RootClientEnabled": "false"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMaxRevProxy",
          "metadata": {
            "name": "powermax-reverseproxy",
            "namespace": "test-powermax"
          },
          "spec": {
            "config": {
              "linkConfig": {
                "backup": {
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                },
                "primary": {
                  "certSecret": "",
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                }
              },
              "mode": "Linked"
            },
            "image": "dellemc/csipowermax-reverseproxy:v1.0.0.000R",
            "imagePullPolicy": "Always",
            "tlsSecret": "csirevproxy-tls-secret"
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMax",
          "metadata": {
            "name": "test-powermax",
            "namespace": "test-powermax"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_POWERMAX_ENDPOINT",
                    "value": "https://0.0.0.0:8443/"
                  },
                  {
                    "name": "X_CSI_K8S_CLUSTER_PREFIX",
                    "value": "XYZ"
                  },
                  {
                    "name": "X_CSI_POWERMAX_PORTGROUPS",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_POWERMAX_ARRAYS",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_TRANSPORT_PROTOCOL",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_POWERMAX_PROXY_SERVICE_NAME",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_GRPC_MAX_THREADS",
                    "value": "4"
                  }
                ],
                "image": "dellemc/csi-powermax:v1.4.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v3",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERMAX_ISCSI_ENABLE_CHAP",
                    "value": "false"
                  }
                ]
              },
              "replicas": 1,
              "storageClass": [
                {
                  "allowVolumeExpansion": false,
                  "default": true,
                  "name": "bronze",
                  "parameters": {
                    "SRP": "DEFAULT_SRP",
                    "SYMID": "000000000001",
                    "ServiceLevel": "Bronze"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "name": "bronze-resize",
                  "parameters": {
                    "SRP": "DEFAULT_SRP",
                    "SYMID": "000000000001",
                    "ServiceLevel": "Bronze"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMax",
          "metadata": {
            "name": "test-powermax",
            "namespace": "test-powermax"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_POWERMAX_ENDPOINT",
                    "value": "https://0.0.0.0:8443/"
                  },
                  {
                    "name": "X_CSI_K8S_CLUSTER_PREFIX",
                    "value": "XYZ"
                  },
                  {
                    "name": "X_CSI_POWERMAX_PORTGROUPS",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_POWERMAX_ARRAYS",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_TRANSPORT_PROTOCOL",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_POWERMAX_PROXY_SERVICE_NAME",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_GRPC_MAX_THREADS",
                    "value": "4"
                  }
                ],
                "image": "dellemc/csi-powermax:v1.4.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v3",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERMAX_ISCSI_ENABLE_CHAP",
                    "value": "false"
                  }
                ]
              },
              "replicas": 1,
              "snapshotClass": [
                {
                  "name": "powermax-snapclass"
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": false,
                  "default": true,
                  "name": "bronze",
                  "parameters": {
                    "SRP": "DEFAULT_SRP",
                    "SYMID": "000000000001",
                    "ServiceLevel": "Bronze"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "name": "bronze-resize",
                  "parameters": {
                    "SRP": "DEFAULT_SRP",
                    "SYMID": "000000000001",
                    "ServiceLevel": "Bronze"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerStore",
          "metadata": {
            "name": "test-powerstore",
            "namespace": "test-powerstore"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_ENDPOINT",
                    "value": "https://127.0.0.1/api/rest"
                  },
                  {
                    "name": "X_CSI_POWERSTORE_NODE_NAME_PREFIX",
                    "value": "csi"
                  },
                  {
                    "name": "X_CSI_TRANSPORT_PROTOCOL",
                    "value": "ISCSI"
                  },
                  {
                    "name": "X_CSI_FC_PORTS_FILTER_FILE_PATH",
                    "value": "/etc/fc-ports-filter"
                  }
                ],
                "image": "dellemc/csi-powerstore:v1.1.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v1",
              "forceUpdate": false,
              "replicas": 1,
              "storageClass": [
                {
                  "default": true,
                  "name": "powerstore",
                  "reclaimPolicy": "Delete"
                },
                {
                  "name": "powerstore-xfs",
                  "parameters": {
                    "FsType": "xfs"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "name": "powerstore-nfs",
                  "parameters": {
                    "FsType": "nfs",
                    "nasName": "nas-server"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerStore",
          "metadata": {
            "name": "test-powerstore",
            "namespace": "test-powerstore"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_ENDPOINT",
                    "value": "https://127.0.0.1/api/rest"
                  },
                  {
                    "name": "X_CSI_POWERSTORE_NODE_NAME_PREFIX",
                    "value": "csi"
                  },
                  {
                    "name": "X_CSI_TRANSPORT_PROTOCOL",
                    "value": "ISCSI"
                  },
                  {
                    "name": "X_CSI_FC_PORTS_FILTER_FILE_PATH",
                    "value": "/etc/fc-ports-filter"
                  }
                ],
                "image": "dellemc/csi-powerstore:v1.1.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v1",
              "forceUpdate": false,
              "replicas": 1,
              "snapshotClass": [
                {
                  "name": "powerstore-snapshot"
                }
              ],
              "storageClass": [
                {
                  "default": true,
                  "name": "powerstore",
                  "reclaimPolicy": "Delete"
                },
                {
                  "name": "powerstore-xfs",
                  "parameters": {
                    "FsType": "xfs"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "name": "powerstore-nfs",
                  "parameters": {
                    "FsType": "nfs",
                    "nasName": "nas-server"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIUnity",
          "metadata": {
            "name": "test-unity",
            "namespace": "test-unity"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_UNITY_DEBUG",
                    "value": "true"
                  }
                ],
                "image": "dellemc/csi-unity:v1.3.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2",
              "replicas": 1,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csiunity"
                  ],
                  "name": "provisioner"
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": true,
                  "default": true,
                  "name": "virt2016****-fc",
                  "parameters": {
                    "arrayId": "VIRT2016****",
                    "protocol": "FC",
                    "storagePool": "pool_1"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "name": "virt2017****-iscsi",
                  "parameters": {
                    "arrayId": "VIRT2017****",
                    "protocol": "iSCSI",
                    "storagePool": "pool_1"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIUnity",
          "metadata": {
            "name": "test-unity",
            "namespace": "test-unity"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_UNITY_DEBUG",
                    "value": "true"
                  }
                ],
                "image": "dellemc/csi-unity:v1.3.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2",
              "replicas": 1,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csiunity"
                  ],
                  "name": "provisioner"
                }
              ],
              "snapshotClass": [
                {
                  "name": "test-snap",
                  "parameters": {
                    "retentionDuration": ""
                  }
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": true,
                  "default": true,
                  "name": "virt2016****-fc",
                  "parameters": {
                    "arrayId": "VIRT2016****",
                    "protocol": "FC",
                    "storagePool": "pool_1"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "name": "virt2017****-iscsi",
                  "parameters": {
                    "arrayId": "VIRT2017****",
                    "protocol": "iSCSI",
                    "storagePool": "pool_1"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIVXFlexOS",
          "metadata": {
            "name": "test-vxflexos",
            "namespace": "test-vxflexos"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VXFLEXOS_SYSTEMNAME",
                    "value": "systemname"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENDPOINT",
                    "value": "https://127.0.0.0"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLELISTVOLUMESNAPSHOT",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLESNAPSHOTCGDELETE",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  }
                ],
                "image": "dellemc/csi-vxflexos:v1.2.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2",
              "forceUpdate": false,
              "replicas": 1,
              "storageClass": [
                {
                  "allowVolumeExpansion": true,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-vxflexos.dellemc.com/X_CSI_VXFLEXOS_SYSTEMNAME",
                          "values": [
                            "csi-vxflexos.dellemc.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "default": true,
                  "name": "vxflexos",
                  "parameters": {
                    "storagepool": "pool1"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-vxflexos.dellemc.com/X_CSI_VXFLEXOS_SYSTEMNAME",
                          "values": [
                            "csi-vxflexos.dellemc.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "default": false,
                  "name": "vxflexos-xfs",
                  "parameters": {
                    "FsType": "xfs",
                    "storagepool": "pool2"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIVXFlexOS",
          "metadata": {
            "name": "test-vxflexos",
            "namespace": "test-vxflexos"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VXFLEXOS_SYSTEMNAME",
                    "value": "systemname"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENDPOINT",
                    "value": "https://127.0.0.0"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLELISTVOLUMESNAPSHOT",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLESNAPSHOTCGDELETE",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  }
                ],
                "image": "dellemc/csi-vxflexos:v1.2.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2",
              "forceUpdate": false,
              "replicas": 1,
              "snapshotClass": [
                {
                  "name": "vxflexos-snapclass"
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": true,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-vxflexos.dellemc.com/X_CSI_VXFLEXOS_SYSTEMNAME",
                          "values": [
                            "csi-vxflexos.dellemc.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "default": true,
                  "name": "vxflexos",
                  "parameters": {
                    "storagepool": "pool1"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-vxflexos.dellemc.com/X_CSI_VXFLEXOS_SYSTEMNAME",
                          "values": [
                            "csi-vxflexos.dellemc.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "default": false,
                  "name": "vxflexos-xfs",
                  "parameters": {
                    "FsType": "xfs",
                    "storagepool": "pool2"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIIsilon",
          "metadata": {
            "name": "isilon",
            "namespace": "test-isilon"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VERBOSE",
                    "value": "1"
                  },
                  {
                    "name": "X_CSI_ISI_ENDPOINT",
                    "value": "1.1.1.1"
                  },
                  {
                    "name": "X_CSI_ISI_PORT",
                    "value": "8080"
                  },
                  {
                    "name": "X_CSI_ISI_PATH",
                    "value": "/ifs/data/csi"
                  },
                  {
                    "name": "X_CSI_ISILON_NO_PROBE_ON_START",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_ISI_AUTOPROBE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_INSECURE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  }
                ],
                "image": "dellemc/csi-isilon:v1.3.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v3",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_ISI_QUOTA_ENABLED",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_ACCESS_ZONE",
                    "value": "System"
                  }
                ]
              },
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_ISILON_NFS_V3",
                    "value": "false"
                  }
                ]
              },
              "replicas": 1,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csipscale"
                  ],
                  "name": "provisioner"
                }
              ],
              "snapshotClass": [
                {
                  "name": "volumesnapshotclass",
                  "parameters": {
                    "IsiPath": "/ifs/data/csi"
                  }
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": true,
                  "default": true,
                  "name": "storageclass",
                  "parameters": {
                    "AccessZone": "System",
                    "AzServiceIP": "1.1.1.1",
                    "IsiPath": "/ifs/data/csi",
                    "RootClientEnabled": "false"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIUnity",
          "metadata": {
            "name": "test-unity",
            "namespace": "test-unity"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_UNITY_DEBUG",
                    "value": "true"
                  }
                ],
                "image": "dellemc/csi-unity:v1.3.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2",
              "replicas": 1,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csiunity"
                  ],
                  "name": "provisioner"
                }
              ],
              "snapshotClass": [
                {
                  "name": "test-snap",
                  "parameters": {
                    "retentionDuration": ""
                  }
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": true,
                  "default": true,
                  "name": "virt2016****-fc",
                  "parameters": {
                    "arrayId": "VIRT2016****",
                    "protocol": "FC",
                    "storagePool": "pool_1"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "name": "virt2017****-iscsi",
                  "parameters": {
                    "arrayId": "VIRT2017****",
                    "protocol": "iSCSI",
                    "storagePool": "pool_1"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "name": "virt2017****-nfs",
                  "parameters": {
                    "arrayId": "VIRT2017****",
                    "hostIoSize": "8192",
                    "nasServer": "nas_1",
                    "protocol": "NFS",
                    "storagePool": "pool_1"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIVXFlexOS",
          "metadata": {
            "name": "test-vxflexos",
            "namespace": "test-vxflexos"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VXFLEXOS_SYSTEMNAME",
                    "value": "systemname"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENDPOINT",
                    "value": "https://127.0.0.1"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLELISTVOLUMESNAPSHOT",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLESNAPSHOTCGDELETE",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  }
                ],
                "image": "dellemc/csi-vxflexos:v1.2.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2",
              "forceUpdate": false,
              "replicas": 1,
              "snapshotClass": [
                {
                  "name": "vxflexos-snapclass"
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": true,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-vxflexos.dellemc.com/X_CSI_VXFLEXOS_SYSTEMNAME",
                          "values": [
                            "csi-vxflexos.dellemc.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "default": true,
                  "name": "vxflexos",
                  "parameters": {
                    "storagepool": "pool1"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-vxflexos.dellemc.com/X_CSI_VXFLEXOS_SYSTEMNAME",
                          "values": [
                            "csi-vxflexos.dellemc.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "default": false,
                  "name": "vxflexos-xfs",
                  "parameters": {
                    "FsType": "xfs",
                    "storagepool": "pool2"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dell-emc/dell-csiop-bundle-110@sha256:0fe8dd27ddc36df73517195b9d4983a4c54e3036683c83952a9514f335ac557d",
      "bundle_path_digest": "sha256:0fe8dd27ddc36df73517195b9d4983a4c54e3036683c83952a9514f335ac557d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-20T14:35:39.005000+00:00",
      "csv_description": "Dell CSI Operator for Dell EMC CSI Drivers\nDell CSI Operator is an operator which can be used to install and manage various CSI Drivers provided by Dell EMC for different storage arrays.",
      "csv_display_name": "Dell CSI Operator",
      "csv_metadata_description": "An operator for installing and managing CSI Drivers provided by Dell EMC",
      "csv_name": "dell-csi-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:49:05.305000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "dell-csi-operator-certified",
      "provided_apis": [
        {
          "group": "storage.dell.com",
          "kind": "CSIVXFlexOS",
          "plural": "csivxflexoses",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIIsilon",
          "plural": "csiisilons",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMax",
          "plural": "csipowermaxes",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMaxRevProxy",
          "plural": "csipowermaxrevproxies",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerStore",
          "plural": "csipowerstores",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIUnity",
          "plural": "csiunities",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:113435c9d0d805a2d7f4e6b5bdd6d21a3e489cb0278a9e81b2bc142c0fd5eb0f",
          "image": "dellemc/dell-csi-operator@sha256:113435c9d0d805a2d7f4e6b5bdd6d21a3e489cb0278a9e81b2bc142c0fd5eb0f",
          "name": "dell-csi-operator-113435c9d0d805a2d7f4e6b5bdd6d21a3e489cb0278a9e81b2bc142c0fd5eb0f-annotation"
        },
        {
          "digest": "sha256:113435c9d0d805a2d7f4e6b5bdd6d21a3e489cb0278a9e81b2bc142c0fd5eb0f",
          "image": "dellemc/dell-csi-operator@sha256:113435c9d0d805a2d7f4e6b5bdd6d21a3e489cb0278a9e81b2bc142c0fd5eb0f",
          "name": "dell-csi-operator"
        },
        {
          "digest": "sha256:a9286defaba7b3a519d585ba0e37d0b2cbee74ebfe590960b0b1d6a5e97d1e1d",
          "image": "busybox@sha256:a9286defaba7b3a519d585ba0e37d0b2cbee74ebfe590960b0b1d6a5e97d1e1d",
          "name": "config-copy"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "611fbdc1eb34b73652492df2",
      "alm_examples": [
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCluster",
          "metadata": {
            "name": "cb-example"
          },
          "spec": {
            "backup": {
              "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              },
              "serviceAccountName": "couchbase-backup"
            },
            "buckets": {
              "managed": true,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            },
            "cluster": {
              "analyticsServiceMemoryQuota": "1Gi",
              "autoCompaction": {
                "databaseFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                },
                "parallelCompaction": false,
                "timeWindow": {
                  "abortCompactionOutsideWindow": true,
                  "end": "06:00",
                  "start": "02:00"
                },
                "tombstonePurgeInterval": "72h",
                "viewFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                }
              },
              "autoFailoverMaxCount": 3,
              "autoFailoverOnDataDiskIssues": true,
              "autoFailoverOnDataDiskIssuesTimePeriod": "120s",
              "autoFailoverServerGroup": false,
              "autoFailoverTimeout": "120s",
              "clusterName": "cb-example",
              "dataServiceMemoryQuota": "256Mi",
              "eventingServiceMemoryQuota": "256Mi",
              "indexServiceMemoryQuota": "256Mi",
              "indexStorageSetting": "memory_optimized",
              "searchServiceMemoryQuota": "256Mi"
            },
            "enablePreviewScaling": false,
            "hibernate": false,
            "hibernationStrategy": "Immediate",
            "image": "registry.connect.redhat.com/couchbase/server@sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
            "logRetentionCount": 20,
            "logRetentionTime": "604800s",
            "monitoring": {
              "prometheus": {
                "enabled": false,
                "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784"
              }
            },
            "networking": {
              "adminConsoleServiceType": "NodePort",
              "adminConsoleServices": [
                "data"
              ],
              "exposeAdminConsole": true,
              "exposedFeatureServiceType": "NodePort",
              "exposedFeatures": [
                "xdcr"
              ]
            },
            "recoveryPolicy": "PrioritizeDataIntegrity",
            "security": {
              "adminSecret": "cb-example-auth",
              "rbac": {
                "managed": true,
                "selector": {
                  "matchLabels": {
                    "cluster": "cb-example"
                  }
                }
              }
            },
            "servers": [
              {
                "name": "all_services",
                "services": [
                  "data",
                  "index",
                  "query",
                  "search",
                  "eventing",
                  "analytics"
                ],
                "size": 3
              }
            ],
            "upgradeStrategy": "RollingUpgrade",
            "xdcr": {
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "default"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "enableIndexReplica": true,
            "evictionPolicy": "valueOnly",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseEphemeralBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "ephemeral-bucket"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "evictionPolicy": "noEviction",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseMemcachedBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "memcached-bucket"
          },
          "spec": {
            "enableFlush": false,
            "memoryQuota": "100Mi"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseUser",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-user"
          },
          "spec": {
            "authDomain": "local",
            "authSecret": "cb-example-auth",
            "fullName": "My User"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseGroup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-group"
          },
          "spec": {
            "roles": [
              {
                "bucket": "default",
                "name": "bucket_admin"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseRoleBinding",
          "metadata": {
            "name": "my-role-binding"
          },
          "spec": {
            "roleRef": {
              "kind": "CouchbaseGroup",
              "name": "my-group"
            },
            "subjects": [
              {
                "kind": "CouchbaseUser",
                "name": "my-user"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseReplication",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-replication"
          },
          "spec": {
            "bucket": "default",
            "compressionType": "Snappy",
            "filterExpression": "",
            "paused": false,
            "remoteBucket": "default"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-backup"
          },
          "spec": {
            "backOffLimit": 2,
            "backupRetention": "24h",
            "failedJobsHistoryLimit": 3,
            "full": {
              "schedule": "0 3 * * 6"
            },
            "incremental": {
              "schedule": "0 3 * * 1-6"
            },
            "logRetention": "24h",
            "size": "5Gi",
            "strategy": "full_incremental",
            "successfulJobsHistoryLimit": 1
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackupRestore",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-restore"
          },
          "spec": {
            "backOffLimit": 2,
            "backup": "cb-backup",
            "end": {
              "int": 1
            },
            "logRetention": "24h",
            "repo": "cb-example-2020-10-29T19_00_03",
            "start": {
              "int": 1
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseAutoscaler",
          "metadata": {
            "name": "do.not.create.internal.only"
          },
          "spec": {
            "servers": "internal",
            "size": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:69c9d29a8a5ba4eac037051a256a458d5772fca8b813c764ddbe02f80d89b76f",
      "bundle_path_digest": "sha256:69c9d29a8a5ba4eac037051a256a458d5772fca8b813c764ddbe02f80d89b76f",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-20T14:35:45.045000+00:00",
      "csv_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments on OpenShift. By installing this integration you will be able to deply Couchbase Server clusters with a single command.\n\n## Supported Features\n\n* **Automated cluster provisioning** - Deploying a Couchbase Cluster has never been easier. Fill out a Couchbase specific configuration and let the Couchbase Operator take care of provisioning nodes and setting up cluster to your exact specification.\n\n* **On-demand scalability** - Automatically scale your cluster up or down by changing a simple configuration parameter and let the Couchbase Operator handle provisioning of new nodes and joining them into the cluster.\n\n* **Auto-recovery** - Detect Couchbase node failures, rebalance out bad nodes, and bring the cluster back up to the desired capacity. Auto-recovery is completely automated so you can sleep easy through the night knowing that the Couchbase Operator will handle any failures.\n\n* **Geo-distribution** - Replicate your data between datacenters to move data closer to the users who consume it and protect against disaster scenarios where an entire datacenter becomes unavailable.\n\n* **Persistent storage** - Define persistent network-attached storage for each node in your cluster to allow pods to be recovered even if the node they were running on is no longer available.\n\n* **Rack/zone awareness** - Tell the Couchbase Operator about availability zones in your datacenter and let the operator take care of ensuring that nodes in your cluster are deployed equally across each zone.\n\n* **Supportability** - When things go wrong, use the cbopinfo tool provided with the Couchbase Operator to collect relevant data about your Couchbase deployment so that you can quickly address issues.\n\n* **Centralized configuration management** - Manage your configuration centrally with OpenShift. Updates to the configuration are watched by the Couchbase Operator and actions are taken to make the target cluster match the desired configuration.\n## Required Parameters\n* `authSecret` - provide the name of a secret that contains two keys for the `username` and `password` of the super user ([documentation](https://docs.couchbase.com/operator/1.2/couchbase-cluster-config.html))\n\n## About Couchbase Server\n\nBuilt on the most powerful NoSQL technology, Couchbase Server delivers unparalleled performance at scale, in any cloud. With features like memory-first architecture, geo-distributed deployments, and workload isolation, Couchbase Server excels at supporting mission-critical applications at scale while maintaining submillisecond latencies and 99.999% availability. Plus, with the most comprehensive SQL-compatible query language (N1QL), migrating from RDBMS to Couchbase Server is easy with ANSI joins.\n",
      "csv_display_name": "Couchbase Operator",
      "csv_metadata_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments",
      "csv_name": "couchbase-operator.v2.2.0-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:48:09.097000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "plural": "couchbaseephemeralbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseAutoscaler",
          "plural": "couchbaseautoscalers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "plural": "couchbasebackuprestores",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "plural": "couchbasememcachedbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "plural": "couchbasereplications",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v2"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:59c872ac4b19b5086a47ce95675f11df2925aa0c5d3dc0afda8df4599a8b0649",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:59c872ac4b19b5086a47ce95675f11df2925aa0c5d3dc0afda8df4599a8b0649",
          "name": "operator-59c872ac4b19b5086a47ce95675f11df2925aa0c5d3dc0afda8df4599a8b0649-annotation"
        },
        {
          "digest": "sha256:59c872ac4b19b5086a47ce95675f11df2925aa0c5d3dc0afda8df4599a8b0649",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:59c872ac4b19b5086a47ce95675f11df2925aa0c5d3dc0afda8df4599a8b0649",
          "name": "couchbase-operator"
        },
        {
          "digest": "sha256:187046a848f32233e7e92705c57fa864b1d373c2078a92b51c9706bec6e372e5",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:187046a848f32233e7e92705c57fa864b1d373c2078a92b51c9706bec6e372e5",
          "name": "couchbase_server"
        },
        {
          "digest": "sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "name": "couchbase_backup"
        },
        {
          "digest": "sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "name": "couchbase_metrics"
        },
        {
          "digest": "sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "name": "exporter-b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784-annotation"
        },
        {
          "digest": "sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "name": "operator-backup-c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76-annotation"
        },
        {
          "digest": "sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
          "name": "server-c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.2.0-1",
      "version_original": "2.2.0-1"
    },
    {
      "_id": "611fbdd5bd674341b5c5f132",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1alpha1",
          "kind": "OpenshiftArtifactoryHa",
          "metadata": {
            "name": "openshiftartifactoryha"
          },
          "spec": {
            "artifactory-ha": {
              "artifactory": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/artifactory-pro",
                  "tag": "7.9.0"
                },
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE",
                "node": {
                  "replicaCount": 2,
                  "waitForPrimaryStartup": {
                    "enabled": false
                  }
                },
                "uid": "1000721030"
              },
              "database": {
                "driver": "OVERRIDE",
                "password": "OVERRIDE",
                "type": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "initContainerImage": "registry.connect.redhat.com/jfrog/init@sha256:197f5a1e7a3dd934e72a03a106f0de83e992e6926a774e26483c06fa46faeee5",
              "nginx": {
                "gid": "1000720107",
                "http": {
                  "externalPort": 80,
                  "internalPort": 8080
                },
                "https": {
                  "externalPort": 443,
                  "internalPort": 8443
                },
                "image": {
                  "registry": "registry.redhat.io",
                  "repository": "rhel8/nginx-116",
                  "tag": "latest"
                },
                "service": {
                  "ssloffload": false
                },
                "tlsSecretName": "OVERRIDE",
                "uid": "1000720104"
              },
              "postgresql": {
                "enabled": false
              },
              "waitForDatabase": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "quay.io/rhc4tp/artifactory-operator-bundle@sha256:95fd797214f4a3f2580d108287f225c1982af2741e4a96ffa787e29692073d20",
      "bundle_path_digest": "sha256:95fd797214f4a3f2580d108287f225c1982af2741e4a96ffa787e29692073d20",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-08-20T14:36:05.878000+00:00",
      "csv_description": "## Overview\nOpenshift Operator to deploy JFrog Artifactory Enterprise into your Openshift cluster.\n\n## Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Artifactory Enterprise Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Artifactory Enterprise Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Artifactory HA.\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\nDATABASE_TYPE\nDATABASE_DRIVER\nDATABASE_URL\nDATABASE_USER\nDATABASE_PASSWORD\n```\nMaster key and Join key must be supplied. To generate a new key for each run the command below:\n``` # Create a key export JOIN_KEY=$(openssl rand -hex 32) echo ${JOIN_KEY} ```\nTo use TLS you will need to first create a k8s tls secret to store your .crt and .key file into.\nThen supply the value of this k8s secret into the TLS_SECRET field.\nClick Create for Artifactory Enterprise to deploy into OpenShift and connect to it on the external IP exposed by the load balancer.\n",
      "csv_display_name": "JFrog Artifactory Enterprise Operator",
      "csv_metadata_description": "JFrog Artifactory Enterprise deploys Artifactory in a high availability environment across multiple pods",
      "csv_name": "artifactory-ha-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:46:02.937000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "plural": "openshiftartifactoryhas",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:376f2922911113a0e217614e1f0d26672d62258170b7ae1dcad0fdd596e035a6",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:376f2922911113a0e217614e1f0d26672d62258170b7ae1dcad0fdd596e035a6",
          "name": "artifactory-operator-376f2922911113a0e217614e1f0d26672d62258170b7ae1dcad0fdd596e035a6-annotation"
        },
        {
          "digest": "sha256:376f2922911113a0e217614e1f0d26672d62258170b7ae1dcad0fdd596e035a6",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:376f2922911113a0e217614e1f0d26672d62258170b7ae1dcad0fdd596e035a6",
          "name": "artifactory-ha-operator"
        },
        {
          "digest": "sha256:f0b061c4126f58b70ddaf39a3c5cc009be21b75ac4530ec5088a40d1e6f50e3e",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:f0b061c4126f58b70ddaf39a3c5cc009be21b75ac4530ec5088a40d1e6f50e3e",
          "name": "artifactory_image_repository"
        },
        {
          "digest": "sha256:0ba76a7b26e5ffb95b4354243337ac2b3ff84ae8637c0782631084d1b2f99a33",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:0ba76a7b26e5ffb95b4354243337ac2b3ff84ae8637c0782631084d1b2f99a33",
          "name": "nginx_image_repository"
        },
        {
          "digest": "sha256:197f5a1e7a3dd934e72a03a106f0de83e992e6926a774e26483c06fa46faeee5",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:197f5a1e7a3dd934e72a03a106f0de83e992e6926a774e26483c06fa46faeee5",
          "name": "init-197f5a1e7a3dd934e72a03a106f0de83e992e6926a774e26483c06fa46faeee5-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "611fbdf6bd674341b5c5f140",
      "alm_examples": [
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDeBundle",
          "metadata": {
            "name": "my-bundle",
            "namespace": "my-namespace"
          },
          "spec": {
            "details": {
              "name": "my-bundle"
            }
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDatabaseService",
          "metadata": {
            "name": "my-entando-database-service",
            "namespace": "my-namespace"
          },
          "spec": {
            "createDeployment": true,
            "databaseName": "my_database",
            "dbms": "postgresql"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoKeycloakServer",
          "metadata": {
            "name": "my-keycloak",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "replicas": 1,
            "standardImage": "redhat-sso"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoClusterInfrastructure",
          "metadata": {
            "name": "my-entando-cluster-infrastructure",
            "namespace": "my-namespace"
          },
          "spec": {
            "environmentVariables": [],
            "replicas": 1
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoPlugin",
          "metadata": {
            "name": "my-entando-plugin",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "healthCheckPath": "/management/health",
            "image": "entando/entando-avatar-plugin:6.0.5",
            "ingressHostName": "my-plugin.apps-crc.testing",
            "ingressPath": "/avatarPlugin",
            "replicas": 1,
            "roles": [
              {
                "code": "admin",
                "name": "user"
              },
              {
                "code": "user",
                "name": "user"
              }
            ],
            "securityLevel": "strict"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoApp",
          "metadata": {
            "name": "my-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "ingressHostName": "my-app.apps-crc.testing",
            "replicas": 1,
            "standardServerImage": "eap"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoAppPluginLink",
          "metadata": {
            "name": "my-link",
            "namespace": "my-namespace"
          },
          "spec": {
            "entandoAppName": "my-app",
            "entandoPluginName": "my-plugin"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoCompositeApp",
          "metadata": {
            "name": "my-entando-composite-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "components": [
              {
                "kind": "EntandoDatabaseService",
                "metadata": {
                  "name": "inline-entando-database-service"
                },
                "spec": {
                  "createDeployment": true
                }
              },
              {
                "kind": "EntandoKeycloakServer",
                "metadata": {
                  "name": "inline-keycloak"
                },
                "spec": {
                  "standardImage": "redhat-sso"
                }
              },
              {
                "kind": "EntandoClusterInfrastructure",
                "metadata": {
                  "name": "inline-entando-cluster-infrastructure"
                },
                "spec": {}
              },
              {
                "kind": "EntandoApp",
                "metadata": {
                  "name": "inline-app"
                },
                "spec": {
                  "standardServerImage": "eap"
                }
              },
              {
                "kind": "EntandoPlugin",
                "metadata": {
                  "name": "inline-plugin"
                },
                "spec": {
                  "healthCheckPath": "/management/health",
                  "image": "entando/entando-avatar-plugin:6.0.5",
                  "ingressPath": "/avatarPlugin",
                  "roles": [
                    {
                      "code": "admin",
                      "name": "admin"
                    },
                    {
                      "code": "user",
                      "name": "user"
                    }
                  ]
                }
              },
              {
                "kind": "EntandoAppPluginLink",
                "metadata": {
                  "name": "inline-link"
                },
                "spec": {
                  "entandoAppName": "inline-app",
                  "entandoPluginName": "inline-plugin"
                }
              }
            ],
            "dbmsOverride": "postgresql",
            "ingressHostNameOverride": "entando.apps-crc.testing"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/entando/entando-operator@sha256:66f8db604ac4d104cd88d786c4a9437dd1a22b3d7f8fd856c1251191f7d4856a",
      "bundle_path_digest": "sha256:66f8db604ac4d104cd88d786c4a9437dd1a22b3d7f8fd856c1251191f7d4856a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-08-20T14:36:38.242000+00:00",
      "csv_description": "## Entando\n\nThe Entando platform accelerates the development and lifecycle  management of fully modularized applications on Kubernetes. It  provides tools to help developers create and manage applications  using modular frontend and backend components.\nThe Entando Operator automates the installation, provisioning, and  configuration management of the components that make up an Entando  application. Specifically, the operator manages the following custom  resources:\n**EntandoKeycloakServers** for centralized authentication of frontend  and backend components. The operator can deploy Keycloak, or in certified  environments, Red Hat SSO servers that can then be used by subsequent  deployments as an OpenID Connect provider.\n**EntandoApps** for hosting an Entando application. EntandoApps are hosted on Wildfly or JBoss EAP containers, and can also be used to deploy custom  EntandoApp containers.\n**EntandoPlugins** for deploying microservices to customize or enhance your EntandoApp. Entando microservice plugins are deployed to your cluster, and  then linked to one or more EntandoApps.\n## Using the Operator\nThe Entando Operator can be deployed using the default settings without any  configuration. Once deployed, the operator can be customized by editing  the *configmap* and secrets.\n### ConfigMap: entando-operator-config\nThe 'entando-operator-config' ConfigMap can be added after deployment and any changes to it will be picked up by the operator on subsequent event processing. It supports the following keys:\n\n    entando.k8s.operator.gc.controller.pods: set this to \"false\" to keep controller pods after completion.\n    entando.k8s.operator.compliance.mode: set this to \"community\" if there is no requirement for Red Hat compliance.\n    entando.k8s.operator.image.pull.secrets: a comma separated list containing the names of pull secrets that will be linked to all service accounts.\n    entando.k8s.operator.disable.pvc.garbage.collection: set this to \"false\" if you want Persistent Volume Claims to be deleted with the custom resources they are associated with.\n    entando.k8s.operator.impose.default.limits: set this to \"false\" if there is no need to limit the resource consumption of pods on your cluster.\n    entando.k8s.operator.request.to.limit.ratio: a decimal number that default limits will be multiplied by to calculate default requests for resources.\n    entando.k8s.operator.force.db.password.reset: set this to \"true\" if you plan to delete Secrets from your namespace but you want to retain the Database they point to.\n    entando.k8s.operator.pull.policy.override: specify your preferred pullPolicy for images. The default is Always.\n    entando.tls.secret.name: The name of a standard TLS secret to use for HTTPS Ingresses. See the section entando-tls-secret.\n    entando.ca.secret.name: The name of a secret containing CA certificates. See the section entando-ca-cert-secret.\n    entando.assume.external.https.provider: Set this to \"true\" if your cloud provider handles HTTPS for you.\n    entando.use.auto.cert.generation: Set this to \"true\" to have Openshift use its internal CA to generate certificates for your Routes.\n    entando.default.routing.suffix: The domain name that can be suffixed to deployment names when the ingressHostName is omitted. Needs to be preconfigured on your DNS provider.\n    entando.pod.completion.timeout.seconds: The time it will take before Entando fails a run-to-completion Pod.\n    entando.pod.readiness.timeout.seconds: The time it will take before Entando fails a Service Pod.\n    entando.pod.shutdown.timeout.seconds: The time Entando will give a Pod to shutdown gracefully.\n\n\n### entando-pull-secret\nThe secret to be used to pull Entando images from the Red Hat container registry. The name of this secret is hard coded as it is required for the ClusterServiceVersion of this Operator\n### entando-tls-secret\nA standard Kubernetes TLS secret that will be used on all deployments where no custom TLS secret name is specified.\n### entando-ca-cert-secret\nThis is an opaque secret in the Entando Operator's namespace that contains the certificates of all trusted certificate authorities in your environment. This is generally used mainly for self signed certificates. As is generally the case for opaque secrets, there are no constraints on the keys in this secret. However, limit the files inside the secret to X509 certificates or certificate chains. The Entando Operator will load all of these files into a Java keystore that it then configures as the trust store for each container that uses Java.\n",
      "csv_display_name": "Entando Operator",
      "csv_metadata_description": "Processes EntandoKeycloakServer, EntandoApp and EntandoPlugin custom resources and deploys the relevant containers in the Kubernetes cluster.",
      "csv_name": "entando-k8s-operator.v6.3.2-pr4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T00:49:40.527000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "entando-k8s-operator",
      "provided_apis": [
        {
          "group": "entando.org",
          "kind": "EntandoCompositeApp",
          "plural": "entandocompositeapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDatabaseService",
          "plural": "entandodatabaseservices",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDeBundle",
          "plural": "entandodebundles",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoKeycloakServer",
          "plural": "entandokeycloakservers",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoPlugin",
          "plural": "entandoplugins",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoAppPluginLink",
          "plural": "entandoapppluginlinks",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoApp",
          "plural": "entandoapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoClusterInfrastructure",
          "plural": "entandoclusterinfrastructures",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "image": "entando/entando-k8s-controller-coordinator@sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "name": "entando-k8s-controller-coordinator-c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839-annotation"
        },
        {
          "digest": "sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "image": "entando/entando-k8s-controller-coordinator@sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "name": "entando-operator"
        },
        {
          "digest": "sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "image": "registry.redhat.io/rhel8/mysql-80@sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "name": "rhel8_mysql_80"
        },
        {
          "digest": "sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "image": "registry.redhat.io/rhel8/postgresql-12@sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "name": "rhel8_postgresql_12"
        },
        {
          "digest": "sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "image": "docker.io/entando/app-builder@sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "name": "app_builder"
        },
        {
          "digest": "sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "image": "docker.io/entando/entando-component-manager@sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "name": "entando_component_manager"
        },
        {
          "digest": "sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "image": "docker.io/entando/entando-de-app-eap@sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "name": "entando_de_app_eap"
        },
        {
          "digest": "sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "image": "docker.io/entando/entando-k8s-app-controller@sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "name": "entando_k8s_app_controller"
        },
        {
          "digest": "sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "image": "docker.io/entando/entando-k8s-app-plugin-link-controller@sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "name": "entando_k8s_app_plugin_link_controller"
        },
        {
          "digest": "sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "image": "docker.io/entando/entando-k8s-cluster-infrastructure-controller@sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "name": "entando_k8s_cluster_infrastructure_controller"
        },
        {
          "digest": "sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "image": "docker.io/entando/entando-k8s-composite-app-controller@sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "name": "entando_k8s_composite_app_controller"
        },
        {
          "digest": "sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "image": "docker.io/entando/entando-k8s-database-service-controller@sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "name": "entando_k8s_database_service_controller"
        },
        {
          "digest": "sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "image": "docker.io/entando/entando-k8s-dbjob@sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "name": "entando_k8s_dbjob"
        },
        {
          "digest": "sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "image": "docker.io/entando/entando-k8s-keycloak-controller@sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "name": "entando_k8s_keycloak_controller"
        },
        {
          "digest": "sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "image": "docker.io/entando/entando-k8s-plugin-controller@sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "name": "entando_k8s_plugin_controller"
        },
        {
          "digest": "sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "image": "docker.io/entando/entando-k8s-service@sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "name": "entando_k8s_service"
        },
        {
          "digest": "sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "image": "docker.io/entando/entando-redhat-sso@sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "name": "entando_redhat_sso"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.3.2-pr4",
      "version_original": "6.3.2-pr4"
    },
    {
      "_id": "611fbe2adece23122b7a78cb",
      "alm_examples": [
        {
          "api_version": "csi.nec.com/v1",
          "kind": "SANStorageCSI",
          "metadata": {
            "name": "sanstoragecsi"
          },
          "spec": {
            "driverName": "san.csi.nec.com",
            "images": {
              "csiDriver": "",
              "externalAttacher": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083",
              "externalProvisioner": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715",
              "livenessProbe": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe",
              "nodeRegistrar": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0"
            },
            "parameters": {
              "controller": {
                "logLevel": 5
              },
              "node": {
                "livenessProbePort": 9808,
                "logLevel": 5,
                "maxVolumesPerNode": 1024
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nec/sanstoragecsi-operator-bundle@sha256:a547f2b1018aebda3dadf2599d082dd7cfebc3e255571634d97b3b3f6161436e",
      "bundle_path_digest": "sha256:a547f2b1018aebda3dadf2599d082dd7cfebc3e255571634d97b3b3f6161436e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-20T14:37:30.777000+00:00",
      "csv_description": "This operator deploys the NEC Storage M Series CSI Driver on OpenShift Container Platform.\n\nNEC Storage M Series CSI Driver provides persistent storage for stateful applications using NEC Storage M Series.\nPlease refer to the documentation of the NEC Storage M Series CSI Driver for detail information about supported NEC Storage Platforms and supported CSI features.\n",
      "csv_display_name": "NEC Storage M Series CSI Operator",
      "csv_metadata_description": "An operator for managing the NEC Storage M Series CSI Driver",
      "csv_name": "sanstoragecsi-operator-bundle.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:00:10.291000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "sanstoragecsi-operator-bundle",
      "provided_apis": [
        {
          "group": "csi.nec.com",
          "kind": "SANStorageCSI",
          "plural": "sanstoragecsis",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:1e385777c7ce4bfd48902fbbb8023a6eba3f5dff4dc08e200450bc6f0bcb595c",
          "image": "registry.connect.redhat.com/nec/sanstoragecsi-operator@sha256:1e385777c7ce4bfd48902fbbb8023a6eba3f5dff4dc08e200450bc6f0bcb595c",
          "name": "sanstoragecsi-operator-bundle"
        },
        {
          "digest": "sha256:dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0",
          "image": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0",
          "name": "ose-csi-node-driver-registrar-dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0-annotation"
        },
        {
          "digest": "sha256:241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe",
          "image": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe",
          "name": "ose-csi-livenessprobe-241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe-annotation"
        },
        {
          "digest": "sha256:faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715",
          "image": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715",
          "name": "ose-csi-external-provisioner-faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715-annotation"
        },
        {
          "digest": "sha256:92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083",
          "image": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083",
          "name": "ose-csi-external-attacher-92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "611fbe5dbd674341b5c5f16e",
      "alm_examples": [
        {
          "api_version": "citrix.com/v1alpha1",
          "kind": "CitrixCpxWithIngressController",
          "metadata": {
            "name": "cpx-cic"
          },
          "spec": {
            "ADMSettings": {
              "ADMFingerPrint": "",
              "ADMIP": "",
              "bandWidth": "",
              "bandWidthLicense": false,
              "cpxCores": "",
              "licenseServerIP": "",
              "licenseServerPort": 27000,
              "loginSecret": "",
              "vCPULicense": false
            },
            "aws": false,
            "azure": false,
            "bgpSettings": {
              "bgpConfig": [
                {
                  "bgpRouter": {
                    "localAS": 100,
                    "neighbor": [
                      {
                        "ASOriginationInterval": 10,
                        "address": "",
                        "advertisementInterval": 10,
                        "remoteAS": 100
                      }
                    ]
                  }
                }
              ],
              "required": false
            },
            "cic": {
              "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
              "pullPolicy": "Always",
              "required": true
            },
            "coeConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 5563
              },
              "transactions": {
                "enable": false,
                "port": 5557
              }
            },
            "cpxBgpRouter": false,
            "crds": {
              "install": true,
              "retainOnDelete": false
            },
            "defaultSSLCertSecret": "",
            "entityPrefix": "",
            "exporter": {
              "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "Always",
              "required": false
            },
            "image": "registry.connect.redhat.com/citrix/cpx-13-0@sha256:54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d",
            "ingressClass": "",
            "ingressIP": "",
            "ipam": false,
            "kubernetesURL": "",
            "license": {
              "accept": false
            },
            "logLevel": "INFO",
            "logProxy": "",
            "mgmtHttpPort": 9080,
            "mgmtHttpsPort": 9443,
            "namespaceLabels": "",
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nsCookieVersion": "0",
            "nsGateway": "192.168.1.1",
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "192.168.1.2",
            "nsProtocol": "http",
            "openshift": true,
            "pullPolicy": "Always",
            "routeLabels": "",
            "serviceAccount": {
              "create": true
            },
            "serviceAnnotations": {
              "aws": {
                "backendProtocol": "",
                "negotiationPolicy": "",
                "proxyProtocol": false,
                "resourcesTags": "",
                "sslCert": "",
                "sslPorts": ""
              },
              "azure": {
                "internalLoadBalancer": false
              }
            },
            "serviceType": {
              "loadBalancer": {
                "enabled": false,
                "externalTrafficPolicy": "Local"
              },
              "nodePort": {
                "enabled": false,
                "httpPort": "",
                "httpsPort": ""
              }
            },
            "setAsDefaultIngressClass": false,
            "sslCertManagedByAWS": false,
            "tolerations": [],
            "updateIngressStatus": false
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-bundle@sha256:58f15e99628043753fefa5c8df190cc90e82a6bd3b00aed3c52f0fbf69d81039",
      "bundle_path_digest": "sha256:58f15e99628043753fefa5c8df190cc90e82a6bd3b00aed3c52f0fbf69d81039",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-08-20T14:38:21.727000+00:00",
      "csv_description": "Citrix ADC CPX is a container-based application delivery controller that can be provisioned on a Docker host. Citrix ADC CPX enables customers to leverage Docker engine capabilities and use NetScaler load balancing and traffic management features for container-based applications. Citrix Ingress Controller which will be running in side-car mode with Citrix ADC CPX will automatically configures Citrix ADC CPX based on the Ingress resource configuration. This operator can be used deploy Citrix ADC CPX with Citrix ingress controller in an OpenShift environment.",
      "csv_display_name": "Citrix ADC CPX with Ingress Controller",
      "csv_metadata_description": "Citrix ADC CPX is a container-based application delivery controller that can be provisioned on a Docker host. Citrix ADC CPX enables customers to leverage Docker engine capabilities and use NetScaler load balancing and traffic management features for container-based applications. Citrix Ingress Controller which will be running in side-car mode with Citrix ADC CPX will automatically configures Citrix ADC CPX based on the Ingress resource configuration. This operator can be used deploy Citrix ADC CPX with Citrix ingress controller in an Openshift environment.",
      "csv_name": "citrix-cpx-with-ingress-controller-operator.v1.13.20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:47:05.698000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "citrix-cpx-with-ingress-controller-operator",
      "provided_apis": [
        {
          "group": "citrix.com",
          "kind": "CitrixCpxWithIngressController",
          "plural": "citrixcpxwithingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4ca00f777a37e3070cfa2651685ba284623a78b55e2f81143ec8b58e967f163a",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-controller@sha256:4ca00f777a37e3070cfa2651685ba284623a78b55e2f81143ec8b58e967f163a",
          "name": "citrix-k8s-cpx-ingress-controller-4ca00f777a37e3070cfa2651685ba284623a78b55e2f81143ec8b58e967f163a-annotation"
        },
        {
          "digest": "sha256:10252238f921d720b8af7e2ca8e90be6e8516efefc1633697aa048a74041f1c3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:10252238f921d720b8af7e2ca8e90be6e8516efefc1633697aa048a74041f1c3",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:4ca00f777a37e3070cfa2651685ba284623a78b55e2f81143ec8b58e967f163a",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-controller@sha256:4ca00f777a37e3070cfa2651685ba284623a78b55e2f81143ec8b58e967f163a",
          "name": "manager"
        },
        {
          "digest": "sha256:54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d",
          "image": "registry.connect.redhat.com/citrix/cpx-13-0@sha256:54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d",
          "name": "cpx"
        },
        {
          "digest": "sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "name": "cic"
        },
        {
          "digest": "sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "name": "exporter"
        },
        {
          "digest": "sha256:54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d",
          "image": "registry.connect.redhat.com/citrix/cpx-13-0@sha256:54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d",
          "name": "cpx-13-0-54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d-annotation"
        },
        {
          "digest": "sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "name": "citrix-adc-metrics-exporter-c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe-annotation"
        },
        {
          "digest": "sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "name": "citrix-ingress-controller-f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.13.20",
      "version_original": "1.13.20"
    },
    {
      "_id": "611fbe6e9f14588c41ebe990",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "dcgmExporter": {
              "affinity": {},
              "image": "dcgm-exporter",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.dcgm-exporter": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:8af02463a8b60b21202d0bf69bc1ee0bb12f684fa367f903d138df6cacc2d0ac"
            },
            "devicePlugin": {
              "affinity": {},
              "args": [],
              "env": [
                {
                  "name": "PASS_DEVICE_SPECS",
                  "value": "true"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                },
                {
                  "name": "DEVICE_LIST_STRATEGY",
                  "value": "envvar"
                },
                {
                  "name": "DEVICE_ID_STRATEGY",
                  "value": "uuid"
                },
                {
                  "name": "NVIDIA_VISIBLE_DEVICES",
                  "value": "all"
                },
                {
                  "name": "NVIDIA_DRIVER_CAPABILITIES",
                  "value": "all"
                }
              ],
              "image": "k8s-device-plugin",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.device-plugin": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05"
            },
            "driver": {
              "affinity": {},
              "enabled": true,
              "image": "driver",
              "imagePullSecrets": [],
              "licensingConfig": {
                "configMapName": ""
              },
              "nodeSelector": {
                "nvidia.com/gpu.deploy.driver": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repoConfig": {
                "configMapName": "",
                "destinationDir": ""
              },
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:09ba3eca64a80fab010a9fcd647a2675260272a8c3eb515dfed6dc38a2d31ead"
            },
            "gfd": {
              "affinity": {},
              "env": [
                {
                  "name": "GFD_SLEEP_INTERVAL",
                  "value": "60s"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                }
              ],
              "image": "gpu-feature-discovery",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.gpu-feature-discovery": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f"
            },
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "affinity": {},
              "enabled": true,
              "env": [
                {
                  "name": "WITH_REBOOT",
                  "value": "false"
                }
              ],
              "image": "k8s-mig-manager",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.mig-manager": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:495ed3b42e0541590c537ab1b33bda772aad530d3ef6a4f9384d3741a59e2bf8"
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {
                "image": "cuda",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia",
                "version": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce"
              }
            },
            "toolkit": {
              "affinity": {},
              "enabled": true,
              "image": "container-toolkit",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.container-toolkit": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:ffa284f1f359d70f0e1d6d8e7752d7c92ef7445b0d74965a8682775de37febf8"
            },
            "validator": {
              "affinity": {},
              "env": [
                {
                  "name": "WITH_WORKLOAD",
                  "value": "true"
                }
              ],
              "image": "gpu-operator-validator",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.operator-validator": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:aa1f7bd526ae132c46f3ebe6ecfabe675889e240776ccc2155e31e0c48cc659e"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:380392c15740edd8853ea65b1e19f3b9bd3afea04612f204c244bf5a23b328ce",
      "bundle_path_digest": "sha256:380392c15740edd8853ea65b1e19f3b9bd3afea04612f204c244bf5a23b328ce",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.7",
      "creation_date": "2021-08-20T14:38:38.562000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/kubernetes/openshift-on-gpu-install-guide/index.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.7.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T00:50:38.647000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3a812cf113f416baca9262fa8423f36141f35696eb6e7a51a7abb40f5ccd5f8c",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:3a812cf113f416baca9262fa8423f36141f35696eb6e7a51a7abb40f5ccd5f8c",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:8af02463a8b60b21202d0bf69bc1ee0bb12f684fa367f903d138df6cacc2d0ac",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:8af02463a8b60b21202d0bf69bc1ee0bb12f684fa367f903d138df6cacc2d0ac",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:ffa284f1f359d70f0e1d6d8e7752d7c92ef7445b0d74965a8682775de37febf8",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:ffa284f1f359d70f0e1d6d8e7752d7c92ef7445b0d74965a8682775de37febf8",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:09ba3eca64a80fab010a9fcd647a2675260272a8c3eb515dfed6dc38a2d31ead",
          "image": "nvcr.io/nvidia/driver@sha256:09ba3eca64a80fab010a9fcd647a2675260272a8c3eb515dfed6dc38a2d31ead",
          "name": "driver-image"
        },
        {
          "digest": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:495ed3b42e0541590c537ab1b33bda772aad530d3ef6a4f9384d3741a59e2bf8",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:495ed3b42e0541590c537ab1b33bda772aad530d3ef6a4f9384d3741a59e2bf8",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "image": "nvcr.io/nvidia/cuda@sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:aa1f7bd526ae132c46f3ebe6ecfabe675889e240776ccc2155e31e0c48cc659e",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:aa1f7bd526ae132c46f3ebe6ecfabe675889e240776ccc2155e31e0c48cc659e",
          "name": "gpu-operator-validator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.7.1",
      "version_original": "1.7.1"
    },
    {
      "_id": "611fbe929f14588c41ebe999",
      "alm_examples": [
        {
          "api_version": "anzograph.clusters.cambridgesemantics.com/v2",
          "kind": "AnzoGraph",
          "metadata": {
            "name": "azg01"
          },
          "spec": {
            "db": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app_data": "anzograph-data-grpc",
                      "app_mgmt": "anzograph-mgmt-grpc"
                    }
                  },
                  "serviceName": "anzograph-azg01",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app_data": "anzograph-data-grpc",
                        "app_mgmt": "anzograph-mgmt-grpc"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5",
                          "name": "db",
                          "resources": {
                            "limits": {
                              "cpu": "8000m",
                              "memory": "8Gi"
                            },
                            "requests": {
                              "cpu": "8000m",
                              "memory": "8Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "anzograph-operator"
                    }
                  }
                }
              }
            },
            "deployFrontend": false,
            "frontend": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app_mgmt": "anzograph-frontend"
                    }
                  },
                  "serviceName": "anzograph-azg01",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app_mgmt": "anzograph-frontend"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3",
                          "name": "frontend",
                          "resources": {
                            "limits": {
                              "cpu": "2000m",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2000m",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "anzograph-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator-bundle@sha256:9418a3505873ac387f2b5455ec7e696739a2bb6f03232f8c0f59489c605b96f2",
      "bundle_path_digest": "sha256:9418a3505873ac387f2b5455ec7e696739a2bb6f03232f8c0f59489c605b96f2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-20T14:39:14.376000+00:00",
      "csv_description": "The AnzoGraph Operator provides the way to install and configure an AnzoGraph\ncluster on Red Hat K8S environment.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzograph/blob/v2.0.1/README_openshift_marketplace.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzograph/userdoc/ )\n\n### Support\n\nWe offer Support to our customers with the AnzoGraph db Enterprise Edition License [here]( https://customercenter.cambridgesemantics.com/ ). For AnzoGraph db Free Edition questions, get help from our Anzograph User Community at Stack Overflow. When submitting a question, include the tag 'anzograph'.",
      "csv_display_name": "AnzoGraph Operator",
      "csv_metadata_description": "kubernetes operator for AnzoGraph DB",
      "csv_name": "anzograph-operator.v2.0.102",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:45:38.864000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "anzograph-operator",
      "provided_apis": [
        {
          "group": "anzograph.clusters.cambridgesemantics.com",
          "kind": "AnzoGraph",
          "version": "v2"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:a5b212558f748ddc8156541b546290320b656506e039a18903ad9fa6e638e732",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:a5b212558f748ddc8156541b546290320b656506e039a18903ad9fa6e638e732",
          "name": "anzograph-operator-a5b212558f748ddc8156541b546290320b656506e039a18903ad9fa6e638e732-annotation"
        },
        {
          "digest": "sha256:a5b212558f748ddc8156541b546290320b656506e039a18903ad9fa6e638e732",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:a5b212558f748ddc8156541b546290320b656506e039a18903ad9fa6e638e732",
          "name": "manager"
        },
        {
          "digest": "sha256:e3bdddf811b5ba69f388d023aea1ba538edd00e9f415c33ec555321d39129a36",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph@sha256:e3bdddf811b5ba69f388d023aea1ba538edd00e9f415c33ec555321d39129a36",
          "name": "anzograph_allinone"
        },
        {
          "digest": "sha256:8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5",
          "name": "anzograph_db"
        },
        {
          "digest": "sha256:c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3",
          "name": "anzograph_frontend"
        },
        {
          "digest": "sha256:c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3",
          "name": "anzograph-frontend-c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3-annotation"
        },
        {
          "digest": "sha256:8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5",
          "name": "anzograph-db-8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.0.1",
      "version_original": "2.0.1"
    },
    {
      "_id": "611fbee0dece23122b7a790f",
      "alm_examples": [
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDeBundle",
          "metadata": {
            "name": "my-bundle",
            "namespace": "my-namespace"
          },
          "spec": {
            "details": {
              "name": "my-bundle"
            }
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDatabaseService",
          "metadata": {
            "name": "my-entando-database-service",
            "namespace": "my-namespace"
          },
          "spec": {
            "createDeployment": true,
            "databaseName": "my_database",
            "dbms": "postgresql"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoKeycloakServer",
          "metadata": {
            "name": "my-keycloak",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "replicas": 1,
            "standardImage": "redhat-sso"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoClusterInfrastructure",
          "metadata": {
            "name": "my-entando-cluster-infrastructure",
            "namespace": "my-namespace"
          },
          "spec": {
            "environmentVariables": [],
            "replicas": 1
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoPlugin",
          "metadata": {
            "name": "my-entando-plugin",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "healthCheckPath": "/management/health",
            "image": "entando/entando-avatar-plugin:6.0.5",
            "ingressHostName": "my-plugin.apps-crc.testing",
            "ingressPath": "/avatarPlugin",
            "replicas": 1,
            "roles": [
              {
                "code": "admin",
                "name": "user"
              },
              {
                "code": "user",
                "name": "user"
              }
            ],
            "securityLevel": "strict"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoApp",
          "metadata": {
            "name": "my-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "ingressHostName": "my-app.apps-crc.testing",
            "replicas": 1,
            "standardServerImage": "eap"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoAppPluginLink",
          "metadata": {
            "name": "my-link",
            "namespace": "my-namespace"
          },
          "spec": {
            "entandoAppName": "my-app",
            "entandoPluginName": "my-plugin"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoCompositeApp",
          "metadata": {
            "name": "my-entando-composite-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "components": [
              {
                "kind": "EntandoDatabaseService",
                "metadata": {
                  "name": "inline-entando-database-service"
                },
                "spec": {
                  "createDeployment": true
                }
              },
              {
                "kind": "EntandoKeycloakServer",
                "metadata": {
                  "name": "inline-keycloak"
                },
                "spec": {
                  "standardImage": "redhat-sso"
                }
              },
              {
                "kind": "EntandoClusterInfrastructure",
                "metadata": {
                  "name": "inline-entando-cluster-infrastructure"
                },
                "spec": {}
              },
              {
                "kind": "EntandoApp",
                "metadata": {
                  "name": "inline-app"
                },
                "spec": {
                  "standardServerImage": "eap"
                }
              },
              {
                "kind": "EntandoPlugin",
                "metadata": {
                  "name": "inline-plugin"
                },
                "spec": {
                  "healthCheckPath": "/management/health",
                  "image": "entando/entando-avatar-plugin:6.0.5",
                  "ingressPath": "/avatarPlugin",
                  "roles": [
                    {
                      "code": "admin",
                      "name": "admin"
                    },
                    {
                      "code": "user",
                      "name": "user"
                    }
                  ]
                }
              },
              {
                "kind": "EntandoAppPluginLink",
                "metadata": {
                  "name": "inline-link"
                },
                "spec": {
                  "entandoAppName": "inline-app",
                  "entandoPluginName": "inline-plugin"
                }
              }
            ],
            "dbmsOverride": "postgresql",
            "ingressHostNameOverride": "entando.apps-crc.testing"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/entando/entando-operator@sha256:110de9cf2e6ecc1d3f6bff990ec9eb890b26c6ade5c03a232421d30e6bbace57",
      "bundle_path_digest": "sha256:110de9cf2e6ecc1d3f6bff990ec9eb890b26c6ade5c03a232421d30e6bbace57",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-08-20T14:40:32.523000+00:00",
      "csv_description": "## Entando\n\nThe Entando platform accelerates the development and lifecycle  management of fully modularized applications on Kubernetes. It  provides tools to help developers create and manage applications  using modular frontend and backend components.\nThe Entando Operator automates the installation, provisioning, and  configuration management of the components that make up an Entando  application. Specifically, the operator manages the following custom  resources:\n**EntandoKeycloakServers** for centralized authentication of frontend  and backend components. The operator can deploy Keycloak, or in certified  environments, Red Hat SSO servers that can then be used by subsequent  deployments as an OpenID Connect provider.\n**EntandoApps** for hosting an Entando application. EntandoApps are hosted on Wildfly or JBoss EAP containers, and can also be used to deploy custom  EntandoApp containers.\n**EntandoPlugins** for deploying microservices to customize or enhance your EntandoApp. Entando microservice plugins are deployed to your cluster, and  then linked to one or more EntandoApps.\n## Using the Operator\nThe Entando Operator can be deployed using the default settings without any  configuration. Once deployed, the operator can be customized by editing  the *configmap* and secrets.\n### ConfigMap: entando-operator-config\nThe 'entando-operator-config' ConfigMap can be added after deployment and any changes to it will be picked up by the operator on subsequent event processing. It supports the following keys:\n\n    entando.k8s.operator.gc.controller.pods: set this to \"false\" to keep controller pods after completion.\n    entando.k8s.operator.compliance.mode: set this to \"community\" if there is no requirement for Red Hat compliance.\n    entando.k8s.operator.image.pull.secrets: a comma separated list containing the names of pull secrets that will be linked to all service accounts.\n    entando.k8s.operator.disable.pvc.garbage.collection: set this to \"false\" if you want Persistent Volume Claims to be deleted with the custom resources they are associated with.\n    entando.k8s.operator.impose.default.limits: set this to \"false\" if there is no need to limit the resource consumption of pods on your cluster.\n    entando.k8s.operator.request.to.limit.ratio: a decimal number that default limits will be multiplied by to calculate default requests for resources.\n    entando.k8s.operator.force.db.password.reset: set this to \"true\" if you plan to delete Secrets from your namespace but you want to retain the Database they point to.\n    entando.k8s.operator.pull.policy.override: specify your preferred pullPolicy for images. The default is Always.\n    entando.tls.secret.name: The name of a standard TLS secret to use for HTTPS Ingresses. See the section entando-tls-secret.\n    entando.ca.secret.name: The name of a secret containing CA certificates. See the section entando-ca-cert-secret.\n    entando.assume.external.https.provider: Set this to \"true\" if your cloud provider handles HTTPS for you.\n    entando.use.auto.cert.generation: Set this to \"true\" to have Openshift use its internal CA to generate certificates for your Routes.\n    entando.default.routing.suffix: The domain name that can be suffixed to deployment names when the ingressHostName is omitted. Needs to be preconfigured on your DNS provider.\n    entando.pod.completion.timeout.seconds: The time it will take before Entando fails a run-to-completion Pod.\n    entando.pod.readiness.timeout.seconds: The time it will take before Entando fails a Service Pod.\n    entando.pod.shutdown.timeout.seconds: The time Entando will give a Pod to shutdown gracefully.\n\n\n### entando-pull-secret\nThe secret to be used to pull Entando images from the Red Hat container registry. The name of this secret is hard coded as it is required for the ClusterServiceVersion of this Operator\n### entando-tls-secret\nA standard Kubernetes TLS secret that will be used on all deployments where no custom TLS secret name is specified.\n### entando-ca-cert-secret\nThis is an opaque secret in the Entando Operator's namespace that contains the certificates of all trusted certificate authorities in your environment. This is generally used mainly for self signed certificates. As is generally the case for opaque secrets, there are no constraints on the keys in this secret. However, limit the files inside the secret to X509 certificates or certificate chains. The Entando Operator will load all of these files into a Java keystore that it then configures as the trust store for each container that uses Java.\n",
      "csv_display_name": "Entando Operator",
      "csv_metadata_description": "Processes EntandoKeycloakServer, EntandoApp and EntandoPlugin custom resources and deploys the relevant containers in the Kubernetes cluster.",
      "csv_name": "entando-k8s-operator.v6.3.2-pr2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T00:49:36.738000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "entando-k8s-operator",
      "provided_apis": [
        {
          "group": "entando.org",
          "kind": "EntandoApp",
          "plural": "entandoapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoClusterInfrastructure",
          "plural": "entandoclusterinfrastructures",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoCompositeApp",
          "plural": "entandocompositeapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDatabaseService",
          "plural": "entandodatabaseservices",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDeBundle",
          "plural": "entandodebundles",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoKeycloakServer",
          "plural": "entandokeycloakservers",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoPlugin",
          "plural": "entandoplugins",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoAppPluginLink",
          "plural": "entandoapppluginlinks",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "image": "entando/entando-k8s-controller-coordinator@sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "name": "entando-k8s-controller-coordinator-c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839-annotation"
        },
        {
          "digest": "sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "image": "entando/entando-k8s-controller-coordinator@sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "name": "entando-operator"
        },
        {
          "digest": "sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "image": "registry.redhat.io/rhel8/mysql-80@sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "name": "rhel8_mysql_80"
        },
        {
          "digest": "sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "image": "registry.redhat.io/rhel8/postgresql-12@sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "name": "rhel8_postgresql_12"
        },
        {
          "digest": "sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "image": "docker.io/entando/app-builder@sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "name": "app_builder"
        },
        {
          "digest": "sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "image": "docker.io/entando/entando-component-manager@sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "name": "entando_component_manager"
        },
        {
          "digest": "sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "image": "docker.io/entando/entando-de-app-eap@sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "name": "entando_de_app_eap"
        },
        {
          "digest": "sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "image": "docker.io/entando/entando-k8s-app-controller@sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "name": "entando_k8s_app_controller"
        },
        {
          "digest": "sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "image": "docker.io/entando/entando-k8s-app-plugin-link-controller@sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "name": "entando_k8s_app_plugin_link_controller"
        },
        {
          "digest": "sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "image": "docker.io/entando/entando-k8s-cluster-infrastructure-controller@sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "name": "entando_k8s_cluster_infrastructure_controller"
        },
        {
          "digest": "sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "image": "docker.io/entando/entando-k8s-composite-app-controller@sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "name": "entando_k8s_composite_app_controller"
        },
        {
          "digest": "sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "image": "docker.io/entando/entando-k8s-database-service-controller@sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "name": "entando_k8s_database_service_controller"
        },
        {
          "digest": "sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "image": "docker.io/entando/entando-k8s-dbjob@sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "name": "entando_k8s_dbjob"
        },
        {
          "digest": "sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "image": "docker.io/entando/entando-k8s-keycloak-controller@sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "name": "entando_k8s_keycloak_controller"
        },
        {
          "digest": "sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "image": "docker.io/entando/entando-k8s-plugin-controller@sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "name": "entando_k8s_plugin_controller"
        },
        {
          "digest": "sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "image": "docker.io/entando/entando-k8s-service@sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "name": "entando_k8s_service"
        },
        {
          "digest": "sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "image": "docker.io/entando/entando-redhat-sso@sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "name": "entando_redhat_sso"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.3.2-pr2",
      "version_original": "6.3.2-pr2"
    },
    {
      "_id": "612318869f14588c41ebe9ec",
      "alm_examples": [
        {
          "api_version": "ako.vmware.com/v1alpha1",
          "kind": "AKOConfig",
          "metadata": {
            "name": "ako-sample",
            "namespace": "avi-system"
          },
          "spec": {
            "akoSettings": {
              "apiServerPort": 8080,
              "clusterName": "my-cluster",
              "cniPlugin": "",
              "deleteConfig": false,
              "disableStaticRouteSync": false,
              "enableEVH": false,
              "fullSyncFrequency": "1800",
              "layer7Only": false,
              "logLevel": "INFO",
              "servicesAPI": false
            },
            "controllerSettings": {
              "cloudName": "Default-Cloud",
              "controllerIP": "",
              "controllerVersion": "20.1.5",
              "serviceEngineGroupName": "Default-Group"
            },
            "imagePullPolicy": "IfNotPresent",
            "imageRepository": "projects.registry.vmware.com/ako/amko",
            "l4Settings": {
              "advancedL4": false,
              "autoFQDN": "default",
              "defaultDomain": ""
            },
            "l7Settings": {
              "defaultIngController": true,
              "noPGForSNI": false,
              "passthroughShardSize": "SMALL",
              "serviceType": "ClusterIP",
              "shardVSSize": "LARGE"
            },
            "logFile": "avi.log",
            "mountPath": "/log",
            "networkSettings": {
              "subnetIP": "",
              "subnetPrefix": "",
              "vipNetworkList": [
                {
                  "networkName": ""
                }
              ]
            },
            "nodePortSelector": {
              "key": "",
              "value": ""
            },
            "resources": {
              "limits": {
                "cpu": "250m",
                "memory": "300Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "200Mi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/wavefronthq/ako-operator-bundle@sha256:6a41ad6e74de7e5c94af7781a001c4501fae4b7b5505dcbfd75b04053af1e1ce",
      "bundle_path_digest": "sha256:6a41ad6e74de7e5c94af7781a001c4501fae4b7b5505dcbfd75b04053af1e1ce",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-08-23T03:39:50.214000+00:00",
      "csv_description": "Operator to manage the artifacts of the AKO Controller",
      "csv_display_name": "AKO Operator",
      "csv_metadata_description": "",
      "csv_name": "ako-operator.v1.4.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:49:27.339000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "ako-operator",
      "provided_apis": [
        {
          "group": "ako.vmware.com",
          "kind": "AKOConfig",
          "plural": "akoconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "ako.vmware.com",
          "kind": "AviInfraSetting",
          "plural": "aviinfrasettings",
          "version": "v1alpha1"
        },
        {
          "group": "ako.vmware.com",
          "kind": "HostRule",
          "plural": "hostrules",
          "version": "v1alpha1"
        },
        {
          "group": "ako.vmware.com",
          "kind": "HTTPRule",
          "plural": "httprules",
          "version": "v1alpha1"
        },
        {
          "group": "networking.x-k8s.io",
          "kind": "GatewayClass",
          "plural": "gatewayclasses",
          "version": "v1alpha1"
        },
        {
          "group": "networking.x-k8s.io",
          "kind": "Gateway",
          "plural": "gateways",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3840a444c7a9e8f799e251779dca616fddc412712084da2620178b705117c493",
          "image": "projects.registry.vmware.com/ako/ako-operator@sha256:3840a444c7a9e8f799e251779dca616fddc412712084da2620178b705117c493",
          "name": "ako-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.4.2",
      "version_original": "1.4.2"
    },
    {
      "_id": "6125de5fbd674341b5c5f476",
      "alm_examples": [
        {
          "api_version": "charts.operatorhub.io/v1",
          "kind": "CcmNodeAgent",
          "metadata": {
            "name": "ccmnodeagent-sample"
          },
          "spec": {
            "ccmJoinToken": {
              "secretName": "ccm-join-token",
              "token": ""
            },
            "fullnameOverride": "",
            "image": {
              "ccmNodeAgent": {
                "pullPolicy": "Always",
                "repository": "fortanix/ccm-node-agent-ubi7",
                "tag": "3.5.475"
              },
              "ccmNodeAgentInit": {
                "pullPolicy": "IfNotPresent",
                "repository": "busybox",
                "tag": "latest"
              },
              "sgxSoftwareInstaller": {
                "pullPolicy": "Always",
                "repository": "fortanix/sgx-software-installer-ubi7",
                "tag": "3.5.475"
              }
            },
            "log": {
              "debug": false
            },
            "nameOverride": "",
            "podAnnotations": {},
            "ports": {
              "containerPort": 9092,
              "hostPort": 9092
            },
            "replicaCount": 1,
            "resources": {
              "limits": {
                "cpu": "100m",
                "memory": "128Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "128Mi"
              }
            },
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/fortanix/ccm-node-agent-operator-bundle@sha256:8c697c066566c5bf5c0d4c776ec0f7950a6bba26565d20c58a0bca26dd15f3e6",
      "bundle_path_digest": "sha256:8c697c066566c5bf5c0d4c776ec0f7950a6bba26565d20c58a0bca26dd15f3e6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-08-25T06:08:31.549000+00:00",
      "csv_description": "CCM Node Agent software enables registration of the compute nodes to Fortanix CCM when installed in the Openshift Cluster Nodes\u200b. \nIt also assists with application attestation and visibility for Fortanix CCM.\n\n## About this Operator\nThis Operator is based on a Helm chart for CCM Node Agent. It enrolls all the nodes in the openshift cluster to a particular CCM account. You have to provide the base64 encode of join token of CCM account while creating CcmNodeAgent resource.\n\n## Prerequisites\nAll the worker nodes in the cluster must have SGX capabilities.\n\n## Installation\n* Choose a namespace to install the Operator. Operator will be available in all namespaces.\n* Select Approval Strategy: Available options are Automatic or Manual. Automatic approval will automatically upgrade the running instance of your Operator without human intervention when a new version is available. In case of Manual approval, when a new version is available, OLM will create an update request. You must manually approve the request to update the Operator to a new version.\n* Generate your CCM Account Join Token: Please log in to https://ccm.fortanix.com, and in the Management Console tab, click the + ENROLL NODE button. In the ENROLL NODE screen, a Join Token will be generated in the text box for \"Get a join token to register an SGX compute node\". This Join Token is used by the compute node to authenticate itself.\n* Base64 encode the Join Token:\n```shell\necho -n <join-token> | openssl base64 -A\n```\n* Create an instance of CcmNodeAgent by setting the `spec.ccmJoinToken.Token` to the base64 encoded CCM account join token.\n* After CcmNodeAgent resource is installed successfully you should be able to see all the worker nodes of the cluster in your CCM account under Compute Node Tab.\n\n## Getting Started\nNow to run your application inside SGX enclaves on your cluster follow the [documentation](https://support.fortanix.com/hc/en-us/articles/360043527431-User-s-Guide-Add-and-Edit-an-Application).\n",
      "csv_display_name": "CCM Node Agent Operator",
      "csv_metadata_description": "CCM Node Agent software enables registration of the compute nodes to Fortanix CCM when installed in the Openshift Cluster Nodes",
      "csv_name": "ccm-node-agent-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:03:03.921000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "ccm-node-agent-operator",
      "provided_apis": [
        {
          "group": "charts.operatorhub.io",
          "kind": "CcmNodeAgent",
          "plural": "ccmnodeagents",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4",
          "image": "fortanix/ccm-node-agent-operator@sha256:73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4",
          "name": "ccm-node-agent-operator-73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4-annotation"
        },
        {
          "digest": "sha256:e30f7835cf52dbce9afdbaf55e5a93d8baf9c4b3a3ae488d1d42c1adba7f46af",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:e30f7835cf52dbce9afdbaf55e5a93d8baf9c4b3a3ae488d1d42c1adba7f46af",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4",
          "image": "fortanix/ccm-node-agent-operator@sha256:73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "6125dedceb34b736524930f0",
      "alm_examples": [
        {
          "api_version": "charts.operatorhub.io/v1",
          "kind": "CcmNodeAgent",
          "metadata": {
            "name": "ccmnodeagent-sample"
          },
          "spec": {
            "ccmJoinToken": {
              "secretName": "ccm-join-token",
              "token": ""
            },
            "fullnameOverride": "",
            "image": {
              "ccmNodeAgent": {
                "pullPolicy": "Always",
                "repository": "fortanix/ccm-node-agent-ubi7",
                "tag": "3.5.475"
              },
              "ccmNodeAgentInit": {
                "pullPolicy": "IfNotPresent",
                "repository": "busybox",
                "tag": "latest"
              },
              "sgxSoftwareInstaller": {
                "pullPolicy": "Always",
                "repository": "fortanix/sgx-software-installer-ubi7",
                "tag": "3.5.475"
              }
            },
            "log": {
              "debug": false
            },
            "nameOverride": "",
            "podAnnotations": {},
            "ports": {
              "containerPort": 9092,
              "hostPort": 9092
            },
            "replicaCount": 1,
            "resources": {
              "limits": {
                "cpu": "100m",
                "memory": "128Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "128Mi"
              }
            },
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/fortanix/ccm-node-agent-operator-bundle@sha256:8c697c066566c5bf5c0d4c776ec0f7950a6bba26565d20c58a0bca26dd15f3e6",
      "bundle_path_digest": "sha256:8c697c066566c5bf5c0d4c776ec0f7950a6bba26565d20c58a0bca26dd15f3e6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-08-25T06:10:36.462000+00:00",
      "csv_description": "CCM Node Agent software enables registration of the compute nodes to Fortanix CCM when installed in the Openshift Cluster Nodes\u200b. \nIt also assists with application attestation and visibility for Fortanix CCM.\n\n## About this Operator\nThis Operator is based on a Helm chart for CCM Node Agent. It enrolls all the nodes in the openshift cluster to a particular CCM account. You have to provide the base64 encode of join token of CCM account while creating CcmNodeAgent resource.\n\n## Prerequisites\nAll the worker nodes in the cluster must have SGX capabilities.\n\n## Installation\n* Choose a namespace to install the Operator. Operator will be available in all namespaces.\n* Select Approval Strategy: Available options are Automatic or Manual. Automatic approval will automatically upgrade the running instance of your Operator without human intervention when a new version is available. In case of Manual approval, when a new version is available, OLM will create an update request. You must manually approve the request to update the Operator to a new version.\n* Generate your CCM Account Join Token: Please log in to https://ccm.fortanix.com, and in the Management Console tab, click the + ENROLL NODE button. In the ENROLL NODE screen, a Join Token will be generated in the text box for \"Get a join token to register an SGX compute node\". This Join Token is used by the compute node to authenticate itself.\n* Base64 encode the Join Token:\n```shell\necho -n <join-token> | openssl base64 -A\n```\n* Create an instance of CcmNodeAgent by setting the `spec.ccmJoinToken.Token` to the base64 encoded CCM account join token.\n* After CcmNodeAgent resource is installed successfully you should be able to see all the worker nodes of the cluster in your CCM account under Compute Node Tab.\n\n## Getting Started\nNow to run your application inside SGX enclaves on your cluster follow the [documentation](https://support.fortanix.com/hc/en-us/articles/360043527431-User-s-Guide-Add-and-Edit-an-Application).\n",
      "csv_display_name": "CCM Node Agent Operator",
      "csv_metadata_description": "CCM Node Agent software enables registration of the compute nodes to Fortanix CCM when installed in the Openshift Cluster Nodes",
      "csv_name": "ccm-node-agent-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:15:17.511000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "ccm-node-agent-operator",
      "provided_apis": [
        {
          "group": "charts.operatorhub.io",
          "kind": "CcmNodeAgent",
          "plural": "ccmnodeagents",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4",
          "image": "fortanix/ccm-node-agent-operator@sha256:73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4",
          "name": "ccm-node-agent-operator-73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4-annotation"
        },
        {
          "digest": "sha256:e30f7835cf52dbce9afdbaf55e5a93d8baf9c4b3a3ae488d1d42c1adba7f46af",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:e30f7835cf52dbce9afdbaf55e5a93d8baf9c4b3a3ae488d1d42c1adba7f46af",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4",
          "image": "fortanix/ccm-node-agent-operator@sha256:73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "612608dedece23122b7a7e84",
      "alm_examples": [
        {
          "api_version": "charts.operatorhub.io/v1",
          "kind": "CcmNodeAgent",
          "metadata": {
            "name": "ccmnodeagent-sample"
          },
          "spec": {
            "ccmJoinToken": {
              "secretName": "ccm-join-token",
              "token": ""
            },
            "fullnameOverride": "",
            "image": {
              "ccmNodeAgent": {
                "pullPolicy": "Always",
                "repository": "fortanix/ccm-node-agent-ubi7",
                "tag": "3.5.475"
              },
              "ccmNodeAgentInit": {
                "pullPolicy": "IfNotPresent",
                "repository": "busybox",
                "tag": "latest"
              },
              "sgxSoftwareInstaller": {
                "pullPolicy": "Always",
                "repository": "fortanix/sgx-software-installer-ubi7",
                "tag": "3.5.475"
              }
            },
            "log": {
              "debug": false
            },
            "nameOverride": "",
            "podAnnotations": {},
            "ports": {
              "containerPort": 9092,
              "hostPort": 9092
            },
            "replicaCount": 1,
            "resources": {
              "limits": {
                "cpu": "100m",
                "memory": "128Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "128Mi"
              }
            },
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/fortanix/ccm-node-agent-operator-bundle@sha256:8c697c066566c5bf5c0d4c776ec0f7950a6bba26565d20c58a0bca26dd15f3e6",
      "bundle_path_digest": "sha256:8c697c066566c5bf5c0d4c776ec0f7950a6bba26565d20c58a0bca26dd15f3e6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-08-25T09:09:50.757000+00:00",
      "csv_description": "CCM Node Agent software enables registration of the compute nodes to Fortanix CCM when installed in the Openshift Cluster Nodes\u200b. \nIt also assists with application attestation and visibility for Fortanix CCM.\n\n## About this Operator\nThis Operator is based on a Helm chart for CCM Node Agent. It enrolls all the nodes in the openshift cluster to a particular CCM account. You have to provide the base64 encode of join token of CCM account while creating CcmNodeAgent resource.\n\n## Prerequisites\nAll the worker nodes in the cluster must have SGX capabilities.\n\n## Installation\n* Choose a namespace to install the Operator. Operator will be available in all namespaces.\n* Select Approval Strategy: Available options are Automatic or Manual. Automatic approval will automatically upgrade the running instance of your Operator without human intervention when a new version is available. In case of Manual approval, when a new version is available, OLM will create an update request. You must manually approve the request to update the Operator to a new version.\n* Generate your CCM Account Join Token: Please log in to https://ccm.fortanix.com, and in the Management Console tab, click the + ENROLL NODE button. In the ENROLL NODE screen, a Join Token will be generated in the text box for \"Get a join token to register an SGX compute node\". This Join Token is used by the compute node to authenticate itself.\n* Base64 encode the Join Token:\n```shell\necho -n <join-token> | openssl base64 -A\n```\n* Create an instance of CcmNodeAgent by setting the `spec.ccmJoinToken.Token` to the base64 encoded CCM account join token.\n* After CcmNodeAgent resource is installed successfully you should be able to see all the worker nodes of the cluster in your CCM account under Compute Node Tab.\n\n## Getting Started\nNow to run your application inside SGX enclaves on your cluster follow the [documentation](https://support.fortanix.com/hc/en-us/articles/360043527431-User-s-Guide-Add-and-Edit-an-Application).\n",
      "csv_display_name": "CCM Node Agent Operator",
      "csv_metadata_description": "CCM Node Agent software enables registration of the compute nodes to Fortanix CCM when installed in the Openshift Cluster Nodes",
      "csv_name": "ccm-node-agent-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:09:32.123000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "ccm-node-agent-operator",
      "provided_apis": [
        {
          "group": "charts.operatorhub.io",
          "kind": "CcmNodeAgent",
          "plural": "ccmnodeagents",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4",
          "image": "fortanix/ccm-node-agent-operator@sha256:73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4",
          "name": "ccm-node-agent-operator-73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4-annotation"
        },
        {
          "digest": "sha256:e30f7835cf52dbce9afdbaf55e5a93d8baf9c4b3a3ae488d1d42c1adba7f46af",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:e30f7835cf52dbce9afdbaf55e5a93d8baf9c4b3a3ae488d1d42c1adba7f46af",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4",
          "image": "fortanix/ccm-node-agent-operator@sha256:73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "6127be69dece23122b7a8369",
      "alm_examples": [
        {
          "api_version": "sonatype.com/v1alpha1",
          "kind": "NexusIQ",
          "metadata": {
            "name": "example-nexusiq"
          },
          "spec": {
            "deployment": {
              "postStart": {},
              "preStart": {}
            },
            "fullnameOverride": "",
            "imagePullSecrets": [],
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [],
              "path": "/",
              "tls": []
            },
            "iq": {
              "adminPort": 8071,
              "applicationPort": 8070,
              "configYaml": {
                "createSampleData": true,
                "server": {
                  "adminConnectors": [
                    {
                      "port": 8071,
                      "type": "http"
                    }
                  ],
                  "applicationConnectors": [
                    {
                      "port": 8070,
                      "type": "http"
                    }
                  ]
                },
                "sonatypeWork": "/sonatype-work"
              },
              "imageName": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:ce08dbabd686ab02f246b43dccb708e2c4d81d656a091965dd3b73123091f790",
              "imagePullPolicy": "IfNotPresent",
              "imagePullSecret": "",
              "licenseSecret": "",
              "memory": "1Gi",
              "name": "nxiq"
            },
            "nameOverride": "",
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "storageSize": "1Gi"
            },
            "service": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "ports": [
                {
                  "name": "nexus-service",
                  "port": 80,
                  "targetPort": 80
                }
              ]
            },
            "serviceAccount": {
              "create": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxiq-operator-bundle@sha256:16ebccbf15157c2f7ba6d0873eead210f0c10fb4bce32e9f3fedcd1704fe7f30",
      "bundle_path_digest": "sha256:16ebccbf15157c2f7ba6d0873eead210f0c10fb4bce32e9f3fedcd1704fe7f30",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-26T16:16:41.332000+00:00",
      "csv_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.\nDevelopers leveraging open source require a solution that helps them make safer choices\nwhile still delivering at DevOps speed.\nNexus Lifecycle empowers developers and security teams to choose the best components\nand govern open source usage, ensuring organizations continue to innovate with less risk.\n\n## Core Capabilities\n\n* **Dependency Management**:\n  Generate a precise software bill of materials for all applications\n  to identify open source components and gather contextual direct\n  and transitive dependency information for faster action.\n* **One-Click Remediation**:\n  Upgrade to the best components and versions based on real-time intelligence.\n  Available in your preferred IDE or a GitHub pull request.\n* **Automated Open Source Policy Enforcement**:\n  Create custom security, license, and architectural policies based\n  on application type or organization and contextually enforce those policies\n  across every stage of the SDLC.\n* **Continuous Monitoring**:\n  Real-time notifications of newly discovered defects,\n  as well as vulnerabilities based on component,\n  risk level or application/container affected.\n\n## Extras\n\n* IDE Integrations: Eclipse, IntelliJ, and Visual Studio\n* Source Control Integrations: GitHub, GitLab, and Bitbucket\n* Chrome Browser Extension\n* Red Hat Clair for Container Scanning\n\n\n## Usage\n\nOnce the server instance is created by the operator and running,\nyou'll want to expose the service as you see fit:\n1. Create a Route to the new service for iq.applicationPort (8070).\n2. Visit the URL provided by the Route, login, and set new credentials.\n  The default credentials are `admin`/`admin123`.\n\nThe Nexus IQ Server can be further configured via the NexusIQ custom resource definition:\n\n| Parameter            | Description                                                  | Default           |\n| -------------------- | ------------------------------------------------------------ | ----------------- |\n| `iq.applicationPort` | Port of the application connector. Must match the value in the `configYaml` property | `8070`            |\n| `iq.adminPort`       | Port of the application connector. Must match the value in the `configYaml` property | `8071`            |\n| `iq.memory`          | The amount of RAM to allocate                                | `1Gi`             |\n| `iq.licenseSecret`   | The base-64 encoded license file to be installed at startup  | `\"\"`              |\n| `iq.configYaml`      | A YAML block which will be used as a configuration block for IQ Server. | See example YAML shown when creating a NexusIQ. |\n| `ingress.enabled`                           | Create an ingress for Nexus         | `true`                                  |\n| `ingress.annotations`                       | Annotations to enhance ingress configuration  | `{}`                          |\n| `ingress.tls.enabled`                       | Enable TLS                          | `true`                                 |\n| `ingress.tls.secretName`                    | Name of the secret storing TLS cert, `false` to use the Ingress' default certificate | `nexus-tls`                             |\n| `ingress.path`                              | Path for ingress rules. GCP users should set to `/*` | `/`                    |\n| `deployment.preStart.command`               | Command to run before starting the IQ Server container  | `nil`                   |\n| `deployment.postStart.command`              | Command to run after starting the IQ Server container  | `nil`                    |\n| `deployment.terminationGracePeriodSeconds` | Time to allow for clean shutdown                        | 120                      |\n| `persistence.storageClass` | The provisioner class                        | `-` (disables dynamic provisioning)            |\n| `persistence.storageSize` | The amount of drive space to allocate                        | `1Gi`             |\n| `persistence.accessMode` | Default access mode                        | `ReadWriteOnce`             |\n| `persistence.volumeConfiguration` | A YAML block to configure the persistent volume type. Defaults to `hostPath` which should not be used in production | `hostPath`             |\n\n## Configuring IQ Server\n\nYou can define the `config.yml` for IQ Server in your CRD on startup. \nIt is the `iq.configYaml` property. For more details, see the [Configuring IQ Server](https://help.sonatype.com/iqserver/configuring) help page.\n\n\n## Installing the License\n\nThe license file can be installed via the UI when IQ server is running, or it can be done as a part of the deploy. \nIf you leave the `licenseFile` field empty/commented, IQ Server will start and prompt you to manually install the license \nwhen you first enter the GUI.\n\n### Installing the License Automatically\nTo do it automatically, first encode your `.lic` file in Base 64 with no line breaks, eg:\n\n```bash\nbase64 --wrap=0 mylicense.lic > lic.base64\n```\n\nThen add this value to your CRD file as `iq.licenseSecret`, eg:\n\n```yaml\niq:\n  licenseSecret: bXkgc2FtcGxlIGxpY2Vuc2U=\n```\n\nSpecify the `licenseFile` path in `iq.configYaml` as:\n\n```yaml\niq:\n  configYaml:\n    server:\n      applicationConnectors:\n        - type: http\n          port: 8070\n      adminConnectors:\n        - type: http\n          port: 8071\n    createSampleData: true\n    sonatypeWork: /sonatype-work\n    # add this line and the `licenseSecret` above to autoconfigure licensing\n    licenseFile: /etc/nexus-iq-license/license_lic\n```",
      "csv_display_name": "Nexus IQ Operator",
      "csv_metadata_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.",
      "csv_name": "nxiq-operator-certified.v1.121.0-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:56:41.078000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nxiq-operator-certified",
      "provided_apis": [
        {
          "group": "sonatype.com",
          "kind": "NexusIQ",
          "plural": "nexusiqs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:f397acba37cb3a04cd7815491e0dff2f34d99f13cce82dc7c9522f5e26705ebc",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:f397acba37cb3a04cd7815491e0dff2f34d99f13cce82dc7c9522f5e26705ebc",
          "name": "nxiq-operator-certified-f397acba37cb3a04cd7815491e0dff2f34d99f13cce82dc7c9522f5e26705ebc-annotation"
        },
        {
          "digest": "sha256:f397acba37cb3a04cd7815491e0dff2f34d99f13cce82dc7c9522f5e26705ebc",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:f397acba37cb3a04cd7815491e0dff2f34d99f13cce82dc7c9522f5e26705ebc",
          "name": "nxiq-operator-certified"
        },
        {
          "digest": "sha256:ce08dbabd686ab02f246b43dccb708e2c4d81d656a091965dd3b73123091f790",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:ce08dbabd686ab02f246b43dccb708e2c4d81d656a091965dd3b73123091f790",
          "name": "iq"
        },
        {
          "digest": "sha256:ce08dbabd686ab02f246b43dccb708e2c4d81d656a091965dd3b73123091f790",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:ce08dbabd686ab02f246b43dccb708e2c4d81d656a091965dd3b73123091f790",
          "name": "nexus-iq-server-ce08dbabd686ab02f246b43dccb708e2c4d81d656a091965dd3b73123091f790-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.121.0-1",
      "version_original": "1.121.0-1"
    },
    {
      "_id": "6127d9b3dece23122b7a8392",
      "alm_examples": [
        {
          "api_version": "modelbuilder.com/v1alpha1",
          "kind": "Modelbuilder",
          "metadata": {
            "name": "modelbuilder-sample"
          },
          "spec": {
            "backup_storage": {
              "storage#": "20G",
              "storage_class": "ibmc-file-gold-gid"
            },
            "env_type": "prod",
            "in_memory_storage": {
              "storage#": "20G",
              "storage_class": "ibmc-file-gold-gid"
            },
            "license": {
              "accept": false
            },
            "metadata_storage": {
              "storage#": "20G",
              "storage_class": "ibmc-block-bronze"
            },
            "photo_storage": {
              "storage#": "500G",
              "storage_class": "ibmc-file-gold-gid"
            },
            "vm_request_method": "dynamic"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/modelbuilder-bundle@sha256:cf8245accfa24c18ad9d27792b5bd2379fa476cc1f221c749e10f1b0f770f8ff",
      "bundle_path_digest": "sha256:cf8245accfa24c18ad9d27792b5bd2379fa476cc1f221c749e10f1b0f770f8ff",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-26T18:13:07.816000+00:00",
      "csv_description": "IBM Services Software Model Builder for Vision is an AI training platform that can use the capabilities of IBM Cloud and its GPUs to quickly train computer vision models for compatible mobile apps. IBM Services Software Inspection Workbench iOS and iPadOS app will be used as the exclusive UI for labeling and training. Specifically, IBM Model Builder for Vision will train computer vision models that can then be deployed for use on the IBM Services Software Inspector Portable , IBM Services Software Inspector Wearable and the IBM Maximo Visual Inspection Mobile apps.",
      "csv_display_name": "IBM Model Builder for Vision",
      "csv_metadata_description": "",
      "csv_name": "ibm-modelbuilder-for-vision.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:10:21.008000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "model-builder-for-vision-certified",
      "provided_apis": [
        {
          "group": "modelbuilder.com",
          "kind": "Modelbuilder",
          "plural": "modelbuilders",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:7839f12f1bd45ff5df207a30e254996701ec4a3034b3f29f0e89abe30b89e5e8",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-operator@sha256:7839f12f1bd45ff5df207a30e254996701ec4a3034b3f29f0e89abe30b89e5e8",
          "name": "modelbuilder-operator-7839f12f1bd45ff5df207a30e254996701ec4a3034b3f29f0e89abe30b89e5e8-annotation"
        },
        {
          "digest": "sha256:7839f12f1bd45ff5df207a30e254996701ec4a3034b3f29f0e89abe30b89e5e8",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-operator@sha256:7839f12f1bd45ff5df207a30e254996701ec4a3034b3f29f0e89abe30b89e5e8",
          "name": "modelbuilder"
        },
        {
          "digest": "sha256:8ce51f160748de50a023e6fe8c2a50f3f0088988e1244e25de9d27594f4c0b2e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8ce51f160748de50a023e6fe8c2a50f3f0088988e1244e25de9d27594f4c0b2e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:0c5350728fd5f7739eacaee7f32456d02cf1a2465f9d7fc48bacdcf73dcfa142",
          "image": "registry.redhat.io/rhel8/postgresql-12@sha256:0c5350728fd5f7739eacaee7f32456d02cf1a2465f9d7fc48bacdcf73dcfa142",
          "name": "postgres_cli"
        },
        {
          "digest": "sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "image": "registry.connect.redhat.com/crunchydata/pgo-deployer@sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "name": "pgo_deploy"
        },
        {
          "digest": "sha256:7d7ac1726d07e5c0cce79fa2b7d6ea7dfac3b94a1873ceeac84a90b2f5a0273d",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-pgo-util@sha256:7d7ac1726d07e5c0cce79fa2b7d6ea7dfac3b94a1873ceeac84a90b2f5a0273d",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:2454f6ee74033c8c6ad55868cee4509c78b6da523110ce28ceaa6b99ed06e582",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-augmentor@sha256:2454f6ee74033c8c6ad55868cee4509c78b6da523110ce28ceaa6b99ed06e582",
          "name": "coreml_augmentor"
        },
        {
          "digest": "sha256:50389b84e5857dfb512740192c151896bc538e1afc037dc823b48fd002419d68",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-image-server@sha256:50389b84e5857dfb512740192c151896bc538e1afc037dc823b48fd002419d68",
          "name": "nginx"
        },
        {
          "digest": "sha256:0f3f57dd27aa346b030bb0b6d5e8ffe3f225e4f89c1187c6b00803d320a60898",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-auth-service@sha256:0f3f57dd27aa346b030bb0b6d5e8ffe3f225e4f89c1187c6b00803d320a60898",
          "name": "mb_auth_coreml"
        },
        {
          "digest": "sha256:e3bbe7f8dd13da47271e98c8e897ceae14ec34a2b18c377d560fbabfbd52d2c6",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-cv-training-service@sha256:e3bbe7f8dd13da47271e98c8e897ceae14ec34a2b18c377d560fbabfbd52d2c6",
          "name": "mb_service_coreml"
        },
        {
          "digest": "sha256:e43443f9b8a5c0c4f228c23f302b37444f74b55539b6fd5f7ca4d6ebc9d5e0f1",
          "image": "registry.redhat.io/rhel8/redis-6@sha256:e43443f9b8a5c0c4f228c23f302b37444f74b55539b6fd5f7ca4d6ebc9d5e0f1",
          "name": "redis"
        },
        {
          "digest": "sha256:f28f53451464900701cc711a88b86372dab2b6d6f59cc40ad302f8e9f462c1b7",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-util@sha256:f28f53451464900701cc711a88b86372dab2b6d6f59cc40ad302f8e9f462c1b7",
          "name": "util"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "61295ccdeb34b73652493666",
      "alm_examples": [
        {
          "api_version": "sonatype.com/v1alpha1",
          "kind": "NexusIQ",
          "metadata": {
            "name": "example-nexusiq"
          },
          "spec": {
            "deployment": {
              "postStart": {},
              "preStart": {}
            },
            "fullnameOverride": "",
            "imagePullSecrets": [],
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [],
              "path": "/",
              "tls": []
            },
            "iq": {
              "adminPort": 8071,
              "applicationPort": 8070,
              "configYaml": {
                "createSampleData": true,
                "server": {
                  "adminConnectors": [
                    {
                      "port": 8071,
                      "type": "http"
                    }
                  ],
                  "applicationConnectors": [
                    {
                      "port": 8070,
                      "type": "http"
                    }
                  ]
                },
                "sonatypeWork": "/sonatype-work"
              },
              "imageName": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:ce08dbabd686ab02f246b43dccb708e2c4d81d656a091965dd3b73123091f790",
              "imagePullPolicy": "IfNotPresent",
              "imagePullSecret": "",
              "licenseSecret": "",
              "memory": "1Gi",
              "name": "nxiq"
            },
            "nameOverride": "",
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "storageSize": "1Gi"
            },
            "service": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "ports": [
                {
                  "name": "nexus-service",
                  "port": 80,
                  "targetPort": 80
                }
              ]
            },
            "serviceAccount": {
              "create": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxiq-operator-bundle@sha256:8a3a9689f37c693a1a87bbe2c1f794df9d577fb048c3e4ef74d88e3d5328b594",
      "bundle_path_digest": "sha256:8a3a9689f37c693a1a87bbe2c1f794df9d577fb048c3e4ef74d88e3d5328b594",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-27T21:44:45.783000+00:00",
      "csv_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.\nDevelopers leveraging open source require a solution that helps them make safer choices\nwhile still delivering at DevOps speed.\nNexus Lifecycle empowers developers and security teams to choose the best components\nand govern open source usage, ensuring organizations continue to innovate with less risk.\n\n## Core Capabilities\n\n* **Dependency Management**:\n  Generate a precise software bill of materials for all applications\n  to identify open source components and gather contextual direct\n  and transitive dependency information for faster action.\n* **One-Click Remediation**:\n  Upgrade to the best components and versions based on real-time intelligence.\n  Available in your preferred IDE or a GitHub pull request.\n* **Automated Open Source Policy Enforcement**:\n  Create custom security, license, and architectural policies based\n  on application type or organization and contextually enforce those policies\n  across every stage of the SDLC.\n* **Continuous Monitoring**:\n  Real-time notifications of newly discovered defects,\n  as well as vulnerabilities based on component,\n  risk level or application/container affected.\n\n## Extras\n\n* IDE Integrations: Eclipse, IntelliJ, and Visual Studio\n* Source Control Integrations: GitHub, GitLab, and Bitbucket\n* Chrome Browser Extension\n* Red Hat Clair for Container Scanning\n\n\n## Usage\n\nOnce the server instance is created by the operator and running,\nyou'll want to expose the service as you see fit:\n1. Create a Route to the new service for iq.applicationPort (8070).\n2. Visit the URL provided by the Route, login, and set new credentials.\n  The default credentials are `admin`/`admin123`.\n\nThe Nexus IQ Server can be further configured via the NexusIQ custom resource definition:\n\n| Parameter            | Description                                                  | Default           |\n| -------------------- | ------------------------------------------------------------ | ----------------- |\n| `iq.applicationPort` | Port of the application connector. Must match the value in the `configYaml` property | `8070`            |\n| `iq.adminPort`       | Port of the application connector. Must match the value in the `configYaml` property | `8071`            |\n| `iq.memory`          | The amount of RAM to allocate                                | `1Gi`             |\n| `iq.licenseSecret`   | The base-64 encoded license file to be installed at startup  | `\"\"`              |\n| `iq.configYaml`      | A YAML block which will be used as a configuration block for IQ Server. | See example YAML shown when creating a NexusIQ. |\n| `ingress.enabled`                           | Create an ingress for Nexus         | `true`                                  |\n| `ingress.annotations`                       | Annotations to enhance ingress configuration  | `{}`                          |\n| `ingress.tls.enabled`                       | Enable TLS                          | `true`                                 |\n| `ingress.tls.secretName`                    | Name of the secret storing TLS cert, `false` to use the Ingress' default certificate | `nexus-tls`                             |\n| `ingress.path`                              | Path for ingress rules. GCP users should set to `/*` | `/`                    |\n| `deployment.preStart.command`               | Command to run before starting the IQ Server container  | `nil`                   |\n| `deployment.postStart.command`              | Command to run after starting the IQ Server container  | `nil`                    |\n| `deployment.terminationGracePeriodSeconds` | Time to allow for clean shutdown                        | 120                      |\n| `persistence.storageClass` | The provisioner class                        | `-` (disables dynamic provisioning)            |\n| `persistence.storageSize` | The amount of drive space to allocate                        | `1Gi`             |\n| `persistence.accessMode` | Default access mode                        | `ReadWriteOnce`             |\n| `persistence.volumeConfiguration` | A YAML block to configure the persistent volume type. Defaults to `hostPath` which should not be used in production | `hostPath`             |\n\n## Configuring IQ Server\n\nYou can define the `config.yml` for IQ Server in your CRD on startup. \nIt is the `iq.configYaml` property. For more details, see the [Configuring IQ Server](https://help.sonatype.com/iqserver/configuring) help page.\n\n\n## Installing the License\n\nThe license file can be installed via the UI when IQ server is running, or it can be done as a part of the deploy. \nIf you leave the `licenseFile` field empty/commented, IQ Server will start and prompt you to manually install the license \nwhen you first enter the GUI.\n\n### Installing the License Automatically\nTo do it automatically, first encode your `.lic` file in Base 64 with no line breaks, eg:\n\n```bash\nbase64 --wrap=0 mylicense.lic > lic.base64\n```\n\nThen add this value to your CRD file as `iq.licenseSecret`, eg:\n\n```yaml\niq:\n  licenseSecret: bXkgc2FtcGxlIGxpY2Vuc2U=\n```\n\nSpecify the `licenseFile` path in `iq.configYaml` as:\n\n```yaml\niq:\n  configYaml:\n    server:\n      applicationConnectors:\n        - type: http\n          port: 8070\n      adminConnectors:\n        - type: http\n          port: 8071\n    createSampleData: true\n    sonatypeWork: /sonatype-work\n    # add this line and the `licenseSecret` above to autoconfigure licensing\n    licenseFile: /etc/nexus-iq-license/license_lic\n```",
      "csv_display_name": "Nexus IQ Operator",
      "csv_metadata_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.",
      "csv_name": "nxiq-operator-certified.v1.121.0-2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:16:25.557000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nxiq-operator-certified",
      "provided_apis": [
        {
          "group": "sonatype.com",
          "kind": "NexusIQ",
          "plural": "nexusiqs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:866afa870edc9e18d904c287b8c52daefdac775c01fbbaa4ed8b68e4aba64ed3",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:866afa870edc9e18d904c287b8c52daefdac775c01fbbaa4ed8b68e4aba64ed3",
          "name": "nxiq-operator-certified-866afa870edc9e18d904c287b8c52daefdac775c01fbbaa4ed8b68e4aba64ed3-annotation"
        },
        {
          "digest": "sha256:866afa870edc9e18d904c287b8c52daefdac775c01fbbaa4ed8b68e4aba64ed3",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:866afa870edc9e18d904c287b8c52daefdac775c01fbbaa4ed8b68e4aba64ed3",
          "name": "nxiq-operator-certified"
        },
        {
          "digest": "sha256:ce08dbabd686ab02f246b43dccb708e2c4d81d656a091965dd3b73123091f790",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:ce08dbabd686ab02f246b43dccb708e2c4d81d656a091965dd3b73123091f790",
          "name": "iq"
        },
        {
          "digest": "sha256:ce08dbabd686ab02f246b43dccb708e2c4d81d656a091965dd3b73123091f790",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:ce08dbabd686ab02f246b43dccb708e2c4d81d656a091965dd3b73123091f790",
          "name": "nexus-iq-server-ce08dbabd686ab02f246b43dccb708e2c4d81d656a091965dd3b73123091f790-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.121.0-2",
      "version_original": "1.121.0-2"
    },
    {
      "_id": "613017c5dc2dfaaae870540f",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:62250d515fa374b29f57381fea8f4f9a56ff6e00056b38476e629c91606c7369",
      "bundle_path_digest": "sha256:62250d515fa374b29f57381fea8f4f9a56ff6e00056b38476e629c91606c7369",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-02T00:16:05.959000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.3.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:49:47.281000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "8.3.1",
      "version_original": "8.3.1"
    },
    {
      "_id": "6133af63c61b370d4fd4cca6",
      "alm_examples": [
        {
          "api_version": "hxcsi.cisco.com/v1",
          "kind": "HXCSIDriver",
          "metadata": {
            "name": "hxcsidriver-sample"
          },
          "spec": {
            "affinity": {},
            "autoscaling": {},
            "fullnameOverride": "",
            "hx": {
              "clientId": "",
              "clusteruuid": "",
              "dockerRegistryName": "",
              "iscsiUrl": "",
              "token": "exampletoken",
              "url": ""
            },
            "image": {
              "attacher": "hxcsi-csi-attacher:3.2.0-cisco1",
              "hxcsi": "hxcsi-ubi8:hxcsi-1.2.1-619",
              "provisioner": "hxcsi-csi-provisioner:2.1.2-cisco1",
              "pullPolicy": "Always",
              "registrar": "hxcsi-csi-node-driver-registrar:2.1.0-cisco1",
              "resizer": "hxcsi-csi-resizer:1.1.0-cisco1",
              "tag": ""
            },
            "imagePullSecrets": [],
            "ingress": {},
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "replicaCount": 1,
            "resources": {},
            "securityContext": {},
            "service": {},
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            },
            "storageClass": {
              "isDefault": "false",
              "name": "hyperflex"
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hxcsiadmin/hxcsi-helm-bundle@sha256:fec9c6052c842ebe55a3a758d846ad533afb0baaee88aba60f3110358cf4dde6",
      "bundle_path_digest": "sha256:fec9c6052c842ebe55a3a758d846ad533afb0baaee88aba60f3110358cf4dde6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-04T17:39:47.735000+00:00",
      "csv_description": "This is a HELM based Operator to deploy HXCSI driver to a RedHat OpenShift cluster",
      "csv_display_name": "Cisco Hyperflex CSI Operator",
      "csv_metadata_description": "Cisco HXCSI Plugin for RedHat OpenShift Platform",
      "csv_name": "cisco-hxcsi-operator.v1.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:15:57.413000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cisco-hxcsi-operator",
      "provided_apis": [
        {
          "group": "hxcsi.cisco.com",
          "kind": "HXCSIDriver",
          "plural": "hxcsidrivers",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:10492e703c017eaa4c95e847477a3a7b7e3a512c5a0679a7d67dd01813223d5a",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-bundle@sha256:10492e703c017eaa4c95e847477a3a7b7e3a512c5a0679a7d67dd01813223d5a",
          "name": "hxcsi-helm-bundle-10492e703c017eaa4c95e847477a3a7b7e3a512c5a0679a7d67dd01813223d5a-annotation"
        },
        {
          "digest": "sha256:518f5e036a6c67257c2926d9cad073e46ba0663c1386b97aadbf51d3a27ab559",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:518f5e036a6c67257c2926d9cad073e46ba0663c1386b97aadbf51d3a27ab559",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:4b75276a513a5f1f68ffc84e0b99d086f428846e2e5ef93860c646e9760c241d",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-operator@sha256:4b75276a513a5f1f68ffc84e0b99d086f428846e2e5ef93860c646e9760c241d",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.2.1",
      "version_original": "1.2.1"
    },
    {
      "_id": "6135659f539c8cedbde1d2a4",
      "alm_examples": [
        {
          "api_version": "csi.hitachi.com/v1",
          "kind": "HSPC",
          "metadata": {
            "name": "hspc",
            "namespace": "kube-system"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hitachi/hspc-operator-bundle@sha256:939b68f8608acee4650257aab96f9eb46f3e6aa80ccc6ea1aeb5c37ae7cce66b",
      "bundle_path_digest": "sha256:939b68f8608acee4650257aab96f9eb46f3e6aa80ccc6ea1aeb5c37ae7cce66b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-06T00:49:35.163000+00:00",
      "csv_description": "## About\nHitachi Storage Plug-in for Containers (HSPC) is a plugin that integrates Hitachi VSP storage into Kubernetes based clusters.\nHSPC provides dynamic persistent volume provisioning capabilities from Hitachi's block storage arrays.\n\nFor full documentation, go to our [Knowledge Base](https://knowledge.hitachivantara.com/Documents/Adapters_and_Drivers/Storage_Adapters_and_Drivers/Containers) and refer to the reference guide for HSPC v3.7.0.\n\n## Requirements\n\n### Supported Driver Version\n\n* HSPC v3.7.0\n\n### Supported Platforms\n\n* OpenShift v4.5, v4.6, v4.7\n\n### Supported Operating Systems\n\n* RHEL 7.x",
      "csv_display_name": "Hitachi Storage Plug-in for Containers",
      "csv_metadata_description": "An operator for managing Hitachi Storage Plug-in for Containers CSI driver",
      "csv_name": "hspc-operator.v1.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:29:51.469000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "hspc-operator",
      "provided_apis": [
        {
          "group": "csi.hitachi.com",
          "kind": "HSPC",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:5a8fce133552bd933fd51663cc37a139b461ea6b9b34fb84224fba2747579e72",
          "image": "registry.connect.redhat.com/hitachi/hspc-operator@sha256:5a8fce133552bd933fd51663cc37a139b461ea6b9b34fb84224fba2747579e72",
          "name": "hspc-operator-5a8fce133552bd933fd51663cc37a139b461ea6b9b34fb84224fba2747579e72-annotation"
        },
        {
          "digest": "sha256:5a8fce133552bd933fd51663cc37a139b461ea6b9b34fb84224fba2747579e72",
          "image": "registry.connect.redhat.com/hitachi/hspc-operator@sha256:5a8fce133552bd933fd51663cc37a139b461ea6b9b34fb84224fba2747579e72",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.7.0",
      "version_original": "1.7.0"
    },
    {
      "_id": "61383f2e89213684728b27b2",
      "alm_examples": [
        {
          "api_version": "fep.fujitsu.io/v2",
          "kind": "FEPCluster",
          "metadata": {
            "name": "new-fep"
          },
          "spec": {
            "fep": {
              "customAnnotations": {
                "allDeployments": {}
              },
              "forceSsl": true,
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "instances": "1",
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "podAntiAffinity": false,
              "podDisruptionBudget": false,
              "servicePort": 27500,
              "syncMode": "off",
              "sysExtraLogging": false
            },
            "fepChildCrVal": {
              "backup": {
                "image": {
                  "pullPolicy": "IfNotPresent"
                },
                "mcSpec": {
                  "limits": {
                    "cpu": "0.2",
                    "memory": "300Mi"
                  },
                  "requests": {
                    "cpu": "0.1",
                    "memory": "200Mi"
                  }
                },
                "pgbackrestParams": " ",
                "postScript": " ",
                "preScript": " ",
                "schedule": {
                  "num": 2
                },
                "schedule1": {
                  "schedule": "15 0 * * 0",
                  "type": "full"
                },
                "schedule2": {
                  "schedule": "15 0 * * 1-6",
                  "type": "incr"
                },
                "schedule3": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule4": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule5": {
                  "schedule": " ",
                  "type": " "
                }
              },
              "customPgAudit": "# define pg audit custom params here to override defaults.\n# if log volume is not defined, log_directory should be \n# changed to '/database/userdata/data/log'\n[output]\nlogger = 'auditlog'\nlog_directory = '/database/log/audit'\n[rule]\n",
              "customPgHba": "# define pg_hba custom rules here to be merged with default rules.\n# TYPE     DATABASE        USER        ADDRESS        METHOD\n",
              "customPgParams": "# define custom postgresql.conf parameters below to override defaults.\n# Current values are as per default FEP deployment\nshared_preload_libraries='pgx_datamasking,vci,pgaudit,pg_prewarm'\nsession_preload_libraries='vci,pg_prewarm'\nmax_prepared_transactions = 100\nmax_worker_processes = 30\nmax_connections = 100\nwork_mem = 1MB\nmaintenance_work_mem = 12MB\nshared_buffers = 128MB\neffective_cache_size = 384MB\ncheckpoint_completion_target = 0.8\n\n# tcp parameters\ntcp_keepalives_idle = 30\ntcp_keepalives_interval = 10\ntcp_keepalives_count = 3\n\n# logging parameters in default fep installation\n# if log volume is not defined, log_directory should be \n# changed to '/database/userdata/data/log'\nlog_directory = '/database/log'\nlog_filename = 'logfile-%a.log'\nlog_file_mode = 0600\nlog_truncate_on_rotation = on\nlog_rotation_age = 1d\nlog_rotation_size = 0\nlog_checkpoints = on\nlog_line_prefix = '%e %t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h'\nlog_lock_waits = on\nlog_autovacuum_min_duration = 60s\nlogging_collector = on\npgaudit.config_file='/opt/app-root/src/pgaudit-cfg/pgaudit.conf'\nlog_replication_commands = on\nlog_min_messages = WARNING\nlog_destination = stderr\n\n# vci parameters in default fep installation\nvci.enable = on\nvci.maintenance_work_mem = 256MB\nvci.max_local_ros = 64MB\nvci.force_max_parallelism = off\n\n# wal_archive parameters in default fep installation\narchive_mode = on\narchive_command = 'pgbackrest --stanza=backupstanza --config=/database/userdata/pgbackrest.conf archive-push %p'\nwal_level = replica\nmax_wal_senders = 12\nwal_keep_segments = 64\n\n",
              "storage": {
                "archivewalVol": {
                  "size": "1Gi"
                },
                "backupVol": {
                  "size": "2Gi"
                },
                "dataVol": {
                  "size": "2Gi"
                },
                "logVol": {
                  "size": "1Gi"
                },
                "tablespaceVol": {
                  "size": "512Mi"
                },
                "walVol": {
                  "size": "1200Mi"
                }
              },
              "sysUsers": {
                "pgAdminPassword": "admin-password",
                "pgdb": "mydb",
                "pgpassword": "mydbpassword",
                "pgreplpassword": "repluserpwd",
                "pgrepluser": "repluser",
                "pguser": "mydbuser",
                "tdepassphrase": "tde-passphrase"
              },
              "systemCertificates": {
                "cacrt": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
                "crt": "-----BEGIN CERTIFICATE-----\nMIIDUTCCAjmgAwIBAgIRAMocW3qMoHrD6qRvMPppMkMwDQYJKoZIhvcNAQELBQAw\nNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9yIEt1\nYmVybmV0ZXMwHhcNMjEwMjA2MDQzMjM2WhcNMjYwMjA1MDQzMjM2WjA/MRAwDgYD\nVQQKEwdGdWppdHN1MSswKQYDVQQDEyJGVUpJVFNVIEVudGVycHJpc2UgUG9zdGdy\nZXMgU2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4AI33yvH\nZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I2e4SceTKi6O3C/I1XuvWlpng\n5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4ANB5JWWqDOjrRT3o7nRPGXfila\nbP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYpmjdbfxabTz07ig0+6/cwKoRR\nxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTFYvmAH7gcdssSFBt8NPlUATHE\nsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6Wdgmu5H2pDml8CDNLDv98Aj7i\n+I5SRKKcVPlnuQIDAQABo1AwTjAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUH\nAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBQcwrrUO0u+FhIUuVdrDRCQRsi6\nZjANBgkqhkiG9w0BAQsFAAOCAQEAm5dxBoI9pScOCvRAchg4CprdRDSJb9K6yB3O\nnCAxnM47iHeXnY3WlnI388kHu8DU7O4ba1tJbGs3KY9KzioPk43pU12jWkO1onoF\n+mTDjx/Ef1cYWA9r5q/LtgTa6Q2sxV4O2x67QW82aAnaxO34dV5zWCPIvAoovZBV\nHRT+BgCg3r2vD1RGKK2nl1aYJtWhO1SZubam+VttdZ/vbM9oOJctxmImsEtBXjkY\nKteePdQtLL5o03JhyXWyRshCq+HMmKf2KgyY8gvydGcP4eLQdBWcW40LcnVq6UjT\n0kJycJEKngMVademq1ZWHGaiYB7hyT6GhgIcHUJ2cKrPgbEh1Q==\n-----END CERTIFICATE-----",
                "key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEA4AI33yvHZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I\n2e4SceTKi6O3C/I1XuvWlpng5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4AN\nB5JWWqDOjrRT3o7nRPGXfilabP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYp\nmjdbfxabTz07ig0+6/cwKoRRxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTF\nYvmAH7gcdssSFBt8NPlUATHEsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6W\ndgmu5H2pDml8CDNLDv98Aj7i+I5SRKKcVPlnuQIDAQABAoIBAFPQYKlOzw/+BA0b\nyMIUpdctIMb/54CR/xR0mVw1DbSjigNVPjHUQvB8Y1B2FAITQObgJO06bAv0QdWN\nRb0/v/yYiNJDFjaLjaIAHlO/2+oWrXbFaZqgpVDJhB+e1xaZr2x7XGxm+p925k30\nl6pvIRY+I8JRKvZiV1VZHwL/R3JOtPr++xMZtLVjVOI+f+ySqJ+TZHuAjm49EKxj\ncEmmJ28b7QcziXsvKy00f+zbqLIBKXQdZAFU5eEr1BsDRXdRW+Kf0XIvftuy4BJZ\nvoKT+VGhEvF/qysswL4+6IAO6tpuYnnM0Y2d3sOGoWPkTcQK0MekYKzL/WmtCjNs\n9hodJtECgYEA5EWyhEOf4uOKe5TDp697UCUvXLoOR58FDe/S8XNvScn29jjOkqIg\nOMoqo9xAkJTNTzqn5UUdt1x/pgM2NxlPLFijrc0zQlX3SoOO2ryDd9WNi7YKtN16\nKJqa536WeZu2OEbuAZ+S3GALVy1RPeTNPnUOmKnF06DjDUGzLNCZy10CgYEA+zfw\n952DWuz1U0Z4wvAEqqcgUKXPKrkTXV/iUnjkDkrLYVr0ZofDNTXrdHl+UedFmaOC\ncieZn6DNhcdz5tKtyysGMH3g/qs9PfoGUngvcXsy0Egk04l3x1jc8TTCLqXZXYaQ\nHMsx51n+R58oncPtzYSUOr9qQ6PbC2CstTbFJA0CgYEAjGEsUliAB/jknfEzjXjG\nPdhQUxb8VyE864Az2lah9t/kJzFyIAziAeqZ5GE7t247AGFTBRTHHI8e1Qoemi3P\nWbc9GVIbFs1lIYbcIDpUIyrKPEP8O5QEXtoNLxXTFgAjRGKiVY87spjCAJ+W2ZhO\ne/1it5GYXfgQCYQA2yuBmOUCgYANRkR2YR1axaCk+NlSu6oTdmdPu6M5x7PNQE7O\nOtMaKjua9lppvIzFGAdMDUtueoEEAE7ZR1xnwfB6PDLUpJdIYAqgr1YfPt8qkjaZ\nTv56yZ7CwL0pbF8m6nwqRrZoDp1wwraEvvvxFKFKGY/k3kCHlpTakdjEoDjn3gDi\nRnWeVQKBgCEneMSzucei5LRppRtRaJw/Btll8qlPMlX3W7dxQ3cLwpmLOn0m51Fp\nPIZ44zYK8R6fu4+/sSrlfaIg86Ugeufp6YNxyNROKxUGza5vDIu5OftwWtBeg+UK\nZ8lLWNdX6pp7WMujmF3H1DrkBbauYMUKZ4UxUYtelgHERMePIxwb\n-----END RSA PRIVATE KEY-----"
              }
            }
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPAction",
          "metadata": {
            "name": "new-fep-action"
          },
          "spec": {
            "fepAction": {
              "args": [
                "new-fep-sts-0"
              ],
              "type": "reload"
            },
            "sysExtraLogging": false,
            "targetClusterName": "new-fep"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPPgpool2",
          "metadata": {
            "name": "new-fep-pgpool2"
          },
          "spec": {
            "customparams": "listen_addresses = '*'\npcp_listen_addresses = '*'\nnum_init_children = 32\nreserved_connections = 0\nenable_pool_hba = off\nallow_clear_text_frontend_auth = off\nauthentication_timeout = 80\nbackend_weight0 = 1\nbackend_weight1 = 1\nbackend_flag0 = 'DISALLOW_TO_FAILOVER'\nbackend_flag1 = 'DISALLOW_TO_FAILOVER'\nconnection_cache = on\nmax_pool = 4\nlisten_backlog_multiplier = 2\nserialize_accept = off\nchild_life_time = 300\nclient_idle_limit = 0\nchild_max_connections = 0\nconnection_life_time = 0\nreset_query_list = 'ABORT; DISCARD ALL'\nclient_min_messages = info\nlog_min_messages = debug1\nlog_statement = on\nlog_per_node_statement = on\nlog_client_messages = on\nlog_hostname = on\nlog_connections = on\nlog_line_prefix = '%t: pid %p: '\nload_balance_mode = on\nignore_leading_white_space = on\nwhite_function_list = ''\nblack_function_list = 'currval,lastval,nextval,setval'\nblack_query_pattern_list = ''\ndatabase_redirect_preference_list = ''\napp_name_redirect_preference_list = ''\nallow_sql_comments = off\ndisable_load_balance_on_write = 'transaction'\nstatement_level_load_balance = on\nconnect_timeout = 10000\nsr_check_period = 0\nsr_check_user = ' postgres '\ndelay_threshold = 0\nlog_standby_delay = 'none'\nssl = off\nssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL'\nssl_prefer_server_ciphers = off\nssl_ecdh_curve = 'prime256v1'\nssl_dh_params_file = ''\nrelcache_expire = 0\nrelcache_size = 256\ncheck_temp_table = catalog\ncheck_unlogged_table = on\nenable_shared_relcache = on\nrelcache_query_target = master\n\n",
            "fepclustername": "new-fep",
            "imagePullPolicy": "IfNotPresent"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPRestore",
          "metadata": {
            "name": "new-fep-restore"
          },
          "spec": {
            "fromFEPcluster": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "mcSpec": {
              "limits": {
                "cpu": "200m",
                "memory": "300Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "200Mi"
              }
            },
            "restoretype": "latest",
            "toFEPcluster": "new-fep-2"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/fujitsu-postgres/fujitsu-enterprise-postgres-bundle@sha256:8b801772768fe15c3098890ef53fc8bbd434e80cfdfbd2b2dae8d516fa61f972",
      "bundle_path_digest": "sha256:8b801772768fe15c3098890ef53fc8bbd434e80cfdfbd2b2dae8d516fa61f972",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-08T04:42:22.935000+00:00",
      "csv_description": "FUJITSU Enterprise Postgres 12 delivers an enterprise-grade PostgreSQL on OpenShift Container Platform.\n\nThis solution provides the flexibility of a hybrid cloud solution while delivering an enhanced distribution\nof PostgreSQL to support enterprise-level workloads and provide improved deployment and management,\navailability, performance, data governance and security.\n\nAvailable as a multi-architecture container built for both amd64 and s390x.\n\nUse of the product is subject to Fujitsu evaluation license located at:\nhttps://www.fast.fujitsu.com/fujitsu-enterprise-postgres-trial-version-software-evaluation-license-agreement\nand the license period is 90 days after the download\n",
      "csv_display_name": "FUJITSU Enterprise Postgres 12 Operator",
      "csv_metadata_description": "OpenShift Operator for Fujitsu Enterprise Postgres 12",
      "csv_name": "fujitsu-enterprise-operator.v2.2.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:00:22.359000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "fep-ansible-operator",
      "provided_apis": [
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPBackup",
          "plural": "fepbackups",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPConfig",
          "plural": "fepconfigs",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2Cert",
          "plural": "feppgpool2certs",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2",
          "plural": "feppgpool2s",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPRestore",
          "plural": "feprestores",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPUser",
          "plural": "fepusers",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPAction",
          "plural": "fepactions",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCert",
          "plural": "fepcerts",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCluster",
          "plural": "fepclusters",
          "version": "v2"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPVolume",
          "plural": "fepvolumes",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:618b61707b38fe8a9636766261a5ea70b45f4c2549dde769c5b20a8ebca8f59d",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-operator@sha256:618b61707b38fe8a9636766261a5ea70b45f4c2549dde769c5b20a8ebca8f59d",
          "name": "fujitsu-enterprise-postgres-12-operator-618b61707b38fe8a9636766261a5ea70b45f4c2549dde769c5b20a8ebca8f59d-annotation"
        },
        {
          "digest": "sha256:618b61707b38fe8a9636766261a5ea70b45f4c2549dde769c5b20a8ebca8f59d",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-operator@sha256:618b61707b38fe8a9636766261a5ea70b45f4c2549dde769c5b20a8ebca8f59d",
          "name": "fep-ansible-operator"
        },
        {
          "digest": "sha256:a9edcb9a3464c19bd6e7d772a084f05452b893b9ae3dc1dbf30da35dcb681ee3",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-server@sha256:a9edcb9a3464c19bd6e7d772a084f05452b893b9ae3dc1dbf30da35dcb681ee3",
          "name": "fep"
        },
        {
          "digest": "sha256:953833154e75d79b15f96790368ad38fb20f05a48bf1b75be1968632fd5bdb40",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-backup@sha256:953833154e75d79b15f96790368ad38fb20f05a48bf1b75be1968632fd5bdb40",
          "name": "backup"
        },
        {
          "digest": "sha256:0bdff064fcebea38f4d796ddbf0de211e4ba6bb297e42dc514d5ef44980ee313",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-restore@sha256:0bdff064fcebea38f4d796ddbf0de211e4ba6bb297e42dc514d5ef44980ee313",
          "name": "restore"
        },
        {
          "digest": "sha256:2ecd8feb1a9fec0ed015908a5c53a8d4df405703068d0de21effdb3f3d33a8df",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-pgpool2@sha256:2ecd8feb1a9fec0ed015908a5c53a8d4df405703068d0de21effdb3f3d33a8df",
          "name": "pgpool2"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2.2.2",
      "version_original": "2.2.2"
    },
    {
      "_id": "613841292c743eb28fafda89",
      "alm_examples": [
        {
          "api_version": "csi.hitachi.com/v1",
          "kind": "HSPC",
          "metadata": {
            "name": "hspc",
            "namespace": "kube-system"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hitachi/hspc-operator-bundle@sha256:939b68f8608acee4650257aab96f9eb46f3e6aa80ccc6ea1aeb5c37ae7cce66b",
      "bundle_path_digest": "sha256:939b68f8608acee4650257aab96f9eb46f3e6aa80ccc6ea1aeb5c37ae7cce66b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-08T04:50:49.373000+00:00",
      "csv_description": "## About\nHitachi Storage Plug-in for Containers (HSPC) is a plugin that integrates Hitachi VSP storage into Kubernetes based clusters.\nHSPC provides dynamic persistent volume provisioning capabilities from Hitachi's block storage arrays.\n\nFor full documentation, go to our [Knowledge Base](https://knowledge.hitachivantara.com/Documents/Adapters_and_Drivers/Storage_Adapters_and_Drivers/Containers) and refer to the reference guide for HSPC v3.7.0.\n\n## Requirements\n\n### Supported Driver Version\n\n* HSPC v3.7.0\n\n### Supported Platforms\n\n* OpenShift v4.5, v4.6, v4.7\n\n### Supported Operating Systems\n\n* RHEL 7.x",
      "csv_display_name": "Hitachi Storage Plug-in for Containers",
      "csv_metadata_description": "An operator for managing Hitachi Storage Plug-in for Containers CSI driver",
      "csv_name": "hspc-operator.v1.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:19:30.664000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "hspc-operator",
      "provided_apis": [
        {
          "group": "csi.hitachi.com",
          "kind": "HSPC",
          "plural": "hspcs",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:5a8fce133552bd933fd51663cc37a139b461ea6b9b34fb84224fba2747579e72",
          "image": "registry.connect.redhat.com/hitachi/hspc-operator@sha256:5a8fce133552bd933fd51663cc37a139b461ea6b9b34fb84224fba2747579e72",
          "name": "hspc-operator-5a8fce133552bd933fd51663cc37a139b461ea6b9b34fb84224fba2747579e72-annotation"
        },
        {
          "digest": "sha256:5a8fce133552bd933fd51663cc37a139b461ea6b9b34fb84224fba2747579e72",
          "image": "registry.connect.redhat.com/hitachi/hspc-operator@sha256:5a8fce133552bd933fd51663cc37a139b461ea6b9b34fb84224fba2747579e72",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.7.0",
      "version_original": "1.7.0"
    },
    {
      "_id": "6138a23e2c743eb28fafdb31",
      "alm_examples": [
        {
          "api_version": "dynatrace.com/v1alpha1",
          "kind": "DynaKube",
          "metadata": {
            "name": "dynakube",
            "namespace": "dynatrace"
          },
          "spec": {
            "activeGate": {
              "image": ""
            },
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api",
            "classicFullStack": {
              "enabled": true,
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master",
                  "operator": "Exists"
                }
              ]
            },
            "kubernetesMonitoring": {
              "enabled": true
            },
            "oneAgent": {
              "image": ""
            },
            "routing": {
              "enabled": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-operator-bundle@sha256:1a3898915535373eed8f860b8eb906fa2ecaebbb95c4e2d74488e12ca1540f9b",
      "bundle_path_digest": "sha256:1a3898915535373eed8f860b8eb906fa2ecaebbb95c4e2d74488e12ca1540f9b",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-08T11:45:02.456000+00:00",
      "csv_description": "The Dynatrace Operator supports rollout and lifecycle of various Dynatrace components in Kubernetes and OpenShift.\n\nAs of launch, the Dynatrace Operator can be used to deploy a containerized ActiveGate for Kubernetes API monitoring. New capabilities will be added to the Dynatrace Operator over time including metric routing, and API monitoring for AWS, Azure, GCP, and vSphere.\n\nWith v0.2.0 we added the classicFullStack functionality which allows rolling out the OneAgent to your Kubernetes cluster.\nFurthermore, the Dynatrace Operator is now capable of rolling out a containerized ActiveGate for routing the OneAgent traffic.\n\n### Installation\nOnce you've installed the Dynatrace Operator, you can create a DynaKube custom resource.\n\nFirst, please add a Secret within the Project you've deployed the Dynatrace Operator to, which would contain your API and PaaS tokens. Create tokens of type *Dynatrace API* (`API_TOKEN`) and *Platform as a Service* (`PAAS_TOKEN`) and use their values in the following commands respectively.\n\nFor assistance please refer to [Create user-generated access tokens](https://www.dynatrace.com/support/help/shortlink/token#create-user-generated-access-tokens).\n\n``` $ oc -n <project> create secret generic dynakube --from-literal=\"apiToken=API_TOKEN\" --from-literal=\"paasToken=PAAS_TOKEN\" ```\n\nYou may update this Secret at any time to rotate the tokens.\n\nAfter creation of the secret add the DynaKube object in the project where the Dynatrace Operator has been deployed, configured to your needs.\n\n### Required Parameters\n* `apiUrl` - provide the URL to the API of your Dynatrace environment. In Dynatrace SaaS it will look like `https://<ENVIRONMENTID>.live.dynatrace.com/api` . In Dynatrace Managed like `https://<YourDynatraceServerURL>/e/<ENVIRONMENTID>/api` .\n\n### Advanced Options\n* **Disable Certificate Checking** - disable any certificate validation that may interact poorly with proxies with in your cluster\n* **Image Override** - use a copy of the ActiveGate container image from a registry other than Docker's or Red Hat's\n\n#### Kubernetes Monitoring\n* **Kubernetes Monitoring** - when enabled the Dynatrace Operator will create a containerized ActiveGate with the capability to monitor your OpenShift cluster\n* **Replicas** - defines how many replicas of the containerized ActiveGate should be created\n* **NodeSelectors** - select a subset of your cluster's nodes to run the Dynatrace ActiveGate on, based on labels\n* **Environment variables** - define environment variables for the ActiveGate container\n\nFor a complete list of supported parameters please consult the [Operator Deploy Guide](https://www.dynatrace.com/support/help/shortlink/openshift-deploy).\n\n### Help\nYou can find more about our instructions in our [documentation](https://www.dynatrace.com/support/help/shortlink/openshift-deploy#install-dynatrace-operator).\n",
      "csv_display_name": "Dynatrace Operator",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-operator.v0.2.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:23:50.944000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "dynatrace-operator",
      "provided_apis": [
        {
          "group": "dynatrace.com",
          "kind": "DynaKube",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:afac1c0f4035ac032a0224f1214e12ab58fb6262f90e630598482abbfdccbac3",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:afac1c0f4035ac032a0224f1214e12ab58fb6262f90e630598482abbfdccbac3",
          "name": "dynatrace-operator-afac1c0f4035ac032a0224f1214e12ab58fb6262f90e630598482abbfdccbac3-annotation"
        },
        {
          "digest": "sha256:afac1c0f4035ac032a0224f1214e12ab58fb6262f90e630598482abbfdccbac3",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:afac1c0f4035ac032a0224f1214e12ab58fb6262f90e630598482abbfdccbac3",
          "name": "dynatrace-operator"
        },
        {
          "digest": "sha256:3975446f23bfd4cab0930d3cba62a795893f9085084e6887121ceaa94391c849",
          "image": "registry.connect.redhat.com/dynatrace/oneagent@sha256:3975446f23bfd4cab0930d3cba62a795893f9085084e6887121ceaa94391c849",
          "name": "dynatrace_oneagent"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.2.2",
      "version_original": "0.2.2"
    },
    {
      "_id": "613dc3dcc9bc35f21dc4a26e",
      "alm_examples": [
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Adam",
          "metadata": {
            "name": "example-adam",
            "namespace": "appdynamics"
          },
          "spec": {
            "controllerUrl": "https://saas.appdynamics.com"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Clusteragent",
          "metadata": {
            "name": "k8s-cluster-agent",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "appName": "Cluster1",
            "controllerUrl": "https://saas.appdynamics.com",
            "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
            "serviceAccountName": "appdynamics-cluster-agent",
            "stdoutLogging": "true"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "InfraViz",
          "metadata": {
            "name": "appd-infraviz",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "controllerUrl": "https://saas.appdynamics.com",
            "enableDockerViz": "false",
            "enableMasters": true,
            "globalAccount": "customer1_12345",
            "netVizPort": 3892,
            "stdoutLogging": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/appdynamics/cluster-agent-operator-bundle@sha256:344e06684771a54b6a74d6d05713160381ffed8a472f0e1dcc4321ac21015c21",
      "bundle_path_digest": "sha256:344e06684771a54b6a74d6d05713160381ffed8a472f0e1dcc4321ac21015c21",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-12T09:09:48.718000+00:00",
      "csv_description": "AppDynamics Operator simplifies the configuration and lifecycle management of the AppDynamics ClusterAgent and the AppDynamics Machine Agent on different Kubernetes distributions and OpenShift. \nThe Operator encapsulates key operational knowledge on how to configure and upgrade the ClusterAgent and the Machine Agent. \nIt knows, for example, which configuration changes are benign and do not require restart of the ClusterAgent, \nwhich minimizes unnecesary load on the cluster API server.\n\n\n## Operator deployment\n\n* Create namespace for AppDynamics\n```\n  kubectl create namespace appdynamics\n```\n\n* Create Secret `cluster-agent-secret`. Set \"controller-key\" \nto the access key to the AppDynamics controller.  \n\n```\nkubectl -n appdynamics create secret generic cluster-agent-secret --from-literal=controller-key=\"<controller-access-key>\"\n```\n\n* Update the image reference in the Operator deployment spec, if necessary.  \n\nFor additional details refer to [this documentation](https://github.com/Appdynamics/appdynamics-operator)\n",
      "csv_display_name": "Appdynamics Operator",
      "csv_metadata_description": "End to end monitoring of applications on Kubernetes and OpenShift clusters with AppDynamics.",
      "csv_name": "appdynamics-operator.v0.6.11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:51:48.735000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "appdynamics-operator",
      "provided_apis": [
        {
          "group": "appdynamics.com",
          "kind": "Adam",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Clusteragent",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Clustercollector",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Hostcollector",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "InfraViz",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "cluster-agent-operator-9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950-annotation"
        },
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "appdynamics-operator"
        },
        {
          "digest": "sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "name": "cluster-agent-5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.6.11",
      "version_original": "0.6.11"
    },
    {
      "_id": "613ee1f2d63f43cf6ee374ea",
      "alm_examples": [
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Adam",
          "metadata": {
            "name": "example-adam",
            "namespace": "appdynamics"
          },
          "spec": {
            "controllerUrl": "https://saas.appdynamics.com"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Clusteragent",
          "metadata": {
            "name": "k8s-cluster-agent",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "appName": "Cluster1",
            "controllerUrl": "https://saas.appdynamics.com",
            "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
            "serviceAccountName": "appdynamics-cluster-agent",
            "stdoutLogging": "true"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "InfraViz",
          "metadata": {
            "name": "appd-infraviz",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "controllerUrl": "https://saas.appdynamics.com",
            "enableDockerViz": "false",
            "enableMasters": true,
            "globalAccount": "customer1_12345",
            "netVizPort": 3892,
            "stdoutLogging": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/appdynamics/cluster-agent-operator-bundle@sha256:344e06684771a54b6a74d6d05713160381ffed8a472f0e1dcc4321ac21015c21",
      "bundle_path_digest": "sha256:344e06684771a54b6a74d6d05713160381ffed8a472f0e1dcc4321ac21015c21",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-13T05:30:26.281000+00:00",
      "csv_description": "AppDynamics Operator simplifies the configuration and lifecycle management of the AppDynamics ClusterAgent and the AppDynamics Machine Agent on different Kubernetes distributions and OpenShift. \nThe Operator encapsulates key operational knowledge on how to configure and upgrade the ClusterAgent and the Machine Agent. \nIt knows, for example, which configuration changes are benign and do not require restart of the ClusterAgent, \nwhich minimizes unnecesary load on the cluster API server.\n\n\n## Operator deployment\n\n* Create namespace for AppDynamics\n```\n  kubectl create namespace appdynamics\n```\n\n* Create Secret `cluster-agent-secret`. Set \"controller-key\" \nto the access key to the AppDynamics controller.  \n\n```\nkubectl -n appdynamics create secret generic cluster-agent-secret --from-literal=controller-key=\"<controller-access-key>\"\n```\n\n* Update the image reference in the Operator deployment spec, if necessary.  \n\nFor additional details refer to [this documentation](https://github.com/Appdynamics/appdynamics-operator)\n",
      "csv_display_name": "Appdynamics Operator",
      "csv_metadata_description": "End to end monitoring of applications on Kubernetes and OpenShift clusters with AppDynamics.",
      "csv_name": "appdynamics-operator.v0.6.11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:18:48.534000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "appdynamics-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "cluster-agent-operator-9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950-annotation"
        },
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "appdynamics-operator"
        },
        {
          "digest": "sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "name": "cluster-agent-5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.6.11",
      "version_original": "0.6.11"
    },
    {
      "_id": "613ee24fa5ebcd070d163d7c",
      "alm_examples": [
        {
          "api_version": "dynatrace.com/v1alpha1",
          "kind": "DynaKube",
          "metadata": {
            "name": "dynakube",
            "namespace": "dynatrace"
          },
          "spec": {
            "activeGate": {
              "image": ""
            },
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api",
            "classicFullStack": {
              "enabled": true,
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master",
                  "operator": "Exists"
                }
              ]
            },
            "kubernetesMonitoring": {
              "enabled": true
            },
            "oneAgent": {
              "image": ""
            },
            "routing": {
              "enabled": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-operator-bundle@sha256:1a3898915535373eed8f860b8eb906fa2ecaebbb95c4e2d74488e12ca1540f9b",
      "bundle_path_digest": "sha256:1a3898915535373eed8f860b8eb906fa2ecaebbb95c4e2d74488e12ca1540f9b",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-13T05:31:59.788000+00:00",
      "csv_description": "The Dynatrace Operator supports rollout and lifecycle of various Dynatrace components in Kubernetes and OpenShift.\n\nAs of launch, the Dynatrace Operator can be used to deploy a containerized ActiveGate for Kubernetes API monitoring. New capabilities will be added to the Dynatrace Operator over time including metric routing, and API monitoring for AWS, Azure, GCP, and vSphere.\n\nWith v0.2.0 we added the classicFullStack functionality which allows rolling out the OneAgent to your Kubernetes cluster.\nFurthermore, the Dynatrace Operator is now capable of rolling out a containerized ActiveGate for routing the OneAgent traffic.\n\n### Installation\nOnce you've installed the Dynatrace Operator, you can create a DynaKube custom resource.\n\nFirst, please add a Secret within the Project you've deployed the Dynatrace Operator to, which would contain your API and PaaS tokens. Create tokens of type *Dynatrace API* (`API_TOKEN`) and *Platform as a Service* (`PAAS_TOKEN`) and use their values in the following commands respectively.\n\nFor assistance please refer to [Create user-generated access tokens](https://www.dynatrace.com/support/help/shortlink/token#create-user-generated-access-tokens).\n\n``` $ oc -n <project> create secret generic dynakube --from-literal=\"apiToken=API_TOKEN\" --from-literal=\"paasToken=PAAS_TOKEN\" ```\n\nYou may update this Secret at any time to rotate the tokens.\n\nAfter creation of the secret add the DynaKube object in the project where the Dynatrace Operator has been deployed, configured to your needs.\n\n### Required Parameters\n* `apiUrl` - provide the URL to the API of your Dynatrace environment. In Dynatrace SaaS it will look like `https://<ENVIRONMENTID>.live.dynatrace.com/api` . In Dynatrace Managed like `https://<YourDynatraceServerURL>/e/<ENVIRONMENTID>/api` .\n\n### Advanced Options\n* **Disable Certificate Checking** - disable any certificate validation that may interact poorly with proxies with in your cluster\n* **Image Override** - use a copy of the ActiveGate container image from a registry other than Docker's or Red Hat's\n\n#### Kubernetes Monitoring\n* **Kubernetes Monitoring** - when enabled the Dynatrace Operator will create a containerized ActiveGate with the capability to monitor your OpenShift cluster\n* **Replicas** - defines how many replicas of the containerized ActiveGate should be created\n* **NodeSelectors** - select a subset of your cluster's nodes to run the Dynatrace ActiveGate on, based on labels\n* **Environment variables** - define environment variables for the ActiveGate container\n\nFor a complete list of supported parameters please consult the [Operator Deploy Guide](https://www.dynatrace.com/support/help/shortlink/openshift-deploy).\n\n### Help\nYou can find more about our instructions in our [documentation](https://www.dynatrace.com/support/help/shortlink/openshift-deploy#install-dynatrace-operator).\n",
      "csv_display_name": "Dynatrace Operator",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-operator.v0.2.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:23:23.644000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "dynatrace-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:afac1c0f4035ac032a0224f1214e12ab58fb6262f90e630598482abbfdccbac3",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:afac1c0f4035ac032a0224f1214e12ab58fb6262f90e630598482abbfdccbac3",
          "name": "dynatrace-operator-afac1c0f4035ac032a0224f1214e12ab58fb6262f90e630598482abbfdccbac3-annotation"
        },
        {
          "digest": "sha256:afac1c0f4035ac032a0224f1214e12ab58fb6262f90e630598482abbfdccbac3",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:afac1c0f4035ac032a0224f1214e12ab58fb6262f90e630598482abbfdccbac3",
          "name": "dynatrace-operator"
        },
        {
          "digest": "sha256:3975446f23bfd4cab0930d3cba62a795893f9085084e6887121ceaa94391c849",
          "image": "registry.connect.redhat.com/dynatrace/oneagent@sha256:3975446f23bfd4cab0930d3cba62a795893f9085084e6887121ceaa94391c849",
          "name": "dynatrace_oneagent"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.2.2",
      "version_original": "0.2.2"
    },
    {
      "_id": "613ee336a5ebcd070d163d7d",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {
            "autopilot": {
              "enabled": false
            }
          }
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:f77759337cc4364cc169b25af560ba93386cd2516fbfe022b2dfc8305405bdba",
      "bundle_path_digest": "sha256:f77759337cc4364cc169b25af560ba93386cd2516fbfe022b2dfc8305405bdba",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-13T05:35:50.115000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:04:05.866000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.5.1",
      "version_original": "1.5.1"
    },
    {
      "_id": "613ee419c9bc35f21dc4a278",
      "alm_examples": [
        {
          "api_version": "kpow.io/v1beta1",
          "kind": "Kpow",
          "metadata": {
            "name": "kpow-sample"
          },
          "spec": {
            "bootstrap": "",
            "data_policy_configuration": {
              "data_policy_configuration_file": ""
            },
            "environment_name": "change me",
            "github_sso_options": {
              "auth_provider_type": "",
              "openid_api_uri": "",
              "openid_auth_uri": "",
              "openid_client_id": "",
              "openid_client_secret": "",
              "openid_landing_uri": "",
              "openid_token_uri": ""
            },
            "global_access_configuration": {
              "allow_broker_edit": "",
              "allow_connect_create": "",
              "allow_connect_edit": "",
              "allow_group_edit": "",
              "allow_schema_create": "",
              "allow_schema_edit": "",
              "allow_topic_create": "",
              "allow_topic_delete": "",
              "allow_topic_edit": "",
              "allow_topic_inspect": "",
              "allow_topic_produce": ""
            },
            "https_configuration": {
              "enable_https": false,
              "https_keystore": "",
              "https_keystore_password": "",
              "https_keystore_type": "",
              "https_truststore": "",
              "https_truststore_password": "",
              "https_truststore_type": ""
            },
            "kafka_cluster_configuration": {
              "sasl_jaas_config": "",
              "sasl_login_callback_handler_class": "",
              "sasl_mechanism": "",
              "security_protocol": "",
              "ssl_cipher_suites": "",
              "ssl_enabled_protocols": "",
              "ssl_endpoint_identification_algorithm": "",
              "ssl_key_password": "",
              "ssl_keymanager_algorithm": "",
              "ssl_keystore_location": "",
              "ssl_keystore_password": "",
              "ssl_keystore_type": "",
              "ssl_protocol": "",
              "ssl_provider": "",
              "ssl_secure_random_implementation": "",
              "ssl_trustmanager_algorithm": "",
              "ssl_truststore_location": "",
              "ssl_truststore_password": "",
              "ssl_truststore_type": ""
            },
            "kafka_connect_configuration": {
              "connect_auth": "",
              "connect_basic_auth_pass": "",
              "connect_basic_auth_user": "",
              "connect_group_id": "",
              "connect_offset_storage_topic": "",
              "connect_rest_url": ""
            },
            "license_configuration": {
              "license_code": "your-licence-code",
              "license_expiry": "your-license-expiry",
              "license_id": "your-license-id",
              "license_signature": "e.g. aa8ac6df95...",
              "licensee": "your-org"
            },
            "live_mode_configuration": {
              "live_mode_enabled": "",
              "live_mode_interval_ms": "",
              "live_mode_max_concurrent_users": "",
              "live_mode_period_ms": ""
            },
            "okta_sso_options": {
              "auth_provider_type": "",
              "okta_organisation": "",
              "openid_client_id": "",
              "openid_client_secret": "",
              "openid_landing_uri": ""
            },
            "prometheus_egress": false,
            "rbac_configuration": {
              "rbac_configuration_file": ""
            },
            "saml_sso_options": {
              "auth_provider_type": "",
              "saml_acs_url": "",
              "saml_cert": "",
              "saml_metadata_file": "",
              "saml_relying_party_identifier": ""
            },
            "schema_registry_configuration": {
              "schema_registry_auth": "",
              "schema_registry_name": "",
              "schema_registry_password": "",
              "schema_registry_url": "",
              "schema_registry_user": ""
            },
            "serdis_configuration": {
              "available_key_serdes": "",
              "available_value_serdes": "",
              "custom_serdes": "",
              "default_key_serdes": "",
              "default_value_serdes": ""
            },
            "slack_integration": {
              "slack_webhook_url": ""
            },
            "system_configuration": {
              "http_port": "",
              "replication_factor": "",
              "show_splash": "",
              "snapshot_parallelism": ""
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/operatr-io/kpow-operator-bundle@sha256:eb62d828a556a1bfb3381ae46355332e52ca63143a66376002c1c15d52646543",
      "bundle_path_digest": "sha256:eb62d828a556a1bfb3381ae46355332e52ca63143a66376002c1c15d52646543",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-13T05:39:37.241000+00:00",
      "csv_description": "\nUse kPow to monitor and manage your Kafka Clusters, Schema Registries, and Connect Clusters.\n\nThe minimum required configuration to run kPow is **license details and a bootstrap URL**.\n\nIf you have a Red Hat Marketplace subscription to kPow you will receive a license directly.\n\nSign-up online to receive a [free 30-day trial license](https://kpow.io/try) in minutes.\n\nkPow is compatible with Red Hat AMQ Streams.\n\n----\n\n##kPow CR Spec Details\n\nAfter you have installed the KPow operator, create a CR to get an instance of KPow. You can setup a Kpow instance with custom configuration using the specifications given in the CR. Refer below table to understand the available specifications for custom configuration of KPow. Set the required value for specifications while creating the CR.\n\n-----\n\nRequired Configuration            |            Details / Example\n----------------------------------|-----------------------------\n**License Details**               | If you need a license, start a [free 30-day trial today](https://kpow.io/try).\n`license_id`                      | a620baa9-956e-43bf-9bc5-adf635533c4a\n`license_code`                      | RH_MARKETPLACE\n`licensee`                          | Your Organisation\n`license_expiry`                    | \"2022-28-12\" - quoted to ensure expiry field interpreted as a string, not a date.\n`license_signature`                 | 8094DEC9...\n**Minimum Configuration**         | kPow will start with only license details and a Kafka bootstrap URL.\n`bootstrap`                        | The Bootstrap URL of your Kafka Cluster\n\nOptional Configuration            |            Details / Example\n----------------------------------|-----------------------------\n**System Options**                | General system configuration\n`environment_name`                  | A meaningful name for this installation, e.g. \"Trade Book (Staging)\"\n`http_port`                         | The port that kPow will serve its UI (default: 3000)\n`show_splash`                       | Show the kPow splash screen for each new user session (default: true)\n[**System HTTPS Options**](https://docs.kpow.io/features/https-connections) | the kPow UI can be served over HTTPS\n`enable_https`                      | default: false \n`https_keystore_location`           | e.g. \"/ssl/https.keystore.jks\"\n`https_keystore_type`               | e.g. JKS\n`https_keystore_password`           | e.g. \"ssl-key-pass\"\n`https_truststore_location`         | e.g. \"/ssl/https.truststore.jks\"\n`https_truststore_type`             | e.g. JKS\n`https_truststore_password`         | e.g. \"ssl-trust-pass\"\n[**Kafka Cluster Options**](https://kafka.apache.org/documentation/#adminclientconfigs) | kPow uses the same Kafka Cluster connection options as a standard consumer, producer, or admin client.\n`security_protocol`                 | e.g. SASL_SSL\n`sasl_mechanism`                    | e.g. PLAIN\n`sasl_jaas_config`                  | e.g. \"org.apache.kafka.common.security.plain.Plain..\"\n`sasl_login_callback_handler_class` | e.g. \"com.corp.kafka.security.sasl.oauth.KafkaBrokerTokenCreator\"\n`ssl_keystore_location`             | e.g. \"/ssl/kafka.keystore.jks\"\n`ssl_keystore_password`             | e.g. \"keystore-pass-123\"\n`ssl_key_password`                  | e.g. \"key-pass-123\"\n`ssl_keystore_type`                 | e.g. JKS\n`ssl_keymanager_algorithm`          | e.g. SunX509\n`ssl_truststore_location`           | e.g. \"/ssl/kafka.truststore.jks\"\n`ssl_truststore_password`           | e.g. \"trust-pass-123\"\n`ssl_truststore_type`               | e.g. JKS\n`ssl_trustmanager_algorithm`        | e.g. PKIX\n`ssl_endpoint_identification_algorithm` | e.g. https\n`ssl_provider`                      | e.g. \"default\"\n`ssl_cipher_suites`                 | e.g. \"default: \n`ssl_protocol`                      | e.g. TLS\n`ssl_enabled_protocols`             | e.g. \"TLSv.12,TLSv1.1,TLSv1\"\n`ssl_secure_random_implementation`  | e.g. SHA1PRNG\n[**Schema Registry**](https://docs.kpow.io/config/schema-registry) | Monitor and manage a Schema Registry connected to your Kafka Cluster\n`schema_registry_url`               | e.g. \"https://registry-host\"\n`schema_registry_auth`              | e.g. USER_INFO\n`schema_registry_user`              | e.g. registry-user\n`schema_registry_password`          | e.g. registry-pass\n[**Kafka Connect**](https://docs.kpow.io/config/kafka-connect) | Monitor and manage a Kafka Connect Cluster connected to your Kafka Cluster\n`connect_rest_url`                  | e.g. http://localhost:8083\n`connect_auth`                      | e.g. BASIC\n`connect_basic_auth_user`           | e.g. connect-user\n`connect_basic_auth_pass`           | e.g. connect-pass\n`connect_group_id`                  | e.g. connect-group-id\n`connect_offset_storage_topic`      | e.g. connect-topic\n[**Live Mode**](https://docs.kpow.io/features/live-mode) | View and monitor your Kafka resources in near-realtime\n`live_mode_enabled`                 | default: true\n`live_mode_period_ms`               | The duration of a live mode session, default: 60000ms / one minute\n`live_mode_interval`                | The duration between live mode snapshot gathering, default: 5000ms / five seconds\n`live_mode_max_concurrent_users`    | The number of concurrent live mode sessions that may be active, default: 2\n**Data Inspect**                  | Provide custom serdes, set default serdes, or restrict serdes available to users\n[custom_serdes](https://docs.kpow.io/features/data-inspect/serdes#custom-serdes) | e.g. \"io.kpow.SerdeOne,io.kpow.SerdeTwo\"\n`default_key_serdes`                | e.g. \"JSON\"\n`default_value_serdes`              | e.g. \"AVRO\"\n`available_key_serdes`              | e.g. \"JSON,String,Transit / JSON\"\n`available_value_serdes`            | e.g. \"JSON,String,io.kpow.SerdeOne\"\n[**Prometheus Endpoints**](https://docs.kpow.io/features/prometheus) | kPow provides metrics and offsets via Prometheus Endpoints for scraping into your enterprise monitoring system of choice.\n`prometheus_egress`                 | default: false\n[**Slack Integration**](https://docs.kpow.io/features/slack-integration) | kPow can send audit log records to a slack channel of your choosing\n`slack_webhook_url`                 | e.g \"https://hooks.slack.com/services/...\"\n[**Simple Access Control**](https://docs.kpow.io/user-authorization/simple-access-control) | kPow supports simple control of users actions via global access controls\n`allow_topic_create`                | default: false - Users may create new topics\n`allow_topic_delete`                | default: false - Users may delete existing topics\n`allow_topic_inspect`               | default: false - Users may view topic key and value content\n`allow_topic_produce`              | default: false - Users may produce new messages to topics\n`allow_topic_edit`                  | default: false - Users may edit topic configuration\n`allow_broker_edit`                 | default: false - Users may edit broker configuration\n`allow_group_edit`                  | default: false - Users may edit and delete consumer groups and group offsets\n`allow_schema_edit`                 | default: false - Users may edit schemas and subjects\n`allow_schema_create`               | default: false - Users may create new schemas and subjects\n`allow_connect_create`              | default: false - Users may create new connectors and tasks\n`allow_connect_edit`                | default: false - Users may edit, pause, delete, and restart connectors and tasks\n[**Role Based Access Control**](https://docs.kpow.io/user-authorization/role-based-access-control) | kPow supports Role Based Access Control when used in conjunction with User Authentication\n`rbac_configuration_file`           | e.g. \"/path/to/rbac-config.yaml\"\n[**Data Policies**](https://docs.kpow.io/features/data-policies) | kPow supports masking and redaction of sensitive data in Data Inspect and kREPL results\n`data_policy_configuration_file`       | e.g. \"/path/to/masking/config.yaml\"\n[**User Authentication**](https://docs.kpow.io/user-authentication/overview) | kPow supports a number of methods of User Authentication including SAML, Okta, and OpenID\n[**Okta SSO**](https://docs.kpow.io/user-authentication/openid/okta) | Authenticate users with Okta \n`auth_provider_type`                | \"okta\"\n`okta_organisation`                 | e.g. \"your-organisation\"\n`openid_client_id`                  | The 'Client ID' found in the \"Client Credentials\" section of your Okta integration\n`openid_client_secret`              | The 'Client Secret' found in the \"Client Credentials\" section of your Okta integration\n`openid_landing_uri`                | e.g. \"https://staging.kpow.z-corp.com\"\n[**Github SSO**](https://docs.kpow.io/user-authentication/openid/github) | Authenticate users with Github (including Github Enterprise)\n`auth_provider_type`                | \"github\"\n`openid_token_id`                   | e.g. \"https://github.com/login/oauth/access_token\" or \"[GHE Server URL]/login/oauth/access_token\"\n`openid_auth_uri`                   | e.g. \"https://github.com/login/oauth/authorize\" or \"[GHE Server URL]/login/oauth/authorize\"\n`openid_api_uri`                    | e.g. \"https://api.github.com/user\" or, \"[GHE Server URL]/api/v3/user\"\n`openid_client_id`                  | e.g. The 'Client ID' found in your configured Github Oath App\n`openid_client_secret`              | The 'Client Secret' found in your configured Github Oath App\n`openid_landing_uri`                | e.g. \"https://staging.kpow.z-corp.com/\"\n[**SAML SSO**](https://docs.kpow.io/user-authentication/saml) | Authenticate users with SAML (custom, Azure AD, AWS SSO, Okta, etc)\n`auth_provider_type`                | \"saml\"\n`saml_relying_party_identifier`     | e.g. \"kpow.io\"\n`saml_asc_url`                      | e.g. \"https://kpow.corp.com/saml\"\n`saml_metadata_file`                | e.g. \"/opt/kpow/aws-metadata.xml\" (optional)\n`saml_cert`                         | e.g. \"/var/certs/saml-cert.cer\"\n\n----\n\n## Providing Configuration Files to kPow\n\nSome of the configuration above is provided as files (e.g. YAML or Keystores). You will need to provide these iles in the form of secrets or configmaps.\n\nFor Example the specification ```https_keystore_location``` needs a keystore file in location *\"/ssl/https.keystore.jks\"*.\n\nThe Operator expectes the file in the form of a secret to be available in the namespace where its installed. \n\nPlease follow below instructions to know how to create the Secret or configmap for such CR Specifications listed above:\n\n**Command to Create ConfigMaps from a file:**\n\n```\n  oc create configmap <name of configmap> --from-file <file name> -n <project-name>\n```\n\n**Command to create secrets from a file:**\n\n```\n  oc create secret generic <name of secret> --from-file <file name> -n <project-name>\n```\n\n  **NOTE**:The configmaps and secrets must be created prior to running the operator and must adhere to the names mentioned below.\t\n  \n----    \nCR Spec          \t  \t\t\t\t\t\t\t    \t|       CR Value\t\t\t|  Creation command\n--------------------------------------------------------|---------------------------|-----------------------------\n`rbac_configuration.rbac_configuration_file`\t\t\t\t|/opt/kpow/rbac-config.yaml\t|oc create rbac-configuration --from-file rbac-config.yaml -n <project-name\\>\n`data_policy_configuration. data_policy_configuration_file`|/opt/kpow/data-config.yml\t|oc create data-policy-configuration --from-file data-config.yml -n <project-name\\>\n`kafka_cluster_configuration.ssl_keystore_location`\t\t|/ssl/kafka.keystore.jks\t|oc create secret generic kafka-keystore --from-file kafka.keystore.jks -n <project-name\\>\n`kafka_cluster_configuration.ssl_truststore_location`\t\t|/ssl/kafka.truststore.jks\t|oc create secret generic kafka-truststore --from-file kafka.truststore.jks -n <project-name\\>\n`https_configuration.https_keystore`\t\t\t\t\t\t|/ssl/https.keystore.jks\t|oc create secret generic https-keystore --from-file https.keystore.jks -n <project-name\\>\n`https_configuration.https_truststore`\t\t\t\t\t|/ssl/https.truststore.jks\t|oc create secret generic https-truststore --from-file https.truststore.jks -n   <project-name\\>\n`saml_sso_options.saml_metadata_file`\t\t\t\t\t\t|/opt/kpow/aws-metadata.xml\t|oc create saml-metadata --from-file aws-metadata.xml -n <project-name\\>\n`saml_sso_options.saml_cert`\t\t\t\t\t\t\t\t|/var/certs/saml-cert.cer\t|oc create secret generic saml-cert --from-file saml-cert.cer -n <project-name\\>\n",
      "csv_display_name": "kPow for Apache Kafka",
      "csv_metadata_description": "kPow is a toolkit for engineers who build, manage, and maintain systems powered by Apache Kafka",
      "csv_name": "kpow-io.v1.0.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:14:30.437000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "kpow-io-certified",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "image": "registry.connect.redhat.com/operatr-io/kpow@sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "name": "kpow-9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185-annotation"
        },
        {
          "digest": "sha256:d1b17c96188a5f2748755f4de355a0f103e93b488108dbefb4c4b5714759f510",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:d1b17c96188a5f2748755f4de355a0f103e93b488108dbefb4c4b5714759f510",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:84fc5cafcf88e5334fbdd540da6d340ca401a69360560c7dde448c03c21a724f",
          "image": "registry.connect.redhat.com/operatr-io/kpow-operator@sha256:84fc5cafcf88e5334fbdd540da6d340ca401a69360560c7dde448c03c21a724f",
          "name": "manager"
        },
        {
          "digest": "sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "image": "registry.connect.redhat.com/operatr-io/kpow@sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "name": "kpow"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.4",
      "version_original": "1.0.4"
    },
    {
      "_id": "613ee473c9bc35f21dc4a279",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {
            "autopilot": {
              "enabled": false
            }
          }
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:f77759337cc4364cc169b25af560ba93386cd2516fbfe022b2dfc8305405bdba",
      "bundle_path_digest": "sha256:f77759337cc4364cc169b25af560ba93386cd2516fbfe022b2dfc8305405bdba",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-13T05:41:07.839000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:17:46.633000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.5.1",
      "version_original": "1.5.1"
    },
    {
      "_id": "613f28f8d63f43cf6ee37505",
      "alm_examples": [
        {
          "api_version": "kpow.io/v1beta1",
          "kind": "Kpow",
          "metadata": {
            "name": "kpow-sample"
          },
          "spec": {
            "bootstrap": "",
            "data_policy_configuration": {
              "data_policy_configuration_file": ""
            },
            "environment_name": "change me",
            "github_sso_options": {
              "auth_provider_type": "",
              "openid_api_uri": "",
              "openid_auth_uri": "",
              "openid_client_id": "",
              "openid_client_secret": "",
              "openid_landing_uri": "",
              "openid_token_uri": ""
            },
            "global_access_configuration": {
              "allow_broker_edit": "",
              "allow_connect_create": "",
              "allow_connect_edit": "",
              "allow_group_edit": "",
              "allow_schema_create": "",
              "allow_schema_edit": "",
              "allow_topic_create": "",
              "allow_topic_delete": "",
              "allow_topic_edit": "",
              "allow_topic_inspect": "",
              "allow_topic_produce": ""
            },
            "https_configuration": {
              "enable_https": false,
              "https_keystore": "",
              "https_keystore_password": "",
              "https_keystore_type": "",
              "https_truststore": "",
              "https_truststore_password": "",
              "https_truststore_type": ""
            },
            "kafka_cluster_configuration": {
              "sasl_jaas_config": "",
              "sasl_login_callback_handler_class": "",
              "sasl_mechanism": "",
              "security_protocol": "",
              "ssl_cipher_suites": "",
              "ssl_enabled_protocols": "",
              "ssl_endpoint_identification_algorithm": "",
              "ssl_key_password": "",
              "ssl_keymanager_algorithm": "",
              "ssl_keystore_location": "",
              "ssl_keystore_password": "",
              "ssl_keystore_type": "",
              "ssl_protocol": "",
              "ssl_provider": "",
              "ssl_secure_random_implementation": "",
              "ssl_trustmanager_algorithm": "",
              "ssl_truststore_location": "",
              "ssl_truststore_password": "",
              "ssl_truststore_type": ""
            },
            "kafka_connect_configuration": {
              "connect_auth": "",
              "connect_basic_auth_pass": "",
              "connect_basic_auth_user": "",
              "connect_group_id": "",
              "connect_offset_storage_topic": "",
              "connect_rest_url": ""
            },
            "license_configuration": {
              "license_code": "your-licence-code",
              "license_expiry": "your-license-expiry",
              "license_id": "your-license-id",
              "license_signature": "e.g. aa8ac6df95...",
              "licensee": "your-org"
            },
            "live_mode_configuration": {
              "live_mode_enabled": "",
              "live_mode_interval_ms": "",
              "live_mode_max_concurrent_users": "",
              "live_mode_period_ms": ""
            },
            "okta_sso_options": {
              "auth_provider_type": "",
              "okta_organisation": "",
              "openid_client_id": "",
              "openid_client_secret": "",
              "openid_landing_uri": ""
            },
            "prometheus_egress": false,
            "rbac_configuration": {
              "rbac_configuration_file": ""
            },
            "saml_sso_options": {
              "auth_provider_type": "",
              "saml_acs_url": "",
              "saml_cert": "",
              "saml_metadata_file": "",
              "saml_relying_party_identifier": ""
            },
            "schema_registry_configuration": {
              "schema_registry_auth": "",
              "schema_registry_name": "",
              "schema_registry_password": "",
              "schema_registry_url": "",
              "schema_registry_user": ""
            },
            "serdis_configuration": {
              "available_key_serdes": "",
              "available_value_serdes": "",
              "custom_serdes": "",
              "default_key_serdes": "",
              "default_value_serdes": ""
            },
            "slack_integration": {
              "slack_webhook_url": ""
            },
            "system_configuration": {
              "http_port": "",
              "replication_factor": "",
              "show_splash": "",
              "snapshot_parallelism": ""
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/operatr-io/kpow-operator-bundle@sha256:eb62d828a556a1bfb3381ae46355332e52ca63143a66376002c1c15d52646543",
      "bundle_path_digest": "sha256:eb62d828a556a1bfb3381ae46355332e52ca63143a66376002c1c15d52646543",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-13T10:33:28.374000+00:00",
      "csv_description": "\nUse kPow to monitor and manage your Kafka Clusters, Schema Registries, and Connect Clusters.\n\nThe minimum required configuration to run kPow is **license details and a bootstrap URL**.\n\nIf you have a Red Hat Marketplace subscription to kPow you will receive a license directly.\n\nSign-up online to receive a [free 30-day trial license](https://kpow.io/try) in minutes.\n\nkPow is compatible with Red Hat AMQ Streams.\n\n----\n\n##kPow CR Spec Details\n\nAfter you have installed the KPow operator, create a CR to get an instance of KPow. You can setup a Kpow instance with custom configuration using the specifications given in the CR. Refer below table to understand the available specifications for custom configuration of KPow. Set the required value for specifications while creating the CR.\n\n-----\n\nRequired Configuration            |            Details / Example\n----------------------------------|-----------------------------\n**License Details**               | If you need a license, start a [free 30-day trial today](https://kpow.io/try).\n`license_id`                      | a620baa9-956e-43bf-9bc5-adf635533c4a\n`license_code`                      | RH_MARKETPLACE\n`licensee`                          | Your Organisation\n`license_expiry`                    | \"2022-28-12\" - quoted to ensure expiry field interpreted as a string, not a date.\n`license_signature`                 | 8094DEC9...\n**Minimum Configuration**         | kPow will start with only license details and a Kafka bootstrap URL.\n`bootstrap`                        | The Bootstrap URL of your Kafka Cluster\n\nOptional Configuration            |            Details / Example\n----------------------------------|-----------------------------\n**System Options**                | General system configuration\n`environment_name`                  | A meaningful name for this installation, e.g. \"Trade Book (Staging)\"\n`http_port`                         | The port that kPow will serve its UI (default: 3000)\n`show_splash`                       | Show the kPow splash screen for each new user session (default: true)\n[**System HTTPS Options**](https://docs.kpow.io/features/https-connections) | the kPow UI can be served over HTTPS\n`enable_https`                      | default: false \n`https_keystore_location`           | e.g. \"/ssl/https.keystore.jks\"\n`https_keystore_type`               | e.g. JKS\n`https_keystore_password`           | e.g. \"ssl-key-pass\"\n`https_truststore_location`         | e.g. \"/ssl/https.truststore.jks\"\n`https_truststore_type`             | e.g. JKS\n`https_truststore_password`         | e.g. \"ssl-trust-pass\"\n[**Kafka Cluster Options**](https://kafka.apache.org/documentation/#adminclientconfigs) | kPow uses the same Kafka Cluster connection options as a standard consumer, producer, or admin client.\n`security_protocol`                 | e.g. SASL_SSL\n`sasl_mechanism`                    | e.g. PLAIN\n`sasl_jaas_config`                  | e.g. \"org.apache.kafka.common.security.plain.Plain..\"\n`sasl_login_callback_handler_class` | e.g. \"com.corp.kafka.security.sasl.oauth.KafkaBrokerTokenCreator\"\n`ssl_keystore_location`             | e.g. \"/ssl/kafka.keystore.jks\"\n`ssl_keystore_password`             | e.g. \"keystore-pass-123\"\n`ssl_key_password`                  | e.g. \"key-pass-123\"\n`ssl_keystore_type`                 | e.g. JKS\n`ssl_keymanager_algorithm`          | e.g. SunX509\n`ssl_truststore_location`           | e.g. \"/ssl/kafka.truststore.jks\"\n`ssl_truststore_password`           | e.g. \"trust-pass-123\"\n`ssl_truststore_type`               | e.g. JKS\n`ssl_trustmanager_algorithm`        | e.g. PKIX\n`ssl_endpoint_identification_algorithm` | e.g. https\n`ssl_provider`                      | e.g. \"default\"\n`ssl_cipher_suites`                 | e.g. \"default: \n`ssl_protocol`                      | e.g. TLS\n`ssl_enabled_protocols`             | e.g. \"TLSv.12,TLSv1.1,TLSv1\"\n`ssl_secure_random_implementation`  | e.g. SHA1PRNG\n[**Schema Registry**](https://docs.kpow.io/config/schema-registry) | Monitor and manage a Schema Registry connected to your Kafka Cluster\n`schema_registry_url`               | e.g. \"https://registry-host\"\n`schema_registry_auth`              | e.g. USER_INFO\n`schema_registry_user`              | e.g. registry-user\n`schema_registry_password`          | e.g. registry-pass\n[**Kafka Connect**](https://docs.kpow.io/config/kafka-connect) | Monitor and manage a Kafka Connect Cluster connected to your Kafka Cluster\n`connect_rest_url`                  | e.g. http://localhost:8083\n`connect_auth`                      | e.g. BASIC\n`connect_basic_auth_user`           | e.g. connect-user\n`connect_basic_auth_pass`           | e.g. connect-pass\n`connect_group_id`                  | e.g. connect-group-id\n`connect_offset_storage_topic`      | e.g. connect-topic\n[**Live Mode**](https://docs.kpow.io/features/live-mode) | View and monitor your Kafka resources in near-realtime\n`live_mode_enabled`                 | default: true\n`live_mode_period_ms`               | The duration of a live mode session, default: 60000ms / one minute\n`live_mode_interval`                | The duration between live mode snapshot gathering, default: 5000ms / five seconds\n`live_mode_max_concurrent_users`    | The number of concurrent live mode sessions that may be active, default: 2\n**Data Inspect**                  | Provide custom serdes, set default serdes, or restrict serdes available to users\n[custom_serdes](https://docs.kpow.io/features/data-inspect/serdes#custom-serdes) | e.g. \"io.kpow.SerdeOne,io.kpow.SerdeTwo\"\n`default_key_serdes`                | e.g. \"JSON\"\n`default_value_serdes`              | e.g. \"AVRO\"\n`available_key_serdes`              | e.g. \"JSON,String,Transit / JSON\"\n`available_value_serdes`            | e.g. \"JSON,String,io.kpow.SerdeOne\"\n[**Prometheus Endpoints**](https://docs.kpow.io/features/prometheus) | kPow provides metrics and offsets via Prometheus Endpoints for scraping into your enterprise monitoring system of choice.\n`prometheus_egress`                 | default: false\n[**Slack Integration**](https://docs.kpow.io/features/slack-integration) | kPow can send audit log records to a slack channel of your choosing\n`slack_webhook_url`                 | e.g \"https://hooks.slack.com/services/...\"\n[**Simple Access Control**](https://docs.kpow.io/user-authorization/simple-access-control) | kPow supports simple control of users actions via global access controls\n`allow_topic_create`                | default: false - Users may create new topics\n`allow_topic_delete`                | default: false - Users may delete existing topics\n`allow_topic_inspect`               | default: false - Users may view topic key and value content\n`allow_topic_produce`              | default: false - Users may produce new messages to topics\n`allow_topic_edit`                  | default: false - Users may edit topic configuration\n`allow_broker_edit`                 | default: false - Users may edit broker configuration\n`allow_group_edit`                  | default: false - Users may edit and delete consumer groups and group offsets\n`allow_schema_edit`                 | default: false - Users may edit schemas and subjects\n`allow_schema_create`               | default: false - Users may create new schemas and subjects\n`allow_connect_create`              | default: false - Users may create new connectors and tasks\n`allow_connect_edit`                | default: false - Users may edit, pause, delete, and restart connectors and tasks\n[**Role Based Access Control**](https://docs.kpow.io/user-authorization/role-based-access-control) | kPow supports Role Based Access Control when used in conjunction with User Authentication\n`rbac_configuration_file`           | e.g. \"/path/to/rbac-config.yaml\"\n[**Data Policies**](https://docs.kpow.io/features/data-policies) | kPow supports masking and redaction of sensitive data in Data Inspect and kREPL results\n`data_policy_configuration_file`       | e.g. \"/path/to/masking/config.yaml\"\n[**User Authentication**](https://docs.kpow.io/user-authentication/overview) | kPow supports a number of methods of User Authentication including SAML, Okta, and OpenID\n[**Okta SSO**](https://docs.kpow.io/user-authentication/openid/okta) | Authenticate users with Okta \n`auth_provider_type`                | \"okta\"\n`okta_organisation`                 | e.g. \"your-organisation\"\n`openid_client_id`                  | The 'Client ID' found in the \"Client Credentials\" section of your Okta integration\n`openid_client_secret`              | The 'Client Secret' found in the \"Client Credentials\" section of your Okta integration\n`openid_landing_uri`                | e.g. \"https://staging.kpow.z-corp.com\"\n[**Github SSO**](https://docs.kpow.io/user-authentication/openid/github) | Authenticate users with Github (including Github Enterprise)\n`auth_provider_type`                | \"github\"\n`openid_token_id`                   | e.g. \"https://github.com/login/oauth/access_token\" or \"[GHE Server URL]/login/oauth/access_token\"\n`openid_auth_uri`                   | e.g. \"https://github.com/login/oauth/authorize\" or \"[GHE Server URL]/login/oauth/authorize\"\n`openid_api_uri`                    | e.g. \"https://api.github.com/user\" or, \"[GHE Server URL]/api/v3/user\"\n`openid_client_id`                  | e.g. The 'Client ID' found in your configured Github Oath App\n`openid_client_secret`              | The 'Client Secret' found in your configured Github Oath App\n`openid_landing_uri`                | e.g. \"https://staging.kpow.z-corp.com/\"\n[**SAML SSO**](https://docs.kpow.io/user-authentication/saml) | Authenticate users with SAML (custom, Azure AD, AWS SSO, Okta, etc)\n`auth_provider_type`                | \"saml\"\n`saml_relying_party_identifier`     | e.g. \"kpow.io\"\n`saml_asc_url`                      | e.g. \"https://kpow.corp.com/saml\"\n`saml_metadata_file`                | e.g. \"/opt/kpow/aws-metadata.xml\" (optional)\n`saml_cert`                         | e.g. \"/var/certs/saml-cert.cer\"\n\n----\n\n## Providing Configuration Files to kPow\n\nSome of the configuration above is provided as files (e.g. YAML or Keystores). You will need to provide these iles in the form of secrets or configmaps.\n\nFor Example the specification ```https_keystore_location``` needs a keystore file in location *\"/ssl/https.keystore.jks\"*.\n\nThe Operator expectes the file in the form of a secret to be available in the namespace where its installed. \n\nPlease follow below instructions to know how to create the Secret or configmap for such CR Specifications listed above:\n\n**Command to Create ConfigMaps from a file:**\n\n```\n  oc create configmap <name of configmap> --from-file <file name> -n <project-name>\n```\n\n**Command to create secrets from a file:**\n\n```\n  oc create secret generic <name of secret> --from-file <file name> -n <project-name>\n```\n\n  **NOTE**:The configmaps and secrets must be created prior to running the operator and must adhere to the names mentioned below.\t\n  \n----    \nCR Spec          \t  \t\t\t\t\t\t\t    \t|       CR Value\t\t\t|  Creation command\n--------------------------------------------------------|---------------------------|-----------------------------\n`rbac_configuration.rbac_configuration_file`\t\t\t\t|/opt/kpow/rbac-config.yaml\t|oc create rbac-configuration --from-file rbac-config.yaml -n <project-name\\>\n`data_policy_configuration. data_policy_configuration_file`|/opt/kpow/data-config.yml\t|oc create data-policy-configuration --from-file data-config.yml -n <project-name\\>\n`kafka_cluster_configuration.ssl_keystore_location`\t\t|/ssl/kafka.keystore.jks\t|oc create secret generic kafka-keystore --from-file kafka.keystore.jks -n <project-name\\>\n`kafka_cluster_configuration.ssl_truststore_location`\t\t|/ssl/kafka.truststore.jks\t|oc create secret generic kafka-truststore --from-file kafka.truststore.jks -n <project-name\\>\n`https_configuration.https_keystore`\t\t\t\t\t\t|/ssl/https.keystore.jks\t|oc create secret generic https-keystore --from-file https.keystore.jks -n <project-name\\>\n`https_configuration.https_truststore`\t\t\t\t\t|/ssl/https.truststore.jks\t|oc create secret generic https-truststore --from-file https.truststore.jks -n   <project-name\\>\n`saml_sso_options.saml_metadata_file`\t\t\t\t\t\t|/opt/kpow/aws-metadata.xml\t|oc create saml-metadata --from-file aws-metadata.xml -n <project-name\\>\n`saml_sso_options.saml_cert`\t\t\t\t\t\t\t\t|/var/certs/saml-cert.cer\t|oc create secret generic saml-cert --from-file saml-cert.cer -n <project-name\\>\n",
      "csv_display_name": "kPow for Apache Kafka",
      "csv_metadata_description": "kPow is a toolkit for engineers who build, manage, and maintain systems powered by Apache Kafka",
      "csv_name": "kpow-io.v1.0.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:16:01.055000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "kpow-io-certified",
      "provided_apis": [
        {
          "group": "kpow.io",
          "kind": "Kpow",
          "version": "v1beta1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "image": "registry.connect.redhat.com/operatr-io/kpow@sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "name": "kpow-9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185-annotation"
        },
        {
          "digest": "sha256:d1b17c96188a5f2748755f4de355a0f103e93b488108dbefb4c4b5714759f510",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:d1b17c96188a5f2748755f4de355a0f103e93b488108dbefb4c4b5714759f510",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:84fc5cafcf88e5334fbdd540da6d340ca401a69360560c7dde448c03c21a724f",
          "image": "registry.connect.redhat.com/operatr-io/kpow-operator@sha256:84fc5cafcf88e5334fbdd540da6d340ca401a69360560c7dde448c03c21a724f",
          "name": "manager"
        },
        {
          "digest": "sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "image": "registry.connect.redhat.com/operatr-io/kpow@sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "name": "kpow"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.4",
      "version_original": "1.0.4"
    },
    {
      "_id": "613f2b1fd63f43cf6ee37507",
      "alm_examples": [
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Adam",
          "metadata": {
            "name": "example-adam",
            "namespace": "appdynamics"
          },
          "spec": {
            "controllerUrl": "https://saas.appdynamics.com"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Clusteragent",
          "metadata": {
            "name": "k8s-cluster-agent",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "appName": "Cluster1",
            "controllerUrl": "https://saas.appdynamics.com",
            "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
            "serviceAccountName": "appdynamics-cluster-agent",
            "stdoutLogging": "true"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "InfraViz",
          "metadata": {
            "name": "appd-infraviz",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "controllerUrl": "https://saas.appdynamics.com",
            "enableDockerViz": "false",
            "enableMasters": true,
            "globalAccount": "customer1_12345",
            "netVizPort": 3892,
            "stdoutLogging": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/appdynamics/cluster-agent-operator-bundle@sha256:344e06684771a54b6a74d6d05713160381ffed8a472f0e1dcc4321ac21015c21",
      "bundle_path_digest": "sha256:344e06684771a54b6a74d6d05713160381ffed8a472f0e1dcc4321ac21015c21",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-13T10:42:39.961000+00:00",
      "csv_description": "AppDynamics Operator simplifies the configuration and lifecycle management of the AppDynamics ClusterAgent and the AppDynamics Machine Agent on different Kubernetes distributions and OpenShift. \nThe Operator encapsulates key operational knowledge on how to configure and upgrade the ClusterAgent and the Machine Agent. \nIt knows, for example, which configuration changes are benign and do not require restart of the ClusterAgent, \nwhich minimizes unnecesary load on the cluster API server.\n\n\n## Operator deployment\n\n* Create namespace for AppDynamics\n```\n  kubectl create namespace appdynamics\n```\n\n* Create Secret `cluster-agent-secret`. Set \"controller-key\" \nto the access key to the AppDynamics controller.  \n\n```\nkubectl -n appdynamics create secret generic cluster-agent-secret --from-literal=controller-key=\"<controller-access-key>\"\n```\n\n* Update the image reference in the Operator deployment spec, if necessary.  \n\nFor additional details refer to [this documentation](https://github.com/Appdynamics/appdynamics-operator)\n",
      "csv_display_name": "Appdynamics Operator",
      "csv_metadata_description": "End to end monitoring of applications on Kubernetes and OpenShift clusters with AppDynamics.",
      "csv_name": "appdynamics-operator.v0.6.11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:18:40.952000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "appdynamics-operator",
      "provided_apis": [
        {
          "group": "appdynamics.com",
          "kind": "Clusteragent",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Clustercollector",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Hostcollector",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "InfraViz",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Adam",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "cluster-agent-operator-9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950-annotation"
        },
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "appdynamics-operator"
        },
        {
          "digest": "sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "name": "cluster-agent-5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.6.11",
      "version_original": "0.6.11"
    },
    {
      "_id": "613f2bd8a5ebcd070d163d90",
      "alm_examples": [
        {
          "api_version": "kpow.io/v1beta1",
          "kind": "Kpow",
          "metadata": {
            "name": "kpow-sample"
          },
          "spec": {
            "bootstrap": "",
            "data_policy_configuration": {
              "data_policy_configuration_file": ""
            },
            "environment_name": "change me",
            "github_sso_options": {
              "auth_provider_type": "",
              "openid_api_uri": "",
              "openid_auth_uri": "",
              "openid_client_id": "",
              "openid_client_secret": "",
              "openid_landing_uri": "",
              "openid_token_uri": ""
            },
            "global_access_configuration": {
              "allow_broker_edit": "",
              "allow_connect_create": "",
              "allow_connect_edit": "",
              "allow_group_edit": "",
              "allow_schema_create": "",
              "allow_schema_edit": "",
              "allow_topic_create": "",
              "allow_topic_delete": "",
              "allow_topic_edit": "",
              "allow_topic_inspect": "",
              "allow_topic_produce": ""
            },
            "https_configuration": {
              "enable_https": false,
              "https_keystore": "",
              "https_keystore_password": "",
              "https_keystore_type": "",
              "https_truststore": "",
              "https_truststore_password": "",
              "https_truststore_type": ""
            },
            "kafka_cluster_configuration": {
              "sasl_jaas_config": "",
              "sasl_login_callback_handler_class": "",
              "sasl_mechanism": "",
              "security_protocol": "",
              "ssl_cipher_suites": "",
              "ssl_enabled_protocols": "",
              "ssl_endpoint_identification_algorithm": "",
              "ssl_key_password": "",
              "ssl_keymanager_algorithm": "",
              "ssl_keystore_location": "",
              "ssl_keystore_password": "",
              "ssl_keystore_type": "",
              "ssl_protocol": "",
              "ssl_provider": "",
              "ssl_secure_random_implementation": "",
              "ssl_trustmanager_algorithm": "",
              "ssl_truststore_location": "",
              "ssl_truststore_password": "",
              "ssl_truststore_type": ""
            },
            "kafka_connect_configuration": {
              "connect_auth": "",
              "connect_basic_auth_pass": "",
              "connect_basic_auth_user": "",
              "connect_group_id": "",
              "connect_offset_storage_topic": "",
              "connect_rest_url": ""
            },
            "license_configuration": {
              "license_code": "your-licence-code",
              "license_expiry": "your-license-expiry",
              "license_id": "your-license-id",
              "license_signature": "e.g. aa8ac6df95...",
              "licensee": "your-org"
            },
            "live_mode_configuration": {
              "live_mode_enabled": "",
              "live_mode_interval_ms": "",
              "live_mode_max_concurrent_users": "",
              "live_mode_period_ms": ""
            },
            "okta_sso_options": {
              "auth_provider_type": "",
              "okta_organisation": "",
              "openid_client_id": "",
              "openid_client_secret": "",
              "openid_landing_uri": ""
            },
            "prometheus_egress": false,
            "rbac_configuration": {
              "rbac_configuration_file": ""
            },
            "saml_sso_options": {
              "auth_provider_type": "",
              "saml_acs_url": "",
              "saml_cert": "",
              "saml_metadata_file": "",
              "saml_relying_party_identifier": ""
            },
            "schema_registry_configuration": {
              "schema_registry_auth": "",
              "schema_registry_name": "",
              "schema_registry_password": "",
              "schema_registry_url": "",
              "schema_registry_user": ""
            },
            "serdis_configuration": {
              "available_key_serdes": "",
              "available_value_serdes": "",
              "custom_serdes": "",
              "default_key_serdes": "",
              "default_value_serdes": ""
            },
            "slack_integration": {
              "slack_webhook_url": ""
            },
            "system_configuration": {
              "http_port": "",
              "replication_factor": "",
              "show_splash": "",
              "snapshot_parallelism": ""
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/operatr-io/kpow-operator-bundle@sha256:eb62d828a556a1bfb3381ae46355332e52ca63143a66376002c1c15d52646543",
      "bundle_path_digest": "sha256:eb62d828a556a1bfb3381ae46355332e52ca63143a66376002c1c15d52646543",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-13T10:45:44.534000+00:00",
      "csv_description": "\nUse kPow to monitor and manage your Kafka Clusters, Schema Registries, and Connect Clusters.\n\nThe minimum required configuration to run kPow is **license details and a bootstrap URL**.\n\nIf you have a Red Hat Marketplace subscription to kPow you will receive a license directly.\n\nSign-up online to receive a [free 30-day trial license](https://kpow.io/try) in minutes.\n\nkPow is compatible with Red Hat AMQ Streams.\n\n----\n\n##kPow CR Spec Details\n\nAfter you have installed the KPow operator, create a CR to get an instance of KPow. You can setup a Kpow instance with custom configuration using the specifications given in the CR. Refer below table to understand the available specifications for custom configuration of KPow. Set the required value for specifications while creating the CR.\n\n-----\n\nRequired Configuration            |            Details / Example\n----------------------------------|-----------------------------\n**License Details**               | If you need a license, start a [free 30-day trial today](https://kpow.io/try).\n`license_id`                      | a620baa9-956e-43bf-9bc5-adf635533c4a\n`license_code`                      | RH_MARKETPLACE\n`licensee`                          | Your Organisation\n`license_expiry`                    | \"2022-28-12\" - quoted to ensure expiry field interpreted as a string, not a date.\n`license_signature`                 | 8094DEC9...\n**Minimum Configuration**         | kPow will start with only license details and a Kafka bootstrap URL.\n`bootstrap`                        | The Bootstrap URL of your Kafka Cluster\n\nOptional Configuration            |            Details / Example\n----------------------------------|-----------------------------\n**System Options**                | General system configuration\n`environment_name`                  | A meaningful name for this installation, e.g. \"Trade Book (Staging)\"\n`http_port`                         | The port that kPow will serve its UI (default: 3000)\n`show_splash`                       | Show the kPow splash screen for each new user session (default: true)\n[**System HTTPS Options**](https://docs.kpow.io/features/https-connections) | the kPow UI can be served over HTTPS\n`enable_https`                      | default: false \n`https_keystore_location`           | e.g. \"/ssl/https.keystore.jks\"\n`https_keystore_type`               | e.g. JKS\n`https_keystore_password`           | e.g. \"ssl-key-pass\"\n`https_truststore_location`         | e.g. \"/ssl/https.truststore.jks\"\n`https_truststore_type`             | e.g. JKS\n`https_truststore_password`         | e.g. \"ssl-trust-pass\"\n[**Kafka Cluster Options**](https://kafka.apache.org/documentation/#adminclientconfigs) | kPow uses the same Kafka Cluster connection options as a standard consumer, producer, or admin client.\n`security_protocol`                 | e.g. SASL_SSL\n`sasl_mechanism`                    | e.g. PLAIN\n`sasl_jaas_config`                  | e.g. \"org.apache.kafka.common.security.plain.Plain..\"\n`sasl_login_callback_handler_class` | e.g. \"com.corp.kafka.security.sasl.oauth.KafkaBrokerTokenCreator\"\n`ssl_keystore_location`             | e.g. \"/ssl/kafka.keystore.jks\"\n`ssl_keystore_password`             | e.g. \"keystore-pass-123\"\n`ssl_key_password`                  | e.g. \"key-pass-123\"\n`ssl_keystore_type`                 | e.g. JKS\n`ssl_keymanager_algorithm`          | e.g. SunX509\n`ssl_truststore_location`           | e.g. \"/ssl/kafka.truststore.jks\"\n`ssl_truststore_password`           | e.g. \"trust-pass-123\"\n`ssl_truststore_type`               | e.g. JKS\n`ssl_trustmanager_algorithm`        | e.g. PKIX\n`ssl_endpoint_identification_algorithm` | e.g. https\n`ssl_provider`                      | e.g. \"default\"\n`ssl_cipher_suites`                 | e.g. \"default: \n`ssl_protocol`                      | e.g. TLS\n`ssl_enabled_protocols`             | e.g. \"TLSv.12,TLSv1.1,TLSv1\"\n`ssl_secure_random_implementation`  | e.g. SHA1PRNG\n[**Schema Registry**](https://docs.kpow.io/config/schema-registry) | Monitor and manage a Schema Registry connected to your Kafka Cluster\n`schema_registry_url`               | e.g. \"https://registry-host\"\n`schema_registry_auth`              | e.g. USER_INFO\n`schema_registry_user`              | e.g. registry-user\n`schema_registry_password`          | e.g. registry-pass\n[**Kafka Connect**](https://docs.kpow.io/config/kafka-connect) | Monitor and manage a Kafka Connect Cluster connected to your Kafka Cluster\n`connect_rest_url`                  | e.g. http://localhost:8083\n`connect_auth`                      | e.g. BASIC\n`connect_basic_auth_user`           | e.g. connect-user\n`connect_basic_auth_pass`           | e.g. connect-pass\n`connect_group_id`                  | e.g. connect-group-id\n`connect_offset_storage_topic`      | e.g. connect-topic\n[**Live Mode**](https://docs.kpow.io/features/live-mode) | View and monitor your Kafka resources in near-realtime\n`live_mode_enabled`                 | default: true\n`live_mode_period_ms`               | The duration of a live mode session, default: 60000ms / one minute\n`live_mode_interval`                | The duration between live mode snapshot gathering, default: 5000ms / five seconds\n`live_mode_max_concurrent_users`    | The number of concurrent live mode sessions that may be active, default: 2\n**Data Inspect**                  | Provide custom serdes, set default serdes, or restrict serdes available to users\n[custom_serdes](https://docs.kpow.io/features/data-inspect/serdes#custom-serdes) | e.g. \"io.kpow.SerdeOne,io.kpow.SerdeTwo\"\n`default_key_serdes`                | e.g. \"JSON\"\n`default_value_serdes`              | e.g. \"AVRO\"\n`available_key_serdes`              | e.g. \"JSON,String,Transit / JSON\"\n`available_value_serdes`            | e.g. \"JSON,String,io.kpow.SerdeOne\"\n[**Prometheus Endpoints**](https://docs.kpow.io/features/prometheus) | kPow provides metrics and offsets via Prometheus Endpoints for scraping into your enterprise monitoring system of choice.\n`prometheus_egress`                 | default: false\n[**Slack Integration**](https://docs.kpow.io/features/slack-integration) | kPow can send audit log records to a slack channel of your choosing\n`slack_webhook_url`                 | e.g \"https://hooks.slack.com/services/...\"\n[**Simple Access Control**](https://docs.kpow.io/user-authorization/simple-access-control) | kPow supports simple control of users actions via global access controls\n`allow_topic_create`                | default: false - Users may create new topics\n`allow_topic_delete`                | default: false - Users may delete existing topics\n`allow_topic_inspect`               | default: false - Users may view topic key and value content\n`allow_topic_produce`              | default: false - Users may produce new messages to topics\n`allow_topic_edit`                  | default: false - Users may edit topic configuration\n`allow_broker_edit`                 | default: false - Users may edit broker configuration\n`allow_group_edit`                  | default: false - Users may edit and delete consumer groups and group offsets\n`allow_schema_edit`                 | default: false - Users may edit schemas and subjects\n`allow_schema_create`               | default: false - Users may create new schemas and subjects\n`allow_connect_create`              | default: false - Users may create new connectors and tasks\n`allow_connect_edit`                | default: false - Users may edit, pause, delete, and restart connectors and tasks\n[**Role Based Access Control**](https://docs.kpow.io/user-authorization/role-based-access-control) | kPow supports Role Based Access Control when used in conjunction with User Authentication\n`rbac_configuration_file`           | e.g. \"/path/to/rbac-config.yaml\"\n[**Data Policies**](https://docs.kpow.io/features/data-policies) | kPow supports masking and redaction of sensitive data in Data Inspect and kREPL results\n`data_policy_configuration_file`       | e.g. \"/path/to/masking/config.yaml\"\n[**User Authentication**](https://docs.kpow.io/user-authentication/overview) | kPow supports a number of methods of User Authentication including SAML, Okta, and OpenID\n[**Okta SSO**](https://docs.kpow.io/user-authentication/openid/okta) | Authenticate users with Okta \n`auth_provider_type`                | \"okta\"\n`okta_organisation`                 | e.g. \"your-organisation\"\n`openid_client_id`                  | The 'Client ID' found in the \"Client Credentials\" section of your Okta integration\n`openid_client_secret`              | The 'Client Secret' found in the \"Client Credentials\" section of your Okta integration\n`openid_landing_uri`                | e.g. \"https://staging.kpow.z-corp.com\"\n[**Github SSO**](https://docs.kpow.io/user-authentication/openid/github) | Authenticate users with Github (including Github Enterprise)\n`auth_provider_type`                | \"github\"\n`openid_token_id`                   | e.g. \"https://github.com/login/oauth/access_token\" or \"[GHE Server URL]/login/oauth/access_token\"\n`openid_auth_uri`                   | e.g. \"https://github.com/login/oauth/authorize\" or \"[GHE Server URL]/login/oauth/authorize\"\n`openid_api_uri`                    | e.g. \"https://api.github.com/user\" or, \"[GHE Server URL]/api/v3/user\"\n`openid_client_id`                  | e.g. The 'Client ID' found in your configured Github Oath App\n`openid_client_secret`              | The 'Client Secret' found in your configured Github Oath App\n`openid_landing_uri`                | e.g. \"https://staging.kpow.z-corp.com/\"\n[**SAML SSO**](https://docs.kpow.io/user-authentication/saml) | Authenticate users with SAML (custom, Azure AD, AWS SSO, Okta, etc)\n`auth_provider_type`                | \"saml\"\n`saml_relying_party_identifier`     | e.g. \"kpow.io\"\n`saml_asc_url`                      | e.g. \"https://kpow.corp.com/saml\"\n`saml_metadata_file`                | e.g. \"/opt/kpow/aws-metadata.xml\" (optional)\n`saml_cert`                         | e.g. \"/var/certs/saml-cert.cer\"\n\n----\n\n## Providing Configuration Files to kPow\n\nSome of the configuration above is provided as files (e.g. YAML or Keystores). You will need to provide these iles in the form of secrets or configmaps.\n\nFor Example the specification ```https_keystore_location``` needs a keystore file in location *\"/ssl/https.keystore.jks\"*.\n\nThe Operator expectes the file in the form of a secret to be available in the namespace where its installed. \n\nPlease follow below instructions to know how to create the Secret or configmap for such CR Specifications listed above:\n\n**Command to Create ConfigMaps from a file:**\n\n```\n  oc create configmap <name of configmap> --from-file <file name> -n <project-name>\n```\n\n**Command to create secrets from a file:**\n\n```\n  oc create secret generic <name of secret> --from-file <file name> -n <project-name>\n```\n\n  **NOTE**:The configmaps and secrets must be created prior to running the operator and must adhere to the names mentioned below.\t\n  \n----    \nCR Spec          \t  \t\t\t\t\t\t\t    \t|       CR Value\t\t\t|  Creation command\n--------------------------------------------------------|---------------------------|-----------------------------\n`rbac_configuration.rbac_configuration_file`\t\t\t\t|/opt/kpow/rbac-config.yaml\t|oc create rbac-configuration --from-file rbac-config.yaml -n <project-name\\>\n`data_policy_configuration. data_policy_configuration_file`|/opt/kpow/data-config.yml\t|oc create data-policy-configuration --from-file data-config.yml -n <project-name\\>\n`kafka_cluster_configuration.ssl_keystore_location`\t\t|/ssl/kafka.keystore.jks\t|oc create secret generic kafka-keystore --from-file kafka.keystore.jks -n <project-name\\>\n`kafka_cluster_configuration.ssl_truststore_location`\t\t|/ssl/kafka.truststore.jks\t|oc create secret generic kafka-truststore --from-file kafka.truststore.jks -n <project-name\\>\n`https_configuration.https_keystore`\t\t\t\t\t\t|/ssl/https.keystore.jks\t|oc create secret generic https-keystore --from-file https.keystore.jks -n <project-name\\>\n`https_configuration.https_truststore`\t\t\t\t\t|/ssl/https.truststore.jks\t|oc create secret generic https-truststore --from-file https.truststore.jks -n   <project-name\\>\n`saml_sso_options.saml_metadata_file`\t\t\t\t\t\t|/opt/kpow/aws-metadata.xml\t|oc create saml-metadata --from-file aws-metadata.xml -n <project-name\\>\n`saml_sso_options.saml_cert`\t\t\t\t\t\t\t\t|/var/certs/saml-cert.cer\t|oc create secret generic saml-cert --from-file saml-cert.cer -n <project-name\\>\n",
      "csv_display_name": "kPow for Apache Kafka",
      "csv_metadata_description": "kPow is a toolkit for engineers who build, manage, and maintain systems powered by Apache Kafka",
      "csv_name": "kpow-io.v1.0.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:09:52.505000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "kpow-io-certified",
      "provided_apis": [
        {
          "group": "kpow.io",
          "kind": "Kpow",
          "version": "v1beta1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "image": "registry.connect.redhat.com/operatr-io/kpow@sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "name": "kpow-9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185-annotation"
        },
        {
          "digest": "sha256:d1b17c96188a5f2748755f4de355a0f103e93b488108dbefb4c4b5714759f510",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:d1b17c96188a5f2748755f4de355a0f103e93b488108dbefb4c4b5714759f510",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:84fc5cafcf88e5334fbdd540da6d340ca401a69360560c7dde448c03c21a724f",
          "image": "registry.connect.redhat.com/operatr-io/kpow-operator@sha256:84fc5cafcf88e5334fbdd540da6d340ca401a69360560c7dde448c03c21a724f",
          "name": "manager"
        },
        {
          "digest": "sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "image": "registry.connect.redhat.com/operatr-io/kpow@sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "name": "kpow"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.4",
      "version_original": "1.0.4"
    },
    {
      "_id": "613f630dc9bc35f21dc4a41d",
      "alm_examples": [
        {
          "api_version": "kpow.io/v1beta1",
          "kind": "Kpow",
          "metadata": {
            "name": "kpow-sample"
          },
          "spec": {
            "bootstrap": "",
            "data_policy_configuration": {
              "data_policy_configuration_file": ""
            },
            "environment_name": "change me",
            "github_sso_options": {
              "auth_provider_type": "",
              "openid_api_uri": "",
              "openid_auth_uri": "",
              "openid_client_id": "",
              "openid_client_secret": "",
              "openid_landing_uri": "",
              "openid_token_uri": ""
            },
            "global_access_configuration": {
              "allow_broker_edit": "",
              "allow_connect_create": "",
              "allow_connect_edit": "",
              "allow_group_edit": "",
              "allow_schema_create": "",
              "allow_schema_edit": "",
              "allow_topic_create": "",
              "allow_topic_delete": "",
              "allow_topic_edit": "",
              "allow_topic_inspect": "",
              "allow_topic_produce": ""
            },
            "https_configuration": {
              "enable_https": false,
              "https_keystore": "",
              "https_keystore_password": "",
              "https_keystore_type": "",
              "https_truststore": "",
              "https_truststore_password": "",
              "https_truststore_type": ""
            },
            "kafka_cluster_configuration": {
              "sasl_jaas_config": "",
              "sasl_login_callback_handler_class": "",
              "sasl_mechanism": "",
              "security_protocol": "",
              "ssl_cipher_suites": "",
              "ssl_enabled_protocols": "",
              "ssl_endpoint_identification_algorithm": "",
              "ssl_key_password": "",
              "ssl_keymanager_algorithm": "",
              "ssl_keystore_location": "",
              "ssl_keystore_password": "",
              "ssl_keystore_type": "",
              "ssl_protocol": "",
              "ssl_provider": "",
              "ssl_secure_random_implementation": "",
              "ssl_trustmanager_algorithm": "",
              "ssl_truststore_location": "",
              "ssl_truststore_password": "",
              "ssl_truststore_type": ""
            },
            "kafka_connect_configuration": {
              "connect_auth": "",
              "connect_basic_auth_pass": "",
              "connect_basic_auth_user": "",
              "connect_group_id": "",
              "connect_offset_storage_topic": "",
              "connect_rest_url": ""
            },
            "license_configuration": {
              "license_code": "your-licence-code",
              "license_expiry": "your-license-expiry",
              "license_id": "your-license-id",
              "license_signature": "e.g. aa8ac6df95...",
              "licensee": "your-org"
            },
            "live_mode_configuration": {
              "live_mode_enabled": "",
              "live_mode_interval_ms": "",
              "live_mode_max_concurrent_users": "",
              "live_mode_period_ms": ""
            },
            "okta_sso_options": {
              "auth_provider_type": "",
              "okta_organisation": "",
              "openid_client_id": "",
              "openid_client_secret": "",
              "openid_landing_uri": ""
            },
            "prometheus_egress": false,
            "rbac_configuration": {
              "rbac_configuration_file": ""
            },
            "saml_sso_options": {
              "auth_provider_type": "",
              "saml_acs_url": "",
              "saml_cert": "",
              "saml_metadata_file": "",
              "saml_relying_party_identifier": ""
            },
            "schema_registry_configuration": {
              "schema_registry_auth": "",
              "schema_registry_name": "",
              "schema_registry_password": "",
              "schema_registry_url": "",
              "schema_registry_user": ""
            },
            "serdis_configuration": {
              "available_key_serdes": "",
              "available_value_serdes": "",
              "custom_serdes": "",
              "default_key_serdes": "",
              "default_value_serdes": ""
            },
            "slack_integration": {
              "slack_webhook_url": ""
            },
            "system_configuration": {
              "http_port": "",
              "replication_factor": "",
              "show_splash": "",
              "snapshot_parallelism": ""
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/operatr-io/kpow-operator-bundle@sha256:eb62d828a556a1bfb3381ae46355332e52ca63143a66376002c1c15d52646543",
      "bundle_path_digest": "sha256:eb62d828a556a1bfb3381ae46355332e52ca63143a66376002c1c15d52646543",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-13T14:41:17.070000+00:00",
      "csv_description": "\nUse kPow to monitor and manage your Kafka Clusters, Schema Registries, and Connect Clusters.\n\nThe minimum required configuration to run kPow is **license details and a bootstrap URL**.\n\nIf you have a Red Hat Marketplace subscription to kPow you will receive a license directly.\n\nSign-up online to receive a [free 30-day trial license](https://kpow.io/try) in minutes.\n\nkPow is compatible with Red Hat AMQ Streams.\n\n----\n\n##kPow CR Spec Details\n\nAfter you have installed the KPow operator, create a CR to get an instance of KPow. You can setup a Kpow instance with custom configuration using the specifications given in the CR. Refer below table to understand the available specifications for custom configuration of KPow. Set the required value for specifications while creating the CR.\n\n-----\n\nRequired Configuration            |            Details / Example\n----------------------------------|-----------------------------\n**License Details**               | If you need a license, start a [free 30-day trial today](https://kpow.io/try).\n`license_id`                      | a620baa9-956e-43bf-9bc5-adf635533c4a\n`license_code`                      | RH_MARKETPLACE\n`licensee`                          | Your Organisation\n`license_expiry`                    | \"2022-28-12\" - quoted to ensure expiry field interpreted as a string, not a date.\n`license_signature`                 | 8094DEC9...\n**Minimum Configuration**         | kPow will start with only license details and a Kafka bootstrap URL.\n`bootstrap`                        | The Bootstrap URL of your Kafka Cluster\n\nOptional Configuration            |            Details / Example\n----------------------------------|-----------------------------\n**System Options**                | General system configuration\n`environment_name`                  | A meaningful name for this installation, e.g. \"Trade Book (Staging)\"\n`http_port`                         | The port that kPow will serve its UI (default: 3000)\n`show_splash`                       | Show the kPow splash screen for each new user session (default: true)\n[**System HTTPS Options**](https://docs.kpow.io/features/https-connections) | the kPow UI can be served over HTTPS\n`enable_https`                      | default: false \n`https_keystore_location`           | e.g. \"/ssl/https.keystore.jks\"\n`https_keystore_type`               | e.g. JKS\n`https_keystore_password`           | e.g. \"ssl-key-pass\"\n`https_truststore_location`         | e.g. \"/ssl/https.truststore.jks\"\n`https_truststore_type`             | e.g. JKS\n`https_truststore_password`         | e.g. \"ssl-trust-pass\"\n[**Kafka Cluster Options**](https://kafka.apache.org/documentation/#adminclientconfigs) | kPow uses the same Kafka Cluster connection options as a standard consumer, producer, or admin client.\n`security_protocol`                 | e.g. SASL_SSL\n`sasl_mechanism`                    | e.g. PLAIN\n`sasl_jaas_config`                  | e.g. \"org.apache.kafka.common.security.plain.Plain..\"\n`sasl_login_callback_handler_class` | e.g. \"com.corp.kafka.security.sasl.oauth.KafkaBrokerTokenCreator\"\n`ssl_keystore_location`             | e.g. \"/ssl/kafka.keystore.jks\"\n`ssl_keystore_password`             | e.g. \"keystore-pass-123\"\n`ssl_key_password`                  | e.g. \"key-pass-123\"\n`ssl_keystore_type`                 | e.g. JKS\n`ssl_keymanager_algorithm`          | e.g. SunX509\n`ssl_truststore_location`           | e.g. \"/ssl/kafka.truststore.jks\"\n`ssl_truststore_password`           | e.g. \"trust-pass-123\"\n`ssl_truststore_type`               | e.g. JKS\n`ssl_trustmanager_algorithm`        | e.g. PKIX\n`ssl_endpoint_identification_algorithm` | e.g. https\n`ssl_provider`                      | e.g. \"default\"\n`ssl_cipher_suites`                 | e.g. \"default: \n`ssl_protocol`                      | e.g. TLS\n`ssl_enabled_protocols`             | e.g. \"TLSv.12,TLSv1.1,TLSv1\"\n`ssl_secure_random_implementation`  | e.g. SHA1PRNG\n[**Schema Registry**](https://docs.kpow.io/config/schema-registry) | Monitor and manage a Schema Registry connected to your Kafka Cluster\n`schema_registry_url`               | e.g. \"https://registry-host\"\n`schema_registry_auth`              | e.g. USER_INFO\n`schema_registry_user`              | e.g. registry-user\n`schema_registry_password`          | e.g. registry-pass\n[**Kafka Connect**](https://docs.kpow.io/config/kafka-connect) | Monitor and manage a Kafka Connect Cluster connected to your Kafka Cluster\n`connect_rest_url`                  | e.g. http://localhost:8083\n`connect_auth`                      | e.g. BASIC\n`connect_basic_auth_user`           | e.g. connect-user\n`connect_basic_auth_pass`           | e.g. connect-pass\n`connect_group_id`                  | e.g. connect-group-id\n`connect_offset_storage_topic`      | e.g. connect-topic\n[**Live Mode**](https://docs.kpow.io/features/live-mode) | View and monitor your Kafka resources in near-realtime\n`live_mode_enabled`                 | default: true\n`live_mode_period_ms`               | The duration of a live mode session, default: 60000ms / one minute\n`live_mode_interval`                | The duration between live mode snapshot gathering, default: 5000ms / five seconds\n`live_mode_max_concurrent_users`    | The number of concurrent live mode sessions that may be active, default: 2\n**Data Inspect**                  | Provide custom serdes, set default serdes, or restrict serdes available to users\n[custom_serdes](https://docs.kpow.io/features/data-inspect/serdes#custom-serdes) | e.g. \"io.kpow.SerdeOne,io.kpow.SerdeTwo\"\n`default_key_serdes`                | e.g. \"JSON\"\n`default_value_serdes`              | e.g. \"AVRO\"\n`available_key_serdes`              | e.g. \"JSON,String,Transit / JSON\"\n`available_value_serdes`            | e.g. \"JSON,String,io.kpow.SerdeOne\"\n[**Prometheus Endpoints**](https://docs.kpow.io/features/prometheus) | kPow provides metrics and offsets via Prometheus Endpoints for scraping into your enterprise monitoring system of choice.\n`prometheus_egress`                 | default: false\n[**Slack Integration**](https://docs.kpow.io/features/slack-integration) | kPow can send audit log records to a slack channel of your choosing\n`slack_webhook_url`                 | e.g \"https://hooks.slack.com/services/...\"\n[**Simple Access Control**](https://docs.kpow.io/user-authorization/simple-access-control) | kPow supports simple control of users actions via global access controls\n`allow_topic_create`                | default: false - Users may create new topics\n`allow_topic_delete`                | default: false - Users may delete existing topics\n`allow_topic_inspect`               | default: false - Users may view topic key and value content\n`allow_topic_produce`              | default: false - Users may produce new messages to topics\n`allow_topic_edit`                  | default: false - Users may edit topic configuration\n`allow_broker_edit`                 | default: false - Users may edit broker configuration\n`allow_group_edit`                  | default: false - Users may edit and delete consumer groups and group offsets\n`allow_schema_edit`                 | default: false - Users may edit schemas and subjects\n`allow_schema_create`               | default: false - Users may create new schemas and subjects\n`allow_connect_create`              | default: false - Users may create new connectors and tasks\n`allow_connect_edit`                | default: false - Users may edit, pause, delete, and restart connectors and tasks\n[**Role Based Access Control**](https://docs.kpow.io/user-authorization/role-based-access-control) | kPow supports Role Based Access Control when used in conjunction with User Authentication\n`rbac_configuration_file`           | e.g. \"/path/to/rbac-config.yaml\"\n[**Data Policies**](https://docs.kpow.io/features/data-policies) | kPow supports masking and redaction of sensitive data in Data Inspect and kREPL results\n`data_policy_configuration_file`       | e.g. \"/path/to/masking/config.yaml\"\n[**User Authentication**](https://docs.kpow.io/user-authentication/overview) | kPow supports a number of methods of User Authentication including SAML, Okta, and OpenID\n[**Okta SSO**](https://docs.kpow.io/user-authentication/openid/okta) | Authenticate users with Okta \n`auth_provider_type`                | \"okta\"\n`okta_organisation`                 | e.g. \"your-organisation\"\n`openid_client_id`                  | The 'Client ID' found in the \"Client Credentials\" section of your Okta integration\n`openid_client_secret`              | The 'Client Secret' found in the \"Client Credentials\" section of your Okta integration\n`openid_landing_uri`                | e.g. \"https://staging.kpow.z-corp.com\"\n[**Github SSO**](https://docs.kpow.io/user-authentication/openid/github) | Authenticate users with Github (including Github Enterprise)\n`auth_provider_type`                | \"github\"\n`openid_token_id`                   | e.g. \"https://github.com/login/oauth/access_token\" or \"[GHE Server URL]/login/oauth/access_token\"\n`openid_auth_uri`                   | e.g. \"https://github.com/login/oauth/authorize\" or \"[GHE Server URL]/login/oauth/authorize\"\n`openid_api_uri`                    | e.g. \"https://api.github.com/user\" or, \"[GHE Server URL]/api/v3/user\"\n`openid_client_id`                  | e.g. The 'Client ID' found in your configured Github Oath App\n`openid_client_secret`              | The 'Client Secret' found in your configured Github Oath App\n`openid_landing_uri`                | e.g. \"https://staging.kpow.z-corp.com/\"\n[**SAML SSO**](https://docs.kpow.io/user-authentication/saml) | Authenticate users with SAML (custom, Azure AD, AWS SSO, Okta, etc)\n`auth_provider_type`                | \"saml\"\n`saml_relying_party_identifier`     | e.g. \"kpow.io\"\n`saml_asc_url`                      | e.g. \"https://kpow.corp.com/saml\"\n`saml_metadata_file`                | e.g. \"/opt/kpow/aws-metadata.xml\" (optional)\n`saml_cert`                         | e.g. \"/var/certs/saml-cert.cer\"\n\n----\n\n## Providing Configuration Files to kPow\n\nSome of the configuration above is provided as files (e.g. YAML or Keystores). You will need to provide these iles in the form of secrets or configmaps.\n\nFor Example the specification ```https_keystore_location``` needs a keystore file in location *\"/ssl/https.keystore.jks\"*.\n\nThe Operator expectes the file in the form of a secret to be available in the namespace where its installed. \n\nPlease follow below instructions to know how to create the Secret or configmap for such CR Specifications listed above:\n\n**Command to Create ConfigMaps from a file:**\n\n```\n  oc create configmap <name of configmap> --from-file <file name> -n <project-name>\n```\n\n**Command to create secrets from a file:**\n\n```\n  oc create secret generic <name of secret> --from-file <file name> -n <project-name>\n```\n\n  **NOTE**:The configmaps and secrets must be created prior to running the operator and must adhere to the names mentioned below.\t\n  \n----    \nCR Spec          \t  \t\t\t\t\t\t\t    \t|       CR Value\t\t\t|  Creation command\n--------------------------------------------------------|---------------------------|-----------------------------\n`rbac_configuration.rbac_configuration_file`\t\t\t\t|/opt/kpow/rbac-config.yaml\t|oc create rbac-configuration --from-file rbac-config.yaml -n <project-name\\>\n`data_policy_configuration. data_policy_configuration_file`|/opt/kpow/data-config.yml\t|oc create data-policy-configuration --from-file data-config.yml -n <project-name\\>\n`kafka_cluster_configuration.ssl_keystore_location`\t\t|/ssl/kafka.keystore.jks\t|oc create secret generic kafka-keystore --from-file kafka.keystore.jks -n <project-name\\>\n`kafka_cluster_configuration.ssl_truststore_location`\t\t|/ssl/kafka.truststore.jks\t|oc create secret generic kafka-truststore --from-file kafka.truststore.jks -n <project-name\\>\n`https_configuration.https_keystore`\t\t\t\t\t\t|/ssl/https.keystore.jks\t|oc create secret generic https-keystore --from-file https.keystore.jks -n <project-name\\>\n`https_configuration.https_truststore`\t\t\t\t\t|/ssl/https.truststore.jks\t|oc create secret generic https-truststore --from-file https.truststore.jks -n   <project-name\\>\n`saml_sso_options.saml_metadata_file`\t\t\t\t\t\t|/opt/kpow/aws-metadata.xml\t|oc create saml-metadata --from-file aws-metadata.xml -n <project-name\\>\n`saml_sso_options.saml_cert`\t\t\t\t\t\t\t\t|/var/certs/saml-cert.cer\t|oc create secret generic saml-cert --from-file saml-cert.cer -n <project-name\\>\n",
      "csv_display_name": "kPow for Apache Kafka",
      "csv_metadata_description": "kPow is a toolkit for engineers who build, manage, and maintain systems powered by Apache Kafka",
      "csv_name": "kpow-io.v1.0.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:47:02.411000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kpow-io-certified",
      "provided_apis": [
        {
          "group": "kpow.io",
          "kind": "Kpow",
          "version": "v1beta1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "image": "registry.connect.redhat.com/operatr-io/kpow@sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "name": "kpow-9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185-annotation"
        },
        {
          "digest": "sha256:d1b17c96188a5f2748755f4de355a0f103e93b488108dbefb4c4b5714759f510",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:d1b17c96188a5f2748755f4de355a0f103e93b488108dbefb4c4b5714759f510",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:84fc5cafcf88e5334fbdd540da6d340ca401a69360560c7dde448c03c21a724f",
          "image": "registry.connect.redhat.com/operatr-io/kpow-operator@sha256:84fc5cafcf88e5334fbdd540da6d340ca401a69360560c7dde448c03c21a724f",
          "name": "manager"
        },
        {
          "digest": "sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "image": "registry.connect.redhat.com/operatr-io/kpow@sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "name": "kpow"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.4",
      "version_original": "1.0.4"
    },
    {
      "_id": "613f64a8a5ebcd070d164045",
      "alm_examples": [
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Adam",
          "metadata": {
            "name": "example-adam",
            "namespace": "appdynamics"
          },
          "spec": {
            "controllerUrl": "https://saas.appdynamics.com"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Clusteragent",
          "metadata": {
            "name": "k8s-cluster-agent",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "appName": "Cluster1",
            "controllerUrl": "https://saas.appdynamics.com",
            "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
            "serviceAccountName": "appdynamics-cluster-agent",
            "stdoutLogging": "true"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "InfraViz",
          "metadata": {
            "name": "appd-infraviz",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "controllerUrl": "https://saas.appdynamics.com",
            "enableDockerViz": "false",
            "enableMasters": true,
            "globalAccount": "customer1_12345",
            "netVizPort": 3892,
            "stdoutLogging": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/appdynamics/cluster-agent-operator-bundle@sha256:344e06684771a54b6a74d6d05713160381ffed8a472f0e1dcc4321ac21015c21",
      "bundle_path_digest": "sha256:344e06684771a54b6a74d6d05713160381ffed8a472f0e1dcc4321ac21015c21",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-13T14:48:08.958000+00:00",
      "csv_description": "AppDynamics Operator simplifies the configuration and lifecycle management of the AppDynamics ClusterAgent and the AppDynamics Machine Agent on different Kubernetes distributions and OpenShift. \nThe Operator encapsulates key operational knowledge on how to configure and upgrade the ClusterAgent and the Machine Agent. \nIt knows, for example, which configuration changes are benign and do not require restart of the ClusterAgent, \nwhich minimizes unnecesary load on the cluster API server.\n\n\n## Operator deployment\n\n* Create namespace for AppDynamics\n```\n  kubectl create namespace appdynamics\n```\n\n* Create Secret `cluster-agent-secret`. Set \"controller-key\" \nto the access key to the AppDynamics controller.  \n\n```\nkubectl -n appdynamics create secret generic cluster-agent-secret --from-literal=controller-key=\"<controller-access-key>\"\n```\n\n* Update the image reference in the Operator deployment spec, if necessary.  \n\nFor additional details refer to [this documentation](https://github.com/Appdynamics/appdynamics-operator)\n",
      "csv_display_name": "Appdynamics Operator",
      "csv_metadata_description": "End to end monitoring of applications on Kubernetes and OpenShift clusters with AppDynamics.",
      "csv_name": "appdynamics-operator.v0.6.11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:50:39.118000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "appdynamics-operator",
      "provided_apis": [
        {
          "group": "appdynamics.com",
          "kind": "InfraViz",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Adam",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Clusteragent",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Clustercollector",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Hostcollector",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "cluster-agent-operator-9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950-annotation"
        },
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "appdynamics-operator"
        },
        {
          "digest": "sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "name": "cluster-agent-5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.6.11",
      "version_original": "0.6.11"
    },
    {
      "_id": "613f690da5ebcd070d16404b",
      "alm_examples": [
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Adam",
          "metadata": {
            "name": "example-adam",
            "namespace": "appdynamics"
          },
          "spec": {
            "controllerUrl": "https://saas.appdynamics.com"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Clusteragent",
          "metadata": {
            "name": "k8s-cluster-agent",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "appName": "Cluster1",
            "controllerUrl": "https://saas.appdynamics.com",
            "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
            "serviceAccountName": "appdynamics-cluster-agent",
            "stdoutLogging": "true"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "InfraViz",
          "metadata": {
            "name": "appd-infraviz",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "controllerUrl": "https://saas.appdynamics.com",
            "enableDockerViz": "false",
            "enableMasters": true,
            "globalAccount": "customer1_12345",
            "image": "registry.connect.redhat.com/appdynamics/machine-agent-analytics@sha256:b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65",
            "netVizPort": 3892,
            "stdoutLogging": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/appdynamics/cluster-agent-operator-bundle@sha256:8334d8638984099f3ef40793e62f1e68e0691c05c86326ae40a752e39bf3f316",
      "bundle_path_digest": "sha256:8334d8638984099f3ef40793e62f1e68e0691c05c86326ae40a752e39bf3f316",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-13T15:06:53.534000+00:00",
      "csv_description": "AppDynamics Operator simplifies the configuration and lifecycle management of the AppDynamics ClusterAgent and the AppDynamics Machine Agent on different Kubernetes distributions and OpenShift. \nThe Operator encapsulates key operational knowledge on how to configure and upgrade the ClusterAgent and the Machine Agent. \nIt knows, for example, which configuration changes are benign and do not require restart of the ClusterAgent, \nwhich minimizes unnecesary load on the cluster API server.\n\n\n## Operator deployment\n\n* Create namespace for AppDynamics\n```\n  kubectl create namespace appdynamics\n```\n\n* Create Secret `cluster-agent-secret`. Set \"controller-key\" \nto the access key to the AppDynamics controller.  \n\n```\nkubectl -n appdynamics create secret generic cluster-agent-secret --from-literal=controller-key=\"<controller-access-key>\"\n```\n\n* Update the image reference in the Operator deployment spec, if necessary.  \n\nFor additional details refer to [this documentation](https://github.com/Appdynamics/appdynamics-operator)\n",
      "csv_display_name": "Appdynamics Operator",
      "csv_metadata_description": "End to end monitoring of applications on Kubernetes and OpenShift clusters with AppDynamics.",
      "csv_name": "appdynamics-operator.v0.6.12",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:59:25.390000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "appdynamics-operator",
      "provided_apis": [
        {
          "group": "appdynamics.com",
          "kind": "Hostcollector",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "InfraViz",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Adam",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Clusteragent",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Clustercollector",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "cluster-agent-operator-9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950-annotation"
        },
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "appdynamics-operator"
        },
        {
          "digest": "sha256:b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65",
          "image": "registry.connect.redhat.com/appdynamics/machine-agent-analytics@sha256:b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65",
          "name": "machine-agent-analytics-b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65-annotation"
        },
        {
          "digest": "sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "name": "cluster-agent-5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.6.12",
      "version_original": "0.6.12"
    },
    {
      "_id": "613f6a8cd63f43cf6ee3769b",
      "alm_examples": [
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Adam",
          "metadata": {
            "name": "example-adam",
            "namespace": "appdynamics"
          },
          "spec": {
            "controllerUrl": "https://saas.appdynamics.com"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Clusteragent",
          "metadata": {
            "name": "k8s-cluster-agent",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "appName": "Cluster1",
            "controllerUrl": "https://saas.appdynamics.com",
            "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
            "serviceAccountName": "appdynamics-cluster-agent",
            "stdoutLogging": "true"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "InfraViz",
          "metadata": {
            "name": "appd-infraviz",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "controllerUrl": "https://saas.appdynamics.com",
            "enableDockerViz": "false",
            "enableMasters": true,
            "globalAccount": "customer1_12345",
            "image": "registry.connect.redhat.com/appdynamics/machine-agent-analytics@sha256:b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65",
            "netVizPort": 3892,
            "stdoutLogging": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/appdynamics/cluster-agent-operator-bundle@sha256:8334d8638984099f3ef40793e62f1e68e0691c05c86326ae40a752e39bf3f316",
      "bundle_path_digest": "sha256:8334d8638984099f3ef40793e62f1e68e0691c05c86326ae40a752e39bf3f316",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-13T15:13:16.799000+00:00",
      "csv_description": "AppDynamics Operator simplifies the configuration and lifecycle management of the AppDynamics ClusterAgent and the AppDynamics Machine Agent on different Kubernetes distributions and OpenShift. \nThe Operator encapsulates key operational knowledge on how to configure and upgrade the ClusterAgent and the Machine Agent. \nIt knows, for example, which configuration changes are benign and do not require restart of the ClusterAgent, \nwhich minimizes unnecesary load on the cluster API server.\n\n\n## Operator deployment\n\n* Create namespace for AppDynamics\n```\n  kubectl create namespace appdynamics\n```\n\n* Create Secret `cluster-agent-secret`. Set \"controller-key\" \nto the access key to the AppDynamics controller.  \n\n```\nkubectl -n appdynamics create secret generic cluster-agent-secret --from-literal=controller-key=\"<controller-access-key>\"\n```\n\n* Update the image reference in the Operator deployment spec, if necessary.  \n\nFor additional details refer to [this documentation](https://github.com/Appdynamics/appdynamics-operator)\n",
      "csv_display_name": "Appdynamics Operator",
      "csv_metadata_description": "End to end monitoring of applications on Kubernetes and OpenShift clusters with AppDynamics.",
      "csv_name": "appdynamics-operator.v0.6.12",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:12:46.781000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "appdynamics-operator",
      "provided_apis": [
        {
          "group": "appdynamics.com",
          "kind": "Clustercollector",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Hostcollector",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "InfraViz",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Adam",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Clusteragent",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "cluster-agent-operator-9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950-annotation"
        },
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "appdynamics-operator"
        },
        {
          "digest": "sha256:b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65",
          "image": "registry.connect.redhat.com/appdynamics/machine-agent-analytics@sha256:b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65",
          "name": "machine-agent-analytics-b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65-annotation"
        },
        {
          "digest": "sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "name": "cluster-agent-5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.6.12",
      "version_original": "0.6.12"
    },
    {
      "_id": "613f6b771904331703806a7a",
      "alm_examples": [
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Adam",
          "metadata": {
            "name": "example-adam",
            "namespace": "appdynamics"
          },
          "spec": {
            "controllerUrl": "https://saas.appdynamics.com"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Clusteragent",
          "metadata": {
            "name": "k8s-cluster-agent",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "appName": "Cluster1",
            "controllerUrl": "https://saas.appdynamics.com",
            "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
            "serviceAccountName": "appdynamics-cluster-agent",
            "stdoutLogging": "true"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "InfraViz",
          "metadata": {
            "name": "appd-infraviz",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "controllerUrl": "https://saas.appdynamics.com",
            "enableDockerViz": "false",
            "enableMasters": true,
            "globalAccount": "customer1_12345",
            "image": "registry.connect.redhat.com/appdynamics/machine-agent-analytics@sha256:b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65",
            "netVizPort": 3892,
            "stdoutLogging": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/appdynamics/cluster-agent-operator-bundle@sha256:8334d8638984099f3ef40793e62f1e68e0691c05c86326ae40a752e39bf3f316",
      "bundle_path_digest": "sha256:8334d8638984099f3ef40793e62f1e68e0691c05c86326ae40a752e39bf3f316",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-13T15:17:11.304000+00:00",
      "csv_description": "AppDynamics Operator simplifies the configuration and lifecycle management of the AppDynamics ClusterAgent and the AppDynamics Machine Agent on different Kubernetes distributions and OpenShift. \nThe Operator encapsulates key operational knowledge on how to configure and upgrade the ClusterAgent and the Machine Agent. \nIt knows, for example, which configuration changes are benign and do not require restart of the ClusterAgent, \nwhich minimizes unnecesary load on the cluster API server.\n\n\n## Operator deployment\n\n* Create namespace for AppDynamics\n```\n  kubectl create namespace appdynamics\n```\n\n* Create Secret `cluster-agent-secret`. Set \"controller-key\" \nto the access key to the AppDynamics controller.  \n\n```\nkubectl -n appdynamics create secret generic cluster-agent-secret --from-literal=controller-key=\"<controller-access-key>\"\n```\n\n* Update the image reference in the Operator deployment spec, if necessary.  \n\nFor additional details refer to [this documentation](https://github.com/Appdynamics/appdynamics-operator)\n",
      "csv_display_name": "Appdynamics Operator",
      "csv_metadata_description": "End to end monitoring of applications on Kubernetes and OpenShift clusters with AppDynamics.",
      "csv_name": "appdynamics-operator.v0.6.12",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:12:29.717000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "appdynamics-operator",
      "provided_apis": [
        {
          "group": "appdynamics.com",
          "kind": "Clusteragent",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Clustercollector",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Hostcollector",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "InfraViz",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Adam",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "cluster-agent-operator-9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950-annotation"
        },
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "appdynamics-operator"
        },
        {
          "digest": "sha256:b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65",
          "image": "registry.connect.redhat.com/appdynamics/machine-agent-analytics@sha256:b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65",
          "name": "machine-agent-analytics-b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65-annotation"
        },
        {
          "digest": "sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "name": "cluster-agent-5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.6.12",
      "version_original": "0.6.12"
    },
    {
      "_id": "61401834c9bc35f21dc4a44f",
      "alm_examples": [
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCluster",
          "metadata": {
            "name": "cb-example"
          },
          "spec": {
            "backup": {
              "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              },
              "serviceAccountName": "couchbase-backup"
            },
            "buckets": {
              "managed": true,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            },
            "cluster": {
              "analyticsServiceMemoryQuota": "1Gi",
              "autoCompaction": {
                "databaseFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                },
                "parallelCompaction": false,
                "timeWindow": {
                  "abortCompactionOutsideWindow": true,
                  "end": "06:00",
                  "start": "02:00"
                },
                "tombstonePurgeInterval": "72h",
                "viewFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                }
              },
              "autoFailoverMaxCount": 3,
              "autoFailoverOnDataDiskIssues": true,
              "autoFailoverOnDataDiskIssuesTimePeriod": "120s",
              "autoFailoverServerGroup": false,
              "autoFailoverTimeout": "120s",
              "clusterName": "cb-example",
              "dataServiceMemoryQuota": "256Mi",
              "eventingServiceMemoryQuota": "256Mi",
              "indexServiceMemoryQuota": "256Mi",
              "indexStorageSetting": "memory_optimized",
              "searchServiceMemoryQuota": "256Mi"
            },
            "enablePreviewScaling": false,
            "hibernate": false,
            "hibernationStrategy": "Immediate",
            "image": "registry.connect.redhat.com/couchbase/server@sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
            "logRetentionCount": 20,
            "logRetentionTime": "604800s",
            "monitoring": {
              "prometheus": {
                "enabled": false,
                "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784"
              }
            },
            "networking": {
              "adminConsoleServiceType": "NodePort",
              "adminConsoleServices": [
                "data"
              ],
              "exposeAdminConsole": true,
              "exposedFeatureServiceType": "NodePort",
              "exposedFeatures": [
                "xdcr"
              ]
            },
            "recoveryPolicy": "PrioritizeDataIntegrity",
            "security": {
              "adminSecret": "cb-example-auth",
              "rbac": {
                "managed": true,
                "selector": {
                  "matchLabels": {
                    "cluster": "cb-example"
                  }
                }
              }
            },
            "servers": [
              {
                "name": "all_services",
                "services": [
                  "data",
                  "index",
                  "query",
                  "search",
                  "eventing",
                  "analytics"
                ],
                "size": 3
              }
            ],
            "upgradeStrategy": "RollingUpgrade",
            "xdcr": {
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "default"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "enableIndexReplica": true,
            "evictionPolicy": "valueOnly",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseEphemeralBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "ephemeral-bucket"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "evictionPolicy": "noEviction",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseMemcachedBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "memcached-bucket"
          },
          "spec": {
            "enableFlush": false,
            "memoryQuota": "100Mi"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseUser",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-user"
          },
          "spec": {
            "authDomain": "local",
            "authSecret": "cb-example-auth",
            "fullName": "My User"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseGroup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-group"
          },
          "spec": {
            "roles": [
              {
                "bucket": "default",
                "name": "bucket_admin"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseRoleBinding",
          "metadata": {
            "name": "my-role-binding"
          },
          "spec": {
            "roleRef": {
              "kind": "CouchbaseGroup",
              "name": "my-group"
            },
            "subjects": [
              {
                "kind": "CouchbaseUser",
                "name": "my-user"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseReplication",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-replication"
          },
          "spec": {
            "bucket": "default",
            "compressionType": "Snappy",
            "filterExpression": "",
            "paused": false,
            "remoteBucket": "default"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-backup"
          },
          "spec": {
            "backOffLimit": 2,
            "backupRetention": "24h",
            "failedJobsHistoryLimit": 3,
            "full": {
              "schedule": "0 3 * * 6"
            },
            "incremental": {
              "schedule": "0 3 * * 1-6"
            },
            "logRetention": "24h",
            "size": "5Gi",
            "strategy": "full_incremental",
            "successfulJobsHistoryLimit": 1
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackupRestore",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-restore"
          },
          "spec": {
            "backOffLimit": 2,
            "backup": "cb-backup",
            "end": {
              "int": 1
            },
            "logRetention": "24h",
            "repo": "cb-example-2020-10-29T19_00_03",
            "start": {
              "int": 1
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseAutoscaler",
          "metadata": {
            "name": "do.not.create.internal.only"
          },
          "spec": {
            "servers": "internal",
            "size": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:df774ff23ab5a517a99d2d6565144574a29566ea8120d27803767aaf7f1c3b7c",
      "bundle_path_digest": "sha256:df774ff23ab5a517a99d2d6565144574a29566ea8120d27803767aaf7f1c3b7c",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-14T03:34:12.019000+00:00",
      "csv_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments on OpenShift. By installing this integration you will be able to deply Couchbase Server clusters with a single command.\n\n## Supported Features\n\n* **Automated cluster provisioning** - Deploying a Couchbase Cluster has never been easier. Fill out a Couchbase specific configuration and let the Couchbase Operator take care of provisioning nodes and setting up cluster to your exact specification.\n\n* **On-demand scalability** - Automatically scale your cluster up or down by changing a simple configuration parameter and let the Couchbase Operator handle provisioning of new nodes and joining them into the cluster.\n\n* **Auto-recovery** - Detect Couchbase node failures, rebalance out bad nodes, and bring the cluster back up to the desired capacity. Auto-recovery is completely automated so you can sleep easy through the night knowing that the Couchbase Operator will handle any failures.\n\n* **Geo-distribution** - Replicate your data between datacenters to move data closer to the users who consume it and protect against disaster scenarios where an entire datacenter becomes unavailable.\n\n* **Persistent storage** - Define persistent network-attached storage for each node in your cluster to allow pods to be recovered even if the node they were running on is no longer available.\n\n* **Rack/zone awareness** - Tell the Couchbase Operator about availability zones in your datacenter and let the operator take care of ensuring that nodes in your cluster are deployed equally across each zone.\n\n* **Supportability** - When things go wrong, use the cbopinfo tool provided with the Couchbase Operator to collect relevant data about your Couchbase deployment so that you can quickly address issues.\n\n* **Centralized configuration management** - Manage your configuration centrally with OpenShift. Updates to the configuration are watched by the Couchbase Operator and actions are taken to make the target cluster match the desired configuration.\n## Required Parameters\n* `authSecret` - provide the name of a secret that contains two keys for the `username` and `password` of the super user ([documentation](https://docs.couchbase.com/operator/1.2/couchbase-cluster-config.html))\n\n## About Couchbase Server\n\nBuilt on the most powerful NoSQL technology, Couchbase Server delivers unparalleled performance at scale, in any cloud. With features like memory-first architecture, geo-distributed deployments, and workload isolation, Couchbase Server excels at supporting mission-critical applications at scale while maintaining submillisecond latencies and 99.999% availability. Plus, with the most comprehensive SQL-compatible query language (N1QL), migrating from RDBMS to Couchbase Server is easy with ANSI joins.\n",
      "csv_display_name": "Couchbase Operator",
      "csv_metadata_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments",
      "csv_name": "couchbase-operator.v2.2.1-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:00:43.568000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "plural": "couchbasememcachedbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "plural": "couchbasebackuprestores",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseAutoscaler",
          "plural": "couchbaseautoscalers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "plural": "couchbasereplications",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "plural": "couchbaseephemeralbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v2"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "name": "operator-81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f-annotation"
        },
        {
          "digest": "sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "name": "couchbase-operator"
        },
        {
          "digest": "sha256:187046a848f32233e7e92705c57fa864b1d373c2078a92b51c9706bec6e372e5",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:187046a848f32233e7e92705c57fa864b1d373c2078a92b51c9706bec6e372e5",
          "name": "couchbase_server"
        },
        {
          "digest": "sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "name": "couchbase_backup"
        },
        {
          "digest": "sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "name": "couchbase_metrics"
        },
        {
          "digest": "sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "name": "exporter-b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784-annotation"
        },
        {
          "digest": "sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "name": "operator-backup-c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76-annotation"
        },
        {
          "digest": "sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
          "name": "server-c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.2.1-1",
      "version_original": "2.2.1-1"
    },
    {
      "_id": "614018a2a5ebcd070d164099",
      "alm_examples": [
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCluster",
          "metadata": {
            "name": "cb-example"
          },
          "spec": {
            "backup": {
              "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              },
              "serviceAccountName": "couchbase-backup"
            },
            "buckets": {
              "managed": true,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            },
            "cluster": {
              "analyticsServiceMemoryQuota": "1Gi",
              "autoCompaction": {
                "databaseFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                },
                "parallelCompaction": false,
                "timeWindow": {
                  "abortCompactionOutsideWindow": true,
                  "end": "06:00",
                  "start": "02:00"
                },
                "tombstonePurgeInterval": "72h",
                "viewFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                }
              },
              "autoFailoverMaxCount": 3,
              "autoFailoverOnDataDiskIssues": true,
              "autoFailoverOnDataDiskIssuesTimePeriod": "120s",
              "autoFailoverServerGroup": false,
              "autoFailoverTimeout": "120s",
              "clusterName": "cb-example",
              "dataServiceMemoryQuota": "256Mi",
              "eventingServiceMemoryQuota": "256Mi",
              "indexServiceMemoryQuota": "256Mi",
              "indexStorageSetting": "memory_optimized",
              "searchServiceMemoryQuota": "256Mi"
            },
            "enablePreviewScaling": false,
            "hibernate": false,
            "hibernationStrategy": "Immediate",
            "image": "registry.connect.redhat.com/couchbase/server@sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
            "logRetentionCount": 20,
            "logRetentionTime": "604800s",
            "monitoring": {
              "prometheus": {
                "enabled": false,
                "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784"
              }
            },
            "networking": {
              "adminConsoleServiceType": "NodePort",
              "adminConsoleServices": [
                "data"
              ],
              "exposeAdminConsole": true,
              "exposedFeatureServiceType": "NodePort",
              "exposedFeatures": [
                "xdcr"
              ]
            },
            "recoveryPolicy": "PrioritizeDataIntegrity",
            "security": {
              "adminSecret": "cb-example-auth",
              "rbac": {
                "managed": true,
                "selector": {
                  "matchLabels": {
                    "cluster": "cb-example"
                  }
                }
              }
            },
            "servers": [
              {
                "name": "all_services",
                "services": [
                  "data",
                  "index",
                  "query",
                  "search",
                  "eventing",
                  "analytics"
                ],
                "size": 3
              }
            ],
            "upgradeStrategy": "RollingUpgrade",
            "xdcr": {
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "default"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "enableIndexReplica": true,
            "evictionPolicy": "valueOnly",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseEphemeralBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "ephemeral-bucket"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "evictionPolicy": "noEviction",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseMemcachedBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "memcached-bucket"
          },
          "spec": {
            "enableFlush": false,
            "memoryQuota": "100Mi"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseUser",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-user"
          },
          "spec": {
            "authDomain": "local",
            "authSecret": "cb-example-auth",
            "fullName": "My User"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseGroup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-group"
          },
          "spec": {
            "roles": [
              {
                "bucket": "default",
                "name": "bucket_admin"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseRoleBinding",
          "metadata": {
            "name": "my-role-binding"
          },
          "spec": {
            "roleRef": {
              "kind": "CouchbaseGroup",
              "name": "my-group"
            },
            "subjects": [
              {
                "kind": "CouchbaseUser",
                "name": "my-user"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseReplication",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-replication"
          },
          "spec": {
            "bucket": "default",
            "compressionType": "Snappy",
            "filterExpression": "",
            "paused": false,
            "remoteBucket": "default"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-backup"
          },
          "spec": {
            "backOffLimit": 2,
            "backupRetention": "24h",
            "failedJobsHistoryLimit": 3,
            "full": {
              "schedule": "0 3 * * 6"
            },
            "incremental": {
              "schedule": "0 3 * * 1-6"
            },
            "logRetention": "24h",
            "size": "5Gi",
            "strategy": "full_incremental",
            "successfulJobsHistoryLimit": 1
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackupRestore",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-restore"
          },
          "spec": {
            "backOffLimit": 2,
            "backup": "cb-backup",
            "end": {
              "int": 1
            },
            "logRetention": "24h",
            "repo": "cb-example-2020-10-29T19_00_03",
            "start": {
              "int": 1
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseAutoscaler",
          "metadata": {
            "name": "do.not.create.internal.only"
          },
          "spec": {
            "servers": "internal",
            "size": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:df774ff23ab5a517a99d2d6565144574a29566ea8120d27803767aaf7f1c3b7c",
      "bundle_path_digest": "sha256:df774ff23ab5a517a99d2d6565144574a29566ea8120d27803767aaf7f1c3b7c",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-14T03:36:02.946000+00:00",
      "csv_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments on OpenShift. By installing this integration you will be able to deply Couchbase Server clusters with a single command.\n\n## Supported Features\n\n* **Automated cluster provisioning** - Deploying a Couchbase Cluster has never been easier. Fill out a Couchbase specific configuration and let the Couchbase Operator take care of provisioning nodes and setting up cluster to your exact specification.\n\n* **On-demand scalability** - Automatically scale your cluster up or down by changing a simple configuration parameter and let the Couchbase Operator handle provisioning of new nodes and joining them into the cluster.\n\n* **Auto-recovery** - Detect Couchbase node failures, rebalance out bad nodes, and bring the cluster back up to the desired capacity. Auto-recovery is completely automated so you can sleep easy through the night knowing that the Couchbase Operator will handle any failures.\n\n* **Geo-distribution** - Replicate your data between datacenters to move data closer to the users who consume it and protect against disaster scenarios where an entire datacenter becomes unavailable.\n\n* **Persistent storage** - Define persistent network-attached storage for each node in your cluster to allow pods to be recovered even if the node they were running on is no longer available.\n\n* **Rack/zone awareness** - Tell the Couchbase Operator about availability zones in your datacenter and let the operator take care of ensuring that nodes in your cluster are deployed equally across each zone.\n\n* **Supportability** - When things go wrong, use the cbopinfo tool provided with the Couchbase Operator to collect relevant data about your Couchbase deployment so that you can quickly address issues.\n\n* **Centralized configuration management** - Manage your configuration centrally with OpenShift. Updates to the configuration are watched by the Couchbase Operator and actions are taken to make the target cluster match the desired configuration.\n## Required Parameters\n* `authSecret` - provide the name of a secret that contains two keys for the `username` and `password` of the super user ([documentation](https://docs.couchbase.com/operator/1.2/couchbase-cluster-config.html))\n\n## About Couchbase Server\n\nBuilt on the most powerful NoSQL technology, Couchbase Server delivers unparalleled performance at scale, in any cloud. With features like memory-first architecture, geo-distributed deployments, and workload isolation, Couchbase Server excels at supporting mission-critical applications at scale while maintaining submillisecond latencies and 99.999% availability. Plus, with the most comprehensive SQL-compatible query language (N1QL), migrating from RDBMS to Couchbase Server is easy with ANSI joins.\n",
      "csv_display_name": "Couchbase Operator",
      "csv_metadata_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments",
      "csv_name": "couchbase-operator.v2.2.1-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:02:11.632000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "plural": "couchbasememcachedbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "plural": "couchbasereplications",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseAutoscaler",
          "plural": "couchbaseautoscalers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "plural": "couchbaseephemeralbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "plural": "couchbasebackuprestores",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v2"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "name": "operator-81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f-annotation"
        },
        {
          "digest": "sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "name": "couchbase-operator"
        },
        {
          "digest": "sha256:187046a848f32233e7e92705c57fa864b1d373c2078a92b51c9706bec6e372e5",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:187046a848f32233e7e92705c57fa864b1d373c2078a92b51c9706bec6e372e5",
          "name": "couchbase_server"
        },
        {
          "digest": "sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "name": "couchbase_backup"
        },
        {
          "digest": "sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "name": "couchbase_metrics"
        },
        {
          "digest": "sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "name": "exporter-b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784-annotation"
        },
        {
          "digest": "sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "name": "operator-backup-c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76-annotation"
        },
        {
          "digest": "sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
          "name": "server-c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.2.1-1",
      "version_original": "2.2.1-1"
    },
    {
      "_id": "61401f7aa5ebcd070d1640a7",
      "alm_examples": [
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCluster",
          "metadata": {
            "name": "cb-example"
          },
          "spec": {
            "backup": {
              "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              },
              "serviceAccountName": "couchbase-backup"
            },
            "buckets": {
              "managed": true,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            },
            "cluster": {
              "analyticsServiceMemoryQuota": "1Gi",
              "autoCompaction": {
                "databaseFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                },
                "parallelCompaction": false,
                "timeWindow": {
                  "abortCompactionOutsideWindow": true,
                  "end": "06:00",
                  "start": "02:00"
                },
                "tombstonePurgeInterval": "72h",
                "viewFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                }
              },
              "autoFailoverMaxCount": 3,
              "autoFailoverOnDataDiskIssues": true,
              "autoFailoverOnDataDiskIssuesTimePeriod": "120s",
              "autoFailoverServerGroup": false,
              "autoFailoverTimeout": "120s",
              "clusterName": "cb-example",
              "dataServiceMemoryQuota": "256Mi",
              "eventingServiceMemoryQuota": "256Mi",
              "indexServiceMemoryQuota": "256Mi",
              "indexStorageSetting": "memory_optimized",
              "searchServiceMemoryQuota": "256Mi"
            },
            "enablePreviewScaling": false,
            "hibernate": false,
            "hibernationStrategy": "Immediate",
            "image": "registry.connect.redhat.com/couchbase/server@sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
            "logRetentionCount": 20,
            "logRetentionTime": "604800s",
            "monitoring": {
              "prometheus": {
                "enabled": false,
                "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784"
              }
            },
            "networking": {
              "adminConsoleServiceType": "NodePort",
              "adminConsoleServices": [
                "data"
              ],
              "exposeAdminConsole": true,
              "exposedFeatureServiceType": "NodePort",
              "exposedFeatures": [
                "xdcr"
              ]
            },
            "recoveryPolicy": "PrioritizeDataIntegrity",
            "security": {
              "adminSecret": "cb-example-auth",
              "rbac": {
                "managed": true,
                "selector": {
                  "matchLabels": {
                    "cluster": "cb-example"
                  }
                }
              }
            },
            "servers": [
              {
                "name": "all_services",
                "services": [
                  "data",
                  "index",
                  "query",
                  "search",
                  "eventing",
                  "analytics"
                ],
                "size": 3
              }
            ],
            "upgradeStrategy": "RollingUpgrade",
            "xdcr": {
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "default"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "enableIndexReplica": true,
            "evictionPolicy": "valueOnly",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseEphemeralBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "ephemeral-bucket"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "evictionPolicy": "noEviction",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseMemcachedBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "memcached-bucket"
          },
          "spec": {
            "enableFlush": false,
            "memoryQuota": "100Mi"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseUser",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-user"
          },
          "spec": {
            "authDomain": "local",
            "authSecret": "cb-example-auth",
            "fullName": "My User"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseGroup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-group"
          },
          "spec": {
            "roles": [
              {
                "bucket": "default",
                "name": "bucket_admin"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseRoleBinding",
          "metadata": {
            "name": "my-role-binding"
          },
          "spec": {
            "roleRef": {
              "kind": "CouchbaseGroup",
              "name": "my-group"
            },
            "subjects": [
              {
                "kind": "CouchbaseUser",
                "name": "my-user"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseReplication",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-replication"
          },
          "spec": {
            "bucket": "default",
            "compressionType": "Snappy",
            "filterExpression": "",
            "paused": false,
            "remoteBucket": "default"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-backup"
          },
          "spec": {
            "backOffLimit": 2,
            "backupRetention": "24h",
            "failedJobsHistoryLimit": 3,
            "full": {
              "schedule": "0 3 * * 6"
            },
            "incremental": {
              "schedule": "0 3 * * 1-6"
            },
            "logRetention": "24h",
            "size": "5Gi",
            "strategy": "full_incremental",
            "successfulJobsHistoryLimit": 1
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackupRestore",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-restore"
          },
          "spec": {
            "backOffLimit": 2,
            "backup": "cb-backup",
            "end": {
              "int": 1
            },
            "logRetention": "24h",
            "repo": "cb-example-2020-10-29T19_00_03",
            "start": {
              "int": 1
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseAutoscaler",
          "metadata": {
            "name": "do.not.create.internal.only"
          },
          "spec": {
            "servers": "internal",
            "size": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:df774ff23ab5a517a99d2d6565144574a29566ea8120d27803767aaf7f1c3b7c",
      "bundle_path_digest": "sha256:df774ff23ab5a517a99d2d6565144574a29566ea8120d27803767aaf7f1c3b7c",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-14T04:05:14.848000+00:00",
      "csv_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments on OpenShift. By installing this integration you will be able to deply Couchbase Server clusters with a single command.\n\n## Supported Features\n\n* **Automated cluster provisioning** - Deploying a Couchbase Cluster has never been easier. Fill out a Couchbase specific configuration and let the Couchbase Operator take care of provisioning nodes and setting up cluster to your exact specification.\n\n* **On-demand scalability** - Automatically scale your cluster up or down by changing a simple configuration parameter and let the Couchbase Operator handle provisioning of new nodes and joining them into the cluster.\n\n* **Auto-recovery** - Detect Couchbase node failures, rebalance out bad nodes, and bring the cluster back up to the desired capacity. Auto-recovery is completely automated so you can sleep easy through the night knowing that the Couchbase Operator will handle any failures.\n\n* **Geo-distribution** - Replicate your data between datacenters to move data closer to the users who consume it and protect against disaster scenarios where an entire datacenter becomes unavailable.\n\n* **Persistent storage** - Define persistent network-attached storage for each node in your cluster to allow pods to be recovered even if the node they were running on is no longer available.\n\n* **Rack/zone awareness** - Tell the Couchbase Operator about availability zones in your datacenter and let the operator take care of ensuring that nodes in your cluster are deployed equally across each zone.\n\n* **Supportability** - When things go wrong, use the cbopinfo tool provided with the Couchbase Operator to collect relevant data about your Couchbase deployment so that you can quickly address issues.\n\n* **Centralized configuration management** - Manage your configuration centrally with OpenShift. Updates to the configuration are watched by the Couchbase Operator and actions are taken to make the target cluster match the desired configuration.\n## Required Parameters\n* `authSecret` - provide the name of a secret that contains two keys for the `username` and `password` of the super user ([documentation](https://docs.couchbase.com/operator/1.2/couchbase-cluster-config.html))\n\n## About Couchbase Server\n\nBuilt on the most powerful NoSQL technology, Couchbase Server delivers unparalleled performance at scale, in any cloud. With features like memory-first architecture, geo-distributed deployments, and workload isolation, Couchbase Server excels at supporting mission-critical applications at scale while maintaining submillisecond latencies and 99.999% availability. Plus, with the most comprehensive SQL-compatible query language (N1QL), migrating from RDBMS to Couchbase Server is easy with ANSI joins.\n",
      "csv_display_name": "Couchbase Operator",
      "csv_metadata_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments",
      "csv_name": "couchbase-operator.v2.2.1-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:48:12.717000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "plural": "couchbasebackuprestores",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "plural": "couchbasereplications",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "plural": "couchbaseephemeralbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "plural": "couchbasememcachedbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseAutoscaler",
          "plural": "couchbaseautoscalers",
          "version": "v2"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "name": "operator-81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f-annotation"
        },
        {
          "digest": "sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "name": "couchbase-operator"
        },
        {
          "digest": "sha256:187046a848f32233e7e92705c57fa864b1d373c2078a92b51c9706bec6e372e5",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:187046a848f32233e7e92705c57fa864b1d373c2078a92b51c9706bec6e372e5",
          "name": "couchbase_server"
        },
        {
          "digest": "sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "name": "couchbase_backup"
        },
        {
          "digest": "sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "name": "couchbase_metrics"
        },
        {
          "digest": "sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "name": "exporter-b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784-annotation"
        },
        {
          "digest": "sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "name": "operator-backup-c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76-annotation"
        },
        {
          "digest": "sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
          "name": "server-c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.2.1-1",
      "version_original": "2.2.1-1"
    },
    {
      "_id": "61402200a5ebcd070d1640a8",
      "alm_examples": [
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCluster",
          "metadata": {
            "name": "cb-example"
          },
          "spec": {
            "backup": {
              "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              },
              "serviceAccountName": "couchbase-backup"
            },
            "buckets": {
              "managed": true,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            },
            "cluster": {
              "analyticsServiceMemoryQuota": "1Gi",
              "autoCompaction": {
                "databaseFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                },
                "parallelCompaction": false,
                "timeWindow": {
                  "abortCompactionOutsideWindow": true,
                  "end": "06:00",
                  "start": "02:00"
                },
                "tombstonePurgeInterval": "72h",
                "viewFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                }
              },
              "autoFailoverMaxCount": 3,
              "autoFailoverOnDataDiskIssues": true,
              "autoFailoverOnDataDiskIssuesTimePeriod": "120s",
              "autoFailoverServerGroup": false,
              "autoFailoverTimeout": "120s",
              "clusterName": "cb-example",
              "dataServiceMemoryQuota": "256Mi",
              "eventingServiceMemoryQuota": "256Mi",
              "indexServiceMemoryQuota": "256Mi",
              "indexStorageSetting": "memory_optimized",
              "searchServiceMemoryQuota": "256Mi"
            },
            "enablePreviewScaling": false,
            "hibernate": false,
            "hibernationStrategy": "Immediate",
            "image": "registry.connect.redhat.com/couchbase/server@sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
            "logRetentionCount": 20,
            "logRetentionTime": "604800s",
            "monitoring": {
              "prometheus": {
                "enabled": false,
                "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784"
              }
            },
            "networking": {
              "adminConsoleServiceType": "NodePort",
              "adminConsoleServices": [
                "data"
              ],
              "exposeAdminConsole": true,
              "exposedFeatureServiceType": "NodePort",
              "exposedFeatures": [
                "xdcr"
              ]
            },
            "recoveryPolicy": "PrioritizeDataIntegrity",
            "security": {
              "adminSecret": "cb-example-auth",
              "rbac": {
                "managed": true,
                "selector": {
                  "matchLabels": {
                    "cluster": "cb-example"
                  }
                }
              }
            },
            "servers": [
              {
                "name": "all_services",
                "services": [
                  "data",
                  "index",
                  "query",
                  "search",
                  "eventing",
                  "analytics"
                ],
                "size": 3
              }
            ],
            "upgradeStrategy": "RollingUpgrade",
            "xdcr": {
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "default"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "enableIndexReplica": true,
            "evictionPolicy": "valueOnly",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseEphemeralBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "ephemeral-bucket"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "evictionPolicy": "noEviction",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseMemcachedBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "memcached-bucket"
          },
          "spec": {
            "enableFlush": false,
            "memoryQuota": "100Mi"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseUser",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-user"
          },
          "spec": {
            "authDomain": "local",
            "authSecret": "cb-example-auth",
            "fullName": "My User"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseGroup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-group"
          },
          "spec": {
            "roles": [
              {
                "bucket": "default",
                "name": "bucket_admin"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseRoleBinding",
          "metadata": {
            "name": "my-role-binding"
          },
          "spec": {
            "roleRef": {
              "kind": "CouchbaseGroup",
              "name": "my-group"
            },
            "subjects": [
              {
                "kind": "CouchbaseUser",
                "name": "my-user"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseReplication",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-replication"
          },
          "spec": {
            "bucket": "default",
            "compressionType": "Snappy",
            "filterExpression": "",
            "paused": false,
            "remoteBucket": "default"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-backup"
          },
          "spec": {
            "backOffLimit": 2,
            "backupRetention": "24h",
            "failedJobsHistoryLimit": 3,
            "full": {
              "schedule": "0 3 * * 6"
            },
            "incremental": {
              "schedule": "0 3 * * 1-6"
            },
            "logRetention": "24h",
            "size": "5Gi",
            "strategy": "full_incremental",
            "successfulJobsHistoryLimit": 1
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackupRestore",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-restore"
          },
          "spec": {
            "backOffLimit": 2,
            "backup": "cb-backup",
            "end": {
              "int": 1
            },
            "logRetention": "24h",
            "repo": "cb-example-2020-10-29T19_00_03",
            "start": {
              "int": 1
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseAutoscaler",
          "metadata": {
            "name": "do.not.create.internal.only"
          },
          "spec": {
            "servers": "internal",
            "size": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:df774ff23ab5a517a99d2d6565144574a29566ea8120d27803767aaf7f1c3b7c",
      "bundle_path_digest": "sha256:df774ff23ab5a517a99d2d6565144574a29566ea8120d27803767aaf7f1c3b7c",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-14T04:16:00.585000+00:00",
      "csv_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments on OpenShift. By installing this integration you will be able to deply Couchbase Server clusters with a single command.\n\n## Supported Features\n\n* **Automated cluster provisioning** - Deploying a Couchbase Cluster has never been easier. Fill out a Couchbase specific configuration and let the Couchbase Operator take care of provisioning nodes and setting up cluster to your exact specification.\n\n* **On-demand scalability** - Automatically scale your cluster up or down by changing a simple configuration parameter and let the Couchbase Operator handle provisioning of new nodes and joining them into the cluster.\n\n* **Auto-recovery** - Detect Couchbase node failures, rebalance out bad nodes, and bring the cluster back up to the desired capacity. Auto-recovery is completely automated so you can sleep easy through the night knowing that the Couchbase Operator will handle any failures.\n\n* **Geo-distribution** - Replicate your data between datacenters to move data closer to the users who consume it and protect against disaster scenarios where an entire datacenter becomes unavailable.\n\n* **Persistent storage** - Define persistent network-attached storage for each node in your cluster to allow pods to be recovered even if the node they were running on is no longer available.\n\n* **Rack/zone awareness** - Tell the Couchbase Operator about availability zones in your datacenter and let the operator take care of ensuring that nodes in your cluster are deployed equally across each zone.\n\n* **Supportability** - When things go wrong, use the cbopinfo tool provided with the Couchbase Operator to collect relevant data about your Couchbase deployment so that you can quickly address issues.\n\n* **Centralized configuration management** - Manage your configuration centrally with OpenShift. Updates to the configuration are watched by the Couchbase Operator and actions are taken to make the target cluster match the desired configuration.\n## Required Parameters\n* `authSecret` - provide the name of a secret that contains two keys for the `username` and `password` of the super user ([documentation](https://docs.couchbase.com/operator/1.2/couchbase-cluster-config.html))\n\n## About Couchbase Server\n\nBuilt on the most powerful NoSQL technology, Couchbase Server delivers unparalleled performance at scale, in any cloud. With features like memory-first architecture, geo-distributed deployments, and workload isolation, Couchbase Server excels at supporting mission-critical applications at scale while maintaining submillisecond latencies and 99.999% availability. Plus, with the most comprehensive SQL-compatible query language (N1QL), migrating from RDBMS to Couchbase Server is easy with ANSI joins.\n",
      "csv_display_name": "Couchbase Operator",
      "csv_metadata_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments",
      "csv_name": "couchbase-operator.v2.2.1-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:14:25.878000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "plural": "couchbasereplications",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseAutoscaler",
          "plural": "couchbaseautoscalers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "plural": "couchbasebackuprestores",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "plural": "couchbaseephemeralbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "plural": "couchbasememcachedbuckets",
          "version": "v2"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "name": "operator-81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f-annotation"
        },
        {
          "digest": "sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "name": "couchbase-operator"
        },
        {
          "digest": "sha256:187046a848f32233e7e92705c57fa864b1d373c2078a92b51c9706bec6e372e5",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:187046a848f32233e7e92705c57fa864b1d373c2078a92b51c9706bec6e372e5",
          "name": "couchbase_server"
        },
        {
          "digest": "sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "name": "couchbase_backup"
        },
        {
          "digest": "sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "name": "couchbase_metrics"
        },
        {
          "digest": "sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "name": "exporter-b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784-annotation"
        },
        {
          "digest": "sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "name": "operator-backup-c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76-annotation"
        },
        {
          "digest": "sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
          "name": "server-c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.2.1-1",
      "version_original": "2.2.1-1"
    },
    {
      "_id": "6140d6a1cc19c4a9a27dd309",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:06:41.002000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:18:20.268000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "6140d76f3cdb0ef49d8c7095",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-97.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "bundle_path_digest": "sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:10:07.994000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-12a",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T15:11:20.123000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator-f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730-annotation"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.20-12a",
      "version_original": "6.0.20-12a"
    },
    {
      "_id": "6140d781cc19c4a9a27dd310",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "bundle_path_digest": "sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:10:25.184000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:20:05.789000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "redislabs/operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "operator-998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b-annotation"
        },
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.6-24",
      "version_original": "6.0.6-24"
    },
    {
      "_id": "6140d7a0cc19c4a9a27dd311",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-30.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "bundle_path_digest": "sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:10:56.620000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:57:01.348000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator-0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1-annotation"
        },
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.8-20",
      "version_original": "6.0.8-20"
    },
    {
      "_id": "6140d7afcc19c4a9a27dd312",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "bundle_path_digest": "sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "capabilities": [
        ""
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:11:11.389000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-6",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:05:09.109000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.6-6",
      "version_original": "6.0.6-6"
    },
    {
      "_id": "6140d7b4d23dceab29694e2a",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:11:16.753000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T15:11:08.400000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "6140d7c3d23dceab29694e2b",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-97.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "bundle_path_digest": "sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:11:31.261000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-12a",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:22:19.531000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator-f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730-annotation"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.20-12a",
      "version_original": "6.0.20-12a"
    },
    {
      "_id": "6140d7c5cc19c4a9a27dd315",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.4-55.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "bundle_path_digest": "sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2021-09-14T17:11:33.132000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.4-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:14:42.973000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator-8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9-annotation"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.2.4-1",
      "version_original": "6.2.4-1"
    },
    {
      "_id": "6140d7ff3cdb0ef49d8c709c",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "bundle_path_digest": "sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "capabilities": [
        ""
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:12:31.876000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-6",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:13:28.456000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.6-6",
      "version_original": "6.0.6-6"
    },
    {
      "_id": "6140d83afdf729f2c04a7090",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:13:30.586000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:17:05.929000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "6140d83d3cdb0ef49d8c70a0",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "bundle_path_digest": "sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:13:33.754000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:16:41.861000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "redislabs/operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "operator-998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b-annotation"
        },
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.6-24",
      "version_original": "6.0.6-24"
    },
    {
      "_id": "6140d851fdf729f2c04a7091",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.4-55.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "bundle_path_digest": "sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2021-09-14T17:13:53.292000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.4-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:11:10.440000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator-8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9-annotation"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.2.4-1",
      "version_original": "6.2.4-1"
    },
    {
      "_id": "6140d8523cdb0ef49d8c70a1",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-30.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "bundle_path_digest": "sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:13:54.568000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:17:34.606000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator-0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1-annotation"
        },
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.8-20",
      "version_original": "6.0.8-20"
    },
    {
      "_id": "6140d85cd23dceab29694e34",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.4-55.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "bundle_path_digest": "sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:14:04.604000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.4-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:18:11.887000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator-8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9-annotation"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.2.4-1",
      "version_original": "6.2.4-1"
    },
    {
      "_id": "6140d88bd23dceab29694e37",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "bundle_path_digest": "sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "capabilities": [
        ""
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:14:51.781000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-11",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:31:37.399000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.6-11",
      "version_original": "6.0.6-11"
    },
    {
      "_id": "6140d88fcc19c4a9a27dd31a",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "bundle_path_digest": "sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:14:55.584000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:20:29.868000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "image": "redislabs/operator@sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "name": "operator-fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2-annotation"
        },
        {
          "digest": "sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.6-11",
      "version_original": "6.0.6-11"
    },
    {
      "_id": "6140d898cc19c4a9a27dd31b",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "bundle_path_digest": "sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:15:04.547000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T15:03:22.176000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "redislabs/operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "operator-998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b-annotation"
        },
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.6-24",
      "version_original": "6.0.6-24"
    },
    {
      "_id": "6140d8b43cdb0ef49d8c70a4",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-69.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:6eba0d4cdc724698aa1d42dd74ae6b19e9446f601f337d5752531a14f10e41ef",
      "bundle_path_digest": "sha256:6eba0d4cdc724698aa1d42dd74ae6b19e9446f601f337d5752531a14f10e41ef",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:15:32.216000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:19:49.472000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "name": "redis-enterprise-operator-3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f-annotation"
        },
        {
          "digest": "sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.20-4",
      "version_original": "6.0.20-4"
    },
    {
      "_id": "6140d8c9d23dceab29694e38",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.4-55.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "bundle_path_digest": "sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:15:53.344000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.4-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:56:06.657000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator-8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9-annotation"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.2.4-1",
      "version_original": "6.2.4-1"
    },
    {
      "_id": "6140d8d1fdf729f2c04a7096",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-35.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "bundle_path_digest": "sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:16:01.251000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:16:48.930000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:6b2879ece978e1a8e6a09be7b5f67dd3c9b25f9efbf92852af55ddabc0328c67",
          "image": "redislabs/operator@sha256:6b2879ece978e1a8e6a09be7b5f67dd3c9b25f9efbf92852af55ddabc0328c67",
          "name": "operator-6b2879ece978e1a8e6a09be7b5f67dd3c9b25f9efbf92852af55ddabc0328c67-annotation"
        },
        {
          "digest": "sha256:6b2879ece978e1a8e6a09be7b5f67dd3c9b25f9efbf92852af55ddabc0328c67",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:6b2879ece978e1a8e6a09be7b5f67dd3c9b25f9efbf92852af55ddabc0328c67",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.6-6",
      "version_original": "6.0.6-6"
    },
    {
      "_id": "6140d919d23dceab29694e3c",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-30.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "bundle_path_digest": "sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:17:13.696000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:21:52.266000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator-0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1-annotation"
        },
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.8-20",
      "version_original": "6.0.8-20"
    },
    {
      "_id": "6140d933fdf729f2c04a709a",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.12-57.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "bundle_path_digest": "sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:17:39.434000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.12-5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:20:49.010000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator-b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f-annotation"
        },
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.12-5",
      "version_original": "6.0.12-5"
    },
    {
      "_id": "6140d94e3cdb0ef49d8c70a6",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-97.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "bundle_path_digest": "sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:18:06.483000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-12a",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:20:10.608000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator-f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730-annotation"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.20-12a",
      "version_original": "6.0.20-12a"
    },
    {
      "_id": "6140d94fcc19c4a9a27dd31d",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.4-55.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "bundle_path_digest": "sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2021-09-14T17:18:07.723000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.4-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:54:14.584000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator-8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9-annotation"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.2.4-1",
      "version_original": "6.2.4-1"
    },
    {
      "_id": "6140d9e5cc19c4a9a27dd31e",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-28.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "bundle_path_digest": "sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:20:37.216000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:17:02.860000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca",
          "image": "redislabs/operator@sha256:29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca",
          "name": "operator-29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca-annotation"
        },
        {
          "digest": "sha256:29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.8-1",
      "version_original": "6.0.8-1"
    },
    {
      "_id": "6140da04fdf729f2c04a709c",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.4-55.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "bundle_path_digest": "sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:21:08.108000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.4-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:18:19.297000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator-8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9-annotation"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.2.4-1",
      "version_original": "6.2.4-1"
    },
    {
      "_id": "6140da28fdf729f2c04a709d",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.12-57.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "bundle_path_digest": "sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:21:44.157000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.12-5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:15:12.209000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator-b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f-annotation"
        },
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.12-5",
      "version_original": "6.0.12-5"
    },
    {
      "_id": "6140da2efdf729f2c04a709e",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "bundle_path_digest": "sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "capabilities": [
        ""
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:21:50.995000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T16:59:24.260000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.8-1",
      "version_original": "6.0.8-1"
    },
    {
      "_id": "6140da82d23dceab29694e3d",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "bundle_path_digest": "sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "capabilities": [
        ""
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:23:14.029000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T16:48:52.145000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.8-1",
      "version_original": "6.0.8-1"
    },
    {
      "_id": "6140da8dfdf729f2c04a709f",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "bundle_path_digest": "sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "capabilities": [
        ""
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:23:25.237000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-11",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:15:43.258000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.6-11",
      "version_original": "6.0.6-11"
    },
    {
      "_id": "6140dab3d23dceab29694e3e",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.12-57.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "bundle_path_digest": "sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:24:03.322000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.12-5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T15:04:05.768000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator-b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f-annotation"
        },
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.12-5",
      "version_original": "6.0.12-5"
    },
    {
      "_id": "6141e536d23dceab29695095",
      "alm_examples": [
        {
          "api_version": "infoscale.veritas.com/v1",
          "kind": "InfoScaleCluster",
          "metadata": {
            "name": "infoscalecluster-dev"
          },
          "spec": {
            "clusterInfo": [
              {
                "ip": [
                  "192.168.33.11",
                  "192.168.32.12"
                ],
                "nodeName": "r7515-047-v010"
              },
              {
                "ip": [
                  "192.168.22.11",
                  "192.168.21.12"
                ],
                "nodeName": "r7515-047-v011"
              }
            ],
            "customImageRegistry": "artifactory-infoscalecontainers-auto-images-snapshots.cto.veritas.com/RTI_NAME/veritas",
            "licensePort": 6443,
            "licenseServer": "192.68.42.56",
            "version": "8.0.0.0000"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-operator-bundle@sha256:5b93e0186a26e21243b78dc6646060352b98cace43e03cf0a1dc199978c33ea5",
      "bundle_path_digest": "sha256:5b93e0186a26e21243b78dc6646060352b98cace43e03cf0a1dc199978c33ea5",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-15T12:21:10.929000+00:00",
      "csv_description": "Operator for Infoscale deployment",
      "csv_display_name": "infoscale-operator",
      "csv_metadata_description": "",
      "csv_name": "infoscale-operator.v8.0.1000000",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:55:34.136000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "infoscale-operator",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "InfoScaleCluster",
          "plural": "infoscaleclusters",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:86cf2963098577285b8deecc53e131f5b5d29485b6a2539e6731b600bd40f465",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:86cf2963098577285b8deecc53e131f5b5d29485b6a2539e6731b600bd40f465",
          "name": "manager"
        },
        {
          "digest": "sha256:86cf2963098577285b8deecc53e131f5b5d29485b6a2539e6731b600bd40f465",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:86cf2963098577285b8deecc53e131f5b5d29485b6a2539e6731b600bd40f465",
          "name": "pre-manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "8.0.1000000",
      "version_original": "8.0.1000000"
    },
    {
      "_id": "61446a7f1ea8a4ec32b378eb",
      "alm_examples": [
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPAction",
          "metadata": {
            "name": "new-fep-action"
          },
          "spec": {
            "fepAction": {
              "args": [
                "new-fep-sts-0",
                "new-fep-sts-1"
              ],
              "type": "reload"
            },
            "sysExtraLogging": false,
            "targetClusterName": "new-fep"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPExporter",
          "metadata": {
            "name": "new-fep-exporter"
          },
          "spec": {
            "fepExporter": {
              "exporterLogLevel": "error",
              "fepClusterList": [
                "new-fep1"
              ],
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "restartRequired": false,
              "sysExtraLogging": false,
              "userCustomQueries": "usr_example:\n  query: \"SELECT EXTRACT(EPOCH FROM (now() - pg_last_xact_replay_timestamp())) as lag\"\n  master: true\n  metrics:\n    - lag:\n        usage: \"GAUGE\"\n        description: \"Replication lag behind master in seconds\""
            }
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPPgpool2",
          "metadata": {
            "name": "new-fep-pgpool2"
          },
          "spec": {
            "count": 2,
            "customhba": "local   all         all                               trust\nhost    all         all         127.0.0.1/32          trust\nhost    all         all         ::1/128               trust\n",
            "customlogsize": "128Mi",
            "customparams": "listen_addresses = '*'\npcp_listen_addresses = '*'\nnum_init_children = 32\nreserved_connections = 0\nenable_pool_hba = off\nallow_clear_text_frontend_auth = off\nauthentication_timeout = 80\nbackend_weight0 = 1\nbackend_weight1 = 1\nbackend_flag0 = 'ALWAYS_PRIMARY'\nbackend_flag1 = 'DISALLOW_TO_FAILOVER'\nconnection_cache = on\nmax_pool = 4\nlisten_backlog_multiplier = 2\nserialize_accept = off\nchild_life_time = 300\nclient_idle_limit = 0\nchild_max_connections = 0\nconnection_life_time = 0\nreset_query_list = 'ABORT; DISCARD ALL'\nclient_min_messages = info\nlog_min_messages = debug1\nlog_statement = on\nlog_per_node_statement = on\nlog_client_messages = on\nlog_hostname = on\nlog_connections = on\nlog_line_prefix = '%t: pid %p: '\nload_balance_mode = on\nignore_leading_white_space = on\nwhite_function_list = ''\nblack_function_list = 'currval,lastval,nextval,setval'\nblack_query_pattern_list = ''\ndatabase_redirect_preference_list = ''\napp_name_redirect_preference_list = ''\nallow_sql_comments = off\ndisable_load_balance_on_write = 'transaction'\nstatement_level_load_balance = on\nsr_check_period = 0\nsr_check_user = 'postgres'\ndelay_threshold = 0\nlog_standby_delay = 'none'\nssl = on\nssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL'\nssl_prefer_server_ciphers = off\nssl_ecdh_curve = 'prime256v1'\nssl_dh_params_file = ''\nrelcache_expire = 0\nrelcache_size = 256\ncheck_temp_table = catalog\ncheck_unlogged_table = on\nenable_shared_relcache = on\nrelcache_query_target = primary\nwd_port0 = 9000\n",
            "custompcp": "none",
            "customsslcacert": "none",
            "customsslcert": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
            "customsslkey": "none",
            "fepclustername": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "limits": {
              "cpu": "400m",
              "memory": "512Mi"
            },
            "requests": {
              "cpu": "200m",
              "memory": "256Mi"
            },
            "serviceport": 9999,
            "statusport": 9898
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPRestore",
          "metadata": {
            "name": "new-fep-restore"
          },
          "spec": {
            "fromFEPcluster": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "mcSpec": {
              "limits": {
                "cpu": "200m",
                "memory": "300Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "200Mi"
              }
            },
            "restoretype": "latest",
            "sysExtraLogging": false,
            "toFEPcluster": "new-fep-2"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v2",
          "kind": "FEPCluster",
          "metadata": {
            "name": "new-fep"
          },
          "spec": {
            "fep": {
              "customAnnotations": {
                "allDeployments": {}
              },
              "forceSsl": true,
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "instances": 1,
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "podAntiAffinity": false,
              "podDisruptionBudget": false,
              "servicePort": 27500,
              "syncMode": "off",
              "sysExtraLogging": false
            },
            "fepChildCrVal": {
              "backup": {
                "image": {
                  "pullPolicy": "IfNotPresent"
                },
                "mcSpec": {
                  "limits": {
                    "cpu": 0.2,
                    "memory": "300Mi"
                  },
                  "requests": {
                    "cpu": 0.1,
                    "memory": "200Mi"
                  }
                },
                "pgbackrestParams": "# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\n[global]\nrepo1-retention-full=7\nrepo1-retention-full-type=time\nlog-path=/database/log/backup\n",
                "postScript": " ",
                "preScript": " ",
                "schedule": {
                  "num": 2
                },
                "schedule1": {
                  "schedule": "15 0 * * 0",
                  "type": "full"
                },
                "schedule2": {
                  "schedule": "15 0 * * 1-6",
                  "type": "incr"
                },
                "schedule3": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule4": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule5": {
                  "schedule": " ",
                  "type": " "
                }
              },
              "customPgAudit": "# define pg audit custom params here to override defaults.\n# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\n[output]\nlogger = 'auditlog'\nlog_directory = '/database/log/audit'\nlog_truncate_on_rotation = on\nlog_filename = 'pgaudit-%a.log'\nlog_rotation_age = 1d\nlog_rotation_size = 0\n[rule]\n",
              "customPgHba": "# define pg_hba custom rules here to be merged with default rules.\n# TYPE     DATABASE        USER        ADDRESS        METHOD\n",
              "customPgParams": "# define custom postgresql.conf parameters below to override defaults.\n# Current values are as per default FEP deployment\nshared_preload_libraries='pgx_datamasking,pg_prewarm,pg_stat_statements'\nsession_preload_libraries='pg_prewarm'\nmax_prepared_transactions = 100\nmax_worker_processes = 30\nmax_connections = 100\nwork_mem = 1MB\nmaintenance_work_mem = 12MB\nshared_buffers = 128MB\neffective_cache_size = 384MB\ncheckpoint_completion_target = 0.8\n# tcp parameters\ntcp_keepalives_idle = 30\ntcp_keepalives_interval = 10\ntcp_keepalives_count = 3\n# logging parameters in default fep installation\n# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\nlog_directory = '/database/log'\nlog_filename = 'logfile-%a.log'\nlog_file_mode = 0600\nlog_truncate_on_rotation = on\nlog_rotation_age = 1d\nlog_rotation_size = 0\nlog_checkpoints = on\nlog_line_prefix = '%e %t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h'\nlog_lock_waits = on\nlog_autovacuum_min_duration = 60s\nlogging_collector = on\npgaudit.config_file='/opt/app-root/src/pgaudit-cfg/pgaudit.conf'\nlog_replication_commands = on\nlog_min_messages = WARNING\nlog_destination = stderr\n# wal_archive parameters in default fep installation\narchive_mode = on\narchive_command = 'pgbackrest --stanza=backupstanza --config=/database/userdata/pgbackrest.conf archive-push %p'\nwal_level = replica\nmax_wal_senders = 12\nwal_keep_segments = 64\ntrack_activities = on\ntrack_counts = on\n",
              "storage": {
                "archivewalVol": {
                  "size": "1Gi"
                },
                "backupVol": {
                  "size": "2Gi"
                },
                "dataVol": {
                  "size": "2Gi"
                },
                "logVol": {
                  "size": "1Gi"
                },
                "tablespaceVol": {
                  "size": "512Mi"
                },
                "walVol": {
                  "size": "1200Mi"
                }
              },
              "sysUsers": {
                "pgAdminPassword": "admin-password",
                "pgRewindPassword": "rewind_password",
                "pgRewindUser": "rewind_user",
                "pgdb": "mydb",
                "pgpassword": "mydbpassword",
                "pgreplpassword": "repluserpwd",
                "pgrepluser": "repluser",
                "pguser": "mydbuser",
                "tdepassphrase": "tde-passphrase"
              },
              "systemCertificates": {
                "cacrt": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
                "crt": "-----BEGIN CERTIFICATE-----\nMIIDUTCCAjmgAwIBAgIRAMocW3qMoHrD6qRvMPppMkMwDQYJKoZIhvcNAQELBQAw\nNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9yIEt1\nYmVybmV0ZXMwHhcNMjEwMjA2MDQzMjM2WhcNMjYwMjA1MDQzMjM2WjA/MRAwDgYD\nVQQKEwdGdWppdHN1MSswKQYDVQQDEyJGVUpJVFNVIEVudGVycHJpc2UgUG9zdGdy\nZXMgU2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4AI33yvH\nZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I2e4SceTKi6O3C/I1XuvWlpng\n5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4ANB5JWWqDOjrRT3o7nRPGXfila\nbP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYpmjdbfxabTz07ig0+6/cwKoRR\nxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTFYvmAH7gcdssSFBt8NPlUATHE\nsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6Wdgmu5H2pDml8CDNLDv98Aj7i\n+I5SRKKcVPlnuQIDAQABo1AwTjAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUH\nAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBQcwrrUO0u+FhIUuVdrDRCQRsi6\nZjANBgkqhkiG9w0BAQsFAAOCAQEAm5dxBoI9pScOCvRAchg4CprdRDSJb9K6yB3O\nnCAxnM47iHeXnY3WlnI388kHu8DU7O4ba1tJbGs3KY9KzioPk43pU12jWkO1onoF\n+mTDjx/Ef1cYWA9r5q/LtgTa6Q2sxV4O2x67QW82aAnaxO34dV5zWCPIvAoovZBV\nHRT+BgCg3r2vD1RGKK2nl1aYJtWhO1SZubam+VttdZ/vbM9oOJctxmImsEtBXjkY\nKteePdQtLL5o03JhyXWyRshCq+HMmKf2KgyY8gvydGcP4eLQdBWcW40LcnVq6UjT\n0kJycJEKngMVademq1ZWHGaiYB7hyT6GhgIcHUJ2cKrPgbEh1Q==\n-----END CERTIFICATE-----",
                "key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEA4AI33yvHZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I\n2e4SceTKi6O3C/I1XuvWlpng5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4AN\nB5JWWqDOjrRT3o7nRPGXfilabP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYp\nmjdbfxabTz07ig0+6/cwKoRRxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTF\nYvmAH7gcdssSFBt8NPlUATHEsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6W\ndgmu5H2pDml8CDNLDv98Aj7i+I5SRKKcVPlnuQIDAQABAoIBAFPQYKlOzw/+BA0b\nyMIUpdctIMb/54CR/xR0mVw1DbSjigNVPjHUQvB8Y1B2FAITQObgJO06bAv0QdWN\nRb0/v/yYiNJDFjaLjaIAHlO/2+oWrXbFaZqgpVDJhB+e1xaZr2x7XGxm+p925k30\nl6pvIRY+I8JRKvZiV1VZHwL/R3JOtPr++xMZtLVjVOI+f+ySqJ+TZHuAjm49EKxj\ncEmmJ28b7QcziXsvKy00f+zbqLIBKXQdZAFU5eEr1BsDRXdRW+Kf0XIvftuy4BJZ\nvoKT+VGhEvF/qysswL4+6IAO6tpuYnnM0Y2d3sOGoWPkTcQK0MekYKzL/WmtCjNs\n9hodJtECgYEA5EWyhEOf4uOKe5TDp697UCUvXLoOR58FDe/S8XNvScn29jjOkqIg\nOMoqo9xAkJTNTzqn5UUdt1x/pgM2NxlPLFijrc0zQlX3SoOO2ryDd9WNi7YKtN16\nKJqa536WeZu2OEbuAZ+S3GALVy1RPeTNPnUOmKnF06DjDUGzLNCZy10CgYEA+zfw\n952DWuz1U0Z4wvAEqqcgUKXPKrkTXV/iUnjkDkrLYVr0ZofDNTXrdHl+UedFmaOC\ncieZn6DNhcdz5tKtyysGMH3g/qs9PfoGUngvcXsy0Egk04l3x1jc8TTCLqXZXYaQ\nHMsx51n+R58oncPtzYSUOr9qQ6PbC2CstTbFJA0CgYEAjGEsUliAB/jknfEzjXjG\nPdhQUxb8VyE864Az2lah9t/kJzFyIAziAeqZ5GE7t247AGFTBRTHHI8e1Qoemi3P\nWbc9GVIbFs1lIYbcIDpUIyrKPEP8O5QEXtoNLxXTFgAjRGKiVY87spjCAJ+W2ZhO\ne/1it5GYXfgQCYQA2yuBmOUCgYANRkR2YR1axaCk+NlSu6oTdmdPu6M5x7PNQE7O\nOtMaKjua9lppvIzFGAdMDUtueoEEAE7ZR1xnwfB6PDLUpJdIYAqgr1YfPt8qkjaZ\nTv56yZ7CwL0pbF8m6nwqRrZoDp1wwraEvvvxFKFKGY/k3kCHlpTakdjEoDjn3gDi\nRnWeVQKBgCEneMSzucei5LRppRtRaJw/Btll8qlPMlX3W7dxQ3cLwpmLOn0m51Fp\nPIZ44zYK8R6fu4+/sSrlfaIg86Ugeufp6YNxyNROKxUGza5vDIu5OftwWtBeg+UK\nZ8lLWNdX6pp7WMujmF3H1DrkBbauYMUKZ4UxUYtelgHERMePIxwb\n-----END RSA PRIVATE KEY-----"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/fujitsu-postgres/fujitsu-enterprise-postgres-13-bundle@sha256:71ae638beab4cc69eb290980a89793d0db6404ed7b9ccdfa1912ad5fa085a73a",
      "bundle_path_digest": "sha256:71ae638beab4cc69eb290980a89793d0db6404ed7b9ccdfa1912ad5fa085a73a",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "beta",
      "creation_date": "2021-09-17T10:14:23.095000+00:00",
      "csv_description": "FUJITSU Enterprise Postgres 13 delivers an enterprise-grade PostgreSQL on OpenShift Container Platform. \n\nThis solution provides the flexibility of a hybrid cloud solution while delivering an enhanced distribution of PostgreSQL to support enterprise-level workloads and provide improved deployment and management, availability, performance, data governance and security.  \n\nAvailable as a multi-architecture container built for both amd64 and s390x. \n\nUse of the product is subject to Fujitsu evaluation license located at: https://www.fast.fujitsu.com/fujitsu-enterprise-postgres-trial-version-software-evaluation-license-agreement and the license period is 90 days after the download\n",
      "csv_display_name": "FUJITSU Enterprise Postgres 13 Operator",
      "csv_metadata_description": "OpenShift Operator for Fujitsu Enterprise Postgres 13",
      "csv_name": "fujitsu-enterprise-operator.v3.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:15:42.718000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "fujitsu-enterprise-operator",
      "provided_apis": [
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCluster",
          "version": "v2"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2Cert",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPRestore",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPVolume",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPBackup",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCert",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPConfig",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPUser",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPExporter",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPAction",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPAutoscale",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:1154c3661122baab43f23015e84f37ec2dc8f654b0ea510304b93a7415783e00",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-operator@sha256:1154c3661122baab43f23015e84f37ec2dc8f654b0ea510304b93a7415783e00",
          "name": "fujitsu-enterprise-postgres-13-operator-1154c3661122baab43f23015e84f37ec2dc8f654b0ea510304b93a7415783e00-annotation"
        },
        {
          "digest": "sha256:1154c3661122baab43f23015e84f37ec2dc8f654b0ea510304b93a7415783e00",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-operator@sha256:1154c3661122baab43f23015e84f37ec2dc8f654b0ea510304b93a7415783e00",
          "name": "fep-ansible-operator"
        },
        {
          "digest": "sha256:b2c1c6f048665319ee02772085d548e282d34461c95b1f8cdd36e9365d9fd474",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-server@sha256:b2c1c6f048665319ee02772085d548e282d34461c95b1f8cdd36e9365d9fd474",
          "name": "fep"
        },
        {
          "digest": "sha256:1377793d0645b8dd507bb16bb6666585e5ea73ba1373a83b1d1e5f6c00aec748",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-backup@sha256:1377793d0645b8dd507bb16bb6666585e5ea73ba1373a83b1d1e5f6c00aec748",
          "name": "backup"
        },
        {
          "digest": "sha256:d91a02626b5be5fd7d975107ef7cc2eff9dcb99d229ce9ce3195925d122f0cd8",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-restore@sha256:d91a02626b5be5fd7d975107ef7cc2eff9dcb99d229ce9ce3195925d122f0cd8",
          "name": "restore"
        },
        {
          "digest": "sha256:8f541bde7d0e394bf0e3c324846211ec75aa0e66fbe13a3fd75c520303d55408",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-pgpool2@sha256:8f541bde7d0e394bf0e3c324846211ec75aa0e66fbe13a3fd75c520303d55408",
          "name": "pgpool2"
        },
        {
          "digest": "sha256:ec103ddac6a3e6359b736132543e9a606c681252ff2fc85626dadf2a4a8c3b05",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-exporter@sha256:ec103ddac6a3e6359b736132543e9a606c681252ff2fc85626dadf2a4a8c3b05",
          "name": "fepexporter"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "3.0.0",
      "version_original": "3.0.0"
    },
    {
      "_id": "61446c4d1ea8a4ec32b378ed",
      "alm_examples": [
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPAction",
          "metadata": {
            "name": "new-fep-action"
          },
          "spec": {
            "fepAction": {
              "args": [
                "new-fep-sts-0",
                "new-fep-sts-1"
              ],
              "type": "reload"
            },
            "sysExtraLogging": false,
            "targetClusterName": "new-fep"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPExporter",
          "metadata": {
            "name": "new-fep-exporter"
          },
          "spec": {
            "fepExporter": {
              "exporterLogLevel": "error",
              "fepClusterList": [
                "new-fep1"
              ],
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "restartRequired": false,
              "sysExtraLogging": false,
              "userCustomQueries": "usr_example:\n  query: \"SELECT EXTRACT(EPOCH FROM (now() - pg_last_xact_replay_timestamp())) as lag\"\n  master: true\n  metrics:\n    - lag:\n        usage: \"GAUGE\"\n        description: \"Replication lag behind master in seconds\""
            }
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPPgpool2",
          "metadata": {
            "name": "new-fep-pgpool2"
          },
          "spec": {
            "count": 2,
            "customhba": "local   all         all                               trust\nhost    all         all         127.0.0.1/32          trust\nhost    all         all         ::1/128               trust\n",
            "customlogsize": "128Mi",
            "customparams": "listen_addresses = '*'\npcp_listen_addresses = '*'\nnum_init_children = 32\nreserved_connections = 0\nenable_pool_hba = off\nallow_clear_text_frontend_auth = off\nauthentication_timeout = 80\nbackend_weight0 = 1\nbackend_weight1 = 1\nbackend_flag0 = 'ALWAYS_PRIMARY'\nbackend_flag1 = 'DISALLOW_TO_FAILOVER'\nconnection_cache = on\nmax_pool = 4\nlisten_backlog_multiplier = 2\nserialize_accept = off\nchild_life_time = 300\nclient_idle_limit = 0\nchild_max_connections = 0\nconnection_life_time = 0\nreset_query_list = 'ABORT; DISCARD ALL'\nclient_min_messages = info\nlog_min_messages = debug1\nlog_statement = on\nlog_per_node_statement = on\nlog_client_messages = on\nlog_hostname = on\nlog_connections = on\nlog_line_prefix = '%t: pid %p: '\nload_balance_mode = on\nignore_leading_white_space = on\nwhite_function_list = ''\nblack_function_list = 'currval,lastval,nextval,setval'\nblack_query_pattern_list = ''\ndatabase_redirect_preference_list = ''\napp_name_redirect_preference_list = ''\nallow_sql_comments = off\ndisable_load_balance_on_write = 'transaction'\nstatement_level_load_balance = on\nsr_check_period = 0\nsr_check_user = 'postgres'\ndelay_threshold = 0\nlog_standby_delay = 'none'\nssl = on\nssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL'\nssl_prefer_server_ciphers = off\nssl_ecdh_curve = 'prime256v1'\nssl_dh_params_file = ''\nrelcache_expire = 0\nrelcache_size = 256\ncheck_temp_table = catalog\ncheck_unlogged_table = on\nenable_shared_relcache = on\nrelcache_query_target = primary\nwd_port0 = 9000\n",
            "custompcp": "none",
            "customsslcacert": "none",
            "customsslcert": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
            "customsslkey": "none",
            "fepclustername": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "limits": {
              "cpu": "400m",
              "memory": "512Mi"
            },
            "requests": {
              "cpu": "200m",
              "memory": "256Mi"
            },
            "serviceport": 9999,
            "statusport": 9898
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPRestore",
          "metadata": {
            "name": "new-fep-restore"
          },
          "spec": {
            "fromFEPcluster": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "mcSpec": {
              "limits": {
                "cpu": "200m",
                "memory": "300Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "200Mi"
              }
            },
            "restoretype": "latest",
            "sysExtraLogging": false,
            "toFEPcluster": "new-fep-2"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v2",
          "kind": "FEPCluster",
          "metadata": {
            "name": "new-fep"
          },
          "spec": {
            "fep": {
              "customAnnotations": {
                "allDeployments": {}
              },
              "forceSsl": true,
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "instances": 1,
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "podAntiAffinity": false,
              "podDisruptionBudget": false,
              "servicePort": 27500,
              "syncMode": "off",
              "sysExtraLogging": false
            },
            "fepChildCrVal": {
              "backup": {
                "image": {
                  "pullPolicy": "IfNotPresent"
                },
                "mcSpec": {
                  "limits": {
                    "cpu": 0.2,
                    "memory": "300Mi"
                  },
                  "requests": {
                    "cpu": 0.1,
                    "memory": "200Mi"
                  }
                },
                "pgbackrestParams": "# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\n[global]\nrepo1-retention-full=7\nrepo1-retention-full-type=time\nlog-path=/database/log/backup\n",
                "postScript": " ",
                "preScript": " ",
                "schedule": {
                  "num": 2
                },
                "schedule1": {
                  "schedule": "15 0 * * 0",
                  "type": "full"
                },
                "schedule2": {
                  "schedule": "15 0 * * 1-6",
                  "type": "incr"
                },
                "schedule3": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule4": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule5": {
                  "schedule": " ",
                  "type": " "
                }
              },
              "customPgAudit": "# define pg audit custom params here to override defaults.\n# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\n[output]\nlogger = 'auditlog'\nlog_directory = '/database/log/audit'\nlog_truncate_on_rotation = on\nlog_filename = 'pgaudit-%a.log'\nlog_rotation_age = 1d\nlog_rotation_size = 0\n[rule]\n",
              "customPgHba": "# define pg_hba custom rules here to be merged with default rules.\n# TYPE     DATABASE        USER        ADDRESS        METHOD\n",
              "customPgParams": "# define custom postgresql.conf parameters below to override defaults.\n# Current values are as per default FEP deployment\nshared_preload_libraries='pgx_datamasking,pg_prewarm,pg_stat_statements'\nsession_preload_libraries='pg_prewarm'\nmax_prepared_transactions = 100\nmax_worker_processes = 30\nmax_connections = 100\nwork_mem = 1MB\nmaintenance_work_mem = 12MB\nshared_buffers = 128MB\neffective_cache_size = 384MB\ncheckpoint_completion_target = 0.8\n# tcp parameters\ntcp_keepalives_idle = 30\ntcp_keepalives_interval = 10\ntcp_keepalives_count = 3\n# logging parameters in default fep installation\n# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\nlog_directory = '/database/log'\nlog_filename = 'logfile-%a.log'\nlog_file_mode = 0600\nlog_truncate_on_rotation = on\nlog_rotation_age = 1d\nlog_rotation_size = 0\nlog_checkpoints = on\nlog_line_prefix = '%e %t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h'\nlog_lock_waits = on\nlog_autovacuum_min_duration = 60s\nlogging_collector = on\npgaudit.config_file='/opt/app-root/src/pgaudit-cfg/pgaudit.conf'\nlog_replication_commands = on\nlog_min_messages = WARNING\nlog_destination = stderr\n# wal_archive parameters in default fep installation\narchive_mode = on\narchive_command = 'pgbackrest --stanza=backupstanza --config=/database/userdata/pgbackrest.conf archive-push %p'\nwal_level = replica\nmax_wal_senders = 12\nwal_keep_segments = 64\ntrack_activities = on\ntrack_counts = on\n",
              "storage": {
                "archivewalVol": {
                  "size": "1Gi"
                },
                "backupVol": {
                  "size": "2Gi"
                },
                "dataVol": {
                  "size": "2Gi"
                },
                "logVol": {
                  "size": "1Gi"
                },
                "tablespaceVol": {
                  "size": "512Mi"
                },
                "walVol": {
                  "size": "1200Mi"
                }
              },
              "sysUsers": {
                "pgAdminPassword": "admin-password",
                "pgRewindPassword": "rewind_password",
                "pgRewindUser": "rewind_user",
                "pgdb": "mydb",
                "pgpassword": "mydbpassword",
                "pgreplpassword": "repluserpwd",
                "pgrepluser": "repluser",
                "pguser": "mydbuser",
                "tdepassphrase": "tde-passphrase"
              },
              "systemCertificates": {
                "cacrt": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
                "crt": "-----BEGIN CERTIFICATE-----\nMIIDUTCCAjmgAwIBAgIRAMocW3qMoHrD6qRvMPppMkMwDQYJKoZIhvcNAQELBQAw\nNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9yIEt1\nYmVybmV0ZXMwHhcNMjEwMjA2MDQzMjM2WhcNMjYwMjA1MDQzMjM2WjA/MRAwDgYD\nVQQKEwdGdWppdHN1MSswKQYDVQQDEyJGVUpJVFNVIEVudGVycHJpc2UgUG9zdGdy\nZXMgU2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4AI33yvH\nZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I2e4SceTKi6O3C/I1XuvWlpng\n5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4ANB5JWWqDOjrRT3o7nRPGXfila\nbP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYpmjdbfxabTz07ig0+6/cwKoRR\nxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTFYvmAH7gcdssSFBt8NPlUATHE\nsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6Wdgmu5H2pDml8CDNLDv98Aj7i\n+I5SRKKcVPlnuQIDAQABo1AwTjAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUH\nAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBQcwrrUO0u+FhIUuVdrDRCQRsi6\nZjANBgkqhkiG9w0BAQsFAAOCAQEAm5dxBoI9pScOCvRAchg4CprdRDSJb9K6yB3O\nnCAxnM47iHeXnY3WlnI388kHu8DU7O4ba1tJbGs3KY9KzioPk43pU12jWkO1onoF\n+mTDjx/Ef1cYWA9r5q/LtgTa6Q2sxV4O2x67QW82aAnaxO34dV5zWCPIvAoovZBV\nHRT+BgCg3r2vD1RGKK2nl1aYJtWhO1SZubam+VttdZ/vbM9oOJctxmImsEtBXjkY\nKteePdQtLL5o03JhyXWyRshCq+HMmKf2KgyY8gvydGcP4eLQdBWcW40LcnVq6UjT\n0kJycJEKngMVademq1ZWHGaiYB7hyT6GhgIcHUJ2cKrPgbEh1Q==\n-----END CERTIFICATE-----",
                "key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEA4AI33yvHZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I\n2e4SceTKi6O3C/I1XuvWlpng5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4AN\nB5JWWqDOjrRT3o7nRPGXfilabP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYp\nmjdbfxabTz07ig0+6/cwKoRRxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTF\nYvmAH7gcdssSFBt8NPlUATHEsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6W\ndgmu5H2pDml8CDNLDv98Aj7i+I5SRKKcVPlnuQIDAQABAoIBAFPQYKlOzw/+BA0b\nyMIUpdctIMb/54CR/xR0mVw1DbSjigNVPjHUQvB8Y1B2FAITQObgJO06bAv0QdWN\nRb0/v/yYiNJDFjaLjaIAHlO/2+oWrXbFaZqgpVDJhB+e1xaZr2x7XGxm+p925k30\nl6pvIRY+I8JRKvZiV1VZHwL/R3JOtPr++xMZtLVjVOI+f+ySqJ+TZHuAjm49EKxj\ncEmmJ28b7QcziXsvKy00f+zbqLIBKXQdZAFU5eEr1BsDRXdRW+Kf0XIvftuy4BJZ\nvoKT+VGhEvF/qysswL4+6IAO6tpuYnnM0Y2d3sOGoWPkTcQK0MekYKzL/WmtCjNs\n9hodJtECgYEA5EWyhEOf4uOKe5TDp697UCUvXLoOR58FDe/S8XNvScn29jjOkqIg\nOMoqo9xAkJTNTzqn5UUdt1x/pgM2NxlPLFijrc0zQlX3SoOO2ryDd9WNi7YKtN16\nKJqa536WeZu2OEbuAZ+S3GALVy1RPeTNPnUOmKnF06DjDUGzLNCZy10CgYEA+zfw\n952DWuz1U0Z4wvAEqqcgUKXPKrkTXV/iUnjkDkrLYVr0ZofDNTXrdHl+UedFmaOC\ncieZn6DNhcdz5tKtyysGMH3g/qs9PfoGUngvcXsy0Egk04l3x1jc8TTCLqXZXYaQ\nHMsx51n+R58oncPtzYSUOr9qQ6PbC2CstTbFJA0CgYEAjGEsUliAB/jknfEzjXjG\nPdhQUxb8VyE864Az2lah9t/kJzFyIAziAeqZ5GE7t247AGFTBRTHHI8e1Qoemi3P\nWbc9GVIbFs1lIYbcIDpUIyrKPEP8O5QEXtoNLxXTFgAjRGKiVY87spjCAJ+W2ZhO\ne/1it5GYXfgQCYQA2yuBmOUCgYANRkR2YR1axaCk+NlSu6oTdmdPu6M5x7PNQE7O\nOtMaKjua9lppvIzFGAdMDUtueoEEAE7ZR1xnwfB6PDLUpJdIYAqgr1YfPt8qkjaZ\nTv56yZ7CwL0pbF8m6nwqRrZoDp1wwraEvvvxFKFKGY/k3kCHlpTakdjEoDjn3gDi\nRnWeVQKBgCEneMSzucei5LRppRtRaJw/Btll8qlPMlX3W7dxQ3cLwpmLOn0m51Fp\nPIZ44zYK8R6fu4+/sSrlfaIg86Ugeufp6YNxyNROKxUGza5vDIu5OftwWtBeg+UK\nZ8lLWNdX6pp7WMujmF3H1DrkBbauYMUKZ4UxUYtelgHERMePIxwb\n-----END RSA PRIVATE KEY-----"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/fujitsu-postgres/fujitsu-enterprise-postgres-13-bundle@sha256:71ae638beab4cc69eb290980a89793d0db6404ed7b9ccdfa1912ad5fa085a73a",
      "bundle_path_digest": "sha256:71ae638beab4cc69eb290980a89793d0db6404ed7b9ccdfa1912ad5fa085a73a",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "beta",
      "creation_date": "2021-09-17T10:22:05.723000+00:00",
      "csv_description": "FUJITSU Enterprise Postgres 13 delivers an enterprise-grade PostgreSQL on OpenShift Container Platform. \n\nThis solution provides the flexibility of a hybrid cloud solution while delivering an enhanced distribution of PostgreSQL to support enterprise-level workloads and provide improved deployment and management, availability, performance, data governance and security.  \n\nAvailable as a multi-architecture container built for both amd64 and s390x. \n\nUse of the product is subject to Fujitsu evaluation license located at: https://www.fast.fujitsu.com/fujitsu-enterprise-postgres-trial-version-software-evaluation-license-agreement and the license period is 90 days after the download\n",
      "csv_display_name": "FUJITSU Enterprise Postgres 13 Operator",
      "csv_metadata_description": "OpenShift Operator for Fujitsu Enterprise Postgres 13",
      "csv_name": "fujitsu-enterprise-operator.v3.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:26:50.102000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "fujitsu-enterprise-operator",
      "provided_apis": [
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2Cert",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPUser",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPAction",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPAutoscale",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPBackup",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPRestore",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPConfig",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCluster",
          "version": "v2"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPVolume",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCert",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPExporter",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:1154c3661122baab43f23015e84f37ec2dc8f654b0ea510304b93a7415783e00",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-operator@sha256:1154c3661122baab43f23015e84f37ec2dc8f654b0ea510304b93a7415783e00",
          "name": "fujitsu-enterprise-postgres-13-operator-1154c3661122baab43f23015e84f37ec2dc8f654b0ea510304b93a7415783e00-annotation"
        },
        {
          "digest": "sha256:1154c3661122baab43f23015e84f37ec2dc8f654b0ea510304b93a7415783e00",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-operator@sha256:1154c3661122baab43f23015e84f37ec2dc8f654b0ea510304b93a7415783e00",
          "name": "fep-ansible-operator"
        },
        {
          "digest": "sha256:b2c1c6f048665319ee02772085d548e282d34461c95b1f8cdd36e9365d9fd474",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-server@sha256:b2c1c6f048665319ee02772085d548e282d34461c95b1f8cdd36e9365d9fd474",
          "name": "fep"
        },
        {
          "digest": "sha256:1377793d0645b8dd507bb16bb6666585e5ea73ba1373a83b1d1e5f6c00aec748",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-backup@sha256:1377793d0645b8dd507bb16bb6666585e5ea73ba1373a83b1d1e5f6c00aec748",
          "name": "backup"
        },
        {
          "digest": "sha256:d91a02626b5be5fd7d975107ef7cc2eff9dcb99d229ce9ce3195925d122f0cd8",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-restore@sha256:d91a02626b5be5fd7d975107ef7cc2eff9dcb99d229ce9ce3195925d122f0cd8",
          "name": "restore"
        },
        {
          "digest": "sha256:8f541bde7d0e394bf0e3c324846211ec75aa0e66fbe13a3fd75c520303d55408",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-pgpool2@sha256:8f541bde7d0e394bf0e3c324846211ec75aa0e66fbe13a3fd75c520303d55408",
          "name": "pgpool2"
        },
        {
          "digest": "sha256:ec103ddac6a3e6359b736132543e9a606c681252ff2fc85626dadf2a4a8c3b05",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-exporter@sha256:ec103ddac6a3e6359b736132543e9a606c681252ff2fc85626dadf2a4a8c3b05",
          "name": "fepexporter"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "3.0.0",
      "version_original": "3.0.0"
    },
    {
      "_id": "61456f841ea8a4ec32b3791c",
      "alm_examples": [
        {
          "api_version": "hxcsi.cisco.com/v1",
          "kind": "HXCSIDriver",
          "metadata": {
            "name": "cisco-hyperflex-csi-driver"
          },
          "spec": {
            "affinity": {},
            "autoscaling": {},
            "fullnameOverride": "",
            "hx": {
              "clientId": "INPUT_VALUE_HERE",
              "dockerRegistryName": "INPUT_VALUE_HERE",
              "iscsiUrl": "INPUT_VALUE_HERE",
              "token": "INPUT_VALUE_HERE",
              "url": "INPUT_VALUE_HERE"
            },
            "image": {
              "attacher": "hxcsi-csi-attacher:3.2.0-cisco1",
              "hxcsi": "hxcsi-ubi8:hxcsi-1.2.2-latest",
              "provisioner": "hxcsi-csi-provisioner:2.1.2-cisco1",
              "pullPolicy": "Always",
              "registrar": "hxcsi-csi-node-driver-registrar:2.1.0-cisco1",
              "resizer": "hxcsi-csi-resizer:1.1.0-cisco1",
              "tag": ""
            },
            "imagePullSecrets": [],
            "ingress": {},
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "replicaCount": 2,
            "resources": {},
            "securityContext": {},
            "service": {},
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            },
            "storageClass": {
              "isDefault": "false",
              "name": "hyperflex"
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hxcsiadmin/hxcsi-helm-bundle@sha256:1537b6e2a05383eacad38c4606d4328e25bebb0e088c96fd6db10f86dcdbd10a",
      "bundle_path_digest": "sha256:1537b6e2a05383eacad38c4606d4328e25bebb0e088c96fd6db10f86dcdbd10a",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-18T04:48:04.331000+00:00",
      "csv_description": "\nCisco HyperFlex Data Platform (HX Data Platform) is a hyperconverged software appliance that transforms Cisco servers into a single pool of compute and storage resources. It eliminates the need for network storage and enables seamless interoperability between computing and storage in virtual environments. The Cisco HX Data Platform provides a highly fault-tolerant distributed storage system that preserves data integrity and optimizes performance for virtual machine (VM) storage workloads. In addition, native compression and deduplication reduce storage space occupied by the VMs and VM workloads.\n### HyperFlex CSI Driver\nThe Cisco HyperFlex Kubernetes CSI Integration allows Cisco HyperFlex to dynamically provide persistent storage to stateful Kubernetes workloads running on Cisco HyperFlex. The integration enables orchestration of the entire Persistent Volume object lifecycle to be offloaded and managed by Cisco HyperFlex, while being driven (initiated) by developers and users through standard Kubernetes Persistent Volume Claim objects. Developers and users get the benefit of leveraging Cisco HyperFlex for their Kubernetes persistent storage needs with zero additional administration overhead from their perspective.\n### Features Support\n- Support for CSI Spec 1.2 APIs\n- Kubernetes 1.18, 1.19, 1.20 support\n- Kubernetes Cluster multi tenancy target masking using dedicated initiator group\n- Dynamic creation and deletion of volumes\n- Dynamic volume attach and detach * Block access support\n- Clone volume (when source volume is from the same Datastore)\n- PV support with different filesystems (Ext4, Ext3, XFS)\n- Volume space statistics reporting per CSI specs\n- Multi-writer support (ReadWriteMany) for Block Mode only\n- Volume resize support for block mode volumes and ext3, ext4 filesystem volumes (expansion)\n",
      "csv_display_name": "Cisco Hyperflex CSI Operator",
      "csv_metadata_description": "Cisco HXCSI Plugin for RedHat OpenShift Platform",
      "csv_name": "cisco-hxcsi-operator.v1.2.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:09:11.970000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cisco-hxcsi-operator",
      "provided_apis": [
        {
          "group": "hxcsi.cisco.com",
          "kind": "HXCSIDriver",
          "plural": "hxcsidrivers",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0daadef5d80ec8c170f8ac04553c2f3296f17ced72507ccad77592c4323b3ef1",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-bundle@sha256:0daadef5d80ec8c170f8ac04553c2f3296f17ced72507ccad77592c4323b3ef1",
          "name": "hxcsi-helm-bundle-0daadef5d80ec8c170f8ac04553c2f3296f17ced72507ccad77592c4323b3ef1-annotation"
        },
        {
          "digest": "sha256:deb80f8e208b0133a91fb62909eec014d6245ea7fa8f0040411d019a545bd43a",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:deb80f8e208b0133a91fb62909eec014d6245ea7fa8f0040411d019a545bd43a",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:200954bc7d4c13673e1461bff2031687a10b20f8f9ae6c1271f447bb1afd1a44",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-operator@sha256:200954bc7d4c13673e1461bff2031687a10b20f8f9ae6c1271f447bb1afd1a44",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.2.2",
      "version_original": "1.2.2"
    },
    {
      "_id": "6148f1c0b7165a646042e545",
      "alm_examples": [
        {
          "api_version": "helm-operator.sumologic.com/v1alpha1",
          "kind": "SumologicCollection",
          "metadata": {
            "name": "collection"
          },
          "spec": {
            "fluent-bit": {
              "config": {
                "customParsers": "[PARSER]\n    Name        multi_line\n    Format      regex\n    Regex       (?<log>^{\"log\":\"\\d{4}-\\d{1,2}-\\d{1,2}.\\d{2}:\\d{2}:\\d{2}.*)\n[PARSER]\n    Name         crio\n    Format       regex\n    Regex        ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<log>.*)$\n    Time_Key     time\n    Time_Format  %Y-%m-%dT%H:%M:%S.%L%z\n[PARSER]\n    Name         containerd\n    Format       regex\n    Regex        ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<log>.*)$\n    Time_Key     time\n    Time_Format  %Y-%m-%dT%H:%M:%S.%LZ\n",
                "inputs": "[INPUT]\n    Name                tail\n    Path                /var/log/containers/*.log\n    Parser              crio\n    Tag                 containers.*\n    Refresh_Interval    1\n    Rotate_Wait         60\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    DB                  /tail-db/tail-containers-state-sumo.db\n    DB.Sync             Normal\n[INPUT]\n    Name            systemd\n    Tag             host.*\n    DB              /tail-db/systemd-state-sumo.db\n    Systemd_Filter  _SYSTEMD_UNIT=addon-config.service\n    Systemd_Filter  _SYSTEMD_UNIT=addon-run.service\n    Systemd_Filter  _SYSTEMD_UNIT=cfn-etcd-environment.service\n    Systemd_Filter  _SYSTEMD_UNIT=cfn-signal.service\n    Systemd_Filter  _SYSTEMD_UNIT=clean-ca-certificates.service\n    Systemd_Filter  _SYSTEMD_UNIT=containerd.service\n    Systemd_Filter  _SYSTEMD_UNIT=coreos-metadata.service\n    Systemd_Filter  _SYSTEMD_UNIT=coreos-setup-environment.service\n    Systemd_Filter  _SYSTEMD_UNIT=coreos-tmpfiles.service\n    Systemd_Filter  _SYSTEMD_UNIT=dbus.service\n    Systemd_Filter  _SYSTEMD_UNIT=docker.service\n    Systemd_Filter  _SYSTEMD_UNIT=efs.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcd-member.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcd.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcd2.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcd3.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcdadm-check.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcdadm-reconfigure.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcdadm-save.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcdadm-update-status.service\n    Systemd_Filter  _SYSTEMD_UNIT=flanneld.service\n    Systemd_Filter  _SYSTEMD_UNIT=format-etcd2-volume.service\n    Systemd_Filter  _SYSTEMD_UNIT=kube-node-taint-and-uncordon.service\n    Systemd_Filter  _SYSTEMD_UNIT=kubelet.service\n    Systemd_Filter  _SYSTEMD_UNIT=ldconfig.service\n    Systemd_Filter  _SYSTEMD_UNIT=locksmithd.service\n    Systemd_Filter  _SYSTEMD_UNIT=logrotate.service\n    Systemd_Filter  _SYSTEMD_UNIT=lvm2-monitor.service\n    Systemd_Filter  _SYSTEMD_UNIT=mdmon.service\n    Systemd_Filter  _SYSTEMD_UNIT=nfs-idmapd.service\n    Systemd_Filter  _SYSTEMD_UNIT=nfs-mountd.service\n    Systemd_Filter  _SYSTEMD_UNIT=nfs-server.service\n    Systemd_Filter  _SYSTEMD_UNIT=nfs-utils.service\n    Systemd_Filter  _SYSTEMD_UNIT=node-problem-detector.service\n    Systemd_Filter  _SYSTEMD_UNIT=ntp.service\n    Systemd_Filter  _SYSTEMD_UNIT=oem-cloudinit.service\n    Systemd_Filter  _SYSTEMD_UNIT=rkt-gc.service\n    Systemd_Filter  _SYSTEMD_UNIT=rkt-metadata.service\n    Systemd_Filter  _SYSTEMD_UNIT=rpc-idmapd.service\n    Systemd_Filter  _SYSTEMD_UNIT=rpc-mountd.service\n    Systemd_Filter  _SYSTEMD_UNIT=rpc-statd.service\n    Systemd_Filter  _SYSTEMD_UNIT=rpcbind.service\n    Systemd_Filter  _SYSTEMD_UNIT=set-aws-environment.service\n    Systemd_Filter  _SYSTEMD_UNIT=system-cloudinit.service\n    Systemd_Filter  _SYSTEMD_UNIT=systemd-timesyncd.service\n    Systemd_Filter  _SYSTEMD_UNIT=update-ca-certificates.service\n    Systemd_Filter  _SYSTEMD_UNIT=user-cloudinit.service\n    Systemd_Filter  _SYSTEMD_UNIT=var-lib-etcd2.service\n    Max_Entries     1000\n    Read_From_Tail  true\n",
                "outputs": "[OUTPUT]\n    Name          forward\n    Match         *\n    Host          ${FLUENTD_LOGS_SVC}.${NAMESPACE}.svc.cluster.local.\n    Port          24321\n    Retry_Limit   False\n    tls           off\n    tls.verify    on\n    tls.debug     1\n    # Disable keepalive for better load balancing\n    net.keepalive off\n",
                "service": "[SERVICE]\n    Flush        1\n    Daemon       Off\n    Log_Level    info\n    Parsers_File parsers.conf\n    Parsers_File custom_parsers.conf\n    HTTP_Server  On\n    HTTP_Listen  0.0.0.0\n    HTTP_Port    2020\n"
              },
              "securityContext": {
                "privileged": true
              }
            },
            "fluentd": {
              "buffer": {
                "queueChunkLimitSize": 256,
                "totalLimitSize": "256m"
              },
              "logs": {
                "containers": {
                  "multiline": {
                    "enabled": false
                  }
                }
              }
            },
            "kube-prometheus-stack": {
              "prometheus-node-exporter": {
                "service": {
                  "port": 9200,
                  "targetPort": 9200
                }
              },
              "prometheusOperator": {
                "denyNamespaces": [
                  "openshift-apiserver",
                  "openshift-apiserver-operator",
                  "openshift-authentication",
                  "openshift-authentication-operator",
                  "openshift-cloud-credential-operator",
                  "openshift-cluster-machine-approver",
                  "openshift-cluster-samples-operator",
                  "openshift-cluster-storage-operator",
                  "openshift-cluster-version",
                  "openshift-config-operator",
                  "openshift-console-operator",
                  "openshift-controller-manager",
                  "openshift-controller-manager-operator",
                  "openshift-dns,openshift-dns-operator",
                  "openshift-etcd-operator",
                  "openshift-image-registry",
                  "openshift-ingress",
                  "openshift-ingress-operator",
                  "openshift-insights",
                  "openshift-kube-apiserver",
                  "openshift-kube-apiserver-operator",
                  "openshift-kube-controller-manager",
                  "openshift-kube-controller-manager-operator",
                  "openshift-kube-scheduler",
                  "openshift-kube-scheduler-operator",
                  "openshift-kube-storage-version-migrator",
                  "openshift-kube-storage-version-migrator-operator",
                  "openshift-machine-api",
                  "openshift-machine-config-operator",
                  "openshift-marketplace",
                  "openshift-monitoring",
                  "openshift-multus",
                  "openshift-oauth-apiserver",
                  "openshift-operator-lifecycle-manager",
                  "openshift-sdn",
                  "openshift-service-ca-operator",
                  "openshift-user-workload-monitoring"
                ]
              }
            },
            "sumologic": {
              "accessId": "",
              "accessKey": "",
              "clusterName": "kubernetes",
              "endpoint": "",
              "scc": {
                "create": true
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sumologic/sumologic-kubernetes-collection-helm-operator-bundle@sha256:73b3e043557aed8392382afad2009fe2846a659d8f6eec25301a36f932b12680",
      "bundle_path_digest": "sha256:73b3e043557aed8392382afad2009fe2846a659d8f6eec25301a36f932b12680",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-20T20:40:32.662000+00:00",
      "csv_description": "Helm Operator for the Sumo Logic Kubernetes Collection Helm Chart v2.1.4",
      "csv_display_name": "Sumo Logic Kubernetes Collection Helm Operator",
      "csv_metadata_description": "",
      "csv_name": "sumologic-kubernetes-collection-helm-operator.v2.1.4-0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:52:27.996000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "sumologic-kubernetes-collection-helm-operator",
      "provided_apis": [
        {
          "group": "helm-operator.sumologic.com",
          "kind": "SumologicCollection",
          "plural": "sumologiccollections",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b2710d0d515cb03598167cd72916923391dd62675eaef9aad7f37efa3bfeebd3",
          "image": "registry.connect.redhat.com/sumologic/sumologic-kubernetes-collection-helm-operator@sha256:b2710d0d515cb03598167cd72916923391dd62675eaef9aad7f37efa3bfeebd3",
          "name": "sumologic-kubernetes-collection-helm-operator-b2710d0d515cb03598167cd72916923391dd62675eaef9aad7f37efa3bfeebd3-annotation"
        },
        {
          "digest": "sha256:f92b5704d9d1290b1dd9cc8bfcc445e3e118794e8cf9531f439994ee4d2523a6",
          "image": "registry.connect.redhat.com/sumologic/kube-rbac-proxy@sha256:f92b5704d9d1290b1dd9cc8bfcc445e3e118794e8cf9531f439994ee4d2523a6",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:b2710d0d515cb03598167cd72916923391dd62675eaef9aad7f37efa3bfeebd3",
          "image": "registry.connect.redhat.com/sumologic/sumologic-kubernetes-collection-helm-operator@sha256:b2710d0d515cb03598167cd72916923391dd62675eaef9aad7f37efa3bfeebd3",
          "name": "operator"
        },
        {
          "digest": "sha256:ca76893ae48cfc0e6ee4ef24ccbeb4a90aad738308feacdbd9eed205826406b9",
          "image": "registry.connect.redhat.com/sumologic/kubernetes-setup@sha256:ca76893ae48cfc0e6ee4ef24ccbeb4a90aad738308feacdbd9eed205826406b9",
          "name": "kubernetes_setup"
        },
        {
          "digest": "sha256:22694389170863ac60b6c5248310c1381cb145b6b9fa354a18ee664215c5375a",
          "image": "registry.connect.redhat.com/sumologic/node-exporter@sha256:22694389170863ac60b6c5248310c1381cb145b6b9fa354a18ee664215c5375a",
          "name": "node_exporter"
        },
        {
          "digest": "sha256:bb1f73b2be45fa31dfd3fbe72df1d553e5c6cdaa81709bf628764f5969ce4fc2",
          "image": "registry.connect.redhat.com/sumologic/kube-state-metrics@sha256:bb1f73b2be45fa31dfd3fbe72df1d553e5c6cdaa81709bf628764f5969ce4fc2",
          "name": "kube_state_metrics"
        },
        {
          "digest": "sha256:8e29f9b5b7ae76aa9515d1ba20180511feb0c642bc61f782d8d1ea6f62f862aa",
          "image": "registry.connect.redhat.com/sumologic/prometheus-operator@sha256:8e29f9b5b7ae76aa9515d1ba20180511feb0c642bc61f782d8d1ea6f62f862aa",
          "name": "prometheus_operator"
        },
        {
          "digest": "sha256:0309a748632654700e0d49f7ecd7ee61e6344f53107c9ce0c5cf1d301f943d37",
          "image": "registry.connect.redhat.com/sumologic/prometheus-config-reloader@sha256:0309a748632654700e0d49f7ecd7ee61e6344f53107c9ce0c5cf1d301f943d37",
          "name": "prometheus_config_reloader"
        },
        {
          "digest": "sha256:716d5c7183affd306bee7c35c577e5da852d4dfe8da9bf37aff255cd96a0c9b3",
          "image": "registry.connect.redhat.com/sumologic/prometheus@sha256:716d5c7183affd306bee7c35c577e5da852d4dfe8da9bf37aff255cd96a0c9b3",
          "name": "prometheus"
        },
        {
          "digest": "sha256:707e40ee919e4bc3c2edeecdc536acdf8cb67f9e5fc34eaad9d9e4c283438bb1",
          "image": "registry.connect.redhat.com/sumologic/thanos@sha256:707e40ee919e4bc3c2edeecdc536acdf8cb67f9e5fc34eaad9d9e4c283438bb1",
          "name": "thanos"
        },
        {
          "digest": "sha256:1f3c4554e2141e67600ffb2528d8745daf1e581330cb5f4fc75ee7c8aa2298c1",
          "image": "registry.connect.redhat.com/sumologic/metrics-server@sha256:1f3c4554e2141e67600ffb2528d8745daf1e581330cb5f4fc75ee7c8aa2298c1",
          "name": "metrics_server"
        },
        {
          "digest": "sha256:f92b5704d9d1290b1dd9cc8bfcc445e3e118794e8cf9531f439994ee4d2523a6",
          "image": "registry.connect.redhat.com/sumologic/kube-rbac-proxy@sha256:f92b5704d9d1290b1dd9cc8bfcc445e3e118794e8cf9531f439994ee4d2523a6",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:1d9d902b165596e12a626f5dd2f9d512627b356c3773a04c96df24270a840724",
          "image": "registry.connect.redhat.com/sumologic/tailing-sidecar-operator@sha256:1d9d902b165596e12a626f5dd2f9d512627b356c3773a04c96df24270a840724",
          "name": "tailing_sidecar_operator"
        },
        {
          "digest": "sha256:838401ab699ae1f4a581a62a6eea413bca1e2c30d60358acb16bd86be75fbca1",
          "image": "registry.connect.redhat.com/sumologic/tailing-sidecar@sha256:838401ab699ae1f4a581a62a6eea413bca1e2c30d60358acb16bd86be75fbca1",
          "name": "tailing_sidecar"
        },
        {
          "digest": "sha256:3a63153408ff6bb5d6294fcdedfa30b07a5023ca5f72dd63c6e4de31f6bf1c68",
          "image": "registry.connect.redhat.com/sumologic/telegraf-operator@sha256:3a63153408ff6bb5d6294fcdedfa30b07a5023ca5f72dd63c6e4de31f6bf1c68",
          "name": "telegraf_operator"
        },
        {
          "digest": "sha256:8d92cabdd8efbec83475a004209745cc14e877d361cae19ab80a622ebda57e24",
          "image": "registry.connect.redhat.com/sumologic/telegraf@sha256:8d92cabdd8efbec83475a004209745cc14e877d361cae19ab80a622ebda57e24",
          "name": "telegraf"
        },
        {
          "digest": "sha256:362053ce1833aa51db31d36f97458f526d199bcd7efff53486b09e3a02a795ab",
          "image": "registry.connect.redhat.com/sumologic/kubernetes-fluentd@sha256:362053ce1833aa51db31d36f97458f526d199bcd7efff53486b09e3a02a795ab",
          "name": "kubernetes_fluentd"
        },
        {
          "digest": "sha256:faa802d22e41f8d67d487e40285fa2a7ea72f9cd49c32ddb80ea34f4d302e220",
          "image": "registry.connect.redhat.com/sumologic/fluent-bit@sha256:faa802d22e41f8d67d487e40285fa2a7ea72f9cd49c32ddb80ea34f4d302e220",
          "name": "fluent_bit"
        },
        {
          "digest": "sha256:5d468e602034fd84407429fe83c8cb5e4c9ee07e2073db3969aadc97496a958b",
          "image": "registry.connect.redhat.com/sumologic/sumo-ubi-minimal@sha256:5d468e602034fd84407429fe83c8cb5e4c9ee07e2073db3969aadc97496a958b",
          "name": "sumo_ubi_minimal"
        },
        {
          "digest": "sha256:6f07f96178dc26f97169e899c91bd151b64bba6854fcb9f70ccefdfadb48f17a",
          "image": "registry.connect.redhat.com/sumologic/opentelemetry-collector@sha256:6f07f96178dc26f97169e899c91bd151b64bba6854fcb9f70ccefdfadb48f17a",
          "name": "opentelemetry_collector"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.1.4-0",
      "version_original": "2.1.4-0"
    },
    {
      "_id": "6148f20f1ea8a4ec32b37fe3",
      "alm_examples": [
        {
          "api_version": "helm-operator.sumologic.com/v1alpha1",
          "kind": "SumologicCollection",
          "metadata": {
            "name": "collection"
          },
          "spec": {
            "fluent-bit": {
              "config": {
                "customParsers": "[PARSER]\n    Name        multi_line\n    Format      regex\n    Regex       (?<log>^{\"log\":\"\\d{4}-\\d{1,2}-\\d{1,2}.\\d{2}:\\d{2}:\\d{2}.*)\n[PARSER]\n    Name         crio\n    Format       regex\n    Regex        ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<log>.*)$\n    Time_Key     time\n    Time_Format  %Y-%m-%dT%H:%M:%S.%L%z\n[PARSER]\n    Name         containerd\n    Format       regex\n    Regex        ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<log>.*)$\n    Time_Key     time\n    Time_Format  %Y-%m-%dT%H:%M:%S.%LZ\n",
                "inputs": "[INPUT]\n    Name                tail\n    Path                /var/log/containers/*.log\n    Parser              crio\n    Tag                 containers.*\n    Refresh_Interval    1\n    Rotate_Wait         60\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    DB                  /tail-db/tail-containers-state-sumo.db\n    DB.Sync             Normal\n[INPUT]\n    Name            systemd\n    Tag             host.*\n    DB              /tail-db/systemd-state-sumo.db\n    Systemd_Filter  _SYSTEMD_UNIT=addon-config.service\n    Systemd_Filter  _SYSTEMD_UNIT=addon-run.service\n    Systemd_Filter  _SYSTEMD_UNIT=cfn-etcd-environment.service\n    Systemd_Filter  _SYSTEMD_UNIT=cfn-signal.service\n    Systemd_Filter  _SYSTEMD_UNIT=clean-ca-certificates.service\n    Systemd_Filter  _SYSTEMD_UNIT=containerd.service\n    Systemd_Filter  _SYSTEMD_UNIT=coreos-metadata.service\n    Systemd_Filter  _SYSTEMD_UNIT=coreos-setup-environment.service\n    Systemd_Filter  _SYSTEMD_UNIT=coreos-tmpfiles.service\n    Systemd_Filter  _SYSTEMD_UNIT=dbus.service\n    Systemd_Filter  _SYSTEMD_UNIT=docker.service\n    Systemd_Filter  _SYSTEMD_UNIT=efs.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcd-member.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcd.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcd2.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcd3.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcdadm-check.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcdadm-reconfigure.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcdadm-save.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcdadm-update-status.service\n    Systemd_Filter  _SYSTEMD_UNIT=flanneld.service\n    Systemd_Filter  _SYSTEMD_UNIT=format-etcd2-volume.service\n    Systemd_Filter  _SYSTEMD_UNIT=kube-node-taint-and-uncordon.service\n    Systemd_Filter  _SYSTEMD_UNIT=kubelet.service\n    Systemd_Filter  _SYSTEMD_UNIT=ldconfig.service\n    Systemd_Filter  _SYSTEMD_UNIT=locksmithd.service\n    Systemd_Filter  _SYSTEMD_UNIT=logrotate.service\n    Systemd_Filter  _SYSTEMD_UNIT=lvm2-monitor.service\n    Systemd_Filter  _SYSTEMD_UNIT=mdmon.service\n    Systemd_Filter  _SYSTEMD_UNIT=nfs-idmapd.service\n    Systemd_Filter  _SYSTEMD_UNIT=nfs-mountd.service\n    Systemd_Filter  _SYSTEMD_UNIT=nfs-server.service\n    Systemd_Filter  _SYSTEMD_UNIT=nfs-utils.service\n    Systemd_Filter  _SYSTEMD_UNIT=node-problem-detector.service\n    Systemd_Filter  _SYSTEMD_UNIT=ntp.service\n    Systemd_Filter  _SYSTEMD_UNIT=oem-cloudinit.service\n    Systemd_Filter  _SYSTEMD_UNIT=rkt-gc.service\n    Systemd_Filter  _SYSTEMD_UNIT=rkt-metadata.service\n    Systemd_Filter  _SYSTEMD_UNIT=rpc-idmapd.service\n    Systemd_Filter  _SYSTEMD_UNIT=rpc-mountd.service\n    Systemd_Filter  _SYSTEMD_UNIT=rpc-statd.service\n    Systemd_Filter  _SYSTEMD_UNIT=rpcbind.service\n    Systemd_Filter  _SYSTEMD_UNIT=set-aws-environment.service\n    Systemd_Filter  _SYSTEMD_UNIT=system-cloudinit.service\n    Systemd_Filter  _SYSTEMD_UNIT=systemd-timesyncd.service\n    Systemd_Filter  _SYSTEMD_UNIT=update-ca-certificates.service\n    Systemd_Filter  _SYSTEMD_UNIT=user-cloudinit.service\n    Systemd_Filter  _SYSTEMD_UNIT=var-lib-etcd2.service\n    Max_Entries     1000\n    Read_From_Tail  true\n",
                "outputs": "[OUTPUT]\n    Name          forward\n    Match         *\n    Host          ${FLUENTD_LOGS_SVC}.${NAMESPACE}.svc.cluster.local.\n    Port          24321\n    Retry_Limit   False\n    tls           off\n    tls.verify    on\n    tls.debug     1\n    # Disable keepalive for better load balancing\n    net.keepalive off\n",
                "service": "[SERVICE]\n    Flush        1\n    Daemon       Off\n    Log_Level    info\n    Parsers_File parsers.conf\n    Parsers_File custom_parsers.conf\n    HTTP_Server  On\n    HTTP_Listen  0.0.0.0\n    HTTP_Port    2020\n"
              },
              "securityContext": {
                "privileged": true
              }
            },
            "fluentd": {
              "buffer": {
                "queueChunkLimitSize": 256,
                "totalLimitSize": "256m"
              },
              "logs": {
                "containers": {
                  "multiline": {
                    "enabled": false
                  }
                }
              }
            },
            "kube-prometheus-stack": {
              "prometheus-node-exporter": {
                "service": {
                  "port": 9200,
                  "targetPort": 9200
                }
              },
              "prometheusOperator": {
                "denyNamespaces": [
                  "openshift-apiserver",
                  "openshift-apiserver-operator",
                  "openshift-authentication",
                  "openshift-authentication-operator",
                  "openshift-cloud-credential-operator",
                  "openshift-cluster-machine-approver",
                  "openshift-cluster-samples-operator",
                  "openshift-cluster-storage-operator",
                  "openshift-cluster-version",
                  "openshift-config-operator",
                  "openshift-console-operator",
                  "openshift-controller-manager",
                  "openshift-controller-manager-operator",
                  "openshift-dns,openshift-dns-operator",
                  "openshift-etcd-operator",
                  "openshift-image-registry",
                  "openshift-ingress",
                  "openshift-ingress-operator",
                  "openshift-insights",
                  "openshift-kube-apiserver",
                  "openshift-kube-apiserver-operator",
                  "openshift-kube-controller-manager",
                  "openshift-kube-controller-manager-operator",
                  "openshift-kube-scheduler",
                  "openshift-kube-scheduler-operator",
                  "openshift-kube-storage-version-migrator",
                  "openshift-kube-storage-version-migrator-operator",
                  "openshift-machine-api",
                  "openshift-machine-config-operator",
                  "openshift-marketplace",
                  "openshift-monitoring",
                  "openshift-multus",
                  "openshift-oauth-apiserver",
                  "openshift-operator-lifecycle-manager",
                  "openshift-sdn",
                  "openshift-service-ca-operator",
                  "openshift-user-workload-monitoring"
                ]
              }
            },
            "sumologic": {
              "accessId": "",
              "accessKey": "",
              "clusterName": "kubernetes",
              "endpoint": "",
              "scc": {
                "create": true
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sumologic/sumologic-kubernetes-collection-helm-operator-bundle@sha256:73b3e043557aed8392382afad2009fe2846a659d8f6eec25301a36f932b12680",
      "bundle_path_digest": "sha256:73b3e043557aed8392382afad2009fe2846a659d8f6eec25301a36f932b12680",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-20T20:41:51.640000+00:00",
      "csv_description": "Helm Operator for the Sumo Logic Kubernetes Collection Helm Chart v2.1.4",
      "csv_display_name": "Sumo Logic Kubernetes Collection Helm Operator",
      "csv_metadata_description": "",
      "csv_name": "sumologic-kubernetes-collection-helm-operator.v2.1.4-0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:53:00.768000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "sumologic-kubernetes-collection-helm-operator",
      "provided_apis": [
        {
          "group": "helm-operator.sumologic.com",
          "kind": "SumologicCollection",
          "plural": "sumologiccollections",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b2710d0d515cb03598167cd72916923391dd62675eaef9aad7f37efa3bfeebd3",
          "image": "registry.connect.redhat.com/sumologic/sumologic-kubernetes-collection-helm-operator@sha256:b2710d0d515cb03598167cd72916923391dd62675eaef9aad7f37efa3bfeebd3",
          "name": "sumologic-kubernetes-collection-helm-operator-b2710d0d515cb03598167cd72916923391dd62675eaef9aad7f37efa3bfeebd3-annotation"
        },
        {
          "digest": "sha256:f92b5704d9d1290b1dd9cc8bfcc445e3e118794e8cf9531f439994ee4d2523a6",
          "image": "registry.connect.redhat.com/sumologic/kube-rbac-proxy@sha256:f92b5704d9d1290b1dd9cc8bfcc445e3e118794e8cf9531f439994ee4d2523a6",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:b2710d0d515cb03598167cd72916923391dd62675eaef9aad7f37efa3bfeebd3",
          "image": "registry.connect.redhat.com/sumologic/sumologic-kubernetes-collection-helm-operator@sha256:b2710d0d515cb03598167cd72916923391dd62675eaef9aad7f37efa3bfeebd3",
          "name": "operator"
        },
        {
          "digest": "sha256:ca76893ae48cfc0e6ee4ef24ccbeb4a90aad738308feacdbd9eed205826406b9",
          "image": "registry.connect.redhat.com/sumologic/kubernetes-setup@sha256:ca76893ae48cfc0e6ee4ef24ccbeb4a90aad738308feacdbd9eed205826406b9",
          "name": "kubernetes_setup"
        },
        {
          "digest": "sha256:22694389170863ac60b6c5248310c1381cb145b6b9fa354a18ee664215c5375a",
          "image": "registry.connect.redhat.com/sumologic/node-exporter@sha256:22694389170863ac60b6c5248310c1381cb145b6b9fa354a18ee664215c5375a",
          "name": "node_exporter"
        },
        {
          "digest": "sha256:bb1f73b2be45fa31dfd3fbe72df1d553e5c6cdaa81709bf628764f5969ce4fc2",
          "image": "registry.connect.redhat.com/sumologic/kube-state-metrics@sha256:bb1f73b2be45fa31dfd3fbe72df1d553e5c6cdaa81709bf628764f5969ce4fc2",
          "name": "kube_state_metrics"
        },
        {
          "digest": "sha256:8e29f9b5b7ae76aa9515d1ba20180511feb0c642bc61f782d8d1ea6f62f862aa",
          "image": "registry.connect.redhat.com/sumologic/prometheus-operator@sha256:8e29f9b5b7ae76aa9515d1ba20180511feb0c642bc61f782d8d1ea6f62f862aa",
          "name": "prometheus_operator"
        },
        {
          "digest": "sha256:0309a748632654700e0d49f7ecd7ee61e6344f53107c9ce0c5cf1d301f943d37",
          "image": "registry.connect.redhat.com/sumologic/prometheus-config-reloader@sha256:0309a748632654700e0d49f7ecd7ee61e6344f53107c9ce0c5cf1d301f943d37",
          "name": "prometheus_config_reloader"
        },
        {
          "digest": "sha256:716d5c7183affd306bee7c35c577e5da852d4dfe8da9bf37aff255cd96a0c9b3",
          "image": "registry.connect.redhat.com/sumologic/prometheus@sha256:716d5c7183affd306bee7c35c577e5da852d4dfe8da9bf37aff255cd96a0c9b3",
          "name": "prometheus"
        },
        {
          "digest": "sha256:707e40ee919e4bc3c2edeecdc536acdf8cb67f9e5fc34eaad9d9e4c283438bb1",
          "image": "registry.connect.redhat.com/sumologic/thanos@sha256:707e40ee919e4bc3c2edeecdc536acdf8cb67f9e5fc34eaad9d9e4c283438bb1",
          "name": "thanos"
        },
        {
          "digest": "sha256:1f3c4554e2141e67600ffb2528d8745daf1e581330cb5f4fc75ee7c8aa2298c1",
          "image": "registry.connect.redhat.com/sumologic/metrics-server@sha256:1f3c4554e2141e67600ffb2528d8745daf1e581330cb5f4fc75ee7c8aa2298c1",
          "name": "metrics_server"
        },
        {
          "digest": "sha256:f92b5704d9d1290b1dd9cc8bfcc445e3e118794e8cf9531f439994ee4d2523a6",
          "image": "registry.connect.redhat.com/sumologic/kube-rbac-proxy@sha256:f92b5704d9d1290b1dd9cc8bfcc445e3e118794e8cf9531f439994ee4d2523a6",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:1d9d902b165596e12a626f5dd2f9d512627b356c3773a04c96df24270a840724",
          "image": "registry.connect.redhat.com/sumologic/tailing-sidecar-operator@sha256:1d9d902b165596e12a626f5dd2f9d512627b356c3773a04c96df24270a840724",
          "name": "tailing_sidecar_operator"
        },
        {
          "digest": "sha256:838401ab699ae1f4a581a62a6eea413bca1e2c30d60358acb16bd86be75fbca1",
          "image": "registry.connect.redhat.com/sumologic/tailing-sidecar@sha256:838401ab699ae1f4a581a62a6eea413bca1e2c30d60358acb16bd86be75fbca1",
          "name": "tailing_sidecar"
        },
        {
          "digest": "sha256:3a63153408ff6bb5d6294fcdedfa30b07a5023ca5f72dd63c6e4de31f6bf1c68",
          "image": "registry.connect.redhat.com/sumologic/telegraf-operator@sha256:3a63153408ff6bb5d6294fcdedfa30b07a5023ca5f72dd63c6e4de31f6bf1c68",
          "name": "telegraf_operator"
        },
        {
          "digest": "sha256:8d92cabdd8efbec83475a004209745cc14e877d361cae19ab80a622ebda57e24",
          "image": "registry.connect.redhat.com/sumologic/telegraf@sha256:8d92cabdd8efbec83475a004209745cc14e877d361cae19ab80a622ebda57e24",
          "name": "telegraf"
        },
        {
          "digest": "sha256:362053ce1833aa51db31d36f97458f526d199bcd7efff53486b09e3a02a795ab",
          "image": "registry.connect.redhat.com/sumologic/kubernetes-fluentd@sha256:362053ce1833aa51db31d36f97458f526d199bcd7efff53486b09e3a02a795ab",
          "name": "kubernetes_fluentd"
        },
        {
          "digest": "sha256:faa802d22e41f8d67d487e40285fa2a7ea72f9cd49c32ddb80ea34f4d302e220",
          "image": "registry.connect.redhat.com/sumologic/fluent-bit@sha256:faa802d22e41f8d67d487e40285fa2a7ea72f9cd49c32ddb80ea34f4d302e220",
          "name": "fluent_bit"
        },
        {
          "digest": "sha256:5d468e602034fd84407429fe83c8cb5e4c9ee07e2073db3969aadc97496a958b",
          "image": "registry.connect.redhat.com/sumologic/sumo-ubi-minimal@sha256:5d468e602034fd84407429fe83c8cb5e4c9ee07e2073db3969aadc97496a958b",
          "name": "sumo_ubi_minimal"
        },
        {
          "digest": "sha256:6f07f96178dc26f97169e899c91bd151b64bba6854fcb9f70ccefdfadb48f17a",
          "image": "registry.connect.redhat.com/sumologic/opentelemetry-collector@sha256:6f07f96178dc26f97169e899c91bd151b64bba6854fcb9f70ccefdfadb48f17a",
          "name": "opentelemetry_collector"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.1.4-0",
      "version_original": "2.1.4-0"
    },
    {
      "_id": "614a7312d36186823c2a427a",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {
              "priorityClassName": "system-node-critical",
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "nvidia.com/gpu",
                  "operator": "Exists"
                }
              ]
            },
            "dcgm": {
              "enabled": true,
              "hostPort": 5555,
              "image": "dcgm",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c"
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              },
              "env": [
                {
                  "name": "DCGM_EXPORTER_LISTEN",
                  "value": ":9400"
                },
                {
                  "name": "DCGM_EXPORTER_KUBERNETES",
                  "value": "true"
                },
                {
                  "name": "DCGM_EXPORTER_COLLECTORS",
                  "value": "/etc/dcgm-exporter/dcp-metrics-included.csv"
                }
              ],
              "image": "dcgm-exporter",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff"
            },
            "devicePlugin": {
              "args": [],
              "env": [
                {
                  "name": "PASS_DEVICE_SPECS",
                  "value": "true"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                },
                {
                  "name": "DEVICE_LIST_STRATEGY",
                  "value": "envvar"
                },
                {
                  "name": "DEVICE_ID_STRATEGY",
                  "value": "uuid"
                },
                {
                  "name": "NVIDIA_VISIBLE_DEVICES",
                  "value": "all"
                },
                {
                  "name": "NVIDIA_DRIVER_CAPABILITIES",
                  "value": "all"
                }
              ],
              "image": "k8s-device-plugin",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05"
            },
            "driver": {
              "enabled": true,
              "image": "driver",
              "imagePullSecrets": [],
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "manager": {
                "env": [
                  {
                    "name": "DRAIN_USE_FORCE",
                    "value": "false"
                  },
                  {
                    "name": "DRAIN_POD_SELECTOR_LABEL",
                    "value": ""
                  },
                  {
                    "name": "DRAIN_TIMEOUT_SECONDS",
                    "value": "0s"
                  },
                  {
                    "name": "DRAIN_DELETE_EMPTYDIR_DATA",
                    "value": "false"
                  }
                ],
                "image": "k8s-driver-manager",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia/cloud-native",
                "version": "sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b"
              },
              "nodeSelector": {
                "nvidia.com/gpu.deploy.driver": "true"
              },
              "podSecurityContext": {},
              "rdma": {
                "enabled": false
              },
              "repoConfig": {
                "configMapName": "",
                "destinationDir": ""
              },
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {
              "env": [
                {
                  "name": "GFD_SLEEP_INTERVAL",
                  "value": "60s"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                }
              ],
              "image": "gpu-feature-discovery",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f"
            },
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "config": {
                "name": ""
              },
              "enabled": true,
              "env": [
                {
                  "name": "WITH_REBOOT",
                  "value": "false"
                }
              ],
              "image": "k8s-mig-manager",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:8cdb793f8a22b076bf0f19818f9d79fe87b121608f1aa28b12a560b6fe13f47e"
            },
            "nodeStatusExporter": {
              "enabled": true,
              "image": "gpu-operator-validator",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:a07fd1c74e3e469ac316d17cf79635173764fdab3b681dbc282027a23dbbe227"
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {
                "image": "cuda",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia",
                "version": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce"
              }
            },
            "toolkit": {
              "enabled": true,
              "image": "container-toolkit",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "version": "sha256:b0c84b47d5f95000a842b823ad33dc9aa28f0edfa6d9565c289b61cb1d4a9934"
            },
            "validator": {
              "env": [
                {
                  "name": "WITH_WORKLOAD",
                  "value": "true"
                }
              ],
              "image": "gpu-operator-validator",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:a07fd1c74e3e469ac316d17cf79635173764fdab3b681dbc282027a23dbbe227"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:7a0e687b8ebe398f66d371cfe148f415018eb614aa9913d177f3a401855699cf",
      "bundle_path_digest": "sha256:7a0e687b8ebe398f66d371cfe148f415018eb614aa9913d177f3a401855699cf",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.8",
      "creation_date": "2021-09-22T00:04:34.119000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/kubernetes/openshift-on-gpu-install-guide/index.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.8.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:47:43.107000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:2097beb34a61d906dd86d6784a4435de778c5a771865d06b60b6989f602741fd",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:2097beb34a61d906dd86d6784a4435de778c5a771865d06b60b6989f602741fd",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:b0c84b47d5f95000a842b823ad33dc9aa28f0edfa6d9565c289b61cb1d4a9934",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:b0c84b47d5f95000a842b823ad33dc9aa28f0edfa6d9565c289b61cb1d4a9934",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
          "image": "nvcr.io/nvidia/driver@sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
          "name": "driver-image"
        },
        {
          "digest": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:8cdb793f8a22b076bf0f19818f9d79fe87b121608f1aa28b12a560b6fe13f47e",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:8cdb793f8a22b076bf0f19818f9d79fe87b121608f1aa28b12a560b6fe13f47e",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "image": "nvcr.io/nvidia/cuda@sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:a07fd1c74e3e469ac316d17cf79635173764fdab3b681dbc282027a23dbbe227",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:a07fd1c74e3e469ac316d17cf79635173764fdab3b681dbc282027a23dbbe227",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b",
          "name": "k8s-driver-manager-image"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.8.2",
      "version_original": "1.8.2"
    },
    {
      "_id": "614a756bd2c7f84a4d2ec90a",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {
              "priorityClassName": "system-node-critical",
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "nvidia.com/gpu",
                  "operator": "Exists"
                }
              ]
            },
            "dcgm": {
              "enabled": true,
              "hostPort": 5555,
              "image": "dcgm",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c"
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              },
              "env": [
                {
                  "name": "DCGM_EXPORTER_LISTEN",
                  "value": ":9400"
                },
                {
                  "name": "DCGM_EXPORTER_KUBERNETES",
                  "value": "true"
                },
                {
                  "name": "DCGM_EXPORTER_COLLECTORS",
                  "value": "/etc/dcgm-exporter/dcp-metrics-included.csv"
                }
              ],
              "image": "dcgm-exporter",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff"
            },
            "devicePlugin": {
              "args": [],
              "env": [
                {
                  "name": "PASS_DEVICE_SPECS",
                  "value": "true"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                },
                {
                  "name": "DEVICE_LIST_STRATEGY",
                  "value": "envvar"
                },
                {
                  "name": "DEVICE_ID_STRATEGY",
                  "value": "uuid"
                },
                {
                  "name": "NVIDIA_VISIBLE_DEVICES",
                  "value": "all"
                },
                {
                  "name": "NVIDIA_DRIVER_CAPABILITIES",
                  "value": "all"
                }
              ],
              "image": "k8s-device-plugin",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05"
            },
            "driver": {
              "enabled": true,
              "image": "driver",
              "imagePullSecrets": [],
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "manager": {
                "env": [
                  {
                    "name": "DRAIN_USE_FORCE",
                    "value": "false"
                  },
                  {
                    "name": "DRAIN_POD_SELECTOR_LABEL",
                    "value": ""
                  },
                  {
                    "name": "DRAIN_TIMEOUT_SECONDS",
                    "value": "0s"
                  },
                  {
                    "name": "DRAIN_DELETE_EMPTYDIR_DATA",
                    "value": "false"
                  }
                ],
                "image": "k8s-driver-manager",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia/cloud-native",
                "version": "sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b"
              },
              "nodeSelector": {
                "nvidia.com/gpu.deploy.driver": "true"
              },
              "podSecurityContext": {},
              "rdma": {
                "enabled": false
              },
              "repoConfig": {
                "configMapName": "",
                "destinationDir": ""
              },
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {
              "env": [
                {
                  "name": "GFD_SLEEP_INTERVAL",
                  "value": "60s"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                }
              ],
              "image": "gpu-feature-discovery",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f"
            },
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "config": {
                "name": ""
              },
              "enabled": true,
              "env": [
                {
                  "name": "WITH_REBOOT",
                  "value": "false"
                }
              ],
              "image": "k8s-mig-manager",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:8cdb793f8a22b076bf0f19818f9d79fe87b121608f1aa28b12a560b6fe13f47e"
            },
            "nodeStatusExporter": {
              "enabled": true,
              "image": "gpu-operator-validator",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:a07fd1c74e3e469ac316d17cf79635173764fdab3b681dbc282027a23dbbe227"
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {
                "image": "cuda",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia",
                "version": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce"
              }
            },
            "toolkit": {
              "enabled": true,
              "image": "container-toolkit",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "version": "sha256:b0c84b47d5f95000a842b823ad33dc9aa28f0edfa6d9565c289b61cb1d4a9934"
            },
            "validator": {
              "env": [
                {
                  "name": "WITH_WORKLOAD",
                  "value": "true"
                }
              ],
              "image": "gpu-operator-validator",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:a07fd1c74e3e469ac316d17cf79635173764fdab3b681dbc282027a23dbbe227"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:7a0e687b8ebe398f66d371cfe148f415018eb614aa9913d177f3a401855699cf",
      "bundle_path_digest": "sha256:7a0e687b8ebe398f66d371cfe148f415018eb614aa9913d177f3a401855699cf",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.8",
      "creation_date": "2021-09-22T00:14:35.691000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/kubernetes/openshift-on-gpu-install-guide/index.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.8.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:15:51.985000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:2097beb34a61d906dd86d6784a4435de778c5a771865d06b60b6989f602741fd",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:2097beb34a61d906dd86d6784a4435de778c5a771865d06b60b6989f602741fd",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:b0c84b47d5f95000a842b823ad33dc9aa28f0edfa6d9565c289b61cb1d4a9934",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:b0c84b47d5f95000a842b823ad33dc9aa28f0edfa6d9565c289b61cb1d4a9934",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
          "image": "nvcr.io/nvidia/driver@sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
          "name": "driver-image"
        },
        {
          "digest": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:8cdb793f8a22b076bf0f19818f9d79fe87b121608f1aa28b12a560b6fe13f47e",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:8cdb793f8a22b076bf0f19818f9d79fe87b121608f1aa28b12a560b6fe13f47e",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "image": "nvcr.io/nvidia/cuda@sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:a07fd1c74e3e469ac316d17cf79635173764fdab3b681dbc282027a23dbbe227",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:a07fd1c74e3e469ac316d17cf79635173764fdab3b681dbc282027a23dbbe227",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b",
          "name": "k8s-driver-manager-image"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.8.2",
      "version_original": "1.8.2"
    },
    {
      "_id": "614a816969cb9f1af5ba664f",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {
              "priorityClassName": "system-node-critical",
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "nvidia.com/gpu",
                  "operator": "Exists"
                }
              ]
            },
            "dcgm": {
              "enabled": true,
              "hostPort": 5555,
              "image": "dcgm",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c"
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              },
              "env": [
                {
                  "name": "DCGM_EXPORTER_LISTEN",
                  "value": ":9400"
                },
                {
                  "name": "DCGM_EXPORTER_KUBERNETES",
                  "value": "true"
                },
                {
                  "name": "DCGM_EXPORTER_COLLECTORS",
                  "value": "/etc/dcgm-exporter/dcp-metrics-included.csv"
                }
              ],
              "image": "dcgm-exporter",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff"
            },
            "devicePlugin": {
              "args": [],
              "env": [
                {
                  "name": "PASS_DEVICE_SPECS",
                  "value": "true"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                },
                {
                  "name": "DEVICE_LIST_STRATEGY",
                  "value": "envvar"
                },
                {
                  "name": "DEVICE_ID_STRATEGY",
                  "value": "uuid"
                },
                {
                  "name": "NVIDIA_VISIBLE_DEVICES",
                  "value": "all"
                },
                {
                  "name": "NVIDIA_DRIVER_CAPABILITIES",
                  "value": "all"
                }
              ],
              "image": "k8s-device-plugin",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05"
            },
            "driver": {
              "enabled": true,
              "image": "driver",
              "imagePullSecrets": [],
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "manager": {
                "env": [
                  {
                    "name": "DRAIN_USE_FORCE",
                    "value": "false"
                  },
                  {
                    "name": "DRAIN_POD_SELECTOR_LABEL",
                    "value": ""
                  },
                  {
                    "name": "DRAIN_TIMEOUT_SECONDS",
                    "value": "0s"
                  },
                  {
                    "name": "DRAIN_DELETE_EMPTYDIR_DATA",
                    "value": "false"
                  }
                ],
                "image": "k8s-driver-manager",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia/cloud-native",
                "version": "sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b"
              },
              "nodeSelector": {
                "nvidia.com/gpu.deploy.driver": "true"
              },
              "podSecurityContext": {},
              "rdma": {
                "enabled": false
              },
              "repoConfig": {
                "configMapName": "",
                "destinationDir": ""
              },
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {
              "env": [
                {
                  "name": "GFD_SLEEP_INTERVAL",
                  "value": "60s"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                }
              ],
              "image": "gpu-feature-discovery",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f"
            },
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "config": {
                "name": ""
              },
              "enabled": true,
              "env": [
                {
                  "name": "WITH_REBOOT",
                  "value": "false"
                }
              ],
              "image": "k8s-mig-manager",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:8cdb793f8a22b076bf0f19818f9d79fe87b121608f1aa28b12a560b6fe13f47e"
            },
            "nodeStatusExporter": {
              "enabled": true,
              "image": "gpu-operator-validator",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:a07fd1c74e3e469ac316d17cf79635173764fdab3b681dbc282027a23dbbe227"
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {
                "image": "cuda",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia",
                "version": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce"
              }
            },
            "toolkit": {
              "enabled": true,
              "image": "container-toolkit",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "version": "sha256:b0c84b47d5f95000a842b823ad33dc9aa28f0edfa6d9565c289b61cb1d4a9934"
            },
            "validator": {
              "env": [
                {
                  "name": "WITH_WORKLOAD",
                  "value": "true"
                }
              ],
              "image": "gpu-operator-validator",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:a07fd1c74e3e469ac316d17cf79635173764fdab3b681dbc282027a23dbbe227"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:7a0e687b8ebe398f66d371cfe148f415018eb614aa9913d177f3a401855699cf",
      "bundle_path_digest": "sha256:7a0e687b8ebe398f66d371cfe148f415018eb614aa9913d177f3a401855699cf",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.8",
      "creation_date": "2021-09-22T01:05:45.673000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/kubernetes/openshift-on-gpu-install-guide/index.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.8.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T00:50:46.725000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:2097beb34a61d906dd86d6784a4435de778c5a771865d06b60b6989f602741fd",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:2097beb34a61d906dd86d6784a4435de778c5a771865d06b60b6989f602741fd",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:b0c84b47d5f95000a842b823ad33dc9aa28f0edfa6d9565c289b61cb1d4a9934",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:b0c84b47d5f95000a842b823ad33dc9aa28f0edfa6d9565c289b61cb1d4a9934",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
          "image": "nvcr.io/nvidia/driver@sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
          "name": "driver-image"
        },
        {
          "digest": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:8cdb793f8a22b076bf0f19818f9d79fe87b121608f1aa28b12a560b6fe13f47e",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:8cdb793f8a22b076bf0f19818f9d79fe87b121608f1aa28b12a560b6fe13f47e",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "image": "nvcr.io/nvidia/cuda@sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:a07fd1c74e3e469ac316d17cf79635173764fdab3b681dbc282027a23dbbe227",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:a07fd1c74e3e469ac316d17cf79635173764fdab3b681dbc282027a23dbbe227",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b",
          "name": "k8s-driver-manager-image"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.8.2",
      "version_original": "1.8.2"
    },
    {
      "_id": "614b4a8ed2c7f84a4d2eca1c",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:f7fa9a0e8cd1524d7048d6e563a05ec2890941427211f02ca3f1c0faf19b7ce7",
      "bundle_path_digest": "sha256:f7fa9a0e8cd1524d7048d6e563a05ec2890941427211f02ca3f1c0faf19b7ce7",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v2.0",
      "creation_date": "2021-09-22T15:23:58.931000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:00:19.447000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:2672b203f768e62ef507de23bf771764266b958acded02ca3c9aedbb08338aef",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:2672b203f768e62ef507de23bf771764266b958acded02ca3c9aedbb08338aef",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:27ebeed0e96dcc7d6c2ab15149bfb324c428f4aee3346e54d5200d1c72435591",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:27ebeed0e96dcc7d6c2ab15149bfb324c428f4aee3346e54d5200d1c72435591",
          "name": "COUCHDB-MGMT"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "614b4f1ed36186823c2a44de",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:f7fa9a0e8cd1524d7048d6e563a05ec2890941427211f02ca3f1c0faf19b7ce7",
      "bundle_path_digest": "sha256:f7fa9a0e8cd1524d7048d6e563a05ec2890941427211f02ca3f1c0faf19b7ce7",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v2.0",
      "creation_date": "2021-09-22T15:43:26.415000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:14:06.746000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:2672b203f768e62ef507de23bf771764266b958acded02ca3c9aedbb08338aef",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:2672b203f768e62ef507de23bf771764266b958acded02ca3c9aedbb08338aef",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:27ebeed0e96dcc7d6c2ab15149bfb324c428f4aee3346e54d5200d1c72435591",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:27ebeed0e96dcc7d6c2ab15149bfb324c428f4aee3346e54d5200d1c72435591",
          "name": "COUCHDB-MGMT"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "614b5033bc74e0be7ca66255",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:f7fa9a0e8cd1524d7048d6e563a05ec2890941427211f02ca3f1c0faf19b7ce7",
      "bundle_path_digest": "sha256:f7fa9a0e8cd1524d7048d6e563a05ec2890941427211f02ca3f1c0faf19b7ce7",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v2.0",
      "creation_date": "2021-09-22T15:48:03.990000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T00:58:51.242000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:2672b203f768e62ef507de23bf771764266b958acded02ca3c9aedbb08338aef",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:2672b203f768e62ef507de23bf771764266b958acded02ca3c9aedbb08338aef",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:27ebeed0e96dcc7d6c2ab15149bfb324c428f4aee3346e54d5200d1c72435591",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:27ebeed0e96dcc7d6c2ab15149bfb324c428f4aee3346e54d5200d1c72435591",
          "name": "COUCHDB-MGMT"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "614b9d4c69cb9f1af5ba69c0",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/aikit-operator-bundle@sha256:a2ed8e74818770e0623cad0eb1e479b984f0c8a9261b20c59fbdc759ac153d57",
      "bundle_path_digest": "sha256:a2ed8e74818770e0623cad0eb1e479b984f0c8a9261b20c59fbdc759ac153d57",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-22T21:17:00.609000+00:00",
      "csv_description": "The Intel\u00ae oneAPI AI Analytics Toolkit gives data scientists, AI developers, and researchers familiar Python* tools and frameworks to accelerate end-to-end data science and machine learning pipelines on Intel\u00ae architectures. The components are built using oneAPI libraries for low-level compute optimizations. This toolkit maximizes performance from preprocessing through machine and deep learning phases and provides interoperability for efficient model development and deployment across single and multinodes.\n",
      "csv_display_name": "Intel\u00ae oneAPI AI Analytics Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "aikit-operator.v2021.2.265-dev-97183ad",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:56:35+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "aikit-operator",
      "provided_apis": [
        {
          "group": "aikit.intel",
          "kind": "AIKitContainer",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:eea31a64c45d3a8c585928b11d9c6f264d33c40ea46ffe8189edffa8301eec71",
          "image": "registry.connect.redhat.com/intel/aikit-operator@sha256:eea31a64c45d3a8c585928b11d9c6f264d33c40ea46ffe8189edffa8301eec71",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2021.2.265-dev-97183ad",
      "version_original": "2021.2.265-dev-97183ad"
    },
    {
      "_id": "614c8597bc74e0be7ca66510",
      "alm_examples": [
        {
          "api_version": "cilium.io/v1alpha1",
          "kind": "CiliumConfig",
          "metadata": {
            "name": "cilium-openshift-default",
            "namespace": "placeholder"
          },
          "spec": {
            "cni": {
              "binPath": "/var/lib/cni/bin",
              "confPath": "/var/run/multus/cni/net.d"
            },
            "endpointRoutes": {
              "enabled": true
            },
            "hubble": {
              "tls": {
                "enabled": false
              }
            },
            "ipam": {
              "mode": "cluster-pool",
              "operator": {
                "clusterPoolIPv4MaskSize": "23",
                "clusterPoolIPv4PodCIDR": "10.128.0.0/14"
              }
            },
            "kubeProxyReplacement": "probe",
            "nativeRoutingCIDR": "10.128.0.0/14",
            "prometheus": {
              "serviceMonitor": {
                "enabled": false
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/isovalent/cilium-olm-metadata@sha256:33a2e21a069ff24af4bf0ffc51e83ddf398df5d9735d0123120768e9dc2c27f9",
      "bundle_path_digest": "sha256:33a2e21a069ff24af4bf0ffc51e83ddf398df5d9735d0123120768e9dc2c27f9",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-23T13:48:07.091000+00:00",
      "csv_description": "Cilium - eBPF-based Networking, Security, and Observability",
      "csv_display_name": "Cilium",
      "csv_metadata_description": "",
      "csv_name": "cilium.v1.10.4-x5bfd7b3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:06:54.022000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cilium",
      "provided_apis": [
        {
          "group": "cilium.io",
          "kind": "CiliumConfig",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b45ff6a6552d71cbc26e358e0b25759d33818fd92301f1656453c5bcf826ff13",
          "image": "registry.connect.redhat.com/isovalent/cilium-olm@sha256:b45ff6a6552d71cbc26e358e0b25759d33818fd92301f1656453c5bcf826ff13",
          "name": "operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.10.4+x5bfd7b3",
      "version_original": "1.10.4+x5bfd7b3"
    },
    {
      "_id": "614c8a97d2c7f84a4d2ece26",
      "alm_examples": [
        {
          "api_version": "cilium.io/v1alpha1",
          "kind": "CiliumConfig",
          "metadata": {
            "name": "cilium-openshift-default",
            "namespace": "placeholder"
          },
          "spec": {
            "cni": {
              "binPath": "/var/lib/cni/bin",
              "confPath": "/var/run/multus/cni/net.d"
            },
            "endpointRoutes": {
              "enabled": true
            },
            "hubble": {
              "tls": {
                "enabled": false
              }
            },
            "ipam": {
              "mode": "cluster-pool",
              "operator": {
                "clusterPoolIPv4MaskSize": "23",
                "clusterPoolIPv4PodCIDR": "10.128.0.0/14"
              }
            },
            "kubeProxyReplacement": "probe",
            "nativeRoutingCIDR": "10.128.0.0/14",
            "prometheus": {
              "serviceMonitor": {
                "enabled": false
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/isovalent/cilium-olm-metadata@sha256:33a2e21a069ff24af4bf0ffc51e83ddf398df5d9735d0123120768e9dc2c27f9",
      "bundle_path_digest": "sha256:33a2e21a069ff24af4bf0ffc51e83ddf398df5d9735d0123120768e9dc2c27f9",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-23T14:09:27.038000+00:00",
      "csv_description": "Cilium - eBPF-based Networking, Security, and Observability",
      "csv_display_name": "Cilium",
      "csv_metadata_description": "",
      "csv_name": "cilium.v1.10.4-x5bfd7b3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:00:47.400000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cilium",
      "provided_apis": [
        {
          "group": "cilium.io",
          "kind": "CiliumConfig",
          "plural": "ciliumconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b45ff6a6552d71cbc26e358e0b25759d33818fd92301f1656453c5bcf826ff13",
          "image": "registry.connect.redhat.com/isovalent/cilium-olm@sha256:b45ff6a6552d71cbc26e358e0b25759d33818fd92301f1656453c5bcf826ff13",
          "name": "operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.10.4+x5bfd7b3",
      "version_original": "1.10.4+x5bfd7b3"
    }
  ],
  "page": 2,
  "page_size": 500,
  "total": 3956
}

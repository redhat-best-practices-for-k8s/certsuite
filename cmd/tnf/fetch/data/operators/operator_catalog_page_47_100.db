{
  "data": [
    {
      "_id": "630ce679ff929834c41352bd",
      "alm_examples": [
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceConfig",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "marketplaceconfig",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "",
            "features": {
              "deployment": true,
              "meterDefinitionCatalogServer": false,
              "registration": true
            },
            "installIBMCatalogSource": true,
            "isDisconnected": false,
            "rhmAccountID": ""
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterBase",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterbase",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "enabled": true,
            "prometheus": {
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1",
                  "memory": "1G"
                }
              },
              "storage": {
                "size": "20Gi"
              }
            }
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterReport",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterreport",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "endTime": "2020-08-05T00:00:00Z",
            "prometheusService": {
              "name": "rhm-prometheus-meterbase",
              "namespace": "openshift-redhat-marketplace",
              "targetPort": "rbac"
            },
            "startTime": "2020-08-04T00:00:00Z"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RazeeDeployment",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "razeedeployment-example",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "example-cluster-uuid",
            "enabled": true
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RemoteResourceS3",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-remoteresources3",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "auth": {
              "iam": {
                "apiKeyRef": {
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "accesskey",
                      "name": "rhm-cos-reader-key"
                    }
                  }
                },
                "grantType": "urn:ibm:params:oauth:grant-type:apikey",
                "responseType": "cloud_iam",
                "url": "https://iam.cloud.ibm.com/identity/token"
              }
            },
            "requests": [
              {
                "options": {
                  "url": "https://s3.us-east.cloud-object-storage.appdomain.cloud/your-accountId/your-cluster-uuid/name-of-child.yaml"
                }
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterdefinition-4",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterdefinition-sample",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:e5f9209dd630354fed2f4e21a0c503262dc059af8e52a3d1aba2bac0fa09fdf5",
      "bundle_path_digest": "sha256:e5f9209dd630354fed2f4e21a0c503262dc059af8e52a3d1aba2bac0fa09fdf5",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-29T16:16:57.567000+00:00",
      "csv_description": "The Red Hat Marketplace Operator provides cluster management, metering and\noperator installation for Red Hat Marketplace customers.\n### **Important Note**\nA set of instructions for onboarding is provided here. For more detailed onboarding instructions or information about what is installed please visit [marketplace.redhat.com](https://marketplace.redhat.com).\nTo access images from Red Hat Marketplace and the Marketplace container catalog you will need to make the pull secret attained in installation available to the workloads running on the cluster.\n### Prerequisites\n1. It is recommended to [enable monitoring for user-defined projects](https://docs.openshift.com/container-platform/4.10/monitoring/enabling-monitoring-for-user-defined-projects.html) as the Prometheus provider.\n2. Edit the cluster-monitoring-config ConfigMap object:\n  \n   ```sh\n   $ oc -n openshift-monitoring edit configmap cluster-monitoring-config\n   ```\n\n3. Add enableUserWorkload: true under data/config.yaml:\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: cluster-monitoring-config\n      namespace: openshift-monitoring\n    data:\n      config.yaml: |\n        enableUserWorkload: true\n    ```\n\n4. Configure the user-workload-monitoring-config ConfigMap object:\n  \n    ```sh\n    $ oc -n openshift-user-workload-monitoring edit configmap user-workload-monitoring-config\n    ```\n\n5. Configure a minimum retention time of 168h and minimum storage capacity of 40Gi\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: user-workload-monitoring-config\n      namespace: openshift-user-workload-monitoring\n    data:\n      config.yaml: |\n        prometheus:\n          retention: 168h\n          volumeClaimTemplate:\n            spec:\n              resources:\n                requests:\n                  storage: 40Gi\n    ```\n\n### Installation\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n2. Install the Red Hat Marketplace Operator in the openshift-redhat-marketplace namespace.\n3. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n4. Install the Red Hat Marketplace pull secret as a global pull secret on the cluster.\n   **Warning:** This step will make your cluster perform a rolling restart.\n   These steps require `oc`, `jq`, and `base64` to be available on your machine.\n\n   ```sh\n   # Create the docker pull secret file using your PULL_SECRET from Red Hat Marketplace.\n   # Store it in a file called entitledregistryconfigjson.\n   oc create secret docker-registry entitled-registry --docker-server=registry.marketplace.redhat.com --docker-username \"cp\" --docker-password \"${PULL_SECRET}\" --dry-run=true --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > entitledregistryconfigjson\n   # Get the current global secrets on the cluster and store it as a file named dockerconfigjson\n   oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > dockerconfigjson\n   # Merge the two dockerconfigs together into a file called dockerconfigjson-merged.\n   jq -s '.[0] * .[1]' dockerconfigjson entitledregistryconfigjson > dockerconfigjson-merged\n   # Set the cluster's dockerconfig file to the new merged version.\n   oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfigjson-merged\n   # Cluster will now restart.\n   ```\n\n### Why is a global pull secret required?\nIn order to successfully install the Red Hat Marketplace products, you will need to make the pull secret available across the cluster. This can be achieved by applying the Red Hat Marketplace Pull Secret as a [global pull secret](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).\nFor alternative approachs, please see the official OpenShift [documentation](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html).\n### Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n### Getting help\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/redhat-marketplace-operator) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n### Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/README.md)\n### License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/LICENSE)\n",
      "csv_display_name": "Red Hat Marketplace",
      "csv_metadata_description": "The Red Hat Marketplace Operator provides cluster management, metering and operator installation for Red Hat Marketplace customers.",
      "csv_name": "redhat-marketplace-operator.v2.8.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-29T16:16:57.567000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [
        {
          "group": "marketplace.redhat.com",
          "kind": "RazeeDeployment",
          "plural": "razeedeployments",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RemoteResourceS3",
          "plural": "remoteresources3s",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceConfig",
          "plural": "marketplaceconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterBase",
          "plural": "meterbases",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1beta1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterReport",
          "plural": "meterreports",
          "version": "v1alpha1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "image": "registry.redhat.io/openshift4/ose-prometheus@sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "name": "prometheus"
        },
        {
          "digest": "sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "image": "registry.redhat.io/openshift4/ose-configmap-reloader@sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "name": "configmap_reloader"
        },
        {
          "digest": "sha256:7bbeb563c25a511e15aecb5ff8c4905120906092277e299b281170371f0e1281",
          "image": "quay.io/rh-marketplace/redhat-marketplace-reporter@sha256:7bbeb563c25a511e15aecb5ff8c4905120906092277e299b281170371f0e1281",
          "name": "reporter"
        },
        {
          "digest": "sha256:810c57d62498d8612d154dea0c94b6dba46f84308ec48f03d324359a38cccf33",
          "image": "quay.io/rh-marketplace/redhat-marketplace-authcheck@sha256:810c57d62498d8612d154dea0c94b6dba46f84308ec48f03d324359a38cccf33",
          "name": "authcheck"
        },
        {
          "digest": "sha256:db6024317d54bc811ffa3c6b3a5423a36f02e5a31586c88ef0f996424c76cb2b",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:db6024317d54bc811ffa3c6b3a5423a36f02e5a31586c88ef0f996424c76cb2b",
          "name": "manager"
        },
        {
          "digest": "sha256:c74b64a0d0d63e585a9115535a310b9993d55f62924039102bb079d2d5c10697",
          "image": "quay.io/rh-marketplace/redhat-marketplace-data-service@sha256:c74b64a0d0d63e585a9115535a310b9993d55f62924039102bb079d2d5c10697",
          "name": "dqlite"
        },
        {
          "digest": "sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "image": "registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "name": "prometheus_configmap_reloader"
        },
        {
          "digest": "sha256:db6024317d54bc811ffa3c6b3a5423a36f02e5a31586c88ef0f996424c76cb2b",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:db6024317d54bc811ffa3c6b3a5423a36f02e5a31586c88ef0f996424c76cb2b",
          "name": "redhat-marketplace-operator-db6024317d54bc811ffa3c6b3a5423a36f02e5a31586c88ef0f996424c76cb2b-annotation"
        },
        {
          "digest": "sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "image": "us.icr.io/armada-master/watch-keeper@sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "name": "rhm_watch_keeper_deployment"
        },
        {
          "digest": "sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "image": "us.icr.io/armada-master/remoteresources3@sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "name": "rhm_rrs3_deployment"
        },
        {
          "digest": "sha256:5638452bb8b4728c6afa33b081a32244603fba25304e24976e990ba78aee60f6",
          "image": "quay.io/rh-marketplace/redhat-marketplace-metric-state@sha256:5638452bb8b4728c6afa33b081a32244603fba25304e24976e990ba78aee60f6",
          "name": "metric_state"
        },
        {
          "digest": "sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "image": "registry.redhat.io/openshift4/ose-prometheus-operator@sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "name": "prometheus_operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <2.8.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.8.1",
      "version_original": "2.8.1"
    },
    {
      "_id": "630ce67b8139e9d4725e5b89",
      "alm_examples": [
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceConfig",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "marketplaceconfig",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "",
            "features": {
              "deployment": true,
              "meterDefinitionCatalogServer": false,
              "registration": true
            },
            "installIBMCatalogSource": true,
            "isDisconnected": false,
            "rhmAccountID": ""
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterBase",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterbase",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "enabled": true,
            "prometheus": {
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1",
                  "memory": "1G"
                }
              },
              "storage": {
                "size": "20Gi"
              }
            }
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterReport",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterreport",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "endTime": "2020-08-05T00:00:00Z",
            "prometheusService": {
              "name": "rhm-prometheus-meterbase",
              "namespace": "openshift-redhat-marketplace",
              "targetPort": "rbac"
            },
            "startTime": "2020-08-04T00:00:00Z"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RazeeDeployment",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "razeedeployment-example",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "example-cluster-uuid",
            "enabled": true
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RemoteResourceS3",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-remoteresources3",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "auth": {
              "iam": {
                "apiKeyRef": {
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "accesskey",
                      "name": "rhm-cos-reader-key"
                    }
                  }
                },
                "grantType": "urn:ibm:params:oauth:grant-type:apikey",
                "responseType": "cloud_iam",
                "url": "https://iam.cloud.ibm.com/identity/token"
              }
            },
            "requests": [
              {
                "options": {
                  "url": "https://s3.us-east.cloud-object-storage.appdomain.cloud/your-accountId/your-cluster-uuid/name-of-child.yaml"
                }
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterdefinition-4",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterdefinition-sample",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:e5f9209dd630354fed2f4e21a0c503262dc059af8e52a3d1aba2bac0fa09fdf5",
      "bundle_path_digest": "sha256:e5f9209dd630354fed2f4e21a0c503262dc059af8e52a3d1aba2bac0fa09fdf5",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-29T16:16:59.726000+00:00",
      "csv_description": "The Red Hat Marketplace Operator provides cluster management, metering and\noperator installation for Red Hat Marketplace customers.\n### **Important Note**\nA set of instructions for onboarding is provided here. For more detailed onboarding instructions or information about what is installed please visit [marketplace.redhat.com](https://marketplace.redhat.com).\nTo access images from Red Hat Marketplace and the Marketplace container catalog you will need to make the pull secret attained in installation available to the workloads running on the cluster.\n### Prerequisites\n1. It is recommended to [enable monitoring for user-defined projects](https://docs.openshift.com/container-platform/4.10/monitoring/enabling-monitoring-for-user-defined-projects.html) as the Prometheus provider.\n2. Edit the cluster-monitoring-config ConfigMap object:\n  \n   ```sh\n   $ oc -n openshift-monitoring edit configmap cluster-monitoring-config\n   ```\n\n3. Add enableUserWorkload: true under data/config.yaml:\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: cluster-monitoring-config\n      namespace: openshift-monitoring\n    data:\n      config.yaml: |\n        enableUserWorkload: true\n    ```\n\n4. Configure the user-workload-monitoring-config ConfigMap object:\n  \n    ```sh\n    $ oc -n openshift-user-workload-monitoring edit configmap user-workload-monitoring-config\n    ```\n\n5. Configure a minimum retention time of 168h and minimum storage capacity of 40Gi\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: user-workload-monitoring-config\n      namespace: openshift-user-workload-monitoring\n    data:\n      config.yaml: |\n        prometheus:\n          retention: 168h\n          volumeClaimTemplate:\n            spec:\n              resources:\n                requests:\n                  storage: 40Gi\n    ```\n\n### Installation\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n2. Install the Red Hat Marketplace Operator in the openshift-redhat-marketplace namespace.\n3. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n4. Install the Red Hat Marketplace pull secret as a global pull secret on the cluster.\n   **Warning:** This step will make your cluster perform a rolling restart.\n   These steps require `oc`, `jq`, and `base64` to be available on your machine.\n\n   ```sh\n   # Create the docker pull secret file using your PULL_SECRET from Red Hat Marketplace.\n   # Store it in a file called entitledregistryconfigjson.\n   oc create secret docker-registry entitled-registry --docker-server=registry.marketplace.redhat.com --docker-username \"cp\" --docker-password \"${PULL_SECRET}\" --dry-run=true --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > entitledregistryconfigjson\n   # Get the current global secrets on the cluster and store it as a file named dockerconfigjson\n   oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > dockerconfigjson\n   # Merge the two dockerconfigs together into a file called dockerconfigjson-merged.\n   jq -s '.[0] * .[1]' dockerconfigjson entitledregistryconfigjson > dockerconfigjson-merged\n   # Set the cluster's dockerconfig file to the new merged version.\n   oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfigjson-merged\n   # Cluster will now restart.\n   ```\n\n### Why is a global pull secret required?\nIn order to successfully install the Red Hat Marketplace products, you will need to make the pull secret available across the cluster. This can be achieved by applying the Red Hat Marketplace Pull Secret as a [global pull secret](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).\nFor alternative approachs, please see the official OpenShift [documentation](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html).\n### Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n### Getting help\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/redhat-marketplace-operator) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n### Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/README.md)\n### License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/LICENSE)\n",
      "csv_display_name": "Red Hat Marketplace",
      "csv_metadata_description": "The Red Hat Marketplace Operator provides cluster management, metering and operator installation for Red Hat Marketplace customers.",
      "csv_name": "redhat-marketplace-operator.v2.8.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-29T16:16:59.726000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [
        {
          "group": "marketplace.redhat.com",
          "kind": "RazeeDeployment",
          "plural": "razeedeployments",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RemoteResourceS3",
          "plural": "remoteresources3s",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceConfig",
          "plural": "marketplaceconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterBase",
          "plural": "meterbases",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1beta1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterReport",
          "plural": "meterreports",
          "version": "v1alpha1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "image": "registry.redhat.io/openshift4/ose-prometheus@sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "name": "prometheus"
        },
        {
          "digest": "sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "image": "registry.redhat.io/openshift4/ose-configmap-reloader@sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "name": "configmap_reloader"
        },
        {
          "digest": "sha256:7bbeb563c25a511e15aecb5ff8c4905120906092277e299b281170371f0e1281",
          "image": "quay.io/rh-marketplace/redhat-marketplace-reporter@sha256:7bbeb563c25a511e15aecb5ff8c4905120906092277e299b281170371f0e1281",
          "name": "reporter"
        },
        {
          "digest": "sha256:810c57d62498d8612d154dea0c94b6dba46f84308ec48f03d324359a38cccf33",
          "image": "quay.io/rh-marketplace/redhat-marketplace-authcheck@sha256:810c57d62498d8612d154dea0c94b6dba46f84308ec48f03d324359a38cccf33",
          "name": "authcheck"
        },
        {
          "digest": "sha256:db6024317d54bc811ffa3c6b3a5423a36f02e5a31586c88ef0f996424c76cb2b",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:db6024317d54bc811ffa3c6b3a5423a36f02e5a31586c88ef0f996424c76cb2b",
          "name": "manager"
        },
        {
          "digest": "sha256:c74b64a0d0d63e585a9115535a310b9993d55f62924039102bb079d2d5c10697",
          "image": "quay.io/rh-marketplace/redhat-marketplace-data-service@sha256:c74b64a0d0d63e585a9115535a310b9993d55f62924039102bb079d2d5c10697",
          "name": "dqlite"
        },
        {
          "digest": "sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "image": "registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "name": "prometheus_configmap_reloader"
        },
        {
          "digest": "sha256:db6024317d54bc811ffa3c6b3a5423a36f02e5a31586c88ef0f996424c76cb2b",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:db6024317d54bc811ffa3c6b3a5423a36f02e5a31586c88ef0f996424c76cb2b",
          "name": "redhat-marketplace-operator-db6024317d54bc811ffa3c6b3a5423a36f02e5a31586c88ef0f996424c76cb2b-annotation"
        },
        {
          "digest": "sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "image": "us.icr.io/armada-master/watch-keeper@sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "name": "rhm_watch_keeper_deployment"
        },
        {
          "digest": "sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "image": "us.icr.io/armada-master/remoteresources3@sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "name": "rhm_rrs3_deployment"
        },
        {
          "digest": "sha256:5638452bb8b4728c6afa33b081a32244603fba25304e24976e990ba78aee60f6",
          "image": "quay.io/rh-marketplace/redhat-marketplace-metric-state@sha256:5638452bb8b4728c6afa33b081a32244603fba25304e24976e990ba78aee60f6",
          "name": "metric_state"
        },
        {
          "digest": "sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "image": "registry.redhat.io/openshift4/ose-prometheus-operator@sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "name": "prometheus_operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <2.8.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.8.1",
      "version_original": "2.8.1"
    },
    {
      "_id": "630d1debc80f4473fcad8c6e",
      "alm_examples": [
        {
          "api_version": "astra.netapp.io/v1",
          "kind": "AstraControlCenter",
          "metadata": {
            "name": "astra"
          },
          "spec": {
            "accountName": "Example",
            "additionalValues": {},
            "astraAddress": "astra.example.com",
            "astraResourcesScaler": "Default",
            "astraVersion": "22.08.0-20",
            "autoSupport": {
              "enrolled": true
            },
            "crds": {
              "externalCertManager": false,
              "externalTraefik": false
            },
            "email": "admin@example.com",
            "firstName": "SRE",
            "imageRegistry": {
              "name": "example.registry/astra",
              "secret": "astra-registry-cred"
            },
            "ingressType": "Generic",
            "lastName": "Admin",
            "storageClass": "ontap-gold",
            "volumeReclaimPolicy": "Retain"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/netapp/acc-operator-bundle@sha256:ec0f8bba052288b2ecfe2aa357438112dc973ff4af5898ab871f89ad6941c2dd",
      "bundle_path_digest": "sha256:ec0f8bba052288b2ecfe2aa357438112dc973ff4af5898ab871f89ad6941c2dd",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-29T20:13:31.656000+00:00",
      "csv_description": "Astra Control is an application-aware data management solution that manages, protects and moves data-rich Kubernetes workloads in both public clouds and on-premises.\n\nAstra Control enables data protection, disaster recovery, and migration for your Kubernetes workloads, leveraging NetApp's industry-leading data management technology\nfor snapshots, backups, replication and cloning.\n\n### How to deploy Astra Control\n\nRefer to [Installation Procedure](https://docs.netapp.com/us-en/astra-control-center/get-started/acc_operatorhub_install.html) to deploy Astra Control Center using\nthe Operator.\n\n### Documentation\n\nRefer to [Astra Control Center Documentation](https://docs.netapp.com/us-en/astra-control-center/index.html) to complete the setup and start managing applications.\n\nNOTE: The version listed under *Latest version* on this page might not reflect the actual version of NetApp Astra Control Center you are installing. The version in the file name of the Astra Control Center bundle that you download from the NetApp Support Site is the version of Astra Control Center that will be installed.\n",
      "csv_display_name": "netapp-acc-operator",
      "csv_metadata_description": "Install, configure and monitor Astra Control Center",
      "csv_name": "acc-operator.v22.8.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-29T20:13:31.656000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "acc-operator",
      "provided_apis": [
        {
          "group": "astra.netapp.io",
          "kind": "AstraControlCenter",
          "plural": "astracontrolcenters",
          "version": "v1"
        }
      ],
      "provider": "NetApp",
      "related_images": [
        {
          "digest": "sha256:7a8b4b60345cff84089835a561b4b65c5eccb4585283314c90ce2108c063c87d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:7a8b4b60345cff84089835a561b4b65c5eccb4585283314c90ce2108c063c87d",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:05efc8b68000e1176dcc8cc6b57c5f7eb8172dc16626595356b7e4e5befd5093",
          "image": "registry.connect.redhat.com/netapp/acc-operator-22-8-0@sha256:05efc8b68000e1176dcc8cc6b57c5f7eb8172dc16626595356b7e4e5befd5093",
          "name": "acc-operator"
        },
        {
          "digest": "sha256:7a8b4b60345cff84089835a561b4b65c5eccb4585283314c90ce2108c063c87d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:7a8b4b60345cff84089835a561b4b65c5eccb4585283314c90ce2108c063c87d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:05efc8b68000e1176dcc8cc6b57c5f7eb8172dc16626595356b7e4e5befd5093",
          "image": "registry.connect.redhat.com/netapp/acc-operator-22-8-0@sha256:05efc8b68000e1176dcc8cc6b57c5f7eb8172dc16626595356b7e4e5befd5093",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "22.8.1",
      "version_original": "22.8.1"
    },
    {
      "_id": "630d2151467c0e9e0e23f0ba",
      "alm_examples": [
        {
          "api_version": "astra.netapp.io/v1",
          "kind": "AstraControlCenter",
          "metadata": {
            "name": "astra"
          },
          "spec": {
            "accountName": "Example",
            "additionalValues": {},
            "astraAddress": "astra.example.com",
            "astraResourcesScaler": "Default",
            "astraVersion": "22.08.0-20",
            "autoSupport": {
              "enrolled": true
            },
            "crds": {
              "externalCertManager": false,
              "externalTraefik": false
            },
            "email": "admin@example.com",
            "firstName": "SRE",
            "imageRegistry": {
              "name": "example.registry/astra",
              "secret": "astra-registry-cred"
            },
            "ingressType": "Generic",
            "lastName": "Admin",
            "storageClass": "ontap-gold",
            "volumeReclaimPolicy": "Retain"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/netapp/acc-operator-bundle@sha256:ec0f8bba052288b2ecfe2aa357438112dc973ff4af5898ab871f89ad6941c2dd",
      "bundle_path_digest": "sha256:ec0f8bba052288b2ecfe2aa357438112dc973ff4af5898ab871f89ad6941c2dd",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-29T20:28:01.718000+00:00",
      "csv_description": "Astra Control is an application-aware data management solution that manages, protects and moves data-rich Kubernetes workloads in both public clouds and on-premises.\n\nAstra Control enables data protection, disaster recovery, and migration for your Kubernetes workloads, leveraging NetApp's industry-leading data management technology\nfor snapshots, backups, replication and cloning.\n\n### How to deploy Astra Control\n\nRefer to [Installation Procedure](https://docs.netapp.com/us-en/astra-control-center/get-started/acc_operatorhub_install.html) to deploy Astra Control Center using\nthe Operator.\n\n### Documentation\n\nRefer to [Astra Control Center Documentation](https://docs.netapp.com/us-en/astra-control-center/index.html) to complete the setup and start managing applications.\n\nNOTE: The version listed under *Latest version* on this page might not reflect the actual version of NetApp Astra Control Center you are installing. The version in the file name of the Astra Control Center bundle that you download from the NetApp Support Site is the version of Astra Control Center that will be installed.\n",
      "csv_display_name": "netapp-acc-operator",
      "csv_metadata_description": "Install, configure and monitor Astra Control Center",
      "csv_name": "acc-operator.v22.8.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-29T20:28:01.718000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "acc-operator",
      "provided_apis": [
        {
          "group": "astra.netapp.io",
          "kind": "AstraControlCenter",
          "plural": "astracontrolcenters",
          "version": "v1"
        }
      ],
      "provider": "NetApp",
      "related_images": [
        {
          "digest": "sha256:7a8b4b60345cff84089835a561b4b65c5eccb4585283314c90ce2108c063c87d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:7a8b4b60345cff84089835a561b4b65c5eccb4585283314c90ce2108c063c87d",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:05efc8b68000e1176dcc8cc6b57c5f7eb8172dc16626595356b7e4e5befd5093",
          "image": "registry.connect.redhat.com/netapp/acc-operator-22-8-0@sha256:05efc8b68000e1176dcc8cc6b57c5f7eb8172dc16626595356b7e4e5befd5093",
          "name": "acc-operator"
        },
        {
          "digest": "sha256:7a8b4b60345cff84089835a561b4b65c5eccb4585283314c90ce2108c063c87d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:7a8b4b60345cff84089835a561b4b65c5eccb4585283314c90ce2108c063c87d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:05efc8b68000e1176dcc8cc6b57c5f7eb8172dc16626595356b7e4e5befd5093",
          "image": "registry.connect.redhat.com/netapp/acc-operator-22-8-0@sha256:05efc8b68000e1176dcc8cc6b57c5f7eb8172dc16626595356b7e4e5befd5093",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "22.8.1",
      "version_original": "22.8.1"
    },
    {
      "_id": "630d21f443252be8abb82cf3",
      "alm_examples": [
        {
          "api_version": "astra.netapp.io/v1",
          "kind": "AstraControlCenter",
          "metadata": {
            "name": "astra"
          },
          "spec": {
            "accountName": "Example",
            "additionalValues": {},
            "astraAddress": "astra.example.com",
            "astraResourcesScaler": "Default",
            "astraVersion": "22.08.0-20",
            "autoSupport": {
              "enrolled": true
            },
            "crds": {
              "externalCertManager": false,
              "externalTraefik": false
            },
            "email": "admin@example.com",
            "firstName": "SRE",
            "imageRegistry": {
              "name": "example.registry/astra",
              "secret": "astra-registry-cred"
            },
            "ingressType": "Generic",
            "lastName": "Admin",
            "storageClass": "ontap-gold",
            "volumeReclaimPolicy": "Retain"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/netapp/acc-operator-bundle@sha256:ec0f8bba052288b2ecfe2aa357438112dc973ff4af5898ab871f89ad6941c2dd",
      "bundle_path_digest": "sha256:ec0f8bba052288b2ecfe2aa357438112dc973ff4af5898ab871f89ad6941c2dd",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-29T20:30:44.859000+00:00",
      "csv_description": "Astra Control is an application-aware data management solution that manages, protects and moves data-rich Kubernetes workloads in both public clouds and on-premises.\n\nAstra Control enables data protection, disaster recovery, and migration for your Kubernetes workloads, leveraging NetApp's industry-leading data management technology\nfor snapshots, backups, replication and cloning.\n\n### How to deploy Astra Control\n\nRefer to [Installation Procedure](https://docs.netapp.com/us-en/astra-control-center/get-started/acc_operatorhub_install.html) to deploy Astra Control Center using\nthe Operator.\n\n### Documentation\n\nRefer to [Astra Control Center Documentation](https://docs.netapp.com/us-en/astra-control-center/index.html) to complete the setup and start managing applications.\n\nNOTE: The version listed under *Latest version* on this page might not reflect the actual version of NetApp Astra Control Center you are installing. The version in the file name of the Astra Control Center bundle that you download from the NetApp Support Site is the version of Astra Control Center that will be installed.\n",
      "csv_display_name": "netapp-acc-operator",
      "csv_metadata_description": "Install, configure and monitor Astra Control Center",
      "csv_name": "acc-operator.v22.8.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-29T20:30:44.859000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "acc-operator",
      "provided_apis": [
        {
          "group": "astra.netapp.io",
          "kind": "AstraControlCenter",
          "plural": "astracontrolcenters",
          "version": "v1"
        }
      ],
      "provider": "NetApp",
      "related_images": [
        {
          "digest": "sha256:7a8b4b60345cff84089835a561b4b65c5eccb4585283314c90ce2108c063c87d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:7a8b4b60345cff84089835a561b4b65c5eccb4585283314c90ce2108c063c87d",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:05efc8b68000e1176dcc8cc6b57c5f7eb8172dc16626595356b7e4e5befd5093",
          "image": "registry.connect.redhat.com/netapp/acc-operator-22-8-0@sha256:05efc8b68000e1176dcc8cc6b57c5f7eb8172dc16626595356b7e4e5befd5093",
          "name": "acc-operator"
        },
        {
          "digest": "sha256:7a8b4b60345cff84089835a561b4b65c5eccb4585283314c90ce2108c063c87d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:7a8b4b60345cff84089835a561b4b65c5eccb4585283314c90ce2108c063c87d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:05efc8b68000e1176dcc8cc6b57c5f7eb8172dc16626595356b7e4e5befd5093",
          "image": "registry.connect.redhat.com/netapp/acc-operator-22-8-0@sha256:05efc8b68000e1176dcc8cc6b57c5f7eb8172dc16626595356b7e4e5befd5093",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "22.8.1",
      "version_original": "22.8.1"
    },
    {
      "_id": "630d72594acb68ac7d135eed",
      "alm_examples": [
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceConfig",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "marketplaceconfig",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "",
            "features": {
              "deployment": true,
              "meterDefinitionCatalogServer": false,
              "registration": true
            },
            "installIBMCatalogSource": true,
            "isDisconnected": false,
            "rhmAccountID": ""
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterBase",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterbase",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "enabled": true,
            "prometheus": {
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1",
                  "memory": "1G"
                }
              },
              "storage": {
                "size": "20Gi"
              }
            }
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterReport",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterreport",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "endTime": "2020-08-05T00:00:00Z",
            "prometheusService": {
              "name": "rhm-prometheus-meterbase",
              "namespace": "openshift-redhat-marketplace",
              "targetPort": "rbac"
            },
            "startTime": "2020-08-04T00:00:00Z"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RazeeDeployment",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "razeedeployment-example",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "example-cluster-uuid",
            "enabled": true
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RemoteResourceS3",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-remoteresources3",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "auth": {
              "iam": {
                "apiKeyRef": {
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "accesskey",
                      "name": "rhm-cos-reader-key"
                    }
                  }
                },
                "grantType": "urn:ibm:params:oauth:grant-type:apikey",
                "responseType": "cloud_iam",
                "url": "https://iam.cloud.ibm.com/identity/token"
              }
            },
            "requests": [
              {
                "options": {
                  "url": "https://s3.us-east.cloud-object-storage.appdomain.cloud/your-accountId/your-cluster-uuid/name-of-child.yaml"
                }
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterdefinition-4",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterdefinition-sample",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:e5f9209dd630354fed2f4e21a0c503262dc059af8e52a3d1aba2bac0fa09fdf5",
      "bundle_path_digest": "sha256:e5f9209dd630354fed2f4e21a0c503262dc059af8e52a3d1aba2bac0fa09fdf5",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-30T02:13:45.582000+00:00",
      "csv_description": "The Red Hat Marketplace Operator provides cluster management, metering and\noperator installation for Red Hat Marketplace customers.\n### **Important Note**\nA set of instructions for onboarding is provided here. For more detailed onboarding instructions or information about what is installed please visit [marketplace.redhat.com](https://marketplace.redhat.com).\nTo access images from Red Hat Marketplace and the Marketplace container catalog you will need to make the pull secret attained in installation available to the workloads running on the cluster.\n### Prerequisites\n1. It is recommended to [enable monitoring for user-defined projects](https://docs.openshift.com/container-platform/4.10/monitoring/enabling-monitoring-for-user-defined-projects.html) as the Prometheus provider.\n2. Edit the cluster-monitoring-config ConfigMap object:\n  \n   ```sh\n   $ oc -n openshift-monitoring edit configmap cluster-monitoring-config\n   ```\n\n3. Add enableUserWorkload: true under data/config.yaml:\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: cluster-monitoring-config\n      namespace: openshift-monitoring\n    data:\n      config.yaml: |\n        enableUserWorkload: true\n    ```\n\n4. Configure the user-workload-monitoring-config ConfigMap object:\n  \n    ```sh\n    $ oc -n openshift-user-workload-monitoring edit configmap user-workload-monitoring-config\n    ```\n\n5. Configure a minimum retention time of 168h and minimum storage capacity of 40Gi\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: user-workload-monitoring-config\n      namespace: openshift-user-workload-monitoring\n    data:\n      config.yaml: |\n        prometheus:\n          retention: 168h\n          volumeClaimTemplate:\n            spec:\n              resources:\n                requests:\n                  storage: 40Gi\n    ```\n\n### Installation\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n2. Install the Red Hat Marketplace Operator in the openshift-redhat-marketplace namespace.\n3. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n4. Install the Red Hat Marketplace pull secret as a global pull secret on the cluster.\n   **Warning:** This step will make your cluster perform a rolling restart.\n   These steps require `oc`, `jq`, and `base64` to be available on your machine.\n\n   ```sh\n   # Create the docker pull secret file using your PULL_SECRET from Red Hat Marketplace.\n   # Store it in a file called entitledregistryconfigjson.\n   oc create secret docker-registry entitled-registry --docker-server=registry.marketplace.redhat.com --docker-username \"cp\" --docker-password \"${PULL_SECRET}\" --dry-run=true --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > entitledregistryconfigjson\n   # Get the current global secrets on the cluster and store it as a file named dockerconfigjson\n   oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > dockerconfigjson\n   # Merge the two dockerconfigs together into a file called dockerconfigjson-merged.\n   jq -s '.[0] * .[1]' dockerconfigjson entitledregistryconfigjson > dockerconfigjson-merged\n   # Set the cluster's dockerconfig file to the new merged version.\n   oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfigjson-merged\n   # Cluster will now restart.\n   ```\n\n### Why is a global pull secret required?\nIn order to successfully install the Red Hat Marketplace products, you will need to make the pull secret available across the cluster. This can be achieved by applying the Red Hat Marketplace Pull Secret as a [global pull secret](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).\nFor alternative approachs, please see the official OpenShift [documentation](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html).\n### Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n### Getting help\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/redhat-marketplace-operator) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n### Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/README.md)\n### License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/LICENSE)\n",
      "csv_display_name": "Red Hat Marketplace",
      "csv_metadata_description": "The Red Hat Marketplace Operator provides cluster management, metering and operator installation for Red Hat Marketplace customers.",
      "csv_name": "redhat-marketplace-operator.v2.8.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-30T02:13:45.582000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1beta1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterReport",
          "plural": "meterreports",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RazeeDeployment",
          "plural": "razeedeployments",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RemoteResourceS3",
          "plural": "remoteresources3s",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceConfig",
          "plural": "marketplaceconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterBase",
          "plural": "meterbases",
          "version": "v1alpha1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "image": "registry.redhat.io/openshift4/ose-prometheus@sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "name": "prometheus"
        },
        {
          "digest": "sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "image": "registry.redhat.io/openshift4/ose-configmap-reloader@sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "name": "configmap_reloader"
        },
        {
          "digest": "sha256:7bbeb563c25a511e15aecb5ff8c4905120906092277e299b281170371f0e1281",
          "image": "quay.io/rh-marketplace/redhat-marketplace-reporter@sha256:7bbeb563c25a511e15aecb5ff8c4905120906092277e299b281170371f0e1281",
          "name": "reporter"
        },
        {
          "digest": "sha256:810c57d62498d8612d154dea0c94b6dba46f84308ec48f03d324359a38cccf33",
          "image": "quay.io/rh-marketplace/redhat-marketplace-authcheck@sha256:810c57d62498d8612d154dea0c94b6dba46f84308ec48f03d324359a38cccf33",
          "name": "authcheck"
        },
        {
          "digest": "sha256:db6024317d54bc811ffa3c6b3a5423a36f02e5a31586c88ef0f996424c76cb2b",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:db6024317d54bc811ffa3c6b3a5423a36f02e5a31586c88ef0f996424c76cb2b",
          "name": "manager"
        },
        {
          "digest": "sha256:c74b64a0d0d63e585a9115535a310b9993d55f62924039102bb079d2d5c10697",
          "image": "quay.io/rh-marketplace/redhat-marketplace-data-service@sha256:c74b64a0d0d63e585a9115535a310b9993d55f62924039102bb079d2d5c10697",
          "name": "dqlite"
        },
        {
          "digest": "sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "image": "registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "name": "prometheus_configmap_reloader"
        },
        {
          "digest": "sha256:db6024317d54bc811ffa3c6b3a5423a36f02e5a31586c88ef0f996424c76cb2b",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:db6024317d54bc811ffa3c6b3a5423a36f02e5a31586c88ef0f996424c76cb2b",
          "name": "redhat-marketplace-operator-db6024317d54bc811ffa3c6b3a5423a36f02e5a31586c88ef0f996424c76cb2b-annotation"
        },
        {
          "digest": "sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "image": "us.icr.io/armada-master/watch-keeper@sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "name": "rhm_watch_keeper_deployment"
        },
        {
          "digest": "sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "image": "us.icr.io/armada-master/remoteresources3@sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "name": "rhm_rrs3_deployment"
        },
        {
          "digest": "sha256:5638452bb8b4728c6afa33b081a32244603fba25304e24976e990ba78aee60f6",
          "image": "quay.io/rh-marketplace/redhat-marketplace-metric-state@sha256:5638452bb8b4728c6afa33b081a32244603fba25304e24976e990ba78aee60f6",
          "name": "metric_state"
        },
        {
          "digest": "sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "image": "registry.redhat.io/openshift4/ose-prometheus-operator@sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "name": "prometheus_operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <2.8.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.8.1",
      "version_original": "2.8.1"
    },
    {
      "_id": "630d725a4acb68ac7d135eef",
      "alm_examples": [
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceConfig",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "marketplaceconfig",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "",
            "features": {
              "deployment": true,
              "meterDefinitionCatalogServer": false,
              "registration": true
            },
            "installIBMCatalogSource": true,
            "isDisconnected": false,
            "rhmAccountID": ""
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterBase",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterbase",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "enabled": true,
            "prometheus": {
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1",
                  "memory": "1G"
                }
              },
              "storage": {
                "size": "20Gi"
              }
            }
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterReport",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterreport",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "endTime": "2020-08-05T00:00:00Z",
            "prometheusService": {
              "name": "rhm-prometheus-meterbase",
              "namespace": "openshift-redhat-marketplace",
              "targetPort": "rbac"
            },
            "startTime": "2020-08-04T00:00:00Z"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RazeeDeployment",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "razeedeployment-example",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "example-cluster-uuid",
            "enabled": true
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RemoteResourceS3",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-remoteresources3",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "auth": {
              "iam": {
                "apiKeyRef": {
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "accesskey",
                      "name": "rhm-cos-reader-key"
                    }
                  }
                },
                "grantType": "urn:ibm:params:oauth:grant-type:apikey",
                "responseType": "cloud_iam",
                "url": "https://iam.cloud.ibm.com/identity/token"
              }
            },
            "requests": [
              {
                "options": {
                  "url": "https://s3.us-east.cloud-object-storage.appdomain.cloud/your-accountId/your-cluster-uuid/name-of-child.yaml"
                }
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterdefinition-4",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterdefinition-sample",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:e5f9209dd630354fed2f4e21a0c503262dc059af8e52a3d1aba2bac0fa09fdf5",
      "bundle_path_digest": "sha256:e5f9209dd630354fed2f4e21a0c503262dc059af8e52a3d1aba2bac0fa09fdf5",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-30T02:13:46.650000+00:00",
      "csv_description": "The Red Hat Marketplace Operator provides cluster management, metering and\noperator installation for Red Hat Marketplace customers.\n### **Important Note**\nA set of instructions for onboarding is provided here. For more detailed onboarding instructions or information about what is installed please visit [marketplace.redhat.com](https://marketplace.redhat.com).\nTo access images from Red Hat Marketplace and the Marketplace container catalog you will need to make the pull secret attained in installation available to the workloads running on the cluster.\n### Prerequisites\n1. It is recommended to [enable monitoring for user-defined projects](https://docs.openshift.com/container-platform/4.10/monitoring/enabling-monitoring-for-user-defined-projects.html) as the Prometheus provider.\n2. Edit the cluster-monitoring-config ConfigMap object:\n  \n   ```sh\n   $ oc -n openshift-monitoring edit configmap cluster-monitoring-config\n   ```\n\n3. Add enableUserWorkload: true under data/config.yaml:\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: cluster-monitoring-config\n      namespace: openshift-monitoring\n    data:\n      config.yaml: |\n        enableUserWorkload: true\n    ```\n\n4. Configure the user-workload-monitoring-config ConfigMap object:\n  \n    ```sh\n    $ oc -n openshift-user-workload-monitoring edit configmap user-workload-monitoring-config\n    ```\n\n5. Configure a minimum retention time of 168h and minimum storage capacity of 40Gi\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: user-workload-monitoring-config\n      namespace: openshift-user-workload-monitoring\n    data:\n      config.yaml: |\n        prometheus:\n          retention: 168h\n          volumeClaimTemplate:\n            spec:\n              resources:\n                requests:\n                  storage: 40Gi\n    ```\n\n### Installation\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n2. Install the Red Hat Marketplace Operator in the openshift-redhat-marketplace namespace.\n3. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n4. Install the Red Hat Marketplace pull secret as a global pull secret on the cluster.\n   **Warning:** This step will make your cluster perform a rolling restart.\n   These steps require `oc`, `jq`, and `base64` to be available on your machine.\n\n   ```sh\n   # Create the docker pull secret file using your PULL_SECRET from Red Hat Marketplace.\n   # Store it in a file called entitledregistryconfigjson.\n   oc create secret docker-registry entitled-registry --docker-server=registry.marketplace.redhat.com --docker-username \"cp\" --docker-password \"${PULL_SECRET}\" --dry-run=true --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > entitledregistryconfigjson\n   # Get the current global secrets on the cluster and store it as a file named dockerconfigjson\n   oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > dockerconfigjson\n   # Merge the two dockerconfigs together into a file called dockerconfigjson-merged.\n   jq -s '.[0] * .[1]' dockerconfigjson entitledregistryconfigjson > dockerconfigjson-merged\n   # Set the cluster's dockerconfig file to the new merged version.\n   oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfigjson-merged\n   # Cluster will now restart.\n   ```\n\n### Why is a global pull secret required?\nIn order to successfully install the Red Hat Marketplace products, you will need to make the pull secret available across the cluster. This can be achieved by applying the Red Hat Marketplace Pull Secret as a [global pull secret](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).\nFor alternative approachs, please see the official OpenShift [documentation](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html).\n### Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n### Getting help\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/redhat-marketplace-operator) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n### Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/README.md)\n### License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/LICENSE)\n",
      "csv_display_name": "Red Hat Marketplace",
      "csv_metadata_description": "The Red Hat Marketplace Operator provides cluster management, metering and operator installation for Red Hat Marketplace customers.",
      "csv_name": "redhat-marketplace-operator.v2.8.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T02:13:46.650000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1beta1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterReport",
          "plural": "meterreports",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RazeeDeployment",
          "plural": "razeedeployments",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RemoteResourceS3",
          "plural": "remoteresources3s",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceConfig",
          "plural": "marketplaceconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterBase",
          "plural": "meterbases",
          "version": "v1alpha1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "image": "registry.redhat.io/openshift4/ose-prometheus@sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "name": "prometheus"
        },
        {
          "digest": "sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "image": "registry.redhat.io/openshift4/ose-configmap-reloader@sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "name": "configmap_reloader"
        },
        {
          "digest": "sha256:7bbeb563c25a511e15aecb5ff8c4905120906092277e299b281170371f0e1281",
          "image": "quay.io/rh-marketplace/redhat-marketplace-reporter@sha256:7bbeb563c25a511e15aecb5ff8c4905120906092277e299b281170371f0e1281",
          "name": "reporter"
        },
        {
          "digest": "sha256:810c57d62498d8612d154dea0c94b6dba46f84308ec48f03d324359a38cccf33",
          "image": "quay.io/rh-marketplace/redhat-marketplace-authcheck@sha256:810c57d62498d8612d154dea0c94b6dba46f84308ec48f03d324359a38cccf33",
          "name": "authcheck"
        },
        {
          "digest": "sha256:db6024317d54bc811ffa3c6b3a5423a36f02e5a31586c88ef0f996424c76cb2b",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:db6024317d54bc811ffa3c6b3a5423a36f02e5a31586c88ef0f996424c76cb2b",
          "name": "manager"
        },
        {
          "digest": "sha256:c74b64a0d0d63e585a9115535a310b9993d55f62924039102bb079d2d5c10697",
          "image": "quay.io/rh-marketplace/redhat-marketplace-data-service@sha256:c74b64a0d0d63e585a9115535a310b9993d55f62924039102bb079d2d5c10697",
          "name": "dqlite"
        },
        {
          "digest": "sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "image": "registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "name": "prometheus_configmap_reloader"
        },
        {
          "digest": "sha256:db6024317d54bc811ffa3c6b3a5423a36f02e5a31586c88ef0f996424c76cb2b",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:db6024317d54bc811ffa3c6b3a5423a36f02e5a31586c88ef0f996424c76cb2b",
          "name": "redhat-marketplace-operator-db6024317d54bc811ffa3c6b3a5423a36f02e5a31586c88ef0f996424c76cb2b-annotation"
        },
        {
          "digest": "sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "image": "us.icr.io/armada-master/watch-keeper@sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "name": "rhm_watch_keeper_deployment"
        },
        {
          "digest": "sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "image": "us.icr.io/armada-master/remoteresources3@sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "name": "rhm_rrs3_deployment"
        },
        {
          "digest": "sha256:5638452bb8b4728c6afa33b081a32244603fba25304e24976e990ba78aee60f6",
          "image": "quay.io/rh-marketplace/redhat-marketplace-metric-state@sha256:5638452bb8b4728c6afa33b081a32244603fba25304e24976e990ba78aee60f6",
          "name": "metric_state"
        },
        {
          "digest": "sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "image": "registry.redhat.io/openshift4/ose-prometheus-operator@sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "name": "prometheus_operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <2.8.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.8.1",
      "version_original": "2.8.1"
    },
    {
      "_id": "630de99e3568859acecc8c33",
      "alm_examples": [
        {
          "api_version": "database.oracle.com/v1alpha1",
          "kind": "AutonomousContainerDatabase",
          "metadata": {
            "name": "autonomouscontainerdatabase-sample"
          },
          "spec": {
            "autonomousExadataVMClusterOCID": "ocid1.autonomousexainfrastructure...",
            "compartmentOCID": "ocid1.compartment... OR ocid1.tenancy...",
            "displayName": "newACD",
            "ociConfig": {
              "configMapName": "oci-cred",
              "secretName": "oci-privatekey"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": [
          "OpenShift Container Platform"
        ]
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/pue/oracle-database-operator@sha256:db815af5233d98f056872d513161361de9ed23fc9d67d1790824e93966fd3741",
      "bundle_path_digest": "sha256:db815af5233d98f056872d513161361de9ed23fc9d67d1790824e93966fd3741",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-08-30T10:42:38.308000+00:00",
      "csv_description": "As part of Oracle's resolution to make Oracle Database Kubernetes-native (that is, observable and operable by Kubernetes), Oracle released Oracle Database Operator for Kubernetes (OraOperator or the operator). OraOperator extends the Kubernetes API with custom resources and controllers for automating Oracle Database lifecycle management.\nIn this v0.2.0 release, OraOperator supports the following database configurations and infrastructure:\n\n  - Oracle Autonomous Database on shared Oracle Cloud Infrastructure (OCI) (ADB-S)\n  - Oracle Autonomous Database on dedicated Cloud infrastructure (ADB-D)\n  - Containerized Single Instance databases (SIDB) deployed in the Oracle Kubernetes Engine (OKE) and any k8s where OraOperator is deployed\n  - Containerized Sharded databases (SHARDED) deployed in OKE and any k8s where OraOperator is deployed\n  - Oracle On-Premises Databases (CDB/PDBs, Exadata)\n  - Oracle Database Cloud Service (DBCS) (VMDB)\n  - Oracle Autonomous Container Database (ACD) (infrastructure) the infrastructure for provisionning Autonomous Databases.\n\nOracle will continue to extent OraOperator to support additional Oracle Database configurations. Prerequisites: - Install cert-manager operator first.",
      "csv_display_name": "Oracle Database Operator for Kubernetes",
      "csv_metadata_description": "",
      "csv_name": "oracle-database-operator.v0.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T10:42:38.308000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "oracle-database-operator",
      "provided_apis": [
        {
          "group": "database.oracle.com",
          "kind": "AutonomousContainerDatabase",
          "plural": "autonomouscontainerdatabases",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "OracleRestDataService",
          "plural": "oraclerestdataservices",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "AutonomousDatabaseRestore",
          "plural": "autonomousdatabaserestores",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "ShardingDatabase",
          "plural": "shardingdatabases",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "SingleInstanceDatabase",
          "plural": "singleinstancedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "AutonomousDatabase",
          "plural": "autonomousdatabases",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "CDB",
          "plural": "cdbs",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "DbcsSystem",
          "plural": "dbcssystems",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "PDB",
          "plural": "pdbs",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "AutonomousDatabaseBackup",
          "plural": "autonomousdatabasebackups",
          "version": "v1alpha1"
        }
      ],
      "provider": "PUE Data, S.L.",
      "related_images": [
        {
          "digest": "sha256:05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8",
          "image": "docker.io/pueteam/oracle-database-operator@sha256:05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8",
          "name": "oracle-database-operator-controller-manager"
        },
        {
          "digest": "sha256:05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8",
          "image": "docker.io/pueteam/oracle-database-operator@sha256:05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8",
          "name": "oracle-database-operator-05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8-annotation"
        },
        {
          "digest": "sha256:05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8",
          "image": "docker.io/pueteam/oracle-database-operator@sha256:05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8",
          "name": "oracle-database-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.2.0",
      "version_original": "0.2.0"
    },
    {
      "_id": "630dea74710e49d9fe5e8404",
      "alm_examples": [
        {
          "api_version": "database.oracle.com/v1alpha1",
          "kind": "AutonomousContainerDatabase",
          "metadata": {
            "name": "autonomouscontainerdatabase-sample"
          },
          "spec": {
            "autonomousExadataVMClusterOCID": "ocid1.autonomousexainfrastructure...",
            "compartmentOCID": "ocid1.compartment... OR ocid1.tenancy...",
            "displayName": "newACD",
            "ociConfig": {
              "configMapName": "oci-cred",
              "secretName": "oci-privatekey"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": [
          "OpenShift Container Platform"
        ]
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/pue/oracle-database-operator@sha256:db815af5233d98f056872d513161361de9ed23fc9d67d1790824e93966fd3741",
      "bundle_path_digest": "sha256:db815af5233d98f056872d513161361de9ed23fc9d67d1790824e93966fd3741",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-08-30T10:46:12.548000+00:00",
      "csv_description": "As part of Oracle's resolution to make Oracle Database Kubernetes-native (that is, observable and operable by Kubernetes), Oracle released Oracle Database Operator for Kubernetes (OraOperator or the operator). OraOperator extends the Kubernetes API with custom resources and controllers for automating Oracle Database lifecycle management.\nIn this v0.2.0 release, OraOperator supports the following database configurations and infrastructure:\n\n  - Oracle Autonomous Database on shared Oracle Cloud Infrastructure (OCI) (ADB-S)\n  - Oracle Autonomous Database on dedicated Cloud infrastructure (ADB-D)\n  - Containerized Single Instance databases (SIDB) deployed in the Oracle Kubernetes Engine (OKE) and any k8s where OraOperator is deployed\n  - Containerized Sharded databases (SHARDED) deployed in OKE and any k8s where OraOperator is deployed\n  - Oracle On-Premises Databases (CDB/PDBs, Exadata)\n  - Oracle Database Cloud Service (DBCS) (VMDB)\n  - Oracle Autonomous Container Database (ACD) (infrastructure) the infrastructure for provisionning Autonomous Databases.\n\nOracle will continue to extent OraOperator to support additional Oracle Database configurations. Prerequisites: - Install cert-manager operator first.",
      "csv_display_name": "Oracle Database Operator for Kubernetes",
      "csv_metadata_description": "",
      "csv_name": "oracle-database-operator.v0.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T10:46:12.548000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "oracle-database-operator",
      "provided_apis": [
        {
          "group": "database.oracle.com",
          "kind": "SingleInstanceDatabase",
          "plural": "singleinstancedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "AutonomousContainerDatabase",
          "plural": "autonomouscontainerdatabases",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "OracleRestDataService",
          "plural": "oraclerestdataservices",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "ShardingDatabase",
          "plural": "shardingdatabases",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "AutonomousDatabaseRestore",
          "plural": "autonomousdatabaserestores",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "PDB",
          "plural": "pdbs",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "AutonomousDatabase",
          "plural": "autonomousdatabases",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "AutonomousDatabaseBackup",
          "plural": "autonomousdatabasebackups",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "CDB",
          "plural": "cdbs",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "DbcsSystem",
          "plural": "dbcssystems",
          "version": "v1alpha1"
        }
      ],
      "provider": "PUE Data, S.L.",
      "related_images": [
        {
          "digest": "sha256:05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8",
          "image": "docker.io/pueteam/oracle-database-operator@sha256:05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8",
          "name": "oracle-database-operator-controller-manager"
        },
        {
          "digest": "sha256:05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8",
          "image": "docker.io/pueteam/oracle-database-operator@sha256:05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8",
          "name": "oracle-database-operator-05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8-annotation"
        },
        {
          "digest": "sha256:05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8",
          "image": "docker.io/pueteam/oracle-database-operator@sha256:05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8",
          "name": "oracle-database-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.2.0",
      "version_original": "0.2.0"
    },
    {
      "_id": "630ded48710e49d9fe5e8480",
      "alm_examples": [
        {
          "api_version": "database.oracle.com/v1alpha1",
          "kind": "AutonomousContainerDatabase",
          "metadata": {
            "name": "autonomouscontainerdatabase-sample"
          },
          "spec": {
            "autonomousExadataVMClusterOCID": "ocid1.autonomousexainfrastructure...",
            "compartmentOCID": "ocid1.compartment... OR ocid1.tenancy...",
            "displayName": "newACD",
            "ociConfig": {
              "configMapName": "oci-cred",
              "secretName": "oci-privatekey"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": [
          "OpenShift Container Platform"
        ]
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/pue/oracle-database-operator@sha256:db815af5233d98f056872d513161361de9ed23fc9d67d1790824e93966fd3741",
      "bundle_path_digest": "sha256:db815af5233d98f056872d513161361de9ed23fc9d67d1790824e93966fd3741",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-08-30T10:58:16.971000+00:00",
      "csv_description": "As part of Oracle's resolution to make Oracle Database Kubernetes-native (that is, observable and operable by Kubernetes), Oracle released Oracle Database Operator for Kubernetes (OraOperator or the operator). OraOperator extends the Kubernetes API with custom resources and controllers for automating Oracle Database lifecycle management.\nIn this v0.2.0 release, OraOperator supports the following database configurations and infrastructure:\n\n  - Oracle Autonomous Database on shared Oracle Cloud Infrastructure (OCI) (ADB-S)\n  - Oracle Autonomous Database on dedicated Cloud infrastructure (ADB-D)\n  - Containerized Single Instance databases (SIDB) deployed in the Oracle Kubernetes Engine (OKE) and any k8s where OraOperator is deployed\n  - Containerized Sharded databases (SHARDED) deployed in OKE and any k8s where OraOperator is deployed\n  - Oracle On-Premises Databases (CDB/PDBs, Exadata)\n  - Oracle Database Cloud Service (DBCS) (VMDB)\n  - Oracle Autonomous Container Database (ACD) (infrastructure) the infrastructure for provisionning Autonomous Databases.\n\nOracle will continue to extent OraOperator to support additional Oracle Database configurations. Prerequisites: - Install cert-manager operator first.",
      "csv_display_name": "Oracle Database Operator for Kubernetes",
      "csv_metadata_description": "",
      "csv_name": "oracle-database-operator.v0.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T10:58:16.971000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "oracle-database-operator",
      "provided_apis": [
        {
          "group": "database.oracle.com",
          "kind": "AutonomousContainerDatabase",
          "plural": "autonomouscontainerdatabases",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "AutonomousDatabaseBackup",
          "plural": "autonomousdatabasebackups",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "DbcsSystem",
          "plural": "dbcssystems",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "OracleRestDataService",
          "plural": "oraclerestdataservices",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "PDB",
          "plural": "pdbs",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "SingleInstanceDatabase",
          "plural": "singleinstancedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "AutonomousDatabaseRestore",
          "plural": "autonomousdatabaserestores",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "AutonomousDatabase",
          "plural": "autonomousdatabases",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "CDB",
          "plural": "cdbs",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "ShardingDatabase",
          "plural": "shardingdatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": "PUE Data, S.L.",
      "related_images": [
        {
          "digest": "sha256:05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8",
          "image": "docker.io/pueteam/oracle-database-operator@sha256:05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8",
          "name": "oracle-database-operator-controller-manager"
        },
        {
          "digest": "sha256:05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8",
          "image": "docker.io/pueteam/oracle-database-operator@sha256:05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8",
          "name": "oracle-database-operator-05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8-annotation"
        },
        {
          "digest": "sha256:05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8",
          "image": "docker.io/pueteam/oracle-database-operator@sha256:05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8",
          "name": "oracle-database-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.2.0",
      "version_original": "0.2.0"
    },
    {
      "_id": "630ded72710e49d9fe5e848b",
      "alm_examples": [
        {
          "api_version": "database.oracle.com/v1alpha1",
          "kind": "AutonomousContainerDatabase",
          "metadata": {
            "name": "autonomouscontainerdatabase-sample"
          },
          "spec": {
            "autonomousExadataVMClusterOCID": "ocid1.autonomousexainfrastructure...",
            "compartmentOCID": "ocid1.compartment... OR ocid1.tenancy...",
            "displayName": "newACD",
            "ociConfig": {
              "configMapName": "oci-cred",
              "secretName": "oci-privatekey"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": [
          "OpenShift Container Platform"
        ]
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/pue/oracle-database-operator@sha256:db815af5233d98f056872d513161361de9ed23fc9d67d1790824e93966fd3741",
      "bundle_path_digest": "sha256:db815af5233d98f056872d513161361de9ed23fc9d67d1790824e93966fd3741",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-08-30T10:58:58.167000+00:00",
      "csv_description": "As part of Oracle's resolution to make Oracle Database Kubernetes-native (that is, observable and operable by Kubernetes), Oracle released Oracle Database Operator for Kubernetes (OraOperator or the operator). OraOperator extends the Kubernetes API with custom resources and controllers for automating Oracle Database lifecycle management.\nIn this v0.2.0 release, OraOperator supports the following database configurations and infrastructure:\n\n  - Oracle Autonomous Database on shared Oracle Cloud Infrastructure (OCI) (ADB-S)\n  - Oracle Autonomous Database on dedicated Cloud infrastructure (ADB-D)\n  - Containerized Single Instance databases (SIDB) deployed in the Oracle Kubernetes Engine (OKE) and any k8s where OraOperator is deployed\n  - Containerized Sharded databases (SHARDED) deployed in OKE and any k8s where OraOperator is deployed\n  - Oracle On-Premises Databases (CDB/PDBs, Exadata)\n  - Oracle Database Cloud Service (DBCS) (VMDB)\n  - Oracle Autonomous Container Database (ACD) (infrastructure) the infrastructure for provisionning Autonomous Databases.\n\nOracle will continue to extent OraOperator to support additional Oracle Database configurations. Prerequisites: - Install cert-manager operator first.",
      "csv_display_name": "Oracle Database Operator for Kubernetes",
      "csv_metadata_description": "",
      "csv_name": "oracle-database-operator.v0.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T10:58:58.167000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "oracle-database-operator",
      "provided_apis": [
        {
          "group": "database.oracle.com",
          "kind": "AutonomousDatabase",
          "plural": "autonomousdatabases",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "SingleInstanceDatabase",
          "plural": "singleinstancedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "AutonomousDatabaseRestore",
          "plural": "autonomousdatabaserestores",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "AutonomousContainerDatabase",
          "plural": "autonomouscontainerdatabases",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "DbcsSystem",
          "plural": "dbcssystems",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "AutonomousDatabaseBackup",
          "plural": "autonomousdatabasebackups",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "OracleRestDataService",
          "plural": "oraclerestdataservices",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "PDB",
          "plural": "pdbs",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "ShardingDatabase",
          "plural": "shardingdatabases",
          "version": "v1alpha1"
        },
        {
          "group": "database.oracle.com",
          "kind": "CDB",
          "plural": "cdbs",
          "version": "v1alpha1"
        }
      ],
      "provider": "PUE Data, S.L.",
      "related_images": [
        {
          "digest": "sha256:05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8",
          "image": "docker.io/pueteam/oracle-database-operator@sha256:05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8",
          "name": "oracle-database-operator-controller-manager"
        },
        {
          "digest": "sha256:05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8",
          "image": "docker.io/pueteam/oracle-database-operator@sha256:05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8",
          "name": "oracle-database-operator-05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8-annotation"
        },
        {
          "digest": "sha256:05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8",
          "image": "docker.io/pueteam/oracle-database-operator@sha256:05487d1ca0ac48e98c384fd1f4c7d07e4fb2d3453997276692888e01c33ea7e8",
          "name": "oracle-database-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.2.0",
      "version_original": "0.2.0"
    },
    {
      "_id": "630e17321f6fa557cfcc840f",
      "alm_examples": [
        {
          "api_version": "elasticsearch.k8s.elastic.co/v1",
          "kind": "Elasticsearch",
          "metadata": {
            "name": "elasticsearch-sample"
          },
          "spec": {
            "nodeSets": [
              {
                "config": {
                  "node.attr.attr_name": "attr_value",
                  "node.roles": [
                    "master",
                    "data"
                  ],
                  "node.store.allow_mmap": false
                },
                "count": 3,
                "name": "default",
                "podTemplate": {
                  "metadata": {
                    "labels": {
                      "foo": "bar"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "name": "elasticsearch",
                        "resources": {
                          "limits": {
                            "cpu": 2,
                            "memory": "4Gi"
                          },
                          "requests": {
                            "cpu": 1,
                            "memory": "4Gi"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "version": "8.4.0"
          }
        },
        {
          "api_version": "kibana.k8s.elastic.co/v1",
          "kind": "Kibana",
          "metadata": {
            "name": "kibana-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "podTemplate": {
              "metadata": {
                "labels": {
                  "foo": "bar"
                }
              },
              "spec": {
                "containers": [
                  {
                    "name": "kibana",
                    "resources": {
                      "limits": {
                        "cpu": 2,
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": 0.5,
                        "memory": "1Gi"
                      }
                    }
                  }
                ]
              }
            },
            "version": "8.4.0"
          }
        },
        {
          "api_version": "apm.k8s.elastic.co/v1",
          "kind": "ApmServer",
          "metadata": {
            "name": "apmserver-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.4.0"
          }
        },
        {
          "api_version": "enterprisesearch.k8s.elastic.co/v1",
          "kind": "EnterpriseSearch",
          "metadata": {
            "name": "ent-sample"
          },
          "spec": {
            "config": {
              "ent_search.external_url": "https://localhost:3002"
            },
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.4.0"
          }
        },
        {
          "api_version": "beat.k8s.elastic.co/v1beta1",
          "kind": "Beat",
          "metadata": {
            "name": "heartbeat-sample"
          },
          "spec": {
            "config": {
              "heartbeat.monitors": [
                {
                  "hosts": [
                    "elasticsearch-sample-es-http.default.svc:9200"
                  ],
                  "schedule": "@every 5s",
                  "type": "tcp"
                }
              ]
            },
            "deployment": {
              "podTemplate": {
                "spec": {
                  "securityContext": {
                    "runAsUser": 0
                  }
                }
              },
              "replicas": 1
            },
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "type": "heartbeat",
            "version": "8.4.0"
          }
        },
        {
          "api_version": "agent.k8s.elastic.co/v1alpha1",
          "kind": "Agent",
          "metadata": {
            "name": "agent-sample"
          },
          "spec": {
            "config": {
              "inputs": [
                {
                  "data_stream": {
                    "namespace": "default"
                  },
                  "meta": {
                    "package": {
                      "name": "system",
                      "version": "0.9.1"
                    }
                  },
                  "name": "system-1",
                  "revision": 1,
                  "streams": [
                    {
                      "cpu.metrics": [
                        "percentages",
                        "normalized_percentages"
                      ],
                      "data_stream": {
                        "dataset": "system.cpu",
                        "type": "metrics"
                      },
                      "id": "system/metrics-system.cpu",
                      "metricsets": [
                        "cpu"
                      ],
                      "period": "10s"
                    }
                  ],
                  "type": "system/metrics",
                  "use_output": "default"
                }
              ]
            },
            "daemonSet": {},
            "elasticsearchRefs": [
              {
                "name": "elasticsearch-sample"
              }
            ],
            "version": "8.4.0"
          }
        },
        {
          "api_version": "maps.k8s.elastic.co/v1alpha1",
          "kind": "ElasticMapsServer",
          "metadata": {
            "name": "ems-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.4.0"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/elastic/eck@sha256:3a8b4475afc5535dd0527e0d06d3f3e5616873a3a449d798e58b315b0c8744b7",
      "bundle_path_digest": "sha256:3a8b4475afc5535dd0527e0d06d3f3e5616873a3a449d798e58b315b0c8744b7",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-30T13:57:06.011000+00:00",
      "csv_description": "Elastic Cloud on Kubernetes (ECK) is the official operator by Elastic for automating the deployment, provisioning, management, and orchestration of Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes.\n\nCurrent features:\n\n*  Elasticsearch, Kibana, APM Server, Enterprise Search, Beats, Elastic Agent and Elastic Maps Server deployments\n*  TLS Certificates management\n*  Safe Elasticsearch cluster configuration and topology changes\n*  Persistent volumes usage\n*  Custom node configuration and attributes\n*  Secure settings keystore updates\n\nSupported versions:\n\n* Kubernetes 1.20-1.24\n* OpenShift 4.6-4.10\n* Google Kubernetes Engine (GKE), Azure Kubernetes Service (AKS), and Amazon Elastic Kubernetes Service (EKS)\n* Elasticsearch, Kibana, APM Server: 7.10+, 8+\n* Enterprise Search: 7.10+, 8+\n* Beats: 7.10+, 8+\n* Elastic Agent: 7.10+, 8+\n* Elastic Maps Server: 7.11+, 8+\n\nECK should work with all conformant installers as listed in these [FAQs](https://github.com/cncf/k8s-conformance/blob/master/faq.md#what-is-a-distribution-hosted-platform-and-an-installer). Distributions include source patches and so may not work as-is with ECK.\nAlpha, beta, and stable API versions follow the same [conventions used by Kubernetes](https://kubernetes.io/docs/concepts/overview/kubernetes-api/#api-versioning).\nSee the full [Elastic support matrix](https://www.elastic.co/support/matrix#matrix_kubernetes) for more information.\nSee the [Quickstart](https://www.elastic.co/guide/en/cloud-on-k8s/2.4/k8s-quickstart.html) to get started with ECK.",
      "csv_display_name": "Elasticsearch (ECK) Operator",
      "csv_metadata_description": "Run Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes and OpenShift",
      "csv_name": "elasticsearch-eck-operator-certified.v2.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T13:57:06.011000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "elasticsearch-eck-operator-certified",
      "provided_apis": [
        {
          "group": "agent.k8s.elastic.co",
          "kind": "Agent",
          "version": "v1alpha1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "version": "v1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "version": "v1alpha1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "version": "v1beta1"
        },
        {
          "group": "beat.k8s.elastic.co",
          "kind": "Beat",
          "version": "v1beta1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "version": "v1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "version": "v1alpha1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "version": "v1beta1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "version": "v1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "version": "v1beta1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "version": "v1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "version": "v1alpha1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "version": "v1beta1"
        },
        {
          "group": "maps.k8s.elastic.co",
          "kind": "ElasticMapsServer",
          "version": "v1alpha1"
        }
      ],
      "provider": "Elastic",
      "related_images": [
        {
          "digest": "sha256:83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801",
          "name": "eck-operator-83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801-annotation"
        },
        {
          "digest": "sha256:83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "2.4.0",
      "version_original": "2.4.0"
    },
    {
      "_id": "630e175c0ac7d9b5cd5e5d80",
      "alm_examples": [
        {
          "api_version": "elasticsearch.k8s.elastic.co/v1",
          "kind": "Elasticsearch",
          "metadata": {
            "name": "elasticsearch-sample"
          },
          "spec": {
            "nodeSets": [
              {
                "config": {
                  "node.attr.attr_name": "attr_value",
                  "node.roles": [
                    "master",
                    "data"
                  ],
                  "node.store.allow_mmap": false
                },
                "count": 3,
                "name": "default",
                "podTemplate": {
                  "metadata": {
                    "labels": {
                      "foo": "bar"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "name": "elasticsearch",
                        "resources": {
                          "limits": {
                            "cpu": 2,
                            "memory": "4Gi"
                          },
                          "requests": {
                            "cpu": 1,
                            "memory": "4Gi"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "version": "8.4.0"
          }
        },
        {
          "api_version": "kibana.k8s.elastic.co/v1",
          "kind": "Kibana",
          "metadata": {
            "name": "kibana-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "podTemplate": {
              "metadata": {
                "labels": {
                  "foo": "bar"
                }
              },
              "spec": {
                "containers": [
                  {
                    "name": "kibana",
                    "resources": {
                      "limits": {
                        "cpu": 2,
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": 0.5,
                        "memory": "1Gi"
                      }
                    }
                  }
                ]
              }
            },
            "version": "8.4.0"
          }
        },
        {
          "api_version": "apm.k8s.elastic.co/v1",
          "kind": "ApmServer",
          "metadata": {
            "name": "apmserver-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.4.0"
          }
        },
        {
          "api_version": "enterprisesearch.k8s.elastic.co/v1",
          "kind": "EnterpriseSearch",
          "metadata": {
            "name": "ent-sample"
          },
          "spec": {
            "config": {
              "ent_search.external_url": "https://localhost:3002"
            },
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.4.0"
          }
        },
        {
          "api_version": "beat.k8s.elastic.co/v1beta1",
          "kind": "Beat",
          "metadata": {
            "name": "heartbeat-sample"
          },
          "spec": {
            "config": {
              "heartbeat.monitors": [
                {
                  "hosts": [
                    "elasticsearch-sample-es-http.default.svc:9200"
                  ],
                  "schedule": "@every 5s",
                  "type": "tcp"
                }
              ]
            },
            "deployment": {
              "podTemplate": {
                "spec": {
                  "securityContext": {
                    "runAsUser": 0
                  }
                }
              },
              "replicas": 1
            },
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "type": "heartbeat",
            "version": "8.4.0"
          }
        },
        {
          "api_version": "agent.k8s.elastic.co/v1alpha1",
          "kind": "Agent",
          "metadata": {
            "name": "agent-sample"
          },
          "spec": {
            "config": {
              "inputs": [
                {
                  "data_stream": {
                    "namespace": "default"
                  },
                  "meta": {
                    "package": {
                      "name": "system",
                      "version": "0.9.1"
                    }
                  },
                  "name": "system-1",
                  "revision": 1,
                  "streams": [
                    {
                      "cpu.metrics": [
                        "percentages",
                        "normalized_percentages"
                      ],
                      "data_stream": {
                        "dataset": "system.cpu",
                        "type": "metrics"
                      },
                      "id": "system/metrics-system.cpu",
                      "metricsets": [
                        "cpu"
                      ],
                      "period": "10s"
                    }
                  ],
                  "type": "system/metrics",
                  "use_output": "default"
                }
              ]
            },
            "daemonSet": {},
            "elasticsearchRefs": [
              {
                "name": "elasticsearch-sample"
              }
            ],
            "version": "8.4.0"
          }
        },
        {
          "api_version": "maps.k8s.elastic.co/v1alpha1",
          "kind": "ElasticMapsServer",
          "metadata": {
            "name": "ems-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.4.0"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/elastic/eck@sha256:3a8b4475afc5535dd0527e0d06d3f3e5616873a3a449d798e58b315b0c8744b7",
      "bundle_path_digest": "sha256:3a8b4475afc5535dd0527e0d06d3f3e5616873a3a449d798e58b315b0c8744b7",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-30T13:57:48.762000+00:00",
      "csv_description": "Elastic Cloud on Kubernetes (ECK) is the official operator by Elastic for automating the deployment, provisioning, management, and orchestration of Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes.\n\nCurrent features:\n\n*  Elasticsearch, Kibana, APM Server, Enterprise Search, Beats, Elastic Agent and Elastic Maps Server deployments\n*  TLS Certificates management\n*  Safe Elasticsearch cluster configuration and topology changes\n*  Persistent volumes usage\n*  Custom node configuration and attributes\n*  Secure settings keystore updates\n\nSupported versions:\n\n* Kubernetes 1.20-1.24\n* OpenShift 4.6-4.10\n* Google Kubernetes Engine (GKE), Azure Kubernetes Service (AKS), and Amazon Elastic Kubernetes Service (EKS)\n* Elasticsearch, Kibana, APM Server: 7.10+, 8+\n* Enterprise Search: 7.10+, 8+\n* Beats: 7.10+, 8+\n* Elastic Agent: 7.10+, 8+\n* Elastic Maps Server: 7.11+, 8+\n\nECK should work with all conformant installers as listed in these [FAQs](https://github.com/cncf/k8s-conformance/blob/master/faq.md#what-is-a-distribution-hosted-platform-and-an-installer). Distributions include source patches and so may not work as-is with ECK.\nAlpha, beta, and stable API versions follow the same [conventions used by Kubernetes](https://kubernetes.io/docs/concepts/overview/kubernetes-api/#api-versioning).\nSee the full [Elastic support matrix](https://www.elastic.co/support/matrix#matrix_kubernetes) for more information.\nSee the [Quickstart](https://www.elastic.co/guide/en/cloud-on-k8s/2.4/k8s-quickstart.html) to get started with ECK.",
      "csv_display_name": "Elasticsearch (ECK) Operator",
      "csv_metadata_description": "Run Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes and OpenShift",
      "csv_name": "elasticsearch-eck-operator-certified.v2.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T13:57:48.762000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "elasticsearch-eck-operator-certified",
      "provided_apis": [
        {
          "group": "agent.k8s.elastic.co",
          "kind": "Agent",
          "plural": "agents",
          "version": "v1alpha1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1alpha1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1"
        },
        {
          "group": "maps.k8s.elastic.co",
          "kind": "ElasticMapsServer",
          "plural": "elasticmapsservers",
          "version": "v1alpha1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1beta1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1beta1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1alpha1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1"
        },
        {
          "group": "beat.k8s.elastic.co",
          "kind": "Beat",
          "plural": "beats",
          "version": "v1beta1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1beta1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1beta1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1alpha1"
        }
      ],
      "provider": "Elastic",
      "related_images": [
        {
          "digest": "sha256:83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801",
          "name": "eck-operator-83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801-annotation"
        },
        {
          "digest": "sha256:83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.4.0",
      "version_original": "2.4.0"
    },
    {
      "_id": "630e18661f6fa557cfcc8537",
      "alm_examples": [
        {
          "api_version": "elasticsearch.k8s.elastic.co/v1",
          "kind": "Elasticsearch",
          "metadata": {
            "name": "elasticsearch-sample"
          },
          "spec": {
            "nodeSets": [
              {
                "config": {
                  "node.attr.attr_name": "attr_value",
                  "node.roles": [
                    "master",
                    "data"
                  ],
                  "node.store.allow_mmap": false
                },
                "count": 3,
                "name": "default",
                "podTemplate": {
                  "metadata": {
                    "labels": {
                      "foo": "bar"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "name": "elasticsearch",
                        "resources": {
                          "limits": {
                            "cpu": 2,
                            "memory": "4Gi"
                          },
                          "requests": {
                            "cpu": 1,
                            "memory": "4Gi"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "version": "8.4.0"
          }
        },
        {
          "api_version": "kibana.k8s.elastic.co/v1",
          "kind": "Kibana",
          "metadata": {
            "name": "kibana-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "podTemplate": {
              "metadata": {
                "labels": {
                  "foo": "bar"
                }
              },
              "spec": {
                "containers": [
                  {
                    "name": "kibana",
                    "resources": {
                      "limits": {
                        "cpu": 2,
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": 0.5,
                        "memory": "1Gi"
                      }
                    }
                  }
                ]
              }
            },
            "version": "8.4.0"
          }
        },
        {
          "api_version": "apm.k8s.elastic.co/v1",
          "kind": "ApmServer",
          "metadata": {
            "name": "apmserver-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.4.0"
          }
        },
        {
          "api_version": "enterprisesearch.k8s.elastic.co/v1",
          "kind": "EnterpriseSearch",
          "metadata": {
            "name": "ent-sample"
          },
          "spec": {
            "config": {
              "ent_search.external_url": "https://localhost:3002"
            },
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.4.0"
          }
        },
        {
          "api_version": "beat.k8s.elastic.co/v1beta1",
          "kind": "Beat",
          "metadata": {
            "name": "heartbeat-sample"
          },
          "spec": {
            "config": {
              "heartbeat.monitors": [
                {
                  "hosts": [
                    "elasticsearch-sample-es-http.default.svc:9200"
                  ],
                  "schedule": "@every 5s",
                  "type": "tcp"
                }
              ]
            },
            "deployment": {
              "podTemplate": {
                "spec": {
                  "securityContext": {
                    "runAsUser": 0
                  }
                }
              },
              "replicas": 1
            },
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "type": "heartbeat",
            "version": "8.4.0"
          }
        },
        {
          "api_version": "agent.k8s.elastic.co/v1alpha1",
          "kind": "Agent",
          "metadata": {
            "name": "agent-sample"
          },
          "spec": {
            "config": {
              "inputs": [
                {
                  "data_stream": {
                    "namespace": "default"
                  },
                  "meta": {
                    "package": {
                      "name": "system",
                      "version": "0.9.1"
                    }
                  },
                  "name": "system-1",
                  "revision": 1,
                  "streams": [
                    {
                      "cpu.metrics": [
                        "percentages",
                        "normalized_percentages"
                      ],
                      "data_stream": {
                        "dataset": "system.cpu",
                        "type": "metrics"
                      },
                      "id": "system/metrics-system.cpu",
                      "metricsets": [
                        "cpu"
                      ],
                      "period": "10s"
                    }
                  ],
                  "type": "system/metrics",
                  "use_output": "default"
                }
              ]
            },
            "daemonSet": {},
            "elasticsearchRefs": [
              {
                "name": "elasticsearch-sample"
              }
            ],
            "version": "8.4.0"
          }
        },
        {
          "api_version": "maps.k8s.elastic.co/v1alpha1",
          "kind": "ElasticMapsServer",
          "metadata": {
            "name": "ems-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.4.0"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/elastic/eck@sha256:3a8b4475afc5535dd0527e0d06d3f3e5616873a3a449d798e58b315b0c8744b7",
      "bundle_path_digest": "sha256:3a8b4475afc5535dd0527e0d06d3f3e5616873a3a449d798e58b315b0c8744b7",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-30T14:02:14.305000+00:00",
      "csv_description": "Elastic Cloud on Kubernetes (ECK) is the official operator by Elastic for automating the deployment, provisioning, management, and orchestration of Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes.\n\nCurrent features:\n\n*  Elasticsearch, Kibana, APM Server, Enterprise Search, Beats, Elastic Agent and Elastic Maps Server deployments\n*  TLS Certificates management\n*  Safe Elasticsearch cluster configuration and topology changes\n*  Persistent volumes usage\n*  Custom node configuration and attributes\n*  Secure settings keystore updates\n\nSupported versions:\n\n* Kubernetes 1.20-1.24\n* OpenShift 4.6-4.10\n* Google Kubernetes Engine (GKE), Azure Kubernetes Service (AKS), and Amazon Elastic Kubernetes Service (EKS)\n* Elasticsearch, Kibana, APM Server: 7.10+, 8+\n* Enterprise Search: 7.10+, 8+\n* Beats: 7.10+, 8+\n* Elastic Agent: 7.10+, 8+\n* Elastic Maps Server: 7.11+, 8+\n\nECK should work with all conformant installers as listed in these [FAQs](https://github.com/cncf/k8s-conformance/blob/master/faq.md#what-is-a-distribution-hosted-platform-and-an-installer). Distributions include source patches and so may not work as-is with ECK.\nAlpha, beta, and stable API versions follow the same [conventions used by Kubernetes](https://kubernetes.io/docs/concepts/overview/kubernetes-api/#api-versioning).\nSee the full [Elastic support matrix](https://www.elastic.co/support/matrix#matrix_kubernetes) for more information.\nSee the [Quickstart](https://www.elastic.co/guide/en/cloud-on-k8s/2.4/k8s-quickstart.html) to get started with ECK.",
      "csv_display_name": "Elasticsearch (ECK) Operator",
      "csv_metadata_description": "Run Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes and OpenShift",
      "csv_name": "elasticsearch-eck-operator-certified.v2.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T14:02:14.305000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "elasticsearch-eck-operator-certified",
      "provided_apis": [
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1beta1"
        },
        {
          "group": "beat.k8s.elastic.co",
          "kind": "Beat",
          "plural": "beats",
          "version": "v1beta1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1beta1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1alpha1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1"
        },
        {
          "group": "maps.k8s.elastic.co",
          "kind": "ElasticMapsServer",
          "plural": "elasticmapsservers",
          "version": "v1alpha1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1"
        },
        {
          "group": "agent.k8s.elastic.co",
          "kind": "Agent",
          "plural": "agents",
          "version": "v1alpha1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1beta1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1alpha1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1alpha1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1beta1"
        }
      ],
      "provider": "Elastic",
      "related_images": [
        {
          "digest": "sha256:83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801",
          "name": "eck-operator-83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801-annotation"
        },
        {
          "digest": "sha256:83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.4.0",
      "version_original": "2.4.0"
    },
    {
      "_id": "630e1bda1f6fa557cfcc867b",
      "alm_examples": [
        {
          "api_version": "elasticsearch.k8s.elastic.co/v1",
          "kind": "Elasticsearch",
          "metadata": {
            "name": "elasticsearch-sample"
          },
          "spec": {
            "nodeSets": [
              {
                "config": {
                  "node.attr.attr_name": "attr_value",
                  "node.roles": [
                    "master",
                    "data"
                  ],
                  "node.store.allow_mmap": false
                },
                "count": 3,
                "name": "default",
                "podTemplate": {
                  "metadata": {
                    "labels": {
                      "foo": "bar"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "name": "elasticsearch",
                        "resources": {
                          "limits": {
                            "cpu": 2,
                            "memory": "4Gi"
                          },
                          "requests": {
                            "cpu": 1,
                            "memory": "4Gi"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "version": "8.4.0"
          }
        },
        {
          "api_version": "kibana.k8s.elastic.co/v1",
          "kind": "Kibana",
          "metadata": {
            "name": "kibana-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "podTemplate": {
              "metadata": {
                "labels": {
                  "foo": "bar"
                }
              },
              "spec": {
                "containers": [
                  {
                    "name": "kibana",
                    "resources": {
                      "limits": {
                        "cpu": 2,
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": 0.5,
                        "memory": "1Gi"
                      }
                    }
                  }
                ]
              }
            },
            "version": "8.4.0"
          }
        },
        {
          "api_version": "apm.k8s.elastic.co/v1",
          "kind": "ApmServer",
          "metadata": {
            "name": "apmserver-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.4.0"
          }
        },
        {
          "api_version": "enterprisesearch.k8s.elastic.co/v1",
          "kind": "EnterpriseSearch",
          "metadata": {
            "name": "ent-sample"
          },
          "spec": {
            "config": {
              "ent_search.external_url": "https://localhost:3002"
            },
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.4.0"
          }
        },
        {
          "api_version": "beat.k8s.elastic.co/v1beta1",
          "kind": "Beat",
          "metadata": {
            "name": "heartbeat-sample"
          },
          "spec": {
            "config": {
              "heartbeat.monitors": [
                {
                  "hosts": [
                    "elasticsearch-sample-es-http.default.svc:9200"
                  ],
                  "schedule": "@every 5s",
                  "type": "tcp"
                }
              ]
            },
            "deployment": {
              "podTemplate": {
                "spec": {
                  "securityContext": {
                    "runAsUser": 0
                  }
                }
              },
              "replicas": 1
            },
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "type": "heartbeat",
            "version": "8.4.0"
          }
        },
        {
          "api_version": "agent.k8s.elastic.co/v1alpha1",
          "kind": "Agent",
          "metadata": {
            "name": "agent-sample"
          },
          "spec": {
            "config": {
              "inputs": [
                {
                  "data_stream": {
                    "namespace": "default"
                  },
                  "meta": {
                    "package": {
                      "name": "system",
                      "version": "0.9.1"
                    }
                  },
                  "name": "system-1",
                  "revision": 1,
                  "streams": [
                    {
                      "cpu.metrics": [
                        "percentages",
                        "normalized_percentages"
                      ],
                      "data_stream": {
                        "dataset": "system.cpu",
                        "type": "metrics"
                      },
                      "id": "system/metrics-system.cpu",
                      "metricsets": [
                        "cpu"
                      ],
                      "period": "10s"
                    }
                  ],
                  "type": "system/metrics",
                  "use_output": "default"
                }
              ]
            },
            "daemonSet": {},
            "elasticsearchRefs": [
              {
                "name": "elasticsearch-sample"
              }
            ],
            "version": "8.4.0"
          }
        },
        {
          "api_version": "maps.k8s.elastic.co/v1alpha1",
          "kind": "ElasticMapsServer",
          "metadata": {
            "name": "ems-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.4.0"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/elastic/eck@sha256:3a8b4475afc5535dd0527e0d06d3f3e5616873a3a449d798e58b315b0c8744b7",
      "bundle_path_digest": "sha256:3a8b4475afc5535dd0527e0d06d3f3e5616873a3a449d798e58b315b0c8744b7",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-30T14:16:58.027000+00:00",
      "csv_description": "Elastic Cloud on Kubernetes (ECK) is the official operator by Elastic for automating the deployment, provisioning, management, and orchestration of Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes.\n\nCurrent features:\n\n*  Elasticsearch, Kibana, APM Server, Enterprise Search, Beats, Elastic Agent and Elastic Maps Server deployments\n*  TLS Certificates management\n*  Safe Elasticsearch cluster configuration and topology changes\n*  Persistent volumes usage\n*  Custom node configuration and attributes\n*  Secure settings keystore updates\n\nSupported versions:\n\n* Kubernetes 1.20-1.24\n* OpenShift 4.6-4.10\n* Google Kubernetes Engine (GKE), Azure Kubernetes Service (AKS), and Amazon Elastic Kubernetes Service (EKS)\n* Elasticsearch, Kibana, APM Server: 7.10+, 8+\n* Enterprise Search: 7.10+, 8+\n* Beats: 7.10+, 8+\n* Elastic Agent: 7.10+, 8+\n* Elastic Maps Server: 7.11+, 8+\n\nECK should work with all conformant installers as listed in these [FAQs](https://github.com/cncf/k8s-conformance/blob/master/faq.md#what-is-a-distribution-hosted-platform-and-an-installer). Distributions include source patches and so may not work as-is with ECK.\nAlpha, beta, and stable API versions follow the same [conventions used by Kubernetes](https://kubernetes.io/docs/concepts/overview/kubernetes-api/#api-versioning).\nSee the full [Elastic support matrix](https://www.elastic.co/support/matrix#matrix_kubernetes) for more information.\nSee the [Quickstart](https://www.elastic.co/guide/en/cloud-on-k8s/2.4/k8s-quickstart.html) to get started with ECK.",
      "csv_display_name": "Elasticsearch (ECK) Operator",
      "csv_metadata_description": "Run Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes and OpenShift",
      "csv_name": "elasticsearch-eck-operator-certified.v2.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T14:16:58.027000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "elasticsearch-eck-operator-certified",
      "provided_apis": [
        {
          "group": "maps.k8s.elastic.co",
          "kind": "ElasticMapsServer",
          "plural": "elasticmapsservers",
          "version": "v1alpha1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1beta1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1alpha1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1beta1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1beta1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1beta1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1alpha1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1alpha1"
        },
        {
          "group": "agent.k8s.elastic.co",
          "kind": "Agent",
          "plural": "agents",
          "version": "v1alpha1"
        },
        {
          "group": "beat.k8s.elastic.co",
          "kind": "Beat",
          "plural": "beats",
          "version": "v1beta1"
        }
      ],
      "provider": "Elastic",
      "related_images": [
        {
          "digest": "sha256:83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801",
          "name": "eck-operator-83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801-annotation"
        },
        {
          "digest": "sha256:83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.4.0",
      "version_original": "2.4.0"
    },
    {
      "_id": "630e1cb90ac7d9b5cd5e5fdf",
      "alm_examples": [
        {
          "api_version": "elasticsearch.k8s.elastic.co/v1",
          "kind": "Elasticsearch",
          "metadata": {
            "name": "elasticsearch-sample"
          },
          "spec": {
            "nodeSets": [
              {
                "config": {
                  "node.attr.attr_name": "attr_value",
                  "node.roles": [
                    "master",
                    "data"
                  ],
                  "node.store.allow_mmap": false
                },
                "count": 3,
                "name": "default",
                "podTemplate": {
                  "metadata": {
                    "labels": {
                      "foo": "bar"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "name": "elasticsearch",
                        "resources": {
                          "limits": {
                            "cpu": 2,
                            "memory": "4Gi"
                          },
                          "requests": {
                            "cpu": 1,
                            "memory": "4Gi"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "version": "8.4.0"
          }
        },
        {
          "api_version": "kibana.k8s.elastic.co/v1",
          "kind": "Kibana",
          "metadata": {
            "name": "kibana-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "podTemplate": {
              "metadata": {
                "labels": {
                  "foo": "bar"
                }
              },
              "spec": {
                "containers": [
                  {
                    "name": "kibana",
                    "resources": {
                      "limits": {
                        "cpu": 2,
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": 0.5,
                        "memory": "1Gi"
                      }
                    }
                  }
                ]
              }
            },
            "version": "8.4.0"
          }
        },
        {
          "api_version": "apm.k8s.elastic.co/v1",
          "kind": "ApmServer",
          "metadata": {
            "name": "apmserver-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.4.0"
          }
        },
        {
          "api_version": "enterprisesearch.k8s.elastic.co/v1",
          "kind": "EnterpriseSearch",
          "metadata": {
            "name": "ent-sample"
          },
          "spec": {
            "config": {
              "ent_search.external_url": "https://localhost:3002"
            },
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.4.0"
          }
        },
        {
          "api_version": "beat.k8s.elastic.co/v1beta1",
          "kind": "Beat",
          "metadata": {
            "name": "heartbeat-sample"
          },
          "spec": {
            "config": {
              "heartbeat.monitors": [
                {
                  "hosts": [
                    "elasticsearch-sample-es-http.default.svc:9200"
                  ],
                  "schedule": "@every 5s",
                  "type": "tcp"
                }
              ]
            },
            "deployment": {
              "podTemplate": {
                "spec": {
                  "securityContext": {
                    "runAsUser": 0
                  }
                }
              },
              "replicas": 1
            },
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "type": "heartbeat",
            "version": "8.4.0"
          }
        },
        {
          "api_version": "agent.k8s.elastic.co/v1alpha1",
          "kind": "Agent",
          "metadata": {
            "name": "agent-sample"
          },
          "spec": {
            "config": {
              "inputs": [
                {
                  "data_stream": {
                    "namespace": "default"
                  },
                  "meta": {
                    "package": {
                      "name": "system",
                      "version": "0.9.1"
                    }
                  },
                  "name": "system-1",
                  "revision": 1,
                  "streams": [
                    {
                      "cpu.metrics": [
                        "percentages",
                        "normalized_percentages"
                      ],
                      "data_stream": {
                        "dataset": "system.cpu",
                        "type": "metrics"
                      },
                      "id": "system/metrics-system.cpu",
                      "metricsets": [
                        "cpu"
                      ],
                      "period": "10s"
                    }
                  ],
                  "type": "system/metrics",
                  "use_output": "default"
                }
              ]
            },
            "daemonSet": {},
            "elasticsearchRefs": [
              {
                "name": "elasticsearch-sample"
              }
            ],
            "version": "8.4.0"
          }
        },
        {
          "api_version": "maps.k8s.elastic.co/v1alpha1",
          "kind": "ElasticMapsServer",
          "metadata": {
            "name": "ems-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.4.0"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/elastic/eck@sha256:3a8b4475afc5535dd0527e0d06d3f3e5616873a3a449d798e58b315b0c8744b7",
      "bundle_path_digest": "sha256:3a8b4475afc5535dd0527e0d06d3f3e5616873a3a449d798e58b315b0c8744b7",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-30T14:20:41.547000+00:00",
      "csv_description": "Elastic Cloud on Kubernetes (ECK) is the official operator by Elastic for automating the deployment, provisioning, management, and orchestration of Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes.\n\nCurrent features:\n\n*  Elasticsearch, Kibana, APM Server, Enterprise Search, Beats, Elastic Agent and Elastic Maps Server deployments\n*  TLS Certificates management\n*  Safe Elasticsearch cluster configuration and topology changes\n*  Persistent volumes usage\n*  Custom node configuration and attributes\n*  Secure settings keystore updates\n\nSupported versions:\n\n* Kubernetes 1.20-1.24\n* OpenShift 4.6-4.10\n* Google Kubernetes Engine (GKE), Azure Kubernetes Service (AKS), and Amazon Elastic Kubernetes Service (EKS)\n* Elasticsearch, Kibana, APM Server: 7.10+, 8+\n* Enterprise Search: 7.10+, 8+\n* Beats: 7.10+, 8+\n* Elastic Agent: 7.10+, 8+\n* Elastic Maps Server: 7.11+, 8+\n\nECK should work with all conformant installers as listed in these [FAQs](https://github.com/cncf/k8s-conformance/blob/master/faq.md#what-is-a-distribution-hosted-platform-and-an-installer). Distributions include source patches and so may not work as-is with ECK.\nAlpha, beta, and stable API versions follow the same [conventions used by Kubernetes](https://kubernetes.io/docs/concepts/overview/kubernetes-api/#api-versioning).\nSee the full [Elastic support matrix](https://www.elastic.co/support/matrix#matrix_kubernetes) for more information.\nSee the [Quickstart](https://www.elastic.co/guide/en/cloud-on-k8s/2.4/k8s-quickstart.html) to get started with ECK.",
      "csv_display_name": "Elasticsearch (ECK) Operator",
      "csv_metadata_description": "Run Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes and OpenShift",
      "csv_name": "elasticsearch-eck-operator-certified.v2.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T14:20:41.547000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "elasticsearch-eck-operator-certified",
      "provided_apis": [
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1beta1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1"
        },
        {
          "group": "agent.k8s.elastic.co",
          "kind": "Agent",
          "plural": "agents",
          "version": "v1alpha1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1beta1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1alpha1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1alpha1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1beta1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1alpha1"
        },
        {
          "group": "maps.k8s.elastic.co",
          "kind": "ElasticMapsServer",
          "plural": "elasticmapsservers",
          "version": "v1alpha1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1beta1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1"
        },
        {
          "group": "beat.k8s.elastic.co",
          "kind": "Beat",
          "plural": "beats",
          "version": "v1beta1"
        }
      ],
      "provider": "Elastic",
      "related_images": [
        {
          "digest": "sha256:83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801",
          "name": "eck-operator-83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801-annotation"
        },
        {
          "digest": "sha256:83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.4.0",
      "version_original": "2.4.0"
    },
    {
      "_id": "630e1e91e719b864c9b821b2",
      "alm_examples": [
        {
          "api_version": "elasticsearch.k8s.elastic.co/v1",
          "kind": "Elasticsearch",
          "metadata": {
            "name": "elasticsearch-sample"
          },
          "spec": {
            "nodeSets": [
              {
                "config": {
                  "node.attr.attr_name": "attr_value",
                  "node.roles": [
                    "master",
                    "data"
                  ],
                  "node.store.allow_mmap": false
                },
                "count": 3,
                "name": "default",
                "podTemplate": {
                  "metadata": {
                    "labels": {
                      "foo": "bar"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "name": "elasticsearch",
                        "resources": {
                          "limits": {
                            "cpu": 2,
                            "memory": "4Gi"
                          },
                          "requests": {
                            "cpu": 1,
                            "memory": "4Gi"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "version": "8.4.0"
          }
        },
        {
          "api_version": "kibana.k8s.elastic.co/v1",
          "kind": "Kibana",
          "metadata": {
            "name": "kibana-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "podTemplate": {
              "metadata": {
                "labels": {
                  "foo": "bar"
                }
              },
              "spec": {
                "containers": [
                  {
                    "name": "kibana",
                    "resources": {
                      "limits": {
                        "cpu": 2,
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": 0.5,
                        "memory": "1Gi"
                      }
                    }
                  }
                ]
              }
            },
            "version": "8.4.0"
          }
        },
        {
          "api_version": "apm.k8s.elastic.co/v1",
          "kind": "ApmServer",
          "metadata": {
            "name": "apmserver-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.4.0"
          }
        },
        {
          "api_version": "enterprisesearch.k8s.elastic.co/v1",
          "kind": "EnterpriseSearch",
          "metadata": {
            "name": "ent-sample"
          },
          "spec": {
            "config": {
              "ent_search.external_url": "https://localhost:3002"
            },
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.4.0"
          }
        },
        {
          "api_version": "beat.k8s.elastic.co/v1beta1",
          "kind": "Beat",
          "metadata": {
            "name": "heartbeat-sample"
          },
          "spec": {
            "config": {
              "heartbeat.monitors": [
                {
                  "hosts": [
                    "elasticsearch-sample-es-http.default.svc:9200"
                  ],
                  "schedule": "@every 5s",
                  "type": "tcp"
                }
              ]
            },
            "deployment": {
              "podTemplate": {
                "spec": {
                  "securityContext": {
                    "runAsUser": 0
                  }
                }
              },
              "replicas": 1
            },
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "type": "heartbeat",
            "version": "8.4.0"
          }
        },
        {
          "api_version": "agent.k8s.elastic.co/v1alpha1",
          "kind": "Agent",
          "metadata": {
            "name": "agent-sample"
          },
          "spec": {
            "config": {
              "inputs": [
                {
                  "data_stream": {
                    "namespace": "default"
                  },
                  "meta": {
                    "package": {
                      "name": "system",
                      "version": "0.9.1"
                    }
                  },
                  "name": "system-1",
                  "revision": 1,
                  "streams": [
                    {
                      "cpu.metrics": [
                        "percentages",
                        "normalized_percentages"
                      ],
                      "data_stream": {
                        "dataset": "system.cpu",
                        "type": "metrics"
                      },
                      "id": "system/metrics-system.cpu",
                      "metricsets": [
                        "cpu"
                      ],
                      "period": "10s"
                    }
                  ],
                  "type": "system/metrics",
                  "use_output": "default"
                }
              ]
            },
            "daemonSet": {},
            "elasticsearchRefs": [
              {
                "name": "elasticsearch-sample"
              }
            ],
            "version": "8.4.0"
          }
        },
        {
          "api_version": "maps.k8s.elastic.co/v1alpha1",
          "kind": "ElasticMapsServer",
          "metadata": {
            "name": "ems-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.4.0"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/elastic/eck@sha256:3a8b4475afc5535dd0527e0d06d3f3e5616873a3a449d798e58b315b0c8744b7",
      "bundle_path_digest": "sha256:3a8b4475afc5535dd0527e0d06d3f3e5616873a3a449d798e58b315b0c8744b7",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-30T14:28:33.119000+00:00",
      "csv_description": "Elastic Cloud on Kubernetes (ECK) is the official operator by Elastic for automating the deployment, provisioning, management, and orchestration of Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes.\n\nCurrent features:\n\n*  Elasticsearch, Kibana, APM Server, Enterprise Search, Beats, Elastic Agent and Elastic Maps Server deployments\n*  TLS Certificates management\n*  Safe Elasticsearch cluster configuration and topology changes\n*  Persistent volumes usage\n*  Custom node configuration and attributes\n*  Secure settings keystore updates\n\nSupported versions:\n\n* Kubernetes 1.20-1.24\n* OpenShift 4.6-4.10\n* Google Kubernetes Engine (GKE), Azure Kubernetes Service (AKS), and Amazon Elastic Kubernetes Service (EKS)\n* Elasticsearch, Kibana, APM Server: 7.10+, 8+\n* Enterprise Search: 7.10+, 8+\n* Beats: 7.10+, 8+\n* Elastic Agent: 7.10+, 8+\n* Elastic Maps Server: 7.11+, 8+\n\nECK should work with all conformant installers as listed in these [FAQs](https://github.com/cncf/k8s-conformance/blob/master/faq.md#what-is-a-distribution-hosted-platform-and-an-installer). Distributions include source patches and so may not work as-is with ECK.\nAlpha, beta, and stable API versions follow the same [conventions used by Kubernetes](https://kubernetes.io/docs/concepts/overview/kubernetes-api/#api-versioning).\nSee the full [Elastic support matrix](https://www.elastic.co/support/matrix#matrix_kubernetes) for more information.\nSee the [Quickstart](https://www.elastic.co/guide/en/cloud-on-k8s/2.4/k8s-quickstart.html) to get started with ECK.",
      "csv_display_name": "Elasticsearch (ECK) Operator",
      "csv_metadata_description": "Run Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes and OpenShift",
      "csv_name": "elasticsearch-eck-operator-certified.v2.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T14:28:33.119000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "elasticsearch-eck-operator-certified",
      "provided_apis": [
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1beta1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1alpha1"
        },
        {
          "group": "maps.k8s.elastic.co",
          "kind": "ElasticMapsServer",
          "plural": "elasticmapsservers",
          "version": "v1alpha1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1alpha1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1alpha1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1beta1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1beta1"
        },
        {
          "group": "agent.k8s.elastic.co",
          "kind": "Agent",
          "plural": "agents",
          "version": "v1alpha1"
        },
        {
          "group": "beat.k8s.elastic.co",
          "kind": "Beat",
          "plural": "beats",
          "version": "v1beta1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1beta1"
        }
      ],
      "provider": "Elastic",
      "related_images": [
        {
          "digest": "sha256:83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801",
          "name": "eck-operator-83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801-annotation"
        },
        {
          "digest": "sha256:83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:83bb4de859b40f61053642536d07f2d4340fdf63b8aa43173f981dd07acb9801",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.4.0",
      "version_original": "2.4.0"
    },
    {
      "_id": "630e2bf4a73163225d23e210",
      "alm_examples": [
        {
          "api_version": "dynatrace.com/v1beta1",
          "kind": "DynaKube",
          "metadata": {
            "annotations": {
              "feature.dynatrace.com/oneagent-privileged": "true"
            },
            "name": "dynakube",
            "namespace": "dynatrace"
          },
          "spec": {
            "activeGate": {
              "capabilities": [
                "routing",
                "kubernetes-monitoring",
                "dynatrace-api"
              ],
              "image": "",
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1.5Gi"
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "512Mi"
                }
              }
            },
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api",
            "oneAgent": {
              "classicFullStack": {
                "image": "",
                "tolerations": [
                  {
                    "effect": "NoSchedule",
                    "key": "node-role.kubernetes.io/master",
                    "operator": "Exists"
                  },
                  {
                    "effect": "NoSchedule",
                    "key": "node-role.kubernetes.io/control-plane",
                    "operator": "Exists"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-operator-bundle@sha256:3d186b6b44896f587f64f99c355b35d6e4282a27606a2cb4c170a8a28f8ac647",
      "bundle_path_digest": "sha256:3d186b6b44896f587f64f99c355b35d6e4282a27606a2cb4c170a8a28f8ac647",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-08-30T15:25:40.421000+00:00",
      "csv_description": "The Dynatrace Operator supports rollout and lifecycle management of various Dynatrace components in Kubernetes and OpenShift.\n\nCurrently the Dynatrace Operator supports the following capabilities:\n\n### OneAgent\n  * `classicFullStack` rolls out one OneAgent pod per node to monitor its pods and the node itself\n  * `applicationMonitoring` is a webhook based injection mechanism for automatic app-only injection\n  * `hostMonitoring` monitors only the hosts, i.e., the nodes, in the cluster without app-only injection\n### ActiveGate\n  * `routing` routes OneAgent traffic through the ActiveGate\n  * `kubernetes-monitoring` allows monitoring the Kubernetes API\n  * `metrics-ingest` routes enriched metrics through an ActiveGate\n\nFor more information please refer to [our DynaKube Custom Resource examples](https://dt-url.net/dynakube-samples).\n\n### Installation\nOnce you've installed the Dynatrace Operator, you can create a DynaKube custom resource.\n\nFirst, please add a Secret within the Project you've deployed the Dynatrace Operator to, which would contain your API and PaaS tokens. Create tokens of type *Dynatrace API* (`API_TOKEN`) and *Platform as a Service* (`PAAS_TOKEN`) and use their values in the following commands respectively.\n\nFor assistance please refer to [Create user-generated access tokens](https://www.dynatrace.com/support/help/shortlink/token#create-user-generated-access-tokens).\n\n``` $ oc -n <project> create secret generic dynakube --from-literal=\"apiToken=API_TOKEN\" --from-literal=\"paasToken=PAAS_TOKEN\" ```\n\nYou may update this Secret at any time to rotate the tokens.\n\nAfter creation of the secret add the DynaKube object in the project where the Dynatrace Operator has been deployed, configured to your needs.\n\n### Required Parameters\n* `apiUrl` - provide the URL to the API of your Dynatrace environment. In Dynatrace SaaS it will look like `https://<ENVIRONMENTID>.live.dynatrace.com/api` . In Dynatrace Managed like `https://<YourDynatraceServerURL>/e/<ENVIRONMENTID>/api` .\n\n### Advanced Options\n* **Disable Certificate Checking** - disable any certificate validation that may interact poorly with proxies with in your cluster\n* **Image Override** - use a copy of the ActiveGate container image from a registry other than Docker's or Red Hat's\n\nFor a complete list of supported parameters please consult the [Operator Deploy Guide](https://www.dynatrace.com/support/help/shortlink/openshift-deploy).\n\n### Help\nYou can find more about our instructions in our [documentation](https://www.dynatrace.com/support/help/shortlink/openshift-deploy#install-dynatrace-operator).\n",
      "csv_display_name": "Dynatrace Operator",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-operator.v0.8.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T15:25:40.421000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "dynatrace-operator",
      "provided_apis": [
        {
          "group": "dynatrace.com",
          "kind": "DynaKube",
          "plural": "dynakubes",
          "version": "v1alpha1"
        },
        {
          "group": "dynatrace.com",
          "kind": "DynaKube",
          "plural": "dynakubes",
          "version": "v1beta1"
        }
      ],
      "provider": "Dynatrace LLC",
      "related_images": [
        {
          "digest": "sha256:cc0cf5b8aa170750818a4d548ae7adc110c19467b8e0d9453cd29e678fa2e19f",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:cc0cf5b8aa170750818a4d548ae7adc110c19467b8e0d9453cd29e678fa2e19f",
          "name": "dynatrace-operator"
        },
        {
          "digest": "sha256:cc0cf5b8aa170750818a4d548ae7adc110c19467b8e0d9453cd29e678fa2e19f",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:cc0cf5b8aa170750818a4d548ae7adc110c19467b8e0d9453cd29e678fa2e19f",
          "name": "dynatrace-operator-cc0cf5b8aa170750818a4d548ae7adc110c19467b8e0d9453cd29e678fa2e19f-annotation"
        },
        {
          "digest": "sha256:cc0cf5b8aa170750818a4d548ae7adc110c19467b8e0d9453cd29e678fa2e19f",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:cc0cf5b8aa170750818a4d548ae7adc110c19467b8e0d9453cd29e678fa2e19f",
          "name": "webhook"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.8.2",
      "version_original": "0.8.2"
    },
    {
      "_id": "630e2cd1e719b864c9b827c9",
      "alm_examples": [
        {
          "api_version": "dynatrace.com/v1beta1",
          "kind": "DynaKube",
          "metadata": {
            "annotations": {
              "feature.dynatrace.com/oneagent-privileged": "true"
            },
            "name": "dynakube",
            "namespace": "dynatrace"
          },
          "spec": {
            "activeGate": {
              "capabilities": [
                "routing",
                "kubernetes-monitoring",
                "dynatrace-api"
              ],
              "image": "",
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1.5Gi"
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "512Mi"
                }
              }
            },
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api",
            "oneAgent": {
              "classicFullStack": {
                "image": "",
                "tolerations": [
                  {
                    "effect": "NoSchedule",
                    "key": "node-role.kubernetes.io/master",
                    "operator": "Exists"
                  },
                  {
                    "effect": "NoSchedule",
                    "key": "node-role.kubernetes.io/control-plane",
                    "operator": "Exists"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-operator-bundle@sha256:3d186b6b44896f587f64f99c355b35d6e4282a27606a2cb4c170a8a28f8ac647",
      "bundle_path_digest": "sha256:3d186b6b44896f587f64f99c355b35d6e4282a27606a2cb4c170a8a28f8ac647",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-08-30T15:29:21.838000+00:00",
      "csv_description": "The Dynatrace Operator supports rollout and lifecycle management of various Dynatrace components in Kubernetes and OpenShift.\n\nCurrently the Dynatrace Operator supports the following capabilities:\n\n### OneAgent\n  * `classicFullStack` rolls out one OneAgent pod per node to monitor its pods and the node itself\n  * `applicationMonitoring` is a webhook based injection mechanism for automatic app-only injection\n  * `hostMonitoring` monitors only the hosts, i.e., the nodes, in the cluster without app-only injection\n### ActiveGate\n  * `routing` routes OneAgent traffic through the ActiveGate\n  * `kubernetes-monitoring` allows monitoring the Kubernetes API\n  * `metrics-ingest` routes enriched metrics through an ActiveGate\n\nFor more information please refer to [our DynaKube Custom Resource examples](https://dt-url.net/dynakube-samples).\n\n### Installation\nOnce you've installed the Dynatrace Operator, you can create a DynaKube custom resource.\n\nFirst, please add a Secret within the Project you've deployed the Dynatrace Operator to, which would contain your API and PaaS tokens. Create tokens of type *Dynatrace API* (`API_TOKEN`) and *Platform as a Service* (`PAAS_TOKEN`) and use their values in the following commands respectively.\n\nFor assistance please refer to [Create user-generated access tokens](https://www.dynatrace.com/support/help/shortlink/token#create-user-generated-access-tokens).\n\n``` $ oc -n <project> create secret generic dynakube --from-literal=\"apiToken=API_TOKEN\" --from-literal=\"paasToken=PAAS_TOKEN\" ```\n\nYou may update this Secret at any time to rotate the tokens.\n\nAfter creation of the secret add the DynaKube object in the project where the Dynatrace Operator has been deployed, configured to your needs.\n\n### Required Parameters\n* `apiUrl` - provide the URL to the API of your Dynatrace environment. In Dynatrace SaaS it will look like `https://<ENVIRONMENTID>.live.dynatrace.com/api` . In Dynatrace Managed like `https://<YourDynatraceServerURL>/e/<ENVIRONMENTID>/api` .\n\n### Advanced Options\n* **Disable Certificate Checking** - disable any certificate validation that may interact poorly with proxies with in your cluster\n* **Image Override** - use a copy of the ActiveGate container image from a registry other than Docker's or Red Hat's\n\nFor a complete list of supported parameters please consult the [Operator Deploy Guide](https://www.dynatrace.com/support/help/shortlink/openshift-deploy).\n\n### Help\nYou can find more about our instructions in our [documentation](https://www.dynatrace.com/support/help/shortlink/openshift-deploy#install-dynatrace-operator).\n",
      "csv_display_name": "Dynatrace Operator",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-operator.v0.8.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T15:29:21.838000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "dynatrace-operator",
      "provided_apis": [
        {
          "group": "dynatrace.com",
          "kind": "DynaKube",
          "plural": "dynakubes",
          "version": "v1beta1"
        },
        {
          "group": "dynatrace.com",
          "kind": "DynaKube",
          "plural": "dynakubes",
          "version": "v1alpha1"
        }
      ],
      "provider": "Dynatrace LLC",
      "related_images": [
        {
          "digest": "sha256:cc0cf5b8aa170750818a4d548ae7adc110c19467b8e0d9453cd29e678fa2e19f",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:cc0cf5b8aa170750818a4d548ae7adc110c19467b8e0d9453cd29e678fa2e19f",
          "name": "dynatrace-operator"
        },
        {
          "digest": "sha256:cc0cf5b8aa170750818a4d548ae7adc110c19467b8e0d9453cd29e678fa2e19f",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:cc0cf5b8aa170750818a4d548ae7adc110c19467b8e0d9453cd29e678fa2e19f",
          "name": "dynatrace-operator-cc0cf5b8aa170750818a4d548ae7adc110c19467b8e0d9453cd29e678fa2e19f-annotation"
        },
        {
          "digest": "sha256:cc0cf5b8aa170750818a4d548ae7adc110c19467b8e0d9453cd29e678fa2e19f",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:cc0cf5b8aa170750818a4d548ae7adc110c19467b8e0d9453cd29e678fa2e19f",
          "name": "webhook"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.8.2",
      "version_original": "0.8.2"
    },
    {
      "_id": "630e30212f7c0a10361352c0",
      "alm_examples": [
        {
          "api_version": "dynatrace.com/v1beta1",
          "kind": "DynaKube",
          "metadata": {
            "annotations": {
              "feature.dynatrace.com/oneagent-privileged": "true"
            },
            "name": "dynakube",
            "namespace": "dynatrace"
          },
          "spec": {
            "activeGate": {
              "capabilities": [
                "routing",
                "kubernetes-monitoring",
                "dynatrace-api"
              ],
              "image": "",
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1.5Gi"
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "512Mi"
                }
              }
            },
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api",
            "oneAgent": {
              "classicFullStack": {
                "image": "",
                "tolerations": [
                  {
                    "effect": "NoSchedule",
                    "key": "node-role.kubernetes.io/master",
                    "operator": "Exists"
                  },
                  {
                    "effect": "NoSchedule",
                    "key": "node-role.kubernetes.io/control-plane",
                    "operator": "Exists"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-operator-bundle@sha256:3d186b6b44896f587f64f99c355b35d6e4282a27606a2cb4c170a8a28f8ac647",
      "bundle_path_digest": "sha256:3d186b6b44896f587f64f99c355b35d6e4282a27606a2cb4c170a8a28f8ac647",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-08-30T15:43:29.228000+00:00",
      "csv_description": "The Dynatrace Operator supports rollout and lifecycle management of various Dynatrace components in Kubernetes and OpenShift.\n\nCurrently the Dynatrace Operator supports the following capabilities:\n\n### OneAgent\n  * `classicFullStack` rolls out one OneAgent pod per node to monitor its pods and the node itself\n  * `applicationMonitoring` is a webhook based injection mechanism for automatic app-only injection\n  * `hostMonitoring` monitors only the hosts, i.e., the nodes, in the cluster without app-only injection\n### ActiveGate\n  * `routing` routes OneAgent traffic through the ActiveGate\n  * `kubernetes-monitoring` allows monitoring the Kubernetes API\n  * `metrics-ingest` routes enriched metrics through an ActiveGate\n\nFor more information please refer to [our DynaKube Custom Resource examples](https://dt-url.net/dynakube-samples).\n\n### Installation\nOnce you've installed the Dynatrace Operator, you can create a DynaKube custom resource.\n\nFirst, please add a Secret within the Project you've deployed the Dynatrace Operator to, which would contain your API and PaaS tokens. Create tokens of type *Dynatrace API* (`API_TOKEN`) and *Platform as a Service* (`PAAS_TOKEN`) and use their values in the following commands respectively.\n\nFor assistance please refer to [Create user-generated access tokens](https://www.dynatrace.com/support/help/shortlink/token#create-user-generated-access-tokens).\n\n``` $ oc -n <project> create secret generic dynakube --from-literal=\"apiToken=API_TOKEN\" --from-literal=\"paasToken=PAAS_TOKEN\" ```\n\nYou may update this Secret at any time to rotate the tokens.\n\nAfter creation of the secret add the DynaKube object in the project where the Dynatrace Operator has been deployed, configured to your needs.\n\n### Required Parameters\n* `apiUrl` - provide the URL to the API of your Dynatrace environment. In Dynatrace SaaS it will look like `https://<ENVIRONMENTID>.live.dynatrace.com/api` . In Dynatrace Managed like `https://<YourDynatraceServerURL>/e/<ENVIRONMENTID>/api` .\n\n### Advanced Options\n* **Disable Certificate Checking** - disable any certificate validation that may interact poorly with proxies with in your cluster\n* **Image Override** - use a copy of the ActiveGate container image from a registry other than Docker's or Red Hat's\n\nFor a complete list of supported parameters please consult the [Operator Deploy Guide](https://www.dynatrace.com/support/help/shortlink/openshift-deploy).\n\n### Help\nYou can find more about our instructions in our [documentation](https://www.dynatrace.com/support/help/shortlink/openshift-deploy#install-dynatrace-operator).\n",
      "csv_display_name": "Dynatrace Operator",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-operator.v0.8.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T15:43:29.228000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "dynatrace-operator",
      "provided_apis": [
        {
          "group": "dynatrace.com",
          "kind": "DynaKube",
          "plural": "dynakubes",
          "version": "v1beta1"
        },
        {
          "group": "dynatrace.com",
          "kind": "DynaKube",
          "plural": "dynakubes",
          "version": "v1alpha1"
        }
      ],
      "provider": "Dynatrace LLC",
      "related_images": [
        {
          "digest": "sha256:cc0cf5b8aa170750818a4d548ae7adc110c19467b8e0d9453cd29e678fa2e19f",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:cc0cf5b8aa170750818a4d548ae7adc110c19467b8e0d9453cd29e678fa2e19f",
          "name": "dynatrace-operator"
        },
        {
          "digest": "sha256:cc0cf5b8aa170750818a4d548ae7adc110c19467b8e0d9453cd29e678fa2e19f",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:cc0cf5b8aa170750818a4d548ae7adc110c19467b8e0d9453cd29e678fa2e19f",
          "name": "dynatrace-operator-cc0cf5b8aa170750818a4d548ae7adc110c19467b8e0d9453cd29e678fa2e19f-annotation"
        },
        {
          "digest": "sha256:cc0cf5b8aa170750818a4d548ae7adc110c19467b8e0d9453cd29e678fa2e19f",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:cc0cf5b8aa170750818a4d548ae7adc110c19467b8e0d9453cd29e678fa2e19f",
          "name": "webhook"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.8.2",
      "version_original": "0.8.2"
    },
    {
      "_id": "630e3a3e9a688b03985e62c6",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:59c0362ab55e0789db2c9e55164256ccba6fccab8127822eab1a979c93992fc2",
      "bundle_path_digest": "sha256:59c0362ab55e0789db2c9e55164256ccba6fccab8127822eab1a979c93992fc2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-30T16:26:38.364000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T16:26:38.364000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator-ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2-annotation"
        },
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:bc828351c81b6efba7a3f6ebcf33489a09bdba3905e33e1fa9bf2af2e4ad180d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:bc828351c81b6efba7a3f6ebcf33489a09bdba3905e33e1fa9bf2af2e4ad180d",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "8.6.2",
      "version_original": "8.6.2"
    },
    {
      "_id": "630e3a4049457efb8bcc82a5",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:b26e8e4586fb89ce91a82f4de871b1a75ebe53ccb745a1a69e2509390b98742e",
      "bundle_path_digest": "sha256:b26e8e4586fb89ce91a82f4de871b1a75ebe53ccb745a1a69e2509390b98742e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-30T16:26:40.571000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.2-beta.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T16:26:40.571000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator-ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2-annotation"
        },
        {
          "digest": "sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:5837627733a3ca7b2df5272b2cb9e3ae1751c28b08d956674304c7b2424fb94c",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:5837627733a3ca7b2df5272b2cb9e3ae1751c28b08d956674304c7b2424fb94c",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "8.6.2-beta.1",
      "version_original": "8.6.2-beta.1"
    },
    {
      "_id": "630e3a631e0b69b276b81bea",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:b26e8e4586fb89ce91a82f4de871b1a75ebe53ccb745a1a69e2509390b98742e",
      "bundle_path_digest": "sha256:b26e8e4586fb89ce91a82f4de871b1a75ebe53ccb745a1a69e2509390b98742e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-30T16:27:15.795000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.2-beta.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T16:27:15.795000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator-ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2-annotation"
        },
        {
          "digest": "sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:5837627733a3ca7b2df5272b2cb9e3ae1751c28b08d956674304c7b2424fb94c",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:5837627733a3ca7b2df5272b2cb9e3ae1751c28b08d956674304c7b2424fb94c",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "8.6.2-beta.1",
      "version_original": "8.6.2-beta.1"
    },
    {
      "_id": "630e3a66a73163225d23e981",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:59c0362ab55e0789db2c9e55164256ccba6fccab8127822eab1a979c93992fc2",
      "bundle_path_digest": "sha256:59c0362ab55e0789db2c9e55164256ccba6fccab8127822eab1a979c93992fc2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-30T16:27:18.718000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T16:27:18.718000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator-ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2-annotation"
        },
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:bc828351c81b6efba7a3f6ebcf33489a09bdba3905e33e1fa9bf2af2e4ad180d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:bc828351c81b6efba7a3f6ebcf33489a09bdba3905e33e1fa9bf2af2e4ad180d",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "8.6.2",
      "version_original": "8.6.2"
    },
    {
      "_id": "630e3b39a73163225d23e9fa",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:59c0362ab55e0789db2c9e55164256ccba6fccab8127822eab1a979c93992fc2",
      "bundle_path_digest": "sha256:59c0362ab55e0789db2c9e55164256ccba6fccab8127822eab1a979c93992fc2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-30T16:30:49.521000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T16:30:49.521000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator-ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2-annotation"
        },
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:bc828351c81b6efba7a3f6ebcf33489a09bdba3905e33e1fa9bf2af2e4ad180d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:bc828351c81b6efba7a3f6ebcf33489a09bdba3905e33e1fa9bf2af2e4ad180d",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.6.2",
      "version_original": "8.6.2"
    },
    {
      "_id": "630e3b451e0b69b276b81c6b",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:b26e8e4586fb89ce91a82f4de871b1a75ebe53ccb745a1a69e2509390b98742e",
      "bundle_path_digest": "sha256:b26e8e4586fb89ce91a82f4de871b1a75ebe53ccb745a1a69e2509390b98742e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-30T16:31:01.020000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.2-beta.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T16:31:01.020000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator-ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2-annotation"
        },
        {
          "digest": "sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:5837627733a3ca7b2df5272b2cb9e3ae1751c28b08d956674304c7b2424fb94c",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:5837627733a3ca7b2df5272b2cb9e3ae1751c28b08d956674304c7b2424fb94c",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.6.2-beta.1",
      "version_original": "8.6.2-beta.1"
    },
    {
      "_id": "630e3c1a49457efb8bcc83a2",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:b26e8e4586fb89ce91a82f4de871b1a75ebe53ccb745a1a69e2509390b98742e",
      "bundle_path_digest": "sha256:b26e8e4586fb89ce91a82f4de871b1a75ebe53ccb745a1a69e2509390b98742e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-30T16:34:34.811000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.2-beta.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T16:34:34.811000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator-ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2-annotation"
        },
        {
          "digest": "sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:5837627733a3ca7b2df5272b2cb9e3ae1751c28b08d956674304c7b2424fb94c",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:5837627733a3ca7b2df5272b2cb9e3ae1751c28b08d956674304c7b2424fb94c",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "8.6.2-beta.1",
      "version_original": "8.6.2-beta.1"
    },
    {
      "_id": "630e3c1b49457efb8bcc83a4",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:59c0362ab55e0789db2c9e55164256ccba6fccab8127822eab1a979c93992fc2",
      "bundle_path_digest": "sha256:59c0362ab55e0789db2c9e55164256ccba6fccab8127822eab1a979c93992fc2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-30T16:34:35.673000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T16:34:35.673000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator-ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2-annotation"
        },
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:bc828351c81b6efba7a3f6ebcf33489a09bdba3905e33e1fa9bf2af2e4ad180d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:bc828351c81b6efba7a3f6ebcf33489a09bdba3905e33e1fa9bf2af2e4ad180d",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "8.6.2",
      "version_original": "8.6.2"
    },
    {
      "_id": "630e3dc7c776c5d7a513549d",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:59c0362ab55e0789db2c9e55164256ccba6fccab8127822eab1a979c93992fc2",
      "bundle_path_digest": "sha256:59c0362ab55e0789db2c9e55164256ccba6fccab8127822eab1a979c93992fc2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-30T16:41:43.850000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T16:41:43.850000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator-ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2-annotation"
        },
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:bc828351c81b6efba7a3f6ebcf33489a09bdba3905e33e1fa9bf2af2e4ad180d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:bc828351c81b6efba7a3f6ebcf33489a09bdba3905e33e1fa9bf2af2e4ad180d",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "8.6.2",
      "version_original": "8.6.2"
    },
    {
      "_id": "630e3dce1e0b69b276b81df5",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:b26e8e4586fb89ce91a82f4de871b1a75ebe53ccb745a1a69e2509390b98742e",
      "bundle_path_digest": "sha256:b26e8e4586fb89ce91a82f4de871b1a75ebe53ccb745a1a69e2509390b98742e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-30T16:41:50.725000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.2-beta.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-30T16:41:50.725000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator-ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2-annotation"
        },
        {
          "digest": "sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:5837627733a3ca7b2df5272b2cb9e3ae1751c28b08d956674304c7b2424fb94c",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:5837627733a3ca7b2df5272b2cb9e3ae1751c28b08d956674304c7b2424fb94c",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "8.6.2-beta.1",
      "version_original": "8.6.2-beta.1"
    },
    {
      "_id": "630f60aac6b54492b46e1474",
      "alm_examples": [
        {
          "api_version": "csi.hpe.com/v1",
          "kind": "XSPC",
          "metadata": {
            "name": "xspc",
            "namespace": "kube-system"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/xspc-csi-operator-bundle@sha256:b54e3b8f7018ac1c40d0891e9be3aa37f7c80a9dce00f94415211a25300ab46c",
      "bundle_path_digest": "sha256:b54e3b8f7018ac1c40d0891e9be3aa37f7c80a9dce00f94415211a25300ab46c",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-31T13:22:50.240000+00:00",
      "csv_description": "## About\nHPE XP Storage Plug-in for Containers (XSPC) is a plugin that integrates HPE XP storage into Kubernetes based clusters.\nXSPC provides dynamic persistent volume provisioning capabilities from HPE's block storage arrays.",
      "csv_display_name": "HPE XP Storage Plug-in for Containers",
      "csv_metadata_description": "",
      "csv_name": "xspc-operator.1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-31T13:22:50.240000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "xspc-operator",
      "provided_apis": [
        {
          "group": "csi.hpe.com",
          "kind": "XSPC",
          "plural": "xspcs",
          "version": "v1"
        }
      ],
      "provider": "Provider Name",
      "related_images": [
        {
          "digest": "sha256:8e2af23a2cbecf0fedb952649b9b899eb2c7559a45841a357e5d7fbbb35836a5",
          "image": "registry.connect.redhat.com/hpestorage/xspc-csi-driver-operator@sha256:8e2af23a2cbecf0fedb952649b9b899eb2c7559a45841a357e5d7fbbb35836a5",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "630f60b4c71dfa0ec2daf8bc",
      "alm_examples": [
        {
          "api_version": "csi.hpe.com/v1",
          "kind": "XSPC",
          "metadata": {
            "name": "xspc",
            "namespace": "kube-system"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/xspc-csi-operator-bundle@sha256:b54e3b8f7018ac1c40d0891e9be3aa37f7c80a9dce00f94415211a25300ab46c",
      "bundle_path_digest": "sha256:b54e3b8f7018ac1c40d0891e9be3aa37f7c80a9dce00f94415211a25300ab46c",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-31T13:23:00.334000+00:00",
      "csv_description": "## About\nHPE XP Storage Plug-in for Containers (XSPC) is a plugin that integrates HPE XP storage into Kubernetes based clusters.\nXSPC provides dynamic persistent volume provisioning capabilities from HPE's block storage arrays.",
      "csv_display_name": "HPE XP Storage Plug-in for Containers",
      "csv_metadata_description": "",
      "csv_name": "xspc-operator.1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-31T13:23:00.334000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "xspc-operator",
      "provided_apis": [
        {
          "group": "csi.hpe.com",
          "kind": "XSPC",
          "plural": "xspcs",
          "version": "v1"
        }
      ],
      "provider": "Provider Name",
      "related_images": [
        {
          "digest": "sha256:8e2af23a2cbecf0fedb952649b9b899eb2c7559a45841a357e5d7fbbb35836a5",
          "image": "registry.connect.redhat.com/hpestorage/xspc-csi-driver-operator@sha256:8e2af23a2cbecf0fedb952649b9b899eb2c7559a45841a357e5d7fbbb35836a5",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "630f648f11e1edadf38ff1be",
      "alm_examples": [
        {
          "api_version": "csi.hpe.com/v1",
          "kind": "XSPC",
          "metadata": {
            "name": "xspc",
            "namespace": "kube-system"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/xspc-csi-operator-bundle@sha256:b54e3b8f7018ac1c40d0891e9be3aa37f7c80a9dce00f94415211a25300ab46c",
      "bundle_path_digest": "sha256:b54e3b8f7018ac1c40d0891e9be3aa37f7c80a9dce00f94415211a25300ab46c",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-31T13:39:27.542000+00:00",
      "csv_description": "## About\nHPE XP Storage Plug-in for Containers (XSPC) is a plugin that integrates HPE XP storage into Kubernetes based clusters.\nXSPC provides dynamic persistent volume provisioning capabilities from HPE's block storage arrays.",
      "csv_display_name": "HPE XP Storage Plug-in for Containers",
      "csv_metadata_description": "",
      "csv_name": "xspc-operator.1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-31T13:39:27.542000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "xspc-operator",
      "provided_apis": [
        {
          "group": "csi.hpe.com",
          "kind": "XSPC",
          "plural": "xspcs",
          "version": "v1"
        }
      ],
      "provider": "Provider Name",
      "related_images": [
        {
          "digest": "sha256:8e2af23a2cbecf0fedb952649b9b899eb2c7559a45841a357e5d7fbbb35836a5",
          "image": "registry.connect.redhat.com/hpestorage/xspc-csi-driver-operator@sha256:8e2af23a2cbecf0fedb952649b9b899eb2c7559a45841a357e5d7fbbb35836a5",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "630fb7080b9d887c9a3be6a2",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:c6559cc748028d2098791b277d6316570b1985c616a7e3182fc6dde64296aa11",
      "bundle_path_digest": "sha256:c6559cc748028d2098791b277d6316570b1985c616a7e3182fc6dde64296aa11",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-31T19:31:20.472000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-31T19:31:20.472000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "name": "kubeturbo-operator-352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec-annotation"
        },
        {
          "digest": "sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:acbf1a49c061d80c76468137991816401b1c43f4921179013c682d6dfcf814fe",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:acbf1a49c061d80c76468137991816401b1c43f4921179013c682d6dfcf814fe",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.6.1",
      "version_original": "8.6.1"
    },
    {
      "_id": "630fb7090b9d887c9a3be6a4",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:5884d075419f55d2df891c5efaf1613daf29a7998838deb916c5b599af4170c2",
      "bundle_path_digest": "sha256:5884d075419f55d2df891c5efaf1613daf29a7998838deb916c5b599af4170c2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-31T19:31:21.063000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.5.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-31T19:31:21.063000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator-e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47-annotation"
        },
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:ef6e5f17c31eb5828b29751591778650c397d89b8de1960b215b34cd2e41810a",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:ef6e5f17c31eb5828b29751591778650c397d89b8de1960b215b34cd2e41810a",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.5.4",
      "version_original": "8.5.4"
    },
    {
      "_id": "630fb70924cf667a608ff319",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:b5e9c7c6ef879adb58154bfa52ec7c657e4bd0cdc643031037d9395051abdb79",
      "bundle_path_digest": "sha256:b5e9c7c6ef879adb58154bfa52ec7c657e4bd0cdc643031037d9395051abdb79",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-31T19:31:21.846000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.5.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-31T19:31:21.846000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator-e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47-annotation"
        },
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:7f72251c432f107e4102f91abb17469eedcf02f9a7860d7ec7c9bd0ad77746ae",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:7f72251c432f107e4102f91abb17469eedcf02f9a7860d7ec7c9bd0ad77746ae",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.5.2",
      "version_original": "8.5.2"
    },
    {
      "_id": "630fb70a0ea28cf6b4440c84",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:bea7192e07456b6f23901e623137f7bde8c3a2313d80c3c6a8007f04e1fb3687",
      "bundle_path_digest": "sha256:bea7192e07456b6f23901e623137f7bde8c3a2313d80c3c6a8007f04e1fb3687",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-31T19:31:22.388000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-31T19:31:22.388000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:08821c5d0be33de5170acf94ffd7a6cd92b9d2a26922af1f3869b502087f7f62",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:08821c5d0be33de5170acf94ffd7a6cd92b9d2a26922af1f3869b502087f7f62",
          "name": "kubeturbo-operator-08821c5d0be33de5170acf94ffd7a6cd92b9d2a26922af1f3869b502087f7f62-annotation"
        },
        {
          "digest": "sha256:08821c5d0be33de5170acf94ffd7a6cd92b9d2a26922af1f3869b502087f7f62",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:08821c5d0be33de5170acf94ffd7a6cd92b9d2a26922af1f3869b502087f7f62",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:1af800b95cb2a80edb0359b46ab10d609acb3ebe062e019f9dfc7c4b40ae58c2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:1af800b95cb2a80edb0359b46ab10d609acb3ebe062e019f9dfc7c4b40ae58c2",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.6.0",
      "version_original": "8.6.0"
    },
    {
      "_id": "630fb70a0b9d887c9a3be6a7",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:e5bf556da7ffdcd3e2e9c6e543d8ef7f1844216774e703dfec53e466e609d854",
      "bundle_path_digest": "sha256:e5bf556da7ffdcd3e2e9c6e543d8ef7f1844216774e703dfec53e466e609d854",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-31T19:31:22.898000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-31T19:31:22.898000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator-e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47-annotation"
        },
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:f78525afc39849d143c7fbe8992b95a26cb0d3443bc6a8fe7fbe49145887c8d7",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:f78525afc39849d143c7fbe8992b95a26cb0d3443bc6a8fe7fbe49145887c8d7",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.5.1",
      "version_original": "8.5.1"
    },
    {
      "_id": "630fb70b8feab48c84dafad2",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:23f06fa446df0253aeacaf9f063d959c91e56f8a210ac493dc47bc238bb84bfe",
      "bundle_path_digest": "sha256:23f06fa446df0253aeacaf9f063d959c91e56f8a210ac493dc47bc238bb84bfe",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-31T19:31:23.599000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.5.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-31T19:31:23.599000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator-e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47-annotation"
        },
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:e08debe4fcac4b377e86ed57c9587057e8f99d37c5bd8acfe94dfa17605d0759",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:e08debe4fcac4b377e86ed57c9587057e8f99d37c5bd8acfe94dfa17605d0759",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.5.5",
      "version_original": "8.5.5"
    },
    {
      "_id": "630fb70c24cf667a608ff31c",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:9c5c820d7d1200e7e66d6edc352ce8582c75d4545ae096e59ce51cc01afef550",
      "bundle_path_digest": "sha256:9c5c820d7d1200e7e66d6edc352ce8582c75d4545ae096e59ce51cc01afef550",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-31T19:31:24.343000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.5.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-31T19:31:24.343000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator-e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47-annotation"
        },
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:0d92a7ff9b33c188d47974f97199551f743e04b23d98663e95f1d239f1754b08",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:0d92a7ff9b33c188d47974f97199551f743e04b23d98663e95f1d239f1754b08",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.5.7",
      "version_original": "8.5.7"
    },
    {
      "_id": "630fb70c0b9d887c9a3be6ab",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:d01e9da1a9897bb6f12ad4034bea571b53ea08d53d0fd7eebe30298a44ea4f65",
      "bundle_path_digest": "sha256:d01e9da1a9897bb6f12ad4034bea571b53ea08d53d0fd7eebe30298a44ea4f65",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-31T19:31:24.811000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-31T19:31:24.811000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator-e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47-annotation"
        },
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:fc69790f6713bd3f2f4d1cefd9eadac7ebe776cd0f83ae1ec523d80f2c276f59",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:fc69790f6713bd3f2f4d1cefd9eadac7ebe776cd0f83ae1ec523d80f2c276f59",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.5.0",
      "version_original": "8.5.0"
    },
    {
      "_id": "630fb70d0b9d887c9a3be6af",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:c4611b427d4fcc9b7ae59ff170cb2336c162cd3a1672d19f41305aa4fa7aaa6b",
      "bundle_path_digest": "sha256:c4611b427d4fcc9b7ae59ff170cb2336c162cd3a1672d19f41305aa4fa7aaa6b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-31T19:31:25.699000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.5.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-31T19:31:25.699000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator-e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47-annotation"
        },
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:c766014cd4f4ba08c4daec2486866e89428c35f121661d40ab7f9876db639dd4",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:c766014cd4f4ba08c4daec2486866e89428c35f121661d40ab7f9876db639dd4",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.5.3",
      "version_original": "8.5.3"
    },
    {
      "_id": "630fb70e0ea28cf6b4440c89",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:65fd30b6c03b1f3eb44d8efb1407a7e0ba9e861adf3b9196640371482ced1df4",
      "bundle_path_digest": "sha256:65fd30b6c03b1f3eb44d8efb1407a7e0ba9e861adf3b9196640371482ced1df4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-31T19:31:26.317000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.5.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-31T19:31:26.317000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator-e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47-annotation"
        },
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:8aa3d62bb82b65ba95daf3170c316485486e7ca8052b5b525566b7a15b6f08e5",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:8aa3d62bb82b65ba95daf3170c316485486e7ca8052b5b525566b7a15b6f08e5",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.5.6",
      "version_original": "8.5.6"
    },
    {
      "_id": "630fb70e06be083b4b6e1449",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:b26e8e4586fb89ce91a82f4de871b1a75ebe53ccb745a1a69e2509390b98742e",
      "bundle_path_digest": "sha256:b26e8e4586fb89ce91a82f4de871b1a75ebe53ccb745a1a69e2509390b98742e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-31T19:31:26.862000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.2-beta.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-31T19:31:26.862000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator-ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2-annotation"
        },
        {
          "digest": "sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:5837627733a3ca7b2df5272b2cb9e3ae1751c28b08d956674304c7b2424fb94c",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:5837627733a3ca7b2df5272b2cb9e3ae1751c28b08d956674304c7b2424fb94c",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.6.2-beta.1",
      "version_original": "8.6.2-beta.1"
    },
    {
      "_id": "630fbded8800d672b06e1590",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:b26e8e4586fb89ce91a82f4de871b1a75ebe53ccb745a1a69e2509390b98742e",
      "bundle_path_digest": "sha256:b26e8e4586fb89ce91a82f4de871b1a75ebe53ccb745a1a69e2509390b98742e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-31T20:00:45.390000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.2-beta.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-31T20:00:45.390000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator-ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2-annotation"
        },
        {
          "digest": "sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:352267882f0bc348290f860892831952299d64509b7e9722d6a5a847811ecdec",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:5837627733a3ca7b2df5272b2cb9e3ae1751c28b08d956674304c7b2424fb94c",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:5837627733a3ca7b2df5272b2cb9e3ae1751c28b08d956674304c7b2424fb94c",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.6.2-beta.1",
      "version_original": "8.6.2-beta.1"
    },
    {
      "_id": "630fbdf00b9d887c9a3be9b6",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:59c0362ab55e0789db2c9e55164256ccba6fccab8127822eab1a979c93992fc2",
      "bundle_path_digest": "sha256:59c0362ab55e0789db2c9e55164256ccba6fccab8127822eab1a979c93992fc2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-31T20:00:48.693000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-31T20:00:48.693000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator-ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2-annotation"
        },
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:bc828351c81b6efba7a3f6ebcf33489a09bdba3905e33e1fa9bf2af2e4ad180d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:bc828351c81b6efba7a3f6ebcf33489a09bdba3905e33e1fa9bf2af2e4ad180d",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.6.2",
      "version_original": "8.6.2"
    },
    {
      "_id": "6310128848201531b96e13ee",
      "alm_examples": [
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "ClusterWideAppDirectorAgent",
          "metadata": {
            "name": "guvnor"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "namespace": "app-director"
          }
        },
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "AppDirectorAgent",
          "metadata": {
            "name": "guvnor",
            "namespace": "app-director"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "managedNamespaces": [
              "dev"
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/randoli/app-director-operator@sha256:d469f76f82764a406530fd086447b9228bfb4eb17204c1f3c8e7d6995b4f2261",
      "bundle_path_digest": "sha256:d469f76f82764a406530fd086447b9228bfb4eb17204c1f3c8e7d6995b4f2261",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.8.0",
      "creation_date": "2022-09-01T02:01:44.778000+00:00",
      "csv_description": "App Director\u00ae Platform enables developers to Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters. The App Director Agent (Guvnor) connects with the App Director\u00ae Platform to receive commands and send back events. The agent can be scoped to one or more namespaces or cluster-wide. More information can be found at https://www.randoli.ca/app-director-overview. Tekton Pipelines are a pre-requisite for this operator to work. If not already installed, the operator will install the correct version on initial start-up.",
      "csv_display_name": "App Director",
      "csv_metadata_description": "Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters",
      "csv_name": "app-director-operator.v0.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-01T02:01:44.778000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "app-director-operator",
      "provided_apis": [
        {
          "group": "appdirector.randoli.ca",
          "kind": "AppDirectorAgent",
          "plural": "appdirectoragents",
          "version": "v1beta1"
        },
        {
          "group": "appdirector.randoli.ca",
          "kind": "ClusterWideAppDirectorAgent",
          "plural": "clusterwideappdirectoragents",
          "version": "v1beta1"
        }
      ],
      "provider": "Randoli",
      "related_images": [
        {
          "digest": "sha256:891e7c163d5fe10ceb8d60781a3694c7c134f70bbb4094af0b43352a141a8cfe",
          "image": "docker.io/randoli/app-director-operator:0.8.0@sha256:891e7c163d5fe10ceb8d60781a3694c7c134f70bbb4094af0b43352a141a8cfe",
          "name": "app-director-operator:0.8.0-891e7c163d5fe10ceb8d60781a3694c7c134f70bbb4094af0b43352a141a8cfe-annotation"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:891e7c163d5fe10ceb8d60781a3694c7c134f70bbb4094af0b43352a141a8cfe",
          "image": "docker.io/randoli/app-director-operator:0.8.0@sha256:891e7c163d5fe10ceb8d60781a3694c7c134f70bbb4094af0b43352a141a8cfe",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.8.0",
      "version_original": "0.8.0"
    },
    {
      "_id": "6310136f279a8cd9593be840",
      "alm_examples": [
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "ClusterWideAppDirectorAgent",
          "metadata": {
            "name": "guvnor"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "namespace": "app-director"
          }
        },
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "AppDirectorAgent",
          "metadata": {
            "name": "guvnor",
            "namespace": "app-director"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "managedNamespaces": [
              "dev"
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/randoli/app-director-operator@sha256:d469f76f82764a406530fd086447b9228bfb4eb17204c1f3c8e7d6995b4f2261",
      "bundle_path_digest": "sha256:d469f76f82764a406530fd086447b9228bfb4eb17204c1f3c8e7d6995b4f2261",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.8.0",
      "creation_date": "2022-09-01T02:05:35.313000+00:00",
      "csv_description": "App Director\u00ae Platform enables developers to Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters. The App Director Agent (Guvnor) connects with the App Director\u00ae Platform to receive commands and send back events. The agent can be scoped to one or more namespaces or cluster-wide. More information can be found at https://www.randoli.ca/app-director-overview. Tekton Pipelines are a pre-requisite for this operator to work. If not already installed, the operator will install the correct version on initial start-up.",
      "csv_display_name": "App Director",
      "csv_metadata_description": "Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters",
      "csv_name": "app-director-operator.v0.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-01T02:05:35.313000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "app-director-operator",
      "provided_apis": [
        {
          "group": "appdirector.randoli.ca",
          "kind": "AppDirectorAgent",
          "plural": "appdirectoragents",
          "version": "v1beta1"
        },
        {
          "group": "appdirector.randoli.ca",
          "kind": "ClusterWideAppDirectorAgent",
          "plural": "clusterwideappdirectoragents",
          "version": "v1beta1"
        }
      ],
      "provider": "Randoli",
      "related_images": [
        {
          "digest": "sha256:891e7c163d5fe10ceb8d60781a3694c7c134f70bbb4094af0b43352a141a8cfe",
          "image": "docker.io/randoli/app-director-operator:0.8.0@sha256:891e7c163d5fe10ceb8d60781a3694c7c134f70bbb4094af0b43352a141a8cfe",
          "name": "app-director-operator:0.8.0-891e7c163d5fe10ceb8d60781a3694c7c134f70bbb4094af0b43352a141a8cfe-annotation"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:891e7c163d5fe10ceb8d60781a3694c7c134f70bbb4094af0b43352a141a8cfe",
          "image": "docker.io/randoli/app-director-operator:0.8.0@sha256:891e7c163d5fe10ceb8d60781a3694c7c134f70bbb4094af0b43352a141a8cfe",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.8.0",
      "version_original": "0.8.0"
    },
    {
      "_id": "6310155e985940d2bc3be55d",
      "alm_examples": [
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "ClusterWideAppDirectorAgent",
          "metadata": {
            "name": "guvnor"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "namespace": "app-director"
          }
        },
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "AppDirectorAgent",
          "metadata": {
            "name": "guvnor",
            "namespace": "app-director"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "managedNamespaces": [
              "dev"
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/randoli/app-director-operator@sha256:d469f76f82764a406530fd086447b9228bfb4eb17204c1f3c8e7d6995b4f2261",
      "bundle_path_digest": "sha256:d469f76f82764a406530fd086447b9228bfb4eb17204c1f3c8e7d6995b4f2261",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.8.0",
      "creation_date": "2022-09-01T02:13:50.103000+00:00",
      "csv_description": "App Director\u00ae Platform enables developers to Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters. The App Director Agent (Guvnor) connects with the App Director\u00ae Platform to receive commands and send back events. The agent can be scoped to one or more namespaces or cluster-wide. More information can be found at https://www.randoli.ca/app-director-overview. Tekton Pipelines are a pre-requisite for this operator to work. If not already installed, the operator will install the correct version on initial start-up.",
      "csv_display_name": "App Director",
      "csv_metadata_description": "Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters",
      "csv_name": "app-director-operator.v0.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-01T02:13:50.103000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "app-director-operator",
      "provided_apis": [
        {
          "group": "appdirector.randoli.ca",
          "kind": "AppDirectorAgent",
          "plural": "appdirectoragents",
          "version": "v1beta1"
        },
        {
          "group": "appdirector.randoli.ca",
          "kind": "ClusterWideAppDirectorAgent",
          "plural": "clusterwideappdirectoragents",
          "version": "v1beta1"
        }
      ],
      "provider": "Randoli",
      "related_images": [
        {
          "digest": "sha256:891e7c163d5fe10ceb8d60781a3694c7c134f70bbb4094af0b43352a141a8cfe",
          "image": "docker.io/randoli/app-director-operator:0.8.0@sha256:891e7c163d5fe10ceb8d60781a3694c7c134f70bbb4094af0b43352a141a8cfe",
          "name": "app-director-operator:0.8.0-891e7c163d5fe10ceb8d60781a3694c7c134f70bbb4094af0b43352a141a8cfe-annotation"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:891e7c163d5fe10ceb8d60781a3694c7c134f70bbb4094af0b43352a141a8cfe",
          "image": "docker.io/randoli/app-director-operator:0.8.0@sha256:891e7c163d5fe10ceb8d60781a3694c7c134f70bbb4094af0b43352a141a8cfe",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.8.0",
      "version_original": "0.8.0"
    },
    {
      "_id": "63101cf7499018a313daf936",
      "alm_examples": [
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "ClusterWideAppDirectorAgent",
          "metadata": {
            "name": "guvnor"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "namespace": "app-director"
          }
        },
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "AppDirectorAgent",
          "metadata": {
            "name": "guvnor",
            "namespace": "app-director"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "managedNamespaces": [
              "dev"
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/randoli/app-director-operator@sha256:d469f76f82764a406530fd086447b9228bfb4eb17204c1f3c8e7d6995b4f2261",
      "bundle_path_digest": "sha256:d469f76f82764a406530fd086447b9228bfb4eb17204c1f3c8e7d6995b4f2261",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.8.0",
      "creation_date": "2022-09-01T02:46:15.495000+00:00",
      "csv_description": "App Director\u00ae Platform enables developers to Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters. The App Director Agent (Guvnor) connects with the App Director\u00ae Platform to receive commands and send back events. The agent can be scoped to one or more namespaces or cluster-wide. More information can be found at https://www.randoli.ca/app-director-overview. Tekton Pipelines are a pre-requisite for this operator to work. If not already installed, the operator will install the correct version on initial start-up.",
      "csv_display_name": "App Director",
      "csv_metadata_description": "Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters",
      "csv_name": "app-director-operator.v0.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-01T02:46:15.495000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "app-director-operator",
      "provided_apis": [
        {
          "group": "appdirector.randoli.ca",
          "kind": "AppDirectorAgent",
          "plural": "appdirectoragents",
          "version": "v1beta1"
        },
        {
          "group": "appdirector.randoli.ca",
          "kind": "ClusterWideAppDirectorAgent",
          "plural": "clusterwideappdirectoragents",
          "version": "v1beta1"
        }
      ],
      "provider": "Randoli",
      "related_images": [
        {
          "digest": "sha256:891e7c163d5fe10ceb8d60781a3694c7c134f70bbb4094af0b43352a141a8cfe",
          "image": "docker.io/randoli/app-director-operator:0.8.0@sha256:891e7c163d5fe10ceb8d60781a3694c7c134f70bbb4094af0b43352a141a8cfe",
          "name": "app-director-operator:0.8.0-891e7c163d5fe10ceb8d60781a3694c7c134f70bbb4094af0b43352a141a8cfe-annotation"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:891e7c163d5fe10ceb8d60781a3694c7c134f70bbb4094af0b43352a141a8cfe",
          "image": "docker.io/randoli/app-director-operator:0.8.0@sha256:891e7c163d5fe10ceb8d60781a3694c7c134f70bbb4094af0b43352a141a8cfe",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.8.0",
      "version_original": "0.8.0"
    },
    {
      "_id": "63101ee6a1804ab2b56e14d0",
      "alm_examples": [
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "ClusterWideAppDirectorAgent",
          "metadata": {
            "name": "guvnor"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "namespace": "app-director"
          }
        },
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "AppDirectorAgent",
          "metadata": {
            "name": "guvnor",
            "namespace": "app-director"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "managedNamespaces": [
              "dev"
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/randoli/app-director-operator@sha256:d469f76f82764a406530fd086447b9228bfb4eb17204c1f3c8e7d6995b4f2261",
      "bundle_path_digest": "sha256:d469f76f82764a406530fd086447b9228bfb4eb17204c1f3c8e7d6995b4f2261",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.8.0",
      "creation_date": "2022-09-01T02:54:30.643000+00:00",
      "csv_description": "App Director\u00ae Platform enables developers to Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters. The App Director Agent (Guvnor) connects with the App Director\u00ae Platform to receive commands and send back events. The agent can be scoped to one or more namespaces or cluster-wide. More information can be found at https://www.randoli.ca/app-director-overview. Tekton Pipelines are a pre-requisite for this operator to work. If not already installed, the operator will install the correct version on initial start-up.",
      "csv_display_name": "App Director",
      "csv_metadata_description": "Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters",
      "csv_name": "app-director-operator.v0.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-01T02:54:30.643000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "app-director-operator",
      "provided_apis": [
        {
          "group": "appdirector.randoli.ca",
          "kind": "AppDirectorAgent",
          "plural": "appdirectoragents",
          "version": "v1beta1"
        },
        {
          "group": "appdirector.randoli.ca",
          "kind": "ClusterWideAppDirectorAgent",
          "plural": "clusterwideappdirectoragents",
          "version": "v1beta1"
        }
      ],
      "provider": "Randoli",
      "related_images": [
        {
          "digest": "sha256:891e7c163d5fe10ceb8d60781a3694c7c134f70bbb4094af0b43352a141a8cfe",
          "image": "docker.io/randoli/app-director-operator:0.8.0@sha256:891e7c163d5fe10ceb8d60781a3694c7c134f70bbb4094af0b43352a141a8cfe",
          "name": "app-director-operator:0.8.0-891e7c163d5fe10ceb8d60781a3694c7c134f70bbb4094af0b43352a141a8cfe-annotation"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:891e7c163d5fe10ceb8d60781a3694c7c134f70bbb4094af0b43352a141a8cfe",
          "image": "docker.io/randoli/app-director-operator:0.8.0@sha256:891e7c163d5fe10ceb8d60781a3694c7c134f70bbb4094af0b43352a141a8cfe",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.8.0",
      "version_original": "0.8.0"
    },
    {
      "_id": "6311ee58a10620cfad3be75d",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:71d1f6e4cf845d4926ce95b454118457911d094038f586b526005e49176d6073",
      "bundle_path_digest": "sha256:71d1f6e4cf845d4926ce95b454118457911d094038f586b526005e49176d6073",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-02T11:51:52.064000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-stable.2.10.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-02T11:51:52.064000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "version": "v1"
        }
      ],
      "provider": "Trilio",
      "related_images": [
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "control-plane-3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820-annotation"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:75f64cb49df3b5a82fdab3026276e91287f76c3aedc338d84d1ccd22ba8616df",
          "image": "registry.connect.redhat.com/trilio/web@sha256:75f64cb49df3b5a82fdab3026276e91287f76c3aedc338d84d1ccd22ba8616df",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "dex-init"
        },
        {
          "digest": "sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "name": "metamover"
        },
        {
          "digest": "sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "name": "datamover"
        },
        {
          "digest": "sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "name": "target_browser"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "hook"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "image": "registry.connect.redhat.com/trilio/minio@sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "name": "minio"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "dex"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "tvk_init"
        }
      ],
      "replaces": null,
      "skip_range": "<2.10.5",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "2.10.5",
      "version_original": "2.10.5"
    },
    {
      "_id": "6311ee69ab51c7f8321b85ab",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:71d1f6e4cf845d4926ce95b454118457911d094038f586b526005e49176d6073",
      "bundle_path_digest": "sha256:71d1f6e4cf845d4926ce95b454118457911d094038f586b526005e49176d6073",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-02T11:52:09.639000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-stable.2.10.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-02T11:52:09.639000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "plural": "clusterbackupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "plural": "clusterbackups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "plural": "clusterrestores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        }
      ],
      "provider": "Trilio",
      "related_images": [
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "control-plane-3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820-annotation"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:75f64cb49df3b5a82fdab3026276e91287f76c3aedc338d84d1ccd22ba8616df",
          "image": "registry.connect.redhat.com/trilio/web@sha256:75f64cb49df3b5a82fdab3026276e91287f76c3aedc338d84d1ccd22ba8616df",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "dex-init"
        },
        {
          "digest": "sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "name": "metamover"
        },
        {
          "digest": "sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "name": "datamover"
        },
        {
          "digest": "sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "name": "target_browser"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "hook"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "image": "registry.connect.redhat.com/trilio/minio@sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "name": "minio"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "dex"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "tvk_init"
        }
      ],
      "replaces": null,
      "skip_range": "<2.10.5",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.10.5",
      "version_original": "2.10.5"
    },
    {
      "_id": "6311ee707967f2ab668ff326",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:71d1f6e4cf845d4926ce95b454118457911d094038f586b526005e49176d6073",
      "bundle_path_digest": "sha256:71d1f6e4cf845d4926ce95b454118457911d094038f586b526005e49176d6073",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-02T11:52:16.620000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-stable.2.10.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-02T11:52:16.620000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "plural": "clusterbackupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "plural": "clusterrestores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "plural": "clusterbackups",
          "version": "v1"
        }
      ],
      "provider": "Trilio",
      "related_images": [
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "control-plane-3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820-annotation"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:75f64cb49df3b5a82fdab3026276e91287f76c3aedc338d84d1ccd22ba8616df",
          "image": "registry.connect.redhat.com/trilio/web@sha256:75f64cb49df3b5a82fdab3026276e91287f76c3aedc338d84d1ccd22ba8616df",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "dex-init"
        },
        {
          "digest": "sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "name": "metamover"
        },
        {
          "digest": "sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "name": "datamover"
        },
        {
          "digest": "sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "name": "target_browser"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "hook"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "image": "registry.connect.redhat.com/trilio/minio@sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "name": "minio"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "dex"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "tvk_init"
        }
      ],
      "replaces": null,
      "skip_range": "<2.10.5",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.10.5",
      "version_original": "2.10.5"
    },
    {
      "_id": "6311eead7967f2ab668ff334",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:71d1f6e4cf845d4926ce95b454118457911d094038f586b526005e49176d6073",
      "bundle_path_digest": "sha256:71d1f6e4cf845d4926ce95b454118457911d094038f586b526005e49176d6073",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-02T11:53:17.720000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-stable.2.10.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-02T11:53:17.720000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "plural": "clusterbackups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "plural": "clusterbackupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "plural": "clusterrestores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        }
      ],
      "provider": "Trilio",
      "related_images": [
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "control-plane-3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820-annotation"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:75f64cb49df3b5a82fdab3026276e91287f76c3aedc338d84d1ccd22ba8616df",
          "image": "registry.connect.redhat.com/trilio/web@sha256:75f64cb49df3b5a82fdab3026276e91287f76c3aedc338d84d1ccd22ba8616df",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "dex-init"
        },
        {
          "digest": "sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "name": "metamover"
        },
        {
          "digest": "sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "name": "datamover"
        },
        {
          "digest": "sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "name": "target_browser"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "hook"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "image": "registry.connect.redhat.com/trilio/minio@sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "name": "minio"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "dex"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "tvk_init"
        }
      ],
      "replaces": null,
      "skip_range": "<2.10.5",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.10.5",
      "version_original": "2.10.5"
    },
    {
      "_id": "6311eef7a10620cfad3be787",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:71d1f6e4cf845d4926ce95b454118457911d094038f586b526005e49176d6073",
      "bundle_path_digest": "sha256:71d1f6e4cf845d4926ce95b454118457911d094038f586b526005e49176d6073",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-02T11:54:31.761000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-stable.2.10.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-02T11:54:31.761000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "plural": "clusterbackupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "plural": "clusterrestores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "plural": "clusterbackups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        }
      ],
      "provider": "Trilio",
      "related_images": [
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "control-plane-3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820-annotation"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:75f64cb49df3b5a82fdab3026276e91287f76c3aedc338d84d1ccd22ba8616df",
          "image": "registry.connect.redhat.com/trilio/web@sha256:75f64cb49df3b5a82fdab3026276e91287f76c3aedc338d84d1ccd22ba8616df",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "dex-init"
        },
        {
          "digest": "sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "name": "metamover"
        },
        {
          "digest": "sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "name": "datamover"
        },
        {
          "digest": "sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "name": "target_browser"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "hook"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "image": "registry.connect.redhat.com/trilio/minio@sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "name": "minio"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "dex"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "tvk_init"
        }
      ],
      "replaces": null,
      "skip_range": "<2.10.5",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.10.5",
      "version_original": "2.10.5"
    },
    {
      "_id": "6311f26e7967f2ab668ff451",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:71d1f6e4cf845d4926ce95b454118457911d094038f586b526005e49176d6073",
      "bundle_path_digest": "sha256:71d1f6e4cf845d4926ce95b454118457911d094038f586b526005e49176d6073",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-02T12:09:18.936000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-stable.2.10.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-02T12:09:18.936000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "plural": "clusterbackups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "plural": "clusterbackupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "plural": "clusterrestores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        }
      ],
      "provider": "Trilio",
      "related_images": [
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "control-plane-3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820-annotation"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:75f64cb49df3b5a82fdab3026276e91287f76c3aedc338d84d1ccd22ba8616df",
          "image": "registry.connect.redhat.com/trilio/web@sha256:75f64cb49df3b5a82fdab3026276e91287f76c3aedc338d84d1ccd22ba8616df",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "dex-init"
        },
        {
          "digest": "sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "name": "metamover"
        },
        {
          "digest": "sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "name": "datamover"
        },
        {
          "digest": "sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:05a6a672bca4f2a057609d1585c023a88d6b3fecb7e55382008f7c9560ebdca5",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:98c38f1b4ab8c47e309994dd38df6f679f6c818fd44f8a39a48717525bb36de2",
          "name": "target_browser"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "hook"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "image": "registry.connect.redhat.com/trilio/minio@sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "name": "minio"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "dex"
        },
        {
          "digest": "sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:3634919392e01a289e694656fe15c545370f201a814a5defd82de06130aec820",
          "name": "tvk_init"
        }
      ],
      "replaces": null,
      "skip_range": "<2.10.5",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.10.5",
      "version_original": "2.10.5"
    },
    {
      "_id": "6312035125579ee0e8ab63d3",
      "alm_examples": [
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecClusterConfig",
          "metadata": {
            "name": "acc100SampleConfig",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "acceleratorSelector": {
              "deviceID": "someDevice",
              "driver": "someDriver",
              "maxVirtualFunctions": 2,
              "pciAddress": "somePciAddress",
              "vendorID": "someVendor"
            },
            "drainSkip": false,
            "nodeSelector": {
              "expectedLabel1": "valueOfExpectedLabel1",
              "expectedLabelN": "valueOfExpectedLabelN"
            },
            "physicalFunction": {
              "bbDevConfig": {
                "acc100": {
                  "downlink4G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 0
                  },
                  "downlink5G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 4
                  },
                  "maxQueueSize": 1024,
                  "numVfBundles": 16,
                  "pfMode": true,
                  "uplink4G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 0
                  },
                  "uplink5G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 4
                  }
                }
              },
              "pfDriver": "pci-pf-stub",
              "vfAmount": 2,
              "vfDriver": "vfio-pci"
            },
            "priority": 100
          }
        },
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecClusterConfig",
          "metadata": {
            "name": "n3000SampleConfig",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "acceleratorSelector": {
              "deviceID": "someDevice",
              "driver": "someDriver",
              "maxVirtualFunctions": 2,
              "pciAddress": "somePciAddress",
              "vendorID": "someVendor"
            },
            "drainSkip": false,
            "nodeSelector": {
              "expectedLabel1": "valueOfExpectedLabel1",
              "expectedLabelN": "valueOfExpectedLabelN"
            },
            "physicalFunction": {
              "bbDevConfig": {
                "n3000": {
                  "downlink": {
                    "bandwidth": 3,
                    "loadBalance": 128,
                    "queues": {
                      "vf0": 16,
                      "vf1": 16,
                      "vf2": 0,
                      "vf3": 0,
                      "vf4": 0,
                      "vf5": 0,
                      "vf6": 0,
                      "vf7": 0
                    }
                  },
                  "flrTimeout": 610,
                  "networkType": "FPGA_5GNR",
                  "pfMode": true,
                  "uplink": {
                    "bandwidth": 3,
                    "loadBalance": 128,
                    "queues": {
                      "vf0": 16,
                      "vf1": 16,
                      "vf2": 0,
                      "vf3": 0,
                      "vf4": 0,
                      "vf5": 0,
                      "vf6": 0,
                      "vf7": 0
                    }
                  }
                }
              },
              "pfDriver": "pci-pf-stub",
              "vfAmount": 2,
              "vfDriver": "vfio-pci"
            },
            "priority": 100
          }
        },
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecNodeConfig",
          "metadata": {
            "name": "acc100-worker",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "drainSkip": false,
            "physicalFunctions": [
              {
                "bbDevConfig": {
                  "acc100": {
                    "downlink4G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 0
                    },
                    "downlink5G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 4
                    },
                    "maxQueueSize": 1024,
                    "numVfBundles": 16,
                    "pfMode": true,
                    "uplink4G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 0
                    },
                    "uplink5G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 4
                    }
                  }
                },
                "pci_addr": "somePciAddress",
                "pf_driver": "pci-pf-stub",
                "vf_amount": 2,
                "vf_driver": "vfio-pci"
              }
            ]
          }
        },
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecNodeConfig",
          "metadata": {
            "name": "n3000-worker",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "drainSkip": false,
            "physicalFunctions": [
              {
                "bbDevConfig": {
                  "n3000": {
                    "downlink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    },
                    "flrTimeout": 610,
                    "networkType": "FPGA_5GNR",
                    "pfMode": true,
                    "uplink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    }
                  }
                },
                "pci_addr": "somePciAddress",
                "pf_driver": "pci-pf-stub",
                "vf_amount": 2,
                "vf_driver": "vfio-pci"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/sriov-fec-operator-bundle@sha256:03fd238d727606de452090fc2cdda4ca77b0912366e36aa38bcd78c2c0d546e8",
      "bundle_path_digest": "sha256:03fd238d727606de452090fc2cdda4ca77b0912366e36aa38bcd78c2c0d546e8",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-02T13:21:21.372000+00:00",
      "csv_description": "The vRAN Dedicated Accelerator ACC100, based on Intel eASIC technology is designed to offload and accelerate the computing-intensive process of forward error correction (FEC) for 4G/LTE and 5G technology, freeing up processing power. Intel eASIC devices are structured ASICs, an intermediate technology between FPGAs and standard application-specific integrated circuits (ASICs). It allows the optimization of data plane performance to reduce total cost of ownership while maintaining a high degree of flexibility.  The Intel ACC100 plays a key role in accelerating 5G and network functions virtualization (NFV) adoption for ecosystem partners such as telecommunications equipment manufacturers (TEMs) virtual network functions (VNF) vendors, system integrators and telcos, to bring scalable and high-performance solutions to market. The Intel ACC100 includes a variant that is design to be Network Equipment Building System (NEBS)-friendly, and features a Root-of-Trust device that helps protect systems from FPGA host security exploits. This document explains how the ACC100 resource can be used on the Smart Edge Open (SEO) platform for accelerating network functions and edge application workloads. We use LTE/5G Forward Error Correction (FEC) as an example workload that accelerates the 5G or 4G L1 base station network function. The same concept and mechanism is applicable for application acceleration workloads like AI and ML on eASIC for Inference applications. The ACC100 supports the O-RAN adopted DPDK BBDev API - an API which Intel contributed to the opensource community to enable choice and TTM for FEC acceleration solutions. The FlexRAN software reference architecture supports the ACC100 which enables users to quickly evaluate and build platforms for the wide range of vRAN networks. Reduces platform power, E2E latency and Intel\u00ae CPU core count requirements as well as increases cell capacity than existing programmable accelerator. Accelerates both 4G and 5G data concurrently.\tLowers development cost using commercial off the shelf (COTS) servers. Accommodates space-constrained implementations via a low-profile PCIe card form factor. Enables a variety of flexible FlexRAN deployments from small cell to macro to Massive MIMO networks. Supports extended temperature for the most challenging of RAN deployment scenario\u2019s.",
      "csv_display_name": "SEO SR-IOV Operator for Wireless FEC Accelerators",
      "csv_metadata_description": "An operator for Intel Wireless FEC Accelerator to orchestrate and manage the resources/devices exposed by a range of Intel's vRAN FEC acceleration devices/hardware within the OpenShift cluster.",
      "csv_name": "sriov-fec.v2.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-02T13:21:21.372000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "sriov-fec",
      "provided_apis": [
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecClusterConfig",
          "version": "v1"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecClusterConfig",
          "version": "v2"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecNodeConfig",
          "version": "v1"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecNodeConfig",
          "version": "v2"
        }
      ],
      "provider": "Intel Corporation",
      "related_images": [
        {
          "digest": "sha256:d87dfc05f054c856549ea7722d9e6c7299b8ce87fbf659a6904c9fbf5a8f2841",
          "image": "registry.connect.redhat.com/intel/sriov-fec-daemon@sha256:d87dfc05f054c856549ea7722d9e6c7299b8ce87fbf659a6904c9fbf5a8f2841",
          "name": "sriov-fec-daemon"
        },
        {
          "digest": "sha256:5055121216aa2e2a8240d1a1a30850077e77c4828d94e1bd02045d640faf1f1d",
          "image": "registry.connect.redhat.com/intel/n3000-labeler@sha256:5055121216aa2e2a8240d1a1a30850077e77c4828d94e1bd02045d640faf1f1d",
          "name": "sriov-fec-labeler"
        },
        {
          "digest": "sha256:5ad615f1256d1d23b159a5a331a31103692dd0293b6f128b9095d0b34c0f6586",
          "image": "registry.redhat.io/openshift4/ose-sriov-network-device-plugin@sha256:5ad615f1256d1d23b159a5a331a31103692dd0293b6f128b9095d0b34c0f6586",
          "name": "sriov-network-device-plugin"
        },
        {
          "digest": "sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "name": "sriov-fec-operator"
        },
        {
          "digest": "sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "name": "sriov-fec-operator-558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b-annotation"
        },
        {
          "digest": "sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "2.4.0",
      "version_original": "2.4.0"
    },
    {
      "_id": "631203548e834c98476e1940",
      "alm_examples": [
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecClusterConfig",
          "metadata": {
            "name": "acc100SampleConfig",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "acceleratorSelector": {
              "deviceID": "someDevice",
              "driver": "someDriver",
              "maxVirtualFunctions": 2,
              "pciAddress": "somePciAddress",
              "vendorID": "someVendor"
            },
            "drainSkip": false,
            "nodeSelector": {
              "expectedLabel1": "valueOfExpectedLabel1",
              "expectedLabelN": "valueOfExpectedLabelN"
            },
            "physicalFunction": {
              "bbDevConfig": {
                "acc100": {
                  "downlink4G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 0
                  },
                  "downlink5G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 4
                  },
                  "maxQueueSize": 1024,
                  "numVfBundles": 16,
                  "pfMode": true,
                  "uplink4G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 0
                  },
                  "uplink5G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 4
                  }
                }
              },
              "pfDriver": "pci-pf-stub",
              "vfAmount": 2,
              "vfDriver": "vfio-pci"
            },
            "priority": 100
          }
        },
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecClusterConfig",
          "metadata": {
            "name": "n3000SampleConfig",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "acceleratorSelector": {
              "deviceID": "someDevice",
              "driver": "someDriver",
              "maxVirtualFunctions": 2,
              "pciAddress": "somePciAddress",
              "vendorID": "someVendor"
            },
            "drainSkip": false,
            "nodeSelector": {
              "expectedLabel1": "valueOfExpectedLabel1",
              "expectedLabelN": "valueOfExpectedLabelN"
            },
            "physicalFunction": {
              "bbDevConfig": {
                "n3000": {
                  "downlink": {
                    "bandwidth": 3,
                    "loadBalance": 128,
                    "queues": {
                      "vf0": 16,
                      "vf1": 16,
                      "vf2": 0,
                      "vf3": 0,
                      "vf4": 0,
                      "vf5": 0,
                      "vf6": 0,
                      "vf7": 0
                    }
                  },
                  "flrTimeout": 610,
                  "networkType": "FPGA_5GNR",
                  "pfMode": true,
                  "uplink": {
                    "bandwidth": 3,
                    "loadBalance": 128,
                    "queues": {
                      "vf0": 16,
                      "vf1": 16,
                      "vf2": 0,
                      "vf3": 0,
                      "vf4": 0,
                      "vf5": 0,
                      "vf6": 0,
                      "vf7": 0
                    }
                  }
                }
              },
              "pfDriver": "pci-pf-stub",
              "vfAmount": 2,
              "vfDriver": "vfio-pci"
            },
            "priority": 100
          }
        },
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecNodeConfig",
          "metadata": {
            "name": "acc100-worker",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "drainSkip": false,
            "physicalFunctions": [
              {
                "bbDevConfig": {
                  "acc100": {
                    "downlink4G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 0
                    },
                    "downlink5G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 4
                    },
                    "maxQueueSize": 1024,
                    "numVfBundles": 16,
                    "pfMode": true,
                    "uplink4G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 0
                    },
                    "uplink5G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 4
                    }
                  }
                },
                "pci_addr": "somePciAddress",
                "pf_driver": "pci-pf-stub",
                "vf_amount": 2,
                "vf_driver": "vfio-pci"
              }
            ]
          }
        },
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecNodeConfig",
          "metadata": {
            "name": "n3000-worker",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "drainSkip": false,
            "physicalFunctions": [
              {
                "bbDevConfig": {
                  "n3000": {
                    "downlink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    },
                    "flrTimeout": 610,
                    "networkType": "FPGA_5GNR",
                    "pfMode": true,
                    "uplink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    }
                  }
                },
                "pci_addr": "somePciAddress",
                "pf_driver": "pci-pf-stub",
                "vf_amount": 2,
                "vf_driver": "vfio-pci"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/sriov-fec-operator-bundle@sha256:03fd238d727606de452090fc2cdda4ca77b0912366e36aa38bcd78c2c0d546e8",
      "bundle_path_digest": "sha256:03fd238d727606de452090fc2cdda4ca77b0912366e36aa38bcd78c2c0d546e8",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-02T13:21:24.114000+00:00",
      "csv_description": "The vRAN Dedicated Accelerator ACC100, based on Intel eASIC technology is designed to offload and accelerate the computing-intensive process of forward error correction (FEC) for 4G/LTE and 5G technology, freeing up processing power. Intel eASIC devices are structured ASICs, an intermediate technology between FPGAs and standard application-specific integrated circuits (ASICs). It allows the optimization of data plane performance to reduce total cost of ownership while maintaining a high degree of flexibility.  The Intel ACC100 plays a key role in accelerating 5G and network functions virtualization (NFV) adoption for ecosystem partners such as telecommunications equipment manufacturers (TEMs) virtual network functions (VNF) vendors, system integrators and telcos, to bring scalable and high-performance solutions to market. The Intel ACC100 includes a variant that is design to be Network Equipment Building System (NEBS)-friendly, and features a Root-of-Trust device that helps protect systems from FPGA host security exploits. This document explains how the ACC100 resource can be used on the Smart Edge Open (SEO) platform for accelerating network functions and edge application workloads. We use LTE/5G Forward Error Correction (FEC) as an example workload that accelerates the 5G or 4G L1 base station network function. The same concept and mechanism is applicable for application acceleration workloads like AI and ML on eASIC for Inference applications. The ACC100 supports the O-RAN adopted DPDK BBDev API - an API which Intel contributed to the opensource community to enable choice and TTM for FEC acceleration solutions. The FlexRAN software reference architecture supports the ACC100 which enables users to quickly evaluate and build platforms for the wide range of vRAN networks. Reduces platform power, E2E latency and Intel\u00ae CPU core count requirements as well as increases cell capacity than existing programmable accelerator. Accelerates both 4G and 5G data concurrently.\tLowers development cost using commercial off the shelf (COTS) servers. Accommodates space-constrained implementations via a low-profile PCIe card form factor. Enables a variety of flexible FlexRAN deployments from small cell to macro to Massive MIMO networks. Supports extended temperature for the most challenging of RAN deployment scenario\u2019s.",
      "csv_display_name": "SEO SR-IOV Operator for Wireless FEC Accelerators",
      "csv_metadata_description": "An operator for Intel Wireless FEC Accelerator to orchestrate and manage the resources/devices exposed by a range of Intel's vRAN FEC acceleration devices/hardware within the OpenShift cluster.",
      "csv_name": "sriov-fec.v2.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-02T13:21:24.114000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "sriov-fec",
      "provided_apis": [
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecNodeConfig",
          "plural": "sriovfecnodeconfigs",
          "version": "v1"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecNodeConfig",
          "plural": "sriovfecnodeconfigs",
          "version": "v2"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecClusterConfig",
          "plural": "sriovfecclusterconfigs",
          "version": "v1"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecClusterConfig",
          "plural": "sriovfecclusterconfigs",
          "version": "v2"
        }
      ],
      "provider": "Intel Corporation",
      "related_images": [
        {
          "digest": "sha256:d87dfc05f054c856549ea7722d9e6c7299b8ce87fbf659a6904c9fbf5a8f2841",
          "image": "registry.connect.redhat.com/intel/sriov-fec-daemon@sha256:d87dfc05f054c856549ea7722d9e6c7299b8ce87fbf659a6904c9fbf5a8f2841",
          "name": "sriov-fec-daemon"
        },
        {
          "digest": "sha256:5055121216aa2e2a8240d1a1a30850077e77c4828d94e1bd02045d640faf1f1d",
          "image": "registry.connect.redhat.com/intel/n3000-labeler@sha256:5055121216aa2e2a8240d1a1a30850077e77c4828d94e1bd02045d640faf1f1d",
          "name": "sriov-fec-labeler"
        },
        {
          "digest": "sha256:5ad615f1256d1d23b159a5a331a31103692dd0293b6f128b9095d0b34c0f6586",
          "image": "registry.redhat.io/openshift4/ose-sriov-network-device-plugin@sha256:5ad615f1256d1d23b159a5a331a31103692dd0293b6f128b9095d0b34c0f6586",
          "name": "sriov-network-device-plugin"
        },
        {
          "digest": "sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "name": "sriov-fec-operator"
        },
        {
          "digest": "sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "name": "sriov-fec-operator-558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b-annotation"
        },
        {
          "digest": "sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.4.0",
      "version_original": "2.4.0"
    },
    {
      "_id": "631205f968e85dc50c8c5ff3",
      "alm_examples": [
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecClusterConfig",
          "metadata": {
            "name": "acc100SampleConfig",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "acceleratorSelector": {
              "deviceID": "someDevice",
              "driver": "someDriver",
              "maxVirtualFunctions": 2,
              "pciAddress": "somePciAddress",
              "vendorID": "someVendor"
            },
            "drainSkip": false,
            "nodeSelector": {
              "expectedLabel1": "valueOfExpectedLabel1",
              "expectedLabelN": "valueOfExpectedLabelN"
            },
            "physicalFunction": {
              "bbDevConfig": {
                "acc100": {
                  "downlink4G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 0
                  },
                  "downlink5G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 4
                  },
                  "maxQueueSize": 1024,
                  "numVfBundles": 16,
                  "pfMode": true,
                  "uplink4G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 0
                  },
                  "uplink5G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 4
                  }
                }
              },
              "pfDriver": "pci-pf-stub",
              "vfAmount": 2,
              "vfDriver": "vfio-pci"
            },
            "priority": 100
          }
        },
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecClusterConfig",
          "metadata": {
            "name": "n3000SampleConfig",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "acceleratorSelector": {
              "deviceID": "someDevice",
              "driver": "someDriver",
              "maxVirtualFunctions": 2,
              "pciAddress": "somePciAddress",
              "vendorID": "someVendor"
            },
            "drainSkip": false,
            "nodeSelector": {
              "expectedLabel1": "valueOfExpectedLabel1",
              "expectedLabelN": "valueOfExpectedLabelN"
            },
            "physicalFunction": {
              "bbDevConfig": {
                "n3000": {
                  "downlink": {
                    "bandwidth": 3,
                    "loadBalance": 128,
                    "queues": {
                      "vf0": 16,
                      "vf1": 16,
                      "vf2": 0,
                      "vf3": 0,
                      "vf4": 0,
                      "vf5": 0,
                      "vf6": 0,
                      "vf7": 0
                    }
                  },
                  "flrTimeout": 610,
                  "networkType": "FPGA_5GNR",
                  "pfMode": true,
                  "uplink": {
                    "bandwidth": 3,
                    "loadBalance": 128,
                    "queues": {
                      "vf0": 16,
                      "vf1": 16,
                      "vf2": 0,
                      "vf3": 0,
                      "vf4": 0,
                      "vf5": 0,
                      "vf6": 0,
                      "vf7": 0
                    }
                  }
                }
              },
              "pfDriver": "pci-pf-stub",
              "vfAmount": 2,
              "vfDriver": "vfio-pci"
            },
            "priority": 100
          }
        },
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecNodeConfig",
          "metadata": {
            "name": "acc100-worker",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "drainSkip": false,
            "physicalFunctions": [
              {
                "bbDevConfig": {
                  "acc100": {
                    "downlink4G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 0
                    },
                    "downlink5G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 4
                    },
                    "maxQueueSize": 1024,
                    "numVfBundles": 16,
                    "pfMode": true,
                    "uplink4G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 0
                    },
                    "uplink5G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 4
                    }
                  }
                },
                "pci_addr": "somePciAddress",
                "pf_driver": "pci-pf-stub",
                "vf_amount": 2,
                "vf_driver": "vfio-pci"
              }
            ]
          }
        },
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecNodeConfig",
          "metadata": {
            "name": "n3000-worker",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "drainSkip": false,
            "physicalFunctions": [
              {
                "bbDevConfig": {
                  "n3000": {
                    "downlink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    },
                    "flrTimeout": 610,
                    "networkType": "FPGA_5GNR",
                    "pfMode": true,
                    "uplink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    }
                  }
                },
                "pci_addr": "somePciAddress",
                "pf_driver": "pci-pf-stub",
                "vf_amount": 2,
                "vf_driver": "vfio-pci"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/sriov-fec-operator-bundle@sha256:03fd238d727606de452090fc2cdda4ca77b0912366e36aa38bcd78c2c0d546e8",
      "bundle_path_digest": "sha256:03fd238d727606de452090fc2cdda4ca77b0912366e36aa38bcd78c2c0d546e8",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-02T13:32:41.781000+00:00",
      "csv_description": "The vRAN Dedicated Accelerator ACC100, based on Intel eASIC technology is designed to offload and accelerate the computing-intensive process of forward error correction (FEC) for 4G/LTE and 5G technology, freeing up processing power. Intel eASIC devices are structured ASICs, an intermediate technology between FPGAs and standard application-specific integrated circuits (ASICs). It allows the optimization of data plane performance to reduce total cost of ownership while maintaining a high degree of flexibility.  The Intel ACC100 plays a key role in accelerating 5G and network functions virtualization (NFV) adoption for ecosystem partners such as telecommunications equipment manufacturers (TEMs) virtual network functions (VNF) vendors, system integrators and telcos, to bring scalable and high-performance solutions to market. The Intel ACC100 includes a variant that is design to be Network Equipment Building System (NEBS)-friendly, and features a Root-of-Trust device that helps protect systems from FPGA host security exploits. This document explains how the ACC100 resource can be used on the Smart Edge Open (SEO) platform for accelerating network functions and edge application workloads. We use LTE/5G Forward Error Correction (FEC) as an example workload that accelerates the 5G or 4G L1 base station network function. The same concept and mechanism is applicable for application acceleration workloads like AI and ML on eASIC for Inference applications. The ACC100 supports the O-RAN adopted DPDK BBDev API - an API which Intel contributed to the opensource community to enable choice and TTM for FEC acceleration solutions. The FlexRAN software reference architecture supports the ACC100 which enables users to quickly evaluate and build platforms for the wide range of vRAN networks. Reduces platform power, E2E latency and Intel\u00ae CPU core count requirements as well as increases cell capacity than existing programmable accelerator. Accelerates both 4G and 5G data concurrently.\tLowers development cost using commercial off the shelf (COTS) servers. Accommodates space-constrained implementations via a low-profile PCIe card form factor. Enables a variety of flexible FlexRAN deployments from small cell to macro to Massive MIMO networks. Supports extended temperature for the most challenging of RAN deployment scenario\u2019s.",
      "csv_display_name": "SEO SR-IOV Operator for Wireless FEC Accelerators",
      "csv_metadata_description": "An operator for Intel Wireless FEC Accelerator to orchestrate and manage the resources/devices exposed by a range of Intel's vRAN FEC acceleration devices/hardware within the OpenShift cluster.",
      "csv_name": "sriov-fec.v2.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-02T13:32:41.781000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "sriov-fec",
      "provided_apis": [
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecNodeConfig",
          "plural": "sriovfecnodeconfigs",
          "version": "v2"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecClusterConfig",
          "plural": "sriovfecclusterconfigs",
          "version": "v1"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecClusterConfig",
          "plural": "sriovfecclusterconfigs",
          "version": "v2"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecNodeConfig",
          "plural": "sriovfecnodeconfigs",
          "version": "v1"
        }
      ],
      "provider": "Intel Corporation",
      "related_images": [
        {
          "digest": "sha256:d87dfc05f054c856549ea7722d9e6c7299b8ce87fbf659a6904c9fbf5a8f2841",
          "image": "registry.connect.redhat.com/intel/sriov-fec-daemon@sha256:d87dfc05f054c856549ea7722d9e6c7299b8ce87fbf659a6904c9fbf5a8f2841",
          "name": "sriov-fec-daemon"
        },
        {
          "digest": "sha256:5055121216aa2e2a8240d1a1a30850077e77c4828d94e1bd02045d640faf1f1d",
          "image": "registry.connect.redhat.com/intel/n3000-labeler@sha256:5055121216aa2e2a8240d1a1a30850077e77c4828d94e1bd02045d640faf1f1d",
          "name": "sriov-fec-labeler"
        },
        {
          "digest": "sha256:5ad615f1256d1d23b159a5a331a31103692dd0293b6f128b9095d0b34c0f6586",
          "image": "registry.redhat.io/openshift4/ose-sriov-network-device-plugin@sha256:5ad615f1256d1d23b159a5a331a31103692dd0293b6f128b9095d0b34c0f6586",
          "name": "sriov-network-device-plugin"
        },
        {
          "digest": "sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "name": "sriov-fec-operator"
        },
        {
          "digest": "sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "name": "sriov-fec-operator-558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b-annotation"
        },
        {
          "digest": "sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.4.0",
      "version_original": "2.4.0"
    },
    {
      "_id": "6315f443524802b3f2ab69d2",
      "alm_examples": [
        {
          "api_version": "hazelcast.com/v1alpha1",
          "kind": "Hazelcast",
          "metadata": {
            "name": "hazelcast"
          },
          "spec": {
            "clusterSize": 3,
            "licenseKeySecret": "hazelcast-license-key",
            "repository": "docker.io/hazelcast/hazelcast-enterprise",
            "version": "5.1.3"
          }
        },
        {
          "api_version": "hazelcast.com/v1alpha1",
          "kind": "ManagementCenter",
          "metadata": {
            "name": "managementcenter"
          },
          "spec": {
            "externalConnectivity": {
              "type": "LoadBalancer"
            },
            "hazelcastClusters": [
              {
                "address": "hazelcast",
                "name": "dev"
              }
            ],
            "licenseKeySecret": "hazelcast-license-key",
            "persistence": {
              "enabled": true,
              "size": "10Gi"
            },
            "repository": "hazelcast/management-center",
            "version": "5.1.4"
          }
        },
        {
          "api_version": "hazelcast.com/v1alpha1",
          "kind": "Map",
          "metadata": {
            "name": "map"
          },
          "spec": {
            "hazelcastResourceName": "hazelcast"
          }
        },
        {
          "api_version": "hazelcast.com/v1alpha1",
          "kind": "WanReplication",
          "metadata": {
            "name": "wanreplication-sample"
          },
          "spec": {
            "endpoints": "35.192.33.252",
            "mapResourceName": "map",
            "targetClusterName": "dev"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hazelcast/hazelcast-platform-operator-bundle@sha256:6ab4ad6ebaa8efb8ef54c218483e521c76029bfbaa213f50b567714749387276",
      "bundle_path_digest": "sha256:6ab4ad6ebaa8efb8ef54c218483e521c76029bfbaa213f50b567714749387276",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-05T13:06:11.429000+00:00",
      "csv_description": "# Hazelcast Platform Operator #\n\nEasily deploy Hazelcast clusters and Management Center into Kubernetes environments and manage their lifecycles.\n\n## Before You Start\n\nIf you are planning to create Hazelcast Platform Enterprise clusters, you need to [create a secret](https://docs.hazelcast.com/operator/latest/get-started#step-2-start-the-hazelcast-cluster) for the license. You can request a trial license key from [here](https://trialrequest.hazelcast.com).\n\nFor Hazelcast Platform clusters, you can simply continue.\n\n## Documentation\n\n1. [Get started](https://docs.hazelcast.com/operator/latest/get-started) with the Operator.\n2. [Connect to the cluster from outside Kubernetes](https://guides.hazelcast.org/hazelcast-platform-operator-expose-externally/main)\n  from the outside.\n\n## Features\n\nHazelcast Platform Operator supports the features below:\n\n* Custom resource for Hazelcast Platform (Open Source & Enterprise) and Management Center\n* Observe status of Hazelcast and Management Center clusters\n* Scale up and down Hazelcast clusters\n* Expose Hazelcast cluster to external\n  clients ([Smart & Unisocket](https://docs.hazelcast.com/hazelcast/latest/clients/java#java-client-operation-modes))\n",
      "csv_display_name": "Hazelcast Platform Operator",
      "csv_metadata_description": "Install Hazelcast clusters in Kubernetes environments.",
      "csv_name": "hazelcast-platform-operator.v5.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-05T13:06:11.429000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "hazelcast-platform-operator",
      "provided_apis": [
        {
          "group": "hazelcast.com",
          "kind": "Hazelcast",
          "version": "v1alpha1"
        },
        {
          "group": "hazelcast.com",
          "kind": "HotBackup",
          "version": "v1alpha1"
        },
        {
          "group": "hazelcast.com",
          "kind": "ManagementCenter",
          "version": "v1alpha1"
        },
        {
          "group": "hazelcast.com",
          "kind": "Map",
          "version": "v1alpha1"
        },
        {
          "group": "hazelcast.com",
          "kind": "WanReplication",
          "version": "v1alpha1"
        }
      ],
      "provider": "Hazelcast, Inc",
      "related_images": [
        {
          "digest": "sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
          "image": "docker.io/hazelcast/hazelcast-platform-operator@sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
          "name": "hazelcast-platform-operator-d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab-annotation"
        },
        {
          "digest": "sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
          "image": "docker.io/hazelcast/hazelcast-platform-operator@sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "5.4.0",
      "version_original": "5.4.0"
    },
    {
      "_id": "6315f45c524802b3f2ab69de",
      "alm_examples": [
        {
          "api_version": "hazelcast.com/v1alpha1",
          "kind": "Hazelcast",
          "metadata": {
            "name": "hazelcast"
          },
          "spec": {
            "clusterSize": 3,
            "licenseKeySecret": "hazelcast-license-key",
            "repository": "docker.io/hazelcast/hazelcast-enterprise",
            "version": "5.1.3"
          }
        },
        {
          "api_version": "hazelcast.com/v1alpha1",
          "kind": "ManagementCenter",
          "metadata": {
            "name": "managementcenter"
          },
          "spec": {
            "externalConnectivity": {
              "type": "LoadBalancer"
            },
            "hazelcastClusters": [
              {
                "address": "hazelcast",
                "name": "dev"
              }
            ],
            "licenseKeySecret": "hazelcast-license-key",
            "persistence": {
              "enabled": true,
              "size": "10Gi"
            },
            "repository": "hazelcast/management-center",
            "version": "5.1.4"
          }
        },
        {
          "api_version": "hazelcast.com/v1alpha1",
          "kind": "Map",
          "metadata": {
            "name": "map"
          },
          "spec": {
            "hazelcastResourceName": "hazelcast"
          }
        },
        {
          "api_version": "hazelcast.com/v1alpha1",
          "kind": "WanReplication",
          "metadata": {
            "name": "wanreplication-sample"
          },
          "spec": {
            "endpoints": "35.192.33.252",
            "mapResourceName": "map",
            "targetClusterName": "dev"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hazelcast/hazelcast-platform-operator-bundle@sha256:6ab4ad6ebaa8efb8ef54c218483e521c76029bfbaa213f50b567714749387276",
      "bundle_path_digest": "sha256:6ab4ad6ebaa8efb8ef54c218483e521c76029bfbaa213f50b567714749387276",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-05T13:06:36.952000+00:00",
      "csv_description": "# Hazelcast Platform Operator #\n\nEasily deploy Hazelcast clusters and Management Center into Kubernetes environments and manage their lifecycles.\n\n## Before You Start\n\nIf you are planning to create Hazelcast Platform Enterprise clusters, you need to [create a secret](https://docs.hazelcast.com/operator/latest/get-started#step-2-start-the-hazelcast-cluster) for the license. You can request a trial license key from [here](https://trialrequest.hazelcast.com).\n\nFor Hazelcast Platform clusters, you can simply continue.\n\n## Documentation\n\n1. [Get started](https://docs.hazelcast.com/operator/latest/get-started) with the Operator.\n2. [Connect to the cluster from outside Kubernetes](https://guides.hazelcast.org/hazelcast-platform-operator-expose-externally/main)\n  from the outside.\n\n## Features\n\nHazelcast Platform Operator supports the features below:\n\n* Custom resource for Hazelcast Platform (Open Source & Enterprise) and Management Center\n* Observe status of Hazelcast and Management Center clusters\n* Scale up and down Hazelcast clusters\n* Expose Hazelcast cluster to external\n  clients ([Smart & Unisocket](https://docs.hazelcast.com/hazelcast/latest/clients/java#java-client-operation-modes))\n",
      "csv_display_name": "Hazelcast Platform Operator",
      "csv_metadata_description": "Install Hazelcast clusters in Kubernetes environments.",
      "csv_name": "hazelcast-platform-operator.v5.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-05T13:06:36.952000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "hazelcast-platform-operator",
      "provided_apis": [
        {
          "group": "hazelcast.com",
          "kind": "ManagementCenter",
          "plural": "managementcenters",
          "version": "v1alpha1"
        },
        {
          "group": "hazelcast.com",
          "kind": "Map",
          "plural": "maps",
          "version": "v1alpha1"
        },
        {
          "group": "hazelcast.com",
          "kind": "WanReplication",
          "plural": "wanreplications",
          "version": "v1alpha1"
        },
        {
          "group": "hazelcast.com",
          "kind": "Hazelcast",
          "plural": "hazelcasts",
          "version": "v1alpha1"
        },
        {
          "group": "hazelcast.com",
          "kind": "HotBackup",
          "plural": "hotbackups",
          "version": "v1alpha1"
        }
      ],
      "provider": "Hazelcast, Inc",
      "related_images": [
        {
          "digest": "sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
          "image": "docker.io/hazelcast/hazelcast-platform-operator@sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
          "name": "hazelcast-platform-operator-d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab-annotation"
        },
        {
          "digest": "sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
          "image": "docker.io/hazelcast/hazelcast-platform-operator@sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "5.4.0",
      "version_original": "5.4.0"
    },
    {
      "_id": "6315f472853ce3bf2c584606",
      "alm_examples": [
        {
          "api_version": "hazelcast.com/v1alpha1",
          "kind": "Hazelcast",
          "metadata": {
            "name": "hazelcast"
          },
          "spec": {
            "clusterSize": 3,
            "licenseKeySecret": "hazelcast-license-key",
            "repository": "docker.io/hazelcast/hazelcast-enterprise",
            "version": "5.1.3"
          }
        },
        {
          "api_version": "hazelcast.com/v1alpha1",
          "kind": "ManagementCenter",
          "metadata": {
            "name": "managementcenter"
          },
          "spec": {
            "externalConnectivity": {
              "type": "LoadBalancer"
            },
            "hazelcastClusters": [
              {
                "address": "hazelcast",
                "name": "dev"
              }
            ],
            "licenseKeySecret": "hazelcast-license-key",
            "persistence": {
              "enabled": true,
              "size": "10Gi"
            },
            "repository": "hazelcast/management-center",
            "version": "5.1.4"
          }
        },
        {
          "api_version": "hazelcast.com/v1alpha1",
          "kind": "Map",
          "metadata": {
            "name": "map"
          },
          "spec": {
            "hazelcastResourceName": "hazelcast"
          }
        },
        {
          "api_version": "hazelcast.com/v1alpha1",
          "kind": "WanReplication",
          "metadata": {
            "name": "wanreplication-sample"
          },
          "spec": {
            "endpoints": "35.192.33.252",
            "mapResourceName": "map",
            "targetClusterName": "dev"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hazelcast/hazelcast-platform-operator-bundle@sha256:6ab4ad6ebaa8efb8ef54c218483e521c76029bfbaa213f50b567714749387276",
      "bundle_path_digest": "sha256:6ab4ad6ebaa8efb8ef54c218483e521c76029bfbaa213f50b567714749387276",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-05T13:06:58.348000+00:00",
      "csv_description": "# Hazelcast Platform Operator #\n\nEasily deploy Hazelcast clusters and Management Center into Kubernetes environments and manage their lifecycles.\n\n## Before You Start\n\nIf you are planning to create Hazelcast Platform Enterprise clusters, you need to [create a secret](https://docs.hazelcast.com/operator/latest/get-started#step-2-start-the-hazelcast-cluster) for the license. You can request a trial license key from [here](https://trialrequest.hazelcast.com).\n\nFor Hazelcast Platform clusters, you can simply continue.\n\n## Documentation\n\n1. [Get started](https://docs.hazelcast.com/operator/latest/get-started) with the Operator.\n2. [Connect to the cluster from outside Kubernetes](https://guides.hazelcast.org/hazelcast-platform-operator-expose-externally/main)\n  from the outside.\n\n## Features\n\nHazelcast Platform Operator supports the features below:\n\n* Custom resource for Hazelcast Platform (Open Source & Enterprise) and Management Center\n* Observe status of Hazelcast and Management Center clusters\n* Scale up and down Hazelcast clusters\n* Expose Hazelcast cluster to external\n  clients ([Smart & Unisocket](https://docs.hazelcast.com/hazelcast/latest/clients/java#java-client-operation-modes))\n",
      "csv_display_name": "Hazelcast Platform Operator",
      "csv_metadata_description": "Install Hazelcast clusters in Kubernetes environments.",
      "csv_name": "hazelcast-platform-operator.v5.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-05T13:06:58.348000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "hazelcast-platform-operator",
      "provided_apis": [
        {
          "group": "hazelcast.com",
          "kind": "ManagementCenter",
          "plural": "managementcenters",
          "version": "v1alpha1"
        },
        {
          "group": "hazelcast.com",
          "kind": "Map",
          "plural": "maps",
          "version": "v1alpha1"
        },
        {
          "group": "hazelcast.com",
          "kind": "WanReplication",
          "plural": "wanreplications",
          "version": "v1alpha1"
        },
        {
          "group": "hazelcast.com",
          "kind": "Hazelcast",
          "plural": "hazelcasts",
          "version": "v1alpha1"
        },
        {
          "group": "hazelcast.com",
          "kind": "HotBackup",
          "plural": "hotbackups",
          "version": "v1alpha1"
        }
      ],
      "provider": "Hazelcast, Inc",
      "related_images": [
        {
          "digest": "sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
          "image": "docker.io/hazelcast/hazelcast-platform-operator@sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
          "name": "hazelcast-platform-operator-d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab-annotation"
        },
        {
          "digest": "sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
          "image": "docker.io/hazelcast/hazelcast-platform-operator@sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "5.4.0",
      "version_original": "5.4.0"
    },
    {
      "_id": "6315f4f7c95cf95f4f6e1cbe",
      "alm_examples": [
        {
          "api_version": "hazelcast.com/v1alpha1",
          "kind": "Hazelcast",
          "metadata": {
            "name": "hazelcast"
          },
          "spec": {
            "clusterSize": 3,
            "licenseKeySecret": "hazelcast-license-key",
            "repository": "docker.io/hazelcast/hazelcast-enterprise",
            "version": "5.1.3"
          }
        },
        {
          "api_version": "hazelcast.com/v1alpha1",
          "kind": "ManagementCenter",
          "metadata": {
            "name": "managementcenter"
          },
          "spec": {
            "externalConnectivity": {
              "type": "LoadBalancer"
            },
            "hazelcastClusters": [
              {
                "address": "hazelcast",
                "name": "dev"
              }
            ],
            "licenseKeySecret": "hazelcast-license-key",
            "persistence": {
              "enabled": true,
              "size": "10Gi"
            },
            "repository": "hazelcast/management-center",
            "version": "5.1.4"
          }
        },
        {
          "api_version": "hazelcast.com/v1alpha1",
          "kind": "Map",
          "metadata": {
            "name": "map"
          },
          "spec": {
            "hazelcastResourceName": "hazelcast"
          }
        },
        {
          "api_version": "hazelcast.com/v1alpha1",
          "kind": "WanReplication",
          "metadata": {
            "name": "wanreplication-sample"
          },
          "spec": {
            "endpoints": "35.192.33.252",
            "mapResourceName": "map",
            "targetClusterName": "dev"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hazelcast/hazelcast-platform-operator-bundle@sha256:6ab4ad6ebaa8efb8ef54c218483e521c76029bfbaa213f50b567714749387276",
      "bundle_path_digest": "sha256:6ab4ad6ebaa8efb8ef54c218483e521c76029bfbaa213f50b567714749387276",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-05T13:09:11.025000+00:00",
      "csv_description": "# Hazelcast Platform Operator #\n\nEasily deploy Hazelcast clusters and Management Center into Kubernetes environments and manage their lifecycles.\n\n## Before You Start\n\nIf you are planning to create Hazelcast Platform Enterprise clusters, you need to [create a secret](https://docs.hazelcast.com/operator/latest/get-started#step-2-start-the-hazelcast-cluster) for the license. You can request a trial license key from [here](https://trialrequest.hazelcast.com).\n\nFor Hazelcast Platform clusters, you can simply continue.\n\n## Documentation\n\n1. [Get started](https://docs.hazelcast.com/operator/latest/get-started) with the Operator.\n2. [Connect to the cluster from outside Kubernetes](https://guides.hazelcast.org/hazelcast-platform-operator-expose-externally/main)\n  from the outside.\n\n## Features\n\nHazelcast Platform Operator supports the features below:\n\n* Custom resource for Hazelcast Platform (Open Source & Enterprise) and Management Center\n* Observe status of Hazelcast and Management Center clusters\n* Scale up and down Hazelcast clusters\n* Expose Hazelcast cluster to external\n  clients ([Smart & Unisocket](https://docs.hazelcast.com/hazelcast/latest/clients/java#java-client-operation-modes))\n",
      "csv_display_name": "Hazelcast Platform Operator",
      "csv_metadata_description": "Install Hazelcast clusters in Kubernetes environments.",
      "csv_name": "hazelcast-platform-operator.v5.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-05T13:09:11.025000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "hazelcast-platform-operator",
      "provided_apis": [
        {
          "group": "hazelcast.com",
          "kind": "Map",
          "plural": "maps",
          "version": "v1alpha1"
        },
        {
          "group": "hazelcast.com",
          "kind": "WanReplication",
          "plural": "wanreplications",
          "version": "v1alpha1"
        },
        {
          "group": "hazelcast.com",
          "kind": "Hazelcast",
          "plural": "hazelcasts",
          "version": "v1alpha1"
        },
        {
          "group": "hazelcast.com",
          "kind": "HotBackup",
          "plural": "hotbackups",
          "version": "v1alpha1"
        },
        {
          "group": "hazelcast.com",
          "kind": "ManagementCenter",
          "plural": "managementcenters",
          "version": "v1alpha1"
        }
      ],
      "provider": "Hazelcast, Inc",
      "related_images": [
        {
          "digest": "sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
          "image": "docker.io/hazelcast/hazelcast-platform-operator@sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
          "name": "hazelcast-platform-operator-d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab-annotation"
        },
        {
          "digest": "sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
          "image": "docker.io/hazelcast/hazelcast-platform-operator@sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "5.4.0",
      "version_original": "5.4.0"
    },
    {
      "_id": "6315f51fd6e3d9c9311b8320",
      "alm_examples": [
        {
          "api_version": "hazelcast.com/v1alpha1",
          "kind": "Hazelcast",
          "metadata": {
            "name": "hazelcast"
          },
          "spec": {
            "clusterSize": 3,
            "licenseKeySecret": "hazelcast-license-key",
            "repository": "docker.io/hazelcast/hazelcast-enterprise",
            "version": "5.1.3"
          }
        },
        {
          "api_version": "hazelcast.com/v1alpha1",
          "kind": "ManagementCenter",
          "metadata": {
            "name": "managementcenter"
          },
          "spec": {
            "externalConnectivity": {
              "type": "LoadBalancer"
            },
            "hazelcastClusters": [
              {
                "address": "hazelcast",
                "name": "dev"
              }
            ],
            "licenseKeySecret": "hazelcast-license-key",
            "persistence": {
              "enabled": true,
              "size": "10Gi"
            },
            "repository": "hazelcast/management-center",
            "version": "5.1.4"
          }
        },
        {
          "api_version": "hazelcast.com/v1alpha1",
          "kind": "Map",
          "metadata": {
            "name": "map"
          },
          "spec": {
            "hazelcastResourceName": "hazelcast"
          }
        },
        {
          "api_version": "hazelcast.com/v1alpha1",
          "kind": "WanReplication",
          "metadata": {
            "name": "wanreplication-sample"
          },
          "spec": {
            "endpoints": "35.192.33.252",
            "mapResourceName": "map",
            "targetClusterName": "dev"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hazelcast/hazelcast-platform-operator-bundle@sha256:6ab4ad6ebaa8efb8ef54c218483e521c76029bfbaa213f50b567714749387276",
      "bundle_path_digest": "sha256:6ab4ad6ebaa8efb8ef54c218483e521c76029bfbaa213f50b567714749387276",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-05T13:09:51.615000+00:00",
      "csv_description": "# Hazelcast Platform Operator #\n\nEasily deploy Hazelcast clusters and Management Center into Kubernetes environments and manage their lifecycles.\n\n## Before You Start\n\nIf you are planning to create Hazelcast Platform Enterprise clusters, you need to [create a secret](https://docs.hazelcast.com/operator/latest/get-started#step-2-start-the-hazelcast-cluster) for the license. You can request a trial license key from [here](https://trialrequest.hazelcast.com).\n\nFor Hazelcast Platform clusters, you can simply continue.\n\n## Documentation\n\n1. [Get started](https://docs.hazelcast.com/operator/latest/get-started) with the Operator.\n2. [Connect to the cluster from outside Kubernetes](https://guides.hazelcast.org/hazelcast-platform-operator-expose-externally/main)\n  from the outside.\n\n## Features\n\nHazelcast Platform Operator supports the features below:\n\n* Custom resource for Hazelcast Platform (Open Source & Enterprise) and Management Center\n* Observe status of Hazelcast and Management Center clusters\n* Scale up and down Hazelcast clusters\n* Expose Hazelcast cluster to external\n  clients ([Smart & Unisocket](https://docs.hazelcast.com/hazelcast/latest/clients/java#java-client-operation-modes))\n",
      "csv_display_name": "Hazelcast Platform Operator",
      "csv_metadata_description": "Install Hazelcast clusters in Kubernetes environments.",
      "csv_name": "hazelcast-platform-operator.v5.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-05T13:09:51.615000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "hazelcast-platform-operator",
      "provided_apis": [
        {
          "group": "hazelcast.com",
          "kind": "Hazelcast",
          "plural": "hazelcasts",
          "version": "v1alpha1"
        },
        {
          "group": "hazelcast.com",
          "kind": "HotBackup",
          "plural": "hotbackups",
          "version": "v1alpha1"
        },
        {
          "group": "hazelcast.com",
          "kind": "ManagementCenter",
          "plural": "managementcenters",
          "version": "v1alpha1"
        },
        {
          "group": "hazelcast.com",
          "kind": "Map",
          "plural": "maps",
          "version": "v1alpha1"
        },
        {
          "group": "hazelcast.com",
          "kind": "WanReplication",
          "plural": "wanreplications",
          "version": "v1alpha1"
        }
      ],
      "provider": "Hazelcast, Inc",
      "related_images": [
        {
          "digest": "sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
          "image": "docker.io/hazelcast/hazelcast-platform-operator@sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
          "name": "hazelcast-platform-operator-d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab-annotation"
        },
        {
          "digest": "sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
          "image": "docker.io/hazelcast/hazelcast-platform-operator@sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "5.4.0",
      "version_original": "5.4.0"
    },
    {
      "_id": "6315f87c49acca0475ab63c2",
      "alm_examples": [
        {
          "api_version": "hazelcast.com/v1alpha1",
          "kind": "Hazelcast",
          "metadata": {
            "name": "hazelcast"
          },
          "spec": {
            "clusterSize": 3,
            "licenseKeySecret": "hazelcast-license-key",
            "repository": "docker.io/hazelcast/hazelcast-enterprise",
            "version": "5.1.3"
          }
        },
        {
          "api_version": "hazelcast.com/v1alpha1",
          "kind": "ManagementCenter",
          "metadata": {
            "name": "managementcenter"
          },
          "spec": {
            "externalConnectivity": {
              "type": "LoadBalancer"
            },
            "hazelcastClusters": [
              {
                "address": "hazelcast",
                "name": "dev"
              }
            ],
            "licenseKeySecret": "hazelcast-license-key",
            "persistence": {
              "enabled": true,
              "size": "10Gi"
            },
            "repository": "hazelcast/management-center",
            "version": "5.1.4"
          }
        },
        {
          "api_version": "hazelcast.com/v1alpha1",
          "kind": "Map",
          "metadata": {
            "name": "map"
          },
          "spec": {
            "hazelcastResourceName": "hazelcast"
          }
        },
        {
          "api_version": "hazelcast.com/v1alpha1",
          "kind": "WanReplication",
          "metadata": {
            "name": "wanreplication-sample"
          },
          "spec": {
            "endpoints": "35.192.33.252",
            "mapResourceName": "map",
            "targetClusterName": "dev"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hazelcast/hazelcast-platform-operator-bundle@sha256:6ab4ad6ebaa8efb8ef54c218483e521c76029bfbaa213f50b567714749387276",
      "bundle_path_digest": "sha256:6ab4ad6ebaa8efb8ef54c218483e521c76029bfbaa213f50b567714749387276",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-05T13:24:12.904000+00:00",
      "csv_description": "# Hazelcast Platform Operator #\n\nEasily deploy Hazelcast clusters and Management Center into Kubernetes environments and manage their lifecycles.\n\n## Before You Start\n\nIf you are planning to create Hazelcast Platform Enterprise clusters, you need to [create a secret](https://docs.hazelcast.com/operator/latest/get-started#step-2-start-the-hazelcast-cluster) for the license. You can request a trial license key from [here](https://trialrequest.hazelcast.com).\n\nFor Hazelcast Platform clusters, you can simply continue.\n\n## Documentation\n\n1. [Get started](https://docs.hazelcast.com/operator/latest/get-started) with the Operator.\n2. [Connect to the cluster from outside Kubernetes](https://guides.hazelcast.org/hazelcast-platform-operator-expose-externally/main)\n  from the outside.\n\n## Features\n\nHazelcast Platform Operator supports the features below:\n\n* Custom resource for Hazelcast Platform (Open Source & Enterprise) and Management Center\n* Observe status of Hazelcast and Management Center clusters\n* Scale up and down Hazelcast clusters\n* Expose Hazelcast cluster to external\n  clients ([Smart & Unisocket](https://docs.hazelcast.com/hazelcast/latest/clients/java#java-client-operation-modes))\n",
      "csv_display_name": "Hazelcast Platform Operator",
      "csv_metadata_description": "Install Hazelcast clusters in Kubernetes environments.",
      "csv_name": "hazelcast-platform-operator.v5.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-05T13:24:12.904000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "hazelcast-platform-operator",
      "provided_apis": [
        {
          "group": "hazelcast.com",
          "kind": "Map",
          "plural": "maps",
          "version": "v1alpha1"
        },
        {
          "group": "hazelcast.com",
          "kind": "WanReplication",
          "plural": "wanreplications",
          "version": "v1alpha1"
        },
        {
          "group": "hazelcast.com",
          "kind": "Hazelcast",
          "plural": "hazelcasts",
          "version": "v1alpha1"
        },
        {
          "group": "hazelcast.com",
          "kind": "HotBackup",
          "plural": "hotbackups",
          "version": "v1alpha1"
        },
        {
          "group": "hazelcast.com",
          "kind": "ManagementCenter",
          "plural": "managementcenters",
          "version": "v1alpha1"
        }
      ],
      "provider": "Hazelcast, Inc",
      "related_images": [
        {
          "digest": "sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
          "image": "docker.io/hazelcast/hazelcast-platform-operator@sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
          "name": "hazelcast-platform-operator-d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab-annotation"
        },
        {
          "digest": "sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
          "image": "docker.io/hazelcast/hazelcast-platform-operator@sha256:d5fc92ee6696badafd6a283e2c0c83c2d7bfa7e3ce7fbf49a3b4b049c0e94bab",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "5.4.0",
      "version_original": "5.4.0"
    },
    {
      "_id": "6316360b4277364c90d21d44",
      "alm_examples": [
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "gm-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              }
            ],
            "mode": "T-GM.8275.1",
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "gm-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "bc-1"
          },
          "spec": {
            "aprLevel": 0,
            "domainNumber": 24,
            "esmcMode": 1,
            "forwardable": 0,
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Slave",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f2",
                "ethPort": 2,
                "holdoff": 500,
                "ipv4": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-TBC.8275.1",
            "mode10MHz": 2,
            "modePPS": 2,
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "bc-1"
            },
            "phyLedsCtl": 0,
            "priority2": 128,
            "src10MHz": 1,
            "srcPPS": 1,
            "syncOption": 1,
            "synceCpu": 10,
            "synceRecClkPort": 0,
            "tracePtpMsg": -1,
            "twoStep": 0
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsNode",
          "metadata": {
            "name": "worker2"
          },
          "spec": {}
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsOperatorConfig",
          "metadata": {
            "name": "sts-operator-config",
            "namespace": "openshift-operators"
          },
          "spec": {
            "images": {},
            "sro": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/silicomltd/silicom-sts-operator@sha256:e3dcf731a1987e2bab073bbbd03fbfc83487019e1ac00352cb9870ba6315c4d1",
      "bundle_path_digest": "sha256:e3dcf731a1987e2bab073bbbd03fbfc83487019e1ac00352cb9870ba6315c4d1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-05T17:46:51.788000+00:00",
      "csv_description": "Silicom STS line card for 4G and 5G NIC enable real-time data transmission\nwith high timing accuracy at the lowest cost to power 5G DRAN and CRAN edge\ndeployments.\n\n* Support 1588/PTP over IPv4 / IPV6, IEEE1588v2\n* Support SyncE /ITU-T G.8262\n* T-BC/T-TSC Boundary Clock and TSC Slave Clock /G.8273.2\n* T-GM Grand Master /G.8273.1 per G.8275.1 PTP Profile\n* PRTC Primary Reference Time Clock Class B/G.8272\n* T-TC Transparent Clock /G.8273.3\n* 1588 Software Stack and Servo Software in x86\n* [Silicom STS2 Card](https://www.silicom-usa.com/pr/server-adapters/networking-adapters/10-gigabit-ethernet-networking-adapters/p410g8ts81-timesync-server-adapter)\n\n### Prequisites:\n* [NFD Operator](https://operatorhub.io/operator/nfd-operator \"NFD operator needed for the discovery of STS cards\").\n* [SRO Operator](https://github.com/openshift/special-resource-operator)\n",
      "csv_display_name": "Silicom STS Operator",
      "csv_metadata_description": "This Operator is a Kubernetes custom controller whose goal\nis to serve the installation and lifecycle management of\nSilicom STS device plugins for Kubernetes.\n",
      "csv_name": "silicom-sts-operator.v0.0.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-06T18:57:57.102000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "silicom-sts-operator",
      "provided_apis": [
        {
          "group": "sts.silicom.com",
          "kind": "StsConfig",
          "plural": "stsconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsNode",
          "plural": "stsnodes",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsOperatorConfig",
          "plural": "stsoperatorconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Silicom Ltd.",
      "related_images": [
        {
          "digest": "sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "image": "quay.io/silicom/gpsd@sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "name": "gpsd"
        },
        {
          "digest": "sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "image": "quay.io/silicom/phc2sys@sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "name": "phc2sys"
        },
        {
          "digest": "sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "image": "quay.io/silicom/tsyncd@sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "name": "tsyncd"
        },
        {
          "digest": "sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "image": "quay.io/silicom/grpc-tsyncd@sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "name": "grpc-tsyncd"
        },
        {
          "digest": "sha256:d8245f3dc3bf67ec93f5db0fa95abe174df92c61f10ffcb247bea06dcf83ccfe",
          "image": "quay.io/silicom/tsync_extts@sha256:d8245f3dc3bf67ec93f5db0fa95abe174df92c61f10ffcb247bea06dcf83ccfe",
          "name": "tsync_extts"
        },
        {
          "digest": "sha256:19fbe112eaa3ee3d807d3b36f3ef93a6b25e3dad9a390fda8df4971b71b07af6",
          "image": "quay.io/silicom/sts-plugin@sha256:19fbe112eaa3ee3d807d3b36f3ef93a6b25e3dad9a390fda8df4971b71b07af6",
          "name": "sts-plugin"
        },
        {
          "digest": "sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "image": "quay.io/silicom/ice-driver-src@sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "name": "ice-driver-src"
        },
        {
          "digest": "sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "image": "quay.io/silicom/sts-operator@sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "name": "sts-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "image": "quay.io/silicom/sts-operator@sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "name": "sts-operator-a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5-annotation"
        },
        {
          "digest": "sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "image": "quay.io/silicom/sts-operator@sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.0.9",
      "version_original": "0.0.9"
    },
    {
      "_id": "6316360f767c039d43f459eb",
      "alm_examples": [
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "gm-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              }
            ],
            "mode": "T-GM.8275.1",
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "gm-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "bc-1"
          },
          "spec": {
            "aprLevel": 0,
            "domainNumber": 24,
            "esmcMode": 1,
            "forwardable": 0,
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Slave",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f2",
                "ethPort": 2,
                "holdoff": 500,
                "ipv4": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-TBC.8275.1",
            "mode10MHz": 2,
            "modePPS": 2,
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "bc-1"
            },
            "phyLedsCtl": 0,
            "priority2": 128,
            "src10MHz": 1,
            "srcPPS": 1,
            "syncOption": 1,
            "synceCpu": 10,
            "synceRecClkPort": 0,
            "tracePtpMsg": -1,
            "twoStep": 0
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsNode",
          "metadata": {
            "name": "worker2"
          },
          "spec": {}
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsOperatorConfig",
          "metadata": {
            "name": "sts-operator-config",
            "namespace": "openshift-operators"
          },
          "spec": {
            "images": {},
            "sro": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/silicomltd/silicom-sts-operator@sha256:e3dcf731a1987e2bab073bbbd03fbfc83487019e1ac00352cb9870ba6315c4d1",
      "bundle_path_digest": "sha256:e3dcf731a1987e2bab073bbbd03fbfc83487019e1ac00352cb9870ba6315c4d1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-05T17:46:55.285000+00:00",
      "csv_description": "Silicom STS line card for 4G and 5G NIC enable real-time data transmission\nwith high timing accuracy at the lowest cost to power 5G DRAN and CRAN edge\ndeployments.\n\n* Support 1588/PTP over IPv4 / IPV6, IEEE1588v2\n* Support SyncE /ITU-T G.8262\n* T-BC/T-TSC Boundary Clock and TSC Slave Clock /G.8273.2\n* T-GM Grand Master /G.8273.1 per G.8275.1 PTP Profile\n* PRTC Primary Reference Time Clock Class B/G.8272\n* T-TC Transparent Clock /G.8273.3\n* 1588 Software Stack and Servo Software in x86\n* [Silicom STS2 Card](https://www.silicom-usa.com/pr/server-adapters/networking-adapters/10-gigabit-ethernet-networking-adapters/p410g8ts81-timesync-server-adapter)\n\n### Prequisites:\n* [NFD Operator](https://operatorhub.io/operator/nfd-operator \"NFD operator needed for the discovery of STS cards\").\n* [SRO Operator](https://github.com/openshift/special-resource-operator)\n",
      "csv_display_name": "Silicom STS Operator",
      "csv_metadata_description": "This Operator is a Kubernetes custom controller whose goal\nis to serve the installation and lifecycle management of\nSilicom STS device plugins for Kubernetes.\n",
      "csv_name": "silicom-sts-operator.v0.0.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-06T18:57:57.516000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "silicom-sts-operator",
      "provided_apis": [
        {
          "group": "sts.silicom.com",
          "kind": "StsConfig",
          "plural": "stsconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsNode",
          "plural": "stsnodes",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsOperatorConfig",
          "plural": "stsoperatorconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Silicom Ltd.",
      "related_images": [
        {
          "digest": "sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "image": "quay.io/silicom/gpsd@sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "name": "gpsd"
        },
        {
          "digest": "sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "image": "quay.io/silicom/phc2sys@sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "name": "phc2sys"
        },
        {
          "digest": "sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "image": "quay.io/silicom/tsyncd@sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "name": "tsyncd"
        },
        {
          "digest": "sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "image": "quay.io/silicom/grpc-tsyncd@sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "name": "grpc-tsyncd"
        },
        {
          "digest": "sha256:d8245f3dc3bf67ec93f5db0fa95abe174df92c61f10ffcb247bea06dcf83ccfe",
          "image": "quay.io/silicom/tsync_extts@sha256:d8245f3dc3bf67ec93f5db0fa95abe174df92c61f10ffcb247bea06dcf83ccfe",
          "name": "tsync_extts"
        },
        {
          "digest": "sha256:19fbe112eaa3ee3d807d3b36f3ef93a6b25e3dad9a390fda8df4971b71b07af6",
          "image": "quay.io/silicom/sts-plugin@sha256:19fbe112eaa3ee3d807d3b36f3ef93a6b25e3dad9a390fda8df4971b71b07af6",
          "name": "sts-plugin"
        },
        {
          "digest": "sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "image": "quay.io/silicom/ice-driver-src@sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "name": "ice-driver-src"
        },
        {
          "digest": "sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "image": "quay.io/silicom/sts-operator@sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "name": "sts-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "image": "quay.io/silicom/sts-operator@sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "name": "sts-operator-a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5-annotation"
        },
        {
          "digest": "sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "image": "quay.io/silicom/sts-operator@sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.0.9",
      "version_original": "0.0.9"
    },
    {
      "_id": "631637ed33126725e4d66a8f",
      "alm_examples": [
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "gm-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              }
            ],
            "mode": "T-GM.8275.1",
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "gm-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "bc-1"
          },
          "spec": {
            "aprLevel": 0,
            "domainNumber": 24,
            "esmcMode": 1,
            "forwardable": 0,
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Slave",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f2",
                "ethPort": 2,
                "holdoff": 500,
                "ipv4": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-TBC.8275.1",
            "mode10MHz": 2,
            "modePPS": 2,
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "bc-1"
            },
            "phyLedsCtl": 0,
            "priority2": 128,
            "src10MHz": 1,
            "srcPPS": 1,
            "syncOption": 1,
            "synceCpu": 10,
            "synceRecClkPort": 0,
            "tracePtpMsg": -1,
            "twoStep": 0
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsNode",
          "metadata": {
            "name": "worker2"
          },
          "spec": {}
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsOperatorConfig",
          "metadata": {
            "name": "sts-operator-config",
            "namespace": "openshift-operators"
          },
          "spec": {
            "images": {},
            "sro": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/silicomltd/silicom-sts-operator@sha256:e3dcf731a1987e2bab073bbbd03fbfc83487019e1ac00352cb9870ba6315c4d1",
      "bundle_path_digest": "sha256:e3dcf731a1987e2bab073bbbd03fbfc83487019e1ac00352cb9870ba6315c4d1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-05T17:54:53.074000+00:00",
      "csv_description": "Silicom STS line card for 4G and 5G NIC enable real-time data transmission\nwith high timing accuracy at the lowest cost to power 5G DRAN and CRAN edge\ndeployments.\n\n* Support 1588/PTP over IPv4 / IPV6, IEEE1588v2\n* Support SyncE /ITU-T G.8262\n* T-BC/T-TSC Boundary Clock and TSC Slave Clock /G.8273.2\n* T-GM Grand Master /G.8273.1 per G.8275.1 PTP Profile\n* PRTC Primary Reference Time Clock Class B/G.8272\n* T-TC Transparent Clock /G.8273.3\n* 1588 Software Stack and Servo Software in x86\n* [Silicom STS2 Card](https://www.silicom-usa.com/pr/server-adapters/networking-adapters/10-gigabit-ethernet-networking-adapters/p410g8ts81-timesync-server-adapter)\n\n### Prequisites:\n* [NFD Operator](https://operatorhub.io/operator/nfd-operator \"NFD operator needed for the discovery of STS cards\").\n* [SRO Operator](https://github.com/openshift/special-resource-operator)\n",
      "csv_display_name": "Silicom STS Operator",
      "csv_metadata_description": "This Operator is a Kubernetes custom controller whose goal\nis to serve the installation and lifecycle management of\nSilicom STS device plugins for Kubernetes.\n",
      "csv_name": "silicom-sts-operator.v0.0.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-06T18:53:45.116000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "silicom-sts-operator",
      "provided_apis": [
        {
          "group": "sts.silicom.com",
          "kind": "StsConfig",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsNode",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsOperatorConfig",
          "version": "v1alpha1"
        }
      ],
      "provider": "Silicom Ltd.",
      "related_images": [
        {
          "digest": "sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "image": "quay.io/silicom/gpsd@sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "name": "gpsd"
        },
        {
          "digest": "sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "image": "quay.io/silicom/phc2sys@sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "name": "phc2sys"
        },
        {
          "digest": "sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "image": "quay.io/silicom/tsyncd@sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "name": "tsyncd"
        },
        {
          "digest": "sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "image": "quay.io/silicom/grpc-tsyncd@sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "name": "grpc-tsyncd"
        },
        {
          "digest": "sha256:d8245f3dc3bf67ec93f5db0fa95abe174df92c61f10ffcb247bea06dcf83ccfe",
          "image": "quay.io/silicom/tsync_extts@sha256:d8245f3dc3bf67ec93f5db0fa95abe174df92c61f10ffcb247bea06dcf83ccfe",
          "name": "tsync_extts"
        },
        {
          "digest": "sha256:19fbe112eaa3ee3d807d3b36f3ef93a6b25e3dad9a390fda8df4971b71b07af6",
          "image": "quay.io/silicom/sts-plugin@sha256:19fbe112eaa3ee3d807d3b36f3ef93a6b25e3dad9a390fda8df4971b71b07af6",
          "name": "sts-plugin"
        },
        {
          "digest": "sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "image": "quay.io/silicom/ice-driver-src@sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "name": "ice-driver-src"
        },
        {
          "digest": "sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "image": "quay.io/silicom/sts-operator@sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "name": "sts-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "image": "quay.io/silicom/sts-operator@sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "name": "sts-operator-a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5-annotation"
        },
        {
          "digest": "sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "image": "quay.io/silicom/sts-operator@sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.0.9",
      "version_original": "0.0.9"
    },
    {
      "_id": "631637ee4277364c90d21e5c",
      "alm_examples": [
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "gm-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              }
            ],
            "mode": "T-GM.8275.1",
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "gm-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "bc-1"
          },
          "spec": {
            "aprLevel": 0,
            "domainNumber": 24,
            "esmcMode": 1,
            "forwardable": 0,
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Slave",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f2",
                "ethPort": 2,
                "holdoff": 500,
                "ipv4": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-TBC.8275.1",
            "mode10MHz": 2,
            "modePPS": 2,
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "bc-1"
            },
            "phyLedsCtl": 0,
            "priority2": 128,
            "src10MHz": 1,
            "srcPPS": 1,
            "syncOption": 1,
            "synceCpu": 10,
            "synceRecClkPort": 0,
            "tracePtpMsg": -1,
            "twoStep": 0
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsNode",
          "metadata": {
            "name": "worker2"
          },
          "spec": {}
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsOperatorConfig",
          "metadata": {
            "name": "sts-operator-config",
            "namespace": "openshift-operators"
          },
          "spec": {
            "images": {},
            "sro": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/silicomltd/silicom-sts-operator@sha256:e3dcf731a1987e2bab073bbbd03fbfc83487019e1ac00352cb9870ba6315c4d1",
      "bundle_path_digest": "sha256:e3dcf731a1987e2bab073bbbd03fbfc83487019e1ac00352cb9870ba6315c4d1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-05T17:54:54.902000+00:00",
      "csv_description": "Silicom STS line card for 4G and 5G NIC enable real-time data transmission\nwith high timing accuracy at the lowest cost to power 5G DRAN and CRAN edge\ndeployments.\n\n* Support 1588/PTP over IPv4 / IPV6, IEEE1588v2\n* Support SyncE /ITU-T G.8262\n* T-BC/T-TSC Boundary Clock and TSC Slave Clock /G.8273.2\n* T-GM Grand Master /G.8273.1 per G.8275.1 PTP Profile\n* PRTC Primary Reference Time Clock Class B/G.8272\n* T-TC Transparent Clock /G.8273.3\n* 1588 Software Stack and Servo Software in x86\n* [Silicom STS2 Card](https://www.silicom-usa.com/pr/server-adapters/networking-adapters/10-gigabit-ethernet-networking-adapters/p410g8ts81-timesync-server-adapter)\n\n### Prequisites:\n* [NFD Operator](https://operatorhub.io/operator/nfd-operator \"NFD operator needed for the discovery of STS cards\").\n* [SRO Operator](https://github.com/openshift/special-resource-operator)\n",
      "csv_display_name": "Silicom STS Operator",
      "csv_metadata_description": "This Operator is a Kubernetes custom controller whose goal\nis to serve the installation and lifecycle management of\nSilicom STS device plugins for Kubernetes.\n",
      "csv_name": "silicom-sts-operator.v0.0.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-06T18:53:45.329000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "silicom-sts-operator",
      "provided_apis": [
        {
          "group": "sts.silicom.com",
          "kind": "StsConfig",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsNode",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsOperatorConfig",
          "version": "v1alpha1"
        }
      ],
      "provider": "Silicom Ltd.",
      "related_images": [
        {
          "digest": "sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "image": "quay.io/silicom/gpsd@sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "name": "gpsd"
        },
        {
          "digest": "sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "image": "quay.io/silicom/phc2sys@sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "name": "phc2sys"
        },
        {
          "digest": "sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "image": "quay.io/silicom/tsyncd@sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "name": "tsyncd"
        },
        {
          "digest": "sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "image": "quay.io/silicom/grpc-tsyncd@sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "name": "grpc-tsyncd"
        },
        {
          "digest": "sha256:d8245f3dc3bf67ec93f5db0fa95abe174df92c61f10ffcb247bea06dcf83ccfe",
          "image": "quay.io/silicom/tsync_extts@sha256:d8245f3dc3bf67ec93f5db0fa95abe174df92c61f10ffcb247bea06dcf83ccfe",
          "name": "tsync_extts"
        },
        {
          "digest": "sha256:19fbe112eaa3ee3d807d3b36f3ef93a6b25e3dad9a390fda8df4971b71b07af6",
          "image": "quay.io/silicom/sts-plugin@sha256:19fbe112eaa3ee3d807d3b36f3ef93a6b25e3dad9a390fda8df4971b71b07af6",
          "name": "sts-plugin"
        },
        {
          "digest": "sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "image": "quay.io/silicom/ice-driver-src@sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "name": "ice-driver-src"
        },
        {
          "digest": "sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "image": "quay.io/silicom/sts-operator@sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "name": "sts-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "image": "quay.io/silicom/sts-operator@sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "name": "sts-operator-a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5-annotation"
        },
        {
          "digest": "sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "image": "quay.io/silicom/sts-operator@sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.0.9",
      "version_original": "0.0.9"
    },
    {
      "_id": "6316382ddccc15d8c9fb8a7d",
      "alm_examples": [
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "gm-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              }
            ],
            "mode": "T-GM.8275.1",
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "gm-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "bc-1"
          },
          "spec": {
            "aprLevel": 0,
            "domainNumber": 24,
            "esmcMode": 1,
            "forwardable": 0,
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Slave",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f2",
                "ethPort": 2,
                "holdoff": 500,
                "ipv4": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-TBC.8275.1",
            "mode10MHz": 2,
            "modePPS": 2,
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "bc-1"
            },
            "phyLedsCtl": 0,
            "priority2": 128,
            "src10MHz": 1,
            "srcPPS": 1,
            "syncOption": 1,
            "synceCpu": 10,
            "synceRecClkPort": 0,
            "tracePtpMsg": -1,
            "twoStep": 0
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsNode",
          "metadata": {
            "name": "worker2"
          },
          "spec": {}
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsOperatorConfig",
          "metadata": {
            "name": "sts-operator-config",
            "namespace": "openshift-operators"
          },
          "spec": {
            "images": {},
            "sro": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/silicomltd/silicom-sts-operator@sha256:e3dcf731a1987e2bab073bbbd03fbfc83487019e1ac00352cb9870ba6315c4d1",
      "bundle_path_digest": "sha256:e3dcf731a1987e2bab073bbbd03fbfc83487019e1ac00352cb9870ba6315c4d1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-05T17:55:57.133000+00:00",
      "csv_description": "Silicom STS line card for 4G and 5G NIC enable real-time data transmission\nwith high timing accuracy at the lowest cost to power 5G DRAN and CRAN edge\ndeployments.\n\n* Support 1588/PTP over IPv4 / IPV6, IEEE1588v2\n* Support SyncE /ITU-T G.8262\n* T-BC/T-TSC Boundary Clock and TSC Slave Clock /G.8273.2\n* T-GM Grand Master /G.8273.1 per G.8275.1 PTP Profile\n* PRTC Primary Reference Time Clock Class B/G.8272\n* T-TC Transparent Clock /G.8273.3\n* 1588 Software Stack and Servo Software in x86\n* [Silicom STS2 Card](https://www.silicom-usa.com/pr/server-adapters/networking-adapters/10-gigabit-ethernet-networking-adapters/p410g8ts81-timesync-server-adapter)\n\n### Prequisites:\n* [NFD Operator](https://operatorhub.io/operator/nfd-operator \"NFD operator needed for the discovery of STS cards\").\n* [SRO Operator](https://github.com/openshift/special-resource-operator)\n",
      "csv_display_name": "Silicom STS Operator",
      "csv_metadata_description": "This Operator is a Kubernetes custom controller whose goal\nis to serve the installation and lifecycle management of\nSilicom STS device plugins for Kubernetes.\n",
      "csv_name": "silicom-sts-operator.v0.0.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-06T18:55:01.389000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "silicom-sts-operator",
      "provided_apis": [
        {
          "group": "sts.silicom.com",
          "kind": "StsOperatorConfig",
          "plural": "stsoperatorconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsConfig",
          "plural": "stsconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsNode",
          "plural": "stsnodes",
          "version": "v1alpha1"
        }
      ],
      "provider": "Silicom Ltd.",
      "related_images": [
        {
          "digest": "sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "image": "quay.io/silicom/gpsd@sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "name": "gpsd"
        },
        {
          "digest": "sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "image": "quay.io/silicom/phc2sys@sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "name": "phc2sys"
        },
        {
          "digest": "sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "image": "quay.io/silicom/tsyncd@sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "name": "tsyncd"
        },
        {
          "digest": "sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "image": "quay.io/silicom/grpc-tsyncd@sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "name": "grpc-tsyncd"
        },
        {
          "digest": "sha256:d8245f3dc3bf67ec93f5db0fa95abe174df92c61f10ffcb247bea06dcf83ccfe",
          "image": "quay.io/silicom/tsync_extts@sha256:d8245f3dc3bf67ec93f5db0fa95abe174df92c61f10ffcb247bea06dcf83ccfe",
          "name": "tsync_extts"
        },
        {
          "digest": "sha256:19fbe112eaa3ee3d807d3b36f3ef93a6b25e3dad9a390fda8df4971b71b07af6",
          "image": "quay.io/silicom/sts-plugin@sha256:19fbe112eaa3ee3d807d3b36f3ef93a6b25e3dad9a390fda8df4971b71b07af6",
          "name": "sts-plugin"
        },
        {
          "digest": "sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "image": "quay.io/silicom/ice-driver-src@sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "name": "ice-driver-src"
        },
        {
          "digest": "sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "image": "quay.io/silicom/sts-operator@sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "name": "sts-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "image": "quay.io/silicom/sts-operator@sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "name": "sts-operator-a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5-annotation"
        },
        {
          "digest": "sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "image": "quay.io/silicom/sts-operator@sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.0.9",
      "version_original": "0.0.9"
    },
    {
      "_id": "6316382f81141a81da637865",
      "alm_examples": [
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "gm-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              }
            ],
            "mode": "T-GM.8275.1",
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "gm-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "bc-1"
          },
          "spec": {
            "aprLevel": 0,
            "domainNumber": 24,
            "esmcMode": 1,
            "forwardable": 0,
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Slave",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f2",
                "ethPort": 2,
                "holdoff": 500,
                "ipv4": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-TBC.8275.1",
            "mode10MHz": 2,
            "modePPS": 2,
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "bc-1"
            },
            "phyLedsCtl": 0,
            "priority2": 128,
            "src10MHz": 1,
            "srcPPS": 1,
            "syncOption": 1,
            "synceCpu": 10,
            "synceRecClkPort": 0,
            "tracePtpMsg": -1,
            "twoStep": 0
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsNode",
          "metadata": {
            "name": "worker2"
          },
          "spec": {}
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsOperatorConfig",
          "metadata": {
            "name": "sts-operator-config",
            "namespace": "openshift-operators"
          },
          "spec": {
            "images": {},
            "sro": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/silicomltd/silicom-sts-operator@sha256:e3dcf731a1987e2bab073bbbd03fbfc83487019e1ac00352cb9870ba6315c4d1",
      "bundle_path_digest": "sha256:e3dcf731a1987e2bab073bbbd03fbfc83487019e1ac00352cb9870ba6315c4d1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-05T17:55:59.830000+00:00",
      "csv_description": "Silicom STS line card for 4G and 5G NIC enable real-time data transmission\nwith high timing accuracy at the lowest cost to power 5G DRAN and CRAN edge\ndeployments.\n\n* Support 1588/PTP over IPv4 / IPV6, IEEE1588v2\n* Support SyncE /ITU-T G.8262\n* T-BC/T-TSC Boundary Clock and TSC Slave Clock /G.8273.2\n* T-GM Grand Master /G.8273.1 per G.8275.1 PTP Profile\n* PRTC Primary Reference Time Clock Class B/G.8272\n* T-TC Transparent Clock /G.8273.3\n* 1588 Software Stack and Servo Software in x86\n* [Silicom STS2 Card](https://www.silicom-usa.com/pr/server-adapters/networking-adapters/10-gigabit-ethernet-networking-adapters/p410g8ts81-timesync-server-adapter)\n\n### Prequisites:\n* [NFD Operator](https://operatorhub.io/operator/nfd-operator \"NFD operator needed for the discovery of STS cards\").\n* [SRO Operator](https://github.com/openshift/special-resource-operator)\n",
      "csv_display_name": "Silicom STS Operator",
      "csv_metadata_description": "This Operator is a Kubernetes custom controller whose goal\nis to serve the installation and lifecycle management of\nSilicom STS device plugins for Kubernetes.\n",
      "csv_name": "silicom-sts-operator.v0.0.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-06T18:55:01.618000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "silicom-sts-operator",
      "provided_apis": [
        {
          "group": "sts.silicom.com",
          "kind": "StsOperatorConfig",
          "plural": "stsoperatorconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsConfig",
          "plural": "stsconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsNode",
          "plural": "stsnodes",
          "version": "v1alpha1"
        }
      ],
      "provider": "Silicom Ltd.",
      "related_images": [
        {
          "digest": "sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "image": "quay.io/silicom/gpsd@sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "name": "gpsd"
        },
        {
          "digest": "sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "image": "quay.io/silicom/phc2sys@sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "name": "phc2sys"
        },
        {
          "digest": "sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "image": "quay.io/silicom/tsyncd@sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "name": "tsyncd"
        },
        {
          "digest": "sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "image": "quay.io/silicom/grpc-tsyncd@sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "name": "grpc-tsyncd"
        },
        {
          "digest": "sha256:d8245f3dc3bf67ec93f5db0fa95abe174df92c61f10ffcb247bea06dcf83ccfe",
          "image": "quay.io/silicom/tsync_extts@sha256:d8245f3dc3bf67ec93f5db0fa95abe174df92c61f10ffcb247bea06dcf83ccfe",
          "name": "tsync_extts"
        },
        {
          "digest": "sha256:19fbe112eaa3ee3d807d3b36f3ef93a6b25e3dad9a390fda8df4971b71b07af6",
          "image": "quay.io/silicom/sts-plugin@sha256:19fbe112eaa3ee3d807d3b36f3ef93a6b25e3dad9a390fda8df4971b71b07af6",
          "name": "sts-plugin"
        },
        {
          "digest": "sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "image": "quay.io/silicom/ice-driver-src@sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "name": "ice-driver-src"
        },
        {
          "digest": "sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "image": "quay.io/silicom/sts-operator@sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "name": "sts-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "image": "quay.io/silicom/sts-operator@sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "name": "sts-operator-a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5-annotation"
        },
        {
          "digest": "sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "image": "quay.io/silicom/sts-operator@sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.0.9",
      "version_original": "0.0.9"
    },
    {
      "_id": "631638a33b21dbfeaa38a8af",
      "alm_examples": [
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "gm-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              }
            ],
            "mode": "T-GM.8275.1",
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "gm-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "bc-1"
          },
          "spec": {
            "aprLevel": 0,
            "domainNumber": 24,
            "esmcMode": 1,
            "forwardable": 0,
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Slave",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f2",
                "ethPort": 2,
                "holdoff": 500,
                "ipv4": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-TBC.8275.1",
            "mode10MHz": 2,
            "modePPS": 2,
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "bc-1"
            },
            "phyLedsCtl": 0,
            "priority2": 128,
            "src10MHz": 1,
            "srcPPS": 1,
            "syncOption": 1,
            "synceCpu": 10,
            "synceRecClkPort": 0,
            "tracePtpMsg": -1,
            "twoStep": 0
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsNode",
          "metadata": {
            "name": "worker2"
          },
          "spec": {}
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsOperatorConfig",
          "metadata": {
            "name": "sts-operator-config",
            "namespace": "openshift-operators"
          },
          "spec": {
            "images": {},
            "sro": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/silicomltd/silicom-sts-operator@sha256:e3dcf731a1987e2bab073bbbd03fbfc83487019e1ac00352cb9870ba6315c4d1",
      "bundle_path_digest": "sha256:e3dcf731a1987e2bab073bbbd03fbfc83487019e1ac00352cb9870ba6315c4d1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-05T17:57:55.243000+00:00",
      "csv_description": "Silicom STS line card for 4G and 5G NIC enable real-time data transmission\nwith high timing accuracy at the lowest cost to power 5G DRAN and CRAN edge\ndeployments.\n\n* Support 1588/PTP over IPv4 / IPV6, IEEE1588v2\n* Support SyncE /ITU-T G.8262\n* T-BC/T-TSC Boundary Clock and TSC Slave Clock /G.8273.2\n* T-GM Grand Master /G.8273.1 per G.8275.1 PTP Profile\n* PRTC Primary Reference Time Clock Class B/G.8272\n* T-TC Transparent Clock /G.8273.3\n* 1588 Software Stack and Servo Software in x86\n* [Silicom STS2 Card](https://www.silicom-usa.com/pr/server-adapters/networking-adapters/10-gigabit-ethernet-networking-adapters/p410g8ts81-timesync-server-adapter)\n\n### Prequisites:\n* [NFD Operator](https://operatorhub.io/operator/nfd-operator \"NFD operator needed for the discovery of STS cards\").\n* [SRO Operator](https://github.com/openshift/special-resource-operator)\n",
      "csv_display_name": "Silicom STS Operator",
      "csv_metadata_description": "This Operator is a Kubernetes custom controller whose goal\nis to serve the installation and lifecycle management of\nSilicom STS device plugins for Kubernetes.\n",
      "csv_name": "silicom-sts-operator.v0.0.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-06T19:00:10.372000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "silicom-sts-operator",
      "provided_apis": [
        {
          "group": "sts.silicom.com",
          "kind": "StsNode",
          "plural": "stsnodes",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsOperatorConfig",
          "plural": "stsoperatorconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsConfig",
          "plural": "stsconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Silicom Ltd.",
      "related_images": [
        {
          "digest": "sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "image": "quay.io/silicom/gpsd@sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "name": "gpsd"
        },
        {
          "digest": "sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "image": "quay.io/silicom/phc2sys@sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "name": "phc2sys"
        },
        {
          "digest": "sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "image": "quay.io/silicom/tsyncd@sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "name": "tsyncd"
        },
        {
          "digest": "sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "image": "quay.io/silicom/grpc-tsyncd@sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "name": "grpc-tsyncd"
        },
        {
          "digest": "sha256:d8245f3dc3bf67ec93f5db0fa95abe174df92c61f10ffcb247bea06dcf83ccfe",
          "image": "quay.io/silicom/tsync_extts@sha256:d8245f3dc3bf67ec93f5db0fa95abe174df92c61f10ffcb247bea06dcf83ccfe",
          "name": "tsync_extts"
        },
        {
          "digest": "sha256:19fbe112eaa3ee3d807d3b36f3ef93a6b25e3dad9a390fda8df4971b71b07af6",
          "image": "quay.io/silicom/sts-plugin@sha256:19fbe112eaa3ee3d807d3b36f3ef93a6b25e3dad9a390fda8df4971b71b07af6",
          "name": "sts-plugin"
        },
        {
          "digest": "sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "image": "quay.io/silicom/ice-driver-src@sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "name": "ice-driver-src"
        },
        {
          "digest": "sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "image": "quay.io/silicom/sts-operator@sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "name": "sts-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "image": "quay.io/silicom/sts-operator@sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "name": "sts-operator-a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5-annotation"
        },
        {
          "digest": "sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "image": "quay.io/silicom/sts-operator@sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.9",
      "version_original": "0.0.9"
    },
    {
      "_id": "631638a3767c039d43f45b1c",
      "alm_examples": [
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "gm-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              }
            ],
            "mode": "T-GM.8275.1",
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "gm-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "bc-1"
          },
          "spec": {
            "aprLevel": 0,
            "domainNumber": 24,
            "esmcMode": 1,
            "forwardable": 0,
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Slave",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f2",
                "ethPort": 2,
                "holdoff": 500,
                "ipv4": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-TBC.8275.1",
            "mode10MHz": 2,
            "modePPS": 2,
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "bc-1"
            },
            "phyLedsCtl": 0,
            "priority2": 128,
            "src10MHz": 1,
            "srcPPS": 1,
            "syncOption": 1,
            "synceCpu": 10,
            "synceRecClkPort": 0,
            "tracePtpMsg": -1,
            "twoStep": 0
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsNode",
          "metadata": {
            "name": "worker2"
          },
          "spec": {}
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsOperatorConfig",
          "metadata": {
            "name": "sts-operator-config",
            "namespace": "openshift-operators"
          },
          "spec": {
            "images": {},
            "sro": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/silicomltd/silicom-sts-operator@sha256:e3dcf731a1987e2bab073bbbd03fbfc83487019e1ac00352cb9870ba6315c4d1",
      "bundle_path_digest": "sha256:e3dcf731a1987e2bab073bbbd03fbfc83487019e1ac00352cb9870ba6315c4d1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-05T17:57:55.910000+00:00",
      "csv_description": "Silicom STS line card for 4G and 5G NIC enable real-time data transmission\nwith high timing accuracy at the lowest cost to power 5G DRAN and CRAN edge\ndeployments.\n\n* Support 1588/PTP over IPv4 / IPV6, IEEE1588v2\n* Support SyncE /ITU-T G.8262\n* T-BC/T-TSC Boundary Clock and TSC Slave Clock /G.8273.2\n* T-GM Grand Master /G.8273.1 per G.8275.1 PTP Profile\n* PRTC Primary Reference Time Clock Class B/G.8272\n* T-TC Transparent Clock /G.8273.3\n* 1588 Software Stack and Servo Software in x86\n* [Silicom STS2 Card](https://www.silicom-usa.com/pr/server-adapters/networking-adapters/10-gigabit-ethernet-networking-adapters/p410g8ts81-timesync-server-adapter)\n\n### Prequisites:\n* [NFD Operator](https://operatorhub.io/operator/nfd-operator \"NFD operator needed for the discovery of STS cards\").\n* [SRO Operator](https://github.com/openshift/special-resource-operator)\n",
      "csv_display_name": "Silicom STS Operator",
      "csv_metadata_description": "This Operator is a Kubernetes custom controller whose goal\nis to serve the installation and lifecycle management of\nSilicom STS device plugins for Kubernetes.\n",
      "csv_name": "silicom-sts-operator.v0.0.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-06T19:00:10.696000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "silicom-sts-operator",
      "provided_apis": [
        {
          "group": "sts.silicom.com",
          "kind": "StsNode",
          "plural": "stsnodes",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsOperatorConfig",
          "plural": "stsoperatorconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsConfig",
          "plural": "stsconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Silicom Ltd.",
      "related_images": [
        {
          "digest": "sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "image": "quay.io/silicom/gpsd@sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "name": "gpsd"
        },
        {
          "digest": "sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "image": "quay.io/silicom/phc2sys@sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "name": "phc2sys"
        },
        {
          "digest": "sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "image": "quay.io/silicom/tsyncd@sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "name": "tsyncd"
        },
        {
          "digest": "sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "image": "quay.io/silicom/grpc-tsyncd@sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "name": "grpc-tsyncd"
        },
        {
          "digest": "sha256:d8245f3dc3bf67ec93f5db0fa95abe174df92c61f10ffcb247bea06dcf83ccfe",
          "image": "quay.io/silicom/tsync_extts@sha256:d8245f3dc3bf67ec93f5db0fa95abe174df92c61f10ffcb247bea06dcf83ccfe",
          "name": "tsync_extts"
        },
        {
          "digest": "sha256:19fbe112eaa3ee3d807d3b36f3ef93a6b25e3dad9a390fda8df4971b71b07af6",
          "image": "quay.io/silicom/sts-plugin@sha256:19fbe112eaa3ee3d807d3b36f3ef93a6b25e3dad9a390fda8df4971b71b07af6",
          "name": "sts-plugin"
        },
        {
          "digest": "sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "image": "quay.io/silicom/ice-driver-src@sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "name": "ice-driver-src"
        },
        {
          "digest": "sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "image": "quay.io/silicom/sts-operator@sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "name": "sts-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "image": "quay.io/silicom/sts-operator@sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "name": "sts-operator-a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5-annotation"
        },
        {
          "digest": "sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "image": "quay.io/silicom/sts-operator@sha256:aac1f737d7e0d572fefa184c93c0029225d96fd66538afb77561471982a38d91",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.9",
      "version_original": "0.0.9"
    },
    {
      "_id": "63179736902dda9ffff458db",
      "alm_examples": [
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "gm-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              }
            ],
            "mode": "T-GM.8275.1",
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "gm-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "bc-1"
          },
          "spec": {
            "aprLevel": 0,
            "domainNumber": 24,
            "esmcMode": 1,
            "forwardable": 0,
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Slave",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f2",
                "ethPort": 2,
                "holdoff": 500,
                "ipv4": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-TBC.8275.1",
            "mode10MHz": 2,
            "modePPS": 2,
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "bc-1"
            },
            "phyLedsCtl": 0,
            "priority2": 128,
            "src10MHz": 1,
            "srcPPS": 1,
            "syncOption": 1,
            "synceCpu": 10,
            "synceRecClkPort": 0,
            "tracePtpMsg": -1,
            "twoStep": 0
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsNode",
          "metadata": {
            "name": "worker2"
          },
          "spec": {}
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsOperatorConfig",
          "metadata": {
            "name": "sts-operator-config",
            "namespace": "openshift-operators"
          },
          "spec": {
            "images": {},
            "sro": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/silicomltd/silicom-sts-operator@sha256:481744bba12f2f7f04df81447d1376b3076c2e184a06ae906d08a6bb1559f1b2",
      "bundle_path_digest": "sha256:481744bba12f2f7f04df81447d1376b3076c2e184a06ae906d08a6bb1559f1b2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-06T18:53:42.731000+00:00",
      "csv_description": "Silicom STS line card for 4G and 5G NIC enable real-time data transmission\nwith high timing accuracy at the lowest cost to power 5G DRAN and CRAN edge\ndeployments.\n\n* Support 1588/PTP over IPv4 / IPV6, IEEE1588v2\n* Support SyncE /ITU-T G.8262\n* T-BC/T-TSC Boundary Clock and TSC Slave Clock /G.8273.2\n* T-GM Grand Master /G.8273.1 per G.8275.1 PTP Profile\n* PRTC Primary Reference Time Clock Class B/G.8272\n* T-TC Transparent Clock /G.8273.3\n* 1588 Software Stack and Servo Software in x86\n* [Silicom STS2 Card](https://www.silicom-usa.com/pr/server-adapters/networking-adapters/10-gigabit-ethernet-networking-adapters/p410g8ts81-timesync-server-adapter)\n\n### Prequisites:\n* [NFD Operator](https://operatorhub.io/operator/nfd-operator \"NFD operator needed for the discovery of STS cards\").\n* [SRO Operator](https://github.com/openshift/special-resource-operator)\n",
      "csv_display_name": "Silicom STS Operator",
      "csv_metadata_description": "This Operator is a Kubernetes custom controller whose goal\nis to serve the installation and lifecycle management of\nSilicom STS device plugins for Kubernetes.\n",
      "csv_name": "silicom-sts-operator.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-06T18:53:42.731000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "silicom-sts-operator",
      "provided_apis": [
        {
          "group": "sts.silicom.com",
          "kind": "StsConfig",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsNode",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsOperatorConfig",
          "version": "v1alpha1"
        }
      ],
      "provider": "Silicom Ltd.",
      "related_images": [
        {
          "digest": "sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "image": "quay.io/silicom/gpsd@sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "name": "gpsd"
        },
        {
          "digest": "sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "image": "quay.io/silicom/phc2sys@sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "name": "phc2sys"
        },
        {
          "digest": "sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "image": "quay.io/silicom/tsyncd@sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "name": "tsyncd"
        },
        {
          "digest": "sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "image": "quay.io/silicom/grpc-tsyncd@sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "name": "grpc-tsyncd"
        },
        {
          "digest": "sha256:4729e7206d03d24877b439019e7b0b7ae5fb0f767845b9a6423fc2d60d0d1d81",
          "image": "quay.io/silicom/sts-plugin@sha256:4729e7206d03d24877b439019e7b0b7ae5fb0f767845b9a6423fc2d60d0d1d81",
          "name": "sts-plugin"
        },
        {
          "digest": "sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "image": "quay.io/silicom/ice-driver-src@sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "name": "ice-driver-src"
        },
        {
          "digest": "sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "image": "quay.io/silicom/sts-operator@sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "name": "sts-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "image": "quay.io/silicom/sts-operator@sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "name": "sts-operator-a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5-annotation"
        },
        {
          "digest": "sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "image": "quay.io/silicom/sts-operator@sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "63179738ae0dda4760d663ad",
      "alm_examples": [
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "gm-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              }
            ],
            "mode": "T-GM.8275.1",
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "gm-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "bc-1"
          },
          "spec": {
            "aprLevel": 0,
            "domainNumber": 24,
            "esmcMode": 1,
            "forwardable": 0,
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Slave",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f2",
                "ethPort": 2,
                "holdoff": 500,
                "ipv4": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-TBC.8275.1",
            "mode10MHz": 2,
            "modePPS": 2,
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "bc-1"
            },
            "phyLedsCtl": 0,
            "priority2": 128,
            "src10MHz": 1,
            "srcPPS": 1,
            "syncOption": 1,
            "synceCpu": 10,
            "synceRecClkPort": 0,
            "tracePtpMsg": -1,
            "twoStep": 0
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsNode",
          "metadata": {
            "name": "worker2"
          },
          "spec": {}
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsOperatorConfig",
          "metadata": {
            "name": "sts-operator-config",
            "namespace": "openshift-operators"
          },
          "spec": {
            "images": {},
            "sro": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/silicomltd/silicom-sts-operator@sha256:481744bba12f2f7f04df81447d1376b3076c2e184a06ae906d08a6bb1559f1b2",
      "bundle_path_digest": "sha256:481744bba12f2f7f04df81447d1376b3076c2e184a06ae906d08a6bb1559f1b2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-06T18:53:44.569000+00:00",
      "csv_description": "Silicom STS line card for 4G and 5G NIC enable real-time data transmission\nwith high timing accuracy at the lowest cost to power 5G DRAN and CRAN edge\ndeployments.\n\n* Support 1588/PTP over IPv4 / IPV6, IEEE1588v2\n* Support SyncE /ITU-T G.8262\n* T-BC/T-TSC Boundary Clock and TSC Slave Clock /G.8273.2\n* T-GM Grand Master /G.8273.1 per G.8275.1 PTP Profile\n* PRTC Primary Reference Time Clock Class B/G.8272\n* T-TC Transparent Clock /G.8273.3\n* 1588 Software Stack and Servo Software in x86\n* [Silicom STS2 Card](https://www.silicom-usa.com/pr/server-adapters/networking-adapters/10-gigabit-ethernet-networking-adapters/p410g8ts81-timesync-server-adapter)\n\n### Prequisites:\n* [NFD Operator](https://operatorhub.io/operator/nfd-operator \"NFD operator needed for the discovery of STS cards\").\n* [SRO Operator](https://github.com/openshift/special-resource-operator)\n",
      "csv_display_name": "Silicom STS Operator",
      "csv_metadata_description": "This Operator is a Kubernetes custom controller whose goal\nis to serve the installation and lifecycle management of\nSilicom STS device plugins for Kubernetes.\n",
      "csv_name": "silicom-sts-operator.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-06T18:53:44.569000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "silicom-sts-operator",
      "provided_apis": [
        {
          "group": "sts.silicom.com",
          "kind": "StsConfig",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsNode",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsOperatorConfig",
          "version": "v1alpha1"
        }
      ],
      "provider": "Silicom Ltd.",
      "related_images": [
        {
          "digest": "sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "image": "quay.io/silicom/gpsd@sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "name": "gpsd"
        },
        {
          "digest": "sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "image": "quay.io/silicom/phc2sys@sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "name": "phc2sys"
        },
        {
          "digest": "sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "image": "quay.io/silicom/tsyncd@sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "name": "tsyncd"
        },
        {
          "digest": "sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "image": "quay.io/silicom/grpc-tsyncd@sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "name": "grpc-tsyncd"
        },
        {
          "digest": "sha256:4729e7206d03d24877b439019e7b0b7ae5fb0f767845b9a6423fc2d60d0d1d81",
          "image": "quay.io/silicom/sts-plugin@sha256:4729e7206d03d24877b439019e7b0b7ae5fb0f767845b9a6423fc2d60d0d1d81",
          "name": "sts-plugin"
        },
        {
          "digest": "sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "image": "quay.io/silicom/ice-driver-src@sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "name": "ice-driver-src"
        },
        {
          "digest": "sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "image": "quay.io/silicom/sts-operator@sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "name": "sts-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "image": "quay.io/silicom/sts-operator@sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "name": "sts-operator-a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5-annotation"
        },
        {
          "digest": "sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "image": "quay.io/silicom/sts-operator@sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "63179783ae0dda4760d663c1",
      "alm_examples": [
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "gm-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              }
            ],
            "mode": "T-GM.8275.1",
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "gm-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "bc-1"
          },
          "spec": {
            "aprLevel": 0,
            "domainNumber": 24,
            "esmcMode": 1,
            "forwardable": 0,
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Slave",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f2",
                "ethPort": 2,
                "holdoff": 500,
                "ipv4": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-TBC.8275.1",
            "mode10MHz": 2,
            "modePPS": 2,
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "bc-1"
            },
            "phyLedsCtl": 0,
            "priority2": 128,
            "src10MHz": 1,
            "srcPPS": 1,
            "syncOption": 1,
            "synceCpu": 10,
            "synceRecClkPort": 0,
            "tracePtpMsg": -1,
            "twoStep": 0
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsNode",
          "metadata": {
            "name": "worker2"
          },
          "spec": {}
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsOperatorConfig",
          "metadata": {
            "name": "sts-operator-config",
            "namespace": "openshift-operators"
          },
          "spec": {
            "images": {},
            "sro": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/silicomltd/silicom-sts-operator@sha256:481744bba12f2f7f04df81447d1376b3076c2e184a06ae906d08a6bb1559f1b2",
      "bundle_path_digest": "sha256:481744bba12f2f7f04df81447d1376b3076c2e184a06ae906d08a6bb1559f1b2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-06T18:54:59.701000+00:00",
      "csv_description": "Silicom STS line card for 4G and 5G NIC enable real-time data transmission\nwith high timing accuracy at the lowest cost to power 5G DRAN and CRAN edge\ndeployments.\n\n* Support 1588/PTP over IPv4 / IPV6, IEEE1588v2\n* Support SyncE /ITU-T G.8262\n* T-BC/T-TSC Boundary Clock and TSC Slave Clock /G.8273.2\n* T-GM Grand Master /G.8273.1 per G.8275.1 PTP Profile\n* PRTC Primary Reference Time Clock Class B/G.8272\n* T-TC Transparent Clock /G.8273.3\n* 1588 Software Stack and Servo Software in x86\n* [Silicom STS2 Card](https://www.silicom-usa.com/pr/server-adapters/networking-adapters/10-gigabit-ethernet-networking-adapters/p410g8ts81-timesync-server-adapter)\n\n### Prequisites:\n* [NFD Operator](https://operatorhub.io/operator/nfd-operator \"NFD operator needed for the discovery of STS cards\").\n* [SRO Operator](https://github.com/openshift/special-resource-operator)\n",
      "csv_display_name": "Silicom STS Operator",
      "csv_metadata_description": "This Operator is a Kubernetes custom controller whose goal\nis to serve the installation and lifecycle management of\nSilicom STS device plugins for Kubernetes.\n",
      "csv_name": "silicom-sts-operator.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-06T18:54:59.701000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "silicom-sts-operator",
      "provided_apis": [
        {
          "group": "sts.silicom.com",
          "kind": "StsConfig",
          "plural": "stsconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsNode",
          "plural": "stsnodes",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsOperatorConfig",
          "plural": "stsoperatorconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Silicom Ltd.",
      "related_images": [
        {
          "digest": "sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "image": "quay.io/silicom/gpsd@sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "name": "gpsd"
        },
        {
          "digest": "sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "image": "quay.io/silicom/phc2sys@sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "name": "phc2sys"
        },
        {
          "digest": "sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "image": "quay.io/silicom/tsyncd@sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "name": "tsyncd"
        },
        {
          "digest": "sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "image": "quay.io/silicom/grpc-tsyncd@sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "name": "grpc-tsyncd"
        },
        {
          "digest": "sha256:4729e7206d03d24877b439019e7b0b7ae5fb0f767845b9a6423fc2d60d0d1d81",
          "image": "quay.io/silicom/sts-plugin@sha256:4729e7206d03d24877b439019e7b0b7ae5fb0f767845b9a6423fc2d60d0d1d81",
          "name": "sts-plugin"
        },
        {
          "digest": "sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "image": "quay.io/silicom/ice-driver-src@sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "name": "ice-driver-src"
        },
        {
          "digest": "sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "image": "quay.io/silicom/sts-operator@sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "name": "sts-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "image": "quay.io/silicom/sts-operator@sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "name": "sts-operator-a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5-annotation"
        },
        {
          "digest": "sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "image": "quay.io/silicom/sts-operator@sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "63179784a65ef76c956b7e9f",
      "alm_examples": [
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "gm-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              }
            ],
            "mode": "T-GM.8275.1",
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "gm-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "bc-1"
          },
          "spec": {
            "aprLevel": 0,
            "domainNumber": 24,
            "esmcMode": 1,
            "forwardable": 0,
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Slave",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f2",
                "ethPort": 2,
                "holdoff": 500,
                "ipv4": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-TBC.8275.1",
            "mode10MHz": 2,
            "modePPS": 2,
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "bc-1"
            },
            "phyLedsCtl": 0,
            "priority2": 128,
            "src10MHz": 1,
            "srcPPS": 1,
            "syncOption": 1,
            "synceCpu": 10,
            "synceRecClkPort": 0,
            "tracePtpMsg": -1,
            "twoStep": 0
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsNode",
          "metadata": {
            "name": "worker2"
          },
          "spec": {}
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsOperatorConfig",
          "metadata": {
            "name": "sts-operator-config",
            "namespace": "openshift-operators"
          },
          "spec": {
            "images": {},
            "sro": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/silicomltd/silicom-sts-operator@sha256:481744bba12f2f7f04df81447d1376b3076c2e184a06ae906d08a6bb1559f1b2",
      "bundle_path_digest": "sha256:481744bba12f2f7f04df81447d1376b3076c2e184a06ae906d08a6bb1559f1b2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-06T18:55:00.803000+00:00",
      "csv_description": "Silicom STS line card for 4G and 5G NIC enable real-time data transmission\nwith high timing accuracy at the lowest cost to power 5G DRAN and CRAN edge\ndeployments.\n\n* Support 1588/PTP over IPv4 / IPV6, IEEE1588v2\n* Support SyncE /ITU-T G.8262\n* T-BC/T-TSC Boundary Clock and TSC Slave Clock /G.8273.2\n* T-GM Grand Master /G.8273.1 per G.8275.1 PTP Profile\n* PRTC Primary Reference Time Clock Class B/G.8272\n* T-TC Transparent Clock /G.8273.3\n* 1588 Software Stack and Servo Software in x86\n* [Silicom STS2 Card](https://www.silicom-usa.com/pr/server-adapters/networking-adapters/10-gigabit-ethernet-networking-adapters/p410g8ts81-timesync-server-adapter)\n\n### Prequisites:\n* [NFD Operator](https://operatorhub.io/operator/nfd-operator \"NFD operator needed for the discovery of STS cards\").\n* [SRO Operator](https://github.com/openshift/special-resource-operator)\n",
      "csv_display_name": "Silicom STS Operator",
      "csv_metadata_description": "This Operator is a Kubernetes custom controller whose goal\nis to serve the installation and lifecycle management of\nSilicom STS device plugins for Kubernetes.\n",
      "csv_name": "silicom-sts-operator.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-06T18:55:00.803000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "silicom-sts-operator",
      "provided_apis": [
        {
          "group": "sts.silicom.com",
          "kind": "StsConfig",
          "plural": "stsconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsNode",
          "plural": "stsnodes",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsOperatorConfig",
          "plural": "stsoperatorconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Silicom Ltd.",
      "related_images": [
        {
          "digest": "sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "image": "quay.io/silicom/gpsd@sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "name": "gpsd"
        },
        {
          "digest": "sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "image": "quay.io/silicom/phc2sys@sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "name": "phc2sys"
        },
        {
          "digest": "sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "image": "quay.io/silicom/tsyncd@sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "name": "tsyncd"
        },
        {
          "digest": "sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "image": "quay.io/silicom/grpc-tsyncd@sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "name": "grpc-tsyncd"
        },
        {
          "digest": "sha256:4729e7206d03d24877b439019e7b0b7ae5fb0f767845b9a6423fc2d60d0d1d81",
          "image": "quay.io/silicom/sts-plugin@sha256:4729e7206d03d24877b439019e7b0b7ae5fb0f767845b9a6423fc2d60d0d1d81",
          "name": "sts-plugin"
        },
        {
          "digest": "sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "image": "quay.io/silicom/ice-driver-src@sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "name": "ice-driver-src"
        },
        {
          "digest": "sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "image": "quay.io/silicom/sts-operator@sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "name": "sts-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "image": "quay.io/silicom/sts-operator@sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "name": "sts-operator-a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5-annotation"
        },
        {
          "digest": "sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "image": "quay.io/silicom/sts-operator@sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "6317982cdf7989fabed21ada",
      "alm_examples": [
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "gm-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              }
            ],
            "mode": "T-GM.8275.1",
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "gm-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "bc-1"
          },
          "spec": {
            "aprLevel": 0,
            "domainNumber": 24,
            "esmcMode": 1,
            "forwardable": 0,
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Slave",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f2",
                "ethPort": 2,
                "holdoff": 500,
                "ipv4": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-TBC.8275.1",
            "mode10MHz": 2,
            "modePPS": 2,
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "bc-1"
            },
            "phyLedsCtl": 0,
            "priority2": 128,
            "src10MHz": 1,
            "srcPPS": 1,
            "syncOption": 1,
            "synceCpu": 10,
            "synceRecClkPort": 0,
            "tracePtpMsg": -1,
            "twoStep": 0
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsNode",
          "metadata": {
            "name": "worker2"
          },
          "spec": {}
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsOperatorConfig",
          "metadata": {
            "name": "sts-operator-config",
            "namespace": "openshift-operators"
          },
          "spec": {
            "images": {},
            "sro": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/silicomltd/silicom-sts-operator@sha256:481744bba12f2f7f04df81447d1376b3076c2e184a06ae906d08a6bb1559f1b2",
      "bundle_path_digest": "sha256:481744bba12f2f7f04df81447d1376b3076c2e184a06ae906d08a6bb1559f1b2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-06T18:57:48.865000+00:00",
      "csv_description": "Silicom STS line card for 4G and 5G NIC enable real-time data transmission\nwith high timing accuracy at the lowest cost to power 5G DRAN and CRAN edge\ndeployments.\n\n* Support 1588/PTP over IPv4 / IPV6, IEEE1588v2\n* Support SyncE /ITU-T G.8262\n* T-BC/T-TSC Boundary Clock and TSC Slave Clock /G.8273.2\n* T-GM Grand Master /G.8273.1 per G.8275.1 PTP Profile\n* PRTC Primary Reference Time Clock Class B/G.8272\n* T-TC Transparent Clock /G.8273.3\n* 1588 Software Stack and Servo Software in x86\n* [Silicom STS2 Card](https://www.silicom-usa.com/pr/server-adapters/networking-adapters/10-gigabit-ethernet-networking-adapters/p410g8ts81-timesync-server-adapter)\n\n### Prequisites:\n* [NFD Operator](https://operatorhub.io/operator/nfd-operator \"NFD operator needed for the discovery of STS cards\").\n* [SRO Operator](https://github.com/openshift/special-resource-operator)\n",
      "csv_display_name": "Silicom STS Operator",
      "csv_metadata_description": "This Operator is a Kubernetes custom controller whose goal\nis to serve the installation and lifecycle management of\nSilicom STS device plugins for Kubernetes.\n",
      "csv_name": "silicom-sts-operator.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-06T18:57:48.865000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "silicom-sts-operator",
      "provided_apis": [
        {
          "group": "sts.silicom.com",
          "kind": "StsConfig",
          "plural": "stsconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsNode",
          "plural": "stsnodes",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsOperatorConfig",
          "plural": "stsoperatorconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Silicom Ltd.",
      "related_images": [
        {
          "digest": "sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "image": "quay.io/silicom/gpsd@sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "name": "gpsd"
        },
        {
          "digest": "sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "image": "quay.io/silicom/phc2sys@sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "name": "phc2sys"
        },
        {
          "digest": "sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "image": "quay.io/silicom/tsyncd@sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "name": "tsyncd"
        },
        {
          "digest": "sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "image": "quay.io/silicom/grpc-tsyncd@sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "name": "grpc-tsyncd"
        },
        {
          "digest": "sha256:4729e7206d03d24877b439019e7b0b7ae5fb0f767845b9a6423fc2d60d0d1d81",
          "image": "quay.io/silicom/sts-plugin@sha256:4729e7206d03d24877b439019e7b0b7ae5fb0f767845b9a6423fc2d60d0d1d81",
          "name": "sts-plugin"
        },
        {
          "digest": "sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "image": "quay.io/silicom/ice-driver-src@sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "name": "ice-driver-src"
        },
        {
          "digest": "sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "image": "quay.io/silicom/sts-operator@sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "name": "sts-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "image": "quay.io/silicom/sts-operator@sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "name": "sts-operator-a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5-annotation"
        },
        {
          "digest": "sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "image": "quay.io/silicom/sts-operator@sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "631798328db453f64c38a65b",
      "alm_examples": [
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "gm-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              }
            ],
            "mode": "T-GM.8275.1",
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "gm-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "bc-1"
          },
          "spec": {
            "aprLevel": 0,
            "domainNumber": 24,
            "esmcMode": 1,
            "forwardable": 0,
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Slave",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f2",
                "ethPort": 2,
                "holdoff": 500,
                "ipv4": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-TBC.8275.1",
            "mode10MHz": 2,
            "modePPS": 2,
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "bc-1"
            },
            "phyLedsCtl": 0,
            "priority2": 128,
            "src10MHz": 1,
            "srcPPS": 1,
            "syncOption": 1,
            "synceCpu": 10,
            "synceRecClkPort": 0,
            "tracePtpMsg": -1,
            "twoStep": 0
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsNode",
          "metadata": {
            "name": "worker2"
          },
          "spec": {}
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsOperatorConfig",
          "metadata": {
            "name": "sts-operator-config",
            "namespace": "openshift-operators"
          },
          "spec": {
            "images": {},
            "sro": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/silicomltd/silicom-sts-operator@sha256:481744bba12f2f7f04df81447d1376b3076c2e184a06ae906d08a6bb1559f1b2",
      "bundle_path_digest": "sha256:481744bba12f2f7f04df81447d1376b3076c2e184a06ae906d08a6bb1559f1b2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-06T18:57:54.067000+00:00",
      "csv_description": "Silicom STS line card for 4G and 5G NIC enable real-time data transmission\nwith high timing accuracy at the lowest cost to power 5G DRAN and CRAN edge\ndeployments.\n\n* Support 1588/PTP over IPv4 / IPV6, IEEE1588v2\n* Support SyncE /ITU-T G.8262\n* T-BC/T-TSC Boundary Clock and TSC Slave Clock /G.8273.2\n* T-GM Grand Master /G.8273.1 per G.8275.1 PTP Profile\n* PRTC Primary Reference Time Clock Class B/G.8272\n* T-TC Transparent Clock /G.8273.3\n* 1588 Software Stack and Servo Software in x86\n* [Silicom STS2 Card](https://www.silicom-usa.com/pr/server-adapters/networking-adapters/10-gigabit-ethernet-networking-adapters/p410g8ts81-timesync-server-adapter)\n\n### Prequisites:\n* [NFD Operator](https://operatorhub.io/operator/nfd-operator \"NFD operator needed for the discovery of STS cards\").\n* [SRO Operator](https://github.com/openshift/special-resource-operator)\n",
      "csv_display_name": "Silicom STS Operator",
      "csv_metadata_description": "This Operator is a Kubernetes custom controller whose goal\nis to serve the installation and lifecycle management of\nSilicom STS device plugins for Kubernetes.\n",
      "csv_name": "silicom-sts-operator.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-06T18:57:54.067000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "silicom-sts-operator",
      "provided_apis": [
        {
          "group": "sts.silicom.com",
          "kind": "StsConfig",
          "plural": "stsconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsNode",
          "plural": "stsnodes",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsOperatorConfig",
          "plural": "stsoperatorconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Silicom Ltd.",
      "related_images": [
        {
          "digest": "sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "image": "quay.io/silicom/gpsd@sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "name": "gpsd"
        },
        {
          "digest": "sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "image": "quay.io/silicom/phc2sys@sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "name": "phc2sys"
        },
        {
          "digest": "sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "image": "quay.io/silicom/tsyncd@sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "name": "tsyncd"
        },
        {
          "digest": "sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "image": "quay.io/silicom/grpc-tsyncd@sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "name": "grpc-tsyncd"
        },
        {
          "digest": "sha256:4729e7206d03d24877b439019e7b0b7ae5fb0f767845b9a6423fc2d60d0d1d81",
          "image": "quay.io/silicom/sts-plugin@sha256:4729e7206d03d24877b439019e7b0b7ae5fb0f767845b9a6423fc2d60d0d1d81",
          "name": "sts-plugin"
        },
        {
          "digest": "sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "image": "quay.io/silicom/ice-driver-src@sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "name": "ice-driver-src"
        },
        {
          "digest": "sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "image": "quay.io/silicom/sts-operator@sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "name": "sts-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "image": "quay.io/silicom/sts-operator@sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "name": "sts-operator-a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5-annotation"
        },
        {
          "digest": "sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "image": "quay.io/silicom/sts-operator@sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "631798b9a65ef76c956b7f5b",
      "alm_examples": [
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "gm-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              }
            ],
            "mode": "T-GM.8275.1",
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "gm-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "bc-1"
          },
          "spec": {
            "aprLevel": 0,
            "domainNumber": 24,
            "esmcMode": 1,
            "forwardable": 0,
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Slave",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f2",
                "ethPort": 2,
                "holdoff": 500,
                "ipv4": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-TBC.8275.1",
            "mode10MHz": 2,
            "modePPS": 2,
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "bc-1"
            },
            "phyLedsCtl": 0,
            "priority2": 128,
            "src10MHz": 1,
            "srcPPS": 1,
            "syncOption": 1,
            "synceCpu": 10,
            "synceRecClkPort": 0,
            "tracePtpMsg": -1,
            "twoStep": 0
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsNode",
          "metadata": {
            "name": "worker2"
          },
          "spec": {}
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsOperatorConfig",
          "metadata": {
            "name": "sts-operator-config",
            "namespace": "openshift-operators"
          },
          "spec": {
            "images": {},
            "sro": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/silicomltd/silicom-sts-operator@sha256:481744bba12f2f7f04df81447d1376b3076c2e184a06ae906d08a6bb1559f1b2",
      "bundle_path_digest": "sha256:481744bba12f2f7f04df81447d1376b3076c2e184a06ae906d08a6bb1559f1b2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-06T19:00:09.297000+00:00",
      "csv_description": "Silicom STS line card for 4G and 5G NIC enable real-time data transmission\nwith high timing accuracy at the lowest cost to power 5G DRAN and CRAN edge\ndeployments.\n\n* Support 1588/PTP over IPv4 / IPV6, IEEE1588v2\n* Support SyncE /ITU-T G.8262\n* T-BC/T-TSC Boundary Clock and TSC Slave Clock /G.8273.2\n* T-GM Grand Master /G.8273.1 per G.8275.1 PTP Profile\n* PRTC Primary Reference Time Clock Class B/G.8272\n* T-TC Transparent Clock /G.8273.3\n* 1588 Software Stack and Servo Software in x86\n* [Silicom STS2 Card](https://www.silicom-usa.com/pr/server-adapters/networking-adapters/10-gigabit-ethernet-networking-adapters/p410g8ts81-timesync-server-adapter)\n\n### Prequisites:\n* [NFD Operator](https://operatorhub.io/operator/nfd-operator \"NFD operator needed for the discovery of STS cards\").\n* [SRO Operator](https://github.com/openshift/special-resource-operator)\n",
      "csv_display_name": "Silicom STS Operator",
      "csv_metadata_description": "This Operator is a Kubernetes custom controller whose goal\nis to serve the installation and lifecycle management of\nSilicom STS device plugins for Kubernetes.\n",
      "csv_name": "silicom-sts-operator.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-06T19:00:09.297000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "silicom-sts-operator",
      "provided_apis": [
        {
          "group": "sts.silicom.com",
          "kind": "StsConfig",
          "plural": "stsconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsNode",
          "plural": "stsnodes",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsOperatorConfig",
          "plural": "stsoperatorconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Silicom Ltd.",
      "related_images": [
        {
          "digest": "sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "image": "quay.io/silicom/gpsd@sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "name": "gpsd"
        },
        {
          "digest": "sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "image": "quay.io/silicom/phc2sys@sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "name": "phc2sys"
        },
        {
          "digest": "sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "image": "quay.io/silicom/tsyncd@sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "name": "tsyncd"
        },
        {
          "digest": "sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "image": "quay.io/silicom/grpc-tsyncd@sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "name": "grpc-tsyncd"
        },
        {
          "digest": "sha256:4729e7206d03d24877b439019e7b0b7ae5fb0f767845b9a6423fc2d60d0d1d81",
          "image": "quay.io/silicom/sts-plugin@sha256:4729e7206d03d24877b439019e7b0b7ae5fb0f767845b9a6423fc2d60d0d1d81",
          "name": "sts-plugin"
        },
        {
          "digest": "sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "image": "quay.io/silicom/ice-driver-src@sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "name": "ice-driver-src"
        },
        {
          "digest": "sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "image": "quay.io/silicom/sts-operator@sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "name": "sts-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "image": "quay.io/silicom/sts-operator@sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "name": "sts-operator-a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5-annotation"
        },
        {
          "digest": "sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "image": "quay.io/silicom/sts-operator@sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "631798b9ae0dda4760d66461",
      "alm_examples": [
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "gm-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "mode": "Master",
                "synce": 1
              }
            ],
            "mode": "T-GM.8275.1",
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "gm-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "bc-1"
          },
          "spec": {
            "aprLevel": 0,
            "domainNumber": 24,
            "esmcMode": 1,
            "forwardable": 0,
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 0,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Slave",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f2",
                "ethPort": 2,
                "holdoff": 500,
                "ipv4": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-TBC.8275.1",
            "mode10MHz": 2,
            "modePPS": 2,
            "namespace": "openshift-operators",
            "nodeSelector": {
              "sts.silicom.com/config": "bc-1"
            },
            "phyLedsCtl": 0,
            "priority2": 128,
            "src10MHz": 1,
            "srcPPS": 1,
            "syncOption": 1,
            "synceCpu": 10,
            "synceRecClkPort": 0,
            "tracePtpMsg": -1,
            "twoStep": 0
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsNode",
          "metadata": {
            "name": "worker2"
          },
          "spec": {}
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsOperatorConfig",
          "metadata": {
            "name": "sts-operator-config",
            "namespace": "openshift-operators"
          },
          "spec": {
            "images": {},
            "sro": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/silicomltd/silicom-sts-operator@sha256:481744bba12f2f7f04df81447d1376b3076c2e184a06ae906d08a6bb1559f1b2",
      "bundle_path_digest": "sha256:481744bba12f2f7f04df81447d1376b3076c2e184a06ae906d08a6bb1559f1b2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-06T19:00:09.986000+00:00",
      "csv_description": "Silicom STS line card for 4G and 5G NIC enable real-time data transmission\nwith high timing accuracy at the lowest cost to power 5G DRAN and CRAN edge\ndeployments.\n\n* Support 1588/PTP over IPv4 / IPV6, IEEE1588v2\n* Support SyncE /ITU-T G.8262\n* T-BC/T-TSC Boundary Clock and TSC Slave Clock /G.8273.2\n* T-GM Grand Master /G.8273.1 per G.8275.1 PTP Profile\n* PRTC Primary Reference Time Clock Class B/G.8272\n* T-TC Transparent Clock /G.8273.3\n* 1588 Software Stack and Servo Software in x86\n* [Silicom STS2 Card](https://www.silicom-usa.com/pr/server-adapters/networking-adapters/10-gigabit-ethernet-networking-adapters/p410g8ts81-timesync-server-adapter)\n\n### Prequisites:\n* [NFD Operator](https://operatorhub.io/operator/nfd-operator \"NFD operator needed for the discovery of STS cards\").\n* [SRO Operator](https://github.com/openshift/special-resource-operator)\n",
      "csv_display_name": "Silicom STS Operator",
      "csv_metadata_description": "This Operator is a Kubernetes custom controller whose goal\nis to serve the installation and lifecycle management of\nSilicom STS device plugins for Kubernetes.\n",
      "csv_name": "silicom-sts-operator.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-06T19:00:09.986000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "silicom-sts-operator",
      "provided_apis": [
        {
          "group": "sts.silicom.com",
          "kind": "StsConfig",
          "plural": "stsconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsNode",
          "plural": "stsnodes",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsOperatorConfig",
          "plural": "stsoperatorconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Silicom Ltd.",
      "related_images": [
        {
          "digest": "sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "image": "quay.io/silicom/gpsd@sha256:b1c18257132644551cbc02d21eca2856c4c33b7fb55fef57d2c36f4845e5bf9d",
          "name": "gpsd"
        },
        {
          "digest": "sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "image": "quay.io/silicom/phc2sys@sha256:5646d7f861be705d33625e32b2a0608f8a294b7b6f63c818925775ba9a49d317",
          "name": "phc2sys"
        },
        {
          "digest": "sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "image": "quay.io/silicom/tsyncd@sha256:e4ef9aa7a005cb894c59f271bde14f4240b801b92f8f9151512131c6a11a0726",
          "name": "tsyncd"
        },
        {
          "digest": "sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "image": "quay.io/silicom/grpc-tsyncd@sha256:c703d059ae0788b87eb7594f9e1679bfe0733b4ef1daf59158673287accc4256",
          "name": "grpc-tsyncd"
        },
        {
          "digest": "sha256:4729e7206d03d24877b439019e7b0b7ae5fb0f767845b9a6423fc2d60d0d1d81",
          "image": "quay.io/silicom/sts-plugin@sha256:4729e7206d03d24877b439019e7b0b7ae5fb0f767845b9a6423fc2d60d0d1d81",
          "name": "sts-plugin"
        },
        {
          "digest": "sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "image": "quay.io/silicom/ice-driver-src@sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "name": "ice-driver-src"
        },
        {
          "digest": "sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "image": "quay.io/silicom/sts-operator@sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "name": "sts-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "image": "quay.io/silicom/sts-operator@sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "name": "sts-operator-a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5-annotation"
        },
        {
          "digest": "sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "image": "quay.io/silicom/sts-operator@sha256:44f16c77efc98edb88fdc0221793d6ea9221b2b590af2a48efd425299771624e",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "63179b12ae0dda4760d6653d",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:17916317541657236558fb265315967936c46d9022514f5947dca737314ac4b3",
      "bundle_path_digest": "sha256:17916317541657236558fb265315967936c46d9022514f5947dca737314ac4b3",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.15",
      "creation_date": "2022-09-06T19:10:10.871000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-06T19:10:10.871000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4",
          "name": "cloud-native-postgresql-170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4-annotation"
        },
        {
          "digest": "sha256:170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.15.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.15.4",
      "version_original": "1.15.4"
    },
    {
      "_id": "63179b9cae0dda4760d6659b",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:17916317541657236558fb265315967936c46d9022514f5947dca737314ac4b3",
      "bundle_path_digest": "sha256:17916317541657236558fb265315967936c46d9022514f5947dca737314ac4b3",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.15",
      "creation_date": "2022-09-06T19:12:28.695000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-06T19:12:28.695000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4",
          "name": "cloud-native-postgresql-170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4-annotation"
        },
        {
          "digest": "sha256:170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.15.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.15.4",
      "version_original": "1.15.4"
    },
    {
      "_id": "63179c20a65ef76c956b80c9",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:17916317541657236558fb265315967936c46d9022514f5947dca737314ac4b3",
      "bundle_path_digest": "sha256:17916317541657236558fb265315967936c46d9022514f5947dca737314ac4b3",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.15",
      "creation_date": "2022-09-06T19:14:40.106000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-06T19:14:40.106000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4",
          "name": "cloud-native-postgresql-170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4-annotation"
        },
        {
          "digest": "sha256:170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.15.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.15.4",
      "version_original": "1.15.4"
    },
    {
      "_id": "63179c5f64dc9b1b235b2bcc",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:17916317541657236558fb265315967936c46d9022514f5947dca737314ac4b3",
      "bundle_path_digest": "sha256:17916317541657236558fb265315967936c46d9022514f5947dca737314ac4b3",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.15",
      "creation_date": "2022-09-06T19:15:43.910000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-06T19:15:43.910000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4",
          "name": "cloud-native-postgresql-170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4-annotation"
        },
        {
          "digest": "sha256:170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.15.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.15.4",
      "version_original": "1.15.4"
    },
    {
      "_id": "63179d9364dc9b1b235b2c28",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:17916317541657236558fb265315967936c46d9022514f5947dca737314ac4b3",
      "bundle_path_digest": "sha256:17916317541657236558fb265315967936c46d9022514f5947dca737314ac4b3",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.15",
      "creation_date": "2022-09-06T19:20:51.087000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-06T19:20:51.087000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4",
          "name": "cloud-native-postgresql-170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4-annotation"
        },
        {
          "digest": "sha256:170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.15.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.15.4",
      "version_original": "1.15.4"
    },
    {
      "_id": "63179ed2902dda9ffff45c78",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:17916317541657236558fb265315967936c46d9022514f5947dca737314ac4b3",
      "bundle_path_digest": "sha256:17916317541657236558fb265315967936c46d9022514f5947dca737314ac4b3",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.15",
      "creation_date": "2022-09-06T19:26:10.821000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-06T19:26:10.821000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4",
          "name": "cloud-native-postgresql-170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4-annotation"
        },
        {
          "digest": "sha256:170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:170ba9ca43b758ff1f8107f8fcdbf51c5c3d3739a0da08391d448ab3137868c4",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.15.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.15.4",
      "version_original": "1.15.4"
    },
    {
      "_id": "6317ce49c3a9c550585b3785",
      "alm_examples": [
        {
          "api_version": "sonatype.com/v1alpha1",
          "kind": "NexusRepo",
          "metadata": {
            "name": "example-nexusrepo"
          },
          "spec": {
            "config": {
              "enabled": false,
              "mountPath": "/sonatype-nexus-conf"
            },
            "deployment": {
              "annotations": {},
              "postStart": {},
              "preStart": {},
              "terminationGracePeriodSeconds": 120
            },
            "deploymentStrategy": {
              "type": "Recreate"
            },
            "ingress": {
              "annotations": {},
              "enabled": false,
              "path": "/",
              "tls": {
                "enabled": true,
                "secretName": "nexus-tls"
              }
            },
            "nexus": {
              "dockerPort": 5003,
              "env": [
                {
                  "name": "INSTALL4J_ADD_VM_PARAMS",
                  "value": "-Xms2703M -Xmx2703M -XX:MaxDirectMemorySize=2703M -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
                },
                {
                  "name": "NEXUS_SECURITY_RANDOMPASSWORD",
                  "value": "false"
                }
              ],
              "hostAliases": [],
              "imageName": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
              "imagePullPolicy": "IfNotPresent",
              "imagePullSecret": "",
              "livenessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "path": "/",
                "periodSeconds": 30
              },
              "nexusPort": 8081,
              "podAnnotations": {},
              "readinessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "path": "/",
                "periodSeconds": 30
              },
              "resources": {},
              "securityContext": {},
              "service": {
                "type": "NodePort"
              }
            },
            "nexusProxyRoute": {
              "enabled": false
            },
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "enabled": true,
              "storageSize": "8Gi"
            },
            "replicaCount": 1,
            "route": {
              "enabled": false,
              "name": "docker",
              "portName": "docker"
            },
            "secret": {
              "enabled": false,
              "mountPath": "/etc/secret-volume",
              "readOnly": true
            },
            "service": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "ports": [
                {
                  "name": "nexus-service",
                  "port": 80,
                  "targetPort": 80
                }
              ]
            },
            "statefulset": {
              "enabled": false
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxrm-operator-bundle@sha256:4afdcff709d830c131720b11dff6d265db4af6f921829b81e09e07d9394a597c",
      "bundle_path_digest": "sha256:4afdcff709d830c131720b11dff6d265db4af6f921829b81e09e07d9394a597c",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-06T22:48:41.984000+00:00",
      "csv_description": "Nexus Repository is the central source of control to efficiently manage all binaries\nand build artifacts across your DevOps pipeline.\nThe flow of open source and third-party components into and through an organization\ncreates a complex software supply chain.\nNexus Repository delivers speed, efficiency, and quality to the governance\nand management of all dependencies, libraries, and applications for your DevOps teams.\n\n## Core Capabilities\n\n* **Dependency Management**:\n  Improves reliability with repeatable, fast access to secure dependencies\n* **Developer Productivity**:\n  Streamline developer workflows by enabling the sharing of components and applications across teams\n* **Supply Chain Performance**:\n  Improve speed-to-market and reduced build times with release advanced staging and component tagging\n* **CI/CD Integrations**:\n  Increase DevOps scalability with integrations to the most popular build and deployment tools\n\nVersion control systems and package registries do not scale when managing proprietary,\nopen source, and third-party components.\nOrganizations need a central binary and build artifact repository to manage dependencies\nacross the entire software supply chain.\n\n## Limitations\n\nHigh Availability Clustering (HA-C) is not supported for Nexus Repository Pro for OpenShift.\n\nThis operator will be released on a quarterly basis.\n\n## Controlling Automatic vs Manual Update\n\nIf you use the default configuration for the Nexus Repository Operator installation,\nplease notice that on any new operator release, the corresponding deployments are\nalso updated without user intervention, resulting in unscheduled downtime.\n\nIf you want to avoid this unscheduled downtime, we recommend installing the operator\ninto **its own namespace** with **manual approval** for updates.\n\n## Usage\n\nOnce the server instance is created by the operator and running,\nyou'll want to expose the service as you see fit:\n1. Create a Route to that service for nexus.port (8081).\n\nBy default, the Nexus Repository starts up in OSS mode until a license is installed.\n\nThe Nexus Repository can be further configured via the NexusRepo custom resource definition:\n\n| Parameter                                   | Description                         | Default                                 |\n| ------------------------------------------  | ----------------------------------  | ----------------------------------------|\n| `statefulset.enabled`                       | Use statefulset instead of deployment | `false` |\n| `deploymentStrategy.type`                   | Deployment Strategy     |  `Recreate` |\n| `nexus.env`                                 | Nexus environment variables         | `See example.` |\n| `nexus.resources`                           | Nexus resource requests and limits  | `{}`                                    |\n| `nexus.dockerPort`                          | Port to access docker               | `5003`                                  |\n| `nexus.nexusPort`                           | Internal port for Nexus service     | `8081`                                  |\n| `nexus.service.type`                        | Service for Nexus                   |`NodePort`                                |\n| `nexus.service.clusterIp`                   | Specific cluster IP when service type is cluster IP. Use None for headless service |`nil`   |\n| `nexus.securityContext`                     | Security Context |\n| `nexus.labels`                              | Service labels                      | `{}`                                    |\n| `nexus.podAnnotations`                      | Pod Annotations                     | `{}`\n| `nexus.livenessProbe.initialDelaySeconds`   | LivenessProbe initial delay         | 30                                      |\n| `nexus.livenessProbe.periodSeconds`         | Seconds between polls               | 30                                      |\n| `nexus.livenessProbe.failureThreshold`      | Number of attempts before failure   | 6                                       |\n| `nexus.livenessProbe.timeoutSeconds`        | Time in seconds after liveness probe times out    | `nil`                     |\n| `nexus.livenessProbe.path`                  | Path for LivenessProbe              | /                                       |\n| `nexus.readinessProbe.initialDelaySeconds`  | ReadinessProbe initial delay        | 30                                      |\n| `nexus.readinessProbe.periodSeconds`        | Seconds between polls               | 30                                      |\n| `nexus.readinessProbe.failureThreshold`     | Number of attempts before failure   | 6                                       |\n| `nexus.readinessProbe.timeoutSeconds`       | Time in seconds after readiness probe times out    | `nil`                    |\n| `nexus.readinessProbe.path`                 | Path for ReadinessProbe             | /                                       |\n| `nexus.hostAliases`                         | Aliases for IPs in /etc/hosts       | []                                      |\n| `ingress.enabled`                           | Create an ingress for Nexus         | `true`                                  |\n| `ingress.annotations`                       | Annotations to enhance ingress configuration  | `{}`                          |\n| `ingress.tls.enabled`                       | Enable TLS                          | `true`                                 |\n| `ingress.tls.secretName`                    | Name of the secret storing TLS cert, `false` to use the Ingress' default certificate | `nexus-tls`                             |\n| `ingress.path`                              | Path for ingress rules. GCP users should set to `/*` | `/`                    |\n| `tolerations`                               | tolerations list                    | `[]`                                    |\n| `config.enabled`                            | Enable configmap                    | `false`                                 |\n| `config.mountPath`                          | Path to mount the config            | `/sonatype-nexus-conf`                  |\n| `config.data`                               | Configmap data                      | `nil`                                   |\n| `deployment.terminationGracePeriodSeconds`  | Time to allow for clean shutdown    | 120                                     |\n| `deployment.annotations`                    | Annotations to enhance deployment configuration  | `{}`                       |\n| `deployment.initContainers`                 | Init containers to run before main containers  | `nil`                        |\n| `deployment.postStart.command`              | Command to run after starting the nexus container  | `nil`                    |\n| `deployment.preStart.command`               | Command to run before starting the nexus container  | `nil`                   |\n| `deployment.additionalContainers`           | Add additional Container         | `nil`                                      |\n| `deployment.additionalVolumes`              | Add additional Volumes           | `nil`                                      |\n| `deployment.additionalVolumeMounts`         | Add additional Volume mounts     | `nil`                                      |\n| `secret.enabled`                            | Enable secret                    | `false`                                    |\n| `secret.mountPath`                          | Path to mount the secret         | `/etc/secret-volume`                       |\n| `secret.readOnly`                           | Secret readonly state            | `true`                                     |\n| `secret.data`                               | Secret data                      | `nil`                                      |\n| `service.enabled`                           | Enable additional service        | `nil`                                      |\n| `service.name`                              | Service name                     | `nil`                                      |\n| `service.portName`                          | Service port name                | `nil`                                      |\n| `service.labels`                            | Service labels                   | `nil`                                      |\n| `service.annotations`                       | Service annotations              | `nil`                                      |\n| `service.loadBalancerSourceRanges`          | Service LoadBalancer source IP whitelist | `nil`                              |\n| `service.targetPort`                        | Service port                     | `nil`                                      |\n| `service.port`                              | Port for exposing service        | `nil`                                      |\n| `route.enabled`         | Set to true to create route for additional service | `false` |\n| `route.name`            | Name of route                                      | `docker` |\n| `route.portName`        | Target port name of service                        | `docker` |\n| `route.labels`          | Labels to be added to route                        | `{}` |\n| `route.annotations`     | Annotations to be added to route                   | `{}` |\n| `route.path`            | Host name of Route e.g jenkins.example.com         | nil |",
      "csv_display_name": "Nexus Repository Operator",
      "csv_metadata_description": "Nexus Repository is the central source of control to efficiently manage all binaries\nand build artifacts across your DevOps pipeline.",
      "csv_name": "nxrm-operator-certified.v3.41.1-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-06T22:48:41.984000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "nxrm-operator-certified",
      "provided_apis": [
        {
          "group": "sonatype.com",
          "kind": "NexusRepo",
          "version": "v1alpha1"
        }
      ],
      "provider": "Sonatype",
      "related_images": [
        {
          "digest": "sha256:6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6",
          "image": "registry.connect.redhat.com/sonatype/nxrm-operator-certified@sha256:6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6",
          "name": "nxrm-operator-certified-6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6-annotation"
        },
        {
          "digest": "sha256:6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6",
          "image": "registry.connect.redhat.com/sonatype/nxrm-operator-certified@sha256:6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6",
          "name": "nxrm-operator-certified"
        },
        {
          "digest": "sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
          "image": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
          "name": "nexus"
        },
        {
          "digest": "sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
          "image": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
          "name": "nexus-repository-manager-af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<3.41.1-1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "3.41.1-1",
      "version_original": "3.41.1-1"
    },
    {
      "_id": "6317cf0269c6696fbdd21c77",
      "alm_examples": [
        {
          "api_version": "sonatype.com/v1alpha1",
          "kind": "NexusRepo",
          "metadata": {
            "name": "example-nexusrepo"
          },
          "spec": {
            "config": {
              "enabled": false,
              "mountPath": "/sonatype-nexus-conf"
            },
            "deployment": {
              "annotations": {},
              "postStart": {},
              "preStart": {},
              "terminationGracePeriodSeconds": 120
            },
            "deploymentStrategy": {
              "type": "Recreate"
            },
            "ingress": {
              "annotations": {},
              "enabled": false,
              "path": "/",
              "tls": {
                "enabled": true,
                "secretName": "nexus-tls"
              }
            },
            "nexus": {
              "dockerPort": 5003,
              "env": [
                {
                  "name": "INSTALL4J_ADD_VM_PARAMS",
                  "value": "-Xms2703M -Xmx2703M -XX:MaxDirectMemorySize=2703M -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
                },
                {
                  "name": "NEXUS_SECURITY_RANDOMPASSWORD",
                  "value": "false"
                }
              ],
              "hostAliases": [],
              "imageName": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
              "imagePullPolicy": "IfNotPresent",
              "imagePullSecret": "",
              "livenessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "path": "/",
                "periodSeconds": 30
              },
              "nexusPort": 8081,
              "podAnnotations": {},
              "readinessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "path": "/",
                "periodSeconds": 30
              },
              "resources": {},
              "securityContext": {},
              "service": {
                "type": "NodePort"
              }
            },
            "nexusProxyRoute": {
              "enabled": false
            },
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "enabled": true,
              "storageSize": "8Gi"
            },
            "replicaCount": 1,
            "route": {
              "enabled": false,
              "name": "docker",
              "portName": "docker"
            },
            "secret": {
              "enabled": false,
              "mountPath": "/etc/secret-volume",
              "readOnly": true
            },
            "service": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "ports": [
                {
                  "name": "nexus-service",
                  "port": 80,
                  "targetPort": 80
                }
              ]
            },
            "statefulset": {
              "enabled": false
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxrm-operator-bundle@sha256:4afdcff709d830c131720b11dff6d265db4af6f921829b81e09e07d9394a597c",
      "bundle_path_digest": "sha256:4afdcff709d830c131720b11dff6d265db4af6f921829b81e09e07d9394a597c",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-06T22:51:46.394000+00:00",
      "csv_description": "Nexus Repository is the central source of control to efficiently manage all binaries\nand build artifacts across your DevOps pipeline.\nThe flow of open source and third-party components into and through an organization\ncreates a complex software supply chain.\nNexus Repository delivers speed, efficiency, and quality to the governance\nand management of all dependencies, libraries, and applications for your DevOps teams.\n\n## Core Capabilities\n\n* **Dependency Management**:\n  Improves reliability with repeatable, fast access to secure dependencies\n* **Developer Productivity**:\n  Streamline developer workflows by enabling the sharing of components and applications across teams\n* **Supply Chain Performance**:\n  Improve speed-to-market and reduced build times with release advanced staging and component tagging\n* **CI/CD Integrations**:\n  Increase DevOps scalability with integrations to the most popular build and deployment tools\n\nVersion control systems and package registries do not scale when managing proprietary,\nopen source, and third-party components.\nOrganizations need a central binary and build artifact repository to manage dependencies\nacross the entire software supply chain.\n\n## Limitations\n\nHigh Availability Clustering (HA-C) is not supported for Nexus Repository Pro for OpenShift.\n\nThis operator will be released on a quarterly basis.\n\n## Controlling Automatic vs Manual Update\n\nIf you use the default configuration for the Nexus Repository Operator installation,\nplease notice that on any new operator release, the corresponding deployments are\nalso updated without user intervention, resulting in unscheduled downtime.\n\nIf you want to avoid this unscheduled downtime, we recommend installing the operator\ninto **its own namespace** with **manual approval** for updates.\n\n## Usage\n\nOnce the server instance is created by the operator and running,\nyou'll want to expose the service as you see fit:\n1. Create a Route to that service for nexus.port (8081).\n\nBy default, the Nexus Repository starts up in OSS mode until a license is installed.\n\nThe Nexus Repository can be further configured via the NexusRepo custom resource definition:\n\n| Parameter                                   | Description                         | Default                                 |\n| ------------------------------------------  | ----------------------------------  | ----------------------------------------|\n| `statefulset.enabled`                       | Use statefulset instead of deployment | `false` |\n| `deploymentStrategy.type`                   | Deployment Strategy     |  `Recreate` |\n| `nexus.env`                                 | Nexus environment variables         | `See example.` |\n| `nexus.resources`                           | Nexus resource requests and limits  | `{}`                                    |\n| `nexus.dockerPort`                          | Port to access docker               | `5003`                                  |\n| `nexus.nexusPort`                           | Internal port for Nexus service     | `8081`                                  |\n| `nexus.service.type`                        | Service for Nexus                   |`NodePort`                                |\n| `nexus.service.clusterIp`                   | Specific cluster IP when service type is cluster IP. Use None for headless service |`nil`   |\n| `nexus.securityContext`                     | Security Context |\n| `nexus.labels`                              | Service labels                      | `{}`                                    |\n| `nexus.podAnnotations`                      | Pod Annotations                     | `{}`\n| `nexus.livenessProbe.initialDelaySeconds`   | LivenessProbe initial delay         | 30                                      |\n| `nexus.livenessProbe.periodSeconds`         | Seconds between polls               | 30                                      |\n| `nexus.livenessProbe.failureThreshold`      | Number of attempts before failure   | 6                                       |\n| `nexus.livenessProbe.timeoutSeconds`        | Time in seconds after liveness probe times out    | `nil`                     |\n| `nexus.livenessProbe.path`                  | Path for LivenessProbe              | /                                       |\n| `nexus.readinessProbe.initialDelaySeconds`  | ReadinessProbe initial delay        | 30                                      |\n| `nexus.readinessProbe.periodSeconds`        | Seconds between polls               | 30                                      |\n| `nexus.readinessProbe.failureThreshold`     | Number of attempts before failure   | 6                                       |\n| `nexus.readinessProbe.timeoutSeconds`       | Time in seconds after readiness probe times out    | `nil`                    |\n| `nexus.readinessProbe.path`                 | Path for ReadinessProbe             | /                                       |\n| `nexus.hostAliases`                         | Aliases for IPs in /etc/hosts       | []                                      |\n| `ingress.enabled`                           | Create an ingress for Nexus         | `true`                                  |\n| `ingress.annotations`                       | Annotations to enhance ingress configuration  | `{}`                          |\n| `ingress.tls.enabled`                       | Enable TLS                          | `true`                                 |\n| `ingress.tls.secretName`                    | Name of the secret storing TLS cert, `false` to use the Ingress' default certificate | `nexus-tls`                             |\n| `ingress.path`                              | Path for ingress rules. GCP users should set to `/*` | `/`                    |\n| `tolerations`                               | tolerations list                    | `[]`                                    |\n| `config.enabled`                            | Enable configmap                    | `false`                                 |\n| `config.mountPath`                          | Path to mount the config            | `/sonatype-nexus-conf`                  |\n| `config.data`                               | Configmap data                      | `nil`                                   |\n| `deployment.terminationGracePeriodSeconds`  | Time to allow for clean shutdown    | 120                                     |\n| `deployment.annotations`                    | Annotations to enhance deployment configuration  | `{}`                       |\n| `deployment.initContainers`                 | Init containers to run before main containers  | `nil`                        |\n| `deployment.postStart.command`              | Command to run after starting the nexus container  | `nil`                    |\n| `deployment.preStart.command`               | Command to run before starting the nexus container  | `nil`                   |\n| `deployment.additionalContainers`           | Add additional Container         | `nil`                                      |\n| `deployment.additionalVolumes`              | Add additional Volumes           | `nil`                                      |\n| `deployment.additionalVolumeMounts`         | Add additional Volume mounts     | `nil`                                      |\n| `secret.enabled`                            | Enable secret                    | `false`                                    |\n| `secret.mountPath`                          | Path to mount the secret         | `/etc/secret-volume`                       |\n| `secret.readOnly`                           | Secret readonly state            | `true`                                     |\n| `secret.data`                               | Secret data                      | `nil`                                      |\n| `service.enabled`                           | Enable additional service        | `nil`                                      |\n| `service.name`                              | Service name                     | `nil`                                      |\n| `service.portName`                          | Service port name                | `nil`                                      |\n| `service.labels`                            | Service labels                   | `nil`                                      |\n| `service.annotations`                       | Service annotations              | `nil`                                      |\n| `service.loadBalancerSourceRanges`          | Service LoadBalancer source IP whitelist | `nil`                              |\n| `service.targetPort`                        | Service port                     | `nil`                                      |\n| `service.port`                              | Port for exposing service        | `nil`                                      |\n| `route.enabled`         | Set to true to create route for additional service | `false` |\n| `route.name`            | Name of route                                      | `docker` |\n| `route.portName`        | Target port name of service                        | `docker` |\n| `route.labels`          | Labels to be added to route                        | `{}` |\n| `route.annotations`     | Annotations to be added to route                   | `{}` |\n| `route.path`            | Host name of Route e.g jenkins.example.com         | nil |",
      "csv_display_name": "Nexus Repository Operator",
      "csv_metadata_description": "Nexus Repository is the central source of control to efficiently manage all binaries\nand build artifacts across your DevOps pipeline.",
      "csv_name": "nxrm-operator-certified.v3.41.1-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-06T22:51:46.394000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "nxrm-operator-certified",
      "provided_apis": [
        {
          "group": "sonatype.com",
          "kind": "NexusRepo",
          "plural": "nexusrepos",
          "version": "v1alpha1"
        }
      ],
      "provider": "Sonatype",
      "related_images": [
        {
          "digest": "sha256:6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6",
          "image": "registry.connect.redhat.com/sonatype/nxrm-operator-certified@sha256:6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6",
          "name": "nxrm-operator-certified-6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6-annotation"
        },
        {
          "digest": "sha256:6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6",
          "image": "registry.connect.redhat.com/sonatype/nxrm-operator-certified@sha256:6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6",
          "name": "nxrm-operator-certified"
        },
        {
          "digest": "sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
          "image": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
          "name": "nexus"
        },
        {
          "digest": "sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
          "image": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
          "name": "nexus-repository-manager-af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<3.41.1-1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "3.41.1-1",
      "version_original": "3.41.1-1"
    },
    {
      "_id": "6317d0a07105fcda2cfb8493",
      "alm_examples": [
        {
          "api_version": "sonatype.com/v1alpha1",
          "kind": "NexusRepo",
          "metadata": {
            "name": "example-nexusrepo"
          },
          "spec": {
            "config": {
              "enabled": false,
              "mountPath": "/sonatype-nexus-conf"
            },
            "deployment": {
              "annotations": {},
              "postStart": {},
              "preStart": {},
              "terminationGracePeriodSeconds": 120
            },
            "deploymentStrategy": {
              "type": "Recreate"
            },
            "ingress": {
              "annotations": {},
              "enabled": false,
              "path": "/",
              "tls": {
                "enabled": true,
                "secretName": "nexus-tls"
              }
            },
            "nexus": {
              "dockerPort": 5003,
              "env": [
                {
                  "name": "INSTALL4J_ADD_VM_PARAMS",
                  "value": "-Xms2703M -Xmx2703M -XX:MaxDirectMemorySize=2703M -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
                },
                {
                  "name": "NEXUS_SECURITY_RANDOMPASSWORD",
                  "value": "false"
                }
              ],
              "hostAliases": [],
              "imageName": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
              "imagePullPolicy": "IfNotPresent",
              "imagePullSecret": "",
              "livenessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "path": "/",
                "periodSeconds": 30
              },
              "nexusPort": 8081,
              "podAnnotations": {},
              "readinessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "path": "/",
                "periodSeconds": 30
              },
              "resources": {},
              "securityContext": {},
              "service": {
                "type": "NodePort"
              }
            },
            "nexusProxyRoute": {
              "enabled": false
            },
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "enabled": true,
              "storageSize": "8Gi"
            },
            "replicaCount": 1,
            "route": {
              "enabled": false,
              "name": "docker",
              "portName": "docker"
            },
            "secret": {
              "enabled": false,
              "mountPath": "/etc/secret-volume",
              "readOnly": true
            },
            "service": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "ports": [
                {
                  "name": "nexus-service",
                  "port": 80,
                  "targetPort": 80
                }
              ]
            },
            "statefulset": {
              "enabled": false
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxrm-operator-bundle@sha256:4afdcff709d830c131720b11dff6d265db4af6f921829b81e09e07d9394a597c",
      "bundle_path_digest": "sha256:4afdcff709d830c131720b11dff6d265db4af6f921829b81e09e07d9394a597c",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-06T22:58:40.493000+00:00",
      "csv_description": "Nexus Repository is the central source of control to efficiently manage all binaries\nand build artifacts across your DevOps pipeline.\nThe flow of open source and third-party components into and through an organization\ncreates a complex software supply chain.\nNexus Repository delivers speed, efficiency, and quality to the governance\nand management of all dependencies, libraries, and applications for your DevOps teams.\n\n## Core Capabilities\n\n* **Dependency Management**:\n  Improves reliability with repeatable, fast access to secure dependencies\n* **Developer Productivity**:\n  Streamline developer workflows by enabling the sharing of components and applications across teams\n* **Supply Chain Performance**:\n  Improve speed-to-market and reduced build times with release advanced staging and component tagging\n* **CI/CD Integrations**:\n  Increase DevOps scalability with integrations to the most popular build and deployment tools\n\nVersion control systems and package registries do not scale when managing proprietary,\nopen source, and third-party components.\nOrganizations need a central binary and build artifact repository to manage dependencies\nacross the entire software supply chain.\n\n## Limitations\n\nHigh Availability Clustering (HA-C) is not supported for Nexus Repository Pro for OpenShift.\n\nThis operator will be released on a quarterly basis.\n\n## Controlling Automatic vs Manual Update\n\nIf you use the default configuration for the Nexus Repository Operator installation,\nplease notice that on any new operator release, the corresponding deployments are\nalso updated without user intervention, resulting in unscheduled downtime.\n\nIf you want to avoid this unscheduled downtime, we recommend installing the operator\ninto **its own namespace** with **manual approval** for updates.\n\n## Usage\n\nOnce the server instance is created by the operator and running,\nyou'll want to expose the service as you see fit:\n1. Create a Route to that service for nexus.port (8081).\n\nBy default, the Nexus Repository starts up in OSS mode until a license is installed.\n\nThe Nexus Repository can be further configured via the NexusRepo custom resource definition:\n\n| Parameter                                   | Description                         | Default                                 |\n| ------------------------------------------  | ----------------------------------  | ----------------------------------------|\n| `statefulset.enabled`                       | Use statefulset instead of deployment | `false` |\n| `deploymentStrategy.type`                   | Deployment Strategy     |  `Recreate` |\n| `nexus.env`                                 | Nexus environment variables         | `See example.` |\n| `nexus.resources`                           | Nexus resource requests and limits  | `{}`                                    |\n| `nexus.dockerPort`                          | Port to access docker               | `5003`                                  |\n| `nexus.nexusPort`                           | Internal port for Nexus service     | `8081`                                  |\n| `nexus.service.type`                        | Service for Nexus                   |`NodePort`                                |\n| `nexus.service.clusterIp`                   | Specific cluster IP when service type is cluster IP. Use None for headless service |`nil`   |\n| `nexus.securityContext`                     | Security Context |\n| `nexus.labels`                              | Service labels                      | `{}`                                    |\n| `nexus.podAnnotations`                      | Pod Annotations                     | `{}`\n| `nexus.livenessProbe.initialDelaySeconds`   | LivenessProbe initial delay         | 30                                      |\n| `nexus.livenessProbe.periodSeconds`         | Seconds between polls               | 30                                      |\n| `nexus.livenessProbe.failureThreshold`      | Number of attempts before failure   | 6                                       |\n| `nexus.livenessProbe.timeoutSeconds`        | Time in seconds after liveness probe times out    | `nil`                     |\n| `nexus.livenessProbe.path`                  | Path for LivenessProbe              | /                                       |\n| `nexus.readinessProbe.initialDelaySeconds`  | ReadinessProbe initial delay        | 30                                      |\n| `nexus.readinessProbe.periodSeconds`        | Seconds between polls               | 30                                      |\n| `nexus.readinessProbe.failureThreshold`     | Number of attempts before failure   | 6                                       |\n| `nexus.readinessProbe.timeoutSeconds`       | Time in seconds after readiness probe times out    | `nil`                    |\n| `nexus.readinessProbe.path`                 | Path for ReadinessProbe             | /                                       |\n| `nexus.hostAliases`                         | Aliases for IPs in /etc/hosts       | []                                      |\n| `ingress.enabled`                           | Create an ingress for Nexus         | `true`                                  |\n| `ingress.annotations`                       | Annotations to enhance ingress configuration  | `{}`                          |\n| `ingress.tls.enabled`                       | Enable TLS                          | `true`                                 |\n| `ingress.tls.secretName`                    | Name of the secret storing TLS cert, `false` to use the Ingress' default certificate | `nexus-tls`                             |\n| `ingress.path`                              | Path for ingress rules. GCP users should set to `/*` | `/`                    |\n| `tolerations`                               | tolerations list                    | `[]`                                    |\n| `config.enabled`                            | Enable configmap                    | `false`                                 |\n| `config.mountPath`                          | Path to mount the config            | `/sonatype-nexus-conf`                  |\n| `config.data`                               | Configmap data                      | `nil`                                   |\n| `deployment.terminationGracePeriodSeconds`  | Time to allow for clean shutdown    | 120                                     |\n| `deployment.annotations`                    | Annotations to enhance deployment configuration  | `{}`                       |\n| `deployment.initContainers`                 | Init containers to run before main containers  | `nil`                        |\n| `deployment.postStart.command`              | Command to run after starting the nexus container  | `nil`                    |\n| `deployment.preStart.command`               | Command to run before starting the nexus container  | `nil`                   |\n| `deployment.additionalContainers`           | Add additional Container         | `nil`                                      |\n| `deployment.additionalVolumes`              | Add additional Volumes           | `nil`                                      |\n| `deployment.additionalVolumeMounts`         | Add additional Volume mounts     | `nil`                                      |\n| `secret.enabled`                            | Enable secret                    | `false`                                    |\n| `secret.mountPath`                          | Path to mount the secret         | `/etc/secret-volume`                       |\n| `secret.readOnly`                           | Secret readonly state            | `true`                                     |\n| `secret.data`                               | Secret data                      | `nil`                                      |\n| `service.enabled`                           | Enable additional service        | `nil`                                      |\n| `service.name`                              | Service name                     | `nil`                                      |\n| `service.portName`                          | Service port name                | `nil`                                      |\n| `service.labels`                            | Service labels                   | `nil`                                      |\n| `service.annotations`                       | Service annotations              | `nil`                                      |\n| `service.loadBalancerSourceRanges`          | Service LoadBalancer source IP whitelist | `nil`                              |\n| `service.targetPort`                        | Service port                     | `nil`                                      |\n| `service.port`                              | Port for exposing service        | `nil`                                      |\n| `route.enabled`         | Set to true to create route for additional service | `false` |\n| `route.name`            | Name of route                                      | `docker` |\n| `route.portName`        | Target port name of service                        | `docker` |\n| `route.labels`          | Labels to be added to route                        | `{}` |\n| `route.annotations`     | Annotations to be added to route                   | `{}` |\n| `route.path`            | Host name of Route e.g jenkins.example.com         | nil |",
      "csv_display_name": "Nexus Repository Operator",
      "csv_metadata_description": "Nexus Repository is the central source of control to efficiently manage all binaries\nand build artifacts across your DevOps pipeline.",
      "csv_name": "nxrm-operator-certified.v3.41.1-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-06T22:58:40.493000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "nxrm-operator-certified",
      "provided_apis": [
        {
          "group": "sonatype.com",
          "kind": "NexusRepo",
          "plural": "nexusrepos",
          "version": "v1alpha1"
        }
      ],
      "provider": "Sonatype",
      "related_images": [
        {
          "digest": "sha256:6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6",
          "image": "registry.connect.redhat.com/sonatype/nxrm-operator-certified@sha256:6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6",
          "name": "nxrm-operator-certified-6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6-annotation"
        },
        {
          "digest": "sha256:6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6",
          "image": "registry.connect.redhat.com/sonatype/nxrm-operator-certified@sha256:6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6",
          "name": "nxrm-operator-certified"
        },
        {
          "digest": "sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
          "image": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
          "name": "nexus"
        },
        {
          "digest": "sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
          "image": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
          "name": "nexus-repository-manager-af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<3.41.1-1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "3.41.1-1",
      "version_original": "3.41.1-1"
    },
    {
      "_id": "6317d15a7105fcda2cfb84d1",
      "alm_examples": [
        {
          "api_version": "sonatype.com/v1alpha1",
          "kind": "NexusRepo",
          "metadata": {
            "name": "example-nexusrepo"
          },
          "spec": {
            "config": {
              "enabled": false,
              "mountPath": "/sonatype-nexus-conf"
            },
            "deployment": {
              "annotations": {},
              "postStart": {},
              "preStart": {},
              "terminationGracePeriodSeconds": 120
            },
            "deploymentStrategy": {
              "type": "Recreate"
            },
            "ingress": {
              "annotations": {},
              "enabled": false,
              "path": "/",
              "tls": {
                "enabled": true,
                "secretName": "nexus-tls"
              }
            },
            "nexus": {
              "dockerPort": 5003,
              "env": [
                {
                  "name": "INSTALL4J_ADD_VM_PARAMS",
                  "value": "-Xms2703M -Xmx2703M -XX:MaxDirectMemorySize=2703M -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
                },
                {
                  "name": "NEXUS_SECURITY_RANDOMPASSWORD",
                  "value": "false"
                }
              ],
              "hostAliases": [],
              "imageName": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
              "imagePullPolicy": "IfNotPresent",
              "imagePullSecret": "",
              "livenessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "path": "/",
                "periodSeconds": 30
              },
              "nexusPort": 8081,
              "podAnnotations": {},
              "readinessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "path": "/",
                "periodSeconds": 30
              },
              "resources": {},
              "securityContext": {},
              "service": {
                "type": "NodePort"
              }
            },
            "nexusProxyRoute": {
              "enabled": false
            },
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "enabled": true,
              "storageSize": "8Gi"
            },
            "replicaCount": 1,
            "route": {
              "enabled": false,
              "name": "docker",
              "portName": "docker"
            },
            "secret": {
              "enabled": false,
              "mountPath": "/etc/secret-volume",
              "readOnly": true
            },
            "service": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "ports": [
                {
                  "name": "nexus-service",
                  "port": 80,
                  "targetPort": 80
                }
              ]
            },
            "statefulset": {
              "enabled": false
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxrm-operator-bundle@sha256:4afdcff709d830c131720b11dff6d265db4af6f921829b81e09e07d9394a597c",
      "bundle_path_digest": "sha256:4afdcff709d830c131720b11dff6d265db4af6f921829b81e09e07d9394a597c",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-06T23:01:46.934000+00:00",
      "csv_description": "Nexus Repository is the central source of control to efficiently manage all binaries\nand build artifacts across your DevOps pipeline.\nThe flow of open source and third-party components into and through an organization\ncreates a complex software supply chain.\nNexus Repository delivers speed, efficiency, and quality to the governance\nand management of all dependencies, libraries, and applications for your DevOps teams.\n\n## Core Capabilities\n\n* **Dependency Management**:\n  Improves reliability with repeatable, fast access to secure dependencies\n* **Developer Productivity**:\n  Streamline developer workflows by enabling the sharing of components and applications across teams\n* **Supply Chain Performance**:\n  Improve speed-to-market and reduced build times with release advanced staging and component tagging\n* **CI/CD Integrations**:\n  Increase DevOps scalability with integrations to the most popular build and deployment tools\n\nVersion control systems and package registries do not scale when managing proprietary,\nopen source, and third-party components.\nOrganizations need a central binary and build artifact repository to manage dependencies\nacross the entire software supply chain.\n\n## Limitations\n\nHigh Availability Clustering (HA-C) is not supported for Nexus Repository Pro for OpenShift.\n\nThis operator will be released on a quarterly basis.\n\n## Controlling Automatic vs Manual Update\n\nIf you use the default configuration for the Nexus Repository Operator installation,\nplease notice that on any new operator release, the corresponding deployments are\nalso updated without user intervention, resulting in unscheduled downtime.\n\nIf you want to avoid this unscheduled downtime, we recommend installing the operator\ninto **its own namespace** with **manual approval** for updates.\n\n## Usage\n\nOnce the server instance is created by the operator and running,\nyou'll want to expose the service as you see fit:\n1. Create a Route to that service for nexus.port (8081).\n\nBy default, the Nexus Repository starts up in OSS mode until a license is installed.\n\nThe Nexus Repository can be further configured via the NexusRepo custom resource definition:\n\n| Parameter                                   | Description                         | Default                                 |\n| ------------------------------------------  | ----------------------------------  | ----------------------------------------|\n| `statefulset.enabled`                       | Use statefulset instead of deployment | `false` |\n| `deploymentStrategy.type`                   | Deployment Strategy     |  `Recreate` |\n| `nexus.env`                                 | Nexus environment variables         | `See example.` |\n| `nexus.resources`                           | Nexus resource requests and limits  | `{}`                                    |\n| `nexus.dockerPort`                          | Port to access docker               | `5003`                                  |\n| `nexus.nexusPort`                           | Internal port for Nexus service     | `8081`                                  |\n| `nexus.service.type`                        | Service for Nexus                   |`NodePort`                                |\n| `nexus.service.clusterIp`                   | Specific cluster IP when service type is cluster IP. Use None for headless service |`nil`   |\n| `nexus.securityContext`                     | Security Context |\n| `nexus.labels`                              | Service labels                      | `{}`                                    |\n| `nexus.podAnnotations`                      | Pod Annotations                     | `{}`\n| `nexus.livenessProbe.initialDelaySeconds`   | LivenessProbe initial delay         | 30                                      |\n| `nexus.livenessProbe.periodSeconds`         | Seconds between polls               | 30                                      |\n| `nexus.livenessProbe.failureThreshold`      | Number of attempts before failure   | 6                                       |\n| `nexus.livenessProbe.timeoutSeconds`        | Time in seconds after liveness probe times out    | `nil`                     |\n| `nexus.livenessProbe.path`                  | Path for LivenessProbe              | /                                       |\n| `nexus.readinessProbe.initialDelaySeconds`  | ReadinessProbe initial delay        | 30                                      |\n| `nexus.readinessProbe.periodSeconds`        | Seconds between polls               | 30                                      |\n| `nexus.readinessProbe.failureThreshold`     | Number of attempts before failure   | 6                                       |\n| `nexus.readinessProbe.timeoutSeconds`       | Time in seconds after readiness probe times out    | `nil`                    |\n| `nexus.readinessProbe.path`                 | Path for ReadinessProbe             | /                                       |\n| `nexus.hostAliases`                         | Aliases for IPs in /etc/hosts       | []                                      |\n| `ingress.enabled`                           | Create an ingress for Nexus         | `true`                                  |\n| `ingress.annotations`                       | Annotations to enhance ingress configuration  | `{}`                          |\n| `ingress.tls.enabled`                       | Enable TLS                          | `true`                                 |\n| `ingress.tls.secretName`                    | Name of the secret storing TLS cert, `false` to use the Ingress' default certificate | `nexus-tls`                             |\n| `ingress.path`                              | Path for ingress rules. GCP users should set to `/*` | `/`                    |\n| `tolerations`                               | tolerations list                    | `[]`                                    |\n| `config.enabled`                            | Enable configmap                    | `false`                                 |\n| `config.mountPath`                          | Path to mount the config            | `/sonatype-nexus-conf`                  |\n| `config.data`                               | Configmap data                      | `nil`                                   |\n| `deployment.terminationGracePeriodSeconds`  | Time to allow for clean shutdown    | 120                                     |\n| `deployment.annotations`                    | Annotations to enhance deployment configuration  | `{}`                       |\n| `deployment.initContainers`                 | Init containers to run before main containers  | `nil`                        |\n| `deployment.postStart.command`              | Command to run after starting the nexus container  | `nil`                    |\n| `deployment.preStart.command`               | Command to run before starting the nexus container  | `nil`                   |\n| `deployment.additionalContainers`           | Add additional Container         | `nil`                                      |\n| `deployment.additionalVolumes`              | Add additional Volumes           | `nil`                                      |\n| `deployment.additionalVolumeMounts`         | Add additional Volume mounts     | `nil`                                      |\n| `secret.enabled`                            | Enable secret                    | `false`                                    |\n| `secret.mountPath`                          | Path to mount the secret         | `/etc/secret-volume`                       |\n| `secret.readOnly`                           | Secret readonly state            | `true`                                     |\n| `secret.data`                               | Secret data                      | `nil`                                      |\n| `service.enabled`                           | Enable additional service        | `nil`                                      |\n| `service.name`                              | Service name                     | `nil`                                      |\n| `service.portName`                          | Service port name                | `nil`                                      |\n| `service.labels`                            | Service labels                   | `nil`                                      |\n| `service.annotations`                       | Service annotations              | `nil`                                      |\n| `service.loadBalancerSourceRanges`          | Service LoadBalancer source IP whitelist | `nil`                              |\n| `service.targetPort`                        | Service port                     | `nil`                                      |\n| `service.port`                              | Port for exposing service        | `nil`                                      |\n| `route.enabled`         | Set to true to create route for additional service | `false` |\n| `route.name`            | Name of route                                      | `docker` |\n| `route.portName`        | Target port name of service                        | `docker` |\n| `route.labels`          | Labels to be added to route                        | `{}` |\n| `route.annotations`     | Annotations to be added to route                   | `{}` |\n| `route.path`            | Host name of Route e.g jenkins.example.com         | nil |",
      "csv_display_name": "Nexus Repository Operator",
      "csv_metadata_description": "Nexus Repository is the central source of control to efficiently manage all binaries\nand build artifacts across your DevOps pipeline.",
      "csv_name": "nxrm-operator-certified.v3.41.1-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-06T23:01:46.934000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "nxrm-operator-certified",
      "provided_apis": [
        {
          "group": "sonatype.com",
          "kind": "NexusRepo",
          "plural": "nexusrepos",
          "version": "v1alpha1"
        }
      ],
      "provider": "Sonatype",
      "related_images": [
        {
          "digest": "sha256:6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6",
          "image": "registry.connect.redhat.com/sonatype/nxrm-operator-certified@sha256:6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6",
          "name": "nxrm-operator-certified-6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6-annotation"
        },
        {
          "digest": "sha256:6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6",
          "image": "registry.connect.redhat.com/sonatype/nxrm-operator-certified@sha256:6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6",
          "name": "nxrm-operator-certified"
        },
        {
          "digest": "sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
          "image": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
          "name": "nexus"
        },
        {
          "digest": "sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
          "image": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
          "name": "nexus-repository-manager-af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<3.41.1-1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "3.41.1-1",
      "version_original": "3.41.1-1"
    },
    {
      "_id": "6317d16e776505c5d05b2b34",
      "alm_examples": [
        {
          "api_version": "sonatype.com/v1alpha1",
          "kind": "NexusRepo",
          "metadata": {
            "name": "example-nexusrepo"
          },
          "spec": {
            "config": {
              "enabled": false,
              "mountPath": "/sonatype-nexus-conf"
            },
            "deployment": {
              "annotations": {},
              "postStart": {},
              "preStart": {},
              "terminationGracePeriodSeconds": 120
            },
            "deploymentStrategy": {
              "type": "Recreate"
            },
            "ingress": {
              "annotations": {},
              "enabled": false,
              "path": "/",
              "tls": {
                "enabled": true,
                "secretName": "nexus-tls"
              }
            },
            "nexus": {
              "dockerPort": 5003,
              "env": [
                {
                  "name": "INSTALL4J_ADD_VM_PARAMS",
                  "value": "-Xms2703M -Xmx2703M -XX:MaxDirectMemorySize=2703M -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
                },
                {
                  "name": "NEXUS_SECURITY_RANDOMPASSWORD",
                  "value": "false"
                }
              ],
              "hostAliases": [],
              "imageName": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
              "imagePullPolicy": "IfNotPresent",
              "imagePullSecret": "",
              "livenessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "path": "/",
                "periodSeconds": 30
              },
              "nexusPort": 8081,
              "podAnnotations": {},
              "readinessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "path": "/",
                "periodSeconds": 30
              },
              "resources": {},
              "securityContext": {},
              "service": {
                "type": "NodePort"
              }
            },
            "nexusProxyRoute": {
              "enabled": false
            },
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "enabled": true,
              "storageSize": "8Gi"
            },
            "replicaCount": 1,
            "route": {
              "enabled": false,
              "name": "docker",
              "portName": "docker"
            },
            "secret": {
              "enabled": false,
              "mountPath": "/etc/secret-volume",
              "readOnly": true
            },
            "service": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "ports": [
                {
                  "name": "nexus-service",
                  "port": 80,
                  "targetPort": 80
                }
              ]
            },
            "statefulset": {
              "enabled": false
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxrm-operator-bundle@sha256:4afdcff709d830c131720b11dff6d265db4af6f921829b81e09e07d9394a597c",
      "bundle_path_digest": "sha256:4afdcff709d830c131720b11dff6d265db4af6f921829b81e09e07d9394a597c",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-06T23:02:06.035000+00:00",
      "csv_description": "Nexus Repository is the central source of control to efficiently manage all binaries\nand build artifacts across your DevOps pipeline.\nThe flow of open source and third-party components into and through an organization\ncreates a complex software supply chain.\nNexus Repository delivers speed, efficiency, and quality to the governance\nand management of all dependencies, libraries, and applications for your DevOps teams.\n\n## Core Capabilities\n\n* **Dependency Management**:\n  Improves reliability with repeatable, fast access to secure dependencies\n* **Developer Productivity**:\n  Streamline developer workflows by enabling the sharing of components and applications across teams\n* **Supply Chain Performance**:\n  Improve speed-to-market and reduced build times with release advanced staging and component tagging\n* **CI/CD Integrations**:\n  Increase DevOps scalability with integrations to the most popular build and deployment tools\n\nVersion control systems and package registries do not scale when managing proprietary,\nopen source, and third-party components.\nOrganizations need a central binary and build artifact repository to manage dependencies\nacross the entire software supply chain.\n\n## Limitations\n\nHigh Availability Clustering (HA-C) is not supported for Nexus Repository Pro for OpenShift.\n\nThis operator will be released on a quarterly basis.\n\n## Controlling Automatic vs Manual Update\n\nIf you use the default configuration for the Nexus Repository Operator installation,\nplease notice that on any new operator release, the corresponding deployments are\nalso updated without user intervention, resulting in unscheduled downtime.\n\nIf you want to avoid this unscheduled downtime, we recommend installing the operator\ninto **its own namespace** with **manual approval** for updates.\n\n## Usage\n\nOnce the server instance is created by the operator and running,\nyou'll want to expose the service as you see fit:\n1. Create a Route to that service for nexus.port (8081).\n\nBy default, the Nexus Repository starts up in OSS mode until a license is installed.\n\nThe Nexus Repository can be further configured via the NexusRepo custom resource definition:\n\n| Parameter                                   | Description                         | Default                                 |\n| ------------------------------------------  | ----------------------------------  | ----------------------------------------|\n| `statefulset.enabled`                       | Use statefulset instead of deployment | `false` |\n| `deploymentStrategy.type`                   | Deployment Strategy     |  `Recreate` |\n| `nexus.env`                                 | Nexus environment variables         | `See example.` |\n| `nexus.resources`                           | Nexus resource requests and limits  | `{}`                                    |\n| `nexus.dockerPort`                          | Port to access docker               | `5003`                                  |\n| `nexus.nexusPort`                           | Internal port for Nexus service     | `8081`                                  |\n| `nexus.service.type`                        | Service for Nexus                   |`NodePort`                                |\n| `nexus.service.clusterIp`                   | Specific cluster IP when service type is cluster IP. Use None for headless service |`nil`   |\n| `nexus.securityContext`                     | Security Context |\n| `nexus.labels`                              | Service labels                      | `{}`                                    |\n| `nexus.podAnnotations`                      | Pod Annotations                     | `{}`\n| `nexus.livenessProbe.initialDelaySeconds`   | LivenessProbe initial delay         | 30                                      |\n| `nexus.livenessProbe.periodSeconds`         | Seconds between polls               | 30                                      |\n| `nexus.livenessProbe.failureThreshold`      | Number of attempts before failure   | 6                                       |\n| `nexus.livenessProbe.timeoutSeconds`        | Time in seconds after liveness probe times out    | `nil`                     |\n| `nexus.livenessProbe.path`                  | Path for LivenessProbe              | /                                       |\n| `nexus.readinessProbe.initialDelaySeconds`  | ReadinessProbe initial delay        | 30                                      |\n| `nexus.readinessProbe.periodSeconds`        | Seconds between polls               | 30                                      |\n| `nexus.readinessProbe.failureThreshold`     | Number of attempts before failure   | 6                                       |\n| `nexus.readinessProbe.timeoutSeconds`       | Time in seconds after readiness probe times out    | `nil`                    |\n| `nexus.readinessProbe.path`                 | Path for ReadinessProbe             | /                                       |\n| `nexus.hostAliases`                         | Aliases for IPs in /etc/hosts       | []                                      |\n| `ingress.enabled`                           | Create an ingress for Nexus         | `true`                                  |\n| `ingress.annotations`                       | Annotations to enhance ingress configuration  | `{}`                          |\n| `ingress.tls.enabled`                       | Enable TLS                          | `true`                                 |\n| `ingress.tls.secretName`                    | Name of the secret storing TLS cert, `false` to use the Ingress' default certificate | `nexus-tls`                             |\n| `ingress.path`                              | Path for ingress rules. GCP users should set to `/*` | `/`                    |\n| `tolerations`                               | tolerations list                    | `[]`                                    |\n| `config.enabled`                            | Enable configmap                    | `false`                                 |\n| `config.mountPath`                          | Path to mount the config            | `/sonatype-nexus-conf`                  |\n| `config.data`                               | Configmap data                      | `nil`                                   |\n| `deployment.terminationGracePeriodSeconds`  | Time to allow for clean shutdown    | 120                                     |\n| `deployment.annotations`                    | Annotations to enhance deployment configuration  | `{}`                       |\n| `deployment.initContainers`                 | Init containers to run before main containers  | `nil`                        |\n| `deployment.postStart.command`              | Command to run after starting the nexus container  | `nil`                    |\n| `deployment.preStart.command`               | Command to run before starting the nexus container  | `nil`                   |\n| `deployment.additionalContainers`           | Add additional Container         | `nil`                                      |\n| `deployment.additionalVolumes`              | Add additional Volumes           | `nil`                                      |\n| `deployment.additionalVolumeMounts`         | Add additional Volume mounts     | `nil`                                      |\n| `secret.enabled`                            | Enable secret                    | `false`                                    |\n| `secret.mountPath`                          | Path to mount the secret         | `/etc/secret-volume`                       |\n| `secret.readOnly`                           | Secret readonly state            | `true`                                     |\n| `secret.data`                               | Secret data                      | `nil`                                      |\n| `service.enabled`                           | Enable additional service        | `nil`                                      |\n| `service.name`                              | Service name                     | `nil`                                      |\n| `service.portName`                          | Service port name                | `nil`                                      |\n| `service.labels`                            | Service labels                   | `nil`                                      |\n| `service.annotations`                       | Service annotations              | `nil`                                      |\n| `service.loadBalancerSourceRanges`          | Service LoadBalancer source IP whitelist | `nil`                              |\n| `service.targetPort`                        | Service port                     | `nil`                                      |\n| `service.port`                              | Port for exposing service        | `nil`                                      |\n| `route.enabled`         | Set to true to create route for additional service | `false` |\n| `route.name`            | Name of route                                      | `docker` |\n| `route.portName`        | Target port name of service                        | `docker` |\n| `route.labels`          | Labels to be added to route                        | `{}` |\n| `route.annotations`     | Annotations to be added to route                   | `{}` |\n| `route.path`            | Host name of Route e.g jenkins.example.com         | nil |",
      "csv_display_name": "Nexus Repository Operator",
      "csv_metadata_description": "Nexus Repository is the central source of control to efficiently manage all binaries\nand build artifacts across your DevOps pipeline.",
      "csv_name": "nxrm-operator-certified.v3.41.1-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-06T23:02:06.035000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "nxrm-operator-certified",
      "provided_apis": [
        {
          "group": "sonatype.com",
          "kind": "NexusRepo",
          "plural": "nexusrepos",
          "version": "v1alpha1"
        }
      ],
      "provider": "Sonatype",
      "related_images": [
        {
          "digest": "sha256:6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6",
          "image": "registry.connect.redhat.com/sonatype/nxrm-operator-certified@sha256:6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6",
          "name": "nxrm-operator-certified-6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6-annotation"
        },
        {
          "digest": "sha256:6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6",
          "image": "registry.connect.redhat.com/sonatype/nxrm-operator-certified@sha256:6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6",
          "name": "nxrm-operator-certified"
        },
        {
          "digest": "sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
          "image": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
          "name": "nexus"
        },
        {
          "digest": "sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
          "image": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
          "name": "nexus-repository-manager-af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<3.41.1-1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "3.41.1-1",
      "version_original": "3.41.1-1"
    },
    {
      "_id": "6317d3d7577fb84aecd6684f",
      "alm_examples": [
        {
          "api_version": "sonatype.com/v1alpha1",
          "kind": "NexusRepo",
          "metadata": {
            "name": "example-nexusrepo"
          },
          "spec": {
            "config": {
              "enabled": false,
              "mountPath": "/sonatype-nexus-conf"
            },
            "deployment": {
              "annotations": {},
              "postStart": {},
              "preStart": {},
              "terminationGracePeriodSeconds": 120
            },
            "deploymentStrategy": {
              "type": "Recreate"
            },
            "ingress": {
              "annotations": {},
              "enabled": false,
              "path": "/",
              "tls": {
                "enabled": true,
                "secretName": "nexus-tls"
              }
            },
            "nexus": {
              "dockerPort": 5003,
              "env": [
                {
                  "name": "INSTALL4J_ADD_VM_PARAMS",
                  "value": "-Xms2703M -Xmx2703M -XX:MaxDirectMemorySize=2703M -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
                },
                {
                  "name": "NEXUS_SECURITY_RANDOMPASSWORD",
                  "value": "false"
                }
              ],
              "hostAliases": [],
              "imageName": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
              "imagePullPolicy": "IfNotPresent",
              "imagePullSecret": "",
              "livenessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "path": "/",
                "periodSeconds": 30
              },
              "nexusPort": 8081,
              "podAnnotations": {},
              "readinessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "path": "/",
                "periodSeconds": 30
              },
              "resources": {},
              "securityContext": {},
              "service": {
                "type": "NodePort"
              }
            },
            "nexusProxyRoute": {
              "enabled": false
            },
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "enabled": true,
              "storageSize": "8Gi"
            },
            "replicaCount": 1,
            "route": {
              "enabled": false,
              "name": "docker",
              "portName": "docker"
            },
            "secret": {
              "enabled": false,
              "mountPath": "/etc/secret-volume",
              "readOnly": true
            },
            "service": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "ports": [
                {
                  "name": "nexus-service",
                  "port": 80,
                  "targetPort": 80
                }
              ]
            },
            "statefulset": {
              "enabled": false
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxrm-operator-bundle@sha256:4afdcff709d830c131720b11dff6d265db4af6f921829b81e09e07d9394a597c",
      "bundle_path_digest": "sha256:4afdcff709d830c131720b11dff6d265db4af6f921829b81e09e07d9394a597c",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-06T23:12:23.199000+00:00",
      "csv_description": "Nexus Repository is the central source of control to efficiently manage all binaries\nand build artifacts across your DevOps pipeline.\nThe flow of open source and third-party components into and through an organization\ncreates a complex software supply chain.\nNexus Repository delivers speed, efficiency, and quality to the governance\nand management of all dependencies, libraries, and applications for your DevOps teams.\n\n## Core Capabilities\n\n* **Dependency Management**:\n  Improves reliability with repeatable, fast access to secure dependencies\n* **Developer Productivity**:\n  Streamline developer workflows by enabling the sharing of components and applications across teams\n* **Supply Chain Performance**:\n  Improve speed-to-market and reduced build times with release advanced staging and component tagging\n* **CI/CD Integrations**:\n  Increase DevOps scalability with integrations to the most popular build and deployment tools\n\nVersion control systems and package registries do not scale when managing proprietary,\nopen source, and third-party components.\nOrganizations need a central binary and build artifact repository to manage dependencies\nacross the entire software supply chain.\n\n## Limitations\n\nHigh Availability Clustering (HA-C) is not supported for Nexus Repository Pro for OpenShift.\n\nThis operator will be released on a quarterly basis.\n\n## Controlling Automatic vs Manual Update\n\nIf you use the default configuration for the Nexus Repository Operator installation,\nplease notice that on any new operator release, the corresponding deployments are\nalso updated without user intervention, resulting in unscheduled downtime.\n\nIf you want to avoid this unscheduled downtime, we recommend installing the operator\ninto **its own namespace** with **manual approval** for updates.\n\n## Usage\n\nOnce the server instance is created by the operator and running,\nyou'll want to expose the service as you see fit:\n1. Create a Route to that service for nexus.port (8081).\n\nBy default, the Nexus Repository starts up in OSS mode until a license is installed.\n\nThe Nexus Repository can be further configured via the NexusRepo custom resource definition:\n\n| Parameter                                   | Description                         | Default                                 |\n| ------------------------------------------  | ----------------------------------  | ----------------------------------------|\n| `statefulset.enabled`                       | Use statefulset instead of deployment | `false` |\n| `deploymentStrategy.type`                   | Deployment Strategy     |  `Recreate` |\n| `nexus.env`                                 | Nexus environment variables         | `See example.` |\n| `nexus.resources`                           | Nexus resource requests and limits  | `{}`                                    |\n| `nexus.dockerPort`                          | Port to access docker               | `5003`                                  |\n| `nexus.nexusPort`                           | Internal port for Nexus service     | `8081`                                  |\n| `nexus.service.type`                        | Service for Nexus                   |`NodePort`                                |\n| `nexus.service.clusterIp`                   | Specific cluster IP when service type is cluster IP. Use None for headless service |`nil`   |\n| `nexus.securityContext`                     | Security Context |\n| `nexus.labels`                              | Service labels                      | `{}`                                    |\n| `nexus.podAnnotations`                      | Pod Annotations                     | `{}`\n| `nexus.livenessProbe.initialDelaySeconds`   | LivenessProbe initial delay         | 30                                      |\n| `nexus.livenessProbe.periodSeconds`         | Seconds between polls               | 30                                      |\n| `nexus.livenessProbe.failureThreshold`      | Number of attempts before failure   | 6                                       |\n| `nexus.livenessProbe.timeoutSeconds`        | Time in seconds after liveness probe times out    | `nil`                     |\n| `nexus.livenessProbe.path`                  | Path for LivenessProbe              | /                                       |\n| `nexus.readinessProbe.initialDelaySeconds`  | ReadinessProbe initial delay        | 30                                      |\n| `nexus.readinessProbe.periodSeconds`        | Seconds between polls               | 30                                      |\n| `nexus.readinessProbe.failureThreshold`     | Number of attempts before failure   | 6                                       |\n| `nexus.readinessProbe.timeoutSeconds`       | Time in seconds after readiness probe times out    | `nil`                    |\n| `nexus.readinessProbe.path`                 | Path for ReadinessProbe             | /                                       |\n| `nexus.hostAliases`                         | Aliases for IPs in /etc/hosts       | []                                      |\n| `ingress.enabled`                           | Create an ingress for Nexus         | `true`                                  |\n| `ingress.annotations`                       | Annotations to enhance ingress configuration  | `{}`                          |\n| `ingress.tls.enabled`                       | Enable TLS                          | `true`                                 |\n| `ingress.tls.secretName`                    | Name of the secret storing TLS cert, `false` to use the Ingress' default certificate | `nexus-tls`                             |\n| `ingress.path`                              | Path for ingress rules. GCP users should set to `/*` | `/`                    |\n| `tolerations`                               | tolerations list                    | `[]`                                    |\n| `config.enabled`                            | Enable configmap                    | `false`                                 |\n| `config.mountPath`                          | Path to mount the config            | `/sonatype-nexus-conf`                  |\n| `config.data`                               | Configmap data                      | `nil`                                   |\n| `deployment.terminationGracePeriodSeconds`  | Time to allow for clean shutdown    | 120                                     |\n| `deployment.annotations`                    | Annotations to enhance deployment configuration  | `{}`                       |\n| `deployment.initContainers`                 | Init containers to run before main containers  | `nil`                        |\n| `deployment.postStart.command`              | Command to run after starting the nexus container  | `nil`                    |\n| `deployment.preStart.command`               | Command to run before starting the nexus container  | `nil`                   |\n| `deployment.additionalContainers`           | Add additional Container         | `nil`                                      |\n| `deployment.additionalVolumes`              | Add additional Volumes           | `nil`                                      |\n| `deployment.additionalVolumeMounts`         | Add additional Volume mounts     | `nil`                                      |\n| `secret.enabled`                            | Enable secret                    | `false`                                    |\n| `secret.mountPath`                          | Path to mount the secret         | `/etc/secret-volume`                       |\n| `secret.readOnly`                           | Secret readonly state            | `true`                                     |\n| `secret.data`                               | Secret data                      | `nil`                                      |\n| `service.enabled`                           | Enable additional service        | `nil`                                      |\n| `service.name`                              | Service name                     | `nil`                                      |\n| `service.portName`                          | Service port name                | `nil`                                      |\n| `service.labels`                            | Service labels                   | `nil`                                      |\n| `service.annotations`                       | Service annotations              | `nil`                                      |\n| `service.loadBalancerSourceRanges`          | Service LoadBalancer source IP whitelist | `nil`                              |\n| `service.targetPort`                        | Service port                     | `nil`                                      |\n| `service.port`                              | Port for exposing service        | `nil`                                      |\n| `route.enabled`         | Set to true to create route for additional service | `false` |\n| `route.name`            | Name of route                                      | `docker` |\n| `route.portName`        | Target port name of service                        | `docker` |\n| `route.labels`          | Labels to be added to route                        | `{}` |\n| `route.annotations`     | Annotations to be added to route                   | `{}` |\n| `route.path`            | Host name of Route e.g jenkins.example.com         | nil |",
      "csv_display_name": "Nexus Repository Operator",
      "csv_metadata_description": "Nexus Repository is the central source of control to efficiently manage all binaries\nand build artifacts across your DevOps pipeline.",
      "csv_name": "nxrm-operator-certified.v3.41.1-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-06T23:12:23.199000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nxrm-operator-certified",
      "provided_apis": [
        {
          "group": "sonatype.com",
          "kind": "NexusRepo",
          "plural": "nexusrepos",
          "version": "v1alpha1"
        }
      ],
      "provider": "Sonatype",
      "related_images": [
        {
          "digest": "sha256:6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6",
          "image": "registry.connect.redhat.com/sonatype/nxrm-operator-certified@sha256:6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6",
          "name": "nxrm-operator-certified-6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6-annotation"
        },
        {
          "digest": "sha256:6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6",
          "image": "registry.connect.redhat.com/sonatype/nxrm-operator-certified@sha256:6c34ee9a3db1f05985100b251212578d51d4ef1bc8171282c8e07c154cba8ee6",
          "name": "nxrm-operator-certified"
        },
        {
          "digest": "sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
          "image": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
          "name": "nexus"
        },
        {
          "digest": "sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
          "image": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f",
          "name": "nexus-repository-manager-af94979b9e02e03c8ec593cbff3b2a41824bfcdc2815441f1e4fb55fca47e95f-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<3.41.1-1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "3.41.1-1",
      "version_original": "3.41.1-1"
    },
    {
      "_id": "63185450c5edbef70bd21caf",
      "alm_examples": [
        {
          "api_version": "apps.apimatic.io/v1beta2",
          "kind": "CodeGen",
          "metadata": {
            "name": "codegen-sample"
          },
          "spec": {
            "licenseSpec": {
              "licenseSourceType": "LicenseBlob",
              "licenseSourceValue": "PExpY2Vuc2U+DQogIDxJZD41MDVlNzM4Ny0xZmIxLTQ4ZDQtOGRmMS1iYjk3NGEyNjM2MDM8L0lkPg0KICA8VHlwZT5TdGFuZGFyZDwvVHlwZT4NCiAgPEV4cGlyYXRpb24+RnJpLCAxNyBNYXkgMjA1MiAwNzoxOTozOSBHTVQ8L0V4cGlyYXRpb24+DQogIDxRdWFudGl0eT4yPC9RdWFudGl0eT4NCiAgPFByb2R1Y3RGZWF0dXJlcz4NCiAgICA8RmVhdHVyZSBuYW1lPSJpbXBvcnRGb3JtYXRzIj5BUElCbHVlUHJpbnQsQVBJRWxlbWVudHMsUG9zdG1hbjIsV3NkbCxXQURMMjAwOSxXQURMMjAwNixSYW1sLFJhbWwxMCxTd2FnZ2VyMjAsU3dhZ2dlcllhbWwsU3dhZ2dlcjEwLE9wZW5BcGkzSnNvbixPcGVuQXBpM1lhbWwsSU9Eb2NzLElPRG9jc1YwMzE0LEluc29tbmlhLEluc29tbmlhWWFtbCxSQU1MQXNKc29uLEdvb2dsZURpc2NvdmVyeSxQb3N0bWFuPC9GZWF0dXJlPg0KICAgIDxGZWF0dXJlIG5hbWU9ImV4cG9ydEZvcm1hdHMiPlN3YWdnZXIyMCxTd2FnZ2VyWWFtbCxTd2FnZ2VyMTAsT3BlbkFwaTNKc29uLE9wZW5BcGkzWWFtbCxXc2RsLEFQSUJsdWVQcmludCxBUElFbGVtZW50cyxQb3N0bWFuMixXQURMMjAwOSxXQURMMjAwNixXU0RMLElPRG9jcyxJT0RvY3NWMDMxNCxSQU1MLFJBTUwxMCxHb29nbGVEaXNjb3ZlcnksUG9zdG1hbjIwLEluc29tbmlhLEluc29tbmlhWWFtbDwvRmVhdHVyZT4NCiAgICA8RmVhdHVyZSBuYW1lPSJwbGF0Zm9ybXMiPjwvRmVhdHVyZT4NCiAgPC9Qcm9kdWN0RmVhdHVyZXM+DQogIDxDdXN0b21lcj4NCiAgICA8TmFtZT5EZXZlbG9wZXI8L05hbWU+DQogICAgPEVtYWlsPmRldmVsb3BlckBhcGltYXRpYy5pbzwvRW1haWw+DQogIDwvQ3VzdG9tZXI+DQogIDxTaWduYXR1cmU+TUVVQ0lRRE1yTlY0dE1PUzEwUExiZ1Z0QkVvTHZ6ZGd1UDkzUnk5Tm9pMHBsS2lWa2dJZ1ZOVWtoWTVoS2xiZFBLc1pMcDZrcnZKODV0WUdHUHFBV1gxblkyUUx2NjQ9PC9TaWduYXR1cmU+DQo8L0xpY2Vuc2U+"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/apimatic/apimatic-codegen-operator-bundle@sha256:ecba9e94c54b77359d110c2d04d11c9b296be5c7831dd457585a028c0c9516d6",
      "bundle_path_digest": "sha256:ecba9e94c54b77359d110c2d04d11c9b296be5c7831dd457585a028c0c9516d6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-07T08:20:32.632000+00:00",
      "csv_description": "APIMatic CodeGen Operator deploys the APIMatic CodeGen application to Kubernetes and RedHat with all necessary resources and configurations. More information can be found [here](https://github.com/apimatic/apimatic-codegen-operator/blob/main/README.md)",
      "csv_display_name": "APIMatic CodeGen Operator",
      "csv_metadata_description": "API CodeGen Operator deploys the APIMatic CodeGen Application to Kubernetes and OpenShift clusters",
      "csv_name": "apimatic-codegen-operator.v1.9.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-07T08:20:32.632000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "apimatic-codegen-operator",
      "provided_apis": [
        {
          "group": "apps.apimatic.io",
          "kind": "CodeGen",
          "plural": "codegens",
          "version": "v1beta2"
        }
      ],
      "provider": "APIMatic.io",
      "related_images": [
        {
          "digest": "sha256:4bd056986f57384ab4e0df13c026fc7ae7f4b27374816943c4901ca9fae7de2e",
          "image": "registry.connect.redhat.com/apimatic/apimatic-codegen-operator-ubi8@sha256:4bd056986f57384ab4e0df13c026fc7ae7f4b27374816943c4901ca9fae7de2e",
          "name": "apimatic-codegen-operator-ubi8-4bd056986f57384ab4e0df13c026fc7ae7f4b27374816943c4901ca9fae7de2e-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:4bd056986f57384ab4e0df13c026fc7ae7f4b27374816943c4901ca9fae7de2e",
          "image": "registry.connect.redhat.com/apimatic/apimatic-codegen-operator-ubi8@sha256:4bd056986f57384ab4e0df13c026fc7ae7f4b27374816943c4901ca9fae7de2e",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "<1.9.6",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.9.6",
      "version_original": "1.9.6"
    },
    {
      "_id": "631854d6b3d3587ecb637db8",
      "alm_examples": [
        {
          "api_version": "apps.apimatic.io/v1beta2",
          "kind": "CodeGen",
          "metadata": {
            "name": "codegen-sample"
          },
          "spec": {
            "licenseSpec": {
              "licenseSourceType": "LicenseBlob",
              "licenseSourceValue": "PExpY2Vuc2U+DQogIDxJZD41MDVlNzM4Ny0xZmIxLTQ4ZDQtOGRmMS1iYjk3NGEyNjM2MDM8L0lkPg0KICA8VHlwZT5TdGFuZGFyZDwvVHlwZT4NCiAgPEV4cGlyYXRpb24+RnJpLCAxNyBNYXkgMjA1MiAwNzoxOTozOSBHTVQ8L0V4cGlyYXRpb24+DQogIDxRdWFudGl0eT4yPC9RdWFudGl0eT4NCiAgPFByb2R1Y3RGZWF0dXJlcz4NCiAgICA8RmVhdHVyZSBuYW1lPSJpbXBvcnRGb3JtYXRzIj5BUElCbHVlUHJpbnQsQVBJRWxlbWVudHMsUG9zdG1hbjIsV3NkbCxXQURMMjAwOSxXQURMMjAwNixSYW1sLFJhbWwxMCxTd2FnZ2VyMjAsU3dhZ2dlcllhbWwsU3dhZ2dlcjEwLE9wZW5BcGkzSnNvbixPcGVuQXBpM1lhbWwsSU9Eb2NzLElPRG9jc1YwMzE0LEluc29tbmlhLEluc29tbmlhWWFtbCxSQU1MQXNKc29uLEdvb2dsZURpc2NvdmVyeSxQb3N0bWFuPC9GZWF0dXJlPg0KICAgIDxGZWF0dXJlIG5hbWU9ImV4cG9ydEZvcm1hdHMiPlN3YWdnZXIyMCxTd2FnZ2VyWWFtbCxTd2FnZ2VyMTAsT3BlbkFwaTNKc29uLE9wZW5BcGkzWWFtbCxXc2RsLEFQSUJsdWVQcmludCxBUElFbGVtZW50cyxQb3N0bWFuMixXQURMMjAwOSxXQURMMjAwNixXU0RMLElPRG9jcyxJT0RvY3NWMDMxNCxSQU1MLFJBTUwxMCxHb29nbGVEaXNjb3ZlcnksUG9zdG1hbjIwLEluc29tbmlhLEluc29tbmlhWWFtbDwvRmVhdHVyZT4NCiAgICA8RmVhdHVyZSBuYW1lPSJwbGF0Zm9ybXMiPjwvRmVhdHVyZT4NCiAgPC9Qcm9kdWN0RmVhdHVyZXM+DQogIDxDdXN0b21lcj4NCiAgICA8TmFtZT5EZXZlbG9wZXI8L05hbWU+DQogICAgPEVtYWlsPmRldmVsb3BlckBhcGltYXRpYy5pbzwvRW1haWw+DQogIDwvQ3VzdG9tZXI+DQogIDxTaWduYXR1cmU+TUVVQ0lRRE1yTlY0dE1PUzEwUExiZ1Z0QkVvTHZ6ZGd1UDkzUnk5Tm9pMHBsS2lWa2dJZ1ZOVWtoWTVoS2xiZFBLc1pMcDZrcnZKODV0WUdHUHFBV1gxblkyUUx2NjQ9PC9TaWduYXR1cmU+DQo8L0xpY2Vuc2U+"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/apimatic/apimatic-codegen-operator-bundle@sha256:ecba9e94c54b77359d110c2d04d11c9b296be5c7831dd457585a028c0c9516d6",
      "bundle_path_digest": "sha256:ecba9e94c54b77359d110c2d04d11c9b296be5c7831dd457585a028c0c9516d6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-07T08:22:46.331000+00:00",
      "csv_description": "APIMatic CodeGen Operator deploys the APIMatic CodeGen application to Kubernetes and RedHat with all necessary resources and configurations. More information can be found [here](https://github.com/apimatic/apimatic-codegen-operator/blob/main/README.md)",
      "csv_display_name": "APIMatic CodeGen Operator",
      "csv_metadata_description": "API CodeGen Operator deploys the APIMatic CodeGen Application to Kubernetes and OpenShift clusters",
      "csv_name": "apimatic-codegen-operator.v1.9.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-07T08:22:46.331000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "apimatic-codegen-operator",
      "provided_apis": [
        {
          "group": "apps.apimatic.io",
          "kind": "CodeGen",
          "plural": "codegens",
          "version": "v1beta2"
        }
      ],
      "provider": "APIMatic.io",
      "related_images": [
        {
          "digest": "sha256:4bd056986f57384ab4e0df13c026fc7ae7f4b27374816943c4901ca9fae7de2e",
          "image": "registry.connect.redhat.com/apimatic/apimatic-codegen-operator-ubi8@sha256:4bd056986f57384ab4e0df13c026fc7ae7f4b27374816943c4901ca9fae7de2e",
          "name": "apimatic-codegen-operator-ubi8-4bd056986f57384ab4e0df13c026fc7ae7f4b27374816943c4901ca9fae7de2e-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:4bd056986f57384ab4e0df13c026fc7ae7f4b27374816943c4901ca9fae7de2e",
          "image": "registry.connect.redhat.com/apimatic/apimatic-codegen-operator-ubi8@sha256:4bd056986f57384ab4e0df13c026fc7ae7f4b27374816943c4901ca9fae7de2e",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "<1.9.6",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.9.6",
      "version_original": "1.9.6"
    },
    {
      "_id": "631854f95f8562c1affb84a4",
      "alm_examples": [
        {
          "api_version": "apps.apimatic.io/v1beta2",
          "kind": "CodeGen",
          "metadata": {
            "name": "codegen-sample"
          },
          "spec": {
            "licenseSpec": {
              "licenseSourceType": "LicenseBlob",
              "licenseSourceValue": "PExpY2Vuc2U+DQogIDxJZD41MDVlNzM4Ny0xZmIxLTQ4ZDQtOGRmMS1iYjk3NGEyNjM2MDM8L0lkPg0KICA8VHlwZT5TdGFuZGFyZDwvVHlwZT4NCiAgPEV4cGlyYXRpb24+RnJpLCAxNyBNYXkgMjA1MiAwNzoxOTozOSBHTVQ8L0V4cGlyYXRpb24+DQogIDxRdWFudGl0eT4yPC9RdWFudGl0eT4NCiAgPFByb2R1Y3RGZWF0dXJlcz4NCiAgICA8RmVhdHVyZSBuYW1lPSJpbXBvcnRGb3JtYXRzIj5BUElCbHVlUHJpbnQsQVBJRWxlbWVudHMsUG9zdG1hbjIsV3NkbCxXQURMMjAwOSxXQURMMjAwNixSYW1sLFJhbWwxMCxTd2FnZ2VyMjAsU3dhZ2dlcllhbWwsU3dhZ2dlcjEwLE9wZW5BcGkzSnNvbixPcGVuQXBpM1lhbWwsSU9Eb2NzLElPRG9jc1YwMzE0LEluc29tbmlhLEluc29tbmlhWWFtbCxSQU1MQXNKc29uLEdvb2dsZURpc2NvdmVyeSxQb3N0bWFuPC9GZWF0dXJlPg0KICAgIDxGZWF0dXJlIG5hbWU9ImV4cG9ydEZvcm1hdHMiPlN3YWdnZXIyMCxTd2FnZ2VyWWFtbCxTd2FnZ2VyMTAsT3BlbkFwaTNKc29uLE9wZW5BcGkzWWFtbCxXc2RsLEFQSUJsdWVQcmludCxBUElFbGVtZW50cyxQb3N0bWFuMixXQURMMjAwOSxXQURMMjAwNixXU0RMLElPRG9jcyxJT0RvY3NWMDMxNCxSQU1MLFJBTUwxMCxHb29nbGVEaXNjb3ZlcnksUG9zdG1hbjIwLEluc29tbmlhLEluc29tbmlhWWFtbDwvRmVhdHVyZT4NCiAgICA8RmVhdHVyZSBuYW1lPSJwbGF0Zm9ybXMiPjwvRmVhdHVyZT4NCiAgPC9Qcm9kdWN0RmVhdHVyZXM+DQogIDxDdXN0b21lcj4NCiAgICA8TmFtZT5EZXZlbG9wZXI8L05hbWU+DQogICAgPEVtYWlsPmRldmVsb3BlckBhcGltYXRpYy5pbzwvRW1haWw+DQogIDwvQ3VzdG9tZXI+DQogIDxTaWduYXR1cmU+TUVVQ0lRRE1yTlY0dE1PUzEwUExiZ1Z0QkVvTHZ6ZGd1UDkzUnk5Tm9pMHBsS2lWa2dJZ1ZOVWtoWTVoS2xiZFBLc1pMcDZrcnZKODV0WUdHUHFBV1gxblkyUUx2NjQ9PC9TaWduYXR1cmU+DQo8L0xpY2Vuc2U+"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/apimatic/apimatic-codegen-operator-bundle@sha256:ecba9e94c54b77359d110c2d04d11c9b296be5c7831dd457585a028c0c9516d6",
      "bundle_path_digest": "sha256:ecba9e94c54b77359d110c2d04d11c9b296be5c7831dd457585a028c0c9516d6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-07T08:23:21.756000+00:00",
      "csv_description": "APIMatic CodeGen Operator deploys the APIMatic CodeGen application to Kubernetes and RedHat with all necessary resources and configurations. More information can be found [here](https://github.com/apimatic/apimatic-codegen-operator/blob/main/README.md)",
      "csv_display_name": "APIMatic CodeGen Operator",
      "csv_metadata_description": "API CodeGen Operator deploys the APIMatic CodeGen Application to Kubernetes and OpenShift clusters",
      "csv_name": "apimatic-codegen-operator.v1.9.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-07T08:23:21.756000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "apimatic-codegen-operator",
      "provided_apis": [
        {
          "group": "apps.apimatic.io",
          "kind": "CodeGen",
          "plural": "codegens",
          "version": "v1beta2"
        }
      ],
      "provider": "APIMatic.io",
      "related_images": [
        {
          "digest": "sha256:4bd056986f57384ab4e0df13c026fc7ae7f4b27374816943c4901ca9fae7de2e",
          "image": "registry.connect.redhat.com/apimatic/apimatic-codegen-operator-ubi8@sha256:4bd056986f57384ab4e0df13c026fc7ae7f4b27374816943c4901ca9fae7de2e",
          "name": "apimatic-codegen-operator-ubi8-4bd056986f57384ab4e0df13c026fc7ae7f4b27374816943c4901ca9fae7de2e-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:4bd056986f57384ab4e0df13c026fc7ae7f4b27374816943c4901ca9fae7de2e",
          "image": "registry.connect.redhat.com/apimatic/apimatic-codegen-operator-ubi8@sha256:4bd056986f57384ab4e0df13c026fc7ae7f4b27374816943c4901ca9fae7de2e",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "<1.9.6",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.9.6",
      "version_original": "1.9.6"
    },
    {
      "_id": "631854ffb3d3587ecb637de9",
      "alm_examples": [
        {
          "api_version": "apps.apimatic.io/v1beta2",
          "kind": "CodeGen",
          "metadata": {
            "name": "codegen-sample"
          },
          "spec": {
            "licenseSpec": {
              "licenseSourceType": "LicenseBlob",
              "licenseSourceValue": "PExpY2Vuc2U+DQogIDxJZD41MDVlNzM4Ny0xZmIxLTQ4ZDQtOGRmMS1iYjk3NGEyNjM2MDM8L0lkPg0KICA8VHlwZT5TdGFuZGFyZDwvVHlwZT4NCiAgPEV4cGlyYXRpb24+RnJpLCAxNyBNYXkgMjA1MiAwNzoxOTozOSBHTVQ8L0V4cGlyYXRpb24+DQogIDxRdWFudGl0eT4yPC9RdWFudGl0eT4NCiAgPFByb2R1Y3RGZWF0dXJlcz4NCiAgICA8RmVhdHVyZSBuYW1lPSJpbXBvcnRGb3JtYXRzIj5BUElCbHVlUHJpbnQsQVBJRWxlbWVudHMsUG9zdG1hbjIsV3NkbCxXQURMMjAwOSxXQURMMjAwNixSYW1sLFJhbWwxMCxTd2FnZ2VyMjAsU3dhZ2dlcllhbWwsU3dhZ2dlcjEwLE9wZW5BcGkzSnNvbixPcGVuQXBpM1lhbWwsSU9Eb2NzLElPRG9jc1YwMzE0LEluc29tbmlhLEluc29tbmlhWWFtbCxSQU1MQXNKc29uLEdvb2dsZURpc2NvdmVyeSxQb3N0bWFuPC9GZWF0dXJlPg0KICAgIDxGZWF0dXJlIG5hbWU9ImV4cG9ydEZvcm1hdHMiPlN3YWdnZXIyMCxTd2FnZ2VyWWFtbCxTd2FnZ2VyMTAsT3BlbkFwaTNKc29uLE9wZW5BcGkzWWFtbCxXc2RsLEFQSUJsdWVQcmludCxBUElFbGVtZW50cyxQb3N0bWFuMixXQURMMjAwOSxXQURMMjAwNixXU0RMLElPRG9jcyxJT0RvY3NWMDMxNCxSQU1MLFJBTUwxMCxHb29nbGVEaXNjb3ZlcnksUG9zdG1hbjIwLEluc29tbmlhLEluc29tbmlhWWFtbDwvRmVhdHVyZT4NCiAgICA8RmVhdHVyZSBuYW1lPSJwbGF0Zm9ybXMiPjwvRmVhdHVyZT4NCiAgPC9Qcm9kdWN0RmVhdHVyZXM+DQogIDxDdXN0b21lcj4NCiAgICA8TmFtZT5EZXZlbG9wZXI8L05hbWU+DQogICAgPEVtYWlsPmRldmVsb3BlckBhcGltYXRpYy5pbzwvRW1haWw+DQogIDwvQ3VzdG9tZXI+DQogIDxTaWduYXR1cmU+TUVVQ0lRRE1yTlY0dE1PUzEwUExiZ1Z0QkVvTHZ6ZGd1UDkzUnk5Tm9pMHBsS2lWa2dJZ1ZOVWtoWTVoS2xiZFBLc1pMcDZrcnZKODV0WUdHUHFBV1gxblkyUUx2NjQ9PC9TaWduYXR1cmU+DQo8L0xpY2Vuc2U+"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/apimatic/apimatic-codegen-operator-bundle@sha256:ecba9e94c54b77359d110c2d04d11c9b296be5c7831dd457585a028c0c9516d6",
      "bundle_path_digest": "sha256:ecba9e94c54b77359d110c2d04d11c9b296be5c7831dd457585a028c0c9516d6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-07T08:23:27.445000+00:00",
      "csv_description": "APIMatic CodeGen Operator deploys the APIMatic CodeGen application to Kubernetes and RedHat with all necessary resources and configurations. More information can be found [here](https://github.com/apimatic/apimatic-codegen-operator/blob/main/README.md)",
      "csv_display_name": "APIMatic CodeGen Operator",
      "csv_metadata_description": "API CodeGen Operator deploys the APIMatic CodeGen Application to Kubernetes and OpenShift clusters",
      "csv_name": "apimatic-codegen-operator.v1.9.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-07T08:23:27.445000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "apimatic-codegen-operator",
      "provided_apis": [
        {
          "group": "apps.apimatic.io",
          "kind": "CodeGen",
          "plural": "codegens",
          "version": "v1beta2"
        }
      ],
      "provider": "APIMatic.io",
      "related_images": [
        {
          "digest": "sha256:4bd056986f57384ab4e0df13c026fc7ae7f4b27374816943c4901ca9fae7de2e",
          "image": "registry.connect.redhat.com/apimatic/apimatic-codegen-operator-ubi8@sha256:4bd056986f57384ab4e0df13c026fc7ae7f4b27374816943c4901ca9fae7de2e",
          "name": "apimatic-codegen-operator-ubi8-4bd056986f57384ab4e0df13c026fc7ae7f4b27374816943c4901ca9fae7de2e-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:4bd056986f57384ab4e0df13c026fc7ae7f4b27374816943c4901ca9fae7de2e",
          "image": "registry.connect.redhat.com/apimatic/apimatic-codegen-operator-ubi8@sha256:4bd056986f57384ab4e0df13c026fc7ae7f4b27374816943c4901ca9fae7de2e",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "<1.9.6",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.9.6",
      "version_original": "1.9.6"
    },
    {
      "_id": "63185860ea427da2bb5b3687",
      "alm_examples": [
        {
          "api_version": "apps.apimatic.io/v1beta2",
          "kind": "CodeGen",
          "metadata": {
            "name": "codegen-sample"
          },
          "spec": {
            "licenseSpec": {
              "licenseSourceType": "LicenseBlob",
              "licenseSourceValue": "PExpY2Vuc2U+DQogIDxJZD41MDVlNzM4Ny0xZmIxLTQ4ZDQtOGRmMS1iYjk3NGEyNjM2MDM8L0lkPg0KICA8VHlwZT5TdGFuZGFyZDwvVHlwZT4NCiAgPEV4cGlyYXRpb24+RnJpLCAxNyBNYXkgMjA1MiAwNzoxOTozOSBHTVQ8L0V4cGlyYXRpb24+DQogIDxRdWFudGl0eT4yPC9RdWFudGl0eT4NCiAgPFByb2R1Y3RGZWF0dXJlcz4NCiAgICA8RmVhdHVyZSBuYW1lPSJpbXBvcnRGb3JtYXRzIj5BUElCbHVlUHJpbnQsQVBJRWxlbWVudHMsUG9zdG1hbjIsV3NkbCxXQURMMjAwOSxXQURMMjAwNixSYW1sLFJhbWwxMCxTd2FnZ2VyMjAsU3dhZ2dlcllhbWwsU3dhZ2dlcjEwLE9wZW5BcGkzSnNvbixPcGVuQXBpM1lhbWwsSU9Eb2NzLElPRG9jc1YwMzE0LEluc29tbmlhLEluc29tbmlhWWFtbCxSQU1MQXNKc29uLEdvb2dsZURpc2NvdmVyeSxQb3N0bWFuPC9GZWF0dXJlPg0KICAgIDxGZWF0dXJlIG5hbWU9ImV4cG9ydEZvcm1hdHMiPlN3YWdnZXIyMCxTd2FnZ2VyWWFtbCxTd2FnZ2VyMTAsT3BlbkFwaTNKc29uLE9wZW5BcGkzWWFtbCxXc2RsLEFQSUJsdWVQcmludCxBUElFbGVtZW50cyxQb3N0bWFuMixXQURMMjAwOSxXQURMMjAwNixXU0RMLElPRG9jcyxJT0RvY3NWMDMxNCxSQU1MLFJBTUwxMCxHb29nbGVEaXNjb3ZlcnksUG9zdG1hbjIwLEluc29tbmlhLEluc29tbmlhWWFtbDwvRmVhdHVyZT4NCiAgICA8RmVhdHVyZSBuYW1lPSJwbGF0Zm9ybXMiPjwvRmVhdHVyZT4NCiAgPC9Qcm9kdWN0RmVhdHVyZXM+DQogIDxDdXN0b21lcj4NCiAgICA8TmFtZT5EZXZlbG9wZXI8L05hbWU+DQogICAgPEVtYWlsPmRldmVsb3BlckBhcGltYXRpYy5pbzwvRW1haWw+DQogIDwvQ3VzdG9tZXI+DQogIDxTaWduYXR1cmU+TUVVQ0lRRE1yTlY0dE1PUzEwUExiZ1Z0QkVvTHZ6ZGd1UDkzUnk5Tm9pMHBsS2lWa2dJZ1ZOVWtoWTVoS2xiZFBLc1pMcDZrcnZKODV0WUdHUHFBV1gxblkyUUx2NjQ9PC9TaWduYXR1cmU+DQo8L0xpY2Vuc2U+"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/apimatic/apimatic-codegen-operator-bundle@sha256:ecba9e94c54b77359d110c2d04d11c9b296be5c7831dd457585a028c0c9516d6",
      "bundle_path_digest": "sha256:ecba9e94c54b77359d110c2d04d11c9b296be5c7831dd457585a028c0c9516d6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-07T08:37:52.712000+00:00",
      "csv_description": "APIMatic CodeGen Operator deploys the APIMatic CodeGen application to Kubernetes and RedHat with all necessary resources and configurations. More information can be found [here](https://github.com/apimatic/apimatic-codegen-operator/blob/main/README.md)",
      "csv_display_name": "APIMatic CodeGen Operator",
      "csv_metadata_description": "API CodeGen Operator deploys the APIMatic CodeGen Application to Kubernetes and OpenShift clusters",
      "csv_name": "apimatic-codegen-operator.v1.9.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-07T08:37:52.712000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "apimatic-codegen-operator",
      "provided_apis": [
        {
          "group": "apps.apimatic.io",
          "kind": "CodeGen",
          "plural": "codegens",
          "version": "v1beta2"
        }
      ],
      "provider": "APIMatic.io",
      "related_images": [
        {
          "digest": "sha256:4bd056986f57384ab4e0df13c026fc7ae7f4b27374816943c4901ca9fae7de2e",
          "image": "registry.connect.redhat.com/apimatic/apimatic-codegen-operator-ubi8@sha256:4bd056986f57384ab4e0df13c026fc7ae7f4b27374816943c4901ca9fae7de2e",
          "name": "apimatic-codegen-operator-ubi8-4bd056986f57384ab4e0df13c026fc7ae7f4b27374816943c4901ca9fae7de2e-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:4bd056986f57384ab4e0df13c026fc7ae7f4b27374816943c4901ca9fae7de2e",
          "image": "registry.connect.redhat.com/apimatic/apimatic-codegen-operator-ubi8@sha256:4bd056986f57384ab4e0df13c026fc7ae7f4b27374816943c4901ca9fae7de2e",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "<1.9.6",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.9.6",
      "version_original": "1.9.6"
    },
    {
      "_id": "6319fab77122993c713a75ef",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:29d2bdf940600526db9e348680f4b0c6a441b159d5c7601480a93d840862e405",
      "bundle_path_digest": "sha256:29d2bdf940600526db9e348680f4b0c6a441b159d5c7601480a93d840862e405",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-08T14:22:47.580000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.16.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-08T14:22:47.580000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:fc031fc001d857f5ba22c2bf776521318c1bfee07f9928f8767829c7d0877b2f",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:fc031fc001d857f5ba22c2bf776521318c1bfee07f9928f8767829c7d0877b2f",
          "name": "cloud-native-postgresql-fc031fc001d857f5ba22c2bf776521318c1bfee07f9928f8767829c7d0877b2f-annotation"
        },
        {
          "digest": "sha256:fc031fc001d857f5ba22c2bf776521318c1bfee07f9928f8767829c7d0877b2f",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:fc031fc001d857f5ba22c2bf776521318c1bfee07f9928f8767829c7d0877b2f",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.16.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.16.2",
      "version_original": "1.16.2"
    }
  ]
}

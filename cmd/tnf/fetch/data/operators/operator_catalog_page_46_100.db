{
  "data": [
    {
      "_id": "62fa48ebe07d71e4beb6b00c",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.12-57.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "bundle_path_digest": "sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-08-15T13:23:55.301000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.12-5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:23:55.301000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator-b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f-annotation"
        },
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.12-5",
      "version_original": "6.0.12-5"
    },
    {
      "_id": "62fa48f3e07d71e4beb6b019",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-30.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "bundle_path_digest": "sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-08-15T13:24:03.360000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:24:03.360000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator-0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1-annotation"
        },
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.8-20",
      "version_original": "6.0.8-20"
    },
    {
      "_id": "62fa49524eed1a480412ff40",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-53.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "bundle_path_digest": "sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-08-15T13:25:38.822000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:25:38.822000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator-5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59-annotation"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.2.8-11",
      "version_original": "6.2.8-11"
    },
    {
      "_id": "62fa499b4eed1a480412ff8e",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.4-55.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "bundle_path_digest": "sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2022-08-15T13:26:51.319000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.4-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:26:51.319000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator-8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9-annotation"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.2.4-1",
      "version_original": "6.2.4-1"
    },
    {
      "_id": "62fa49ad4eed1a480412ffa6",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "bundle_path_digest": "sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-08-15T13:27:09.257000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:27:09.257000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "redislabs/operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "operator-998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b-annotation"
        },
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.6-24",
      "version_original": "6.0.6-24"
    },
    {
      "_id": "62fa49c6e07d71e4beb6b0dc",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.12-57.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "bundle_path_digest": "sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-08-15T13:27:34.210000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.12-5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:27:34.210000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator-b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f-annotation"
        },
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.12-5",
      "version_original": "6.0.12-5"
    },
    {
      "_id": "62fa49cde07d71e4beb6b0e4",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "bundle_path_digest": "sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-08-15T13:27:41.041000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:27:41.041000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "redislabs/operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "operator-998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b-annotation"
        },
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.6-24",
      "version_original": "6.0.6-24"
    },
    {
      "_id": "62fa49d730a80ba5a208cce9",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            },
            "route": true,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            },
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway.aqua:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.0"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:26b6039d957e1dd8de17b1f46bde410c797159c581a217d5e396b39ccfd304cf",
      "bundle_path_digest": "sha256:26b6039d957e1dd8de17b1f46bde410c797159c581a217d5e396b39ccfd304cf",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.0",
      "creation_date": "2022-08-15T13:27:51.055000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n* Automatically scale the number of Aqua scanners based on the number of images in the scan queue\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/6.0.0/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.0.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.0.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.0.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:27:51.055000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [],
      "replaces": null,
      "skip_range": ">=1.0.2 <6.0.8",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.8",
      "version_original": "6.0.8"
    },
    {
      "_id": "62fa49db30a80ba5a208ccf0",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "bundle_path_digest": "sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "capabilities": [
        ""
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-08-15T13:27:55.861000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-6",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:27:55.861000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.6-6",
      "version_original": "6.0.6-6"
    },
    {
      "_id": "62fa49e84eed1a480412ffee",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "5.3"
            },
            "route": true,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "5.3"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "5.3"
            },
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway.aqua:8443"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "5.3"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "5.3"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "5.3"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:c367a6e2000ff5eb18363b3008930e86623a1ef74d0236cdb9423b63468fdfc2",
      "bundle_path_digest": "sha256:c367a6e2000ff5eb18363b3008930e86623a1ef74d0236cdb9423b63468fdfc2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "5.3",
      "creation_date": "2022-08-15T13:28:08.111000+00:00",
      "csv_description": "The Aqua Security Operator is used to deploy and manage the Aqua Cloud Native Security Platform (CSP) and its components:\n* Server (aka \"console\")\n* Database (optional; you can map an external database as well)\n* Gateway\n* Enforcer\n* KubeEnforcer\n* Scanner\n\nUse the Aqua Operator to:\n* Deploy Aqua CSP on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua CSP components\n* Automatically scale the number of Aqua scanners based on the number of images in the scan queue\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n3. Create the secret for Aqua Database password\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password>```\n    \nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* latest: This maps to the Aqua version 4.6.0\n* alpha: This maps to the Aqua version 5.0.0\n* 5.3: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/5.3.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/5.3.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v5.3.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:28:08.111000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:5232320700d92814955daee9588845b6d57ff499d24406e34c86cb2264df7e17",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:5232320700d92814955daee9588845b6d57ff499d24406e34c86cb2264df7e17",
          "name": "aquasec-5232320700d92814955daee9588845b6d57ff499d24406e34c86cb2264df7e17-annotation"
        },
        {
          "digest": "sha256:5232320700d92814955daee9588845b6d57ff499d24406e34c86cb2264df7e17",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:5232320700d92814955daee9588845b6d57ff499d24406e34c86cb2264df7e17",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:5e3f0ceb3805eb556a270ff6dd24f38b7363af635be67a07537537fdcea91a59",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:5e3f0ceb3805eb556a270ff6dd24f38b7363af635be67a07537537fdcea91a59",
          "name": "gateway"
        },
        {
          "digest": "sha256:736ebc8d15add4f82999d0d4cd95f0d7ddf4d4459496718c1482716841750dd9",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:736ebc8d15add4f82999d0d4cd95f0d7ddf4d4459496718c1482716841750dd9",
          "name": "server"
        },
        {
          "digest": "sha256:03669814dfa811b54116ce9c7481c6594f44058593ab50f8549beeef9ed0e54c",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:03669814dfa811b54116ce9c7481c6594f44058593ab50f8549beeef9ed0e54c",
          "name": "scanner"
        },
        {
          "digest": "sha256:6617cc185815d883ef25d40d0ba02e00bd39224c9431d36ecbf2254690206230",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:6617cc185815d883ef25d40d0ba02e00bd39224c9431d36ecbf2254690206230",
          "name": "enforcer"
        },
        {
          "digest": "sha256:a132492d9678275c250aaddcdf9af4fea551e79d6aaf95682f457edf8f92af50",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:a132492d9678275c250aaddcdf9af4fea551e79d6aaf95682f457edf8f92af50",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "5.3.0",
      "version_original": "5.3.0"
    },
    {
      "_id": "62fa49f430a80ba5a208cd14",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-28.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "bundle_path_digest": "sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-08-15T13:28:20.659000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:28:20.659000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca",
          "image": "redislabs/operator@sha256:29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca",
          "name": "operator-29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca-annotation"
        },
        {
          "digest": "sha256:29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.8-1",
      "version_original": "6.0.8-1"
    },
    {
      "_id": "62fa49f7e07d71e4beb6b126",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-30.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "bundle_path_digest": "sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-08-15T13:28:23.681000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:28:23.681000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator-0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1-annotation"
        },
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.8-20",
      "version_original": "6.0.8-20"
    },
    {
      "_id": "62fa4a2930a80ba5a208cd57",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "5.4.14",
      "creation_date": "2022-08-15T13:29:13.652000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:29:13.652000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "62fa4a5f4eed1a4804130076",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:e0624abf48e3f643638e93a633a4017961b454f133830f6d369b238d58a6eb8b",
      "bundle_path_digest": "sha256:e0624abf48e3f643638e93a633a4017961b454f133830f6d369b238d58a6eb8b",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "null",
      "creation_date": "2022-08-15T13:30:07.941000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:30:07.941000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "name": "cloud-native-postgresql-af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc-annotation"
        },
        {
          "digest": "sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.15.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.15.2",
      "version_original": "1.15.2"
    },
    {
      "_id": "62fa4a794eed1a480413009b",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-107.rhel8-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "bundle_path_digest": "sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-08-15T13:30:33.634000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-34",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:30:33.634000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator-53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb-annotation"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.2.10-34",
      "version_original": "6.2.10-34"
    },
    {
      "_id": "62fa4abd4eed1a48041300ea",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "bundle_path_digest": "sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-08-15T13:31:41.693000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:31:41.693000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "redislabs/operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "operator-998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b-annotation"
        },
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.6-24",
      "version_original": "6.0.6-24"
    },
    {
      "_id": "62fa4ac130a80ba5a208ce07",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-53.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "bundle_path_digest": "sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-08-15T13:31:45.169000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:31:45.169000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator-5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59-annotation"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.2.8-11",
      "version_original": "6.2.8-11"
    },
    {
      "_id": "62fa4ac5b289bcc7af670eaa",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-08-15T13:31:49.269000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:31:49.269000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "62fa4af2bb3b9bafa134acd3",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-35.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "bundle_path_digest": "sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-08-15T13:32:34.209000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:32:34.209000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:6b2879ece978e1a8e6a09be7b5f67dd3c9b25f9efbf92852af55ddabc0328c67",
          "image": "redislabs/operator@sha256:6b2879ece978e1a8e6a09be7b5f67dd3c9b25f9efbf92852af55ddabc0328c67",
          "name": "operator-6b2879ece978e1a8e6a09be7b5f67dd3c9b25f9efbf92852af55ddabc0328c67-annotation"
        },
        {
          "digest": "sha256:6b2879ece978e1a8e6a09be7b5f67dd3c9b25f9efbf92852af55ddabc0328c67",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:6b2879ece978e1a8e6a09be7b5f67dd3c9b25f9efbf92852af55ddabc0328c67",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.6-6",
      "version_original": "6.0.6-6"
    },
    {
      "_id": "62fa4b1530a80ba5a208ce74",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-97.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "bundle_path_digest": "sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2022-08-15T13:33:09.865000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-12a",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:33:09.865000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator-f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730-annotation"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.20-12a",
      "version_original": "6.0.20-12a"
    },
    {
      "_id": "62fa4b304eed1a4804130186",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-41.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:cf89cfbb1c39ac9a7fd925f1e8b5bec94535e4eb64dd6e2da102e9f7b44f9f5e",
      "bundle_path_digest": "sha256:cf89cfbb1c39ac9a7fd925f1e8b5bec94535e4eb64dd6e2da102e9f7b44f9f5e",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-08-15T13:33:36.612000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:33:36.612000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353",
          "name": "redis-enterprise-operator-f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353-annotation"
        },
        {
          "digest": "sha256:f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.2.8-2",
      "version_original": "6.2.8-2"
    },
    {
      "_id": "62fa4b33e07d71e4beb6b2a6",
      "alm_examples": [
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCluster",
          "metadata": {
            "name": "cb-example"
          },
          "spec": {
            "backup": {
              "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              },
              "serviceAccountName": "couchbase-backup"
            },
            "buckets": {
              "managed": true,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            },
            "cluster": {
              "analyticsServiceMemoryQuota": "1Gi",
              "autoFailoverMaxCount": 3,
              "autoFailoverOnDataDiskIssues": true,
              "autoFailoverOnDataDiskIssuesTimePeriod": "120s",
              "autoFailoverServerGroup": false,
              "autoFailoverTimeout": "120s",
              "clusterName": "cb-example",
              "dataServiceMemoryQuota": "256Mi",
              "eventingServiceMemoryQuota": "256Mi",
              "indexServiceMemoryQuota": "256Mi",
              "indexStorageSetting": "memory_optimized",
              "searchServiceMemoryQuota": "256Mi"
            },
            "enablePreviewScaling": false,
            "hibernate": false,
            "hibernationStrategy": "Immediate",
            "image": "registry.connect.redhat.com/couchbase/server@sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
            "logRetentionCount": 20,
            "logRetentionTime": "604800s",
            "monitoring": {
              "prometheus": {
                "enabled": false,
                "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6"
              }
            },
            "networking": {
              "adminConsoleServiceType": "NodePort",
              "adminConsoleServices": [
                "data"
              ],
              "exposeAdminConsole": true,
              "exposedFeatureServiceType": "NodePort",
              "exposedFeatures": [
                "xdcr"
              ]
            },
            "recoveryPolicy": "PrioritizeDataIntegrity",
            "security": {
              "adminSecret": "cb-example-auth",
              "rbac": {
                "managed": true,
                "selector": {
                  "matchLabels": {
                    "cluster": "cb-example"
                  }
                }
              }
            },
            "servers": [
              {
                "name": "all_services",
                "services": [
                  "data",
                  "index",
                  "query",
                  "search",
                  "eventing",
                  "analytics"
                ],
                "size": 3
              }
            ],
            "upgradeStrategy": "RollingUpgrade",
            "xdcr": {
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "default"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "enableIndexReplica": true,
            "evictionPolicy": "valueOnly",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseEphemeralBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "ephemeral-bucket"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "evictionPolicy": "noEviction",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseMemcachedBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "memcached-bucket"
          },
          "spec": {
            "enableFlush": false,
            "memoryQuota": "100Mi"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseUser",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-user"
          },
          "spec": {
            "authDomain": "local",
            "authSecret": "cb-example-auth",
            "fullName": "My User"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseGroup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-group"
          },
          "spec": {
            "roles": [
              {
                "bucket": "default",
                "name": "bucket_admin"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseRoleBinding",
          "metadata": {
            "name": "my-role-binding"
          },
          "spec": {
            "roleRef": {
              "kind": "CouchbaseGroup",
              "name": "my-group"
            },
            "subjects": [
              {
                "kind": "CouchbaseUser",
                "name": "my-user"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseReplication",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-replication"
          },
          "spec": {
            "bucket": "default",
            "compressionType": "Snappy",
            "filterExpression": "",
            "paused": false,
            "remoteBucket": "default"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-backup"
          },
          "spec": {
            "backOffLimit": 2,
            "backupRetention": "24h",
            "failedJobsHistoryLimit": 3,
            "full": {
              "schedule": "0 3 * * 6"
            },
            "incremental": {
              "schedule": "0 3 * * 1-6"
            },
            "logRetention": "24h",
            "size": "5Gi",
            "strategy": "full_incremental",
            "successfulJobsHistoryLimit": 1
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackupRestore",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-restore"
          },
          "spec": {
            "backOffLimit": 2,
            "backup": "cb-backup",
            "end": {
              "int": 1
            },
            "logRetention": "24h",
            "repo": "cb-example-2020-10-29T19_00_03",
            "start": {
              "int": 1
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCollectionGroup",
          "metadata": {
            "name": "my-collection-group"
          },
          "spec": {
            "maxTTL": "",
            "names": [
              "my-collection"
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCollection",
          "metadata": {
            "name": "my-collection"
          },
          "spec": {
            "maxTTL": "",
            "name": "my-collection"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseScopeGroup",
          "metadata": {
            "name": "my-scope-group"
          },
          "spec": {
            "collections": {},
            "names": [
              "my-scope"
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseScope",
          "metadata": {
            "name": "my-scope"
          },
          "spec": {
            "collections": {},
            "name": "my-scope"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseMigrationReplication",
          "metadata": {
            "name": "default-migration"
          },
          "spec": {
            "bucket": "default",
            "remoteBucket": "default"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseAutoscaler",
          "metadata": {
            "name": "do.not.create.internal.only"
          },
          "spec": {
            "servers": "internal",
            "size": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:84ea69b8c4a4b823597ccd4e4260947de0f0520c2330c19fd8b24f53e508b680",
      "bundle_path_digest": "sha256:84ea69b8c4a4b823597ccd4e4260947de0f0520c2330c19fd8b24f53e508b680",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "2.3.1",
      "creation_date": "2022-08-15T13:33:39.260000+00:00",
      "csv_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments on OpenShift. By installing this integration you will be able to deply Couchbase Server clusters with a single command.\n\n## Supported Features\n\n* **Automated cluster provisioning** - Deploying a Couchbase Cluster has never been easier. Fill out a Couchbase specific configuration and let the Couchbase Operator take care of provisioning nodes and setting up cluster to your exact specification.\n\n* **On-demand scalability** - Automatically scale your cluster up or down by changing a simple configuration parameter and let the Couchbase Operator handle provisioning of new nodes and joining them into the cluster.\n\n* **Auto-recovery** - Detect Couchbase node failures, rebalance out bad nodes, and bring the cluster back up to the desired capacity. Auto-recovery is completely automated so you can sleep easy through the night knowing that the Couchbase Operator will handle any failures.\n\n* **Geo-distribution** - Replicate your data between datacenters to move data closer to the users who consume it and protect against disaster scenarios where an entire datacenter becomes unavailable.\n\n* **Persistent storage** - Define persistent network-attached storage for each node in your cluster to allow pods to be recovered even if the node they were running on is no longer available.\n\n* **Rack/zone awareness** - Tell the Couchbase Operator about availability zones in your datacenter and let the operator take care of ensuring that nodes in your cluster are deployed equally across each zone.\n\n* **Supportability** - When things go wrong, use the cbopinfo tool provided with the Couchbase Operator to collect relevant data about your Couchbase deployment so that you can quickly address issues.\n\n* **Centralized configuration management** - Manage your configuration centrally with OpenShift. Updates to the configuration are watched by the Couchbase Operator and actions are taken to make the target cluster match the desired configuration.\n## Required Parameters\n* `authSecret` - provide the name of a secret that contains two keys for the `username` and `password` of the super user ([documentation](https://docs.couchbase.com/operator/1.2/couchbase-cluster-config.html))\n\n## About Couchbase Server\n\nBuilt on the most powerful NoSQL technology, Couchbase Server delivers unparalleled performance at scale, in any cloud. With features like memory-first architecture, geo-distributed deployments, and workload isolation, Couchbase Server excels at supporting mission-critical applications at scale while maintaining submillisecond latencies and 99.999% availability. Plus, with the most comprehensive SQL-compatible query language (N1QL), migrating from RDBMS to Couchbase Server is easy with ANSI joins.\n",
      "csv_display_name": "Couchbase Operator",
      "csv_metadata_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments",
      "csv_name": "couchbase-operator.v2.3.1-2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:33:39.260000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "plural": "couchbaseephemeralbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMigrationReplication",
          "plural": "couchbasemigrationreplications",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseScopeGroup",
          "plural": "couchbasescopegroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseScope",
          "plural": "couchbasescopes",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "plural": "couchbasereplications",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCollectionGroup",
          "plural": "couchbasecollectiongroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseAutoscaler",
          "plural": "couchbaseautoscalers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCollection",
          "plural": "couchbasecollections",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "plural": "couchbasebackuprestores",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "plural": "couchbasememcachedbuckets",
          "version": "v2"
        }
      ],
      "provider": "Couchbase",
      "related_images": [
        {
          "digest": "sha256:9ff13f4d8d8efc15f8c21f3ea2ddf6cd103731f02c1f26a1dd173dbf17d2afd0",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:9ff13f4d8d8efc15f8c21f3ea2ddf6cd103731f02c1f26a1dd173dbf17d2afd0",
          "name": "couchbase-operator"
        },
        {
          "digest": "sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
          "name": "couchbase-server"
        },
        {
          "digest": "sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "name": "couchbase-backup"
        },
        {
          "digest": "sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "name": "couchbase-metrics"
        },
        {
          "digest": "sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
          "name": "couchbase_server"
        },
        {
          "digest": "sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "name": "couchbase_backup"
        },
        {
          "digest": "sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "name": "couchbase_metrics"
        },
        {
          "digest": "sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6",
          "name": "exporter-fda5d8278acb72682ebc0151ab77f4c212ba3c7b850e3074b54408cd85cf0df6-annotation"
        },
        {
          "digest": "sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935",
          "name": "operator-backup-e46c4e32e645df4b9a6a2cfda04fbf8ecb66da1fdf47d073de9ec49796bd3935-annotation"
        },
        {
          "digest": "sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af",
          "name": "server-05aad0f1d3a373b60dece893a9c185dcb0e0630aa6f0c0f310ad8767918fd2af-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.3.1-2",
      "version_original": "2.3.1-2"
    },
    {
      "_id": "62fa4b52e07d71e4beb6b2d3",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-28.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "bundle_path_digest": "sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2022-08-15T13:34:10.941000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:34:10.941000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca",
          "image": "redislabs/operator@sha256:29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca",
          "name": "operator-29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca-annotation"
        },
        {
          "digest": "sha256:29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.8-1",
      "version_original": "6.0.8-1"
    },
    {
      "_id": "62fa4b684eed1a48041301de",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "bundle_path_digest": "sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-08-15T13:34:32.244000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:34:32.244000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "image": "redislabs/operator@sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "name": "operator-fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2-annotation"
        },
        {
          "digest": "sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.6-11",
      "version_original": "6.0.6-11"
    },
    {
      "_id": "62fa4bbd4eed1a480413023f",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "bundle_path_digest": "sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2022-08-15T13:35:57.126000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:35:57.126000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "redislabs/operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "operator-998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b-annotation"
        },
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.6-24",
      "version_original": "6.0.6-24"
    },
    {
      "_id": "62fa4c00b289bcc7af671077",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-30.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "bundle_path_digest": "sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2022-08-15T13:37:04.212000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:37:04.212000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator-0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1-annotation"
        },
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.8-20",
      "version_original": "6.0.8-20"
    },
    {
      "_id": "62fa4c2cb289bcc7af6710df",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            },
            "route": true,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            },
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway.aqua:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.0"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.0"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:26b6039d957e1dd8de17b1f46bde410c797159c581a217d5e396b39ccfd304cf",
      "bundle_path_digest": "sha256:26b6039d957e1dd8de17b1f46bde410c797159c581a217d5e396b39ccfd304cf",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.0",
      "creation_date": "2022-08-15T13:37:48.219000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n* Automatically scale the number of Aqua scanners based on the number of images in the scan queue\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/6.0.0/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.0.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.0.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.0.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:37:48.219000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [],
      "replaces": null,
      "skip_range": ">=1.0.2 <6.0.8",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.8",
      "version_original": "6.0.8"
    },
    {
      "_id": "62fa4c48e07d71e4beb6b46e",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.4-55.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "bundle_path_digest": "sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-08-15T13:38:16.212000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.4-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:38:16.212000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator-8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9-annotation"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.2.4-1",
      "version_original": "6.2.4-1"
    },
    {
      "_id": "62fa4c4a4eed1a4804130343",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-41.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:cf89cfbb1c39ac9a7fd925f1e8b5bec94535e4eb64dd6e2da102e9f7b44f9f5e",
      "bundle_path_digest": "sha256:cf89cfbb1c39ac9a7fd925f1e8b5bec94535e4eb64dd6e2da102e9f7b44f9f5e",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-08-15T13:38:18.083000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:38:18.083000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353",
          "name": "redis-enterprise-operator-f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353-annotation"
        },
        {
          "digest": "sha256:f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.2.8-2",
      "version_original": "6.2.8-2"
    },
    {
      "_id": "62fa4c804eed1a48041303ad",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-97.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "bundle_path_digest": "sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-08-15T13:39:12.402000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-12a",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:39:12.402000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator-f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730-annotation"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.20-12a",
      "version_original": "6.0.20-12a"
    },
    {
      "_id": "62fa4c8230a80ba5a208d0ef",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "bundle_path_digest": "sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-08-15T13:39:14.431000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:39:14.431000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "redislabs/operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "operator-998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b-annotation"
        },
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.6-24",
      "version_original": "6.0.6-24"
    },
    {
      "_id": "62fa4cdb30a80ba5a208d218",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "bundle_path_digest": "sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-08-15T13:40:43.479000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:40:43.479000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "bootstrapper-image"
        },
        {
          "digest": "sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "image": "registry.connect.redhat.com/redislabs/services-manager@sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "name": "k8s-controller-image"
        },
        {
          "digest": "sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise@sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "name": "rs-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator-b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6-annotation"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.2.10-45",
      "version_original": "6.2.10-45"
    },
    {
      "_id": "62fa4cf0e07d71e4beb6b627",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "bundle_path_digest": "sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-08-15T13:41:04.466000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:41:04.466000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "image": "redislabs/operator@sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "name": "operator-fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2-annotation"
        },
        {
          "digest": "sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.6-11",
      "version_original": "6.0.6-11"
    },
    {
      "_id": "62fa4cf9e07d71e4beb6b636",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-08-15T13:41:13.116000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:41:13.116000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "62fa4d25bb3b9bafa134b10b",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.4-55.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "bundle_path_digest": "sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2022-08-15T13:41:57.334000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.4-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:41:57.334000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator-8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9-annotation"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.2.4-1",
      "version_original": "6.2.4-1"
    },
    {
      "_id": "62fa4d2730a80ba5a208d2bf",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-08-15T13:41:59.161000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:41:59.161000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "62fa4d404eed1a4804130587",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-90.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:95644b2ccc560118c16350bcd4380db7c08d97258bf1034387e96a9b1814fef5",
      "bundle_path_digest": "sha256:95644b2ccc560118c16350bcd4380db7c08d97258bf1034387e96a9b1814fef5",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-08-15T13:42:24.114000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:42:24.114000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "name": "redis-enterprise-operator-97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31-annotation"
        },
        {
          "digest": "sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.2.10-4",
      "version_original": "6.2.10-4"
    },
    {
      "_id": "62fa4d56e07d71e4beb6b70f",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-30.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "bundle_path_digest": "sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-08-15T13:42:46.524000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:42:46.524000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator-0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1-annotation"
        },
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.8-20",
      "version_original": "6.0.8-20"
    },
    {
      "_id": "62fa8591bb3b9bafa134ec77",
      "alm_examples": [
        {
          "api_version": "containers.kove.net/v1",
          "kind": "KoveMemoryConfig",
          "metadata": {
            "labels": {
              "KoveMemoryConfig": ""
            },
            "name": "example-memory-config"
          },
          "spec": {
            "container": "",
            "namespace": "",
            "size": ""
          }
        },
        {
          "api_version": "containers.kove.net/v1",
          "kind": "KoveSystem",
          "metadata": {
            "labels": {
              "KoveSystem": ""
            },
            "name": "kove-system"
          },
          "spec": {
            "autogrowInitialIncrement": "1 GiB",
            "autogrowMaxIncrement": "1 TiB",
            "l4MaxMemoryPercent": 90,
            "managementConsoleAddress": "",
            "memoryPlusLocalMemoryMaxSize": "0 MiB"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/kove/kove-operator@sha256:20848f4ec2476dce1bf133805fd6d2f14c605225f6f55ca8a688e753f90434c7",
      "bundle_path_digest": "sha256:20848f4ec2476dce1bf133805fd6d2f14c605225f6f55ca8a688e753f90434c7",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-15T17:42:41.572000+00:00",
      "csv_description": "## About the Operator\nThe Kove External Memory operator integrates Kove's software-defined memory\nsolution with Kubernetes and OpenShift clusters. The operator enables\ncontainers to transparently provision any amount of memory, enabling total\ncontainer memory capacity to exceed physical hardware limitations.\n\nUse the Kove External Memory operator to:\n\n* Create custom resources to automatically allocate memory to specific\n  containers\n* Increase container flexibility with dynamic memory capacity that\n  auto-grows as needed\n* Scale up container density by removing memory as an orchestration\n  bottleneck\n\n## Using the Operator\nUsing the operator is as simple as creating a custom resource which\nspecifies an initial Kove memory allocation size, a namespace, and a\ncontainer name. Containers in the specified namespace with a matching\ncontainer name will automatically be provided with a Kove memory allocation\nwhich will auto-grow as needed.\n\n## About Kove\nKove makes memory a provisionable resource, just like storage, CPUs, and\nnetworking. Kove External Memory provides a transparent, linearly scalable\nmemory resource accessible to any application without code changes, from\nbare-metal apps to virtual machines and containers.\n",
      "csv_display_name": "Kove External Memory Operator",
      "csv_metadata_description": "Configure containers with Kove memory",
      "csv_name": "kove-operator.v1.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T17:42:41.572000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "kove-operator",
      "provided_apis": [
        {
          "group": "containers.kove.net",
          "kind": "KoveMemoryConfig",
          "plural": "kovememoryconfigs",
          "version": "v1"
        },
        {
          "group": "containers.kove.net",
          "kind": "KoveSystem",
          "plural": "kovesystems",
          "version": "v1"
        }
      ],
      "provider": "Kove",
      "related_images": [
        {
          "digest": "sha256:5ecc7d5b87a8e26725f09994b875ddb7409bb8a0a2f521f5f53ca45b9ead3a8a",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5ecc7d5b87a8e26725f09994b875ddb7409bb8a0a2f521f5f53ca45b9ead3a8a",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a3dde7208e05673dcd766dd9a0beeca1b5ebf7ec09822bf5e18ce9c6e778550a",
          "image": "quay.io/kove/kove-operator@sha256:a3dde7208e05673dcd766dd9a0beeca1b5ebf7ec09822bf5e18ce9c6e778550a",
          "name": "manager"
        },
        {
          "digest": "sha256:9a7b0fab9639bb447923314a708ea43689455481a478aea9f2ff4c66529f02bc",
          "image": "quay.io/kove/kove-agent@sha256:9a7b0fab9639bb447923314a708ea43689455481a478aea9f2ff4c66529f02bc",
          "name": "kove_agent"
        },
        {
          "digest": "sha256:e43602c50bb3199718bf07e69c223ef76c2b7b5a0f220d240b7fe6d3402aef69",
          "image": "quay.io/kove/kove-client-drivers@sha256:e43602c50bb3199718bf07e69c223ef76c2b7b5a0f220d240b7fe6d3402aef69",
          "name": "kove_client_drivers_8_3"
        },
        {
          "digest": "sha256:8b4799e78ff5fb320b8b3ce47a0dfb39c916a2b515ebd01965dbbee116f755be",
          "image": "quay.io/kove/kove-client-drivers@sha256:8b4799e78ff5fb320b8b3ce47a0dfb39c916a2b515ebd01965dbbee116f755be",
          "name": "kove_client_drivers_8_4"
        },
        {
          "digest": "sha256:539c427e7f899a212313516c15e23794e850e98e47ce7b63b8aceaf7948bd30b",
          "image": "quay.io/kove/kove-container-hook@sha256:539c427e7f899a212313516c15e23794e850e98e47ce7b63b8aceaf7948bd30b",
          "name": "kove_container_hook"
        },
        {
          "digest": "sha256:06b9e43db37014ecda17a8bfe23918d5af031fe7265e8e49136ec538e2f98c6b",
          "image": "quay.io/kove/kove-xmem@sha256:06b9e43db37014ecda17a8bfe23918d5af031fe7265e8e49136ec538e2f98c6b",
          "name": "kove_xmem"
        },
        {
          "digest": "sha256:a3dde7208e05673dcd766dd9a0beeca1b5ebf7ec09822bf5e18ce9c6e778550a",
          "image": "quay.io/kove/kove-operator@sha256:a3dde7208e05673dcd766dd9a0beeca1b5ebf7ec09822bf5e18ce9c6e778550a",
          "name": "kove-operator-a3dde7208e05673dcd766dd9a0beeca1b5ebf7ec09822bf5e18ce9c6e778550a-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.2.0",
      "version_original": "1.2.0"
    },
    {
      "_id": "62fa861bbb3b9bafa134ec7f",
      "alm_examples": [
        {
          "api_version": "containers.kove.net/v1",
          "kind": "KoveMemoryConfig",
          "metadata": {
            "labels": {
              "KoveMemoryConfig": ""
            },
            "name": "example-memory-config"
          },
          "spec": {
            "container": "",
            "namespace": "",
            "size": ""
          }
        },
        {
          "api_version": "containers.kove.net/v1",
          "kind": "KoveSystem",
          "metadata": {
            "labels": {
              "KoveSystem": ""
            },
            "name": "kove-system"
          },
          "spec": {
            "autogrowInitialIncrement": "1 GiB",
            "autogrowMaxIncrement": "1 TiB",
            "l4MaxMemoryPercent": 90,
            "managementConsoleAddress": "",
            "memoryPlusLocalMemoryMaxSize": "0 MiB"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/kove/kove-operator@sha256:20848f4ec2476dce1bf133805fd6d2f14c605225f6f55ca8a688e753f90434c7",
      "bundle_path_digest": "sha256:20848f4ec2476dce1bf133805fd6d2f14c605225f6f55ca8a688e753f90434c7",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-15T17:44:59.283000+00:00",
      "csv_description": "## About the Operator\nThe Kove External Memory operator integrates Kove's software-defined memory\nsolution with Kubernetes and OpenShift clusters. The operator enables\ncontainers to transparently provision any amount of memory, enabling total\ncontainer memory capacity to exceed physical hardware limitations.\n\nUse the Kove External Memory operator to:\n\n* Create custom resources to automatically allocate memory to specific\n  containers\n* Increase container flexibility with dynamic memory capacity that\n  auto-grows as needed\n* Scale up container density by removing memory as an orchestration\n  bottleneck\n\n## Using the Operator\nUsing the operator is as simple as creating a custom resource which\nspecifies an initial Kove memory allocation size, a namespace, and a\ncontainer name. Containers in the specified namespace with a matching\ncontainer name will automatically be provided with a Kove memory allocation\nwhich will auto-grow as needed.\n\n## About Kove\nKove makes memory a provisionable resource, just like storage, CPUs, and\nnetworking. Kove External Memory provides a transparent, linearly scalable\nmemory resource accessible to any application without code changes, from\nbare-metal apps to virtual machines and containers.\n",
      "csv_display_name": "Kove External Memory Operator",
      "csv_metadata_description": "Configure containers with Kove memory",
      "csv_name": "kove-operator.v1.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T17:44:59.283000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "kove-operator",
      "provided_apis": [
        {
          "group": "containers.kove.net",
          "kind": "KoveMemoryConfig",
          "plural": "kovememoryconfigs",
          "version": "v1"
        },
        {
          "group": "containers.kove.net",
          "kind": "KoveSystem",
          "plural": "kovesystems",
          "version": "v1"
        }
      ],
      "provider": "Kove",
      "related_images": [
        {
          "digest": "sha256:5ecc7d5b87a8e26725f09994b875ddb7409bb8a0a2f521f5f53ca45b9ead3a8a",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5ecc7d5b87a8e26725f09994b875ddb7409bb8a0a2f521f5f53ca45b9ead3a8a",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a3dde7208e05673dcd766dd9a0beeca1b5ebf7ec09822bf5e18ce9c6e778550a",
          "image": "quay.io/kove/kove-operator@sha256:a3dde7208e05673dcd766dd9a0beeca1b5ebf7ec09822bf5e18ce9c6e778550a",
          "name": "manager"
        },
        {
          "digest": "sha256:9a7b0fab9639bb447923314a708ea43689455481a478aea9f2ff4c66529f02bc",
          "image": "quay.io/kove/kove-agent@sha256:9a7b0fab9639bb447923314a708ea43689455481a478aea9f2ff4c66529f02bc",
          "name": "kove_agent"
        },
        {
          "digest": "sha256:e43602c50bb3199718bf07e69c223ef76c2b7b5a0f220d240b7fe6d3402aef69",
          "image": "quay.io/kove/kove-client-drivers@sha256:e43602c50bb3199718bf07e69c223ef76c2b7b5a0f220d240b7fe6d3402aef69",
          "name": "kove_client_drivers_8_3"
        },
        {
          "digest": "sha256:8b4799e78ff5fb320b8b3ce47a0dfb39c916a2b515ebd01965dbbee116f755be",
          "image": "quay.io/kove/kove-client-drivers@sha256:8b4799e78ff5fb320b8b3ce47a0dfb39c916a2b515ebd01965dbbee116f755be",
          "name": "kove_client_drivers_8_4"
        },
        {
          "digest": "sha256:539c427e7f899a212313516c15e23794e850e98e47ce7b63b8aceaf7948bd30b",
          "image": "quay.io/kove/kove-container-hook@sha256:539c427e7f899a212313516c15e23794e850e98e47ce7b63b8aceaf7948bd30b",
          "name": "kove_container_hook"
        },
        {
          "digest": "sha256:06b9e43db37014ecda17a8bfe23918d5af031fe7265e8e49136ec538e2f98c6b",
          "image": "quay.io/kove/kove-xmem@sha256:06b9e43db37014ecda17a8bfe23918d5af031fe7265e8e49136ec538e2f98c6b",
          "name": "kove_xmem"
        },
        {
          "digest": "sha256:a3dde7208e05673dcd766dd9a0beeca1b5ebf7ec09822bf5e18ce9c6e778550a",
          "image": "quay.io/kove/kove-operator@sha256:a3dde7208e05673dcd766dd9a0beeca1b5ebf7ec09822bf5e18ce9c6e778550a",
          "name": "kove-operator-a3dde7208e05673dcd766dd9a0beeca1b5ebf7ec09822bf5e18ce9c6e778550a-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.2.0",
      "version_original": "1.2.0"
    },
    {
      "_id": "62fa899a30a80ba5a2090e2e",
      "alm_examples": [
        {
          "api_version": "containers.kove.net/v1",
          "kind": "KoveMemoryConfig",
          "metadata": {
            "labels": {
              "KoveMemoryConfig": ""
            },
            "name": "example-memory-config"
          },
          "spec": {
            "container": "",
            "namespace": "",
            "size": ""
          }
        },
        {
          "api_version": "containers.kove.net/v1",
          "kind": "KoveSystem",
          "metadata": {
            "labels": {
              "KoveSystem": ""
            },
            "name": "kove-system"
          },
          "spec": {
            "autogrowInitialIncrement": "1 GiB",
            "autogrowMaxIncrement": "1 TiB",
            "l4MaxMemoryPercent": 90,
            "managementConsoleAddress": "",
            "memoryPlusLocalMemoryMaxSize": "0 MiB"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/kove/kove-operator@sha256:20848f4ec2476dce1bf133805fd6d2f14c605225f6f55ca8a688e753f90434c7",
      "bundle_path_digest": "sha256:20848f4ec2476dce1bf133805fd6d2f14c605225f6f55ca8a688e753f90434c7",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-15T17:59:54.728000+00:00",
      "csv_description": "## About the Operator\nThe Kove External Memory operator integrates Kove's software-defined memory\nsolution with Kubernetes and OpenShift clusters. The operator enables\ncontainers to transparently provision any amount of memory, enabling total\ncontainer memory capacity to exceed physical hardware limitations.\n\nUse the Kove External Memory operator to:\n\n* Create custom resources to automatically allocate memory to specific\n  containers\n* Increase container flexibility with dynamic memory capacity that\n  auto-grows as needed\n* Scale up container density by removing memory as an orchestration\n  bottleneck\n\n## Using the Operator\nUsing the operator is as simple as creating a custom resource which\nspecifies an initial Kove memory allocation size, a namespace, and a\ncontainer name. Containers in the specified namespace with a matching\ncontainer name will automatically be provided with a Kove memory allocation\nwhich will auto-grow as needed.\n\n## About Kove\nKove makes memory a provisionable resource, just like storage, CPUs, and\nnetworking. Kove External Memory provides a transparent, linearly scalable\nmemory resource accessible to any application without code changes, from\nbare-metal apps to virtual machines and containers.\n",
      "csv_display_name": "Kove External Memory Operator",
      "csv_metadata_description": "Configure containers with Kove memory",
      "csv_name": "kove-operator.v1.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T17:59:54.728000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kove-operator",
      "provided_apis": [
        {
          "group": "containers.kove.net",
          "kind": "KoveMemoryConfig",
          "plural": "kovememoryconfigs",
          "version": "v1"
        },
        {
          "group": "containers.kove.net",
          "kind": "KoveSystem",
          "plural": "kovesystems",
          "version": "v1"
        }
      ],
      "provider": "Kove",
      "related_images": [
        {
          "digest": "sha256:5ecc7d5b87a8e26725f09994b875ddb7409bb8a0a2f521f5f53ca45b9ead3a8a",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5ecc7d5b87a8e26725f09994b875ddb7409bb8a0a2f521f5f53ca45b9ead3a8a",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a3dde7208e05673dcd766dd9a0beeca1b5ebf7ec09822bf5e18ce9c6e778550a",
          "image": "quay.io/kove/kove-operator@sha256:a3dde7208e05673dcd766dd9a0beeca1b5ebf7ec09822bf5e18ce9c6e778550a",
          "name": "manager"
        },
        {
          "digest": "sha256:9a7b0fab9639bb447923314a708ea43689455481a478aea9f2ff4c66529f02bc",
          "image": "quay.io/kove/kove-agent@sha256:9a7b0fab9639bb447923314a708ea43689455481a478aea9f2ff4c66529f02bc",
          "name": "kove_agent"
        },
        {
          "digest": "sha256:e43602c50bb3199718bf07e69c223ef76c2b7b5a0f220d240b7fe6d3402aef69",
          "image": "quay.io/kove/kove-client-drivers@sha256:e43602c50bb3199718bf07e69c223ef76c2b7b5a0f220d240b7fe6d3402aef69",
          "name": "kove_client_drivers_8_3"
        },
        {
          "digest": "sha256:8b4799e78ff5fb320b8b3ce47a0dfb39c916a2b515ebd01965dbbee116f755be",
          "image": "quay.io/kove/kove-client-drivers@sha256:8b4799e78ff5fb320b8b3ce47a0dfb39c916a2b515ebd01965dbbee116f755be",
          "name": "kove_client_drivers_8_4"
        },
        {
          "digest": "sha256:539c427e7f899a212313516c15e23794e850e98e47ce7b63b8aceaf7948bd30b",
          "image": "quay.io/kove/kove-container-hook@sha256:539c427e7f899a212313516c15e23794e850e98e47ce7b63b8aceaf7948bd30b",
          "name": "kove_container_hook"
        },
        {
          "digest": "sha256:06b9e43db37014ecda17a8bfe23918d5af031fe7265e8e49136ec538e2f98c6b",
          "image": "quay.io/kove/kove-xmem@sha256:06b9e43db37014ecda17a8bfe23918d5af031fe7265e8e49136ec538e2f98c6b",
          "name": "kove_xmem"
        },
        {
          "digest": "sha256:a3dde7208e05673dcd766dd9a0beeca1b5ebf7ec09822bf5e18ce9c6e778550a",
          "image": "quay.io/kove/kove-operator@sha256:a3dde7208e05673dcd766dd9a0beeca1b5ebf7ec09822bf5e18ce9c6e778550a",
          "name": "kove-operator-a3dde7208e05673dcd766dd9a0beeca1b5ebf7ec09822bf5e18ce9c6e778550a-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.2.0",
      "version_original": "1.2.0"
    },
    {
      "_id": "62fa8ac64eed1a48041340ed",
      "alm_examples": [
        {
          "api_version": "containers.kove.net/v1",
          "kind": "KoveMemoryConfig",
          "metadata": {
            "labels": {
              "KoveMemoryConfig": ""
            },
            "name": "example-memory-config"
          },
          "spec": {
            "container": "",
            "namespace": "",
            "size": ""
          }
        },
        {
          "api_version": "containers.kove.net/v1",
          "kind": "KoveSystem",
          "metadata": {
            "labels": {
              "KoveSystem": ""
            },
            "name": "kove-system"
          },
          "spec": {
            "autogrowInitialIncrement": "1 GiB",
            "autogrowMaxIncrement": "1 TiB",
            "l4MaxMemoryPercent": 90,
            "managementConsoleAddress": "",
            "memoryPlusLocalMemoryMaxSize": "0 MiB"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/kove/kove-operator@sha256:20848f4ec2476dce1bf133805fd6d2f14c605225f6f55ca8a688e753f90434c7",
      "bundle_path_digest": "sha256:20848f4ec2476dce1bf133805fd6d2f14c605225f6f55ca8a688e753f90434c7",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-15T18:04:54.239000+00:00",
      "csv_description": "## About the Operator\nThe Kove External Memory operator integrates Kove's software-defined memory\nsolution with Kubernetes and OpenShift clusters. The operator enables\ncontainers to transparently provision any amount of memory, enabling total\ncontainer memory capacity to exceed physical hardware limitations.\n\nUse the Kove External Memory operator to:\n\n* Create custom resources to automatically allocate memory to specific\n  containers\n* Increase container flexibility with dynamic memory capacity that\n  auto-grows as needed\n* Scale up container density by removing memory as an orchestration\n  bottleneck\n\n## Using the Operator\nUsing the operator is as simple as creating a custom resource which\nspecifies an initial Kove memory allocation size, a namespace, and a\ncontainer name. Containers in the specified namespace with a matching\ncontainer name will automatically be provided with a Kove memory allocation\nwhich will auto-grow as needed.\n\n## About Kove\nKove makes memory a provisionable resource, just like storage, CPUs, and\nnetworking. Kove External Memory provides a transparent, linearly scalable\nmemory resource accessible to any application without code changes, from\nbare-metal apps to virtual machines and containers.\n",
      "csv_display_name": "Kove External Memory Operator",
      "csv_metadata_description": "Configure containers with Kove memory",
      "csv_name": "kove-operator.v1.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T18:04:54.239000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "kove-operator",
      "provided_apis": [
        {
          "group": "containers.kove.net",
          "kind": "KoveMemoryConfig",
          "plural": "kovememoryconfigs",
          "version": "v1"
        },
        {
          "group": "containers.kove.net",
          "kind": "KoveSystem",
          "plural": "kovesystems",
          "version": "v1"
        }
      ],
      "provider": "Kove",
      "related_images": [
        {
          "digest": "sha256:5ecc7d5b87a8e26725f09994b875ddb7409bb8a0a2f521f5f53ca45b9ead3a8a",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5ecc7d5b87a8e26725f09994b875ddb7409bb8a0a2f521f5f53ca45b9ead3a8a",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a3dde7208e05673dcd766dd9a0beeca1b5ebf7ec09822bf5e18ce9c6e778550a",
          "image": "quay.io/kove/kove-operator@sha256:a3dde7208e05673dcd766dd9a0beeca1b5ebf7ec09822bf5e18ce9c6e778550a",
          "name": "manager"
        },
        {
          "digest": "sha256:9a7b0fab9639bb447923314a708ea43689455481a478aea9f2ff4c66529f02bc",
          "image": "quay.io/kove/kove-agent@sha256:9a7b0fab9639bb447923314a708ea43689455481a478aea9f2ff4c66529f02bc",
          "name": "kove_agent"
        },
        {
          "digest": "sha256:e43602c50bb3199718bf07e69c223ef76c2b7b5a0f220d240b7fe6d3402aef69",
          "image": "quay.io/kove/kove-client-drivers@sha256:e43602c50bb3199718bf07e69c223ef76c2b7b5a0f220d240b7fe6d3402aef69",
          "name": "kove_client_drivers_8_3"
        },
        {
          "digest": "sha256:8b4799e78ff5fb320b8b3ce47a0dfb39c916a2b515ebd01965dbbee116f755be",
          "image": "quay.io/kove/kove-client-drivers@sha256:8b4799e78ff5fb320b8b3ce47a0dfb39c916a2b515ebd01965dbbee116f755be",
          "name": "kove_client_drivers_8_4"
        },
        {
          "digest": "sha256:539c427e7f899a212313516c15e23794e850e98e47ce7b63b8aceaf7948bd30b",
          "image": "quay.io/kove/kove-container-hook@sha256:539c427e7f899a212313516c15e23794e850e98e47ce7b63b8aceaf7948bd30b",
          "name": "kove_container_hook"
        },
        {
          "digest": "sha256:06b9e43db37014ecda17a8bfe23918d5af031fe7265e8e49136ec538e2f98c6b",
          "image": "quay.io/kove/kove-xmem@sha256:06b9e43db37014ecda17a8bfe23918d5af031fe7265e8e49136ec538e2f98c6b",
          "name": "kove_xmem"
        },
        {
          "digest": "sha256:a3dde7208e05673dcd766dd9a0beeca1b5ebf7ec09822bf5e18ce9c6e778550a",
          "image": "quay.io/kove/kove-operator@sha256:a3dde7208e05673dcd766dd9a0beeca1b5ebf7ec09822bf5e18ce9c6e778550a",
          "name": "kove-operator-a3dde7208e05673dcd766dd9a0beeca1b5ebf7ec09822bf5e18ce9c6e778550a-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.2.0",
      "version_original": "1.2.0"
    },
    {
      "_id": "62fab03e4eed1a48041344c0",
      "alm_examples": [
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceConfig",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "marketplaceconfig",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "",
            "features": {
              "deployment": true,
              "meterDefinitionCatalogServer": false,
              "registration": true
            },
            "installIBMCatalogSource": true,
            "isDisconnected": false,
            "rhmAccountID": ""
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterBase",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterbase",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "enabled": true,
            "prometheus": {
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1",
                  "memory": "1G"
                }
              },
              "storage": {
                "size": "20Gi"
              }
            }
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterReport",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterreport",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "endTime": "2020-08-05T00:00:00Z",
            "prometheusService": {
              "name": "rhm-prometheus-meterbase",
              "namespace": "openshift-redhat-marketplace",
              "targetPort": "rbac"
            },
            "startTime": "2020-08-04T00:00:00Z"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RazeeDeployment",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "razeedeployment-example",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "example-cluster-uuid",
            "enabled": true
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RemoteResourceS3",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-remoteresources3",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "auth": {
              "iam": {
                "apiKeyRef": {
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "accesskey",
                      "name": "rhm-cos-reader-key"
                    }
                  }
                },
                "grantType": "urn:ibm:params:oauth:grant-type:apikey",
                "responseType": "cloud_iam",
                "url": "https://iam.cloud.ibm.com/identity/token"
              }
            },
            "requests": [
              {
                "options": {
                  "url": "https://s3.us-east.cloud-object-storage.appdomain.cloud/your-accountId/your-cluster-uuid/name-of-child.yaml"
                }
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterdefinition-4",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterdefinition-sample",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:56e0c99e209b81a9aec1438f080a180dd6c0c617bf1df19cdbd9dbe685a27bb2",
      "bundle_path_digest": "sha256:56e0c99e209b81a9aec1438f080a180dd6c0c617bf1df19cdbd9dbe685a27bb2",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-15T20:44:46.693000+00:00",
      "csv_description": "The Red Hat Marketplace Operator provides cluster management, metering and\noperator installation for Red Hat Marketplace customers.\n### **Important Note**\nA set of instructions for onboarding is provided here. For more detailed onboarding instructions or information about what is installed please visit [marketplace.redhat.com](https://marketplace.redhat.com).\nTo access images from Red Hat Marketplace and the Marketplace container catalog you will need to make the pull secret attained in installation available to the workloads running on the cluster.\n### Prerequisites\n1. It is recommended to [enable monitoring for user-defined projects](https://docs.openshift.com/container-platform/4.10/monitoring/enabling-monitoring-for-user-defined-projects.html) as the Prometheus provider.\n2. Edit the cluster-monitoring-config ConfigMap object:\n  \n   ```sh\n   $ oc -n openshift-monitoring edit configmap cluster-monitoring-config\n   ```\n\n3. Add enableUserWorkload: true under data/config.yaml:\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: cluster-monitoring-config\n      namespace: openshift-monitoring\n    data:\n      config.yaml: |\n        enableUserWorkload: true\n    ```\n\n4. Configure the user-workload-monitoring-config ConfigMap object:\n  \n    ```sh\n    $ oc -n openshift-user-workload-monitoring edit configmap user-workload-monitoring-config\n    ```\n\n5. Configure a minimum retention time of 168h and minimum storage capacity of 40Gi\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: user-workload-monitoring-config\n      namespace: openshift-user-workload-monitoring\n    data:\n      config.yaml: |\n        prometheus:\n          retention: 168h\n          volumeClaimTemplate:\n            spec:\n              resources:\n                requests:\n                  storage: 40Gi\n    ```\n\n### Installation\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n2. Install the Red Hat Marketplace Operator in the openshift-redhat-marketplace namespace.\n3. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n4. Install the Red Hat Marketplace pull secret as a global pull secret on the cluster.\n   **Warning:** This step will make your cluster perform a rolling restart.\n   These steps require `oc`, `jq`, and `base64` to be available on your machine.\n\n   ```sh\n   # Create the docker pull secret file using your PULL_SECRET from Red Hat Marketplace.\n   # Store it in a file called entitledregistryconfigjson.\n   oc create secret docker-registry entitled-registry --docker-server=registry.marketplace.redhat.com --docker-username \"cp\" --docker-password \"${PULL_SECRET}\" --dry-run=true --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > entitledregistryconfigjson\n   # Get the current global secrets on the cluster and store it as a file named dockerconfigjson\n   oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > dockerconfigjson\n   # Merge the two dockerconfigs together into a file called dockerconfigjson-merged.\n   jq -s '.[0] * .[1]' dockerconfigjson entitledregistryconfigjson > dockerconfigjson-merged\n   # Set the cluster's dockerconfig file to the new merged version.\n   oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfigjson-merged\n   # Cluster will now restart.\n   ```\n\n### Why is a global pull secret required?\nIn order to successfully install the Red Hat Marketplace products, you will need to make the pull secret available across the cluster. This can be achieved by applying the Red Hat Marketplace Pull Secret as a [global pull secret](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).\nFor alternative approachs, please see the official OpenShift [documentation](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html).\n### Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n### Getting help\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/redhat-marketplace-operator) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n### Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/README.md)\n### License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/LICENSE)\n",
      "csv_display_name": "Red Hat Marketplace",
      "csv_metadata_description": "The Red Hat Marketplace Operator provides cluster management, metering and operator installation for Red Hat Marketplace customers.",
      "csv_name": "redhat-marketplace-operator.v2.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T20:44:46.693000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceConfig",
          "plural": "marketplaceconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterBase",
          "plural": "meterbases",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1beta1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterReport",
          "plural": "meterreports",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RazeeDeployment",
          "plural": "razeedeployments",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RemoteResourceS3",
          "plural": "remoteresources3s",
          "version": "v1alpha1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:07c3deef1552b6f1c659843b4b380233975fa3048dce1a58c006786022ffb710",
          "image": "quay.io/rh-marketplace/redhat-marketplace-authcheck@sha256:07c3deef1552b6f1c659843b4b380233975fa3048dce1a58c006786022ffb710",
          "name": "authcheck"
        },
        {
          "digest": "sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "image": "us.icr.io/armada-master/watch-keeper@sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "name": "rhm_watch_keeper_deployment"
        },
        {
          "digest": "sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "image": "us.icr.io/armada-master/remoteresources3@sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "name": "rhm_rrs3_deployment"
        },
        {
          "digest": "sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "image": "registry.redhat.io/openshift4/ose-prometheus-operator@sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "name": "prometheus_operator"
        },
        {
          "digest": "sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "image": "registry.redhat.io/openshift4/ose-prometheus@sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "name": "prometheus"
        },
        {
          "digest": "sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "image": "registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "name": "prometheus_configmap_reloader"
        },
        {
          "digest": "sha256:093f3a006c0d73bcf3d5e1ac78f684734b87c08147b1ac57e6a609f34eddc9c8",
          "image": "quay.io/rh-marketplace/redhat-marketplace-data-service@sha256:093f3a006c0d73bcf3d5e1ac78f684734b87c08147b1ac57e6a609f34eddc9c8",
          "name": "dqlite"
        },
        {
          "digest": "sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "image": "registry.redhat.io/openshift4/ose-configmap-reloader@sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "name": "configmap_reloader"
        },
        {
          "digest": "sha256:5c8e285a28ac89c2567940e74448da4586c4493151cac54fbc30281c6cc097cb",
          "image": "quay.io/rh-marketplace/redhat-marketplace-reporter@sha256:5c8e285a28ac89c2567940e74448da4586c4493151cac54fbc30281c6cc097cb",
          "name": "reporter"
        },
        {
          "digest": "sha256:4d2fa73d4f4577b1560e07d0692492374a4bb8b6bb6b9261fa88effff5e44db3",
          "image": "quay.io/rh-marketplace/redhat-marketplace-metric-state@sha256:4d2fa73d4f4577b1560e07d0692492374a4bb8b6bb6b9261fa88effff5e44db3",
          "name": "metric_state"
        },
        {
          "digest": "sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "name": "manager"
        },
        {
          "digest": "sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "name": "redhat-marketplace-operator-fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <2.8.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.8.0",
      "version_original": "2.8.0"
    },
    {
      "_id": "62fab03fb289bcc7af6752ef",
      "alm_examples": [
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceConfig",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "marketplaceconfig",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "",
            "features": {
              "deployment": true,
              "meterDefinitionCatalogServer": false,
              "registration": true
            },
            "installIBMCatalogSource": true,
            "isDisconnected": false,
            "rhmAccountID": ""
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterBase",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterbase",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "enabled": true,
            "prometheus": {
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1",
                  "memory": "1G"
                }
              },
              "storage": {
                "size": "20Gi"
              }
            }
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterReport",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterreport",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "endTime": "2020-08-05T00:00:00Z",
            "prometheusService": {
              "name": "rhm-prometheus-meterbase",
              "namespace": "openshift-redhat-marketplace",
              "targetPort": "rbac"
            },
            "startTime": "2020-08-04T00:00:00Z"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RazeeDeployment",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "razeedeployment-example",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "example-cluster-uuid",
            "enabled": true
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RemoteResourceS3",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-remoteresources3",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "auth": {
              "iam": {
                "apiKeyRef": {
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "accesskey",
                      "name": "rhm-cos-reader-key"
                    }
                  }
                },
                "grantType": "urn:ibm:params:oauth:grant-type:apikey",
                "responseType": "cloud_iam",
                "url": "https://iam.cloud.ibm.com/identity/token"
              }
            },
            "requests": [
              {
                "options": {
                  "url": "https://s3.us-east.cloud-object-storage.appdomain.cloud/your-accountId/your-cluster-uuid/name-of-child.yaml"
                }
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterdefinition-4",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterdefinition-sample",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:56e0c99e209b81a9aec1438f080a180dd6c0c617bf1df19cdbd9dbe685a27bb2",
      "bundle_path_digest": "sha256:56e0c99e209b81a9aec1438f080a180dd6c0c617bf1df19cdbd9dbe685a27bb2",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-15T20:44:47.377000+00:00",
      "csv_description": "The Red Hat Marketplace Operator provides cluster management, metering and\noperator installation for Red Hat Marketplace customers.\n### **Important Note**\nA set of instructions for onboarding is provided here. For more detailed onboarding instructions or information about what is installed please visit [marketplace.redhat.com](https://marketplace.redhat.com).\nTo access images from Red Hat Marketplace and the Marketplace container catalog you will need to make the pull secret attained in installation available to the workloads running on the cluster.\n### Prerequisites\n1. It is recommended to [enable monitoring for user-defined projects](https://docs.openshift.com/container-platform/4.10/monitoring/enabling-monitoring-for-user-defined-projects.html) as the Prometheus provider.\n2. Edit the cluster-monitoring-config ConfigMap object:\n  \n   ```sh\n   $ oc -n openshift-monitoring edit configmap cluster-monitoring-config\n   ```\n\n3. Add enableUserWorkload: true under data/config.yaml:\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: cluster-monitoring-config\n      namespace: openshift-monitoring\n    data:\n      config.yaml: |\n        enableUserWorkload: true\n    ```\n\n4. Configure the user-workload-monitoring-config ConfigMap object:\n  \n    ```sh\n    $ oc -n openshift-user-workload-monitoring edit configmap user-workload-monitoring-config\n    ```\n\n5. Configure a minimum retention time of 168h and minimum storage capacity of 40Gi\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: user-workload-monitoring-config\n      namespace: openshift-user-workload-monitoring\n    data:\n      config.yaml: |\n        prometheus:\n          retention: 168h\n          volumeClaimTemplate:\n            spec:\n              resources:\n                requests:\n                  storage: 40Gi\n    ```\n\n### Installation\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n2. Install the Red Hat Marketplace Operator in the openshift-redhat-marketplace namespace.\n3. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n4. Install the Red Hat Marketplace pull secret as a global pull secret on the cluster.\n   **Warning:** This step will make your cluster perform a rolling restart.\n   These steps require `oc`, `jq`, and `base64` to be available on your machine.\n\n   ```sh\n   # Create the docker pull secret file using your PULL_SECRET from Red Hat Marketplace.\n   # Store it in a file called entitledregistryconfigjson.\n   oc create secret docker-registry entitled-registry --docker-server=registry.marketplace.redhat.com --docker-username \"cp\" --docker-password \"${PULL_SECRET}\" --dry-run=true --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > entitledregistryconfigjson\n   # Get the current global secrets on the cluster and store it as a file named dockerconfigjson\n   oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > dockerconfigjson\n   # Merge the two dockerconfigs together into a file called dockerconfigjson-merged.\n   jq -s '.[0] * .[1]' dockerconfigjson entitledregistryconfigjson > dockerconfigjson-merged\n   # Set the cluster's dockerconfig file to the new merged version.\n   oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfigjson-merged\n   # Cluster will now restart.\n   ```\n\n### Why is a global pull secret required?\nIn order to successfully install the Red Hat Marketplace products, you will need to make the pull secret available across the cluster. This can be achieved by applying the Red Hat Marketplace Pull Secret as a [global pull secret](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).\nFor alternative approachs, please see the official OpenShift [documentation](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html).\n### Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n### Getting help\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/redhat-marketplace-operator) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n### Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/README.md)\n### License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/LICENSE)\n",
      "csv_display_name": "Red Hat Marketplace",
      "csv_metadata_description": "The Red Hat Marketplace Operator provides cluster management, metering and operator installation for Red Hat Marketplace customers.",
      "csv_name": "redhat-marketplace-operator.v2.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T20:44:47.377000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceConfig",
          "plural": "marketplaceconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterBase",
          "plural": "meterbases",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1beta1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterReport",
          "plural": "meterreports",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RazeeDeployment",
          "plural": "razeedeployments",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RemoteResourceS3",
          "plural": "remoteresources3s",
          "version": "v1alpha1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:07c3deef1552b6f1c659843b4b380233975fa3048dce1a58c006786022ffb710",
          "image": "quay.io/rh-marketplace/redhat-marketplace-authcheck@sha256:07c3deef1552b6f1c659843b4b380233975fa3048dce1a58c006786022ffb710",
          "name": "authcheck"
        },
        {
          "digest": "sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "image": "us.icr.io/armada-master/watch-keeper@sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "name": "rhm_watch_keeper_deployment"
        },
        {
          "digest": "sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "image": "us.icr.io/armada-master/remoteresources3@sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "name": "rhm_rrs3_deployment"
        },
        {
          "digest": "sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "image": "registry.redhat.io/openshift4/ose-prometheus-operator@sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "name": "prometheus_operator"
        },
        {
          "digest": "sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "image": "registry.redhat.io/openshift4/ose-prometheus@sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "name": "prometheus"
        },
        {
          "digest": "sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "image": "registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "name": "prometheus_configmap_reloader"
        },
        {
          "digest": "sha256:093f3a006c0d73bcf3d5e1ac78f684734b87c08147b1ac57e6a609f34eddc9c8",
          "image": "quay.io/rh-marketplace/redhat-marketplace-data-service@sha256:093f3a006c0d73bcf3d5e1ac78f684734b87c08147b1ac57e6a609f34eddc9c8",
          "name": "dqlite"
        },
        {
          "digest": "sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "image": "registry.redhat.io/openshift4/ose-configmap-reloader@sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "name": "configmap_reloader"
        },
        {
          "digest": "sha256:5c8e285a28ac89c2567940e74448da4586c4493151cac54fbc30281c6cc097cb",
          "image": "quay.io/rh-marketplace/redhat-marketplace-reporter@sha256:5c8e285a28ac89c2567940e74448da4586c4493151cac54fbc30281c6cc097cb",
          "name": "reporter"
        },
        {
          "digest": "sha256:4d2fa73d4f4577b1560e07d0692492374a4bb8b6bb6b9261fa88effff5e44db3",
          "image": "quay.io/rh-marketplace/redhat-marketplace-metric-state@sha256:4d2fa73d4f4577b1560e07d0692492374a4bb8b6bb6b9261fa88effff5e44db3",
          "name": "metric_state"
        },
        {
          "digest": "sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "name": "manager"
        },
        {
          "digest": "sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "name": "redhat-marketplace-operator-fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <2.8.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.8.0",
      "version_original": "2.8.0"
    },
    {
      "_id": "62fab3094eed1a48041344ea",
      "alm_examples": [
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceConfig",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "marketplaceconfig",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "",
            "features": {
              "deployment": true,
              "meterDefinitionCatalogServer": false,
              "registration": true
            },
            "installIBMCatalogSource": true,
            "isDisconnected": false,
            "rhmAccountID": ""
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterBase",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterbase",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "enabled": true,
            "prometheus": {
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1",
                  "memory": "1G"
                }
              },
              "storage": {
                "size": "20Gi"
              }
            }
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterReport",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterreport",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "endTime": "2020-08-05T00:00:00Z",
            "prometheusService": {
              "name": "rhm-prometheus-meterbase",
              "namespace": "openshift-redhat-marketplace",
              "targetPort": "rbac"
            },
            "startTime": "2020-08-04T00:00:00Z"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RazeeDeployment",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "razeedeployment-example",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "example-cluster-uuid",
            "enabled": true
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RemoteResourceS3",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-remoteresources3",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "auth": {
              "iam": {
                "apiKeyRef": {
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "accesskey",
                      "name": "rhm-cos-reader-key"
                    }
                  }
                },
                "grantType": "urn:ibm:params:oauth:grant-type:apikey",
                "responseType": "cloud_iam",
                "url": "https://iam.cloud.ibm.com/identity/token"
              }
            },
            "requests": [
              {
                "options": {
                  "url": "https://s3.us-east.cloud-object-storage.appdomain.cloud/your-accountId/your-cluster-uuid/name-of-child.yaml"
                }
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterdefinition-4",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterdefinition-sample",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:56e0c99e209b81a9aec1438f080a180dd6c0c617bf1df19cdbd9dbe685a27bb2",
      "bundle_path_digest": "sha256:56e0c99e209b81a9aec1438f080a180dd6c0c617bf1df19cdbd9dbe685a27bb2",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-15T20:56:41.028000+00:00",
      "csv_description": "The Red Hat Marketplace Operator provides cluster management, metering and\noperator installation for Red Hat Marketplace customers.\n### **Important Note**\nA set of instructions for onboarding is provided here. For more detailed onboarding instructions or information about what is installed please visit [marketplace.redhat.com](https://marketplace.redhat.com).\nTo access images from Red Hat Marketplace and the Marketplace container catalog you will need to make the pull secret attained in installation available to the workloads running on the cluster.\n### Prerequisites\n1. It is recommended to [enable monitoring for user-defined projects](https://docs.openshift.com/container-platform/4.10/monitoring/enabling-monitoring-for-user-defined-projects.html) as the Prometheus provider.\n2. Edit the cluster-monitoring-config ConfigMap object:\n  \n   ```sh\n   $ oc -n openshift-monitoring edit configmap cluster-monitoring-config\n   ```\n\n3. Add enableUserWorkload: true under data/config.yaml:\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: cluster-monitoring-config\n      namespace: openshift-monitoring\n    data:\n      config.yaml: |\n        enableUserWorkload: true\n    ```\n\n4. Configure the user-workload-monitoring-config ConfigMap object:\n  \n    ```sh\n    $ oc -n openshift-user-workload-monitoring edit configmap user-workload-monitoring-config\n    ```\n\n5. Configure a minimum retention time of 168h and minimum storage capacity of 40Gi\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: user-workload-monitoring-config\n      namespace: openshift-user-workload-monitoring\n    data:\n      config.yaml: |\n        prometheus:\n          retention: 168h\n          volumeClaimTemplate:\n            spec:\n              resources:\n                requests:\n                  storage: 40Gi\n    ```\n\n### Installation\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n2. Install the Red Hat Marketplace Operator in the openshift-redhat-marketplace namespace.\n3. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n4. Install the Red Hat Marketplace pull secret as a global pull secret on the cluster.\n   **Warning:** This step will make your cluster perform a rolling restart.\n   These steps require `oc`, `jq`, and `base64` to be available on your machine.\n\n   ```sh\n   # Create the docker pull secret file using your PULL_SECRET from Red Hat Marketplace.\n   # Store it in a file called entitledregistryconfigjson.\n   oc create secret docker-registry entitled-registry --docker-server=registry.marketplace.redhat.com --docker-username \"cp\" --docker-password \"${PULL_SECRET}\" --dry-run=true --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > entitledregistryconfigjson\n   # Get the current global secrets on the cluster and store it as a file named dockerconfigjson\n   oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > dockerconfigjson\n   # Merge the two dockerconfigs together into a file called dockerconfigjson-merged.\n   jq -s '.[0] * .[1]' dockerconfigjson entitledregistryconfigjson > dockerconfigjson-merged\n   # Set the cluster's dockerconfig file to the new merged version.\n   oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfigjson-merged\n   # Cluster will now restart.\n   ```\n\n### Why is a global pull secret required?\nIn order to successfully install the Red Hat Marketplace products, you will need to make the pull secret available across the cluster. This can be achieved by applying the Red Hat Marketplace Pull Secret as a [global pull secret](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).\nFor alternative approachs, please see the official OpenShift [documentation](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html).\n### Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n### Getting help\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/redhat-marketplace-operator) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n### Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/README.md)\n### License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/LICENSE)\n",
      "csv_display_name": "Red Hat Marketplace",
      "csv_metadata_description": "The Red Hat Marketplace Operator provides cluster management, metering and operator installation for Red Hat Marketplace customers.",
      "csv_name": "redhat-marketplace-operator.v2.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T20:56:41.028000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1beta1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterReport",
          "plural": "meterreports",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RazeeDeployment",
          "plural": "razeedeployments",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RemoteResourceS3",
          "plural": "remoteresources3s",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceConfig",
          "plural": "marketplaceconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterBase",
          "plural": "meterbases",
          "version": "v1alpha1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:07c3deef1552b6f1c659843b4b380233975fa3048dce1a58c006786022ffb710",
          "image": "quay.io/rh-marketplace/redhat-marketplace-authcheck@sha256:07c3deef1552b6f1c659843b4b380233975fa3048dce1a58c006786022ffb710",
          "name": "authcheck"
        },
        {
          "digest": "sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "image": "us.icr.io/armada-master/watch-keeper@sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "name": "rhm_watch_keeper_deployment"
        },
        {
          "digest": "sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "image": "us.icr.io/armada-master/remoteresources3@sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "name": "rhm_rrs3_deployment"
        },
        {
          "digest": "sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "image": "registry.redhat.io/openshift4/ose-prometheus-operator@sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "name": "prometheus_operator"
        },
        {
          "digest": "sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "image": "registry.redhat.io/openshift4/ose-prometheus@sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "name": "prometheus"
        },
        {
          "digest": "sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "image": "registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "name": "prometheus_configmap_reloader"
        },
        {
          "digest": "sha256:093f3a006c0d73bcf3d5e1ac78f684734b87c08147b1ac57e6a609f34eddc9c8",
          "image": "quay.io/rh-marketplace/redhat-marketplace-data-service@sha256:093f3a006c0d73bcf3d5e1ac78f684734b87c08147b1ac57e6a609f34eddc9c8",
          "name": "dqlite"
        },
        {
          "digest": "sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "image": "registry.redhat.io/openshift4/ose-configmap-reloader@sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "name": "configmap_reloader"
        },
        {
          "digest": "sha256:5c8e285a28ac89c2567940e74448da4586c4493151cac54fbc30281c6cc097cb",
          "image": "quay.io/rh-marketplace/redhat-marketplace-reporter@sha256:5c8e285a28ac89c2567940e74448da4586c4493151cac54fbc30281c6cc097cb",
          "name": "reporter"
        },
        {
          "digest": "sha256:4d2fa73d4f4577b1560e07d0692492374a4bb8b6bb6b9261fa88effff5e44db3",
          "image": "quay.io/rh-marketplace/redhat-marketplace-metric-state@sha256:4d2fa73d4f4577b1560e07d0692492374a4bb8b6bb6b9261fa88effff5e44db3",
          "name": "metric_state"
        },
        {
          "digest": "sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "name": "manager"
        },
        {
          "digest": "sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "name": "redhat-marketplace-operator-fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <2.8.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.8.0",
      "version_original": "2.8.0"
    },
    {
      "_id": "62fab3094eed1a48041344ec",
      "alm_examples": [
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceConfig",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "marketplaceconfig",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "",
            "features": {
              "deployment": true,
              "meterDefinitionCatalogServer": false,
              "registration": true
            },
            "installIBMCatalogSource": true,
            "isDisconnected": false,
            "rhmAccountID": ""
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterBase",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterbase",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "enabled": true,
            "prometheus": {
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1",
                  "memory": "1G"
                }
              },
              "storage": {
                "size": "20Gi"
              }
            }
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterReport",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterreport",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "endTime": "2020-08-05T00:00:00Z",
            "prometheusService": {
              "name": "rhm-prometheus-meterbase",
              "namespace": "openshift-redhat-marketplace",
              "targetPort": "rbac"
            },
            "startTime": "2020-08-04T00:00:00Z"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RazeeDeployment",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "razeedeployment-example",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "example-cluster-uuid",
            "enabled": true
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RemoteResourceS3",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-remoteresources3",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "auth": {
              "iam": {
                "apiKeyRef": {
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "accesskey",
                      "name": "rhm-cos-reader-key"
                    }
                  }
                },
                "grantType": "urn:ibm:params:oauth:grant-type:apikey",
                "responseType": "cloud_iam",
                "url": "https://iam.cloud.ibm.com/identity/token"
              }
            },
            "requests": [
              {
                "options": {
                  "url": "https://s3.us-east.cloud-object-storage.appdomain.cloud/your-accountId/your-cluster-uuid/name-of-child.yaml"
                }
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterdefinition-4",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterdefinition-sample",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:56e0c99e209b81a9aec1438f080a180dd6c0c617bf1df19cdbd9dbe685a27bb2",
      "bundle_path_digest": "sha256:56e0c99e209b81a9aec1438f080a180dd6c0c617bf1df19cdbd9dbe685a27bb2",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-15T20:56:41.812000+00:00",
      "csv_description": "The Red Hat Marketplace Operator provides cluster management, metering and\noperator installation for Red Hat Marketplace customers.\n### **Important Note**\nA set of instructions for onboarding is provided here. For more detailed onboarding instructions or information about what is installed please visit [marketplace.redhat.com](https://marketplace.redhat.com).\nTo access images from Red Hat Marketplace and the Marketplace container catalog you will need to make the pull secret attained in installation available to the workloads running on the cluster.\n### Prerequisites\n1. It is recommended to [enable monitoring for user-defined projects](https://docs.openshift.com/container-platform/4.10/monitoring/enabling-monitoring-for-user-defined-projects.html) as the Prometheus provider.\n2. Edit the cluster-monitoring-config ConfigMap object:\n  \n   ```sh\n   $ oc -n openshift-monitoring edit configmap cluster-monitoring-config\n   ```\n\n3. Add enableUserWorkload: true under data/config.yaml:\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: cluster-monitoring-config\n      namespace: openshift-monitoring\n    data:\n      config.yaml: |\n        enableUserWorkload: true\n    ```\n\n4. Configure the user-workload-monitoring-config ConfigMap object:\n  \n    ```sh\n    $ oc -n openshift-user-workload-monitoring edit configmap user-workload-monitoring-config\n    ```\n\n5. Configure a minimum retention time of 168h and minimum storage capacity of 40Gi\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: user-workload-monitoring-config\n      namespace: openshift-user-workload-monitoring\n    data:\n      config.yaml: |\n        prometheus:\n          retention: 168h\n          volumeClaimTemplate:\n            spec:\n              resources:\n                requests:\n                  storage: 40Gi\n    ```\n\n### Installation\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n2. Install the Red Hat Marketplace Operator in the openshift-redhat-marketplace namespace.\n3. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n4. Install the Red Hat Marketplace pull secret as a global pull secret on the cluster.\n   **Warning:** This step will make your cluster perform a rolling restart.\n   These steps require `oc`, `jq`, and `base64` to be available on your machine.\n\n   ```sh\n   # Create the docker pull secret file using your PULL_SECRET from Red Hat Marketplace.\n   # Store it in a file called entitledregistryconfigjson.\n   oc create secret docker-registry entitled-registry --docker-server=registry.marketplace.redhat.com --docker-username \"cp\" --docker-password \"${PULL_SECRET}\" --dry-run=true --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > entitledregistryconfigjson\n   # Get the current global secrets on the cluster and store it as a file named dockerconfigjson\n   oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > dockerconfigjson\n   # Merge the two dockerconfigs together into a file called dockerconfigjson-merged.\n   jq -s '.[0] * .[1]' dockerconfigjson entitledregistryconfigjson > dockerconfigjson-merged\n   # Set the cluster's dockerconfig file to the new merged version.\n   oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfigjson-merged\n   # Cluster will now restart.\n   ```\n\n### Why is a global pull secret required?\nIn order to successfully install the Red Hat Marketplace products, you will need to make the pull secret available across the cluster. This can be achieved by applying the Red Hat Marketplace Pull Secret as a [global pull secret](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).\nFor alternative approachs, please see the official OpenShift [documentation](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html).\n### Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n### Getting help\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/redhat-marketplace-operator) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n### Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/README.md)\n### License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/LICENSE)\n",
      "csv_display_name": "Red Hat Marketplace",
      "csv_metadata_description": "The Red Hat Marketplace Operator provides cluster management, metering and operator installation for Red Hat Marketplace customers.",
      "csv_name": "redhat-marketplace-operator.v2.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T20:56:41.812000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1beta1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterReport",
          "plural": "meterreports",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RazeeDeployment",
          "plural": "razeedeployments",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RemoteResourceS3",
          "plural": "remoteresources3s",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceConfig",
          "plural": "marketplaceconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterBase",
          "plural": "meterbases",
          "version": "v1alpha1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:07c3deef1552b6f1c659843b4b380233975fa3048dce1a58c006786022ffb710",
          "image": "quay.io/rh-marketplace/redhat-marketplace-authcheck@sha256:07c3deef1552b6f1c659843b4b380233975fa3048dce1a58c006786022ffb710",
          "name": "authcheck"
        },
        {
          "digest": "sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "image": "us.icr.io/armada-master/watch-keeper@sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "name": "rhm_watch_keeper_deployment"
        },
        {
          "digest": "sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "image": "us.icr.io/armada-master/remoteresources3@sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "name": "rhm_rrs3_deployment"
        },
        {
          "digest": "sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "image": "registry.redhat.io/openshift4/ose-prometheus-operator@sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "name": "prometheus_operator"
        },
        {
          "digest": "sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "image": "registry.redhat.io/openshift4/ose-prometheus@sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "name": "prometheus"
        },
        {
          "digest": "sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "image": "registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "name": "prometheus_configmap_reloader"
        },
        {
          "digest": "sha256:093f3a006c0d73bcf3d5e1ac78f684734b87c08147b1ac57e6a609f34eddc9c8",
          "image": "quay.io/rh-marketplace/redhat-marketplace-data-service@sha256:093f3a006c0d73bcf3d5e1ac78f684734b87c08147b1ac57e6a609f34eddc9c8",
          "name": "dqlite"
        },
        {
          "digest": "sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "image": "registry.redhat.io/openshift4/ose-configmap-reloader@sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "name": "configmap_reloader"
        },
        {
          "digest": "sha256:5c8e285a28ac89c2567940e74448da4586c4493151cac54fbc30281c6cc097cb",
          "image": "quay.io/rh-marketplace/redhat-marketplace-reporter@sha256:5c8e285a28ac89c2567940e74448da4586c4493151cac54fbc30281c6cc097cb",
          "name": "reporter"
        },
        {
          "digest": "sha256:4d2fa73d4f4577b1560e07d0692492374a4bb8b6bb6b9261fa88effff5e44db3",
          "image": "quay.io/rh-marketplace/redhat-marketplace-metric-state@sha256:4d2fa73d4f4577b1560e07d0692492374a4bb8b6bb6b9261fa88effff5e44db3",
          "name": "metric_state"
        },
        {
          "digest": "sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "name": "manager"
        },
        {
          "digest": "sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "name": "redhat-marketplace-operator-fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <2.8.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.8.0",
      "version_original": "2.8.0"
    },
    {
      "_id": "62fab41eb289bcc7af675326",
      "alm_examples": [
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceConfig",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "marketplaceconfig",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "",
            "features": {
              "deployment": true,
              "meterDefinitionCatalogServer": false,
              "registration": true
            },
            "installIBMCatalogSource": true,
            "isDisconnected": false,
            "rhmAccountID": ""
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterBase",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterbase",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "enabled": true,
            "prometheus": {
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1",
                  "memory": "1G"
                }
              },
              "storage": {
                "size": "20Gi"
              }
            }
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterReport",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterreport",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "endTime": "2020-08-05T00:00:00Z",
            "prometheusService": {
              "name": "rhm-prometheus-meterbase",
              "namespace": "openshift-redhat-marketplace",
              "targetPort": "rbac"
            },
            "startTime": "2020-08-04T00:00:00Z"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RazeeDeployment",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "razeedeployment-example",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "example-cluster-uuid",
            "enabled": true
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RemoteResourceS3",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-remoteresources3",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "auth": {
              "iam": {
                "apiKeyRef": {
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "accesskey",
                      "name": "rhm-cos-reader-key"
                    }
                  }
                },
                "grantType": "urn:ibm:params:oauth:grant-type:apikey",
                "responseType": "cloud_iam",
                "url": "https://iam.cloud.ibm.com/identity/token"
              }
            },
            "requests": [
              {
                "options": {
                  "url": "https://s3.us-east.cloud-object-storage.appdomain.cloud/your-accountId/your-cluster-uuid/name-of-child.yaml"
                }
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterdefinition-4",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterdefinition-sample",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:56e0c99e209b81a9aec1438f080a180dd6c0c617bf1df19cdbd9dbe685a27bb2",
      "bundle_path_digest": "sha256:56e0c99e209b81a9aec1438f080a180dd6c0c617bf1df19cdbd9dbe685a27bb2",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-15T21:01:18.472000+00:00",
      "csv_description": "The Red Hat Marketplace Operator provides cluster management, metering and\noperator installation for Red Hat Marketplace customers.\n### **Important Note**\nA set of instructions for onboarding is provided here. For more detailed onboarding instructions or information about what is installed please visit [marketplace.redhat.com](https://marketplace.redhat.com).\nTo access images from Red Hat Marketplace and the Marketplace container catalog you will need to make the pull secret attained in installation available to the workloads running on the cluster.\n### Prerequisites\n1. It is recommended to [enable monitoring for user-defined projects](https://docs.openshift.com/container-platform/4.10/monitoring/enabling-monitoring-for-user-defined-projects.html) as the Prometheus provider.\n2. Edit the cluster-monitoring-config ConfigMap object:\n  \n   ```sh\n   $ oc -n openshift-monitoring edit configmap cluster-monitoring-config\n   ```\n\n3. Add enableUserWorkload: true under data/config.yaml:\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: cluster-monitoring-config\n      namespace: openshift-monitoring\n    data:\n      config.yaml: |\n        enableUserWorkload: true\n    ```\n\n4. Configure the user-workload-monitoring-config ConfigMap object:\n  \n    ```sh\n    $ oc -n openshift-user-workload-monitoring edit configmap user-workload-monitoring-config\n    ```\n\n5. Configure a minimum retention time of 168h and minimum storage capacity of 40Gi\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: user-workload-monitoring-config\n      namespace: openshift-user-workload-monitoring\n    data:\n      config.yaml: |\n        prometheus:\n          retention: 168h\n          volumeClaimTemplate:\n            spec:\n              resources:\n                requests:\n                  storage: 40Gi\n    ```\n\n### Installation\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n2. Install the Red Hat Marketplace Operator in the openshift-redhat-marketplace namespace.\n3. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n4. Install the Red Hat Marketplace pull secret as a global pull secret on the cluster.\n   **Warning:** This step will make your cluster perform a rolling restart.\n   These steps require `oc`, `jq`, and `base64` to be available on your machine.\n\n   ```sh\n   # Create the docker pull secret file using your PULL_SECRET from Red Hat Marketplace.\n   # Store it in a file called entitledregistryconfigjson.\n   oc create secret docker-registry entitled-registry --docker-server=registry.marketplace.redhat.com --docker-username \"cp\" --docker-password \"${PULL_SECRET}\" --dry-run=true --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > entitledregistryconfigjson\n   # Get the current global secrets on the cluster and store it as a file named dockerconfigjson\n   oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > dockerconfigjson\n   # Merge the two dockerconfigs together into a file called dockerconfigjson-merged.\n   jq -s '.[0] * .[1]' dockerconfigjson entitledregistryconfigjson > dockerconfigjson-merged\n   # Set the cluster's dockerconfig file to the new merged version.\n   oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfigjson-merged\n   # Cluster will now restart.\n   ```\n\n### Why is a global pull secret required?\nIn order to successfully install the Red Hat Marketplace products, you will need to make the pull secret available across the cluster. This can be achieved by applying the Red Hat Marketplace Pull Secret as a [global pull secret](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).\nFor alternative approachs, please see the official OpenShift [documentation](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html).\n### Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n### Getting help\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/redhat-marketplace-operator) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n### Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/README.md)\n### License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/LICENSE)\n",
      "csv_display_name": "Red Hat Marketplace",
      "csv_metadata_description": "The Red Hat Marketplace Operator provides cluster management, metering and operator installation for Red Hat Marketplace customers.",
      "csv_name": "redhat-marketplace-operator.v2.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T21:01:18.472000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceConfig",
          "plural": "marketplaceconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterBase",
          "plural": "meterbases",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1beta1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterReport",
          "plural": "meterreports",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RazeeDeployment",
          "plural": "razeedeployments",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RemoteResourceS3",
          "plural": "remoteresources3s",
          "version": "v1alpha1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:07c3deef1552b6f1c659843b4b380233975fa3048dce1a58c006786022ffb710",
          "image": "quay.io/rh-marketplace/redhat-marketplace-authcheck@sha256:07c3deef1552b6f1c659843b4b380233975fa3048dce1a58c006786022ffb710",
          "name": "authcheck"
        },
        {
          "digest": "sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "image": "us.icr.io/armada-master/watch-keeper@sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "name": "rhm_watch_keeper_deployment"
        },
        {
          "digest": "sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "image": "us.icr.io/armada-master/remoteresources3@sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "name": "rhm_rrs3_deployment"
        },
        {
          "digest": "sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "image": "registry.redhat.io/openshift4/ose-prometheus-operator@sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "name": "prometheus_operator"
        },
        {
          "digest": "sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "image": "registry.redhat.io/openshift4/ose-prometheus@sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "name": "prometheus"
        },
        {
          "digest": "sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "image": "registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "name": "prometheus_configmap_reloader"
        },
        {
          "digest": "sha256:093f3a006c0d73bcf3d5e1ac78f684734b87c08147b1ac57e6a609f34eddc9c8",
          "image": "quay.io/rh-marketplace/redhat-marketplace-data-service@sha256:093f3a006c0d73bcf3d5e1ac78f684734b87c08147b1ac57e6a609f34eddc9c8",
          "name": "dqlite"
        },
        {
          "digest": "sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "image": "registry.redhat.io/openshift4/ose-configmap-reloader@sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "name": "configmap_reloader"
        },
        {
          "digest": "sha256:5c8e285a28ac89c2567940e74448da4586c4493151cac54fbc30281c6cc097cb",
          "image": "quay.io/rh-marketplace/redhat-marketplace-reporter@sha256:5c8e285a28ac89c2567940e74448da4586c4493151cac54fbc30281c6cc097cb",
          "name": "reporter"
        },
        {
          "digest": "sha256:4d2fa73d4f4577b1560e07d0692492374a4bb8b6bb6b9261fa88effff5e44db3",
          "image": "quay.io/rh-marketplace/redhat-marketplace-metric-state@sha256:4d2fa73d4f4577b1560e07d0692492374a4bb8b6bb6b9261fa88effff5e44db3",
          "name": "metric_state"
        },
        {
          "digest": "sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "name": "manager"
        },
        {
          "digest": "sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "name": "redhat-marketplace-operator-fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <2.8.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.8.0",
      "version_original": "2.8.0"
    },
    {
      "_id": "62fab420b289bcc7af675328",
      "alm_examples": [
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceConfig",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "marketplaceconfig",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "",
            "features": {
              "deployment": true,
              "meterDefinitionCatalogServer": false,
              "registration": true
            },
            "installIBMCatalogSource": true,
            "isDisconnected": false,
            "rhmAccountID": ""
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterBase",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterbase",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "enabled": true,
            "prometheus": {
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1",
                  "memory": "1G"
                }
              },
              "storage": {
                "size": "20Gi"
              }
            }
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterReport",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterreport",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "endTime": "2020-08-05T00:00:00Z",
            "prometheusService": {
              "name": "rhm-prometheus-meterbase",
              "namespace": "openshift-redhat-marketplace",
              "targetPort": "rbac"
            },
            "startTime": "2020-08-04T00:00:00Z"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RazeeDeployment",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "razeedeployment-example",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "example-cluster-uuid",
            "enabled": true
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RemoteResourceS3",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-remoteresources3",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "auth": {
              "iam": {
                "apiKeyRef": {
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "accesskey",
                      "name": "rhm-cos-reader-key"
                    }
                  }
                },
                "grantType": "urn:ibm:params:oauth:grant-type:apikey",
                "responseType": "cloud_iam",
                "url": "https://iam.cloud.ibm.com/identity/token"
              }
            },
            "requests": [
              {
                "options": {
                  "url": "https://s3.us-east.cloud-object-storage.appdomain.cloud/your-accountId/your-cluster-uuid/name-of-child.yaml"
                }
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterdefinition-4",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterdefinition-sample",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:56e0c99e209b81a9aec1438f080a180dd6c0c617bf1df19cdbd9dbe685a27bb2",
      "bundle_path_digest": "sha256:56e0c99e209b81a9aec1438f080a180dd6c0c617bf1df19cdbd9dbe685a27bb2",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-15T21:01:20.503000+00:00",
      "csv_description": "The Red Hat Marketplace Operator provides cluster management, metering and\noperator installation for Red Hat Marketplace customers.\n### **Important Note**\nA set of instructions for onboarding is provided here. For more detailed onboarding instructions or information about what is installed please visit [marketplace.redhat.com](https://marketplace.redhat.com).\nTo access images from Red Hat Marketplace and the Marketplace container catalog you will need to make the pull secret attained in installation available to the workloads running on the cluster.\n### Prerequisites\n1. It is recommended to [enable monitoring for user-defined projects](https://docs.openshift.com/container-platform/4.10/monitoring/enabling-monitoring-for-user-defined-projects.html) as the Prometheus provider.\n2. Edit the cluster-monitoring-config ConfigMap object:\n  \n   ```sh\n   $ oc -n openshift-monitoring edit configmap cluster-monitoring-config\n   ```\n\n3. Add enableUserWorkload: true under data/config.yaml:\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: cluster-monitoring-config\n      namespace: openshift-monitoring\n    data:\n      config.yaml: |\n        enableUserWorkload: true\n    ```\n\n4. Configure the user-workload-monitoring-config ConfigMap object:\n  \n    ```sh\n    $ oc -n openshift-user-workload-monitoring edit configmap user-workload-monitoring-config\n    ```\n\n5. Configure a minimum retention time of 168h and minimum storage capacity of 40Gi\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: user-workload-monitoring-config\n      namespace: openshift-user-workload-monitoring\n    data:\n      config.yaml: |\n        prometheus:\n          retention: 168h\n          volumeClaimTemplate:\n            spec:\n              resources:\n                requests:\n                  storage: 40Gi\n    ```\n\n### Installation\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n2. Install the Red Hat Marketplace Operator in the openshift-redhat-marketplace namespace.\n3. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n4. Install the Red Hat Marketplace pull secret as a global pull secret on the cluster.\n   **Warning:** This step will make your cluster perform a rolling restart.\n   These steps require `oc`, `jq`, and `base64` to be available on your machine.\n\n   ```sh\n   # Create the docker pull secret file using your PULL_SECRET from Red Hat Marketplace.\n   # Store it in a file called entitledregistryconfigjson.\n   oc create secret docker-registry entitled-registry --docker-server=registry.marketplace.redhat.com --docker-username \"cp\" --docker-password \"${PULL_SECRET}\" --dry-run=true --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > entitledregistryconfigjson\n   # Get the current global secrets on the cluster and store it as a file named dockerconfigjson\n   oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > dockerconfigjson\n   # Merge the two dockerconfigs together into a file called dockerconfigjson-merged.\n   jq -s '.[0] * .[1]' dockerconfigjson entitledregistryconfigjson > dockerconfigjson-merged\n   # Set the cluster's dockerconfig file to the new merged version.\n   oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfigjson-merged\n   # Cluster will now restart.\n   ```\n\n### Why is a global pull secret required?\nIn order to successfully install the Red Hat Marketplace products, you will need to make the pull secret available across the cluster. This can be achieved by applying the Red Hat Marketplace Pull Secret as a [global pull secret](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).\nFor alternative approachs, please see the official OpenShift [documentation](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html).\n### Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n### Getting help\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/redhat-marketplace-operator) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n### Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/README.md)\n### License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/LICENSE)\n",
      "csv_display_name": "Red Hat Marketplace",
      "csv_metadata_description": "The Red Hat Marketplace Operator provides cluster management, metering and operator installation for Red Hat Marketplace customers.",
      "csv_name": "redhat-marketplace-operator.v2.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T21:01:20.503000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceConfig",
          "plural": "marketplaceconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterBase",
          "plural": "meterbases",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1beta1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterReport",
          "plural": "meterreports",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RazeeDeployment",
          "plural": "razeedeployments",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RemoteResourceS3",
          "plural": "remoteresources3s",
          "version": "v1alpha1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:07c3deef1552b6f1c659843b4b380233975fa3048dce1a58c006786022ffb710",
          "image": "quay.io/rh-marketplace/redhat-marketplace-authcheck@sha256:07c3deef1552b6f1c659843b4b380233975fa3048dce1a58c006786022ffb710",
          "name": "authcheck"
        },
        {
          "digest": "sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "image": "us.icr.io/armada-master/watch-keeper@sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "name": "rhm_watch_keeper_deployment"
        },
        {
          "digest": "sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "image": "us.icr.io/armada-master/remoteresources3@sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "name": "rhm_rrs3_deployment"
        },
        {
          "digest": "sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "image": "registry.redhat.io/openshift4/ose-prometheus-operator@sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "name": "prometheus_operator"
        },
        {
          "digest": "sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "image": "registry.redhat.io/openshift4/ose-prometheus@sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "name": "prometheus"
        },
        {
          "digest": "sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "image": "registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "name": "prometheus_configmap_reloader"
        },
        {
          "digest": "sha256:093f3a006c0d73bcf3d5e1ac78f684734b87c08147b1ac57e6a609f34eddc9c8",
          "image": "quay.io/rh-marketplace/redhat-marketplace-data-service@sha256:093f3a006c0d73bcf3d5e1ac78f684734b87c08147b1ac57e6a609f34eddc9c8",
          "name": "dqlite"
        },
        {
          "digest": "sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "image": "registry.redhat.io/openshift4/ose-configmap-reloader@sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "name": "configmap_reloader"
        },
        {
          "digest": "sha256:5c8e285a28ac89c2567940e74448da4586c4493151cac54fbc30281c6cc097cb",
          "image": "quay.io/rh-marketplace/redhat-marketplace-reporter@sha256:5c8e285a28ac89c2567940e74448da4586c4493151cac54fbc30281c6cc097cb",
          "name": "reporter"
        },
        {
          "digest": "sha256:4d2fa73d4f4577b1560e07d0692492374a4bb8b6bb6b9261fa88effff5e44db3",
          "image": "quay.io/rh-marketplace/redhat-marketplace-metric-state@sha256:4d2fa73d4f4577b1560e07d0692492374a4bb8b6bb6b9261fa88effff5e44db3",
          "name": "metric_state"
        },
        {
          "digest": "sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "name": "manager"
        },
        {
          "digest": "sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "name": "redhat-marketplace-operator-fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <2.8.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.8.0",
      "version_original": "2.8.0"
    },
    {
      "_id": "62fab523b289bcc7af675337",
      "alm_examples": [
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceConfig",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "marketplaceconfig",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "",
            "features": {
              "deployment": true,
              "meterDefinitionCatalogServer": false,
              "registration": true
            },
            "installIBMCatalogSource": true,
            "isDisconnected": false,
            "rhmAccountID": ""
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterBase",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterbase",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "enabled": true,
            "prometheus": {
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1",
                  "memory": "1G"
                }
              },
              "storage": {
                "size": "20Gi"
              }
            }
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterReport",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterreport",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "endTime": "2020-08-05T00:00:00Z",
            "prometheusService": {
              "name": "rhm-prometheus-meterbase",
              "namespace": "openshift-redhat-marketplace",
              "targetPort": "rbac"
            },
            "startTime": "2020-08-04T00:00:00Z"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RazeeDeployment",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "razeedeployment-example",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "example-cluster-uuid",
            "enabled": true
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RemoteResourceS3",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-remoteresources3",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "auth": {
              "iam": {
                "apiKeyRef": {
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "accesskey",
                      "name": "rhm-cos-reader-key"
                    }
                  }
                },
                "grantType": "urn:ibm:params:oauth:grant-type:apikey",
                "responseType": "cloud_iam",
                "url": "https://iam.cloud.ibm.com/identity/token"
              }
            },
            "requests": [
              {
                "options": {
                  "url": "https://s3.us-east.cloud-object-storage.appdomain.cloud/your-accountId/your-cluster-uuid/name-of-child.yaml"
                }
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterdefinition-4",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterdefinition-sample",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:56e0c99e209b81a9aec1438f080a180dd6c0c617bf1df19cdbd9dbe685a27bb2",
      "bundle_path_digest": "sha256:56e0c99e209b81a9aec1438f080a180dd6c0c617bf1df19cdbd9dbe685a27bb2",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-15T21:05:39.875000+00:00",
      "csv_description": "The Red Hat Marketplace Operator provides cluster management, metering and\noperator installation for Red Hat Marketplace customers.\n### **Important Note**\nA set of instructions for onboarding is provided here. For more detailed onboarding instructions or information about what is installed please visit [marketplace.redhat.com](https://marketplace.redhat.com).\nTo access images from Red Hat Marketplace and the Marketplace container catalog you will need to make the pull secret attained in installation available to the workloads running on the cluster.\n### Prerequisites\n1. It is recommended to [enable monitoring for user-defined projects](https://docs.openshift.com/container-platform/4.10/monitoring/enabling-monitoring-for-user-defined-projects.html) as the Prometheus provider.\n2. Edit the cluster-monitoring-config ConfigMap object:\n  \n   ```sh\n   $ oc -n openshift-monitoring edit configmap cluster-monitoring-config\n   ```\n\n3. Add enableUserWorkload: true under data/config.yaml:\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: cluster-monitoring-config\n      namespace: openshift-monitoring\n    data:\n      config.yaml: |\n        enableUserWorkload: true\n    ```\n\n4. Configure the user-workload-monitoring-config ConfigMap object:\n  \n    ```sh\n    $ oc -n openshift-user-workload-monitoring edit configmap user-workload-monitoring-config\n    ```\n\n5. Configure a minimum retention time of 168h and minimum storage capacity of 40Gi\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: user-workload-monitoring-config\n      namespace: openshift-user-workload-monitoring\n    data:\n      config.yaml: |\n        prometheus:\n          retention: 168h\n          volumeClaimTemplate:\n            spec:\n              resources:\n                requests:\n                  storage: 40Gi\n    ```\n\n### Installation\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n2. Install the Red Hat Marketplace Operator in the openshift-redhat-marketplace namespace.\n3. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n4. Install the Red Hat Marketplace pull secret as a global pull secret on the cluster.\n   **Warning:** This step will make your cluster perform a rolling restart.\n   These steps require `oc`, `jq`, and `base64` to be available on your machine.\n\n   ```sh\n   # Create the docker pull secret file using your PULL_SECRET from Red Hat Marketplace.\n   # Store it in a file called entitledregistryconfigjson.\n   oc create secret docker-registry entitled-registry --docker-server=registry.marketplace.redhat.com --docker-username \"cp\" --docker-password \"${PULL_SECRET}\" --dry-run=true --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > entitledregistryconfigjson\n   # Get the current global secrets on the cluster and store it as a file named dockerconfigjson\n   oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > dockerconfigjson\n   # Merge the two dockerconfigs together into a file called dockerconfigjson-merged.\n   jq -s '.[0] * .[1]' dockerconfigjson entitledregistryconfigjson > dockerconfigjson-merged\n   # Set the cluster's dockerconfig file to the new merged version.\n   oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfigjson-merged\n   # Cluster will now restart.\n   ```\n\n### Why is a global pull secret required?\nIn order to successfully install the Red Hat Marketplace products, you will need to make the pull secret available across the cluster. This can be achieved by applying the Red Hat Marketplace Pull Secret as a [global pull secret](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).\nFor alternative approachs, please see the official OpenShift [documentation](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html).\n### Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n### Getting help\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/redhat-marketplace-operator) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n### Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/README.md)\n### License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/LICENSE)\n",
      "csv_display_name": "Red Hat Marketplace",
      "csv_metadata_description": "The Red Hat Marketplace Operator provides cluster management, metering and operator installation for Red Hat Marketplace customers.",
      "csv_name": "redhat-marketplace-operator.v2.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T21:05:39.875000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1beta1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterReport",
          "plural": "meterreports",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RazeeDeployment",
          "plural": "razeedeployments",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RemoteResourceS3",
          "plural": "remoteresources3s",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceConfig",
          "plural": "marketplaceconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterBase",
          "plural": "meterbases",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1alpha1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:07c3deef1552b6f1c659843b4b380233975fa3048dce1a58c006786022ffb710",
          "image": "quay.io/rh-marketplace/redhat-marketplace-authcheck@sha256:07c3deef1552b6f1c659843b4b380233975fa3048dce1a58c006786022ffb710",
          "name": "authcheck"
        },
        {
          "digest": "sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "image": "us.icr.io/armada-master/watch-keeper@sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "name": "rhm_watch_keeper_deployment"
        },
        {
          "digest": "sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "image": "us.icr.io/armada-master/remoteresources3@sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "name": "rhm_rrs3_deployment"
        },
        {
          "digest": "sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "image": "registry.redhat.io/openshift4/ose-prometheus-operator@sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "name": "prometheus_operator"
        },
        {
          "digest": "sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "image": "registry.redhat.io/openshift4/ose-prometheus@sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "name": "prometheus"
        },
        {
          "digest": "sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "image": "registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "name": "prometheus_configmap_reloader"
        },
        {
          "digest": "sha256:093f3a006c0d73bcf3d5e1ac78f684734b87c08147b1ac57e6a609f34eddc9c8",
          "image": "quay.io/rh-marketplace/redhat-marketplace-data-service@sha256:093f3a006c0d73bcf3d5e1ac78f684734b87c08147b1ac57e6a609f34eddc9c8",
          "name": "dqlite"
        },
        {
          "digest": "sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "image": "registry.redhat.io/openshift4/ose-configmap-reloader@sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "name": "configmap_reloader"
        },
        {
          "digest": "sha256:5c8e285a28ac89c2567940e74448da4586c4493151cac54fbc30281c6cc097cb",
          "image": "quay.io/rh-marketplace/redhat-marketplace-reporter@sha256:5c8e285a28ac89c2567940e74448da4586c4493151cac54fbc30281c6cc097cb",
          "name": "reporter"
        },
        {
          "digest": "sha256:4d2fa73d4f4577b1560e07d0692492374a4bb8b6bb6b9261fa88effff5e44db3",
          "image": "quay.io/rh-marketplace/redhat-marketplace-metric-state@sha256:4d2fa73d4f4577b1560e07d0692492374a4bb8b6bb6b9261fa88effff5e44db3",
          "name": "metric_state"
        },
        {
          "digest": "sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "name": "manager"
        },
        {
          "digest": "sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "name": "redhat-marketplace-operator-fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <2.8.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.8.0",
      "version_original": "2.8.0"
    },
    {
      "_id": "62fab524b289bcc7af67533a",
      "alm_examples": [
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceConfig",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "marketplaceconfig",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "",
            "features": {
              "deployment": true,
              "meterDefinitionCatalogServer": false,
              "registration": true
            },
            "installIBMCatalogSource": true,
            "isDisconnected": false,
            "rhmAccountID": ""
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterBase",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterbase",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "enabled": true,
            "prometheus": {
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1",
                  "memory": "1G"
                }
              },
              "storage": {
                "size": "20Gi"
              }
            }
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterReport",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterreport",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "endTime": "2020-08-05T00:00:00Z",
            "prometheusService": {
              "name": "rhm-prometheus-meterbase",
              "namespace": "openshift-redhat-marketplace",
              "targetPort": "rbac"
            },
            "startTime": "2020-08-04T00:00:00Z"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RazeeDeployment",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "razeedeployment-example",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "example-cluster-uuid",
            "enabled": true
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RemoteResourceS3",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-remoteresources3",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "auth": {
              "iam": {
                "apiKeyRef": {
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "accesskey",
                      "name": "rhm-cos-reader-key"
                    }
                  }
                },
                "grantType": "urn:ibm:params:oauth:grant-type:apikey",
                "responseType": "cloud_iam",
                "url": "https://iam.cloud.ibm.com/identity/token"
              }
            },
            "requests": [
              {
                "options": {
                  "url": "https://s3.us-east.cloud-object-storage.appdomain.cloud/your-accountId/your-cluster-uuid/name-of-child.yaml"
                }
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterdefinition-4",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterdefinition-sample",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:56e0c99e209b81a9aec1438f080a180dd6c0c617bf1df19cdbd9dbe685a27bb2",
      "bundle_path_digest": "sha256:56e0c99e209b81a9aec1438f080a180dd6c0c617bf1df19cdbd9dbe685a27bb2",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-15T21:05:40.370000+00:00",
      "csv_description": "The Red Hat Marketplace Operator provides cluster management, metering and\noperator installation for Red Hat Marketplace customers.\n### **Important Note**\nA set of instructions for onboarding is provided here. For more detailed onboarding instructions or information about what is installed please visit [marketplace.redhat.com](https://marketplace.redhat.com).\nTo access images from Red Hat Marketplace and the Marketplace container catalog you will need to make the pull secret attained in installation available to the workloads running on the cluster.\n### Prerequisites\n1. It is recommended to [enable monitoring for user-defined projects](https://docs.openshift.com/container-platform/4.10/monitoring/enabling-monitoring-for-user-defined-projects.html) as the Prometheus provider.\n2. Edit the cluster-monitoring-config ConfigMap object:\n  \n   ```sh\n   $ oc -n openshift-monitoring edit configmap cluster-monitoring-config\n   ```\n\n3. Add enableUserWorkload: true under data/config.yaml:\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: cluster-monitoring-config\n      namespace: openshift-monitoring\n    data:\n      config.yaml: |\n        enableUserWorkload: true\n    ```\n\n4. Configure the user-workload-monitoring-config ConfigMap object:\n  \n    ```sh\n    $ oc -n openshift-user-workload-monitoring edit configmap user-workload-monitoring-config\n    ```\n\n5. Configure a minimum retention time of 168h and minimum storage capacity of 40Gi\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: user-workload-monitoring-config\n      namespace: openshift-user-workload-monitoring\n    data:\n      config.yaml: |\n        prometheus:\n          retention: 168h\n          volumeClaimTemplate:\n            spec:\n              resources:\n                requests:\n                  storage: 40Gi\n    ```\n\n### Installation\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n2. Install the Red Hat Marketplace Operator in the openshift-redhat-marketplace namespace.\n3. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n4. Install the Red Hat Marketplace pull secret as a global pull secret on the cluster.\n   **Warning:** This step will make your cluster perform a rolling restart.\n   These steps require `oc`, `jq`, and `base64` to be available on your machine.\n\n   ```sh\n   # Create the docker pull secret file using your PULL_SECRET from Red Hat Marketplace.\n   # Store it in a file called entitledregistryconfigjson.\n   oc create secret docker-registry entitled-registry --docker-server=registry.marketplace.redhat.com --docker-username \"cp\" --docker-password \"${PULL_SECRET}\" --dry-run=true --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > entitledregistryconfigjson\n   # Get the current global secrets on the cluster and store it as a file named dockerconfigjson\n   oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > dockerconfigjson\n   # Merge the two dockerconfigs together into a file called dockerconfigjson-merged.\n   jq -s '.[0] * .[1]' dockerconfigjson entitledregistryconfigjson > dockerconfigjson-merged\n   # Set the cluster's dockerconfig file to the new merged version.\n   oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfigjson-merged\n   # Cluster will now restart.\n   ```\n\n### Why is a global pull secret required?\nIn order to successfully install the Red Hat Marketplace products, you will need to make the pull secret available across the cluster. This can be achieved by applying the Red Hat Marketplace Pull Secret as a [global pull secret](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).\nFor alternative approachs, please see the official OpenShift [documentation](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html).\n### Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n### Getting help\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/redhat-marketplace-operator) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n### Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/README.md)\n### License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/LICENSE)\n",
      "csv_display_name": "Red Hat Marketplace",
      "csv_metadata_description": "The Red Hat Marketplace Operator provides cluster management, metering and operator installation for Red Hat Marketplace customers.",
      "csv_name": "redhat-marketplace-operator.v2.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T21:05:40.370000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1beta1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterReport",
          "plural": "meterreports",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RazeeDeployment",
          "plural": "razeedeployments",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RemoteResourceS3",
          "plural": "remoteresources3s",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceConfig",
          "plural": "marketplaceconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterBase",
          "plural": "meterbases",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1alpha1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:07c3deef1552b6f1c659843b4b380233975fa3048dce1a58c006786022ffb710",
          "image": "quay.io/rh-marketplace/redhat-marketplace-authcheck@sha256:07c3deef1552b6f1c659843b4b380233975fa3048dce1a58c006786022ffb710",
          "name": "authcheck"
        },
        {
          "digest": "sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "image": "us.icr.io/armada-master/watch-keeper@sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "name": "rhm_watch_keeper_deployment"
        },
        {
          "digest": "sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "image": "us.icr.io/armada-master/remoteresources3@sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "name": "rhm_rrs3_deployment"
        },
        {
          "digest": "sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "image": "registry.redhat.io/openshift4/ose-prometheus-operator@sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "name": "prometheus_operator"
        },
        {
          "digest": "sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "image": "registry.redhat.io/openshift4/ose-prometheus@sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "name": "prometheus"
        },
        {
          "digest": "sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "image": "registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "name": "prometheus_configmap_reloader"
        },
        {
          "digest": "sha256:093f3a006c0d73bcf3d5e1ac78f684734b87c08147b1ac57e6a609f34eddc9c8",
          "image": "quay.io/rh-marketplace/redhat-marketplace-data-service@sha256:093f3a006c0d73bcf3d5e1ac78f684734b87c08147b1ac57e6a609f34eddc9c8",
          "name": "dqlite"
        },
        {
          "digest": "sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "image": "registry.redhat.io/openshift4/ose-configmap-reloader@sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "name": "configmap_reloader"
        },
        {
          "digest": "sha256:5c8e285a28ac89c2567940e74448da4586c4493151cac54fbc30281c6cc097cb",
          "image": "quay.io/rh-marketplace/redhat-marketplace-reporter@sha256:5c8e285a28ac89c2567940e74448da4586c4493151cac54fbc30281c6cc097cb",
          "name": "reporter"
        },
        {
          "digest": "sha256:4d2fa73d4f4577b1560e07d0692492374a4bb8b6bb6b9261fa88effff5e44db3",
          "image": "quay.io/rh-marketplace/redhat-marketplace-metric-state@sha256:4d2fa73d4f4577b1560e07d0692492374a4bb8b6bb6b9261fa88effff5e44db3",
          "name": "metric_state"
        },
        {
          "digest": "sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "name": "manager"
        },
        {
          "digest": "sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "name": "redhat-marketplace-operator-fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <2.8.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.8.0",
      "version_original": "2.8.0"
    },
    {
      "_id": "62fab5bd30a80ba5a2091292",
      "alm_examples": [
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceConfig",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "marketplaceconfig",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "",
            "features": {
              "deployment": true,
              "meterDefinitionCatalogServer": false,
              "registration": true
            },
            "installIBMCatalogSource": true,
            "isDisconnected": false,
            "rhmAccountID": ""
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterBase",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterbase",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "enabled": true,
            "prometheus": {
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1",
                  "memory": "1G"
                }
              },
              "storage": {
                "size": "20Gi"
              }
            }
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterReport",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterreport",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "endTime": "2020-08-05T00:00:00Z",
            "prometheusService": {
              "name": "rhm-prometheus-meterbase",
              "namespace": "openshift-redhat-marketplace",
              "targetPort": "rbac"
            },
            "startTime": "2020-08-04T00:00:00Z"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RazeeDeployment",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "razeedeployment-example",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "example-cluster-uuid",
            "enabled": true
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RemoteResourceS3",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-remoteresources3",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "auth": {
              "iam": {
                "apiKeyRef": {
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "accesskey",
                      "name": "rhm-cos-reader-key"
                    }
                  }
                },
                "grantType": "urn:ibm:params:oauth:grant-type:apikey",
                "responseType": "cloud_iam",
                "url": "https://iam.cloud.ibm.com/identity/token"
              }
            },
            "requests": [
              {
                "options": {
                  "url": "https://s3.us-east.cloud-object-storage.appdomain.cloud/your-accountId/your-cluster-uuid/name-of-child.yaml"
                }
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterdefinition-4",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterdefinition-sample",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:56e0c99e209b81a9aec1438f080a180dd6c0c617bf1df19cdbd9dbe685a27bb2",
      "bundle_path_digest": "sha256:56e0c99e209b81a9aec1438f080a180dd6c0c617bf1df19cdbd9dbe685a27bb2",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-15T21:08:13.352000+00:00",
      "csv_description": "The Red Hat Marketplace Operator provides cluster management, metering and\noperator installation for Red Hat Marketplace customers.\n### **Important Note**\nA set of instructions for onboarding is provided here. For more detailed onboarding instructions or information about what is installed please visit [marketplace.redhat.com](https://marketplace.redhat.com).\nTo access images from Red Hat Marketplace and the Marketplace container catalog you will need to make the pull secret attained in installation available to the workloads running on the cluster.\n### Prerequisites\n1. It is recommended to [enable monitoring for user-defined projects](https://docs.openshift.com/container-platform/4.10/monitoring/enabling-monitoring-for-user-defined-projects.html) as the Prometheus provider.\n2. Edit the cluster-monitoring-config ConfigMap object:\n  \n   ```sh\n   $ oc -n openshift-monitoring edit configmap cluster-monitoring-config\n   ```\n\n3. Add enableUserWorkload: true under data/config.yaml:\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: cluster-monitoring-config\n      namespace: openshift-monitoring\n    data:\n      config.yaml: |\n        enableUserWorkload: true\n    ```\n\n4. Configure the user-workload-monitoring-config ConfigMap object:\n  \n    ```sh\n    $ oc -n openshift-user-workload-monitoring edit configmap user-workload-monitoring-config\n    ```\n\n5. Configure a minimum retention time of 168h and minimum storage capacity of 40Gi\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: user-workload-monitoring-config\n      namespace: openshift-user-workload-monitoring\n    data:\n      config.yaml: |\n        prometheus:\n          retention: 168h\n          volumeClaimTemplate:\n            spec:\n              resources:\n                requests:\n                  storage: 40Gi\n    ```\n\n### Installation\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n2. Install the Red Hat Marketplace Operator in the openshift-redhat-marketplace namespace.\n3. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n4. Install the Red Hat Marketplace pull secret as a global pull secret on the cluster.\n   **Warning:** This step will make your cluster perform a rolling restart.\n   These steps require `oc`, `jq`, and `base64` to be available on your machine.\n\n   ```sh\n   # Create the docker pull secret file using your PULL_SECRET from Red Hat Marketplace.\n   # Store it in a file called entitledregistryconfigjson.\n   oc create secret docker-registry entitled-registry --docker-server=registry.marketplace.redhat.com --docker-username \"cp\" --docker-password \"${PULL_SECRET}\" --dry-run=true --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > entitledregistryconfigjson\n   # Get the current global secrets on the cluster and store it as a file named dockerconfigjson\n   oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > dockerconfigjson\n   # Merge the two dockerconfigs together into a file called dockerconfigjson-merged.\n   jq -s '.[0] * .[1]' dockerconfigjson entitledregistryconfigjson > dockerconfigjson-merged\n   # Set the cluster's dockerconfig file to the new merged version.\n   oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfigjson-merged\n   # Cluster will now restart.\n   ```\n\n### Why is a global pull secret required?\nIn order to successfully install the Red Hat Marketplace products, you will need to make the pull secret available across the cluster. This can be achieved by applying the Red Hat Marketplace Pull Secret as a [global pull secret](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).\nFor alternative approachs, please see the official OpenShift [documentation](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html).\n### Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n### Getting help\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/redhat-marketplace-operator) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n### Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/README.md)\n### License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/LICENSE)\n",
      "csv_display_name": "Red Hat Marketplace",
      "csv_metadata_description": "The Red Hat Marketplace Operator provides cluster management, metering and operator installation for Red Hat Marketplace customers.",
      "csv_name": "redhat-marketplace-operator.v2.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T21:08:13.352000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterReport",
          "plural": "meterreports",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RazeeDeployment",
          "plural": "razeedeployments",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RemoteResourceS3",
          "plural": "remoteresources3s",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceConfig",
          "plural": "marketplaceconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterBase",
          "plural": "meterbases",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1beta1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:07c3deef1552b6f1c659843b4b380233975fa3048dce1a58c006786022ffb710",
          "image": "quay.io/rh-marketplace/redhat-marketplace-authcheck@sha256:07c3deef1552b6f1c659843b4b380233975fa3048dce1a58c006786022ffb710",
          "name": "authcheck"
        },
        {
          "digest": "sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "image": "us.icr.io/armada-master/watch-keeper@sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "name": "rhm_watch_keeper_deployment"
        },
        {
          "digest": "sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "image": "us.icr.io/armada-master/remoteresources3@sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "name": "rhm_rrs3_deployment"
        },
        {
          "digest": "sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "image": "registry.redhat.io/openshift4/ose-prometheus-operator@sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "name": "prometheus_operator"
        },
        {
          "digest": "sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "image": "registry.redhat.io/openshift4/ose-prometheus@sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "name": "prometheus"
        },
        {
          "digest": "sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "image": "registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "name": "prometheus_configmap_reloader"
        },
        {
          "digest": "sha256:093f3a006c0d73bcf3d5e1ac78f684734b87c08147b1ac57e6a609f34eddc9c8",
          "image": "quay.io/rh-marketplace/redhat-marketplace-data-service@sha256:093f3a006c0d73bcf3d5e1ac78f684734b87c08147b1ac57e6a609f34eddc9c8",
          "name": "dqlite"
        },
        {
          "digest": "sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "image": "registry.redhat.io/openshift4/ose-configmap-reloader@sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "name": "configmap_reloader"
        },
        {
          "digest": "sha256:5c8e285a28ac89c2567940e74448da4586c4493151cac54fbc30281c6cc097cb",
          "image": "quay.io/rh-marketplace/redhat-marketplace-reporter@sha256:5c8e285a28ac89c2567940e74448da4586c4493151cac54fbc30281c6cc097cb",
          "name": "reporter"
        },
        {
          "digest": "sha256:4d2fa73d4f4577b1560e07d0692492374a4bb8b6bb6b9261fa88effff5e44db3",
          "image": "quay.io/rh-marketplace/redhat-marketplace-metric-state@sha256:4d2fa73d4f4577b1560e07d0692492374a4bb8b6bb6b9261fa88effff5e44db3",
          "name": "metric_state"
        },
        {
          "digest": "sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "name": "manager"
        },
        {
          "digest": "sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "name": "redhat-marketplace-operator-fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <2.8.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.8.0",
      "version_original": "2.8.0"
    },
    {
      "_id": "62fab5be4eed1a4804134510",
      "alm_examples": [
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MarketplaceConfig",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "marketplaceconfig",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "",
            "features": {
              "deployment": true,
              "meterDefinitionCatalogServer": false,
              "registration": true
            },
            "installIBMCatalogSource": true,
            "isDisconnected": false,
            "rhmAccountID": ""
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterBase",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterbase",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "enabled": true,
            "prometheus": {
              "resources": {
                "limits": {
                  "cpu": "2",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1",
                  "memory": "1G"
                }
              },
              "storage": {
                "size": "20Gi"
              }
            }
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "MeterReport",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterreport",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "endTime": "2020-08-05T00:00:00Z",
            "prometheusService": {
              "name": "rhm-prometheus-meterbase",
              "namespace": "openshift-redhat-marketplace",
              "targetPort": "rbac"
            },
            "startTime": "2020-08-04T00:00:00Z"
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RazeeDeployment",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "razeedeployment-example",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "clusterUUID": "example-cluster-uuid",
            "enabled": true
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1alpha1",
          "kind": "RemoteResourceS3",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-remoteresources3",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "auth": {
              "iam": {
                "apiKeyRef": {
                  "valueFrom": {
                    "secretKeyRef": {
                      "key": "accesskey",
                      "name": "rhm-cos-reader-key"
                    }
                  }
                },
                "grantType": "urn:ibm:params:oauth:grant-type:apikey",
                "responseType": "cloud_iam",
                "url": "https://iam.cloud.ibm.com/identity/token"
              }
            },
            "requests": [
              {
                "options": {
                  "url": "https://s3.us-east.cloud-object-storage.appdomain.cloud/your-accountId/your-cluster-uuid/name-of-child.yaml"
                }
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "example-meterdefinition-4",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        },
        {
          "api_version": "marketplace.redhat.com/v1beta1",
          "kind": "MeterDefinition",
          "metadata": {
            "labels": {
              "redhat.marketplace.com/name": "redhat-marketplace-operator"
            },
            "name": "meterdefinition-sample",
            "namespace": "openshift-redhat-marketplace"
          },
          "spec": {
            "group": "partner.metering.com",
            "kind": "App",
            "meters": [
              {
                "aggregation": "sum",
                "metricId": "container_cpu_usage_core_avg",
                "period": "1h",
                "query": "rate(container_cpu_usage_seconds_total{cpu=\"total\",container=\"db\"}[5m])*100",
                "workloadType": "Pod"
              }
            ],
            "resourceFilters": [
              {
                "namespace": {
                  "useOperatorGroup": true
                },
                "ownerCRD": {
                  "apiVersion": "marketplace.redhat.com/v1alpha1",
                  "kind": "RazeeDeployment"
                },
                "workloadType": "Pod"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:56e0c99e209b81a9aec1438f080a180dd6c0c617bf1df19cdbd9dbe685a27bb2",
      "bundle_path_digest": "sha256:56e0c99e209b81a9aec1438f080a180dd6c0c617bf1df19cdbd9dbe685a27bb2",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-15T21:08:14.485000+00:00",
      "csv_description": "The Red Hat Marketplace Operator provides cluster management, metering and\noperator installation for Red Hat Marketplace customers.\n### **Important Note**\nA set of instructions for onboarding is provided here. For more detailed onboarding instructions or information about what is installed please visit [marketplace.redhat.com](https://marketplace.redhat.com).\nTo access images from Red Hat Marketplace and the Marketplace container catalog you will need to make the pull secret attained in installation available to the workloads running on the cluster.\n### Prerequisites\n1. It is recommended to [enable monitoring for user-defined projects](https://docs.openshift.com/container-platform/4.10/monitoring/enabling-monitoring-for-user-defined-projects.html) as the Prometheus provider.\n2. Edit the cluster-monitoring-config ConfigMap object:\n  \n   ```sh\n   $ oc -n openshift-monitoring edit configmap cluster-monitoring-config\n   ```\n\n3. Add enableUserWorkload: true under data/config.yaml:\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: cluster-monitoring-config\n      namespace: openshift-monitoring\n    data:\n      config.yaml: |\n        enableUserWorkload: true\n    ```\n\n4. Configure the user-workload-monitoring-config ConfigMap object:\n  \n    ```sh\n    $ oc -n openshift-user-workload-monitoring edit configmap user-workload-monitoring-config\n    ```\n\n5. Configure a minimum retention time of 168h and minimum storage capacity of 40Gi\n  \n    ```sh\n    apiVersion: v1\n    kind: ConfigMap\n    metadata:\n      name: user-workload-monitoring-config\n      namespace: openshift-user-workload-monitoring\n    data:\n      config.yaml: |\n        prometheus:\n          retention: 168h\n          volumeClaimTemplate:\n            spec:\n              resources:\n                requests:\n                  storage: 40Gi\n    ```\n\n### Installation\n1. Create or get your pull secret from [Red Hat Marketplace](https://marketplace.redhat.com/en-us/documentation/clusters#get-pull-secret).\n2. Install the Red Hat Marketplace Operator in the openshift-redhat-marketplace namespace.\n3. Create a Kubernetes secret in the openshift-redhat-marketplace namespace with the name `redhat-marketplace-pull-secret` and key `PULL_SECRET` with the value of the Red hat Marketplace Pull Secret.\n\n   ```sh\n   # Replace ${PULL_SECRET} with your secret from Red Hat Marketplace\n   oc create secret generic redhat-marketplace-pull-secret -n  openshift-redhat-marketplace --from-literal=PULL_SECRET=${PULL_SECRET}\n   ```\n\n4. Install the Red Hat Marketplace pull secret as a global pull secret on the cluster.\n   **Warning:** This step will make your cluster perform a rolling restart.\n   These steps require `oc`, `jq`, and `base64` to be available on your machine.\n\n   ```sh\n   # Create the docker pull secret file using your PULL_SECRET from Red Hat Marketplace.\n   # Store it in a file called entitledregistryconfigjson.\n   oc create secret docker-registry entitled-registry --docker-server=registry.marketplace.redhat.com --docker-username \"cp\" --docker-password \"${PULL_SECRET}\" --dry-run=true --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > entitledregistryconfigjson\n   # Get the current global secrets on the cluster and store it as a file named dockerconfigjson\n   oc get secret pull-secret -n openshift-config --output=\"jsonpath={.data.\\.dockerconfigjson}\" | base64 --decode > dockerconfigjson\n   # Merge the two dockerconfigs together into a file called dockerconfigjson-merged.\n   jq -s '.[0] * .[1]' dockerconfigjson entitledregistryconfigjson > dockerconfigjson-merged\n   # Set the cluster's dockerconfig file to the new merged version.\n   oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=dockerconfigjson-merged\n   # Cluster will now restart.\n   ```\n\n### Why is a global pull secret required?\nIn order to successfully install the Red Hat Marketplace products, you will need to make the pull secret available across the cluster. This can be achieved by applying the Red Hat Marketplace Pull Secret as a [global pull secret](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).\nFor alternative approachs, please see the official OpenShift [documentation](https://docs.openshift.com/container-platform/4.6/openshift_images/managing_images/using-image-pull-secrets.html).\n### Documentation\nYou can find our documentation [here.](https://marketplace.redhat.com/en-us/documentation/)\n### Getting help\nIf you encounter any issues while using Red Hat Marketplace operator, you\ncan create an issue on our [Github\nrepo](https://github.com/redhat-marketplace/redhat-marketplace-operator) for\nbugs, enhancements, or other requests. You can also visit our main page and\nreview our [support](https://marketplace.redhat.com/en-us/support) and [documentation](https://marketplace.redhat.com/en-us/documentation/).\n### Readme\nYou can find our readme [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/README.md)\n### License information\nYou can find our license information [here.](https://github.com/redhat-marketplace/redhat-marketplace-operator/blob/develop/LICENSE)\n",
      "csv_display_name": "Red Hat Marketplace",
      "csv_metadata_description": "The Red Hat Marketplace Operator provides cluster management, metering and operator installation for Red Hat Marketplace customers.",
      "csv_name": "redhat-marketplace-operator.v2.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T21:08:14.485000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterReport",
          "plural": "meterreports",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RazeeDeployment",
          "plural": "razeedeployments",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "RemoteResourceS3",
          "plural": "remoteresources3s",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MarketplaceConfig",
          "plural": "marketplaceconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterBase",
          "plural": "meterbases",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1alpha1"
        },
        {
          "group": "marketplace.redhat.com",
          "kind": "MeterDefinition",
          "plural": "meterdefinitions",
          "version": "v1beta1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:07c3deef1552b6f1c659843b4b380233975fa3048dce1a58c006786022ffb710",
          "image": "quay.io/rh-marketplace/redhat-marketplace-authcheck@sha256:07c3deef1552b6f1c659843b4b380233975fa3048dce1a58c006786022ffb710",
          "name": "authcheck"
        },
        {
          "digest": "sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "image": "us.icr.io/armada-master/watch-keeper@sha256:9dd6a3999077d1830a6d0b3a7dfb7e744fc29ac9858df674472ee82c2e5b8ff4",
          "name": "rhm_watch_keeper_deployment"
        },
        {
          "digest": "sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "image": "us.icr.io/armada-master/remoteresources3@sha256:6e7a075b9ff8d3e2459dad46445758a2a3f6fc4887392645b4ca86fe5b1d0fb0",
          "name": "rhm_rrs3_deployment"
        },
        {
          "digest": "sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5ca572cb31f15534ee8b6fd20a026452870fb8be756f5fa9de9813bdb80969f4",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "image": "registry.redhat.io/openshift4/ose-prometheus-operator@sha256:18688ecd113373abff11958237d84983a624cd2cc763842ea1c01dd701a98656",
          "name": "prometheus_operator"
        },
        {
          "digest": "sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "image": "registry.redhat.io/openshift4/ose-prometheus@sha256:5da2b67402519d4498695097728b7ad4c1dfe69cd1ddf87cc0c74e7043212574",
          "name": "prometheus"
        },
        {
          "digest": "sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "image": "registry.redhat.io/openshift4/ose-prometheus-config-reloader@sha256:a4bb67ace1dd2992029ebfee6b08c439b1a363b2bf4059a10803d82f1bd089b6",
          "name": "prometheus_configmap_reloader"
        },
        {
          "digest": "sha256:093f3a006c0d73bcf3d5e1ac78f684734b87c08147b1ac57e6a609f34eddc9c8",
          "image": "quay.io/rh-marketplace/redhat-marketplace-data-service@sha256:093f3a006c0d73bcf3d5e1ac78f684734b87c08147b1ac57e6a609f34eddc9c8",
          "name": "dqlite"
        },
        {
          "digest": "sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:260ebab52c1e825e354bfa60827e314388fb7878bfa16d1dc061707962e95bea",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "image": "registry.redhat.io/openshift4/ose-configmap-reloader@sha256:9a15dca79b88a6e1e37617a5817ccac5df74b7ddef8fbae7da66685d90108c55",
          "name": "configmap_reloader"
        },
        {
          "digest": "sha256:5c8e285a28ac89c2567940e74448da4586c4493151cac54fbc30281c6cc097cb",
          "image": "quay.io/rh-marketplace/redhat-marketplace-reporter@sha256:5c8e285a28ac89c2567940e74448da4586c4493151cac54fbc30281c6cc097cb",
          "name": "reporter"
        },
        {
          "digest": "sha256:4d2fa73d4f4577b1560e07d0692492374a4bb8b6bb6b9261fa88effff5e44db3",
          "image": "quay.io/rh-marketplace/redhat-marketplace-metric-state@sha256:4d2fa73d4f4577b1560e07d0692492374a4bb8b6bb6b9261fa88effff5e44db3",
          "name": "metric_state"
        },
        {
          "digest": "sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "name": "manager"
        },
        {
          "digest": "sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "image": "quay.io/rh-marketplace/redhat-marketplace-operator@sha256:fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5",
          "name": "redhat-marketplace-operator-fcb7eed720b3b6c82b8455e77eec1b7c6ff314c0be018c61e244b6ae6a8f40f5-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <2.8.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.8.0",
      "version_original": "2.8.0"
    },
    {
      "_id": "62fb92b5b289bcc7af678727",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:d004705563fed62b029388172792b8e349dd17eee9af38698d12032aec3ba137",
      "bundle_path_digest": "sha256:d004705563fed62b029388172792b8e349dd17eee9af38698d12032aec3ba137",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-16T12:51:01.977000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-16T12:51:01.977000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "name": "cloud-native-postgresql-dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468-annotation"
        },
        {
          "digest": "sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.15.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.15.3",
      "version_original": "1.15.3"
    },
    {
      "_id": "62fb92b6b289bcc7af678729",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:d004705563fed62b029388172792b8e349dd17eee9af38698d12032aec3ba137",
      "bundle_path_digest": "sha256:d004705563fed62b029388172792b8e349dd17eee9af38698d12032aec3ba137",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.15",
      "creation_date": "2022-08-16T12:51:02.520000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-16T12:51:02.520000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "name": "cloud-native-postgresql-dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468-annotation"
        },
        {
          "digest": "sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.15.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.15.3",
      "version_original": "1.15.3"
    },
    {
      "_id": "62fb932cbb3b9bafa1352693",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:d004705563fed62b029388172792b8e349dd17eee9af38698d12032aec3ba137",
      "bundle_path_digest": "sha256:d004705563fed62b029388172792b8e349dd17eee9af38698d12032aec3ba137",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.15",
      "creation_date": "2022-08-16T12:53:00.684000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-16T12:53:00.684000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "name": "cloud-native-postgresql-dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468-annotation"
        },
        {
          "digest": "sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.15.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.15.3",
      "version_original": "1.15.3"
    },
    {
      "_id": "62fb932ebb3b9bafa1352696",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:d004705563fed62b029388172792b8e349dd17eee9af38698d12032aec3ba137",
      "bundle_path_digest": "sha256:d004705563fed62b029388172792b8e349dd17eee9af38698d12032aec3ba137",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-16T12:53:02.531000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-16T12:53:02.531000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "name": "cloud-native-postgresql-dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468-annotation"
        },
        {
          "digest": "sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.15.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.15.3",
      "version_original": "1.15.3"
    },
    {
      "_id": "62fb9382bb3b9bafa13526f9",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:d004705563fed62b029388172792b8e349dd17eee9af38698d12032aec3ba137",
      "bundle_path_digest": "sha256:d004705563fed62b029388172792b8e349dd17eee9af38698d12032aec3ba137",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.15",
      "creation_date": "2022-08-16T12:54:26.964000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-16T12:54:26.964000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "name": "cloud-native-postgresql-dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468-annotation"
        },
        {
          "digest": "sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.15.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.15.3",
      "version_original": "1.15.3"
    },
    {
      "_id": "62fb9384bb3b9bafa13526fb",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:d004705563fed62b029388172792b8e349dd17eee9af38698d12032aec3ba137",
      "bundle_path_digest": "sha256:d004705563fed62b029388172792b8e349dd17eee9af38698d12032aec3ba137",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-16T12:54:28.109000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-16T12:54:28.109000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "name": "cloud-native-postgresql-dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468-annotation"
        },
        {
          "digest": "sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.15.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.15.3",
      "version_original": "1.15.3"
    },
    {
      "_id": "62fb9482b289bcc7af678910",
      "alm_examples": [
        {
          "api_version": "pg.percona.com/v1",
          "kind": "PerconaPGCluster",
          "metadata": {
            "labels": {
              "pgo-version": "1.3.0"
            },
            "name": "cluster1"
          },
          "spec": {
            "backup": {
              "backrestRepoImage": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
              "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
              "resources": {
                "requests": {
                  "cpu": "200m",
                  "memory": "48Mi"
                }
              },
              "schedule": [
                {
                  "keep": 3,
                  "name": "sat-night-backup",
                  "schedule": "0 0 * * 6",
                  "storage": "local",
                  "type": "full"
                }
              ],
              "volumeSpec": {
                "accessmode": "ReadWriteOnce",
                "size": "1G",
                "storageclass": "",
                "storagetype": "dynamic"
              }
            },
            "database": "pgdb",
            "disableAutofail": false,
            "keepBackups": true,
            "keepData": true,
            "pause": false,
            "pgBadger": {
              "enabled": false,
              "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
              "port": 10000
            },
            "pgBouncer": {
              "expose": {
                "serviceType": "ClusterIP"
              },
              "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
              "resources": {
                "requests": {
                  "cpu": "1",
                  "memory": "128Mi"
                }
              },
              "size": 3
            },
            "pgPrimary": {
              "expose": {
                "serviceType": "ClusterIP"
              },
              "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
              "resources": {
                "requests": {
                  "cpu": "500m",
                  "memory": "256Mi"
                }
              },
              "tolerations": [],
              "volumeSpec": {
                "accessmode": "ReadWriteOnce",
                "size": "1G",
                "storageclass": "",
                "storagetype": "dynamic"
              }
            },
            "pgReplicas": {
              "hotStandby": {
                "enableSyncStandby": false,
                "expose": {
                  "serviceType": "ClusterIP"
                },
                "resources": {
                  "requests": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  }
                },
                "size": 2,
                "volumeSpec": {
                  "accessmode": "ReadWriteOnce",
                  "size": "1G",
                  "storageclass": "",
                  "storagetype": "dynamic"
                }
              }
            },
            "pmm": {
              "enabled": false,
              "image": "percona/pmm-client:2.29.1",
              "pmmSecret": "cluster1-pmm-secret",
              "resources": {
                "requests": {
                  "cpu": "500m",
                  "memory": "200M"
                }
              },
              "serverHost": "monitoring-service",
              "serverUser": "admin"
            },
            "port": "5432",
            "standby": false,
            "tlsOnly": false,
            "upgradeOptions": {
              "apply": "disabled",
              "schedule": "0 4 * * *",
              "versionServiceEndpoint": "https://check.percona.com"
            },
            "user": "pguser"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/percona/percona-postgresql-operator-bundle@sha256:7995df96b3a7a033321d46097387922a70c011746082d0967fa9cfe8ce75a43d",
      "bundle_path_digest": "sha256:7995df96b3a7a033321d46097387922a70c011746082d0967fa9cfe8ce75a43d",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-16T12:58:42.680000+00:00",
      "csv_description": "\n## Percona is Cloud Native\n\nPercona Operator for PostgreSQL automates and simplifies deploying and managing open source PostgreSQL clusters on Kubernetes. Percona Operator for PostgreSQL is based on Postgres Operator developed by Crunchy Data.\nWhether you need to get a simple PostgreSQL cluster up and running, need to deploy a high availability, fault tolerant cluster in production, or are running your own database-as-a-service, the Operator provides the essential features you need to keep your clusters healthy.\n\nConsult the [documentation](https://www.percona.com/doc/kubernetes-operator-for-postgresql/index.html) on the Percona Operator for PostgreSQL for complete details on capabilities and options.\n\n### Supported Features\n\n* **PostgreSQL Cluster Provisioning**\nCreate, Scale, & Delete PostgreSQL clusters with ease, while fully customizing your Pods and PostgreSQL configuration.\n* **High Availability**\n\n    Safe, automated failover backed by a distributed consensus based high-availability solution. Uses Pod Anti-Affinity to help resiliency; you can configure how much\n    enforced this can be. Failed primaries automatically heal, allowing for faster recovery time. Support for standby PostgreSQL clusters that work both within and\n    across multiple Kubernetes clusters.\n\n* **Disaster Recovery**\n\n    Backups and restores leverage the open source pgBackRest utility and includes support for full, incremental, and differential backups as well as efficient delta\n    restores. Set how long you want your backups retained for. Works great with very large databases!\n\n* **Communication Security**\n\n    Secure communication between your applications and data servers by enabling TLS for your PostgreSQL servers, including the ability to enforce all of your connections\n    to use TLS.\n\n* **Monitoring**\n\n    Track the health of your PostgreSQL clusters with Percona Monitoring and Management (PMM).\n\n* **PostgreSQL User Management**\n\n    Quickly add and remove users from your PostgreSQL clusters with powerful commands. Manage password expiration policies or use your preferred PostgreSQL authentication\n    scheme.\n\n* **Updates Management**\n\n    Safely apply PostgreSQL updates with minimal availability impact to your PostgreSQL clusters.\n\n* **Advanced Replication Support**\n\n    Choose between asynchronous replication and synchronous replication for workloads that are sensitive to losing transactions.\n\n* **Clone**\n\n    Create new clusters from your existing clusters or backups.\n\n* **Connection Pooling**\n\n    Use [pgBouncer](https://access.crunchydata.com/documentation/postgres-operator/latest/tutorial/pgbouncer/) for connection pooling\n\n* **Affinity and Tolerations**\n\n    Have your PostgreSQL clusters deployed to Kubernetes Nodes of your preference with node affinity, or designate which nodes Kubernetes can schedule PostgreSQL instances\n    to with Kubernetes  tolerations.\n\n* **Scheduled Backups**\n\n    Choose the type of backup (full, incremental, differential) and how frequently you want it to occur on each PostgreSQL cluster.\n\n* **Backup to S3**\n\n    Store your backups in Amazon S3 or any object storage system that supports the S3 protocol. The Operator can backup, restore, and create new clusters from these backups.\n\n* **Multi-Namespace Support**\n\n    You can control how the Operator leverages Kubernetes Namespaces with several different deployment models:\n\n    * Deploy the Operator and all PostgreSQL clusters to the same namespace\n    * Deploy the Operator to one Namespace, and all PostgreSQL clusters to a different Namespace\n    * Deploy the Operator to one Namespace, and have your PostgreSQL clusters managed across multiple Namespaces\n\n* **Full Customizability**\n\n    The Operator not only makes it easy to get PostgreSQL up and running on Kubernetes-enabled platforms, but also allows you to further customize your deployments:\n\n    * Selecting different storage classes for your primary, replica, and backup storage\n    * Select your own container resources class for each PostgreSQL cluster deployment; differentiate between resources applied for primary and replica clusters\n    * Use your own container image repository, including `imagePullSecrets` and private repositories  support\n    * Customize your PostgreSQL configuration\n    * Bring your own trusted certificate authority (CA) for use with the Operator API server\n    * Override your PostgreSQL configuration for each cluster\n    * Use your own custom images, re-define the image for each container separately\n\n### Release highlights\n* **What's new**\n\n    * The automated upgrade is now disabled by default to prevent an unplanned downtimes for user applications and to provide defaults more focused on strict user\u2019s control over the cluster\n    * Flexible anti-affinity configuration is now available, which allows the Operator to isolate PostgreSQL cluster instances on different Kubernetes nodes or to increase its availability by placing\nPostgreSQL instances in different availability zones\n    * Add possibility for postgres user to connect to PostgreSQL through PgBouncer with a new pgBouncer.exposePostgresUser Custom Resource option\n    * A new build and testing guide allows user to easily experiment with the source code of the Operator\n    * Fix the bug in the instruction on passing custom configuration options for PostgreSQL which made it usable for the new cluster only\n    * Fix the bug which caused the Operator crash without pgReplicas section in Custom Resource definition\n    * Fix the bug which caused the Operator to make connection requests to Version Service even with disabled Smart Update\n    * Fix the bug due to which restoring S3 backup from storage with self-signed certificates didn\u2019t work, by introducing the special backup.storages.verifyTLS option to address this issue\n",
      "csv_display_name": "Percona Operator for PostgreSQL",
      "csv_metadata_description": "Percona Operator for PostgreSQL manages the lifecycle of Percona PostgreSQL cluster instances.",
      "csv_name": "percona-postgresql-operator-certified.v1.3.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-16T12:58:42.680000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "percona-postgresql-operator-certified",
      "provided_apis": [
        {
          "group": "pg.percona.com",
          "kind": "PerconaPGCluster",
          "plural": "perconapgclusters",
          "version": "v1"
        },
        {
          "group": "pg.percona.com",
          "kind": "Pgcluster",
          "plural": "pgclusters",
          "version": "v1"
        },
        {
          "group": "pg.percona.com",
          "kind": "Pgpolicy",
          "plural": "pgpolicies",
          "version": "v1"
        },
        {
          "group": "pg.percona.com",
          "kind": "Pgreplica",
          "plural": "pgreplicas",
          "version": "v1"
        },
        {
          "group": "pg.percona.com",
          "kind": "Pgtask",
          "plural": "pgtasks",
          "version": "v1"
        }
      ],
      "provider": "Percona",
      "related_images": [
        {
          "digest": "sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
          "name": "pgbackrest"
        },
        {
          "digest": "sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
          "name": "pgbackrest-repo"
        },
        {
          "digest": "sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
          "name": "pgbadger"
        },
        {
          "digest": "sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
          "name": "postgres-ha"
        },
        {
          "digest": "sha256:3c7688d4ad7bbfda10a773862b58a070f6eb11106a003fd909081ed51edd520d",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:3c7688d4ad7bbfda10a773862b58a070f6eb11106a003fd909081ed51edd520d",
          "name": "rmdata"
        },
        {
          "digest": "sha256:c997d3b902bd95185252ae6727bca1fef5424ff1d8c6c716e2f419b88946716a",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:c997d3b902bd95185252ae6727bca1fef5424ff1d8c6c716e2f419b88946716a",
          "name": "percona-postgresql-operator-c997d3b902bd95185252ae6727bca1fef5424ff1d8c6c716e2f419b88946716a-annotation"
        },
        {
          "digest": "sha256:362eb3c33eaa99ab39fdf42962a38f2818253e1841aa55f656a16bcb79ac5489",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:362eb3c33eaa99ab39fdf42962a38f2818253e1841aa55f656a16bcb79ac5489",
          "name": "apiserver"
        },
        {
          "digest": "sha256:c997d3b902bd95185252ae6727bca1fef5424ff1d8c6c716e2f419b88946716a",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:c997d3b902bd95185252ae6727bca1fef5424ff1d8c6c716e2f419b88946716a",
          "name": "operator"
        },
        {
          "digest": "sha256:5e6a484f7a559e90e79aa7a034bdcf9415848015c08d244b176de17d47deeb12",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:5e6a484f7a559e90e79aa7a034bdcf9415848015c08d244b176de17d47deeb12",
          "name": "scheduler"
        },
        {
          "digest": "sha256:8089fb1d73bf16757a28d94b1c08649556457d5f61cdfdc33bd75cea1147f012",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:8089fb1d73bf16757a28d94b1c08649556457d5f61cdfdc33bd75cea1147f012",
          "name": "event"
        },
        {
          "digest": "sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
          "name": "pgo_backrest"
        },
        {
          "digest": "sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
          "name": "pgo_backrest_repo"
        },
        {
          "digest": "sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
          "name": "crunchy_pgbadger"
        },
        {
          "digest": "sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
          "name": "crunchy_pgbouncer"
        },
        {
          "digest": "sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
          "name": "crunchy_postgres_ha"
        },
        {
          "digest": "sha256:3c7688d4ad7bbfda10a773862b58a070f6eb11106a003fd909081ed51edd520d",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:3c7688d4ad7bbfda10a773862b58a070f6eb11106a003fd909081ed51edd520d",
          "name": "pgo_rmdata"
        },
        {
          "digest": "sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
          "name": "percona-postgresql-operator-containers-b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1-annotation"
        },
        {
          "digest": "sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
          "name": "percona-postgresql-operator-containers-0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74-annotation"
        },
        {
          "digest": "sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
          "name": "percona-postgresql-operator-containers-0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a-annotation"
        },
        {
          "digest": "sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
          "name": "percona-postgresql-operator-containers-8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee-annotation"
        },
        {
          "digest": "sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
          "name": "percona-postgresql-operator-containers-65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.3.0",
      "version_original": "1.3.0"
    },
    {
      "_id": "62fb948ee07d71e4beb72c80",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:d004705563fed62b029388172792b8e349dd17eee9af38698d12032aec3ba137",
      "bundle_path_digest": "sha256:d004705563fed62b029388172792b8e349dd17eee9af38698d12032aec3ba137",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-16T12:58:54.085000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-16T12:58:54.085000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "name": "cloud-native-postgresql-dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468-annotation"
        },
        {
          "digest": "sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.15.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.15.3",
      "version_original": "1.15.3"
    },
    {
      "_id": "62fb948e54966df4ef126c18",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:d004705563fed62b029388172792b8e349dd17eee9af38698d12032aec3ba137",
      "bundle_path_digest": "sha256:d004705563fed62b029388172792b8e349dd17eee9af38698d12032aec3ba137",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.15",
      "creation_date": "2022-08-16T12:58:54.664000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-16T12:58:54.664000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "name": "cloud-native-postgresql-dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468-annotation"
        },
        {
          "digest": "sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.15.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.15.3",
      "version_original": "1.15.3"
    },
    {
      "_id": "62fb970bb289bcc7af67898d",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:d004705563fed62b029388172792b8e349dd17eee9af38698d12032aec3ba137",
      "bundle_path_digest": "sha256:d004705563fed62b029388172792b8e349dd17eee9af38698d12032aec3ba137",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-16T13:09:31.243000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-16T13:09:31.243000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "name": "cloud-native-postgresql-dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468-annotation"
        },
        {
          "digest": "sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.15.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.15.3",
      "version_original": "1.15.3"
    },
    {
      "_id": "62fb970ce07d71e4beb72d09",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:d004705563fed62b029388172792b8e349dd17eee9af38698d12032aec3ba137",
      "bundle_path_digest": "sha256:d004705563fed62b029388172792b8e349dd17eee9af38698d12032aec3ba137",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.15",
      "creation_date": "2022-08-16T13:09:32.304000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-16T13:09:32.304000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "name": "cloud-native-postgresql-dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468-annotation"
        },
        {
          "digest": "sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:dcab0da73a06c939cc402adf8657f0729d8a3b500dd5586c317f2038a4157468",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.15.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.15.3",
      "version_original": "1.15.3"
    },
    {
      "_id": "62fb9784b289bcc7af678a07",
      "alm_examples": [
        {
          "api_version": "pg.percona.com/v1",
          "kind": "PerconaPGCluster",
          "metadata": {
            "labels": {
              "pgo-version": "1.3.0"
            },
            "name": "cluster1"
          },
          "spec": {
            "backup": {
              "backrestRepoImage": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
              "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
              "resources": {
                "requests": {
                  "cpu": "200m",
                  "memory": "48Mi"
                }
              },
              "schedule": [
                {
                  "keep": 3,
                  "name": "sat-night-backup",
                  "schedule": "0 0 * * 6",
                  "storage": "local",
                  "type": "full"
                }
              ],
              "volumeSpec": {
                "accessmode": "ReadWriteOnce",
                "size": "1G",
                "storageclass": "",
                "storagetype": "dynamic"
              }
            },
            "database": "pgdb",
            "disableAutofail": false,
            "keepBackups": true,
            "keepData": true,
            "pause": false,
            "pgBadger": {
              "enabled": false,
              "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
              "port": 10000
            },
            "pgBouncer": {
              "expose": {
                "serviceType": "ClusterIP"
              },
              "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
              "resources": {
                "requests": {
                  "cpu": "1",
                  "memory": "128Mi"
                }
              },
              "size": 3
            },
            "pgPrimary": {
              "expose": {
                "serviceType": "ClusterIP"
              },
              "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
              "resources": {
                "requests": {
                  "cpu": "500m",
                  "memory": "256Mi"
                }
              },
              "tolerations": [],
              "volumeSpec": {
                "accessmode": "ReadWriteOnce",
                "size": "1G",
                "storageclass": "",
                "storagetype": "dynamic"
              }
            },
            "pgReplicas": {
              "hotStandby": {
                "enableSyncStandby": false,
                "expose": {
                  "serviceType": "ClusterIP"
                },
                "resources": {
                  "requests": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  }
                },
                "size": 2,
                "volumeSpec": {
                  "accessmode": "ReadWriteOnce",
                  "size": "1G",
                  "storageclass": "",
                  "storagetype": "dynamic"
                }
              }
            },
            "pmm": {
              "enabled": false,
              "image": "percona/pmm-client:2.29.1",
              "pmmSecret": "cluster1-pmm-secret",
              "resources": {
                "requests": {
                  "cpu": "500m",
                  "memory": "200M"
                }
              },
              "serverHost": "monitoring-service",
              "serverUser": "admin"
            },
            "port": "5432",
            "standby": false,
            "tlsOnly": false,
            "upgradeOptions": {
              "apply": "disabled",
              "schedule": "0 4 * * *",
              "versionServiceEndpoint": "https://check.percona.com"
            },
            "user": "pguser"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/percona/percona-postgresql-operator-bundle@sha256:7995df96b3a7a033321d46097387922a70c011746082d0967fa9cfe8ce75a43d",
      "bundle_path_digest": "sha256:7995df96b3a7a033321d46097387922a70c011746082d0967fa9cfe8ce75a43d",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-16T13:11:32.679000+00:00",
      "csv_description": "\n## Percona is Cloud Native\n\nPercona Operator for PostgreSQL automates and simplifies deploying and managing open source PostgreSQL clusters on Kubernetes. Percona Operator for PostgreSQL is based on Postgres Operator developed by Crunchy Data.\nWhether you need to get a simple PostgreSQL cluster up and running, need to deploy a high availability, fault tolerant cluster in production, or are running your own database-as-a-service, the Operator provides the essential features you need to keep your clusters healthy.\n\nConsult the [documentation](https://www.percona.com/doc/kubernetes-operator-for-postgresql/index.html) on the Percona Operator for PostgreSQL for complete details on capabilities and options.\n\n### Supported Features\n\n* **PostgreSQL Cluster Provisioning**\nCreate, Scale, & Delete PostgreSQL clusters with ease, while fully customizing your Pods and PostgreSQL configuration.\n* **High Availability**\n\n    Safe, automated failover backed by a distributed consensus based high-availability solution. Uses Pod Anti-Affinity to help resiliency; you can configure how much\n    enforced this can be. Failed primaries automatically heal, allowing for faster recovery time. Support for standby PostgreSQL clusters that work both within and\n    across multiple Kubernetes clusters.\n\n* **Disaster Recovery**\n\n    Backups and restores leverage the open source pgBackRest utility and includes support for full, incremental, and differential backups as well as efficient delta\n    restores. Set how long you want your backups retained for. Works great with very large databases!\n\n* **Communication Security**\n\n    Secure communication between your applications and data servers by enabling TLS for your PostgreSQL servers, including the ability to enforce all of your connections\n    to use TLS.\n\n* **Monitoring**\n\n    Track the health of your PostgreSQL clusters with Percona Monitoring and Management (PMM).\n\n* **PostgreSQL User Management**\n\n    Quickly add and remove users from your PostgreSQL clusters with powerful commands. Manage password expiration policies or use your preferred PostgreSQL authentication\n    scheme.\n\n* **Updates Management**\n\n    Safely apply PostgreSQL updates with minimal availability impact to your PostgreSQL clusters.\n\n* **Advanced Replication Support**\n\n    Choose between asynchronous replication and synchronous replication for workloads that are sensitive to losing transactions.\n\n* **Clone**\n\n    Create new clusters from your existing clusters or backups.\n\n* **Connection Pooling**\n\n    Use [pgBouncer](https://access.crunchydata.com/documentation/postgres-operator/latest/tutorial/pgbouncer/) for connection pooling\n\n* **Affinity and Tolerations**\n\n    Have your PostgreSQL clusters deployed to Kubernetes Nodes of your preference with node affinity, or designate which nodes Kubernetes can schedule PostgreSQL instances\n    to with Kubernetes  tolerations.\n\n* **Scheduled Backups**\n\n    Choose the type of backup (full, incremental, differential) and how frequently you want it to occur on each PostgreSQL cluster.\n\n* **Backup to S3**\n\n    Store your backups in Amazon S3 or any object storage system that supports the S3 protocol. The Operator can backup, restore, and create new clusters from these backups.\n\n* **Multi-Namespace Support**\n\n    You can control how the Operator leverages Kubernetes Namespaces with several different deployment models:\n\n    * Deploy the Operator and all PostgreSQL clusters to the same namespace\n    * Deploy the Operator to one Namespace, and all PostgreSQL clusters to a different Namespace\n    * Deploy the Operator to one Namespace, and have your PostgreSQL clusters managed across multiple Namespaces\n\n* **Full Customizability**\n\n    The Operator not only makes it easy to get PostgreSQL up and running on Kubernetes-enabled platforms, but also allows you to further customize your deployments:\n\n    * Selecting different storage classes for your primary, replica, and backup storage\n    * Select your own container resources class for each PostgreSQL cluster deployment; differentiate between resources applied for primary and replica clusters\n    * Use your own container image repository, including `imagePullSecrets` and private repositories  support\n    * Customize your PostgreSQL configuration\n    * Bring your own trusted certificate authority (CA) for use with the Operator API server\n    * Override your PostgreSQL configuration for each cluster\n    * Use your own custom images, re-define the image for each container separately\n\n### Release highlights\n* **What's new**\n\n    * The automated upgrade is now disabled by default to prevent an unplanned downtimes for user applications and to provide defaults more focused on strict user\u2019s control over the cluster\n    * Flexible anti-affinity configuration is now available, which allows the Operator to isolate PostgreSQL cluster instances on different Kubernetes nodes or to increase its availability by placing\nPostgreSQL instances in different availability zones\n    * Add possibility for postgres user to connect to PostgreSQL through PgBouncer with a new pgBouncer.exposePostgresUser Custom Resource option\n    * A new build and testing guide allows user to easily experiment with the source code of the Operator\n    * Fix the bug in the instruction on passing custom configuration options for PostgreSQL which made it usable for the new cluster only\n    * Fix the bug which caused the Operator crash without pgReplicas section in Custom Resource definition\n    * Fix the bug which caused the Operator to make connection requests to Version Service even with disabled Smart Update\n    * Fix the bug due to which restoring S3 backup from storage with self-signed certificates didn\u2019t work, by introducing the special backup.storages.verifyTLS option to address this issue\n",
      "csv_display_name": "Percona Operator for PostgreSQL",
      "csv_metadata_description": "Percona Operator for PostgreSQL manages the lifecycle of Percona PostgreSQL cluster instances.",
      "csv_name": "percona-postgresql-operator-certified.v1.3.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-16T13:11:32.679000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "percona-postgresql-operator-certified",
      "provided_apis": [
        {
          "group": "pg.percona.com",
          "kind": "Pgcluster",
          "plural": "pgclusters",
          "version": "v1"
        },
        {
          "group": "pg.percona.com",
          "kind": "Pgpolicy",
          "plural": "pgpolicies",
          "version": "v1"
        },
        {
          "group": "pg.percona.com",
          "kind": "Pgreplica",
          "plural": "pgreplicas",
          "version": "v1"
        },
        {
          "group": "pg.percona.com",
          "kind": "Pgtask",
          "plural": "pgtasks",
          "version": "v1"
        },
        {
          "group": "pg.percona.com",
          "kind": "PerconaPGCluster",
          "plural": "perconapgclusters",
          "version": "v1"
        }
      ],
      "provider": "Percona",
      "related_images": [
        {
          "digest": "sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
          "name": "pgbackrest"
        },
        {
          "digest": "sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
          "name": "pgbackrest-repo"
        },
        {
          "digest": "sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
          "name": "pgbadger"
        },
        {
          "digest": "sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
          "name": "postgres-ha"
        },
        {
          "digest": "sha256:3c7688d4ad7bbfda10a773862b58a070f6eb11106a003fd909081ed51edd520d",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:3c7688d4ad7bbfda10a773862b58a070f6eb11106a003fd909081ed51edd520d",
          "name": "rmdata"
        },
        {
          "digest": "sha256:c997d3b902bd95185252ae6727bca1fef5424ff1d8c6c716e2f419b88946716a",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:c997d3b902bd95185252ae6727bca1fef5424ff1d8c6c716e2f419b88946716a",
          "name": "percona-postgresql-operator-c997d3b902bd95185252ae6727bca1fef5424ff1d8c6c716e2f419b88946716a-annotation"
        },
        {
          "digest": "sha256:362eb3c33eaa99ab39fdf42962a38f2818253e1841aa55f656a16bcb79ac5489",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:362eb3c33eaa99ab39fdf42962a38f2818253e1841aa55f656a16bcb79ac5489",
          "name": "apiserver"
        },
        {
          "digest": "sha256:c997d3b902bd95185252ae6727bca1fef5424ff1d8c6c716e2f419b88946716a",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:c997d3b902bd95185252ae6727bca1fef5424ff1d8c6c716e2f419b88946716a",
          "name": "operator"
        },
        {
          "digest": "sha256:5e6a484f7a559e90e79aa7a034bdcf9415848015c08d244b176de17d47deeb12",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:5e6a484f7a559e90e79aa7a034bdcf9415848015c08d244b176de17d47deeb12",
          "name": "scheduler"
        },
        {
          "digest": "sha256:8089fb1d73bf16757a28d94b1c08649556457d5f61cdfdc33bd75cea1147f012",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:8089fb1d73bf16757a28d94b1c08649556457d5f61cdfdc33bd75cea1147f012",
          "name": "event"
        },
        {
          "digest": "sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
          "name": "pgo_backrest"
        },
        {
          "digest": "sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
          "name": "pgo_backrest_repo"
        },
        {
          "digest": "sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
          "name": "crunchy_pgbadger"
        },
        {
          "digest": "sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
          "name": "crunchy_pgbouncer"
        },
        {
          "digest": "sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
          "name": "crunchy_postgres_ha"
        },
        {
          "digest": "sha256:3c7688d4ad7bbfda10a773862b58a070f6eb11106a003fd909081ed51edd520d",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:3c7688d4ad7bbfda10a773862b58a070f6eb11106a003fd909081ed51edd520d",
          "name": "pgo_rmdata"
        },
        {
          "digest": "sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
          "name": "percona-postgresql-operator-containers-b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1-annotation"
        },
        {
          "digest": "sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
          "name": "percona-postgresql-operator-containers-0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74-annotation"
        },
        {
          "digest": "sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
          "name": "percona-postgresql-operator-containers-0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a-annotation"
        },
        {
          "digest": "sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
          "name": "percona-postgresql-operator-containers-8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee-annotation"
        },
        {
          "digest": "sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
          "name": "percona-postgresql-operator-containers-65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.3.0",
      "version_original": "1.3.0"
    },
    {
      "_id": "62fb9800bb3b9bafa1352828",
      "alm_examples": [
        {
          "api_version": "pg.percona.com/v1",
          "kind": "PerconaPGCluster",
          "metadata": {
            "labels": {
              "pgo-version": "1.3.0"
            },
            "name": "cluster1"
          },
          "spec": {
            "backup": {
              "backrestRepoImage": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
              "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
              "resources": {
                "requests": {
                  "cpu": "200m",
                  "memory": "48Mi"
                }
              },
              "schedule": [
                {
                  "keep": 3,
                  "name": "sat-night-backup",
                  "schedule": "0 0 * * 6",
                  "storage": "local",
                  "type": "full"
                }
              ],
              "volumeSpec": {
                "accessmode": "ReadWriteOnce",
                "size": "1G",
                "storageclass": "",
                "storagetype": "dynamic"
              }
            },
            "database": "pgdb",
            "disableAutofail": false,
            "keepBackups": true,
            "keepData": true,
            "pause": false,
            "pgBadger": {
              "enabled": false,
              "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
              "port": 10000
            },
            "pgBouncer": {
              "expose": {
                "serviceType": "ClusterIP"
              },
              "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
              "resources": {
                "requests": {
                  "cpu": "1",
                  "memory": "128Mi"
                }
              },
              "size": 3
            },
            "pgPrimary": {
              "expose": {
                "serviceType": "ClusterIP"
              },
              "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
              "resources": {
                "requests": {
                  "cpu": "500m",
                  "memory": "256Mi"
                }
              },
              "tolerations": [],
              "volumeSpec": {
                "accessmode": "ReadWriteOnce",
                "size": "1G",
                "storageclass": "",
                "storagetype": "dynamic"
              }
            },
            "pgReplicas": {
              "hotStandby": {
                "enableSyncStandby": false,
                "expose": {
                  "serviceType": "ClusterIP"
                },
                "resources": {
                  "requests": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  }
                },
                "size": 2,
                "volumeSpec": {
                  "accessmode": "ReadWriteOnce",
                  "size": "1G",
                  "storageclass": "",
                  "storagetype": "dynamic"
                }
              }
            },
            "pmm": {
              "enabled": false,
              "image": "percona/pmm-client:2.29.1",
              "pmmSecret": "cluster1-pmm-secret",
              "resources": {
                "requests": {
                  "cpu": "500m",
                  "memory": "200M"
                }
              },
              "serverHost": "monitoring-service",
              "serverUser": "admin"
            },
            "port": "5432",
            "standby": false,
            "tlsOnly": false,
            "upgradeOptions": {
              "apply": "disabled",
              "schedule": "0 4 * * *",
              "versionServiceEndpoint": "https://check.percona.com"
            },
            "user": "pguser"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/percona/percona-postgresql-operator-bundle@sha256:7995df96b3a7a033321d46097387922a70c011746082d0967fa9cfe8ce75a43d",
      "bundle_path_digest": "sha256:7995df96b3a7a033321d46097387922a70c011746082d0967fa9cfe8ce75a43d",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-16T13:13:36.080000+00:00",
      "csv_description": "\n## Percona is Cloud Native\n\nPercona Operator for PostgreSQL automates and simplifies deploying and managing open source PostgreSQL clusters on Kubernetes. Percona Operator for PostgreSQL is based on Postgres Operator developed by Crunchy Data.\nWhether you need to get a simple PostgreSQL cluster up and running, need to deploy a high availability, fault tolerant cluster in production, or are running your own database-as-a-service, the Operator provides the essential features you need to keep your clusters healthy.\n\nConsult the [documentation](https://www.percona.com/doc/kubernetes-operator-for-postgresql/index.html) on the Percona Operator for PostgreSQL for complete details on capabilities and options.\n\n### Supported Features\n\n* **PostgreSQL Cluster Provisioning**\nCreate, Scale, & Delete PostgreSQL clusters with ease, while fully customizing your Pods and PostgreSQL configuration.\n* **High Availability**\n\n    Safe, automated failover backed by a distributed consensus based high-availability solution. Uses Pod Anti-Affinity to help resiliency; you can configure how much\n    enforced this can be. Failed primaries automatically heal, allowing for faster recovery time. Support for standby PostgreSQL clusters that work both within and\n    across multiple Kubernetes clusters.\n\n* **Disaster Recovery**\n\n    Backups and restores leverage the open source pgBackRest utility and includes support for full, incremental, and differential backups as well as efficient delta\n    restores. Set how long you want your backups retained for. Works great with very large databases!\n\n* **Communication Security**\n\n    Secure communication between your applications and data servers by enabling TLS for your PostgreSQL servers, including the ability to enforce all of your connections\n    to use TLS.\n\n* **Monitoring**\n\n    Track the health of your PostgreSQL clusters with Percona Monitoring and Management (PMM).\n\n* **PostgreSQL User Management**\n\n    Quickly add and remove users from your PostgreSQL clusters with powerful commands. Manage password expiration policies or use your preferred PostgreSQL authentication\n    scheme.\n\n* **Updates Management**\n\n    Safely apply PostgreSQL updates with minimal availability impact to your PostgreSQL clusters.\n\n* **Advanced Replication Support**\n\n    Choose between asynchronous replication and synchronous replication for workloads that are sensitive to losing transactions.\n\n* **Clone**\n\n    Create new clusters from your existing clusters or backups.\n\n* **Connection Pooling**\n\n    Use [pgBouncer](https://access.crunchydata.com/documentation/postgres-operator/latest/tutorial/pgbouncer/) for connection pooling\n\n* **Affinity and Tolerations**\n\n    Have your PostgreSQL clusters deployed to Kubernetes Nodes of your preference with node affinity, or designate which nodes Kubernetes can schedule PostgreSQL instances\n    to with Kubernetes  tolerations.\n\n* **Scheduled Backups**\n\n    Choose the type of backup (full, incremental, differential) and how frequently you want it to occur on each PostgreSQL cluster.\n\n* **Backup to S3**\n\n    Store your backups in Amazon S3 or any object storage system that supports the S3 protocol. The Operator can backup, restore, and create new clusters from these backups.\n\n* **Multi-Namespace Support**\n\n    You can control how the Operator leverages Kubernetes Namespaces with several different deployment models:\n\n    * Deploy the Operator and all PostgreSQL clusters to the same namespace\n    * Deploy the Operator to one Namespace, and all PostgreSQL clusters to a different Namespace\n    * Deploy the Operator to one Namespace, and have your PostgreSQL clusters managed across multiple Namespaces\n\n* **Full Customizability**\n\n    The Operator not only makes it easy to get PostgreSQL up and running on Kubernetes-enabled platforms, but also allows you to further customize your deployments:\n\n    * Selecting different storage classes for your primary, replica, and backup storage\n    * Select your own container resources class for each PostgreSQL cluster deployment; differentiate between resources applied for primary and replica clusters\n    * Use your own container image repository, including `imagePullSecrets` and private repositories  support\n    * Customize your PostgreSQL configuration\n    * Bring your own trusted certificate authority (CA) for use with the Operator API server\n    * Override your PostgreSQL configuration for each cluster\n    * Use your own custom images, re-define the image for each container separately\n\n### Release highlights\n* **What's new**\n\n    * The automated upgrade is now disabled by default to prevent an unplanned downtimes for user applications and to provide defaults more focused on strict user\u2019s control over the cluster\n    * Flexible anti-affinity configuration is now available, which allows the Operator to isolate PostgreSQL cluster instances on different Kubernetes nodes or to increase its availability by placing\nPostgreSQL instances in different availability zones\n    * Add possibility for postgres user to connect to PostgreSQL through PgBouncer with a new pgBouncer.exposePostgresUser Custom Resource option\n    * A new build and testing guide allows user to easily experiment with the source code of the Operator\n    * Fix the bug in the instruction on passing custom configuration options for PostgreSQL which made it usable for the new cluster only\n    * Fix the bug which caused the Operator crash without pgReplicas section in Custom Resource definition\n    * Fix the bug which caused the Operator to make connection requests to Version Service even with disabled Smart Update\n    * Fix the bug due to which restoring S3 backup from storage with self-signed certificates didn\u2019t work, by introducing the special backup.storages.verifyTLS option to address this issue\n",
      "csv_display_name": "Percona Operator for PostgreSQL",
      "csv_metadata_description": "Percona Operator for PostgreSQL manages the lifecycle of Percona PostgreSQL cluster instances.",
      "csv_name": "percona-postgresql-operator-certified.v1.3.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-16T13:13:36.080000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "percona-postgresql-operator-certified",
      "provided_apis": [
        {
          "group": "pg.percona.com",
          "kind": "Pgtask",
          "plural": "pgtasks",
          "version": "v1"
        },
        {
          "group": "pg.percona.com",
          "kind": "PerconaPGCluster",
          "plural": "perconapgclusters",
          "version": "v1"
        },
        {
          "group": "pg.percona.com",
          "kind": "Pgcluster",
          "plural": "pgclusters",
          "version": "v1"
        },
        {
          "group": "pg.percona.com",
          "kind": "Pgpolicy",
          "plural": "pgpolicies",
          "version": "v1"
        },
        {
          "group": "pg.percona.com",
          "kind": "Pgreplica",
          "plural": "pgreplicas",
          "version": "v1"
        }
      ],
      "provider": "Percona",
      "related_images": [
        {
          "digest": "sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
          "name": "pgbackrest"
        },
        {
          "digest": "sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
          "name": "pgbackrest-repo"
        },
        {
          "digest": "sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
          "name": "pgbadger"
        },
        {
          "digest": "sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
          "name": "postgres-ha"
        },
        {
          "digest": "sha256:3c7688d4ad7bbfda10a773862b58a070f6eb11106a003fd909081ed51edd520d",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:3c7688d4ad7bbfda10a773862b58a070f6eb11106a003fd909081ed51edd520d",
          "name": "rmdata"
        },
        {
          "digest": "sha256:c997d3b902bd95185252ae6727bca1fef5424ff1d8c6c716e2f419b88946716a",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:c997d3b902bd95185252ae6727bca1fef5424ff1d8c6c716e2f419b88946716a",
          "name": "percona-postgresql-operator-c997d3b902bd95185252ae6727bca1fef5424ff1d8c6c716e2f419b88946716a-annotation"
        },
        {
          "digest": "sha256:362eb3c33eaa99ab39fdf42962a38f2818253e1841aa55f656a16bcb79ac5489",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:362eb3c33eaa99ab39fdf42962a38f2818253e1841aa55f656a16bcb79ac5489",
          "name": "apiserver"
        },
        {
          "digest": "sha256:c997d3b902bd95185252ae6727bca1fef5424ff1d8c6c716e2f419b88946716a",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:c997d3b902bd95185252ae6727bca1fef5424ff1d8c6c716e2f419b88946716a",
          "name": "operator"
        },
        {
          "digest": "sha256:5e6a484f7a559e90e79aa7a034bdcf9415848015c08d244b176de17d47deeb12",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:5e6a484f7a559e90e79aa7a034bdcf9415848015c08d244b176de17d47deeb12",
          "name": "scheduler"
        },
        {
          "digest": "sha256:8089fb1d73bf16757a28d94b1c08649556457d5f61cdfdc33bd75cea1147f012",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:8089fb1d73bf16757a28d94b1c08649556457d5f61cdfdc33bd75cea1147f012",
          "name": "event"
        },
        {
          "digest": "sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
          "name": "pgo_backrest"
        },
        {
          "digest": "sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
          "name": "pgo_backrest_repo"
        },
        {
          "digest": "sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
          "name": "crunchy_pgbadger"
        },
        {
          "digest": "sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
          "name": "crunchy_pgbouncer"
        },
        {
          "digest": "sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
          "name": "crunchy_postgres_ha"
        },
        {
          "digest": "sha256:3c7688d4ad7bbfda10a773862b58a070f6eb11106a003fd909081ed51edd520d",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:3c7688d4ad7bbfda10a773862b58a070f6eb11106a003fd909081ed51edd520d",
          "name": "pgo_rmdata"
        },
        {
          "digest": "sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
          "name": "percona-postgresql-operator-containers-b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1-annotation"
        },
        {
          "digest": "sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
          "name": "percona-postgresql-operator-containers-0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74-annotation"
        },
        {
          "digest": "sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
          "name": "percona-postgresql-operator-containers-0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a-annotation"
        },
        {
          "digest": "sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
          "name": "percona-postgresql-operator-containers-8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee-annotation"
        },
        {
          "digest": "sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
          "name": "percona-postgresql-operator-containers-65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.3.0",
      "version_original": "1.3.0"
    },
    {
      "_id": "62fb988ae07d71e4beb72db8",
      "alm_examples": [
        {
          "api_version": "pg.percona.com/v1",
          "kind": "PerconaPGCluster",
          "metadata": {
            "labels": {
              "pgo-version": "1.3.0"
            },
            "name": "cluster1"
          },
          "spec": {
            "backup": {
              "backrestRepoImage": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
              "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
              "resources": {
                "requests": {
                  "cpu": "200m",
                  "memory": "48Mi"
                }
              },
              "schedule": [
                {
                  "keep": 3,
                  "name": "sat-night-backup",
                  "schedule": "0 0 * * 6",
                  "storage": "local",
                  "type": "full"
                }
              ],
              "volumeSpec": {
                "accessmode": "ReadWriteOnce",
                "size": "1G",
                "storageclass": "",
                "storagetype": "dynamic"
              }
            },
            "database": "pgdb",
            "disableAutofail": false,
            "keepBackups": true,
            "keepData": true,
            "pause": false,
            "pgBadger": {
              "enabled": false,
              "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
              "port": 10000
            },
            "pgBouncer": {
              "expose": {
                "serviceType": "ClusterIP"
              },
              "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
              "resources": {
                "requests": {
                  "cpu": "1",
                  "memory": "128Mi"
                }
              },
              "size": 3
            },
            "pgPrimary": {
              "expose": {
                "serviceType": "ClusterIP"
              },
              "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
              "resources": {
                "requests": {
                  "cpu": "500m",
                  "memory": "256Mi"
                }
              },
              "tolerations": [],
              "volumeSpec": {
                "accessmode": "ReadWriteOnce",
                "size": "1G",
                "storageclass": "",
                "storagetype": "dynamic"
              }
            },
            "pgReplicas": {
              "hotStandby": {
                "enableSyncStandby": false,
                "expose": {
                  "serviceType": "ClusterIP"
                },
                "resources": {
                  "requests": {
                    "cpu": "500m",
                    "memory": "256Mi"
                  }
                },
                "size": 2,
                "volumeSpec": {
                  "accessmode": "ReadWriteOnce",
                  "size": "1G",
                  "storageclass": "",
                  "storagetype": "dynamic"
                }
              }
            },
            "pmm": {
              "enabled": false,
              "image": "percona/pmm-client:2.29.1",
              "pmmSecret": "cluster1-pmm-secret",
              "resources": {
                "requests": {
                  "cpu": "500m",
                  "memory": "200M"
                }
              },
              "serverHost": "monitoring-service",
              "serverUser": "admin"
            },
            "port": "5432",
            "standby": false,
            "tlsOnly": false,
            "upgradeOptions": {
              "apply": "disabled",
              "schedule": "0 4 * * *",
              "versionServiceEndpoint": "https://check.percona.com"
            },
            "user": "pguser"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/percona/percona-postgresql-operator-bundle@sha256:7995df96b3a7a033321d46097387922a70c011746082d0967fa9cfe8ce75a43d",
      "bundle_path_digest": "sha256:7995df96b3a7a033321d46097387922a70c011746082d0967fa9cfe8ce75a43d",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-16T13:15:54.549000+00:00",
      "csv_description": "\n## Percona is Cloud Native\n\nPercona Operator for PostgreSQL automates and simplifies deploying and managing open source PostgreSQL clusters on Kubernetes. Percona Operator for PostgreSQL is based on Postgres Operator developed by Crunchy Data.\nWhether you need to get a simple PostgreSQL cluster up and running, need to deploy a high availability, fault tolerant cluster in production, or are running your own database-as-a-service, the Operator provides the essential features you need to keep your clusters healthy.\n\nConsult the [documentation](https://www.percona.com/doc/kubernetes-operator-for-postgresql/index.html) on the Percona Operator for PostgreSQL for complete details on capabilities and options.\n\n### Supported Features\n\n* **PostgreSQL Cluster Provisioning**\nCreate, Scale, & Delete PostgreSQL clusters with ease, while fully customizing your Pods and PostgreSQL configuration.\n* **High Availability**\n\n    Safe, automated failover backed by a distributed consensus based high-availability solution. Uses Pod Anti-Affinity to help resiliency; you can configure how much\n    enforced this can be. Failed primaries automatically heal, allowing for faster recovery time. Support for standby PostgreSQL clusters that work both within and\n    across multiple Kubernetes clusters.\n\n* **Disaster Recovery**\n\n    Backups and restores leverage the open source pgBackRest utility and includes support for full, incremental, and differential backups as well as efficient delta\n    restores. Set how long you want your backups retained for. Works great with very large databases!\n\n* **Communication Security**\n\n    Secure communication between your applications and data servers by enabling TLS for your PostgreSQL servers, including the ability to enforce all of your connections\n    to use TLS.\n\n* **Monitoring**\n\n    Track the health of your PostgreSQL clusters with Percona Monitoring and Management (PMM).\n\n* **PostgreSQL User Management**\n\n    Quickly add and remove users from your PostgreSQL clusters with powerful commands. Manage password expiration policies or use your preferred PostgreSQL authentication\n    scheme.\n\n* **Updates Management**\n\n    Safely apply PostgreSQL updates with minimal availability impact to your PostgreSQL clusters.\n\n* **Advanced Replication Support**\n\n    Choose between asynchronous replication and synchronous replication for workloads that are sensitive to losing transactions.\n\n* **Clone**\n\n    Create new clusters from your existing clusters or backups.\n\n* **Connection Pooling**\n\n    Use [pgBouncer](https://access.crunchydata.com/documentation/postgres-operator/latest/tutorial/pgbouncer/) for connection pooling\n\n* **Affinity and Tolerations**\n\n    Have your PostgreSQL clusters deployed to Kubernetes Nodes of your preference with node affinity, or designate which nodes Kubernetes can schedule PostgreSQL instances\n    to with Kubernetes  tolerations.\n\n* **Scheduled Backups**\n\n    Choose the type of backup (full, incremental, differential) and how frequently you want it to occur on each PostgreSQL cluster.\n\n* **Backup to S3**\n\n    Store your backups in Amazon S3 or any object storage system that supports the S3 protocol. The Operator can backup, restore, and create new clusters from these backups.\n\n* **Multi-Namespace Support**\n\n    You can control how the Operator leverages Kubernetes Namespaces with several different deployment models:\n\n    * Deploy the Operator and all PostgreSQL clusters to the same namespace\n    * Deploy the Operator to one Namespace, and all PostgreSQL clusters to a different Namespace\n    * Deploy the Operator to one Namespace, and have your PostgreSQL clusters managed across multiple Namespaces\n\n* **Full Customizability**\n\n    The Operator not only makes it easy to get PostgreSQL up and running on Kubernetes-enabled platforms, but also allows you to further customize your deployments:\n\n    * Selecting different storage classes for your primary, replica, and backup storage\n    * Select your own container resources class for each PostgreSQL cluster deployment; differentiate between resources applied for primary and replica clusters\n    * Use your own container image repository, including `imagePullSecrets` and private repositories  support\n    * Customize your PostgreSQL configuration\n    * Bring your own trusted certificate authority (CA) for use with the Operator API server\n    * Override your PostgreSQL configuration for each cluster\n    * Use your own custom images, re-define the image for each container separately\n\n### Release highlights\n* **What's new**\n\n    * The automated upgrade is now disabled by default to prevent an unplanned downtimes for user applications and to provide defaults more focused on strict user\u2019s control over the cluster\n    * Flexible anti-affinity configuration is now available, which allows the Operator to isolate PostgreSQL cluster instances on different Kubernetes nodes or to increase its availability by placing\nPostgreSQL instances in different availability zones\n    * Add possibility for postgres user to connect to PostgreSQL through PgBouncer with a new pgBouncer.exposePostgresUser Custom Resource option\n    * A new build and testing guide allows user to easily experiment with the source code of the Operator\n    * Fix the bug in the instruction on passing custom configuration options for PostgreSQL which made it usable for the new cluster only\n    * Fix the bug which caused the Operator crash without pgReplicas section in Custom Resource definition\n    * Fix the bug which caused the Operator to make connection requests to Version Service even with disabled Smart Update\n    * Fix the bug due to which restoring S3 backup from storage with self-signed certificates didn\u2019t work, by introducing the special backup.storages.verifyTLS option to address this issue\n",
      "csv_display_name": "Percona Operator for PostgreSQL",
      "csv_metadata_description": "Percona Operator for PostgreSQL manages the lifecycle of Percona PostgreSQL cluster instances.",
      "csv_name": "percona-postgresql-operator-certified.v1.3.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-16T13:15:54.549000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "percona-postgresql-operator-certified",
      "provided_apis": [
        {
          "group": "pg.percona.com",
          "kind": "Pgtask",
          "plural": "pgtasks",
          "version": "v1"
        },
        {
          "group": "pg.percona.com",
          "kind": "PerconaPGCluster",
          "plural": "perconapgclusters",
          "version": "v1"
        },
        {
          "group": "pg.percona.com",
          "kind": "Pgcluster",
          "plural": "pgclusters",
          "version": "v1"
        },
        {
          "group": "pg.percona.com",
          "kind": "Pgpolicy",
          "plural": "pgpolicies",
          "version": "v1"
        },
        {
          "group": "pg.percona.com",
          "kind": "Pgreplica",
          "plural": "pgreplicas",
          "version": "v1"
        }
      ],
      "provider": "Percona",
      "related_images": [
        {
          "digest": "sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
          "name": "pgbackrest"
        },
        {
          "digest": "sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
          "name": "pgbackrest-repo"
        },
        {
          "digest": "sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
          "name": "pgbadger"
        },
        {
          "digest": "sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
          "name": "postgres-ha"
        },
        {
          "digest": "sha256:3c7688d4ad7bbfda10a773862b58a070f6eb11106a003fd909081ed51edd520d",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:3c7688d4ad7bbfda10a773862b58a070f6eb11106a003fd909081ed51edd520d",
          "name": "rmdata"
        },
        {
          "digest": "sha256:c997d3b902bd95185252ae6727bca1fef5424ff1d8c6c716e2f419b88946716a",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:c997d3b902bd95185252ae6727bca1fef5424ff1d8c6c716e2f419b88946716a",
          "name": "percona-postgresql-operator-c997d3b902bd95185252ae6727bca1fef5424ff1d8c6c716e2f419b88946716a-annotation"
        },
        {
          "digest": "sha256:362eb3c33eaa99ab39fdf42962a38f2818253e1841aa55f656a16bcb79ac5489",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:362eb3c33eaa99ab39fdf42962a38f2818253e1841aa55f656a16bcb79ac5489",
          "name": "apiserver"
        },
        {
          "digest": "sha256:c997d3b902bd95185252ae6727bca1fef5424ff1d8c6c716e2f419b88946716a",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:c997d3b902bd95185252ae6727bca1fef5424ff1d8c6c716e2f419b88946716a",
          "name": "operator"
        },
        {
          "digest": "sha256:5e6a484f7a559e90e79aa7a034bdcf9415848015c08d244b176de17d47deeb12",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:5e6a484f7a559e90e79aa7a034bdcf9415848015c08d244b176de17d47deeb12",
          "name": "scheduler"
        },
        {
          "digest": "sha256:8089fb1d73bf16757a28d94b1c08649556457d5f61cdfdc33bd75cea1147f012",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:8089fb1d73bf16757a28d94b1c08649556457d5f61cdfdc33bd75cea1147f012",
          "name": "event"
        },
        {
          "digest": "sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
          "name": "pgo_backrest"
        },
        {
          "digest": "sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
          "name": "pgo_backrest_repo"
        },
        {
          "digest": "sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
          "name": "crunchy_pgbadger"
        },
        {
          "digest": "sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
          "name": "crunchy_pgbouncer"
        },
        {
          "digest": "sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
          "name": "crunchy_postgres_ha"
        },
        {
          "digest": "sha256:3c7688d4ad7bbfda10a773862b58a070f6eb11106a003fd909081ed51edd520d",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator@sha256:3c7688d4ad7bbfda10a773862b58a070f6eb11106a003fd909081ed51edd520d",
          "name": "pgo_rmdata"
        },
        {
          "digest": "sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1",
          "name": "percona-postgresql-operator-containers-b885df785f1ec057e04d9e7fefc0805d93f479ac812d6b8df4161a178cab21a1-annotation"
        },
        {
          "digest": "sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74",
          "name": "percona-postgresql-operator-containers-0863a651319c5339898343adb4bbf09ef6e50478badd5927a1582abd5e3c3b74-annotation"
        },
        {
          "digest": "sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a",
          "name": "percona-postgresql-operator-containers-0bde250fde02d7e0a234277780d83785f5ef04c48dbf1e57c127d0f2ccbaa34a-annotation"
        },
        {
          "digest": "sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee",
          "name": "percona-postgresql-operator-containers-8cfc2320d663152ec46adb79355935e161879249796e4689b3243a75653089ee-annotation"
        },
        {
          "digest": "sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
          "image": "registry.connect.redhat.com/percona/percona-postgresql-operator-containers@sha256:65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e",
          "name": "percona-postgresql-operator-containers-65746063ec9fab1869065f48394bb40b164c33e8102c48c42439812b2a6ba43e-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.3.0",
      "version_original": "1.3.0"
    },
    {
      "_id": "62fbb5f630a80ba5a209533b",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:bf80a86b196e5758343864473fcda5ae905c6e11f17e8d12c0aa23e93d264d8e",
      "bundle_path_digest": "sha256:bf80a86b196e5758343864473fcda5ae905c6e11f17e8d12c0aa23e93d264d8e",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "fast",
      "creation_date": "2022-08-16T15:21:26.699000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.16.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-16T15:21:26.699000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "name": "cloud-native-postgresql-82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd-annotation"
        },
        {
          "digest": "sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.16.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.16.1",
      "version_original": "1.16.1"
    },
    {
      "_id": "62fbb5f7e07d71e4beb7387d",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:bf80a86b196e5758343864473fcda5ae905c6e11f17e8d12c0aa23e93d264d8e",
      "bundle_path_digest": "sha256:bf80a86b196e5758343864473fcda5ae905c6e11f17e8d12c0aa23e93d264d8e",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.16",
      "creation_date": "2022-08-16T15:21:27.574000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.16.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-16T15:21:27.574000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "name": "cloud-native-postgresql-82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd-annotation"
        },
        {
          "digest": "sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.16.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.16.1",
      "version_original": "1.16.1"
    },
    {
      "_id": "62fbb88fb289bcc7af679669",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:bf80a86b196e5758343864473fcda5ae905c6e11f17e8d12c0aa23e93d264d8e",
      "bundle_path_digest": "sha256:bf80a86b196e5758343864473fcda5ae905c6e11f17e8d12c0aa23e93d264d8e",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "fast",
      "creation_date": "2022-08-16T15:32:31.701000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.16.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-16T15:32:31.701000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "name": "cloud-native-postgresql-82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd-annotation"
        },
        {
          "digest": "sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.16.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.16.1",
      "version_original": "1.16.1"
    },
    {
      "_id": "62fbb89030a80ba5a20954d5",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:bf80a86b196e5758343864473fcda5ae905c6e11f17e8d12c0aa23e93d264d8e",
      "bundle_path_digest": "sha256:bf80a86b196e5758343864473fcda5ae905c6e11f17e8d12c0aa23e93d264d8e",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.16",
      "creation_date": "2022-08-16T15:32:32.380000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.16.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-16T15:32:32.380000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "name": "cloud-native-postgresql-82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd-annotation"
        },
        {
          "digest": "sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.16.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.16.1",
      "version_original": "1.16.1"
    },
    {
      "_id": "62fbb9a230a80ba5a2095529",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:bf80a86b196e5758343864473fcda5ae905c6e11f17e8d12c0aa23e93d264d8e",
      "bundle_path_digest": "sha256:bf80a86b196e5758343864473fcda5ae905c6e11f17e8d12c0aa23e93d264d8e",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "fast",
      "creation_date": "2022-08-16T15:37:06.951000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.16.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-16T15:37:06.951000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "name": "cloud-native-postgresql-82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd-annotation"
        },
        {
          "digest": "sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.16.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.16.1",
      "version_original": "1.16.1"
    },
    {
      "_id": "62fbb9a3bb3b9bafa13534e6",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:bf80a86b196e5758343864473fcda5ae905c6e11f17e8d12c0aa23e93d264d8e",
      "bundle_path_digest": "sha256:bf80a86b196e5758343864473fcda5ae905c6e11f17e8d12c0aa23e93d264d8e",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.16",
      "creation_date": "2022-08-16T15:37:07.350000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.16.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-16T15:37:07.350000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "name": "cloud-native-postgresql-82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd-annotation"
        },
        {
          "digest": "sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.16.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.16.1",
      "version_original": "1.16.1"
    },
    {
      "_id": "62fbba4054966df4ef1279d7",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:bf80a86b196e5758343864473fcda5ae905c6e11f17e8d12c0aa23e93d264d8e",
      "bundle_path_digest": "sha256:bf80a86b196e5758343864473fcda5ae905c6e11f17e8d12c0aa23e93d264d8e",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "fast",
      "creation_date": "2022-08-16T15:39:44.796000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.16.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-16T15:39:44.796000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "name": "cloud-native-postgresql-82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd-annotation"
        },
        {
          "digest": "sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.16.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.16.1",
      "version_original": "1.16.1"
    },
    {
      "_id": "62fbba4130a80ba5a2095547",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:bf80a86b196e5758343864473fcda5ae905c6e11f17e8d12c0aa23e93d264d8e",
      "bundle_path_digest": "sha256:bf80a86b196e5758343864473fcda5ae905c6e11f17e8d12c0aa23e93d264d8e",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.16",
      "creation_date": "2022-08-16T15:39:45.613000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.16.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-16T15:39:45.613000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "name": "cloud-native-postgresql-82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd-annotation"
        },
        {
          "digest": "sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.16.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.16.1",
      "version_original": "1.16.1"
    },
    {
      "_id": "62fbba4f30a80ba5a2095549",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:bf80a86b196e5758343864473fcda5ae905c6e11f17e8d12c0aa23e93d264d8e",
      "bundle_path_digest": "sha256:bf80a86b196e5758343864473fcda5ae905c6e11f17e8d12c0aa23e93d264d8e",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "fast",
      "creation_date": "2022-08-16T15:39:59.690000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.16.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-16T15:39:59.690000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "name": "cloud-native-postgresql-82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd-annotation"
        },
        {
          "digest": "sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.16.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.16.1",
      "version_original": "1.16.1"
    },
    {
      "_id": "62fbba50e07d71e4beb73a77",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:bf80a86b196e5758343864473fcda5ae905c6e11f17e8d12c0aa23e93d264d8e",
      "bundle_path_digest": "sha256:bf80a86b196e5758343864473fcda5ae905c6e11f17e8d12c0aa23e93d264d8e",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.16",
      "creation_date": "2022-08-16T15:40:00.565000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.16.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-16T15:40:00.565000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "name": "cloud-native-postgresql-82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd-annotation"
        },
        {
          "digest": "sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:82f45ac3a35d9bb3cb9c986463a0bb3c116cc3fc8615886eeb1f6f52b06f66cd",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.16.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.16.1",
      "version_original": "1.16.1"
    },
    {
      "_id": "62fbd564bb3b9bafa1354691",
      "alm_examples": [
        {
          "api_version": "machinelearning.seldon.io/v1",
          "kind": "SeldonDeployment",
          "metadata": {
            "labels": {
              "app": "seldon",
              "app.kubernetes.io/instance": "seldon1",
              "app.kubernetes.io/name": "seldon",
              "app.kubernetes.io/version": "v0.5"
            },
            "name": "seldon-model"
          },
          "spec": {
            "name": "test-deployment",
            "predictors": [
              {
                "componentSpecs": [
                  {
                    "spec": {
                      "containers": [
                        {
                          "image": "seldonio/mock_classifier:1.6.0",
                          "name": "classifier"
                        }
                      ]
                    }
                  }
                ],
                "graph": {
                  "children": [],
                  "name": "classifier",
                  "type": "MODEL"
                },
                "name": "example",
                "replicas": 1
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-core-operator-bundle@sha256:08768fe00addf43bfcd19acead3e84d860be67f0334b6fe56873863ed68b7ae7",
      "bundle_path_digest": "sha256:08768fe00addf43bfcd19acead3e84d860be67f0334b6fe56873863ed68b7ae7",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-16T17:35:32.307000+00:00",
      "csv_description": "The Seldon operator enables for native operation of production machine learning workloads, including monitoring and operations of language-agnostic models with the benefits of real-time metrics and log analysis.\n   \n## Overview\nSeldon Core is an open source platform for deploying machine learning models on a Kubernetes cluster.\n\n* Deploy machine learning models in the cloud or on-premise.\n* Get metrics and ensure proper governance and compliance for your running machine learning models.\n* Create powerful inference graphs made up of multiple components.\n* Provide a consistent serving layer for models built using heterogeneous ML toolkits.\n\nYou can get started by following the guides in our documentation at https://docs.seldon.io/projects/seldon-core/en/latest/workflow/README.html\n",
      "csv_display_name": "Seldon Operator",
      "csv_metadata_description": "The Seldon operator for management, monitoring and operations of machine learning systems through the Seldon Engine. Once installed, the Seldon Operator provides multiple functions which facilitate the productisation, monitoring and maintenance of machine learning systems at scale.",
      "csv_name": "seldon-operator.v1.14.1-2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-16T17:35:32.307000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "seldon-operator-certified",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "version": "v1"
        }
      ],
      "provider": "Seldon Technologies",
      "related_images": [
        {
          "digest": "sha256:41c921605c9a6ee1bd97583feaad70179fb46a3494c447c83caec25c20541282",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:41c921605c9a6ee1bd97583feaad70179fb46a3494c447c83caec25c20541282",
          "name": "seldon-core-operator-41c921605c9a6ee1bd97583feaad70179fb46a3494c447c83caec25c20541282-annotation"
        },
        {
          "digest": "sha256:41c921605c9a6ee1bd97583feaad70179fb46a3494c447c83caec25c20541282",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:41c921605c9a6ee1bd97583feaad70179fb46a3494c447c83caec25c20541282",
          "name": "manager"
        },
        {
          "digest": "sha256:0cdbe17a8d73b0dd9798e8acee9694282a3f4e9c2eb80b0c3bbc2958dbb452ab",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-executor@sha256:0cdbe17a8d73b0dd9798e8acee9694282a3f4e9c2eb80b0c3bbc2958dbb452ab",
          "name": "executor"
        },
        {
          "digest": "sha256:075230960142845dba8decfa007c8a48474aad8cc90317ff77192c8fa9c1b84d",
          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:075230960142845dba8decfa007c8a48474aad8cc90317ff77192c8fa9c1b84d",
          "name": "mock_classifier"
        },
        {
          "digest": "sha256:a0280c13136dcc870194af72630b9d2f7fc8bcff4edb54dd3bfbce36741af50c",
          "image": "registry.connect.redhat.com/seldonio/rclone-storage-initializer@sha256:a0280c13136dcc870194af72630b9d2f7fc8bcff4edb54dd3bfbce36741af50c",
          "name": "rclone_storage_initializer"
        },
        {
          "digest": "sha256:84a13b0c96d87f9d784bba1efae2d7a65453ebd6555359fa6d50e851a0520dc9",
          "image": "registry.connect.redhat.com/seldonio/sklearnserver@sha256:84a13b0c96d87f9d784bba1efae2d7a65453ebd6555359fa6d50e851a0520dc9",
          "name": "sklearnserver"
        },
        {
          "digest": "sha256:246681e031cd1b5bcde5400d9d86e50daebc13c2db7d2568f641ef391fb66dab",
          "image": "registry.connect.redhat.com/seldonio/mlflowserver@sha256:246681e031cd1b5bcde5400d9d86e50daebc13c2db7d2568f641ef391fb66dab",
          "name": "mlflowserver"
        },
        {
          "digest": "sha256:266c697d5349c7d636240aa139b25c53e403ded43bb8a3eef8e7e9e40215dff2",
          "image": "registry.connect.redhat.com/seldonio/xgboostserver@sha256:266c697d5349c7d636240aa139b25c53e403ded43bb8a3eef8e7e9e40215dff2",
          "name": "xgboostserver"
        },
        {
          "digest": "sha256:d89faa03a12acf0028a2556ac4072a6d37ec3287d890396c99ebee076f64c519",
          "image": "registry.connect.redhat.com/seldonio/tfproxy@sha256:d89faa03a12acf0028a2556ac4072a6d37ec3287d890396c99ebee076f64c519",
          "name": "tfproxy"
        },
        {
          "digest": "sha256:747f7389db946fa331fb41f0cad84bfc3f7bff8cf189a7a69d08a888f50ae60e",
          "image": "registry.connect.redhat.com/seldonio/tensorflow-serving@sha256:747f7389db946fa331fb41f0cad84bfc3f7bff8cf189a7a69d08a888f50ae60e",
          "name": "tensorflow"
        },
        {
          "digest": "sha256:2ab919e49b61638cf0921b6efb0f4db55465b02833c83ade21d6c3f81b8fbcf2",
          "image": "registry.connect.redhat.com/seldonio/alibiexplainer@sha256:2ab919e49b61638cf0921b6efb0f4db55465b02833c83ade21d6c3f81b8fbcf2",
          "name": "explainer"
        },
        {
          "digest": "sha256:a0280c13136dcc870194af72630b9d2f7fc8bcff4edb54dd3bfbce36741af50c",
          "image": "registry.connect.redhat.com/seldonio/rclone-storage-initializer@sha256:a0280c13136dcc870194af72630b9d2f7fc8bcff4edb54dd3bfbce36741af50c",
          "name": "storage_initializer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.12.0 <1.14.1-2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.14.1-2",
      "version_original": "1.14.1-2"
    },
    {
      "_id": "62fbd580e07d71e4beb74c21",
      "alm_examples": [
        {
          "api_version": "machinelearning.seldon.io/v1",
          "kind": "SeldonDeployment",
          "metadata": {
            "labels": {
              "app": "seldon",
              "app.kubernetes.io/instance": "seldon1",
              "app.kubernetes.io/name": "seldon",
              "app.kubernetes.io/version": "v0.5"
            },
            "name": "seldon-model"
          },
          "spec": {
            "name": "test-deployment",
            "predictors": [
              {
                "componentSpecs": [
                  {
                    "spec": {
                      "containers": [
                        {
                          "image": "seldonio/mock_classifier:1.6.0",
                          "name": "classifier"
                        }
                      ]
                    }
                  }
                ],
                "graph": {
                  "children": [],
                  "name": "classifier",
                  "type": "MODEL"
                },
                "name": "example",
                "replicas": 1
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-core-operator-bundle@sha256:08768fe00addf43bfcd19acead3e84d860be67f0334b6fe56873863ed68b7ae7",
      "bundle_path_digest": "sha256:08768fe00addf43bfcd19acead3e84d860be67f0334b6fe56873863ed68b7ae7",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-16T17:36:00.553000+00:00",
      "csv_description": "The Seldon operator enables for native operation of production machine learning workloads, including monitoring and operations of language-agnostic models with the benefits of real-time metrics and log analysis.\n   \n## Overview\nSeldon Core is an open source platform for deploying machine learning models on a Kubernetes cluster.\n\n* Deploy machine learning models in the cloud or on-premise.\n* Get metrics and ensure proper governance and compliance for your running machine learning models.\n* Create powerful inference graphs made up of multiple components.\n* Provide a consistent serving layer for models built using heterogeneous ML toolkits.\n\nYou can get started by following the guides in our documentation at https://docs.seldon.io/projects/seldon-core/en/latest/workflow/README.html\n",
      "csv_display_name": "Seldon Operator",
      "csv_metadata_description": "The Seldon operator for management, monitoring and operations of machine learning systems through the Seldon Engine. Once installed, the Seldon Operator provides multiple functions which facilitate the productisation, monitoring and maintenance of machine learning systems at scale.",
      "csv_name": "seldon-operator.v1.14.1-2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-16T17:36:00.553000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "seldon-operator-certified",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1"
        }
      ],
      "provider": "Seldon Technologies",
      "related_images": [
        {
          "digest": "sha256:41c921605c9a6ee1bd97583feaad70179fb46a3494c447c83caec25c20541282",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:41c921605c9a6ee1bd97583feaad70179fb46a3494c447c83caec25c20541282",
          "name": "seldon-core-operator-41c921605c9a6ee1bd97583feaad70179fb46a3494c447c83caec25c20541282-annotation"
        },
        {
          "digest": "sha256:41c921605c9a6ee1bd97583feaad70179fb46a3494c447c83caec25c20541282",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:41c921605c9a6ee1bd97583feaad70179fb46a3494c447c83caec25c20541282",
          "name": "manager"
        },
        {
          "digest": "sha256:0cdbe17a8d73b0dd9798e8acee9694282a3f4e9c2eb80b0c3bbc2958dbb452ab",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-executor@sha256:0cdbe17a8d73b0dd9798e8acee9694282a3f4e9c2eb80b0c3bbc2958dbb452ab",
          "name": "executor"
        },
        {
          "digest": "sha256:075230960142845dba8decfa007c8a48474aad8cc90317ff77192c8fa9c1b84d",
          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:075230960142845dba8decfa007c8a48474aad8cc90317ff77192c8fa9c1b84d",
          "name": "mock_classifier"
        },
        {
          "digest": "sha256:a0280c13136dcc870194af72630b9d2f7fc8bcff4edb54dd3bfbce36741af50c",
          "image": "registry.connect.redhat.com/seldonio/rclone-storage-initializer@sha256:a0280c13136dcc870194af72630b9d2f7fc8bcff4edb54dd3bfbce36741af50c",
          "name": "rclone_storage_initializer"
        },
        {
          "digest": "sha256:84a13b0c96d87f9d784bba1efae2d7a65453ebd6555359fa6d50e851a0520dc9",
          "image": "registry.connect.redhat.com/seldonio/sklearnserver@sha256:84a13b0c96d87f9d784bba1efae2d7a65453ebd6555359fa6d50e851a0520dc9",
          "name": "sklearnserver"
        },
        {
          "digest": "sha256:246681e031cd1b5bcde5400d9d86e50daebc13c2db7d2568f641ef391fb66dab",
          "image": "registry.connect.redhat.com/seldonio/mlflowserver@sha256:246681e031cd1b5bcde5400d9d86e50daebc13c2db7d2568f641ef391fb66dab",
          "name": "mlflowserver"
        },
        {
          "digest": "sha256:266c697d5349c7d636240aa139b25c53e403ded43bb8a3eef8e7e9e40215dff2",
          "image": "registry.connect.redhat.com/seldonio/xgboostserver@sha256:266c697d5349c7d636240aa139b25c53e403ded43bb8a3eef8e7e9e40215dff2",
          "name": "xgboostserver"
        },
        {
          "digest": "sha256:d89faa03a12acf0028a2556ac4072a6d37ec3287d890396c99ebee076f64c519",
          "image": "registry.connect.redhat.com/seldonio/tfproxy@sha256:d89faa03a12acf0028a2556ac4072a6d37ec3287d890396c99ebee076f64c519",
          "name": "tfproxy"
        },
        {
          "digest": "sha256:747f7389db946fa331fb41f0cad84bfc3f7bff8cf189a7a69d08a888f50ae60e",
          "image": "registry.connect.redhat.com/seldonio/tensorflow-serving@sha256:747f7389db946fa331fb41f0cad84bfc3f7bff8cf189a7a69d08a888f50ae60e",
          "name": "tensorflow"
        },
        {
          "digest": "sha256:2ab919e49b61638cf0921b6efb0f4db55465b02833c83ade21d6c3f81b8fbcf2",
          "image": "registry.connect.redhat.com/seldonio/alibiexplainer@sha256:2ab919e49b61638cf0921b6efb0f4db55465b02833c83ade21d6c3f81b8fbcf2",
          "name": "explainer"
        },
        {
          "digest": "sha256:a0280c13136dcc870194af72630b9d2f7fc8bcff4edb54dd3bfbce36741af50c",
          "image": "registry.connect.redhat.com/seldonio/rclone-storage-initializer@sha256:a0280c13136dcc870194af72630b9d2f7fc8bcff4edb54dd3bfbce36741af50c",
          "name": "storage_initializer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.12.0 <1.14.1-2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.14.1-2",
      "version_original": "1.14.1-2"
    },
    {
      "_id": "62fbdc6fe07d71e4beb74fec",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.5.7"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:c5c898eff1a7189cd0e748bdcc08a40b5a05d23cd69d86a9716c0435b8719ec9",
      "bundle_path_digest": "sha256:c5c898eff1a7189cd0e748bdcc08a40b5a05d23cd69d86a9716c0435b8719ec9",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-16T18:05:35.214000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.13.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-16T18:05:35.214000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195",
          "name": "t8c-operator-ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195-annotation"
        },
        {
          "digest": "sha256:ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195",
          "name": "t8c-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "42.13.0",
      "version_original": "42.13.0"
    },
    {
      "_id": "62fbe04130a80ba5a2096ab2",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.5.7"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:c5c898eff1a7189cd0e748bdcc08a40b5a05d23cd69d86a9716c0435b8719ec9",
      "bundle_path_digest": "sha256:c5c898eff1a7189cd0e748bdcc08a40b5a05d23cd69d86a9716c0435b8719ec9",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-16T18:21:53.218000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.13.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-16T18:21:53.218000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195",
          "name": "t8c-operator-ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195-annotation"
        },
        {
          "digest": "sha256:ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195",
          "name": "t8c-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "42.13.0",
      "version_original": "42.13.0"
    },
    {
      "_id": "62fbe056bb3b9bafa1354bab",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.5.7"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:c5c898eff1a7189cd0e748bdcc08a40b5a05d23cd69d86a9716c0435b8719ec9",
      "bundle_path_digest": "sha256:c5c898eff1a7189cd0e748bdcc08a40b5a05d23cd69d86a9716c0435b8719ec9",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-16T18:22:14.484000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.13.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-16T18:22:14.484000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195",
          "name": "t8c-operator-ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195-annotation"
        },
        {
          "digest": "sha256:ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195",
          "name": "t8c-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "42.13.0",
      "version_original": "42.13.0"
    },
    {
      "_id": "62fbe0ddbb3b9bafa1354bc3",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.5.7"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:c5c898eff1a7189cd0e748bdcc08a40b5a05d23cd69d86a9716c0435b8719ec9",
      "bundle_path_digest": "sha256:c5c898eff1a7189cd0e748bdcc08a40b5a05d23cd69d86a9716c0435b8719ec9",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-16T18:24:29.672000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.13.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-16T18:24:29.672000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195",
          "name": "t8c-operator-ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195-annotation"
        },
        {
          "digest": "sha256:ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195",
          "name": "t8c-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "42.13.0",
      "version_original": "42.13.0"
    },
    {
      "_id": "62fbe0f3b289bcc7af67ade5",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.5.7"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:c5c898eff1a7189cd0e748bdcc08a40b5a05d23cd69d86a9716c0435b8719ec9",
      "bundle_path_digest": "sha256:c5c898eff1a7189cd0e748bdcc08a40b5a05d23cd69d86a9716c0435b8719ec9",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-16T18:24:51.611000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.13.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-16T18:24:51.611000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195",
          "name": "t8c-operator-ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195-annotation"
        },
        {
          "digest": "sha256:ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195",
          "name": "t8c-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "42.13.0",
      "version_original": "42.13.0"
    },
    {
      "_id": "62fbe277bb3b9bafa1354c35",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.5.7"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:c5c898eff1a7189cd0e748bdcc08a40b5a05d23cd69d86a9716c0435b8719ec9",
      "bundle_path_digest": "sha256:c5c898eff1a7189cd0e748bdcc08a40b5a05d23cd69d86a9716c0435b8719ec9",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-16T18:31:19.789000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.13.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-16T18:31:19.789000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195",
          "name": "t8c-operator-ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195-annotation"
        },
        {
          "digest": "sha256:ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:ecf118a07bd533a95e93c67b48aaa0ba442be529c23af50e7a835ab710696195",
          "name": "t8c-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "42.13.0",
      "version_original": "42.13.0"
    },
    {
      "_id": "62fbf513b289bcc7af67b169",
      "alm_examples": [
        {
          "api_version": "minio.min.io/v2",
          "kind": "Tenant",
          "metadata": {
            "annotations": {
              "prometheus.io/path": "/minio/v2/metrics/cluster",
              "prometheus.io/port": "9000",
              "prometheus.io/scrape": "true"
            },
            "labels": {
              "app": "minio"
            },
            "name": "storage-lite",
            "namespace": "tenant-lite"
          },
          "spec": {
            "certConfig": {},
            "configuration": {
              "name": "storage-configuration"
            },
            "credsSecret": {
              "name": "storage-creds-secret"
            },
            "env": [],
            "externalCaCertSecret": [],
            "externalCertSecret": [],
            "features": {
              "bucketDNS": false,
              "domains": {}
            },
            "image": "quay.io/minio/minio@sha256:57b1830c18d80931f8dfef5cc5d06394708404f65ccee852803e8295c479bac3",
            "imagePullSecret": {},
            "log": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "audit": {
                "diskCapacityGB": 1
              },
              "db": {
                "affinity": {
                  "nodeAffinity": {},
                  "podAffinity": {},
                  "podAntiAffinity": {}
                },
                "annotations": {},
                "env": [],
                "image": "",
                "initimage": "",
                "labels": {},
                "nodeSelector": {},
                "resources": {},
                "securityContext": {
                  "fsGroup": 999,
                  "runAsGroup": 999,
                  "runAsNonRoot": true,
                  "runAsUser": 999
                },
                "serviceAccountName": "",
                "tolerations": [],
                "volumeClaimTemplate": {
                  "metadata": {},
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "1Gi"
                      }
                    },
                    "storageClassName": "standard"
                  }
                }
              },
              "env": [],
              "image": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "tolerations": []
            },
            "mountPath": "/export",
            "podManagementPolicy": "Parallel",
            "pools": [
              {
                "name": "pool-0",
                "servers": 4,
                "volumeClaimTemplate": {
                  "metadata": {
                    "name": "data"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "2Gi"
                      }
                    }
                  }
                },
                "volumesPerServer": 2
              }
            ],
            "priorityClassName": "",
            "prometheus": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "diskCapacityGB": 1,
              "env": [],
              "image": "",
              "initimage": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "sidecarimage": "",
              "storageClassName": "standard"
            },
            "requestAutoCert": true,
            "serviceAccountName": "",
            "serviceMetadata": {
              "consoleServiceAnnotations": {},
              "consoleServiceLabels": {},
              "minioServiceAnnotations": {},
              "minioServiceLabels": {}
            },
            "subPath": "",
            "users": [
              {
                "name": "storage-user"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/minio/minio-operator1@sha256:93a3103d5975d50dd37e332dd40f18e10fb35cb13676bd7485f31bb871beda07",
      "bundle_path_digest": "sha256:93a3103d5975d50dd37e332dd40f18e10fb35cb13676bd7485f31bb871beda07",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-16T19:50:43.484000+00:00",
      "csv_description": "## Overview\n\n\nThe MinIO Operator brings native support for deploying and managing MinIO\ndeployments (\u201cMinIO Tenants\u201d) on a Kubernetes cluster.\n\n\nMinIO is a high performance, Kubernetes native object storage suite. With an\nextensive list of enterprise features, it is scalable, secure and resilient\nwhile remaining remarkably simple to deploy and operate at scale.\nSoftware-defined, MinIO can run on any infrastructure and in any cloud -\npublic, private or edge. MinIO is the world's fastest object storage and can\nrun the broadest set of workloads in the industry. It is widely considered\nto be the leader in compatibility with Amazon's S3 API.\n\n## Features\n\n\nThe MinIO Operator takes care of the deployment of MinIO Tenant along with:\n\n* TLS Certificate Management\n\n* Configuration of the encryption at rest\n\n* Cluster expansion\n\n* Hot Updates\n\n* Users and Buckets bootstrapping\n\n## Prerequisites for enabling this Operator\n\n* At least Kubernetes 1.18\n\n* [CSR\nCapability](https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/)\nmust be enabled\n\n* Locally attached volumes for performance or some CSI to provision block\nstorage to the MinIO pods.",
      "csv_display_name": "Minio Operator",
      "csv_metadata_description": "MinIO is a Kubernetes-native high performance object store with an\nS3-compatible API. The MinIO Operator supports deploying MinIO Tenants\nonto any Kubernetes.",
      "csv_name": "minio-operator.v4.4.28",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-16T19:50:43.484000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "minio-operator",
      "provided_apis": [
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v2"
        },
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1"
        }
      ],
      "provider": "MinIO Inc",
      "related_images": [
        {
          "digest": "sha256:bd0510a92dff3291069037480e0366abaf0b5232765785f590936abe01bfad21",
          "image": "quay.io/minio/operator@sha256:bd0510a92dff3291069037480e0366abaf0b5232765785f590936abe01bfad21",
          "name": "operator-bd0510a92dff3291069037480e0366abaf0b5232765785f590936abe01bfad21-annotation"
        },
        {
          "digest": "sha256:148331d40fd34a6b96a5f70acfd71e1d870b588a7b3ff6b646a0056d55ad5e9b",
          "image": "quay.io/minio/console@sha256:148331d40fd34a6b96a5f70acfd71e1d870b588a7b3ff6b646a0056d55ad5e9b",
          "name": "console"
        },
        {
          "digest": "sha256:bd0510a92dff3291069037480e0366abaf0b5232765785f590936abe01bfad21",
          "image": "quay.io/minio/operator@sha256:bd0510a92dff3291069037480e0366abaf0b5232765785f590936abe01bfad21",
          "name": "minio-operator"
        },
        {
          "digest": "sha256:57b1830c18d80931f8dfef5cc5d06394708404f65ccee852803e8295c479bac3",
          "image": "quay.io/minio/minio@sha256:57b1830c18d80931f8dfef5cc5d06394708404f65ccee852803e8295c479bac3",
          "name": "minio-57b1830c18d80931f8dfef5cc5d06394708404f65ccee852803e8295c479bac3-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "4.4.28",
      "version_original": "4.4.28"
    },
    {
      "_id": "62fbf56954966df4ef129404",
      "alm_examples": [
        {
          "api_version": "minio.min.io/v2",
          "kind": "Tenant",
          "metadata": {
            "annotations": {
              "prometheus.io/path": "/minio/v2/metrics/cluster",
              "prometheus.io/port": "9000",
              "prometheus.io/scrape": "true"
            },
            "labels": {
              "app": "minio"
            },
            "name": "storage-lite",
            "namespace": "tenant-lite"
          },
          "spec": {
            "certConfig": {},
            "configuration": {
              "name": "storage-configuration"
            },
            "credsSecret": {
              "name": "storage-creds-secret"
            },
            "env": [],
            "externalCaCertSecret": [],
            "externalCertSecret": [],
            "features": {
              "bucketDNS": false,
              "domains": {}
            },
            "image": "quay.io/minio/minio@sha256:57b1830c18d80931f8dfef5cc5d06394708404f65ccee852803e8295c479bac3",
            "imagePullSecret": {},
            "log": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "audit": {
                "diskCapacityGB": 1
              },
              "db": {
                "affinity": {
                  "nodeAffinity": {},
                  "podAffinity": {},
                  "podAntiAffinity": {}
                },
                "annotations": {},
                "env": [],
                "image": "",
                "initimage": "",
                "labels": {},
                "nodeSelector": {},
                "resources": {},
                "securityContext": {
                  "fsGroup": 999,
                  "runAsGroup": 999,
                  "runAsNonRoot": true,
                  "runAsUser": 999
                },
                "serviceAccountName": "",
                "tolerations": [],
                "volumeClaimTemplate": {
                  "metadata": {},
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "1Gi"
                      }
                    },
                    "storageClassName": "standard"
                  }
                }
              },
              "env": [],
              "image": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "tolerations": []
            },
            "mountPath": "/export",
            "podManagementPolicy": "Parallel",
            "pools": [
              {
                "name": "pool-0",
                "servers": 4,
                "volumeClaimTemplate": {
                  "metadata": {
                    "name": "data"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "2Gi"
                      }
                    }
                  }
                },
                "volumesPerServer": 2
              }
            ],
            "priorityClassName": "",
            "prometheus": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "diskCapacityGB": 1,
              "env": [],
              "image": "",
              "initimage": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "sidecarimage": "",
              "storageClassName": "standard"
            },
            "requestAutoCert": true,
            "serviceAccountName": "",
            "serviceMetadata": {
              "consoleServiceAnnotations": {},
              "consoleServiceLabels": {},
              "minioServiceAnnotations": {},
              "minioServiceLabels": {}
            },
            "subPath": "",
            "users": [
              {
                "name": "storage-user"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/minio/minio-operator1@sha256:93a3103d5975d50dd37e332dd40f18e10fb35cb13676bd7485f31bb871beda07",
      "bundle_path_digest": "sha256:93a3103d5975d50dd37e332dd40f18e10fb35cb13676bd7485f31bb871beda07",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-16T19:52:09.449000+00:00",
      "csv_description": "## Overview\n\n\nThe MinIO Operator brings native support for deploying and managing MinIO\ndeployments (\u201cMinIO Tenants\u201d) on a Kubernetes cluster.\n\n\nMinIO is a high performance, Kubernetes native object storage suite. With an\nextensive list of enterprise features, it is scalable, secure and resilient\nwhile remaining remarkably simple to deploy and operate at scale.\nSoftware-defined, MinIO can run on any infrastructure and in any cloud -\npublic, private or edge. MinIO is the world's fastest object storage and can\nrun the broadest set of workloads in the industry. It is widely considered\nto be the leader in compatibility with Amazon's S3 API.\n\n## Features\n\n\nThe MinIO Operator takes care of the deployment of MinIO Tenant along with:\n\n* TLS Certificate Management\n\n* Configuration of the encryption at rest\n\n* Cluster expansion\n\n* Hot Updates\n\n* Users and Buckets bootstrapping\n\n## Prerequisites for enabling this Operator\n\n* At least Kubernetes 1.18\n\n* [CSR\nCapability](https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/)\nmust be enabled\n\n* Locally attached volumes for performance or some CSI to provision block\nstorage to the MinIO pods.",
      "csv_display_name": "Minio Operator",
      "csv_metadata_description": "MinIO is a Kubernetes-native high performance object store with an\nS3-compatible API. The MinIO Operator supports deploying MinIO Tenants\nonto any Kubernetes.",
      "csv_name": "minio-operator.v4.4.28",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-16T19:52:09.449000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "minio-operator",
      "provided_apis": [
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1"
        },
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v2"
        }
      ],
      "provider": "MinIO Inc",
      "related_images": [
        {
          "digest": "sha256:bd0510a92dff3291069037480e0366abaf0b5232765785f590936abe01bfad21",
          "image": "quay.io/minio/operator@sha256:bd0510a92dff3291069037480e0366abaf0b5232765785f590936abe01bfad21",
          "name": "operator-bd0510a92dff3291069037480e0366abaf0b5232765785f590936abe01bfad21-annotation"
        },
        {
          "digest": "sha256:148331d40fd34a6b96a5f70acfd71e1d870b588a7b3ff6b646a0056d55ad5e9b",
          "image": "quay.io/minio/console@sha256:148331d40fd34a6b96a5f70acfd71e1d870b588a7b3ff6b646a0056d55ad5e9b",
          "name": "console"
        },
        {
          "digest": "sha256:bd0510a92dff3291069037480e0366abaf0b5232765785f590936abe01bfad21",
          "image": "quay.io/minio/operator@sha256:bd0510a92dff3291069037480e0366abaf0b5232765785f590936abe01bfad21",
          "name": "minio-operator"
        },
        {
          "digest": "sha256:57b1830c18d80931f8dfef5cc5d06394708404f65ccee852803e8295c479bac3",
          "image": "quay.io/minio/minio@sha256:57b1830c18d80931f8dfef5cc5d06394708404f65ccee852803e8295c479bac3",
          "name": "minio-57b1830c18d80931f8dfef5cc5d06394708404f65ccee852803e8295c479bac3-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "4.4.28",
      "version_original": "4.4.28"
    },
    {
      "_id": "62fbf7babb3b9bafa1355092",
      "alm_examples": [
        {
          "api_version": "minio.min.io/v2",
          "kind": "Tenant",
          "metadata": {
            "annotations": {
              "prometheus.io/path": "/minio/v2/metrics/cluster",
              "prometheus.io/port": "9000",
              "prometheus.io/scrape": "true"
            },
            "labels": {
              "app": "minio"
            },
            "name": "storage-lite",
            "namespace": "tenant-lite"
          },
          "spec": {
            "certConfig": {},
            "configuration": {
              "name": "storage-configuration"
            },
            "credsSecret": {
              "name": "storage-creds-secret"
            },
            "env": [],
            "externalCaCertSecret": [],
            "externalCertSecret": [],
            "features": {
              "bucketDNS": false,
              "domains": {}
            },
            "image": "quay.io/minio/minio@sha256:57b1830c18d80931f8dfef5cc5d06394708404f65ccee852803e8295c479bac3",
            "imagePullSecret": {},
            "log": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "audit": {
                "diskCapacityGB": 1
              },
              "db": {
                "affinity": {
                  "nodeAffinity": {},
                  "podAffinity": {},
                  "podAntiAffinity": {}
                },
                "annotations": {},
                "env": [],
                "image": "",
                "initimage": "",
                "labels": {},
                "nodeSelector": {},
                "resources": {},
                "securityContext": {
                  "fsGroup": 999,
                  "runAsGroup": 999,
                  "runAsNonRoot": true,
                  "runAsUser": 999
                },
                "serviceAccountName": "",
                "tolerations": [],
                "volumeClaimTemplate": {
                  "metadata": {},
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "1Gi"
                      }
                    },
                    "storageClassName": "standard"
                  }
                }
              },
              "env": [],
              "image": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "tolerations": []
            },
            "mountPath": "/export",
            "podManagementPolicy": "Parallel",
            "pools": [
              {
                "name": "pool-0",
                "servers": 4,
                "volumeClaimTemplate": {
                  "metadata": {
                    "name": "data"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "2Gi"
                      }
                    }
                  }
                },
                "volumesPerServer": 2
              }
            ],
            "priorityClassName": "",
            "prometheus": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "diskCapacityGB": 1,
              "env": [],
              "image": "",
              "initimage": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "sidecarimage": "",
              "storageClassName": "standard"
            },
            "requestAutoCert": true,
            "serviceAccountName": "",
            "serviceMetadata": {
              "consoleServiceAnnotations": {},
              "consoleServiceLabels": {},
              "minioServiceAnnotations": {},
              "minioServiceLabels": {}
            },
            "subPath": "",
            "users": [
              {
                "name": "storage-user"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/minio/minio-operator1@sha256:93a3103d5975d50dd37e332dd40f18e10fb35cb13676bd7485f31bb871beda07",
      "bundle_path_digest": "sha256:93a3103d5975d50dd37e332dd40f18e10fb35cb13676bd7485f31bb871beda07",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-16T20:02:02.732000+00:00",
      "csv_description": "## Overview\n\n\nThe MinIO Operator brings native support for deploying and managing MinIO\ndeployments (\u201cMinIO Tenants\u201d) on a Kubernetes cluster.\n\n\nMinIO is a high performance, Kubernetes native object storage suite. With an\nextensive list of enterprise features, it is scalable, secure and resilient\nwhile remaining remarkably simple to deploy and operate at scale.\nSoftware-defined, MinIO can run on any infrastructure and in any cloud -\npublic, private or edge. MinIO is the world's fastest object storage and can\nrun the broadest set of workloads in the industry. It is widely considered\nto be the leader in compatibility with Amazon's S3 API.\n\n## Features\n\n\nThe MinIO Operator takes care of the deployment of MinIO Tenant along with:\n\n* TLS Certificate Management\n\n* Configuration of the encryption at rest\n\n* Cluster expansion\n\n* Hot Updates\n\n* Users and Buckets bootstrapping\n\n## Prerequisites for enabling this Operator\n\n* At least Kubernetes 1.18\n\n* [CSR\nCapability](https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/)\nmust be enabled\n\n* Locally attached volumes for performance or some CSI to provision block\nstorage to the MinIO pods.",
      "csv_display_name": "Minio Operator",
      "csv_metadata_description": "MinIO is a Kubernetes-native high performance object store with an\nS3-compatible API. The MinIO Operator supports deploying MinIO Tenants\nonto any Kubernetes.",
      "csv_name": "minio-operator.v4.4.28",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-16T20:02:02.732000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "minio-operator",
      "provided_apis": [
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1"
        },
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v2"
        }
      ],
      "provider": "MinIO Inc",
      "related_images": [
        {
          "digest": "sha256:bd0510a92dff3291069037480e0366abaf0b5232765785f590936abe01bfad21",
          "image": "quay.io/minio/operator@sha256:bd0510a92dff3291069037480e0366abaf0b5232765785f590936abe01bfad21",
          "name": "operator-bd0510a92dff3291069037480e0366abaf0b5232765785f590936abe01bfad21-annotation"
        },
        {
          "digest": "sha256:148331d40fd34a6b96a5f70acfd71e1d870b588a7b3ff6b646a0056d55ad5e9b",
          "image": "quay.io/minio/console@sha256:148331d40fd34a6b96a5f70acfd71e1d870b588a7b3ff6b646a0056d55ad5e9b",
          "name": "console"
        },
        {
          "digest": "sha256:bd0510a92dff3291069037480e0366abaf0b5232765785f590936abe01bfad21",
          "image": "quay.io/minio/operator@sha256:bd0510a92dff3291069037480e0366abaf0b5232765785f590936abe01bfad21",
          "name": "minio-operator"
        },
        {
          "digest": "sha256:57b1830c18d80931f8dfef5cc5d06394708404f65ccee852803e8295c479bac3",
          "image": "quay.io/minio/minio@sha256:57b1830c18d80931f8dfef5cc5d06394708404f65ccee852803e8295c479bac3",
          "name": "minio-57b1830c18d80931f8dfef5cc5d06394708404f65ccee852803e8295c479bac3-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "4.4.28",
      "version_original": "4.4.28"
    },
    {
      "_id": "62fbf96630a80ba5a2096f6a",
      "alm_examples": [
        {
          "api_version": "minio.min.io/v2",
          "kind": "Tenant",
          "metadata": {
            "annotations": {
              "prometheus.io/path": "/minio/v2/metrics/cluster",
              "prometheus.io/port": "9000",
              "prometheus.io/scrape": "true"
            },
            "labels": {
              "app": "minio"
            },
            "name": "storage-lite",
            "namespace": "tenant-lite"
          },
          "spec": {
            "certConfig": {},
            "configuration": {
              "name": "storage-configuration"
            },
            "credsSecret": {
              "name": "storage-creds-secret"
            },
            "env": [],
            "externalCaCertSecret": [],
            "externalCertSecret": [],
            "features": {
              "bucketDNS": false,
              "domains": {}
            },
            "image": "quay.io/minio/minio@sha256:57b1830c18d80931f8dfef5cc5d06394708404f65ccee852803e8295c479bac3",
            "imagePullSecret": {},
            "log": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "audit": {
                "diskCapacityGB": 1
              },
              "db": {
                "affinity": {
                  "nodeAffinity": {},
                  "podAffinity": {},
                  "podAntiAffinity": {}
                },
                "annotations": {},
                "env": [],
                "image": "",
                "initimage": "",
                "labels": {},
                "nodeSelector": {},
                "resources": {},
                "securityContext": {
                  "fsGroup": 999,
                  "runAsGroup": 999,
                  "runAsNonRoot": true,
                  "runAsUser": 999
                },
                "serviceAccountName": "",
                "tolerations": [],
                "volumeClaimTemplate": {
                  "metadata": {},
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "1Gi"
                      }
                    },
                    "storageClassName": "standard"
                  }
                }
              },
              "env": [],
              "image": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "tolerations": []
            },
            "mountPath": "/export",
            "podManagementPolicy": "Parallel",
            "pools": [
              {
                "name": "pool-0",
                "servers": 4,
                "volumeClaimTemplate": {
                  "metadata": {
                    "name": "data"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "2Gi"
                      }
                    }
                  }
                },
                "volumesPerServer": 2
              }
            ],
            "priorityClassName": "",
            "prometheus": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "diskCapacityGB": 1,
              "env": [],
              "image": "",
              "initimage": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "sidecarimage": "",
              "storageClassName": "standard"
            },
            "requestAutoCert": true,
            "serviceAccountName": "",
            "serviceMetadata": {
              "consoleServiceAnnotations": {},
              "consoleServiceLabels": {},
              "minioServiceAnnotations": {},
              "minioServiceLabels": {}
            },
            "subPath": "",
            "users": [
              {
                "name": "storage-user"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/minio/minio-operator1@sha256:93a3103d5975d50dd37e332dd40f18e10fb35cb13676bd7485f31bb871beda07",
      "bundle_path_digest": "sha256:93a3103d5975d50dd37e332dd40f18e10fb35cb13676bd7485f31bb871beda07",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-16T20:09:10.224000+00:00",
      "csv_description": "## Overview\n\n\nThe MinIO Operator brings native support for deploying and managing MinIO\ndeployments (\u201cMinIO Tenants\u201d) on a Kubernetes cluster.\n\n\nMinIO is a high performance, Kubernetes native object storage suite. With an\nextensive list of enterprise features, it is scalable, secure and resilient\nwhile remaining remarkably simple to deploy and operate at scale.\nSoftware-defined, MinIO can run on any infrastructure and in any cloud -\npublic, private or edge. MinIO is the world's fastest object storage and can\nrun the broadest set of workloads in the industry. It is widely considered\nto be the leader in compatibility with Amazon's S3 API.\n\n## Features\n\n\nThe MinIO Operator takes care of the deployment of MinIO Tenant along with:\n\n* TLS Certificate Management\n\n* Configuration of the encryption at rest\n\n* Cluster expansion\n\n* Hot Updates\n\n* Users and Buckets bootstrapping\n\n## Prerequisites for enabling this Operator\n\n* At least Kubernetes 1.18\n\n* [CSR\nCapability](https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/)\nmust be enabled\n\n* Locally attached volumes for performance or some CSI to provision block\nstorage to the MinIO pods.",
      "csv_display_name": "Minio Operator",
      "csv_metadata_description": "MinIO is a Kubernetes-native high performance object store with an\nS3-compatible API. The MinIO Operator supports deploying MinIO Tenants\nonto any Kubernetes.",
      "csv_name": "minio-operator.v4.4.28",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-16T20:09:10.224000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "minio-operator",
      "provided_apis": [
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1"
        },
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v2"
        }
      ],
      "provider": "MinIO Inc",
      "related_images": [
        {
          "digest": "sha256:bd0510a92dff3291069037480e0366abaf0b5232765785f590936abe01bfad21",
          "image": "quay.io/minio/operator@sha256:bd0510a92dff3291069037480e0366abaf0b5232765785f590936abe01bfad21",
          "name": "operator-bd0510a92dff3291069037480e0366abaf0b5232765785f590936abe01bfad21-annotation"
        },
        {
          "digest": "sha256:148331d40fd34a6b96a5f70acfd71e1d870b588a7b3ff6b646a0056d55ad5e9b",
          "image": "quay.io/minio/console@sha256:148331d40fd34a6b96a5f70acfd71e1d870b588a7b3ff6b646a0056d55ad5e9b",
          "name": "console"
        },
        {
          "digest": "sha256:bd0510a92dff3291069037480e0366abaf0b5232765785f590936abe01bfad21",
          "image": "quay.io/minio/operator@sha256:bd0510a92dff3291069037480e0366abaf0b5232765785f590936abe01bfad21",
          "name": "minio-operator"
        },
        {
          "digest": "sha256:57b1830c18d80931f8dfef5cc5d06394708404f65ccee852803e8295c479bac3",
          "image": "quay.io/minio/minio@sha256:57b1830c18d80931f8dfef5cc5d06394708404f65ccee852803e8295c479bac3",
          "name": "minio-57b1830c18d80931f8dfef5cc5d06394708404f65ccee852803e8295c479bac3-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "4.4.28",
      "version_original": "4.4.28"
    },
    {
      "_id": "62fbf98030a80ba5a2096f6e",
      "alm_examples": [
        {
          "api_version": "minio.min.io/v2",
          "kind": "Tenant",
          "metadata": {
            "annotations": {
              "prometheus.io/path": "/minio/v2/metrics/cluster",
              "prometheus.io/port": "9000",
              "prometheus.io/scrape": "true"
            },
            "labels": {
              "app": "minio"
            },
            "name": "storage-lite",
            "namespace": "tenant-lite"
          },
          "spec": {
            "certConfig": {},
            "configuration": {
              "name": "storage-configuration"
            },
            "credsSecret": {
              "name": "storage-creds-secret"
            },
            "env": [],
            "externalCaCertSecret": [],
            "externalCertSecret": [],
            "features": {
              "bucketDNS": false,
              "domains": {}
            },
            "image": "quay.io/minio/minio@sha256:57b1830c18d80931f8dfef5cc5d06394708404f65ccee852803e8295c479bac3",
            "imagePullSecret": {},
            "log": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "audit": {
                "diskCapacityGB": 1
              },
              "db": {
                "affinity": {
                  "nodeAffinity": {},
                  "podAffinity": {},
                  "podAntiAffinity": {}
                },
                "annotations": {},
                "env": [],
                "image": "",
                "initimage": "",
                "labels": {},
                "nodeSelector": {},
                "resources": {},
                "securityContext": {
                  "fsGroup": 999,
                  "runAsGroup": 999,
                  "runAsNonRoot": true,
                  "runAsUser": 999
                },
                "serviceAccountName": "",
                "tolerations": [],
                "volumeClaimTemplate": {
                  "metadata": {},
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "1Gi"
                      }
                    },
                    "storageClassName": "standard"
                  }
                }
              },
              "env": [],
              "image": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "tolerations": []
            },
            "mountPath": "/export",
            "podManagementPolicy": "Parallel",
            "pools": [
              {
                "name": "pool-0",
                "servers": 4,
                "volumeClaimTemplate": {
                  "metadata": {
                    "name": "data"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "2Gi"
                      }
                    }
                  }
                },
                "volumesPerServer": 2
              }
            ],
            "priorityClassName": "",
            "prometheus": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "diskCapacityGB": 1,
              "env": [],
              "image": "",
              "initimage": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "sidecarimage": "",
              "storageClassName": "standard"
            },
            "requestAutoCert": true,
            "serviceAccountName": "",
            "serviceMetadata": {
              "consoleServiceAnnotations": {},
              "consoleServiceLabels": {},
              "minioServiceAnnotations": {},
              "minioServiceLabels": {}
            },
            "subPath": "",
            "users": [
              {
                "name": "storage-user"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/minio/minio-operator1@sha256:93a3103d5975d50dd37e332dd40f18e10fb35cb13676bd7485f31bb871beda07",
      "bundle_path_digest": "sha256:93a3103d5975d50dd37e332dd40f18e10fb35cb13676bd7485f31bb871beda07",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-16T20:09:36.545000+00:00",
      "csv_description": "## Overview\n\n\nThe MinIO Operator brings native support for deploying and managing MinIO\ndeployments (\u201cMinIO Tenants\u201d) on a Kubernetes cluster.\n\n\nMinIO is a high performance, Kubernetes native object storage suite. With an\nextensive list of enterprise features, it is scalable, secure and resilient\nwhile remaining remarkably simple to deploy and operate at scale.\nSoftware-defined, MinIO can run on any infrastructure and in any cloud -\npublic, private or edge. MinIO is the world's fastest object storage and can\nrun the broadest set of workloads in the industry. It is widely considered\nto be the leader in compatibility with Amazon's S3 API.\n\n## Features\n\n\nThe MinIO Operator takes care of the deployment of MinIO Tenant along with:\n\n* TLS Certificate Management\n\n* Configuration of the encryption at rest\n\n* Cluster expansion\n\n* Hot Updates\n\n* Users and Buckets bootstrapping\n\n## Prerequisites for enabling this Operator\n\n* At least Kubernetes 1.18\n\n* [CSR\nCapability](https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/)\nmust be enabled\n\n* Locally attached volumes for performance or some CSI to provision block\nstorage to the MinIO pods.",
      "csv_display_name": "Minio Operator",
      "csv_metadata_description": "MinIO is a Kubernetes-native high performance object store with an\nS3-compatible API. The MinIO Operator supports deploying MinIO Tenants\nonto any Kubernetes.",
      "csv_name": "minio-operator.v4.4.28",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-16T20:09:36.545000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "minio-operator",
      "provided_apis": [
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1"
        },
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v2"
        }
      ],
      "provider": "MinIO Inc",
      "related_images": [
        {
          "digest": "sha256:bd0510a92dff3291069037480e0366abaf0b5232765785f590936abe01bfad21",
          "image": "quay.io/minio/operator@sha256:bd0510a92dff3291069037480e0366abaf0b5232765785f590936abe01bfad21",
          "name": "operator-bd0510a92dff3291069037480e0366abaf0b5232765785f590936abe01bfad21-annotation"
        },
        {
          "digest": "sha256:148331d40fd34a6b96a5f70acfd71e1d870b588a7b3ff6b646a0056d55ad5e9b",
          "image": "quay.io/minio/console@sha256:148331d40fd34a6b96a5f70acfd71e1d870b588a7b3ff6b646a0056d55ad5e9b",
          "name": "console"
        },
        {
          "digest": "sha256:bd0510a92dff3291069037480e0366abaf0b5232765785f590936abe01bfad21",
          "image": "quay.io/minio/operator@sha256:bd0510a92dff3291069037480e0366abaf0b5232765785f590936abe01bfad21",
          "name": "minio-operator"
        },
        {
          "digest": "sha256:57b1830c18d80931f8dfef5cc5d06394708404f65ccee852803e8295c479bac3",
          "image": "quay.io/minio/minio@sha256:57b1830c18d80931f8dfef5cc5d06394708404f65ccee852803e8295c479bac3",
          "name": "minio-57b1830c18d80931f8dfef5cc5d06394708404f65ccee852803e8295c479bac3-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "4.4.28",
      "version_original": "4.4.28"
    },
    {
      "_id": "62fce463bb3b9bafa13584d4",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:b7ab313d7aa6a902ae023b7726c74c1a0f0d340716e7594558c0013cfaaf7f36",
      "bundle_path_digest": "sha256:b7ab313d7aa6a902ae023b7726c74c1a0f0d340716e7594558c0013cfaaf7f36",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-17T12:51:47.385000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-stable.2.10.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-20T09:07:32.424000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "version": "v1"
        }
      ],
      "provider": "Trilio",
      "related_images": [
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "control-plane-49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5-annotation"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:ffda02d6487b7f7a1f810363efc4613872919c28326f4806f0c921c07ddcded7",
          "image": "registry.connect.redhat.com/trilio/web@sha256:ffda02d6487b7f7a1f810363efc4613872919c28326f4806f0c921c07ddcded7",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "dex-init"
        },
        {
          "digest": "sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "name": "metamover"
        },
        {
          "digest": "sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "name": "datamover"
        },
        {
          "digest": "sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "name": "target_browser"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "hook"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "image": "registry.connect.redhat.com/trilio/minio@sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "name": "minio"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "dex"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "tvk_init"
        }
      ],
      "replaces": null,
      "skip_range": "<2.10.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "2.10.3",
      "version_original": "2.10.3"
    },
    {
      "_id": "62fce467bb3b9bafa13584d6",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:b7ab313d7aa6a902ae023b7726c74c1a0f0d340716e7594558c0013cfaaf7f36",
      "bundle_path_digest": "sha256:b7ab313d7aa6a902ae023b7726c74c1a0f0d340716e7594558c0013cfaaf7f36",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-17T12:51:51.028000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-stable.2.10.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-20T09:13:54.755000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "plural": "clusterbackupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "plural": "clusterbackups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "plural": "clusterrestores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        }
      ],
      "provider": "Trilio",
      "related_images": [
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "control-plane-49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5-annotation"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:ffda02d6487b7f7a1f810363efc4613872919c28326f4806f0c921c07ddcded7",
          "image": "registry.connect.redhat.com/trilio/web@sha256:ffda02d6487b7f7a1f810363efc4613872919c28326f4806f0c921c07ddcded7",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "dex-init"
        },
        {
          "digest": "sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "name": "metamover"
        },
        {
          "digest": "sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "name": "datamover"
        },
        {
          "digest": "sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "name": "target_browser"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "hook"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "image": "registry.connect.redhat.com/trilio/minio@sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "name": "minio"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "dex"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "tvk_init"
        }
      ],
      "replaces": null,
      "skip_range": "<2.10.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.10.3",
      "version_original": "2.10.3"
    },
    {
      "_id": "62fce486b289bcc7af67e726",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:b7ab313d7aa6a902ae023b7726c74c1a0f0d340716e7594558c0013cfaaf7f36",
      "bundle_path_digest": "sha256:b7ab313d7aa6a902ae023b7726c74c1a0f0d340716e7594558c0013cfaaf7f36",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-17T12:52:22.897000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-stable.2.10.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-20T09:18:10.287000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "plural": "clusterrestores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "plural": "clusterbackups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "plural": "clusterbackupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        }
      ],
      "provider": "Trilio",
      "related_images": [
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "control-plane-49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5-annotation"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:ffda02d6487b7f7a1f810363efc4613872919c28326f4806f0c921c07ddcded7",
          "image": "registry.connect.redhat.com/trilio/web@sha256:ffda02d6487b7f7a1f810363efc4613872919c28326f4806f0c921c07ddcded7",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "dex-init"
        },
        {
          "digest": "sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "name": "metamover"
        },
        {
          "digest": "sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "name": "datamover"
        },
        {
          "digest": "sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "name": "target_browser"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "hook"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "image": "registry.connect.redhat.com/trilio/minio@sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "name": "minio"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "dex"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "tvk_init"
        }
      ],
      "replaces": null,
      "skip_range": "<2.10.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.10.3",
      "version_original": "2.10.3"
    },
    {
      "_id": "62fce8ac30a80ba5a209a3a9",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:b7ab313d7aa6a902ae023b7726c74c1a0f0d340716e7594558c0013cfaaf7f36",
      "bundle_path_digest": "sha256:b7ab313d7aa6a902ae023b7726c74c1a0f0d340716e7594558c0013cfaaf7f36",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-17T13:10:04.355000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-stable.2.10.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-20T09:11:18.927000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "plural": "clusterrestores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "plural": "clusterbackupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "plural": "clusterbackups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        }
      ],
      "provider": "Trilio",
      "related_images": [
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "control-plane-49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5-annotation"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:ffda02d6487b7f7a1f810363efc4613872919c28326f4806f0c921c07ddcded7",
          "image": "registry.connect.redhat.com/trilio/web@sha256:ffda02d6487b7f7a1f810363efc4613872919c28326f4806f0c921c07ddcded7",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "dex-init"
        },
        {
          "digest": "sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "name": "metamover"
        },
        {
          "digest": "sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "name": "datamover"
        },
        {
          "digest": "sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "name": "target_browser"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "hook"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "image": "registry.connect.redhat.com/trilio/minio@sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "name": "minio"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "dex"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "tvk_init"
        }
      ],
      "replaces": null,
      "skip_range": "<2.10.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.10.3",
      "version_original": "2.10.3"
    },
    {
      "_id": "62fce8bfe07d71e4beb78c45",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:b7ab313d7aa6a902ae023b7726c74c1a0f0d340716e7594558c0013cfaaf7f36",
      "bundle_path_digest": "sha256:b7ab313d7aa6a902ae023b7726c74c1a0f0d340716e7594558c0013cfaaf7f36",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-17T13:10:23.041000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-stable.2.10.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-20T09:26:51.102000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "plural": "clusterbackups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "plural": "clusterrestores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "plural": "clusterbackupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        }
      ],
      "provider": "Trilio",
      "related_images": [
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "control-plane-49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5-annotation"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:ffda02d6487b7f7a1f810363efc4613872919c28326f4806f0c921c07ddcded7",
          "image": "registry.connect.redhat.com/trilio/web@sha256:ffda02d6487b7f7a1f810363efc4613872919c28326f4806f0c921c07ddcded7",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "dex-init"
        },
        {
          "digest": "sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "name": "metamover"
        },
        {
          "digest": "sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "name": "datamover"
        },
        {
          "digest": "sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "name": "target_browser"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "hook"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "image": "registry.connect.redhat.com/trilio/minio@sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "name": "minio"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "dex"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "tvk_init"
        }
      ],
      "replaces": null,
      "skip_range": "<2.10.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.10.3",
      "version_original": "2.10.3"
    },
    {
      "_id": "62fce8f430a80ba5a209a3b4",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:b7ab313d7aa6a902ae023b7726c74c1a0f0d340716e7594558c0013cfaaf7f36",
      "bundle_path_digest": "sha256:b7ab313d7aa6a902ae023b7726c74c1a0f0d340716e7594558c0013cfaaf7f36",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-17T13:11:16.854000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-stable.2.10.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-20T09:27:05.321000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "plural": "clusterrestores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "plural": "clusterbackupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "plural": "clusterbackups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        }
      ],
      "provider": "Trilio",
      "related_images": [
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "control-plane-49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5-annotation"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:ffda02d6487b7f7a1f810363efc4613872919c28326f4806f0c921c07ddcded7",
          "image": "registry.connect.redhat.com/trilio/web@sha256:ffda02d6487b7f7a1f810363efc4613872919c28326f4806f0c921c07ddcded7",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "dex-init"
        },
        {
          "digest": "sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "name": "metamover"
        },
        {
          "digest": "sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "name": "datamover"
        },
        {
          "digest": "sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:c1742bf2c723d49b936b055daa69df3a6834d62d357f8b6eb7d9a2064112787c",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:eaf32c8a791ceb1fea70deb1173d2a6e7bff7a85bc66935676dc0743b07635d0",
          "name": "target_browser"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "hook"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "image": "registry.connect.redhat.com/trilio/minio@sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "name": "minio"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "dex"
        },
        {
          "digest": "sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:49d57245a12a01fc0a1e35effe503143fc2ed68abdf91851a3ca6059292789e5",
          "name": "tvk_init"
        }
      ],
      "replaces": null,
      "skip_range": "<2.10.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.10.3",
      "version_original": "2.10.3"
    },
    {
      "_id": "62fd3c5d54966df4ef12e650",
      "alm_examples": [
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "ClusterMaster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "clustermaster-sample"
          },
          "spec": {}
        },
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "IndexerCluster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "indexercluster-sample"
          },
          "spec": {}
        },
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "LicenseMaster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "licensemaster-sample"
          },
          "spec": {}
        },
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "MonitoringConsole",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "monitoringconsole-sample"
          },
          "spec": {}
        },
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "SearchHeadCluster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "searchheadcluster-sample"
          },
          "spec": {}
        },
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "Standalone",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "standalone-sample"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/splunk/splunk-operator-bundle@sha256:4f570d1c7f3371d0673ac081dad2951ab1b8180a22e141d29684eb625f549c88",
      "bundle_path_digest": "sha256:4f570d1c7f3371d0673ac081dad2951ab1b8180a22e141d29684eb625f549c88",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-17T19:07:09.083000+00:00",
      "csv_description": "# Getting Started with the Splunk Operator for Kubernetes\nThe Splunk Operator for Kubernetes enables you to quickly and easily deploy Splunk Enterprise on your choice of private or public cloud provider. The Operator simplifies scaling and management of Splunk Enterprise by automating administrative workflows using Kubernetes best practices. \n\nThe Splunk Operator runs as a container, and uses the Kubernetes [operator pattern](https://kubernetes.io/docs/concepts/extend-kubernetes/operator/) and [custom resources](https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/) objects to create and manage a scalable and sustainable Splunk Enterprise environment.\n\nThis guide is intended to help new users get up and running with the\nSplunk Operator for Kubernetes. It is divided into the following sections:\n\n* [Known Issues for the Splunk Operator](#known-issues-for-the-splunk-operator)\n* [Prerequisites for the Splunk Operator](#prerequisites-for-the-splunk-operator)\n* [Installing the Splunk Operator](#installing-the-splunk-operator)\n* [Creating Splunk Enterprise Deployments](#creating-a-splunk-enterprise-deployment)\n* [Securing Splunk Deployments in Kubernetes](Security.md)\n* [Contacting Support](#contacting-support)\n\n## Support Resources\n\nSPLUNK SUPPORTED: The Splunk Operator for Kubernetes is a supported method for deploying distributed Splunk Enterprise environments using containers.\n\nCOMMUNITY DEVELOPED: Splunk Operator for Kubernetes is an open source product developed by Splunkers with contributions from the community of partners and customers. The primary reason why Splunk is taking this approach is to push product development closer to those that use and depend upon it. This direct connection will help us all be more successful and move at a rapid pace.\n\nIf you're interested in contributing to the SOK open source project, review the [Contributing to the Project](CONTRIBUTING.md) page.\n\n**Community Support & Discussions on\n[Slack](https://splunk-usergroups.slack.com)** channel #splunk-operator-for-kubernetes\n\n**File Issues or Enhancements in\n[GitHub](https://github.com/splunk/splunk-operator/issues)** splunk/splunk-operator\n\n\n## Known Issues for the Splunk Operator\n\nReview the [Change Log](ChangeLog.md) page for a history of changes in each release.\n\n## Prerequisites for the Splunk Operator\n\n### Supported Kubernetes Versions\n\n- Kubernetes, version 1.16.2+ and later (x86 64-bit only).\n\nThe Splunk Operator should work with any [CNCF certified distribution](https://www.cncf.io/certification/software-conformance/) of Kubernetes. We do not have platform recommendations, but this is a table of platforms that our developers, customers, and partners have used successfully with the Splunk Operator.\n\n<table>\n<tr><td> Splunk Development & Testing Platforms </td><td> Amazon Elastic Kubernetes Service (EKS), Google Kubernetes Engine (GKE) </td></tr>\n<tr><td> Customer Reported Platforms </td><td> Microsoft Azure Kubernetes Service (AKS), Red Hat OpenShift </td></tr>\n<tr><td> Partner Tested Platforms</td><td> HPE Ezmeral</td></tr>\n<tr><td> Other Platforms </td><td>CNCF certified distribution</td></tr>\n</table>\n\n### Splunk Enterprise Compatibility\nEach Splunk Operator release has specific Splunk Enterprise compatibility requirements. Before installing or upgrading the Splunk Operator, review the [Change Log](ChangeLog.md) to verify version compatibility with Splunk Enterprise releases.\n\n### Splunk Apps Installation\n\nApps and add-ons can be installed using the Splunk Operator by following the instructions given at [Installing Splunk Apps](Examples.md#installing-splunk-apps).  Premium apps such as Enterprise Security and IT Service Intelligence are currently not supported.\n\n\n### Docker requirements\nThe Splunk Operator requires these docker images to be present or available to your Kubernetes cluster:\n\n* `splunk/splunk-operator`: The Splunk Operator image built by this repository or the [official release](https://hub.docker.com/r/splunk/splunk-operator) (2.0.0 or later)\n* `splunk/splunk:<version>`: The [Splunk Enterprise image](https://github.com/splunk/docker-splunk) (9.0.0 or later)\n\nAll of the Splunk Enterprise images are publicly available on [Docker Hub](https://hub.docker.com/). If your cluster does not have access to pull from Docker Hub, see the [Required Images Documentation](Images.md) page.\n\nReview the [Change Log](ChangeLog.md) page for a history of changes and Splunk Enterprise compatibility for each release.\n\n### Hardware Resources Requirements\nThe resource guidelines for running production Splunk Enterprise instances in pods through the Splunk Operator are the same as running Splunk Enterprise natively on a supported operating system and file system. Refer to the Splunk Enterprise [Reference Hardware documentation](https://docs.splunk.com/Documentation/Splunk/latest/Capacity/Referencehardware) for additional details.  We would also recommend following the same guidance on [Splunk Enterprise for disabling Transparent Huge Pages (THP)](https://docs.splunk.com/Documentation/Splunk/latest/ReleaseNotes/SplunkandTHP) for the nodes in your Kubernetes cluster.  Please be aware that this may impact performance of other non-Splunk workloads.\n\n#### Minimum Reference Hardware\nBased on Splunk Enterprise [Reference Hardware documentation](https://docs.splunk.com/Documentation/Splunk/latest/Capacity/Referencehardware), a summary of the minimum reference hardware requirements is given below.\n\n| Standalone        | Search Head / Search Head Cluster | Indexer Cluster |\n| ---------- | ------- | ------- |\n| _Each Standalone Pod: 12 Physical CPU Cores or 24 vCPU at 2Ghz or greater per core, 12GB RAM._| _Each Search Head Pod: 16 Physical CPU Cores or 32 vCPU at 2Ghz or greater per core, 12GB RAM._| _Each Indexer Pod: 12 Physical CPU cores, or 24 vCPU at 2GHz or greater per core, 12GB RAM._ |\n\n\n#### _Using Kubernetes Quality of Service Classes_\n\nIn addition to the guidelines provided in the reference hardware, [Kubernetes Quality of Service Classes](https://kubernetes.io/docs/tasks/configure-pod-container/quality-service-pod/)  can be used to configure CPU/Mem resources allocations that map to your _service level objectives_. For further information on utilizing Kubernetes Quality of Service (QoS) classes, see the table below:\n\n\n| QoS        | Summary| Description |\n| ---------- | ------- | ------- |\n| _Guaranteed_ | _CPU/Mem ```requests``` = CPU/Mem ```limits```_    | _When the CPU and memory  ```requests``` and ```limits``` values are equal, the pod is given a QoS class of Guaranteed. This level of service is recommended for Splunk Enterprise ___production environments___._ |\n| _Burstable_ | _CPU/Mem ```requests``` < CPU/Mem ```limits```_  | _When the CPU and memory  ```requests``` value is set lower than the ```limits``` the pod is given a QoS class of Burstable. This level of service is useful in a user acceptance testing ___(UAT) environment___, where the pods run with minimum resources, and Kubernetes allocates additional resources depending on usage._|\n| _BestEffort_ | _No CPU/Mem ```requests``` or ```limits``` are set_ | _When the ```requests``` or ```limits``` values are not set, the pod is given a QoS class of BestEffort. This level of service is sufficient for ___testing, or a small development task___._ |\n\nExamples on how to implement these QoS are given at [Examples of Guaranteed and Burstable QoS](CustomResources.md#examples-of-guaranteed-and-burstable-qos) section.\n\n\n### Storage guidelines\nThe Splunk Operator uses Kubernetes [Persistent Volume Claims](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims) to store all of your Splunk Enterprise configuration (\"$SPLUNK_HOME/etc\" path) and event (\"$SPLUNK_HOME/var\" path) data. If one of the underlying machines fail, Kubernetes will automatically try to recover by restarting the Splunk Enterprise pods on another machine that is able to reuse the same data volumes. This minimizes the maintenance burden on your operations team by reducing the impact of common hardware failures to the equivalent of a service restart. \nThe use of Persistent Volume Claims requires that your cluster is configured to support one or more Kubernetes persistent [Storage Classes](https://kubernetes.io/docs/concepts/storage/storage-classes/). See the [Setting Up a Persistent Storage for Splunk](StorageClass.md) page for more\ninformation.\n\n### What Storage Type To Use?\n\nThe Kubernetes infrastructure must have access to storage that meets or exceeds the recommendations provided in the Splunk Enterprise storage type recommendations at [Reference Hardware documentation - what storage type to use for a given role?](https://docs.splunk.com/Documentation/Splunk/latest/Capacity/Referencehardware#What_storage_type_should_I_use_for_a_role.3F) In summary, Indexers with SmartStore need NVMe or SSD storage to provide the necessary IOPs for a successful Splunk Enterprise environment.\n\n\n### Splunk SmartStore Required\nFor production environments, we are requiring the use of Splunk SmartStore. As a Splunk Enterprise deployment's data volume increases, demand for storage typically outpaces demand for compute resources. [Splunk's SmartStore Feature](https://docs.splunk.com/Documentation/Splunk/latest/Indexer/AboutSmartStore) allows you to manage your indexer storage and compute resources in a ___cost-effective___ manner by scaling those resources separately. SmartStore utilizes a fast storage cache on each indexer node to keep recent data locally available for search and keep other data in a remote object store. Look into the [SmartStore Resource Guide](SmartStore.md) document for configuring and using SmartStore through operator.\n\n## Installing the Splunk Operator\n\nA Kubernetes cluster administrator can install and start the Splunk Operator for specific namespace by running:\n```\nkubectl apply -f https://github.com/splunk/splunk-operator/releases/download/2.0.0/splunk-operator-namespace.yaml\n```\n\nA Kubernetes cluster administrator can install and start the Splunk Operator for cluster-wide by running:\n```\nkubectl apply -f https://github.com/splunk/splunk-operator/releases/download/2.0.0/splunk-operator-cluster.yaml\n```\n\nThe [Advanced Installation Instructions](Install.md) page offers guidance for advanced configurations, including the use of private image registries, installation at cluster scope, and installing the Splunk Operator as a user who is not a Kubernetes administrator. Users of Red Hat OpenShift should review the [Red Hat OpenShift](OpenShift.md) page.\n\nThe [Advanced Installation Instructions](Install.md) page offers guidance for advanced configurations, including the use of private image registries, installation at cluster scope, and installing the Splunk Operator as a user who is not a Kubernetes administrator. Users of Red Hat OpenShift should review the [Red Hat OpenShift](OpenShift.md) page.\n\n*Note: We recommended that the Splunk Enterprise Docker image is copied to a private registry, or directly onto your Kubernetes workers before creating large Splunk Enterprise deployments. See the [Required Images Documentation](Images.md) page, and the [Advanced Installation Instructions](Install.md) page for guidance on working with copies of the Docker images.*\n\nAfter the Splunk Operator starts, you'll see a single pod running within your current namespace:\n```\n$ kubectl get pods\nNAME                               READY   STATUS    RESTARTS   AGE\nsplunk-operator-75f5d4d85b-8pshn   1/1     Running   0          5s\n```\n## Upgrading the Splunk Operator\n\nFor information on upgrading the Splunk Operator, see the [How to upgrade Splunk Operator and Splunk Enterprise Deployments](SplunkOperatorUpgrade.md) page.\n\n## Creating a Splunk Enterprise deployment\n\nThe `Standalone` custom resource is used to create a single instance deployment of Splunk Enterprise. For example:\n\n1. Run the command to create a deployment named \u201cs1\u201d:\n\n\n```yaml\ncat <<EOF | kubectl apply -n splunk-operator -f -\napiVersion: enterprise.splunk.com/v3\nkind: Standalone\nmetadata:\n  name: s1\n  finalizers:\n  - enterprise.splunk.com/delete-pvc\nEOF\n```\n\n**The `enterprise.splunk.com/delete-pvc` finalizer is optional, and tells the Splunk Operator to remove any Kubernetes [Persistent Volumes](https://kubernetes.io/docs/concepts/storage/persistent-volumes/) associated with the instance if you delete the pod.**\n\nWithin a few minutes, you'll see new pods running in your namespace:\n\n```\n$ kubectl get pods\nNAME                                   READY   STATUS    RESTARTS   AGE\nsplunk-operator-7c5599546c-wt4xl        1/1    Running   0          11h\nsplunk-s1-standalone-0                  1/1    Running   0          45s\n```\n\n*Note: if your shell prints a `%` at the end, leave that out when you copy the output.*\n\n2. You can use a simple network port forward to open port 8000 for Splunk Web access:\n\n```\nkubectl port-forward splunk-s1-standalone-0 8000\n```\n\n3. Get your passwords for the namespace. The Splunk Enterprise passwords used in the namespace are generated automatically. To learn how to find and read the passwords, see the [Reading global kubernetes secret object](Examples.md#reading-global-kubernetes-secret-object) page.\n\n\n4. Log into Splunk Enterprise at http://localhost:8000 using the `admin` account with the password.\n\n5. To delete your standalone deployment, run:\n\n```\nkubectl delete standalone s1\n``` \n\nThe `Standalone` custom resource is just one of the resources the Splunk Operator provides. You can find more custom resources and the parameters they support on the [Custom Resource Guide](CustomResources.md) page.\n\nFor additional deployment examples, including Splunk Enterprise clusters, see the \n[Configuring Splunk Enterprise Deployments](Examples.md) page.\n\nFor additional guidance on making Splunk Enterprise ports accessible outside of Kubernetes, see the [Configuring Ingress](Ingress.md) page.\n\n## Contacting Support\nIf you are a Splunk Enterprise customer with a valid support entitlement contract and have a Splunk-related question, you can open a support case on the https://www.splunk.com/ support portal.\"\n",
      "csv_display_name": "Splunk Operator",
      "csv_metadata_description": "The Splunk Operator for Kubernetes enables you to quickly and easily deploy Splunk Enterprise on your choice of private or public cloud provider. The Operator simplifies scaling and management of Splunk Enterprise by automating administrative workflows using Kubernetes best practices.",
      "csv_name": "splunk-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-17T19:07:09.083000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "splunk-operator",
      "provided_apis": [
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "version": "v1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "version": "v1alpha1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "version": "v1beta1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "version": "v1beta2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "version": "v1beta3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "version": "v2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "version": "v1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "version": "v1alpha1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "version": "v1beta1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "version": "v1beta2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "version": "v1beta3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "version": "v2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "version": "v1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "version": "v1alpha1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "version": "v1beta1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "version": "v1beta2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "version": "v1beta3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "version": "v2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "MonitoringConsole",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "version": "v1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "version": "v1alpha1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "version": "v1beta1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "version": "v1beta2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "version": "v1beta3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "version": "v2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "version": "v1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "version": "v1alpha1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "version": "v1beta1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "version": "v1beta2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "version": "v1beta3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "version": "v2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "version": "v3"
        }
      ],
      "provider": "Splunk Inc.",
      "related_images": [
        {
          "digest": "sha256:adcdf7ae7dc8033b14122404c900361d46a27ec6cf98dcf6e627ecf07fd84c0e",
          "image": "docker.io/splunk/splunk@sha256:adcdf7ae7dc8033b14122404c900361d46a27ec6cf98dcf6e627ecf07fd84c0e",
          "name": "splunk-enterprise"
        },
        {
          "digest": "sha256:c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50",
          "image": "splunk/splunk-operator@sha256:c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50",
          "name": "splunk-operator-c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50",
          "image": "docker.io/splunk/splunk-operator@sha256:c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50",
          "name": "manager"
        },
        {
          "digest": "sha256:adcdf7ae7dc8033b14122404c900361d46a27ec6cf98dcf6e627ecf07fd84c0e",
          "image": "docker.io/splunk/splunk@sha256:adcdf7ae7dc8033b14122404c900361d46a27ec6cf98dcf6e627ecf07fd84c0e",
          "name": "splunk_enterprise"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "62fd3c5eb289bcc7af6803bc",
      "alm_examples": [
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "ClusterMaster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "clustermaster-sample"
          },
          "spec": {}
        },
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "IndexerCluster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "indexercluster-sample"
          },
          "spec": {}
        },
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "LicenseMaster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "licensemaster-sample"
          },
          "spec": {}
        },
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "MonitoringConsole",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "monitoringconsole-sample"
          },
          "spec": {}
        },
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "SearchHeadCluster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "searchheadcluster-sample"
          },
          "spec": {}
        },
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "Standalone",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "standalone-sample"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/splunk/splunk-operator-bundle@sha256:4f570d1c7f3371d0673ac081dad2951ab1b8180a22e141d29684eb625f549c88",
      "bundle_path_digest": "sha256:4f570d1c7f3371d0673ac081dad2951ab1b8180a22e141d29684eb625f549c88",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-17T19:07:10.188000+00:00",
      "csv_description": "# Getting Started with the Splunk Operator for Kubernetes\nThe Splunk Operator for Kubernetes enables you to quickly and easily deploy Splunk Enterprise on your choice of private or public cloud provider. The Operator simplifies scaling and management of Splunk Enterprise by automating administrative workflows using Kubernetes best practices. \n\nThe Splunk Operator runs as a container, and uses the Kubernetes [operator pattern](https://kubernetes.io/docs/concepts/extend-kubernetes/operator/) and [custom resources](https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/) objects to create and manage a scalable and sustainable Splunk Enterprise environment.\n\nThis guide is intended to help new users get up and running with the\nSplunk Operator for Kubernetes. It is divided into the following sections:\n\n* [Known Issues for the Splunk Operator](#known-issues-for-the-splunk-operator)\n* [Prerequisites for the Splunk Operator](#prerequisites-for-the-splunk-operator)\n* [Installing the Splunk Operator](#installing-the-splunk-operator)\n* [Creating Splunk Enterprise Deployments](#creating-a-splunk-enterprise-deployment)\n* [Securing Splunk Deployments in Kubernetes](Security.md)\n* [Contacting Support](#contacting-support)\n\n## Support Resources\n\nSPLUNK SUPPORTED: The Splunk Operator for Kubernetes is a supported method for deploying distributed Splunk Enterprise environments using containers.\n\nCOMMUNITY DEVELOPED: Splunk Operator for Kubernetes is an open source product developed by Splunkers with contributions from the community of partners and customers. The primary reason why Splunk is taking this approach is to push product development closer to those that use and depend upon it. This direct connection will help us all be more successful and move at a rapid pace.\n\nIf you're interested in contributing to the SOK open source project, review the [Contributing to the Project](CONTRIBUTING.md) page.\n\n**Community Support & Discussions on\n[Slack](https://splunk-usergroups.slack.com)** channel #splunk-operator-for-kubernetes\n\n**File Issues or Enhancements in\n[GitHub](https://github.com/splunk/splunk-operator/issues)** splunk/splunk-operator\n\n\n## Known Issues for the Splunk Operator\n\nReview the [Change Log](ChangeLog.md) page for a history of changes in each release.\n\n## Prerequisites for the Splunk Operator\n\n### Supported Kubernetes Versions\n\n- Kubernetes, version 1.16.2+ and later (x86 64-bit only).\n\nThe Splunk Operator should work with any [CNCF certified distribution](https://www.cncf.io/certification/software-conformance/) of Kubernetes. We do not have platform recommendations, but this is a table of platforms that our developers, customers, and partners have used successfully with the Splunk Operator.\n\n<table>\n<tr><td> Splunk Development & Testing Platforms </td><td> Amazon Elastic Kubernetes Service (EKS), Google Kubernetes Engine (GKE) </td></tr>\n<tr><td> Customer Reported Platforms </td><td> Microsoft Azure Kubernetes Service (AKS), Red Hat OpenShift </td></tr>\n<tr><td> Partner Tested Platforms</td><td> HPE Ezmeral</td></tr>\n<tr><td> Other Platforms </td><td>CNCF certified distribution</td></tr>\n</table>\n\n### Splunk Enterprise Compatibility\nEach Splunk Operator release has specific Splunk Enterprise compatibility requirements. Before installing or upgrading the Splunk Operator, review the [Change Log](ChangeLog.md) to verify version compatibility with Splunk Enterprise releases.\n\n### Splunk Apps Installation\n\nApps and add-ons can be installed using the Splunk Operator by following the instructions given at [Installing Splunk Apps](Examples.md#installing-splunk-apps).  Premium apps such as Enterprise Security and IT Service Intelligence are currently not supported.\n\n\n### Docker requirements\nThe Splunk Operator requires these docker images to be present or available to your Kubernetes cluster:\n\n* `splunk/splunk-operator`: The Splunk Operator image built by this repository or the [official release](https://hub.docker.com/r/splunk/splunk-operator) (2.0.0 or later)\n* `splunk/splunk:<version>`: The [Splunk Enterprise image](https://github.com/splunk/docker-splunk) (9.0.0 or later)\n\nAll of the Splunk Enterprise images are publicly available on [Docker Hub](https://hub.docker.com/). If your cluster does not have access to pull from Docker Hub, see the [Required Images Documentation](Images.md) page.\n\nReview the [Change Log](ChangeLog.md) page for a history of changes and Splunk Enterprise compatibility for each release.\n\n### Hardware Resources Requirements\nThe resource guidelines for running production Splunk Enterprise instances in pods through the Splunk Operator are the same as running Splunk Enterprise natively on a supported operating system and file system. Refer to the Splunk Enterprise [Reference Hardware documentation](https://docs.splunk.com/Documentation/Splunk/latest/Capacity/Referencehardware) for additional details.  We would also recommend following the same guidance on [Splunk Enterprise for disabling Transparent Huge Pages (THP)](https://docs.splunk.com/Documentation/Splunk/latest/ReleaseNotes/SplunkandTHP) for the nodes in your Kubernetes cluster.  Please be aware that this may impact performance of other non-Splunk workloads.\n\n#### Minimum Reference Hardware\nBased on Splunk Enterprise [Reference Hardware documentation](https://docs.splunk.com/Documentation/Splunk/latest/Capacity/Referencehardware), a summary of the minimum reference hardware requirements is given below.\n\n| Standalone        | Search Head / Search Head Cluster | Indexer Cluster |\n| ---------- | ------- | ------- |\n| _Each Standalone Pod: 12 Physical CPU Cores or 24 vCPU at 2Ghz or greater per core, 12GB RAM._| _Each Search Head Pod: 16 Physical CPU Cores or 32 vCPU at 2Ghz or greater per core, 12GB RAM._| _Each Indexer Pod: 12 Physical CPU cores, or 24 vCPU at 2GHz or greater per core, 12GB RAM._ |\n\n\n#### _Using Kubernetes Quality of Service Classes_\n\nIn addition to the guidelines provided in the reference hardware, [Kubernetes Quality of Service Classes](https://kubernetes.io/docs/tasks/configure-pod-container/quality-service-pod/)  can be used to configure CPU/Mem resources allocations that map to your _service level objectives_. For further information on utilizing Kubernetes Quality of Service (QoS) classes, see the table below:\n\n\n| QoS        | Summary| Description |\n| ---------- | ------- | ------- |\n| _Guaranteed_ | _CPU/Mem ```requests``` = CPU/Mem ```limits```_    | _When the CPU and memory  ```requests``` and ```limits``` values are equal, the pod is given a QoS class of Guaranteed. This level of service is recommended for Splunk Enterprise ___production environments___._ |\n| _Burstable_ | _CPU/Mem ```requests``` < CPU/Mem ```limits```_  | _When the CPU and memory  ```requests``` value is set lower than the ```limits``` the pod is given a QoS class of Burstable. This level of service is useful in a user acceptance testing ___(UAT) environment___, where the pods run with minimum resources, and Kubernetes allocates additional resources depending on usage._|\n| _BestEffort_ | _No CPU/Mem ```requests``` or ```limits``` are set_ | _When the ```requests``` or ```limits``` values are not set, the pod is given a QoS class of BestEffort. This level of service is sufficient for ___testing, or a small development task___._ |\n\nExamples on how to implement these QoS are given at [Examples of Guaranteed and Burstable QoS](CustomResources.md#examples-of-guaranteed-and-burstable-qos) section.\n\n\n### Storage guidelines\nThe Splunk Operator uses Kubernetes [Persistent Volume Claims](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims) to store all of your Splunk Enterprise configuration (\"$SPLUNK_HOME/etc\" path) and event (\"$SPLUNK_HOME/var\" path) data. If one of the underlying machines fail, Kubernetes will automatically try to recover by restarting the Splunk Enterprise pods on another machine that is able to reuse the same data volumes. This minimizes the maintenance burden on your operations team by reducing the impact of common hardware failures to the equivalent of a service restart. \nThe use of Persistent Volume Claims requires that your cluster is configured to support one or more Kubernetes persistent [Storage Classes](https://kubernetes.io/docs/concepts/storage/storage-classes/). See the [Setting Up a Persistent Storage for Splunk](StorageClass.md) page for more\ninformation.\n\n### What Storage Type To Use?\n\nThe Kubernetes infrastructure must have access to storage that meets or exceeds the recommendations provided in the Splunk Enterprise storage type recommendations at [Reference Hardware documentation - what storage type to use for a given role?](https://docs.splunk.com/Documentation/Splunk/latest/Capacity/Referencehardware#What_storage_type_should_I_use_for_a_role.3F) In summary, Indexers with SmartStore need NVMe or SSD storage to provide the necessary IOPs for a successful Splunk Enterprise environment.\n\n\n### Splunk SmartStore Required\nFor production environments, we are requiring the use of Splunk SmartStore. As a Splunk Enterprise deployment's data volume increases, demand for storage typically outpaces demand for compute resources. [Splunk's SmartStore Feature](https://docs.splunk.com/Documentation/Splunk/latest/Indexer/AboutSmartStore) allows you to manage your indexer storage and compute resources in a ___cost-effective___ manner by scaling those resources separately. SmartStore utilizes a fast storage cache on each indexer node to keep recent data locally available for search and keep other data in a remote object store. Look into the [SmartStore Resource Guide](SmartStore.md) document for configuring and using SmartStore through operator.\n\n## Installing the Splunk Operator\n\nA Kubernetes cluster administrator can install and start the Splunk Operator for specific namespace by running:\n```\nkubectl apply -f https://github.com/splunk/splunk-operator/releases/download/2.0.0/splunk-operator-namespace.yaml\n```\n\nA Kubernetes cluster administrator can install and start the Splunk Operator for cluster-wide by running:\n```\nkubectl apply -f https://github.com/splunk/splunk-operator/releases/download/2.0.0/splunk-operator-cluster.yaml\n```\n\nThe [Advanced Installation Instructions](Install.md) page offers guidance for advanced configurations, including the use of private image registries, installation at cluster scope, and installing the Splunk Operator as a user who is not a Kubernetes administrator. Users of Red Hat OpenShift should review the [Red Hat OpenShift](OpenShift.md) page.\n\nThe [Advanced Installation Instructions](Install.md) page offers guidance for advanced configurations, including the use of private image registries, installation at cluster scope, and installing the Splunk Operator as a user who is not a Kubernetes administrator. Users of Red Hat OpenShift should review the [Red Hat OpenShift](OpenShift.md) page.\n\n*Note: We recommended that the Splunk Enterprise Docker image is copied to a private registry, or directly onto your Kubernetes workers before creating large Splunk Enterprise deployments. See the [Required Images Documentation](Images.md) page, and the [Advanced Installation Instructions](Install.md) page for guidance on working with copies of the Docker images.*\n\nAfter the Splunk Operator starts, you'll see a single pod running within your current namespace:\n```\n$ kubectl get pods\nNAME                               READY   STATUS    RESTARTS   AGE\nsplunk-operator-75f5d4d85b-8pshn   1/1     Running   0          5s\n```\n## Upgrading the Splunk Operator\n\nFor information on upgrading the Splunk Operator, see the [How to upgrade Splunk Operator and Splunk Enterprise Deployments](SplunkOperatorUpgrade.md) page.\n\n## Creating a Splunk Enterprise deployment\n\nThe `Standalone` custom resource is used to create a single instance deployment of Splunk Enterprise. For example:\n\n1. Run the command to create a deployment named \u201cs1\u201d:\n\n\n```yaml\ncat <<EOF | kubectl apply -n splunk-operator -f -\napiVersion: enterprise.splunk.com/v3\nkind: Standalone\nmetadata:\n  name: s1\n  finalizers:\n  - enterprise.splunk.com/delete-pvc\nEOF\n```\n\n**The `enterprise.splunk.com/delete-pvc` finalizer is optional, and tells the Splunk Operator to remove any Kubernetes [Persistent Volumes](https://kubernetes.io/docs/concepts/storage/persistent-volumes/) associated with the instance if you delete the pod.**\n\nWithin a few minutes, you'll see new pods running in your namespace:\n\n```\n$ kubectl get pods\nNAME                                   READY   STATUS    RESTARTS   AGE\nsplunk-operator-7c5599546c-wt4xl        1/1    Running   0          11h\nsplunk-s1-standalone-0                  1/1    Running   0          45s\n```\n\n*Note: if your shell prints a `%` at the end, leave that out when you copy the output.*\n\n2. You can use a simple network port forward to open port 8000 for Splunk Web access:\n\n```\nkubectl port-forward splunk-s1-standalone-0 8000\n```\n\n3. Get your passwords for the namespace. The Splunk Enterprise passwords used in the namespace are generated automatically. To learn how to find and read the passwords, see the [Reading global kubernetes secret object](Examples.md#reading-global-kubernetes-secret-object) page.\n\n\n4. Log into Splunk Enterprise at http://localhost:8000 using the `admin` account with the password.\n\n5. To delete your standalone deployment, run:\n\n```\nkubectl delete standalone s1\n``` \n\nThe `Standalone` custom resource is just one of the resources the Splunk Operator provides. You can find more custom resources and the parameters they support on the [Custom Resource Guide](CustomResources.md) page.\n\nFor additional deployment examples, including Splunk Enterprise clusters, see the \n[Configuring Splunk Enterprise Deployments](Examples.md) page.\n\nFor additional guidance on making Splunk Enterprise ports accessible outside of Kubernetes, see the [Configuring Ingress](Ingress.md) page.\n\n## Contacting Support\nIf you are a Splunk Enterprise customer with a valid support entitlement contract and have a Splunk-related question, you can open a support case on the https://www.splunk.com/ support portal.\"\n",
      "csv_display_name": "Splunk Operator",
      "csv_metadata_description": "The Splunk Operator for Kubernetes enables you to quickly and easily deploy Splunk Enterprise on your choice of private or public cloud provider. The Operator simplifies scaling and management of Splunk Enterprise by automating administrative workflows using Kubernetes best practices.",
      "csv_name": "splunk-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-17T19:07:10.188000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "splunk-operator",
      "provided_apis": [
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "version": "v1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "version": "v1alpha1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "version": "v1beta1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "version": "v1beta2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "version": "v1beta3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "version": "v2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "version": "v1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "version": "v1alpha1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "version": "v1beta1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "version": "v1beta2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "version": "v1beta3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "version": "v2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "version": "v1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "version": "v1alpha1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "version": "v1beta1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "version": "v1beta2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "version": "v1beta3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "version": "v2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "MonitoringConsole",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "version": "v1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "version": "v1alpha1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "version": "v1beta1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "version": "v1beta2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "version": "v1beta3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "version": "v2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "version": "v1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "version": "v1alpha1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "version": "v1beta1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "version": "v1beta2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "version": "v1beta3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "version": "v2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "version": "v3"
        }
      ],
      "provider": "Splunk Inc.",
      "related_images": [
        {
          "digest": "sha256:adcdf7ae7dc8033b14122404c900361d46a27ec6cf98dcf6e627ecf07fd84c0e",
          "image": "docker.io/splunk/splunk@sha256:adcdf7ae7dc8033b14122404c900361d46a27ec6cf98dcf6e627ecf07fd84c0e",
          "name": "splunk-enterprise"
        },
        {
          "digest": "sha256:c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50",
          "image": "splunk/splunk-operator@sha256:c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50",
          "name": "splunk-operator-c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50",
          "image": "docker.io/splunk/splunk-operator@sha256:c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50",
          "name": "manager"
        },
        {
          "digest": "sha256:adcdf7ae7dc8033b14122404c900361d46a27ec6cf98dcf6e627ecf07fd84c0e",
          "image": "docker.io/splunk/splunk@sha256:adcdf7ae7dc8033b14122404c900361d46a27ec6cf98dcf6e627ecf07fd84c0e",
          "name": "splunk_enterprise"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "62fd3c96e07d71e4beb7a8f8",
      "alm_examples": [
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "ClusterMaster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "clustermaster-sample"
          },
          "spec": {}
        },
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "IndexerCluster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "indexercluster-sample"
          },
          "spec": {}
        },
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "LicenseMaster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "licensemaster-sample"
          },
          "spec": {}
        },
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "MonitoringConsole",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "monitoringconsole-sample"
          },
          "spec": {}
        },
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "SearchHeadCluster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "searchheadcluster-sample"
          },
          "spec": {}
        },
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "Standalone",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "standalone-sample"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/splunk/splunk-operator-bundle@sha256:4f570d1c7f3371d0673ac081dad2951ab1b8180a22e141d29684eb625f549c88",
      "bundle_path_digest": "sha256:4f570d1c7f3371d0673ac081dad2951ab1b8180a22e141d29684eb625f549c88",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-17T19:08:06.261000+00:00",
      "csv_description": "# Getting Started with the Splunk Operator for Kubernetes\nThe Splunk Operator for Kubernetes enables you to quickly and easily deploy Splunk Enterprise on your choice of private or public cloud provider. The Operator simplifies scaling and management of Splunk Enterprise by automating administrative workflows using Kubernetes best practices. \n\nThe Splunk Operator runs as a container, and uses the Kubernetes [operator pattern](https://kubernetes.io/docs/concepts/extend-kubernetes/operator/) and [custom resources](https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/) objects to create and manage a scalable and sustainable Splunk Enterprise environment.\n\nThis guide is intended to help new users get up and running with the\nSplunk Operator for Kubernetes. It is divided into the following sections:\n\n* [Known Issues for the Splunk Operator](#known-issues-for-the-splunk-operator)\n* [Prerequisites for the Splunk Operator](#prerequisites-for-the-splunk-operator)\n* [Installing the Splunk Operator](#installing-the-splunk-operator)\n* [Creating Splunk Enterprise Deployments](#creating-a-splunk-enterprise-deployment)\n* [Securing Splunk Deployments in Kubernetes](Security.md)\n* [Contacting Support](#contacting-support)\n\n## Support Resources\n\nSPLUNK SUPPORTED: The Splunk Operator for Kubernetes is a supported method for deploying distributed Splunk Enterprise environments using containers.\n\nCOMMUNITY DEVELOPED: Splunk Operator for Kubernetes is an open source product developed by Splunkers with contributions from the community of partners and customers. The primary reason why Splunk is taking this approach is to push product development closer to those that use and depend upon it. This direct connection will help us all be more successful and move at a rapid pace.\n\nIf you're interested in contributing to the SOK open source project, review the [Contributing to the Project](CONTRIBUTING.md) page.\n\n**Community Support & Discussions on\n[Slack](https://splunk-usergroups.slack.com)** channel #splunk-operator-for-kubernetes\n\n**File Issues or Enhancements in\n[GitHub](https://github.com/splunk/splunk-operator/issues)** splunk/splunk-operator\n\n\n## Known Issues for the Splunk Operator\n\nReview the [Change Log](ChangeLog.md) page for a history of changes in each release.\n\n## Prerequisites for the Splunk Operator\n\n### Supported Kubernetes Versions\n\n- Kubernetes, version 1.16.2+ and later (x86 64-bit only).\n\nThe Splunk Operator should work with any [CNCF certified distribution](https://www.cncf.io/certification/software-conformance/) of Kubernetes. We do not have platform recommendations, but this is a table of platforms that our developers, customers, and partners have used successfully with the Splunk Operator.\n\n<table>\n<tr><td> Splunk Development & Testing Platforms </td><td> Amazon Elastic Kubernetes Service (EKS), Google Kubernetes Engine (GKE) </td></tr>\n<tr><td> Customer Reported Platforms </td><td> Microsoft Azure Kubernetes Service (AKS), Red Hat OpenShift </td></tr>\n<tr><td> Partner Tested Platforms</td><td> HPE Ezmeral</td></tr>\n<tr><td> Other Platforms </td><td>CNCF certified distribution</td></tr>\n</table>\n\n### Splunk Enterprise Compatibility\nEach Splunk Operator release has specific Splunk Enterprise compatibility requirements. Before installing or upgrading the Splunk Operator, review the [Change Log](ChangeLog.md) to verify version compatibility with Splunk Enterprise releases.\n\n### Splunk Apps Installation\n\nApps and add-ons can be installed using the Splunk Operator by following the instructions given at [Installing Splunk Apps](Examples.md#installing-splunk-apps).  Premium apps such as Enterprise Security and IT Service Intelligence are currently not supported.\n\n\n### Docker requirements\nThe Splunk Operator requires these docker images to be present or available to your Kubernetes cluster:\n\n* `splunk/splunk-operator`: The Splunk Operator image built by this repository or the [official release](https://hub.docker.com/r/splunk/splunk-operator) (2.0.0 or later)\n* `splunk/splunk:<version>`: The [Splunk Enterprise image](https://github.com/splunk/docker-splunk) (9.0.0 or later)\n\nAll of the Splunk Enterprise images are publicly available on [Docker Hub](https://hub.docker.com/). If your cluster does not have access to pull from Docker Hub, see the [Required Images Documentation](Images.md) page.\n\nReview the [Change Log](ChangeLog.md) page for a history of changes and Splunk Enterprise compatibility for each release.\n\n### Hardware Resources Requirements\nThe resource guidelines for running production Splunk Enterprise instances in pods through the Splunk Operator are the same as running Splunk Enterprise natively on a supported operating system and file system. Refer to the Splunk Enterprise [Reference Hardware documentation](https://docs.splunk.com/Documentation/Splunk/latest/Capacity/Referencehardware) for additional details.  We would also recommend following the same guidance on [Splunk Enterprise for disabling Transparent Huge Pages (THP)](https://docs.splunk.com/Documentation/Splunk/latest/ReleaseNotes/SplunkandTHP) for the nodes in your Kubernetes cluster.  Please be aware that this may impact performance of other non-Splunk workloads.\n\n#### Minimum Reference Hardware\nBased on Splunk Enterprise [Reference Hardware documentation](https://docs.splunk.com/Documentation/Splunk/latest/Capacity/Referencehardware), a summary of the minimum reference hardware requirements is given below.\n\n| Standalone        | Search Head / Search Head Cluster | Indexer Cluster |\n| ---------- | ------- | ------- |\n| _Each Standalone Pod: 12 Physical CPU Cores or 24 vCPU at 2Ghz or greater per core, 12GB RAM._| _Each Search Head Pod: 16 Physical CPU Cores or 32 vCPU at 2Ghz or greater per core, 12GB RAM._| _Each Indexer Pod: 12 Physical CPU cores, or 24 vCPU at 2GHz or greater per core, 12GB RAM._ |\n\n\n#### _Using Kubernetes Quality of Service Classes_\n\nIn addition to the guidelines provided in the reference hardware, [Kubernetes Quality of Service Classes](https://kubernetes.io/docs/tasks/configure-pod-container/quality-service-pod/)  can be used to configure CPU/Mem resources allocations that map to your _service level objectives_. For further information on utilizing Kubernetes Quality of Service (QoS) classes, see the table below:\n\n\n| QoS        | Summary| Description |\n| ---------- | ------- | ------- |\n| _Guaranteed_ | _CPU/Mem ```requests``` = CPU/Mem ```limits```_    | _When the CPU and memory  ```requests``` and ```limits``` values are equal, the pod is given a QoS class of Guaranteed. This level of service is recommended for Splunk Enterprise ___production environments___._ |\n| _Burstable_ | _CPU/Mem ```requests``` < CPU/Mem ```limits```_  | _When the CPU and memory  ```requests``` value is set lower than the ```limits``` the pod is given a QoS class of Burstable. This level of service is useful in a user acceptance testing ___(UAT) environment___, where the pods run with minimum resources, and Kubernetes allocates additional resources depending on usage._|\n| _BestEffort_ | _No CPU/Mem ```requests``` or ```limits``` are set_ | _When the ```requests``` or ```limits``` values are not set, the pod is given a QoS class of BestEffort. This level of service is sufficient for ___testing, or a small development task___._ |\n\nExamples on how to implement these QoS are given at [Examples of Guaranteed and Burstable QoS](CustomResources.md#examples-of-guaranteed-and-burstable-qos) section.\n\n\n### Storage guidelines\nThe Splunk Operator uses Kubernetes [Persistent Volume Claims](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims) to store all of your Splunk Enterprise configuration (\"$SPLUNK_HOME/etc\" path) and event (\"$SPLUNK_HOME/var\" path) data. If one of the underlying machines fail, Kubernetes will automatically try to recover by restarting the Splunk Enterprise pods on another machine that is able to reuse the same data volumes. This minimizes the maintenance burden on your operations team by reducing the impact of common hardware failures to the equivalent of a service restart. \nThe use of Persistent Volume Claims requires that your cluster is configured to support one or more Kubernetes persistent [Storage Classes](https://kubernetes.io/docs/concepts/storage/storage-classes/). See the [Setting Up a Persistent Storage for Splunk](StorageClass.md) page for more\ninformation.\n\n### What Storage Type To Use?\n\nThe Kubernetes infrastructure must have access to storage that meets or exceeds the recommendations provided in the Splunk Enterprise storage type recommendations at [Reference Hardware documentation - what storage type to use for a given role?](https://docs.splunk.com/Documentation/Splunk/latest/Capacity/Referencehardware#What_storage_type_should_I_use_for_a_role.3F) In summary, Indexers with SmartStore need NVMe or SSD storage to provide the necessary IOPs for a successful Splunk Enterprise environment.\n\n\n### Splunk SmartStore Required\nFor production environments, we are requiring the use of Splunk SmartStore. As a Splunk Enterprise deployment's data volume increases, demand for storage typically outpaces demand for compute resources. [Splunk's SmartStore Feature](https://docs.splunk.com/Documentation/Splunk/latest/Indexer/AboutSmartStore) allows you to manage your indexer storage and compute resources in a ___cost-effective___ manner by scaling those resources separately. SmartStore utilizes a fast storage cache on each indexer node to keep recent data locally available for search and keep other data in a remote object store. Look into the [SmartStore Resource Guide](SmartStore.md) document for configuring and using SmartStore through operator.\n\n## Installing the Splunk Operator\n\nA Kubernetes cluster administrator can install and start the Splunk Operator for specific namespace by running:\n```\nkubectl apply -f https://github.com/splunk/splunk-operator/releases/download/2.0.0/splunk-operator-namespace.yaml\n```\n\nA Kubernetes cluster administrator can install and start the Splunk Operator for cluster-wide by running:\n```\nkubectl apply -f https://github.com/splunk/splunk-operator/releases/download/2.0.0/splunk-operator-cluster.yaml\n```\n\nThe [Advanced Installation Instructions](Install.md) page offers guidance for advanced configurations, including the use of private image registries, installation at cluster scope, and installing the Splunk Operator as a user who is not a Kubernetes administrator. Users of Red Hat OpenShift should review the [Red Hat OpenShift](OpenShift.md) page.\n\nThe [Advanced Installation Instructions](Install.md) page offers guidance for advanced configurations, including the use of private image registries, installation at cluster scope, and installing the Splunk Operator as a user who is not a Kubernetes administrator. Users of Red Hat OpenShift should review the [Red Hat OpenShift](OpenShift.md) page.\n\n*Note: We recommended that the Splunk Enterprise Docker image is copied to a private registry, or directly onto your Kubernetes workers before creating large Splunk Enterprise deployments. See the [Required Images Documentation](Images.md) page, and the [Advanced Installation Instructions](Install.md) page for guidance on working with copies of the Docker images.*\n\nAfter the Splunk Operator starts, you'll see a single pod running within your current namespace:\n```\n$ kubectl get pods\nNAME                               READY   STATUS    RESTARTS   AGE\nsplunk-operator-75f5d4d85b-8pshn   1/1     Running   0          5s\n```\n## Upgrading the Splunk Operator\n\nFor information on upgrading the Splunk Operator, see the [How to upgrade Splunk Operator and Splunk Enterprise Deployments](SplunkOperatorUpgrade.md) page.\n\n## Creating a Splunk Enterprise deployment\n\nThe `Standalone` custom resource is used to create a single instance deployment of Splunk Enterprise. For example:\n\n1. Run the command to create a deployment named \u201cs1\u201d:\n\n\n```yaml\ncat <<EOF | kubectl apply -n splunk-operator -f -\napiVersion: enterprise.splunk.com/v3\nkind: Standalone\nmetadata:\n  name: s1\n  finalizers:\n  - enterprise.splunk.com/delete-pvc\nEOF\n```\n\n**The `enterprise.splunk.com/delete-pvc` finalizer is optional, and tells the Splunk Operator to remove any Kubernetes [Persistent Volumes](https://kubernetes.io/docs/concepts/storage/persistent-volumes/) associated with the instance if you delete the pod.**\n\nWithin a few minutes, you'll see new pods running in your namespace:\n\n```\n$ kubectl get pods\nNAME                                   READY   STATUS    RESTARTS   AGE\nsplunk-operator-7c5599546c-wt4xl        1/1    Running   0          11h\nsplunk-s1-standalone-0                  1/1    Running   0          45s\n```\n\n*Note: if your shell prints a `%` at the end, leave that out when you copy the output.*\n\n2. You can use a simple network port forward to open port 8000 for Splunk Web access:\n\n```\nkubectl port-forward splunk-s1-standalone-0 8000\n```\n\n3. Get your passwords for the namespace. The Splunk Enterprise passwords used in the namespace are generated automatically. To learn how to find and read the passwords, see the [Reading global kubernetes secret object](Examples.md#reading-global-kubernetes-secret-object) page.\n\n\n4. Log into Splunk Enterprise at http://localhost:8000 using the `admin` account with the password.\n\n5. To delete your standalone deployment, run:\n\n```\nkubectl delete standalone s1\n``` \n\nThe `Standalone` custom resource is just one of the resources the Splunk Operator provides. You can find more custom resources and the parameters they support on the [Custom Resource Guide](CustomResources.md) page.\n\nFor additional deployment examples, including Splunk Enterprise clusters, see the \n[Configuring Splunk Enterprise Deployments](Examples.md) page.\n\nFor additional guidance on making Splunk Enterprise ports accessible outside of Kubernetes, see the [Configuring Ingress](Ingress.md) page.\n\n## Contacting Support\nIf you are a Splunk Enterprise customer with a valid support entitlement contract and have a Splunk-related question, you can open a support case on the https://www.splunk.com/ support portal.\"\n",
      "csv_display_name": "Splunk Operator",
      "csv_metadata_description": "The Splunk Operator for Kubernetes enables you to quickly and easily deploy Splunk Enterprise on your choice of private or public cloud provider. The Operator simplifies scaling and management of Splunk Enterprise by automating administrative workflows using Kubernetes best practices.",
      "csv_name": "splunk-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-17T19:08:06.261000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "splunk-operator",
      "provided_apis": [
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "plural": "searchheadclusters",
          "version": "v1alpha1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "plural": "standalones",
          "version": "v1beta1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "plural": "clustermasters",
          "version": "v2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "plural": "indexerclusters",
          "version": "v1beta1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "plural": "indexerclusters",
          "version": "v1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "plural": "clustermasters",
          "version": "v1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "plural": "standalones",
          "version": "v1alpha1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "plural": "clustermasters",
          "version": "v1beta2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "plural": "licensemasters",
          "version": "v1beta2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "MonitoringConsole",
          "plural": "monitoringconsoles",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "plural": "licensemasters",
          "version": "v2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "plural": "searchheadclusters",
          "version": "v1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "plural": "searchheadclusters",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "plural": "licensemasters",
          "version": "v1beta3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "plural": "indexerclusters",
          "version": "v1beta2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "plural": "clustermasters",
          "version": "v1beta1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "plural": "licensemasters",
          "version": "v1beta1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "plural": "clustermasters",
          "version": "v1beta3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "plural": "searchheadclusters",
          "version": "v1beta1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "plural": "licensemasters",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "plural": "licensemasters",
          "version": "v1alpha1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "plural": "standalones",
          "version": "v1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "plural": "indexerclusters",
          "version": "v1beta3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "plural": "standalones",
          "version": "v1beta2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "plural": "standalones",
          "version": "v2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "plural": "indexerclusters",
          "version": "v2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "plural": "searchheadclusters",
          "version": "v1beta2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "plural": "searchheadclusters",
          "version": "v1beta3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "plural": "standalones",
          "version": "v1beta3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "plural": "clustermasters",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "plural": "clustermasters",
          "version": "v1alpha1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "plural": "searchheadclusters",
          "version": "v2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "plural": "indexerclusters",
          "version": "v1alpha1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "plural": "standalones",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "plural": "indexerclusters",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "plural": "licensemasters",
          "version": "v1"
        }
      ],
      "provider": "Splunk Inc.",
      "related_images": [
        {
          "digest": "sha256:adcdf7ae7dc8033b14122404c900361d46a27ec6cf98dcf6e627ecf07fd84c0e",
          "image": "docker.io/splunk/splunk@sha256:adcdf7ae7dc8033b14122404c900361d46a27ec6cf98dcf6e627ecf07fd84c0e",
          "name": "splunk-enterprise"
        },
        {
          "digest": "sha256:c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50",
          "image": "splunk/splunk-operator@sha256:c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50",
          "name": "splunk-operator-c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50",
          "image": "docker.io/splunk/splunk-operator@sha256:c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50",
          "name": "manager"
        },
        {
          "digest": "sha256:adcdf7ae7dc8033b14122404c900361d46a27ec6cf98dcf6e627ecf07fd84c0e",
          "image": "docker.io/splunk/splunk@sha256:adcdf7ae7dc8033b14122404c900361d46a27ec6cf98dcf6e627ecf07fd84c0e",
          "name": "splunk_enterprise"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "62fd3c96b289bcc7af680401",
      "alm_examples": [
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "ClusterMaster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "clustermaster-sample"
          },
          "spec": {}
        },
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "IndexerCluster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "indexercluster-sample"
          },
          "spec": {}
        },
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "LicenseMaster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "licensemaster-sample"
          },
          "spec": {}
        },
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "MonitoringConsole",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "monitoringconsole-sample"
          },
          "spec": {}
        },
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "SearchHeadCluster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "searchheadcluster-sample"
          },
          "spec": {}
        },
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "Standalone",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "standalone-sample"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/splunk/splunk-operator-bundle@sha256:4f570d1c7f3371d0673ac081dad2951ab1b8180a22e141d29684eb625f549c88",
      "bundle_path_digest": "sha256:4f570d1c7f3371d0673ac081dad2951ab1b8180a22e141d29684eb625f549c88",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-08-17T19:08:06.820000+00:00",
      "csv_description": "# Getting Started with the Splunk Operator for Kubernetes\nThe Splunk Operator for Kubernetes enables you to quickly and easily deploy Splunk Enterprise on your choice of private or public cloud provider. The Operator simplifies scaling and management of Splunk Enterprise by automating administrative workflows using Kubernetes best practices. \n\nThe Splunk Operator runs as a container, and uses the Kubernetes [operator pattern](https://kubernetes.io/docs/concepts/extend-kubernetes/operator/) and [custom resources](https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/) objects to create and manage a scalable and sustainable Splunk Enterprise environment.\n\nThis guide is intended to help new users get up and running with the\nSplunk Operator for Kubernetes. It is divided into the following sections:\n\n* [Known Issues for the Splunk Operator](#known-issues-for-the-splunk-operator)\n* [Prerequisites for the Splunk Operator](#prerequisites-for-the-splunk-operator)\n* [Installing the Splunk Operator](#installing-the-splunk-operator)\n* [Creating Splunk Enterprise Deployments](#creating-a-splunk-enterprise-deployment)\n* [Securing Splunk Deployments in Kubernetes](Security.md)\n* [Contacting Support](#contacting-support)\n\n## Support Resources\n\nSPLUNK SUPPORTED: The Splunk Operator for Kubernetes is a supported method for deploying distributed Splunk Enterprise environments using containers.\n\nCOMMUNITY DEVELOPED: Splunk Operator for Kubernetes is an open source product developed by Splunkers with contributions from the community of partners and customers. The primary reason why Splunk is taking this approach is to push product development closer to those that use and depend upon it. This direct connection will help us all be more successful and move at a rapid pace.\n\nIf you're interested in contributing to the SOK open source project, review the [Contributing to the Project](CONTRIBUTING.md) page.\n\n**Community Support & Discussions on\n[Slack](https://splunk-usergroups.slack.com)** channel #splunk-operator-for-kubernetes\n\n**File Issues or Enhancements in\n[GitHub](https://github.com/splunk/splunk-operator/issues)** splunk/splunk-operator\n\n\n## Known Issues for the Splunk Operator\n\nReview the [Change Log](ChangeLog.md) page for a history of changes in each release.\n\n## Prerequisites for the Splunk Operator\n\n### Supported Kubernetes Versions\n\n- Kubernetes, version 1.16.2+ and later (x86 64-bit only).\n\nThe Splunk Operator should work with any [CNCF certified distribution](https://www.cncf.io/certification/software-conformance/) of Kubernetes. We do not have platform recommendations, but this is a table of platforms that our developers, customers, and partners have used successfully with the Splunk Operator.\n\n<table>\n<tr><td> Splunk Development & Testing Platforms </td><td> Amazon Elastic Kubernetes Service (EKS), Google Kubernetes Engine (GKE) </td></tr>\n<tr><td> Customer Reported Platforms </td><td> Microsoft Azure Kubernetes Service (AKS), Red Hat OpenShift </td></tr>\n<tr><td> Partner Tested Platforms</td><td> HPE Ezmeral</td></tr>\n<tr><td> Other Platforms </td><td>CNCF certified distribution</td></tr>\n</table>\n\n### Splunk Enterprise Compatibility\nEach Splunk Operator release has specific Splunk Enterprise compatibility requirements. Before installing or upgrading the Splunk Operator, review the [Change Log](ChangeLog.md) to verify version compatibility with Splunk Enterprise releases.\n\n### Splunk Apps Installation\n\nApps and add-ons can be installed using the Splunk Operator by following the instructions given at [Installing Splunk Apps](Examples.md#installing-splunk-apps).  Premium apps such as Enterprise Security and IT Service Intelligence are currently not supported.\n\n\n### Docker requirements\nThe Splunk Operator requires these docker images to be present or available to your Kubernetes cluster:\n\n* `splunk/splunk-operator`: The Splunk Operator image built by this repository or the [official release](https://hub.docker.com/r/splunk/splunk-operator) (2.0.0 or later)\n* `splunk/splunk:<version>`: The [Splunk Enterprise image](https://github.com/splunk/docker-splunk) (9.0.0 or later)\n\nAll of the Splunk Enterprise images are publicly available on [Docker Hub](https://hub.docker.com/). If your cluster does not have access to pull from Docker Hub, see the [Required Images Documentation](Images.md) page.\n\nReview the [Change Log](ChangeLog.md) page for a history of changes and Splunk Enterprise compatibility for each release.\n\n### Hardware Resources Requirements\nThe resource guidelines for running production Splunk Enterprise instances in pods through the Splunk Operator are the same as running Splunk Enterprise natively on a supported operating system and file system. Refer to the Splunk Enterprise [Reference Hardware documentation](https://docs.splunk.com/Documentation/Splunk/latest/Capacity/Referencehardware) for additional details.  We would also recommend following the same guidance on [Splunk Enterprise for disabling Transparent Huge Pages (THP)](https://docs.splunk.com/Documentation/Splunk/latest/ReleaseNotes/SplunkandTHP) for the nodes in your Kubernetes cluster.  Please be aware that this may impact performance of other non-Splunk workloads.\n\n#### Minimum Reference Hardware\nBased on Splunk Enterprise [Reference Hardware documentation](https://docs.splunk.com/Documentation/Splunk/latest/Capacity/Referencehardware), a summary of the minimum reference hardware requirements is given below.\n\n| Standalone        | Search Head / Search Head Cluster | Indexer Cluster |\n| ---------- | ------- | ------- |\n| _Each Standalone Pod: 12 Physical CPU Cores or 24 vCPU at 2Ghz or greater per core, 12GB RAM._| _Each Search Head Pod: 16 Physical CPU Cores or 32 vCPU at 2Ghz or greater per core, 12GB RAM._| _Each Indexer Pod: 12 Physical CPU cores, or 24 vCPU at 2GHz or greater per core, 12GB RAM._ |\n\n\n#### _Using Kubernetes Quality of Service Classes_\n\nIn addition to the guidelines provided in the reference hardware, [Kubernetes Quality of Service Classes](https://kubernetes.io/docs/tasks/configure-pod-container/quality-service-pod/)  can be used to configure CPU/Mem resources allocations that map to your _service level objectives_. For further information on utilizing Kubernetes Quality of Service (QoS) classes, see the table below:\n\n\n| QoS        | Summary| Description |\n| ---------- | ------- | ------- |\n| _Guaranteed_ | _CPU/Mem ```requests``` = CPU/Mem ```limits```_    | _When the CPU and memory  ```requests``` and ```limits``` values are equal, the pod is given a QoS class of Guaranteed. This level of service is recommended for Splunk Enterprise ___production environments___._ |\n| _Burstable_ | _CPU/Mem ```requests``` < CPU/Mem ```limits```_  | _When the CPU and memory  ```requests``` value is set lower than the ```limits``` the pod is given a QoS class of Burstable. This level of service is useful in a user acceptance testing ___(UAT) environment___, where the pods run with minimum resources, and Kubernetes allocates additional resources depending on usage._|\n| _BestEffort_ | _No CPU/Mem ```requests``` or ```limits``` are set_ | _When the ```requests``` or ```limits``` values are not set, the pod is given a QoS class of BestEffort. This level of service is sufficient for ___testing, or a small development task___._ |\n\nExamples on how to implement these QoS are given at [Examples of Guaranteed and Burstable QoS](CustomResources.md#examples-of-guaranteed-and-burstable-qos) section.\n\n\n### Storage guidelines\nThe Splunk Operator uses Kubernetes [Persistent Volume Claims](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims) to store all of your Splunk Enterprise configuration (\"$SPLUNK_HOME/etc\" path) and event (\"$SPLUNK_HOME/var\" path) data. If one of the underlying machines fail, Kubernetes will automatically try to recover by restarting the Splunk Enterprise pods on another machine that is able to reuse the same data volumes. This minimizes the maintenance burden on your operations team by reducing the impact of common hardware failures to the equivalent of a service restart. \nThe use of Persistent Volume Claims requires that your cluster is configured to support one or more Kubernetes persistent [Storage Classes](https://kubernetes.io/docs/concepts/storage/storage-classes/). See the [Setting Up a Persistent Storage for Splunk](StorageClass.md) page for more\ninformation.\n\n### What Storage Type To Use?\n\nThe Kubernetes infrastructure must have access to storage that meets or exceeds the recommendations provided in the Splunk Enterprise storage type recommendations at [Reference Hardware documentation - what storage type to use for a given role?](https://docs.splunk.com/Documentation/Splunk/latest/Capacity/Referencehardware#What_storage_type_should_I_use_for_a_role.3F) In summary, Indexers with SmartStore need NVMe or SSD storage to provide the necessary IOPs for a successful Splunk Enterprise environment.\n\n\n### Splunk SmartStore Required\nFor production environments, we are requiring the use of Splunk SmartStore. As a Splunk Enterprise deployment's data volume increases, demand for storage typically outpaces demand for compute resources. [Splunk's SmartStore Feature](https://docs.splunk.com/Documentation/Splunk/latest/Indexer/AboutSmartStore) allows you to manage your indexer storage and compute resources in a ___cost-effective___ manner by scaling those resources separately. SmartStore utilizes a fast storage cache on each indexer node to keep recent data locally available for search and keep other data in a remote object store. Look into the [SmartStore Resource Guide](SmartStore.md) document for configuring and using SmartStore through operator.\n\n## Installing the Splunk Operator\n\nA Kubernetes cluster administrator can install and start the Splunk Operator for specific namespace by running:\n```\nkubectl apply -f https://github.com/splunk/splunk-operator/releases/download/2.0.0/splunk-operator-namespace.yaml\n```\n\nA Kubernetes cluster administrator can install and start the Splunk Operator for cluster-wide by running:\n```\nkubectl apply -f https://github.com/splunk/splunk-operator/releases/download/2.0.0/splunk-operator-cluster.yaml\n```\n\nThe [Advanced Installation Instructions](Install.md) page offers guidance for advanced configurations, including the use of private image registries, installation at cluster scope, and installing the Splunk Operator as a user who is not a Kubernetes administrator. Users of Red Hat OpenShift should review the [Red Hat OpenShift](OpenShift.md) page.\n\nThe [Advanced Installation Instructions](Install.md) page offers guidance for advanced configurations, including the use of private image registries, installation at cluster scope, and installing the Splunk Operator as a user who is not a Kubernetes administrator. Users of Red Hat OpenShift should review the [Red Hat OpenShift](OpenShift.md) page.\n\n*Note: We recommended that the Splunk Enterprise Docker image is copied to a private registry, or directly onto your Kubernetes workers before creating large Splunk Enterprise deployments. See the [Required Images Documentation](Images.md) page, and the [Advanced Installation Instructions](Install.md) page for guidance on working with copies of the Docker images.*\n\nAfter the Splunk Operator starts, you'll see a single pod running within your current namespace:\n```\n$ kubectl get pods\nNAME                               READY   STATUS    RESTARTS   AGE\nsplunk-operator-75f5d4d85b-8pshn   1/1     Running   0          5s\n```\n## Upgrading the Splunk Operator\n\nFor information on upgrading the Splunk Operator, see the [How to upgrade Splunk Operator and Splunk Enterprise Deployments](SplunkOperatorUpgrade.md) page.\n\n## Creating a Splunk Enterprise deployment\n\nThe `Standalone` custom resource is used to create a single instance deployment of Splunk Enterprise. For example:\n\n1. Run the command to create a deployment named \u201cs1\u201d:\n\n\n```yaml\ncat <<EOF | kubectl apply -n splunk-operator -f -\napiVersion: enterprise.splunk.com/v3\nkind: Standalone\nmetadata:\n  name: s1\n  finalizers:\n  - enterprise.splunk.com/delete-pvc\nEOF\n```\n\n**The `enterprise.splunk.com/delete-pvc` finalizer is optional, and tells the Splunk Operator to remove any Kubernetes [Persistent Volumes](https://kubernetes.io/docs/concepts/storage/persistent-volumes/) associated with the instance if you delete the pod.**\n\nWithin a few minutes, you'll see new pods running in your namespace:\n\n```\n$ kubectl get pods\nNAME                                   READY   STATUS    RESTARTS   AGE\nsplunk-operator-7c5599546c-wt4xl        1/1    Running   0          11h\nsplunk-s1-standalone-0                  1/1    Running   0          45s\n```\n\n*Note: if your shell prints a `%` at the end, leave that out when you copy the output.*\n\n2. You can use a simple network port forward to open port 8000 for Splunk Web access:\n\n```\nkubectl port-forward splunk-s1-standalone-0 8000\n```\n\n3. Get your passwords for the namespace. The Splunk Enterprise passwords used in the namespace are generated automatically. To learn how to find and read the passwords, see the [Reading global kubernetes secret object](Examples.md#reading-global-kubernetes-secret-object) page.\n\n\n4. Log into Splunk Enterprise at http://localhost:8000 using the `admin` account with the password.\n\n5. To delete your standalone deployment, run:\n\n```\nkubectl delete standalone s1\n``` \n\nThe `Standalone` custom resource is just one of the resources the Splunk Operator provides. You can find more custom resources and the parameters they support on the [Custom Resource Guide](CustomResources.md) page.\n\nFor additional deployment examples, including Splunk Enterprise clusters, see the \n[Configuring Splunk Enterprise Deployments](Examples.md) page.\n\nFor additional guidance on making Splunk Enterprise ports accessible outside of Kubernetes, see the [Configuring Ingress](Ingress.md) page.\n\n## Contacting Support\nIf you are a Splunk Enterprise customer with a valid support entitlement contract and have a Splunk-related question, you can open a support case on the https://www.splunk.com/ support portal.\"\n",
      "csv_display_name": "Splunk Operator",
      "csv_metadata_description": "The Splunk Operator for Kubernetes enables you to quickly and easily deploy Splunk Enterprise on your choice of private or public cloud provider. The Operator simplifies scaling and management of Splunk Enterprise by automating administrative workflows using Kubernetes best practices.",
      "csv_name": "splunk-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-17T19:08:06.820000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "splunk-operator",
      "provided_apis": [
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "plural": "searchheadclusters",
          "version": "v1alpha1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "plural": "standalones",
          "version": "v1beta1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "plural": "clustermasters",
          "version": "v2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "plural": "indexerclusters",
          "version": "v1beta1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "plural": "indexerclusters",
          "version": "v1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "plural": "clustermasters",
          "version": "v1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "plural": "standalones",
          "version": "v1alpha1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "plural": "clustermasters",
          "version": "v1beta2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "plural": "licensemasters",
          "version": "v1beta2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "MonitoringConsole",
          "plural": "monitoringconsoles",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "plural": "licensemasters",
          "version": "v2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "plural": "searchheadclusters",
          "version": "v1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "plural": "searchheadclusters",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "plural": "licensemasters",
          "version": "v1beta3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "plural": "indexerclusters",
          "version": "v1beta2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "plural": "clustermasters",
          "version": "v1beta1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "plural": "licensemasters",
          "version": "v1beta1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "plural": "clustermasters",
          "version": "v1beta3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "plural": "searchheadclusters",
          "version": "v1beta1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "plural": "licensemasters",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "plural": "licensemasters",
          "version": "v1alpha1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "plural": "standalones",
          "version": "v1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "plural": "indexerclusters",
          "version": "v1beta3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "plural": "standalones",
          "version": "v1beta2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "plural": "standalones",
          "version": "v2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "plural": "indexerclusters",
          "version": "v2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "plural": "searchheadclusters",
          "version": "v1beta2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "plural": "searchheadclusters",
          "version": "v1beta3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "plural": "standalones",
          "version": "v1beta3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "plural": "clustermasters",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "plural": "clustermasters",
          "version": "v1alpha1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "plural": "searchheadclusters",
          "version": "v2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "plural": "indexerclusters",
          "version": "v1alpha1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "plural": "standalones",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "plural": "indexerclusters",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "plural": "licensemasters",
          "version": "v1"
        }
      ],
      "provider": "Splunk Inc.",
      "related_images": [
        {
          "digest": "sha256:adcdf7ae7dc8033b14122404c900361d46a27ec6cf98dcf6e627ecf07fd84c0e",
          "image": "docker.io/splunk/splunk@sha256:adcdf7ae7dc8033b14122404c900361d46a27ec6cf98dcf6e627ecf07fd84c0e",
          "name": "splunk-enterprise"
        },
        {
          "digest": "sha256:c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50",
          "image": "splunk/splunk-operator@sha256:c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50",
          "name": "splunk-operator-c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50",
          "image": "docker.io/splunk/splunk-operator@sha256:c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50",
          "name": "manager"
        },
        {
          "digest": "sha256:adcdf7ae7dc8033b14122404c900361d46a27ec6cf98dcf6e627ecf07fd84c0e",
          "image": "docker.io/splunk/splunk@sha256:adcdf7ae7dc8033b14122404c900361d46a27ec6cf98dcf6e627ecf07fd84c0e",
          "name": "splunk_enterprise"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "62fd3d0eb289bcc7af68041c",
      "alm_examples": [
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "ClusterMaster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "clustermaster-sample"
          },
          "spec": {}
        },
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "IndexerCluster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "indexercluster-sample"
          },
          "spec": {}
        },
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "LicenseMaster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "licensemaster-sample"
          },
          "spec": {}
        },
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "MonitoringConsole",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "monitoringconsole-sample"
          },
          "spec": {}
        },
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "SearchHeadCluster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "searchheadcluster-sample"
          },
          "spec": {}
        },
        {
          "api_version": "enterprise.splunk.com/v3",
          "kind": "Standalone",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "standalone-sample"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/splunk/splunk-operator-bundle@sha256:4f570d1c7f3371d0673ac081dad2951ab1b8180a22e141d29684eb625f549c88",
      "bundle_path_digest": "sha256:4f570d1c7f3371d0673ac081dad2951ab1b8180a22e141d29684eb625f549c88",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-08-17T19:10:06.513000+00:00",
      "csv_description": "# Getting Started with the Splunk Operator for Kubernetes\nThe Splunk Operator for Kubernetes enables you to quickly and easily deploy Splunk Enterprise on your choice of private or public cloud provider. The Operator simplifies scaling and management of Splunk Enterprise by automating administrative workflows using Kubernetes best practices. \n\nThe Splunk Operator runs as a container, and uses the Kubernetes [operator pattern](https://kubernetes.io/docs/concepts/extend-kubernetes/operator/) and [custom resources](https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/) objects to create and manage a scalable and sustainable Splunk Enterprise environment.\n\nThis guide is intended to help new users get up and running with the\nSplunk Operator for Kubernetes. It is divided into the following sections:\n\n* [Known Issues for the Splunk Operator](#known-issues-for-the-splunk-operator)\n* [Prerequisites for the Splunk Operator](#prerequisites-for-the-splunk-operator)\n* [Installing the Splunk Operator](#installing-the-splunk-operator)\n* [Creating Splunk Enterprise Deployments](#creating-a-splunk-enterprise-deployment)\n* [Securing Splunk Deployments in Kubernetes](Security.md)\n* [Contacting Support](#contacting-support)\n\n## Support Resources\n\nSPLUNK SUPPORTED: The Splunk Operator for Kubernetes is a supported method for deploying distributed Splunk Enterprise environments using containers.\n\nCOMMUNITY DEVELOPED: Splunk Operator for Kubernetes is an open source product developed by Splunkers with contributions from the community of partners and customers. The primary reason why Splunk is taking this approach is to push product development closer to those that use and depend upon it. This direct connection will help us all be more successful and move at a rapid pace.\n\nIf you're interested in contributing to the SOK open source project, review the [Contributing to the Project](CONTRIBUTING.md) page.\n\n**Community Support & Discussions on\n[Slack](https://splunk-usergroups.slack.com)** channel #splunk-operator-for-kubernetes\n\n**File Issues or Enhancements in\n[GitHub](https://github.com/splunk/splunk-operator/issues)** splunk/splunk-operator\n\n\n## Known Issues for the Splunk Operator\n\nReview the [Change Log](ChangeLog.md) page for a history of changes in each release.\n\n## Prerequisites for the Splunk Operator\n\n### Supported Kubernetes Versions\n\n- Kubernetes, version 1.16.2+ and later (x86 64-bit only).\n\nThe Splunk Operator should work with any [CNCF certified distribution](https://www.cncf.io/certification/software-conformance/) of Kubernetes. We do not have platform recommendations, but this is a table of platforms that our developers, customers, and partners have used successfully with the Splunk Operator.\n\n<table>\n<tr><td> Splunk Development & Testing Platforms </td><td> Amazon Elastic Kubernetes Service (EKS), Google Kubernetes Engine (GKE) </td></tr>\n<tr><td> Customer Reported Platforms </td><td> Microsoft Azure Kubernetes Service (AKS), Red Hat OpenShift </td></tr>\n<tr><td> Partner Tested Platforms</td><td> HPE Ezmeral</td></tr>\n<tr><td> Other Platforms </td><td>CNCF certified distribution</td></tr>\n</table>\n\n### Splunk Enterprise Compatibility\nEach Splunk Operator release has specific Splunk Enterprise compatibility requirements. Before installing or upgrading the Splunk Operator, review the [Change Log](ChangeLog.md) to verify version compatibility with Splunk Enterprise releases.\n\n### Splunk Apps Installation\n\nApps and add-ons can be installed using the Splunk Operator by following the instructions given at [Installing Splunk Apps](Examples.md#installing-splunk-apps).  Premium apps such as Enterprise Security and IT Service Intelligence are currently not supported.\n\n\n### Docker requirements\nThe Splunk Operator requires these docker images to be present or available to your Kubernetes cluster:\n\n* `splunk/splunk-operator`: The Splunk Operator image built by this repository or the [official release](https://hub.docker.com/r/splunk/splunk-operator) (2.0.0 or later)\n* `splunk/splunk:<version>`: The [Splunk Enterprise image](https://github.com/splunk/docker-splunk) (9.0.0 or later)\n\nAll of the Splunk Enterprise images are publicly available on [Docker Hub](https://hub.docker.com/). If your cluster does not have access to pull from Docker Hub, see the [Required Images Documentation](Images.md) page.\n\nReview the [Change Log](ChangeLog.md) page for a history of changes and Splunk Enterprise compatibility for each release.\n\n### Hardware Resources Requirements\nThe resource guidelines for running production Splunk Enterprise instances in pods through the Splunk Operator are the same as running Splunk Enterprise natively on a supported operating system and file system. Refer to the Splunk Enterprise [Reference Hardware documentation](https://docs.splunk.com/Documentation/Splunk/latest/Capacity/Referencehardware) for additional details.  We would also recommend following the same guidance on [Splunk Enterprise for disabling Transparent Huge Pages (THP)](https://docs.splunk.com/Documentation/Splunk/latest/ReleaseNotes/SplunkandTHP) for the nodes in your Kubernetes cluster.  Please be aware that this may impact performance of other non-Splunk workloads.\n\n#### Minimum Reference Hardware\nBased on Splunk Enterprise [Reference Hardware documentation](https://docs.splunk.com/Documentation/Splunk/latest/Capacity/Referencehardware), a summary of the minimum reference hardware requirements is given below.\n\n| Standalone        | Search Head / Search Head Cluster | Indexer Cluster |\n| ---------- | ------- | ------- |\n| _Each Standalone Pod: 12 Physical CPU Cores or 24 vCPU at 2Ghz or greater per core, 12GB RAM._| _Each Search Head Pod: 16 Physical CPU Cores or 32 vCPU at 2Ghz or greater per core, 12GB RAM._| _Each Indexer Pod: 12 Physical CPU cores, or 24 vCPU at 2GHz or greater per core, 12GB RAM._ |\n\n\n#### _Using Kubernetes Quality of Service Classes_\n\nIn addition to the guidelines provided in the reference hardware, [Kubernetes Quality of Service Classes](https://kubernetes.io/docs/tasks/configure-pod-container/quality-service-pod/)  can be used to configure CPU/Mem resources allocations that map to your _service level objectives_. For further information on utilizing Kubernetes Quality of Service (QoS) classes, see the table below:\n\n\n| QoS        | Summary| Description |\n| ---------- | ------- | ------- |\n| _Guaranteed_ | _CPU/Mem ```requests``` = CPU/Mem ```limits```_    | _When the CPU and memory  ```requests``` and ```limits``` values are equal, the pod is given a QoS class of Guaranteed. This level of service is recommended for Splunk Enterprise ___production environments___._ |\n| _Burstable_ | _CPU/Mem ```requests``` < CPU/Mem ```limits```_  | _When the CPU and memory  ```requests``` value is set lower than the ```limits``` the pod is given a QoS class of Burstable. This level of service is useful in a user acceptance testing ___(UAT) environment___, where the pods run with minimum resources, and Kubernetes allocates additional resources depending on usage._|\n| _BestEffort_ | _No CPU/Mem ```requests``` or ```limits``` are set_ | _When the ```requests``` or ```limits``` values are not set, the pod is given a QoS class of BestEffort. This level of service is sufficient for ___testing, or a small development task___._ |\n\nExamples on how to implement these QoS are given at [Examples of Guaranteed and Burstable QoS](CustomResources.md#examples-of-guaranteed-and-burstable-qos) section.\n\n\n### Storage guidelines\nThe Splunk Operator uses Kubernetes [Persistent Volume Claims](https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims) to store all of your Splunk Enterprise configuration (\"$SPLUNK_HOME/etc\" path) and event (\"$SPLUNK_HOME/var\" path) data. If one of the underlying machines fail, Kubernetes will automatically try to recover by restarting the Splunk Enterprise pods on another machine that is able to reuse the same data volumes. This minimizes the maintenance burden on your operations team by reducing the impact of common hardware failures to the equivalent of a service restart. \nThe use of Persistent Volume Claims requires that your cluster is configured to support one or more Kubernetes persistent [Storage Classes](https://kubernetes.io/docs/concepts/storage/storage-classes/). See the [Setting Up a Persistent Storage for Splunk](StorageClass.md) page for more\ninformation.\n\n### What Storage Type To Use?\n\nThe Kubernetes infrastructure must have access to storage that meets or exceeds the recommendations provided in the Splunk Enterprise storage type recommendations at [Reference Hardware documentation - what storage type to use for a given role?](https://docs.splunk.com/Documentation/Splunk/latest/Capacity/Referencehardware#What_storage_type_should_I_use_for_a_role.3F) In summary, Indexers with SmartStore need NVMe or SSD storage to provide the necessary IOPs for a successful Splunk Enterprise environment.\n\n\n### Splunk SmartStore Required\nFor production environments, we are requiring the use of Splunk SmartStore. As a Splunk Enterprise deployment's data volume increases, demand for storage typically outpaces demand for compute resources. [Splunk's SmartStore Feature](https://docs.splunk.com/Documentation/Splunk/latest/Indexer/AboutSmartStore) allows you to manage your indexer storage and compute resources in a ___cost-effective___ manner by scaling those resources separately. SmartStore utilizes a fast storage cache on each indexer node to keep recent data locally available for search and keep other data in a remote object store. Look into the [SmartStore Resource Guide](SmartStore.md) document for configuring and using SmartStore through operator.\n\n## Installing the Splunk Operator\n\nA Kubernetes cluster administrator can install and start the Splunk Operator for specific namespace by running:\n```\nkubectl apply -f https://github.com/splunk/splunk-operator/releases/download/2.0.0/splunk-operator-namespace.yaml\n```\n\nA Kubernetes cluster administrator can install and start the Splunk Operator for cluster-wide by running:\n```\nkubectl apply -f https://github.com/splunk/splunk-operator/releases/download/2.0.0/splunk-operator-cluster.yaml\n```\n\nThe [Advanced Installation Instructions](Install.md) page offers guidance for advanced configurations, including the use of private image registries, installation at cluster scope, and installing the Splunk Operator as a user who is not a Kubernetes administrator. Users of Red Hat OpenShift should review the [Red Hat OpenShift](OpenShift.md) page.\n\nThe [Advanced Installation Instructions](Install.md) page offers guidance for advanced configurations, including the use of private image registries, installation at cluster scope, and installing the Splunk Operator as a user who is not a Kubernetes administrator. Users of Red Hat OpenShift should review the [Red Hat OpenShift](OpenShift.md) page.\n\n*Note: We recommended that the Splunk Enterprise Docker image is copied to a private registry, or directly onto your Kubernetes workers before creating large Splunk Enterprise deployments. See the [Required Images Documentation](Images.md) page, and the [Advanced Installation Instructions](Install.md) page for guidance on working with copies of the Docker images.*\n\nAfter the Splunk Operator starts, you'll see a single pod running within your current namespace:\n```\n$ kubectl get pods\nNAME                               READY   STATUS    RESTARTS   AGE\nsplunk-operator-75f5d4d85b-8pshn   1/1     Running   0          5s\n```\n## Upgrading the Splunk Operator\n\nFor information on upgrading the Splunk Operator, see the [How to upgrade Splunk Operator and Splunk Enterprise Deployments](SplunkOperatorUpgrade.md) page.\n\n## Creating a Splunk Enterprise deployment\n\nThe `Standalone` custom resource is used to create a single instance deployment of Splunk Enterprise. For example:\n\n1. Run the command to create a deployment named \u201cs1\u201d:\n\n\n```yaml\ncat <<EOF | kubectl apply -n splunk-operator -f -\napiVersion: enterprise.splunk.com/v3\nkind: Standalone\nmetadata:\n  name: s1\n  finalizers:\n  - enterprise.splunk.com/delete-pvc\nEOF\n```\n\n**The `enterprise.splunk.com/delete-pvc` finalizer is optional, and tells the Splunk Operator to remove any Kubernetes [Persistent Volumes](https://kubernetes.io/docs/concepts/storage/persistent-volumes/) associated with the instance if you delete the pod.**\n\nWithin a few minutes, you'll see new pods running in your namespace:\n\n```\n$ kubectl get pods\nNAME                                   READY   STATUS    RESTARTS   AGE\nsplunk-operator-7c5599546c-wt4xl        1/1    Running   0          11h\nsplunk-s1-standalone-0                  1/1    Running   0          45s\n```\n\n*Note: if your shell prints a `%` at the end, leave that out when you copy the output.*\n\n2. You can use a simple network port forward to open port 8000 for Splunk Web access:\n\n```\nkubectl port-forward splunk-s1-standalone-0 8000\n```\n\n3. Get your passwords for the namespace. The Splunk Enterprise passwords used in the namespace are generated automatically. To learn how to find and read the passwords, see the [Reading global kubernetes secret object](Examples.md#reading-global-kubernetes-secret-object) page.\n\n\n4. Log into Splunk Enterprise at http://localhost:8000 using the `admin` account with the password.\n\n5. To delete your standalone deployment, run:\n\n```\nkubectl delete standalone s1\n``` \n\nThe `Standalone` custom resource is just one of the resources the Splunk Operator provides. You can find more custom resources and the parameters they support on the [Custom Resource Guide](CustomResources.md) page.\n\nFor additional deployment examples, including Splunk Enterprise clusters, see the \n[Configuring Splunk Enterprise Deployments](Examples.md) page.\n\nFor additional guidance on making Splunk Enterprise ports accessible outside of Kubernetes, see the [Configuring Ingress](Ingress.md) page.\n\n## Contacting Support\nIf you are a Splunk Enterprise customer with a valid support entitlement contract and have a Splunk-related question, you can open a support case on the https://www.splunk.com/ support portal.\"\n",
      "csv_display_name": "Splunk Operator",
      "csv_metadata_description": "The Splunk Operator for Kubernetes enables you to quickly and easily deploy Splunk Enterprise on your choice of private or public cloud provider. The Operator simplifies scaling and management of Splunk Enterprise by automating administrative workflows using Kubernetes best practices.",
      "csv_name": "splunk-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-17T19:10:06.513000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "splunk-operator",
      "provided_apis": [
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "plural": "standalones",
          "version": "v1beta1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "plural": "indexerclusters",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "plural": "indexerclusters",
          "version": "v1beta2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "plural": "searchheadclusters",
          "version": "v2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "plural": "standalones",
          "version": "v1beta3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "plural": "searchheadclusters",
          "version": "v1beta3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "plural": "clustermasters",
          "version": "v1beta2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "plural": "standalones",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "plural": "standalones",
          "version": "v2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "plural": "clustermasters",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "plural": "searchheadclusters",
          "version": "v1beta1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "plural": "licensemasters",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "MonitoringConsole",
          "plural": "monitoringconsoles",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "plural": "standalones",
          "version": "v1alpha1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "plural": "indexerclusters",
          "version": "v1alpha1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "plural": "licensemasters",
          "version": "v2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "plural": "clustermasters",
          "version": "v2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "plural": "indexerclusters",
          "version": "v2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "plural": "standalones",
          "version": "v1beta2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "plural": "licensemasters",
          "version": "v1beta2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "plural": "searchheadclusters",
          "version": "v1beta2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "plural": "indexerclusters",
          "version": "v1beta3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "plural": "licensemasters",
          "version": "v1beta3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "plural": "searchheadclusters",
          "version": "v1alpha1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "plural": "standalones",
          "version": "v1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "plural": "searchheadclusters",
          "version": "v3"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "plural": "licensemasters",
          "version": "v1beta1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "plural": "licensemasters",
          "version": "v1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "plural": "searchheadclusters",
          "version": "v1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "plural": "clustermasters",
          "version": "v1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "plural": "clustermasters",
          "version": "v1beta1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "plural": "indexerclusters",
          "version": "v1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "plural": "licensemasters",
          "version": "v1alpha1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "plural": "clustermasters",
          "version": "v1alpha1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "plural": "indexerclusters",
          "version": "v1beta1"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "ClusterMaster",
          "plural": "clustermasters",
          "version": "v1beta3"
        }
      ],
      "provider": "Splunk Inc.",
      "related_images": [
        {
          "digest": "sha256:adcdf7ae7dc8033b14122404c900361d46a27ec6cf98dcf6e627ecf07fd84c0e",
          "image": "docker.io/splunk/splunk@sha256:adcdf7ae7dc8033b14122404c900361d46a27ec6cf98dcf6e627ecf07fd84c0e",
          "name": "splunk-enterprise"
        },
        {
          "digest": "sha256:c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50",
          "image": "splunk/splunk-operator@sha256:c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50",
          "name": "splunk-operator-c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50",
          "image": "docker.io/splunk/splunk-operator@sha256:c4e0d314622699496f675760aad314520d050a66627fdf33e1e21fa28ca85d50",
          "name": "manager"
        },
        {
          "digest": "sha256:adcdf7ae7dc8033b14122404c900361d46a27ec6cf98dcf6e627ecf07fd84c0e",
          "image": "docker.io/splunk/splunk@sha256:adcdf7ae7dc8033b14122404c900361d46a27ec6cf98dcf6e627ecf07fd84c0e",
          "name": "splunk_enterprise"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.0.0",
      "version_original": "2.0.0"
    }
  ],
  "page": 46,
  "page_size": 100,
  "total": 4817
}

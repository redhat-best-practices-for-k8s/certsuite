{
  "data": [
    {
      "_id": "619fd7f13e9240fca360f32a",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-35.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "bundle_path_digest": "sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2021-11-25T18:37:37.673000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:14:14.873000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6b2879ece978e1a8e6a09be7b5f67dd3c9b25f9efbf92852af55ddabc0328c67",
          "image": "redislabs/operator@sha256:6b2879ece978e1a8e6a09be7b5f67dd3c9b25f9efbf92852af55ddabc0328c67",
          "name": "operator-6b2879ece978e1a8e6a09be7b5f67dd3c9b25f9efbf92852af55ddabc0328c67-annotation"
        },
        {
          "digest": "sha256:6b2879ece978e1a8e6a09be7b5f67dd3c9b25f9efbf92852af55ddabc0328c67",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:6b2879ece978e1a8e6a09be7b5f67dd3c9b25f9efbf92852af55ddabc0328c67",
          "name": "redis-enterprise-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.6-6",
      "version_original": "6.0.6-6"
    },
    {
      "_id": "619fd94527e166330707d76e",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:d778e1d70bee8e4a17cac2ea9b04c82c747fd1d1f3859e846626f581f58f1ae3",
      "bundle_path_digest": "sha256:d778e1d70bee8e4a17cac2ea9b04c82c747fd1d1f3859e846626f581f58f1ae3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-25T18:43:17.286000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.22",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:49:21.568000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:f839152251e021fe0ae1d4bd9e5374c2a2fb3c01da4381ba4c01afcbaadbf8bd",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:f839152251e021fe0ae1d4bd9e5374c2a2fb3c01da4381ba4c01afcbaadbf8bd",
          "name": "joget"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.22",
      "version_original": "0.0.22"
    },
    {
      "_id": "619fda9027e166330707d76f",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-97.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "bundle_path_digest": "sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2021-11-25T18:48:48.136000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-12a",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:15:56.474000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator-f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730-annotation"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "admission"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.20-12a",
      "version_original": "6.0.20-12a"
    },
    {
      "_id": "619fdae0bfd4a5234d595e80",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.12-57.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "bundle_path_digest": "sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2021-11-25T18:50:08.356000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.12-5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:20:35.653000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator-b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f-annotation"
        },
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.12-5",
      "version_original": "6.0.12-5"
    },
    {
      "_id": "619fdb113e9240fca360f32b",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "bundle_path_digest": "sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2021-11-25T18:50:57.785000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:16:37.702000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "image": "redislabs/operator@sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "name": "operator-fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2-annotation"
        },
        {
          "digest": "sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "name": "redis-enterprise-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.6-11",
      "version_original": "6.0.6-11"
    },
    {
      "_id": "619ff2dc27e166330707d772",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "bundle_path_digest": "sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "capabilities": [
        ""
      ],
      "channel_name": "6.2.8",
      "creation_date": "2021-11-25T20:32:28.306000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T16:58:50.751000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.8-1",
      "version_original": "6.0.8-1"
    },
    {
      "_id": "619ff38b27e166330707d773",
      "alm_examples": [
        {
          "api_version": "sources.triggermesh.com/v1alpha1",
          "kind": "AwsEventSources",
          "metadata": {
            "name": "awseventsources-sample"
          },
          "spec": {
            "adapters": {
              "awscloudwatch": {
                "image": "registry.connect.redhat.com/triggermesh/awscloudwatchsource@sha256:847b8546933d83c91cb7068609ad4dfbd87370da610bebb0ca6a1cc8efe0202c"
              },
              "awscloudwatchlogs": {
                "image": "registry.connect.redhat.com/triggermesh/awscloudwatchlogssource@sha256:962fe3695f53f7083adce89acaffbba8d01f4d8e91312adfa4ac3a13485cd179"
              },
              "awscodecommit": {
                "image": "registry.connect.redhat.com/triggermesh/awscodecommitsource@sha256:d3ab78147e535e224fcae5ede8ddfb8a269e343121105869213b78d257a3e1cb"
              },
              "awscognitoidentity": {
                "image": "registry.connect.redhat.com/triggermesh/awscognitoidentitysource@sha256:8da3202e7cff988c76878aa40e00796d9ac82748d39c6c0e66eb8def281766cf"
              },
              "awscognitouserpool": {
                "image": "registry.connect.redhat.com/triggermesh/awscognitouserpoolsource@sha256:09d6f609f7aee720bddb196702a0116e8dca785fbbf5337a97edee4bfd44cdb4"
              },
              "awsdynamodb": {
                "image": "registry.connect.redhat.com/triggermesh/awsdynamodbsource@sha256:168890a69107536cc8e7332e1ce4cf90f7427a8c4dca7520d5237da58b98a700"
              },
              "awskinesis": {
                "image": "registry.connect.redhat.com/triggermesh/awskinesissource@sha256:8b3984455cd08add91242fe5dedda6f234f644d80256ee42c407fc9fabfa8a4f"
              },
              "awsperformanceinsights": {
                "image": "registry.connect.redhat.com/triggermesh/awsperformanceinsightssource@sha256:a5aa8d5c568e41ddcc9b718507b77aff4a4db1586a07f658972da912eca09931"
              },
              "awssns": {
                "image": "registry.connect.redhat.com/triggermesh/awssnssource@sha256:e300042681697794716c6cf1a13e41c4e5b440ed513202b74db2b1aef1d9c8c6"
              },
              "awssqs": {
                "image": "registry.connect.redhat.com/triggermesh/awssqssource@sha256:34cc1484951328499246a98e6d2277c3554e22b390b17c34449af4eeba076153"
              }
            },
            "affinity": {},
            "fullnameOverride": "",
            "image": {
              "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-controller@sha256:a806b330ed4ba33a2d3544210d5f40c1657509cf054530c9f6d38789e6b6d5c3",
              "pullPolicy": "IfNotPresent"
            },
            "imagePullSecrets": [],
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "rbac": {
              "create": true
            },
            "resources": {
              "requests": {
                "cpu": "20m",
                "memory": "20Mi"
              }
            },
            "securityContext": {},
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator-bundle@sha256:2d8c64b21eb17b985ae3aff6ddb62966cad14720f34a0ff685899dfb370e07de",
      "bundle_path_digest": "sha256:2d8c64b21eb17b985ae3aff6ddb62966cad14720f34a0ff685899dfb370e07de",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-11-25T20:35:23.792000+00:00",
      "csv_description": "The TriggerMesh AWS Sources operator provides a collection of API's that enables to consume events that happen in your AWS services and send them to containers, microservices and functions running in your cluster.\n\n## Prerequisites\n\nThe TriggerMesh AWS Sources operator depends on the Knative API's provided by the Red Hat OpenShift Serverless operator. For more information, see the documentation on [Installing OpenShift Serverless](https://access.redhat.com/documentation/en-us/openshift_container_platform/4.3/html/serverless_applications/installing-openshift-serverless-1).\n\n## Supported Event Sources\n\n- **AWS CodeCommit event source**: Consume messages from a AWS CodeCommit repository and send them as CloudEvents to an arbitrary event sink.\n- **AWS Cognito Identity event source**: Consume messages from a AWS Cognito identity pool and send them as CloudEvents to an arbitrary event sink.\n- **AWS Cognito UserPool event source**: Consume messages from a AWS Cognito identity pool and send them as CloudEvents to an arbitrary event sink.\n- **AWS DynamoDB event source**: Consume messages from a AWS DynamoDB stream and send them as CloudEvents to an arbitrary event sink.\n- **AWS Kinesis event source**: Consume messages from a AWS Kinesis data stream and send them as CloudEvents to an arbitrary event sink.\n- **AWS SNS event source**: Subscribes to messages from a AWS SNS topic and send them as CloudEvents to an arbitrary event sink.\n- **AWS SQS event source**: Consume messages from a AWS SQS queue and sends them as CloudEvents to an arbitrary event sink.\n\n## Installation\n\nSee the documentation on [Installing TriggerMesh AWS Sources](https://github.com/triggermesh/aws-sources-operator/blob/master/README.md)\n\n## Getting Started\n\nSee the documentation on [Getting Started](https://github.com/triggermesh/aws-event-sources/blob/master/README.md)\n",
      "csv_display_name": "AWS Sources Operator",
      "csv_metadata_description": "Provides a collection of API's that enables to consume events that happen in your AWS services and send them to containers, microservices and functions running in your cluster.",
      "csv_name": "aws-sources-operator.v0.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:27:02.369000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "aws-event-sources-operator-certified",
      "provided_apis": [
        {
          "group": "sources.triggermesh.com",
          "kind": "AwsEventSources",
          "plural": "awseventsources",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:d39e74ed4d40b6c8443521480cb8690ebef2fc9d6d9e826e429d5a7b228aab5f",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator@sha256:d39e74ed4d40b6c8443521480cb8690ebef2fc9d6d9e826e429d5a7b228aab5f",
          "name": "aws-sources-operator"
        },
        {
          "digest": "sha256:a806b330ed4ba33a2d3544210d5f40c1657509cf054530c9f6d38789e6b6d5c3",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-controller@sha256:a806b330ed4ba33a2d3544210d5f40c1657509cf054530c9f6d38789e6b6d5c3",
          "name": "controller"
        },
        {
          "digest": "sha256:962fe3695f53f7083adce89acaffbba8d01f4d8e91312adfa4ac3a13485cd179",
          "image": "registry.connect.redhat.com/triggermesh/awscloudwatchlogssource@sha256:962fe3695f53f7083adce89acaffbba8d01f4d8e91312adfa4ac3a13485cd179",
          "name": "awscodecommit-cloudwatchlogs-adapter"
        },
        {
          "digest": "sha256:847b8546933d83c91cb7068609ad4dfbd87370da610bebb0ca6a1cc8efe0202c",
          "image": "registry.connect.redhat.com/triggermesh/awscloudwatchsource@sha256:847b8546933d83c91cb7068609ad4dfbd87370da610bebb0ca6a1cc8efe0202c",
          "name": "awscodecommit-cloudwatch-adapter"
        },
        {
          "digest": "sha256:d3ab78147e535e224fcae5ede8ddfb8a269e343121105869213b78d257a3e1cb",
          "image": "registry.connect.redhat.com/triggermesh/awscodecommitsource@sha256:d3ab78147e535e224fcae5ede8ddfb8a269e343121105869213b78d257a3e1cb",
          "name": "awscodecommit-adapter"
        },
        {
          "digest": "sha256:8da3202e7cff988c76878aa40e00796d9ac82748d39c6c0e66eb8def281766cf",
          "image": "registry.connect.redhat.com/triggermesh/awscognitoidentitysource@sha256:8da3202e7cff988c76878aa40e00796d9ac82748d39c6c0e66eb8def281766cf",
          "name": "awscognitoidentity-adapter"
        },
        {
          "digest": "sha256:09d6f609f7aee720bddb196702a0116e8dca785fbbf5337a97edee4bfd44cdb4",
          "image": "registry.connect.redhat.com/triggermesh/awscognitouserpoolsource@sha256:09d6f609f7aee720bddb196702a0116e8dca785fbbf5337a97edee4bfd44cdb4",
          "name": "awscognitouserpool-adapter"
        },
        {
          "digest": "sha256:168890a69107536cc8e7332e1ce4cf90f7427a8c4dca7520d5237da58b98a700",
          "image": "registry.connect.redhat.com/triggermesh/awsdynamodbsource@sha256:168890a69107536cc8e7332e1ce4cf90f7427a8c4dca7520d5237da58b98a700",
          "name": "awsdynamodb-adapter"
        },
        {
          "digest": "sha256:8b3984455cd08add91242fe5dedda6f234f644d80256ee42c407fc9fabfa8a4f",
          "image": "registry.connect.redhat.com/triggermesh/awskinesissource@sha256:8b3984455cd08add91242fe5dedda6f234f644d80256ee42c407fc9fabfa8a4f",
          "name": "awskinesis-adapter"
        },
        {
          "digest": "sha256:a5aa8d5c568e41ddcc9b718507b77aff4a4db1586a07f658972da912eca09931",
          "image": "registry.connect.redhat.com/triggermesh/awsperformanceinsightssource@sha256:a5aa8d5c568e41ddcc9b718507b77aff4a4db1586a07f658972da912eca09931",
          "name": "awskinesis-performanceinsights-adapter"
        },
        {
          "digest": "sha256:e300042681697794716c6cf1a13e41c4e5b440ed513202b74db2b1aef1d9c8c6",
          "image": "registry.connect.redhat.com/triggermesh/awssnssource@sha256:e300042681697794716c6cf1a13e41c4e5b440ed513202b74db2b1aef1d9c8c6",
          "name": "awssns-adapter"
        },
        {
          "digest": "sha256:34cc1484951328499246a98e6d2277c3554e22b390b17c34449af4eeba076153",
          "image": "registry.connect.redhat.com/triggermesh/awssqssource@sha256:34cc1484951328499246a98e6d2277c3554e22b390b17c34449af4eeba076153",
          "name": "awssqs-adapter"
        },
        {
          "digest": "sha256:d39e74ed4d40b6c8443521480cb8690ebef2fc9d6d9e826e429d5a7b228aab5f",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator@sha256:d39e74ed4d40b6c8443521480cb8690ebef2fc9d6d9e826e429d5a7b228aab5f",
          "name": "aws-event-sources-operator-d39e74ed4d40b6c8443521480cb8690ebef2fc9d6d9e826e429d5a7b228aab5f-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d39e74ed4d40b6c8443521480cb8690ebef2fc9d6d9e826e429d5a7b228aab5f",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator@sha256:d39e74ed4d40b6c8443521480cb8690ebef2fc9d6d9e826e429d5a7b228aab5f",
          "name": "manager"
        },
        {
          "digest": "sha256:a806b330ed4ba33a2d3544210d5f40c1657509cf054530c9f6d38789e6b6d5c3",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-controller@sha256:a806b330ed4ba33a2d3544210d5f40c1657509cf054530c9f6d38789e6b6d5c3",
          "name": "aws-event-sources-controller-a806b330ed4ba33a2d3544210d5f40c1657509cf054530c9f6d38789e6b6d5c3-annotation"
        },
        {
          "digest": "sha256:34cc1484951328499246a98e6d2277c3554e22b390b17c34449af4eeba076153",
          "image": "registry.connect.redhat.com/triggermesh/awssqssource@sha256:34cc1484951328499246a98e6d2277c3554e22b390b17c34449af4eeba076153",
          "name": "awssqssource-34cc1484951328499246a98e6d2277c3554e22b390b17c34449af4eeba076153-annotation"
        },
        {
          "digest": "sha256:e300042681697794716c6cf1a13e41c4e5b440ed513202b74db2b1aef1d9c8c6",
          "image": "registry.connect.redhat.com/triggermesh/awssnssource@sha256:e300042681697794716c6cf1a13e41c4e5b440ed513202b74db2b1aef1d9c8c6",
          "name": "awssnssource-e300042681697794716c6cf1a13e41c4e5b440ed513202b74db2b1aef1d9c8c6-annotation"
        },
        {
          "digest": "sha256:a5aa8d5c568e41ddcc9b718507b77aff4a4db1586a07f658972da912eca09931",
          "image": "registry.connect.redhat.com/triggermesh/awsperformanceinsightssource@sha256:a5aa8d5c568e41ddcc9b718507b77aff4a4db1586a07f658972da912eca09931",
          "name": "awsperformanceinsightssource-a5aa8d5c568e41ddcc9b718507b77aff4a4db1586a07f658972da912eca09931-annotation"
        },
        {
          "digest": "sha256:8b3984455cd08add91242fe5dedda6f234f644d80256ee42c407fc9fabfa8a4f",
          "image": "registry.connect.redhat.com/triggermesh/awskinesissource@sha256:8b3984455cd08add91242fe5dedda6f234f644d80256ee42c407fc9fabfa8a4f",
          "name": "awskinesissource-8b3984455cd08add91242fe5dedda6f234f644d80256ee42c407fc9fabfa8a4f-annotation"
        },
        {
          "digest": "sha256:168890a69107536cc8e7332e1ce4cf90f7427a8c4dca7520d5237da58b98a700",
          "image": "registry.connect.redhat.com/triggermesh/awsdynamodbsource@sha256:168890a69107536cc8e7332e1ce4cf90f7427a8c4dca7520d5237da58b98a700",
          "name": "awsdynamodbsource-168890a69107536cc8e7332e1ce4cf90f7427a8c4dca7520d5237da58b98a700-annotation"
        },
        {
          "digest": "sha256:09d6f609f7aee720bddb196702a0116e8dca785fbbf5337a97edee4bfd44cdb4",
          "image": "registry.connect.redhat.com/triggermesh/awscognitouserpoolsource@sha256:09d6f609f7aee720bddb196702a0116e8dca785fbbf5337a97edee4bfd44cdb4",
          "name": "awscognitouserpoolsource-09d6f609f7aee720bddb196702a0116e8dca785fbbf5337a97edee4bfd44cdb4-annotation"
        },
        {
          "digest": "sha256:8da3202e7cff988c76878aa40e00796d9ac82748d39c6c0e66eb8def281766cf",
          "image": "registry.connect.redhat.com/triggermesh/awscognitoidentitysource@sha256:8da3202e7cff988c76878aa40e00796d9ac82748d39c6c0e66eb8def281766cf",
          "name": "awscognitoidentitysource-8da3202e7cff988c76878aa40e00796d9ac82748d39c6c0e66eb8def281766cf-annotation"
        },
        {
          "digest": "sha256:d3ab78147e535e224fcae5ede8ddfb8a269e343121105869213b78d257a3e1cb",
          "image": "registry.connect.redhat.com/triggermesh/awscodecommitsource@sha256:d3ab78147e535e224fcae5ede8ddfb8a269e343121105869213b78d257a3e1cb",
          "name": "awscodecommitsource-d3ab78147e535e224fcae5ede8ddfb8a269e343121105869213b78d257a3e1cb-annotation"
        },
        {
          "digest": "sha256:962fe3695f53f7083adce89acaffbba8d01f4d8e91312adfa4ac3a13485cd179",
          "image": "registry.connect.redhat.com/triggermesh/awscloudwatchlogssource@sha256:962fe3695f53f7083adce89acaffbba8d01f4d8e91312adfa4ac3a13485cd179",
          "name": "awscloudwatchlogssource-962fe3695f53f7083adce89acaffbba8d01f4d8e91312adfa4ac3a13485cd179-annotation"
        },
        {
          "digest": "sha256:847b8546933d83c91cb7068609ad4dfbd87370da610bebb0ca6a1cc8efe0202c",
          "image": "registry.connect.redhat.com/triggermesh/awscloudwatchsource@sha256:847b8546933d83c91cb7068609ad4dfbd87370da610bebb0ca6a1cc8efe0202c",
          "name": "awscloudwatchsource-847b8546933d83c91cb7068609ad4dfbd87370da610bebb0ca6a1cc8efe0202c-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.4.0",
      "version_original": "0.4.0"
    },
    {
      "_id": "619ff3bac17162a20c1c65ef",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-41.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:cf89cfbb1c39ac9a7fd925f1e8b5bec94535e4eb64dd6e2da102e9f7b44f9f5e",
      "bundle_path_digest": "sha256:cf89cfbb1c39ac9a7fd925f1e8b5bec94535e4eb64dd6e2da102e9f7b44f9f5e",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2021-11-25T20:36:10.857000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:16:29.034000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353",
          "name": "redis-enterprise-operator-f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353-annotation"
        },
        {
          "digest": "sha256:f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f1540374d0f4a6e4a7a2520004cf61eb769b65aa89c7da2cd858946e74b45353",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.2.8-2",
      "version_original": "6.2.8-2"
    },
    {
      "_id": "619ff471c17162a20c1c65f1",
      "alm_examples": [
        {
          "api_version": "sources.triggermesh.com/v1alpha1",
          "kind": "AwsEventSources",
          "metadata": {
            "name": "awseventsources"
          },
          "spec": {
            "adapters": {
              "awscodecommit": {
                "image": "registry.connect.redhat.com/triggermesh/awscodecommitsource@sha256:c362c12e56918c8d16ac86f4ff9f3637dcdbc5639e756b4e597a02f7115f70e9"
              },
              "awscognitoidentity": {
                "image": "registry.connect.redhat.com/triggermesh/awscognitoidentitysource@sha256:7b66b99c2b2297310155a11c23920b0705fc8fd9a558b14e80fb3c9862fc0b4f"
              },
              "awscognitouserpool": {
                "image": "registry.connect.redhat.com/triggermesh/awscognitouserpoolsource@sha256:867f8305d1bef84e5605a14f8482dc7f337ab68368c0334eab286aecf3f2ac09"
              },
              "awsdynamodb": {
                "image": "registry.connect.redhat.com/triggermesh/awsdynamodbsource@sha256:cc43ceb4ce08470b5d45e57a5fd0351c3e738416d53ac175f76c5b6a38996286"
              },
              "awskinesis": {
                "image": "registry.connect.redhat.com/triggermesh/awskinesissource@sha256:cc86c4d99a7e5c558274220a7c704f9f9615e165742e7d0e5a01d4843670cb97"
              },
              "awssns": {
                "image": "registry.connect.redhat.com/triggermesh/awssnssource@sha256:4c110671dff51b6939b38632cf1db68ae0779fc1f869c144ac141ab1ecf8ab85"
              },
              "awssqs": {
                "image": "registry.connect.redhat.com/triggermesh/awssqssource@sha256:3ec5e2aee183b8e9c53e6781c60a5679cd7034b982bcb02e81106d4e8faaea5d"
              }
            },
            "affinity": {},
            "fullnameOverride": "",
            "image": {
              "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-controller@sha256:d0f77ef39f1845da9aaf6998652a190ee096cf2bbe4ce02e0250a8c2cc89ef3e",
              "pullPolicy": "IfNotPresent"
            },
            "imagePullSecrets": [],
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "rbac": {
              "create": true
            },
            "resources": {
              "requests": {
                "cpu": "20m",
                "memory": "20Mi"
              }
            },
            "securityContext": {},
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator-bundle@sha256:76d525c7a995ea48ba06e9f1aa332603869aff8be72f2446b53bad92753fcff4",
      "bundle_path_digest": "sha256:76d525c7a995ea48ba06e9f1aa332603869aff8be72f2446b53bad92753fcff4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-11-25T20:39:13.160000+00:00",
      "csv_description": "The TriggerMesh AWS Sources operator provides a collection of API's that enables to consume events that happen in your AWS services and send them to containers, microservices and functions running in your cluster.\n\n## Prerequisites\n\nThe TriggerMesh AWS Sources operator depends on the Knative API's provided by the Red Hat OpenShift Serverless operator. For more information, see the documentation on [Installing OpenShift Serverless](https://access.redhat.com/documentation/en-us/openshift_container_platform/4.3/html/serverless_applications/installing-openshift-serverless-1).\n\n## Supported Event Sources\n\n- **AWS CodeCommit event source**: Consume messages from a AWS CodeCommit repository and send them as CloudEvents to an arbitrary event sink.\n- **AWS Cognito Identity event source**: Consume messages from a AWS Cognito identity pool and send them as CloudEvents to an arbitrary event sink.\n- **AWS Cognito UserPool event source**: Consume messages from a AWS Cognito identity pool and send them as CloudEvents to an arbitrary event sink.\n- **AWS DynamoDB event source**: Consume messages from a AWS DynamoDB stream and send them as CloudEvents to an arbitrary event sink.\n- **AWS Kinesis event source**: Consume messages from a AWS Kinesis data stream and send them as CloudEvents to an arbitrary event sink.\n- **AWS SNS event source**: Subscribes to messages from a AWS SNS topic and send them as CloudEvents to an arbitrary event sink.\n- **AWS SQS event source**: Consume messages from a AWS SQS queue and sends them as CloudEvents to an arbitrary event sink.\n\n## Installation\n\nSee the documentation on [Installing TriggerMesh AWS Sources](https://github.com/triggermesh/aws-sources-operator/blob/master/README.md)\n\n## Getting Started\n\nSee the documentation on [Getting Started](https://github.com/triggermesh/aws-event-sources/blob/master/README.md)\n",
      "csv_display_name": "AWS Sources Operator",
      "csv_metadata_description": "Provides a collection of API's that enables to consume events that happen in your AWS services and send them to containers, microservices and functions running in your cluster.",
      "csv_name": "aws-sources-operator.v0.3.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:58:34.338000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "aws-event-sources-operator-certified",
      "provided_apis": [
        {
          "group": "sources.triggermesh.com",
          "kind": "AwsEventSources",
          "plural": "awseventsources",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:4ee562cecbaeb53aa2a77bc572320fab8b5e446c332d0794089f5d7f61a65aef",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator@sha256:4ee562cecbaeb53aa2a77bc572320fab8b5e446c332d0794089f5d7f61a65aef",
          "name": "aws-event-sources-operator-4ee562cecbaeb53aa2a77bc572320fab8b5e446c332d0794089f5d7f61a65aef-annotation"
        },
        {
          "digest": "sha256:b99aae2ebbfe839d689f273704c0975fef3ad7a1e1f323add0f22036665dbf20",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator@sha256:b99aae2ebbfe839d689f273704c0975fef3ad7a1e1f323add0f22036665dbf20",
          "name": "aws-sources-operator"
        },
        {
          "digest": "sha256:d0f77ef39f1845da9aaf6998652a190ee096cf2bbe4ce02e0250a8c2cc89ef3e",
          "image": "registry.connect.redhat.com/triggermesh/aws-event-sources-controller@sha256:d0f77ef39f1845da9aaf6998652a190ee096cf2bbe4ce02e0250a8c2cc89ef3e",
          "name": "aws-event-sources-controller-d0f77ef39f1845da9aaf6998652a190ee096cf2bbe4ce02e0250a8c2cc89ef3e-annotation"
        },
        {
          "digest": "sha256:3ec5e2aee183b8e9c53e6781c60a5679cd7034b982bcb02e81106d4e8faaea5d",
          "image": "registry.connect.redhat.com/triggermesh/awssqssource@sha256:3ec5e2aee183b8e9c53e6781c60a5679cd7034b982bcb02e81106d4e8faaea5d",
          "name": "awssqssource-3ec5e2aee183b8e9c53e6781c60a5679cd7034b982bcb02e81106d4e8faaea5d-annotation"
        },
        {
          "digest": "sha256:4c110671dff51b6939b38632cf1db68ae0779fc1f869c144ac141ab1ecf8ab85",
          "image": "registry.connect.redhat.com/triggermesh/awssnssource@sha256:4c110671dff51b6939b38632cf1db68ae0779fc1f869c144ac141ab1ecf8ab85",
          "name": "awssnssource-4c110671dff51b6939b38632cf1db68ae0779fc1f869c144ac141ab1ecf8ab85-annotation"
        },
        {
          "digest": "sha256:cc86c4d99a7e5c558274220a7c704f9f9615e165742e7d0e5a01d4843670cb97",
          "image": "registry.connect.redhat.com/triggermesh/awskinesissource@sha256:cc86c4d99a7e5c558274220a7c704f9f9615e165742e7d0e5a01d4843670cb97",
          "name": "awskinesissource-cc86c4d99a7e5c558274220a7c704f9f9615e165742e7d0e5a01d4843670cb97-annotation"
        },
        {
          "digest": "sha256:cc43ceb4ce08470b5d45e57a5fd0351c3e738416d53ac175f76c5b6a38996286",
          "image": "registry.connect.redhat.com/triggermesh/awsdynamodbsource@sha256:cc43ceb4ce08470b5d45e57a5fd0351c3e738416d53ac175f76c5b6a38996286",
          "name": "awsdynamodbsource-cc43ceb4ce08470b5d45e57a5fd0351c3e738416d53ac175f76c5b6a38996286-annotation"
        },
        {
          "digest": "sha256:867f8305d1bef84e5605a14f8482dc7f337ab68368c0334eab286aecf3f2ac09",
          "image": "registry.connect.redhat.com/triggermesh/awscognitouserpoolsource@sha256:867f8305d1bef84e5605a14f8482dc7f337ab68368c0334eab286aecf3f2ac09",
          "name": "awscognitouserpoolsource-867f8305d1bef84e5605a14f8482dc7f337ab68368c0334eab286aecf3f2ac09-annotation"
        },
        {
          "digest": "sha256:7b66b99c2b2297310155a11c23920b0705fc8fd9a558b14e80fb3c9862fc0b4f",
          "image": "registry.connect.redhat.com/triggermesh/awscognitoidentitysource@sha256:7b66b99c2b2297310155a11c23920b0705fc8fd9a558b14e80fb3c9862fc0b4f",
          "name": "awscognitoidentitysource-7b66b99c2b2297310155a11c23920b0705fc8fd9a558b14e80fb3c9862fc0b4f-annotation"
        },
        {
          "digest": "sha256:c362c12e56918c8d16ac86f4ff9f3637dcdbc5639e756b4e597a02f7115f70e9",
          "image": "registry.connect.redhat.com/triggermesh/awscodecommitsource@sha256:c362c12e56918c8d16ac86f4ff9f3637dcdbc5639e756b4e597a02f7115f70e9",
          "name": "awscodecommitsource-c362c12e56918c8d16ac86f4ff9f3637dcdbc5639e756b4e597a02f7115f70e9-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.3.0",
      "version_original": "0.3.0"
    },
    {
      "_id": "619ff4c1c17162a20c1c65f2",
      "alm_examples": [
        {
          "api_version": "cache.omarg.net/v1alpha1",
          "kind": "Memcached",
          "metadata": {
            "name": "memcached-sample"
          },
          "spec": {
            "size": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ogaye/ogaye-operator-bundle@sha256:5fb22f02153f2609ec21fe1af3a14b7e6c3779cdde7f387a59179b8152528225",
      "bundle_path_digest": "sha256:5fb22f02153f2609ec21fe1af3a14b7e6c3779cdde7f387a59179b8152528225",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-25T20:40:33.461000+00:00",
      "csv_description": "Testing RH CI Pipeline",
      "csv_display_name": "Omar Test Memcached Operator",
      "csv_metadata_description": "",
      "csv_name": "ogaye-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:24:11.318000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "ogaye-operator",
      "provided_apis": [
        {
          "group": "cache.omarg.net",
          "kind": "Memcached",
          "plural": "memcacheds",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:7f6a280132b9746c51e44a4e795a0f861ec932c454d597a60a421b882ef924ff",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:7f6a280132b9746c51e44a4e795a0f861ec932c454d597a60a421b882ef924ff",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:07e569609319c4884acc8e6f4a0e10344109b5f392898b628996925e96fafc83",
          "image": "quay.io/ogaye/ogaye-operator@sha256:07e569609319c4884acc8e6f4a0e10344109b5f392898b628996925e96fafc83",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "619ff6573e9240fca360f333",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "bundle_path_digest": "sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2021-11-25T20:47:19.074000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:22:56.628000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "redislabs/operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "operator-998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b-annotation"
        },
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "redis-enterprise-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.6-24",
      "version_original": "6.0.6-24"
    },
    {
      "_id": "619ff69abfd4a5234d595e85",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.4-55.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "bundle_path_digest": "sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2021-11-25T20:48:26.197000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.4-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:11:09.942000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator-8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9-annotation"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "admission"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.2.4-1",
      "version_original": "6.2.4-1"
    },
    {
      "_id": "619ff749bfd4a5234d595e86",
      "alm_examples": [
        {
          "kind": "APIServer",
          "metadata": {
            "name": "apiserver-sample"
          },
          "spec": {}
        },
        {
          "kind": "CoreModelServer",
          "metadata": {
            "name": "coremodelserver-sample"
          },
          "spec": {}
        },
        {
          "kind": "Executor",
          "metadata": {
            "name": "executor-sample"
          },
          "spec": {}
        },
        {
          "kind": "Keycloak",
          "metadata": {
            "name": "keycloak-sample"
          },
          "spec": {}
        },
        {
          "kind": "Postgresql",
          "metadata": {
            "name": "postgresql-sample"
          },
          "spec": {}
        },
        {
          "kind": "ProductServer",
          "metadata": {
            "name": "productserver-sample"
          },
          "spec": {}
        },
        {
          "kind": "SourceData",
          "metadata": {
            "name": "sourcedata-sample"
          },
          "spec": {}
        },
        {
          "kind": "Stack",
          "metadata": {
            "name": "stack-sample"
          },
          "spec": {
            "apiserver": {},
            "clientEmail": "mycompanyname@eamli.com",
            "clientSecret": "secretpassword",
            "clientUsername": "mycompanyname",
            "coremodelserver": {},
            "executor": {},
            "keycloak": {},
            "postgresql": {
              "deployment": {
                "enabled": true
              }
            },
            "productserver": {},
            "sourcedata": {},
            "webapp": {}
          }
        },
        {
          "kind": "WebApp",
          "metadata": {
            "name": "webapp-sample"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/eamli/eamli-opeartor-bundle@sha256:01121877a5453cbfc0e15b40b4c069edd0b5e3be59e8c429dd2e0d835706b9ff",
      "bundle_path_digest": "sha256:01121877a5453cbfc0e15b40b4c069edd0b5e3be59e8c429dd2e0d835706b9ff",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "fast",
      "creation_date": "2021-11-25T20:51:21.081000+00:00",
      "csv_description": "The Eamli Operator deploys and manages a suite of micro services that power the Eamli product.",
      "csv_display_name": "Eamli Operator",
      "csv_metadata_description": "Installs and manages the Eamli product",
      "csv_name": "eamli-operator.v0.8.12",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:16:37.516000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "eamli-operator",
      "provided_apis": [
        {
          "group": "eamli.white.space",
          "kind": "Stack",
          "plural": "stacks",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "CoreModelServer",
          "plural": "coremodelservers",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "Executor",
          "plural": "executors",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "Postgresql",
          "plural": "postgresqls",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "SourceData",
          "plural": "sourcedata",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "ProductServer",
          "plural": "productservers",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "WebApp",
          "plural": "webapps",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "APIServer",
          "plural": "apiservers",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "Keycloak",
          "plural": "keycloaks",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:e85809b53c27ca08bf4af3f21e5c30458f62e4e30dd5d46ff18b33337ee0ff7a",
          "image": "registry.connect.redhat.com/eamli/eamli-operator@sha256:e85809b53c27ca08bf4af3f21e5c30458f62e4e30dd5d46ff18b33337ee0ff7a",
          "name": "eamli-operator-e85809b53c27ca08bf4af3f21e5c30458f62e4e30dd5d46ff18b33337ee0ff7a-annotation"
        },
        {
          "digest": "sha256:bb3b5ba76e7ce94441d0395dc5a66f7bb6fff59bd37d5328e418072b3bb174ab",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:bb3b5ba76e7ce94441d0395dc5a66f7bb6fff59bd37d5328e418072b3bb174ab",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e85809b53c27ca08bf4af3f21e5c30458f62e4e30dd5d46ff18b33337ee0ff7a",
          "image": "registry.connect.redhat.com/eamli/eamli-operator@sha256:e85809b53c27ca08bf4af3f21e5c30458f62e4e30dd5d46ff18b33337ee0ff7a",
          "name": "manager"
        },
        {
          "digest": "sha256:9a6741586e9c0b212fdf101985fa87b0d13c30142eb825de9ffa6c4db26d19ce",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/apiserver@sha256:9a6741586e9c0b212fdf101985fa87b0d13c30142eb825de9ffa6c4db26d19ce",
          "name": "api_server"
        },
        {
          "digest": "sha256:6ee3fb460c4da0cce4778d474f4dc3c73ce9001b02e798d88aeb68f22272c794",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/coremodelserver@sha256:6ee3fb460c4da0cce4778d474f4dc3c73ce9001b02e798d88aeb68f22272c794",
          "name": "core_model_server"
        },
        {
          "digest": "sha256:65ed2213ecb396a4a2fcf1ea9abce0aed6696325476dd5f945ce5694521f4f8b",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/executor@sha256:65ed2213ecb396a4a2fcf1ea9abce0aed6696325476dd5f945ce5694521f4f8b",
          "name": "executor"
        },
        {
          "digest": "sha256:634bc0d97a155744c561aebf45b497321604ce7e745d9a49a335cdda4ce6635d",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/keycloak@sha256:634bc0d97a155744c561aebf45b497321604ce7e745d9a49a335cdda4ce6635d",
          "name": "keycloak"
        },
        {
          "digest": "sha256:03a1e02a1b3245f9aa0ddd3f7507b915a8f7387a1674969f6ef039a5d7fd8bf0",
          "image": "registry.redhat.io/rhel8/postgresql-12@sha256:03a1e02a1b3245f9aa0ddd3f7507b915a8f7387a1674969f6ef039a5d7fd8bf0",
          "name": "postgresql"
        },
        {
          "digest": "sha256:7eaf0122b5055d80a8e7ecb56250a7d0421ac2b648acdde5843ae8a775918f1b",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/productserver@sha256:7eaf0122b5055d80a8e7ecb56250a7d0421ac2b648acdde5843ae8a775918f1b",
          "name": "product_server"
        },
        {
          "digest": "sha256:10c8edbbd66410e85b96991f2f8bd8772a7b7e4034d783e9f9b34aa97811785c",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/sourcedata@sha256:10c8edbbd66410e85b96991f2f8bd8772a7b7e4034d783e9f9b34aa97811785c",
          "name": "source_data"
        },
        {
          "digest": "sha256:0563dd23beb0f327a9814ecb812209da32313a1949fff511a8dff6dbffff9a88",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/webapp@sha256:0563dd23beb0f327a9814ecb812209da32313a1949fff511a8dff6dbffff9a88",
          "name": "web_app"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.8.12",
      "version_original": "0.8.12"
    },
    {
      "_id": "619ff881bfd4a5234d595e87",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:45853a8612cc9da123094499ac975eb2bc943346a0092fe9d892c5942170e77f",
      "bundle_path_digest": "sha256:45853a8612cc9da123094499ac975eb2bc943346a0092fe9d892c5942170e77f",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-25T20:56:33.308000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.6.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:44:15.716000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "name": "openstorage-operator-5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47-annotation"
        },
        {
          "digest": "sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "name": "portworx-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.6.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.6.1",
      "version_original": "1.6.1"
    },
    {
      "_id": "619ff90dbfd4a5234d595e88",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/triggermesh/aws-event-sources-operator-bundle@sha256:efaeab6112c4ca88ba5427936eda7e3b316e22060fa6ae8b920410cd9a3a6c4d",
      "bundle_path_digest": "sha256:efaeab6112c4ca88ba5427936eda7e3b316e22060fa6ae8b920410cd9a3a6c4d",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2021-11-25T20:58:53.467000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "aws-sources-operator.v0.2.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T17:24:07.593000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "aws-event-sources-operator-certified",
      "provided_apis": [
        {
          "group": "sources.triggermesh.com",
          "kind": "AwsEventSources",
          "plural": "awseventsources",
          "version": "v1alpha1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.2.0",
      "version_original": "0.2.0"
    },
    {
      "_id": "619ff9ff3e9240fca360f335",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:b8dce8ab67f956956809a4d15d32e07d0d0f49b54a25f70e520ae592d63a369b",
      "bundle_path_digest": "sha256:b8dce8ab67f956956809a4d15d32e07d0d0f49b54a25f70e520ae592d63a369b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-25T21:02:55.016000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.3.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:22:00.095000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:32178a16dd2115e0a11a2e3dfbfc130ae1d0afd8e293131e76b6fc1a79b36c12",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:32178a16dd2115e0a11a2e3dfbfc130ae1d0afd8e293131e76b6fc1a79b36c12",
          "name": "kubeturbo-operator-32178a16dd2115e0a11a2e3dfbfc130ae1d0afd8e293131e76b6fc1a79b36c12-annotation"
        },
        {
          "digest": "sha256:32178a16dd2115e0a11a2e3dfbfc130ae1d0afd8e293131e76b6fc1a79b36c12",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:32178a16dd2115e0a11a2e3dfbfc130ae1d0afd8e293131e76b6fc1a79b36c12",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:ff3e805c2d788605823b3270338f664fde619b9475cf68ce512600b719618c1a",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:ff3e805c2d788605823b3270338f664fde619b9475cf68ce512600b719618c1a",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "8.3.5",
      "version_original": "8.3.5"
    },
    {
      "_id": "619ffa123e9240fca360f336",
      "alm_examples": [
        {
          "api_version": "datadoghq.com/v1alpha1",
          "kind": "DatadogAgent",
          "metadata": {
            "name": "datadog"
          },
          "spec": {
            "agent": {
              "apm": {
                "enabled": false
              },
              "log": {
                "enabled": false,
                "logsConfigContainerCollectAll": false
              },
              "process": {
                "enabled": true,
                "processCollection": false
              },
              "security": {
                "compliance": {
                  "enabled": false
                },
                "runtime": {
                  "enabled": false
                }
              },
              "systemProbe": {
                "bpfDebugEnabled": false
              }
            },
            "clusterAgent": {
              "config": {
                "admissionController": {
                  "enabled": false
                },
                "clusterChecksEnabled": false,
                "externalMetrics": {
                  "enabled": false
                }
              },
              "replicas": 2
            },
            "clusterChecksRunner": {
              "replicas": 2
            },
            "clusterName": "<CLUSTER_NAME>",
            "credentials": {
              "apiKey": "<DATADOG_API_KEY>",
              "appKey": "<DATADOG_APP_KEY>",
              "token": "<DATADOG_CLUSTER_AGENT_TOKEN>"
            }
          }
        },
        {
          "api_version": "datadoghq.com/v1alpha1",
          "kind": "DatadogMetric",
          "metadata": {
            "name": "datadogmetric-sample"
          },
          "spec": {
            "query": "avg:kubernetes.cpu.usage.total{app:foo}.rollup(avg,30)/(avg:kubernetes.cpu.limits{app:foo}.rollup(avg,30)*10000000)"
          }
        },
        {
          "api_version": "datadoghq.com/v1alpha1",
          "kind": "DatadogMonitor",
          "metadata": {
            "name": "datadogmonitor-sample"
          },
          "spec": {
            "message": "Something is wrong and we need to fix it.",
            "query": "avg(last_15m):avg:foo{env:staging,service:bar} > 1",
            "tags": [
              "env:staging",
              "service:bar"
            ],
            "title": "Latency is increasing on staging",
            "type": "metric alert"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/datadog/operator-bundle@sha256:8294fd51406bb44cdc3eef4a999dac38d23deb4f32cec5b01f3675398072f765",
      "bundle_path_digest": "sha256:8294fd51406bb44cdc3eef4a999dac38d23deb4f32cec5b01f3675398072f765",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-25T21:03:14.661000+00:00",
      "csv_description": "Datadog provides a modern monitoring and analytics platform. Gather metrics, logs and traces for full observability of your Kubernetes cluster with Datadog Operator.",
      "csv_display_name": "Datadog Operator",
      "csv_metadata_description": "Datadog provides a modern monitoring and analytics platform. Gather metrics, logs and traces for full observability of your Kubernetes cluster with Datadog Operator.",
      "csv_name": "datadog-operator.v0.7.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:12:38.659000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "datadog-operator-certified",
      "provided_apis": [
        {
          "group": "datadoghq.com",
          "kind": "DatadogAgent",
          "version": "v1alpha1"
        },
        {
          "group": "datadoghq.com",
          "kind": "DatadogMetric",
          "version": "v1alpha1"
        },
        {
          "group": "datadoghq.com",
          "kind": "DatadogMonitor",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6fb1b2daa4c73e6f34f76bd51598a6c82e13c8b5783dc0ee67ff1f81c71945ac",
          "image": "registry.connect.redhat.com/datadog/operator@sha256:6fb1b2daa4c73e6f34f76bd51598a6c82e13c8b5783dc0ee67ff1f81c71945ac",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "<0.7.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.7.2",
      "version_original": "0.7.2"
    },
    {
      "_id": "619ffae327e166330707d776",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "bundle_path_digest": "sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "capabilities": [
        ""
      ],
      "channel_name": "6.2.8",
      "creation_date": "2021-11-25T21:06:43.724000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-6",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T16:58:46.004000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.6-6",
      "version_original": "6.0.6-6"
    },
    {
      "_id": "619ffb2627e166330707d778",
      "alm_examples": [
        {
          "kind": "VfunctionServer",
          "metadata": {
            "labels": {
              "app.kubernetes.io/instance": "vfunction-server",
              "app.kubernetes.io/managed-by": "operator",
              "app.kubernetes.io/name": "vfunction",
              "name": "vfunction"
            },
            "name": "example-vfunction-server",
            "namespace": "vfunction"
          },
          "spec": {
            "admin": {
              "email": "admin@mycompany.com",
              "name": "Admin",
              "password": "Password1!"
            },
            "authentication": {
              "authority": "",
              "ca_root_crt": "",
              "client_id": "",
              "issuer": "",
              "jwks_url": ""
            },
            "backup": {
              "mysql": {
                "S3": {
                  "bucket": "",
                  "key": "",
                  "region": "",
                  "secret": ""
                }
              }
            },
            "host": "http://my.domain.com",
            "measurements": {
              "S3": {
                "bucket": "",
                "key": "",
                "region": "",
                "secret": ""
              },
              "auto_scaling": "No",
              "max_number_of_services": "10",
              "min_number_of_services": "2"
            },
            "org_name": "MyCompany",
            "smtp": {
              "identity": "",
              "password": "",
              "url": "",
              "user": ""
            },
            "tls": {
              "crt": "",
              "key": ""
            },
            "upgrade": "Daily"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/vfunction/vfunction-server-operator-bundle@sha256:8f8d0ecfd10b6aec9c16e41a2cab54a06d9c809af93312e5d046e97bea0abe02",
      "bundle_path_digest": "sha256:8f8d0ecfd10b6aec9c16e41a2cab54a06d9c809af93312e5d046e97bea0abe02",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-25T21:07:50.311000+00:00",
      "csv_description": "\n## Introduction\n\n[vFunction](https://www.vfunction.com/) is a cloud-native modernization platform that combines dynamic and static code analysis, machine learning, and automation to automatically identify and extract services from existing applications. vFunction is the only platform purpose-built for modernization of Java applications.\n\nThe vFunction modernization process starts by learning the running monolithic application, and surfacing the interdependencies within it. Using AI, the platform analyzes and identifies services that can be separated from the application. This decomposition can present a range of micro, mini, or even macro services, depending on your application environment, each being an independently deployable and scalable application component.\n\nvFunction automates the extraction of these services, enabling you to modernize your monolith, quickly and easily.\n\n## The vFunction platform\n\nThe platform consists of 3 basic components; the server, the controller package, and a tools package. The server runs as an operand on an OpenShift environment. The controller package is installed on the machine that runs the monolithic application which can be either a Linux or a Windows machine, and the tools are run on a development machine, with access to the code of the monolithic application.\n\nThe controller package consists of three elements: the vFunction agent, that collects data during the dynamic analysis phase; the vFunction Viper application, that performs static analysis on the binaries of the application; and the vFunction controller that handles all the communication between the agent, Viper, and the vFunction server.\n\nThe vFunction agent is a mix of a Java and native agent, and needs to run on the JVM that is currently running your application. [Refer to the vFunction OOB Support Matrix document](https://drive.google.com/file/d/1ccq8LFab1FrYAimDUxwgjiCOdk4QuVzs/view) for a list of supported application servers and JVMs.\n\nThis operator installs a vFunction server instance to be connected later with one or more vFunction controllers installed on your application machine(s).\n\n## Before You Start\n\nThe vFunction operator requires a Red Hat OpenShift Kubernetes Application Platform 4.x.\n\nThe cluster recommended configuration (which is the same as the minimal one) should consist of:\n\n- *1 master node*\n\n- *1 worker node*\n\n- *Storage capacity enough for dynamically provision 2 PVs of 50G each*\n\n- *A default StorageClass configured*\n\nvFunction doesn\u2019t provide any encryption mechanism for data stored on any attached storage. If required, encryption can be achieved by the client by using its own external means on the storage itself.\n\nvFunction supports backup of all critical data as part of the application. Nevertheless, for complete backup of entire data it is recommended that the client apply its own storage based backup mechanism.\n\n## Install Prerequisites\n\n###Cluster:\nThe operator was certified and tested on OCP 4.6 and 4.7.\nIf you encounter any issue with other OCP versions or cloud providers please contact info@vfunction.com.\n\n###Storage:\nThe operator creates two new PersistentVolumeClaims (PVCs) during installation time. For their creation, it relies on the default StorageClass to dynamically provision two PersistentVolumes (PVs). The system must have a default StorageClass in place.\n\nBoth PersistentVolumes are accessed with ReadWriteOnce mode.\n\n###Project:\nThe operator should be installed in a new and dedicated project (namespace). If you intend to install more than one vFunction operands in the same cluster, please use different projects for each one. Installation of more than one operand on the same cluster will allow scaling by load balancing multiple applications to different vFunction servers.\n\n## Installation instructions\n\n1. Prepare the YAML file to use in the installation:\n\n    a. Copy the following YAML template into a text editor:\n\n    ```yaml\n        apiVersion: vfunction.com/v1\n        kind: VfunctionServer\n        metadata:\n          name: vfunction\n          namespace: vfunction\n          labels:\n            name: vfunction\n            app.kubernetes.io/name: vfunction\n            app.kubernetes.io/instance: vfunction-server\n            app.kubernetes.io/managed-by: operator\n        spec:\n          host: \"http://my.domain.com\"\n          org_name: \"MyCompany\"\n          upgrade: \"Daily\"\n          admin:\n            email: \"admin@mycompany.com\"\n            name: \"Admin\"\n            password: \"Password1!\"\n          measurements:\n            auto_scaling: \"No\"\n            min_number_of_services: \"2\"\n            max_number_of_services: \"10\"\n            S3:\n              bucket: \"\"\n              key: \"\"\n              secret: \"\"\n          smtp:\n            password: \"\"\n            url: \"\"\n            identity: \"\"\n            user: \"\"\n          authentication:\n            authority: \"\"\n            client_id: \"\"\n            jwks_url: \"\"\n            issuer: \"\"\n            ca_root_crt: |\n              -----BEGIN CERTIFICATE-----\n              ...\n              -----END CERTIFICATE-----\n          tls:\n            crt: |\n              -----BEGIN CERTIFICATE-----\n              ...\n              -----END CERTIFICATE-----\n            key: |\n              -----BEGIN PRIVATE KEY-----\n              ...\n              -----END PRIVATE KEY-----\n          backup:\n            mysql:\n              S3:\n                bucket: \"\"\n                key: \"\"\n                secret: \"\"\n    ```\n    b. Customize the template fields by replacing with your information:\n\n    - **host**: Enter the FQDN for accessing the vFunction dashboard.\n                Make sure that you use a domain name and not an IP address. Writing \"https://\" will mandate TLS while writing \"http://\" will expose the server through HTTP.\n    - **org_name**: Enter your organization name.\n    - **upgrade**: Choose auto-upgrade mode\n        - **Daily**: The operator will check for a new version every day at 3 AM and will install it automatically (default).\n        - **Always**: The operator will check for a new version every 10 minutes and will install it automatically.\n        - **Never**: The automatic upgrading mechanism is off.\n        - **Maintenance**: Put the operator in a maintenance mode.\n    - **admin.email**: Enter the email address of your administrator.\n    - **admin.name**: Enter the name of your administrator.\n    - **admin.password**: Enter the password you want to use for the vFunction administrator.\n                          The password should be at least 8 characters long, and consist of at least one lowercase letter, at least one uppercase letter, at least one number, and at least one special character.\n    - **measurements.auto_scaling**: Indicates if the measurement services auto scalling is active.\n    - **measurements.min\\_num\\_of\\_services**: Minimum Number of measurement service pods.\n    - **measurements.max\\_num\\_of\\_services**: Maximum Number of measurement service pods.\n    - **measurements.S3**: Save all measurements data to S3, instead of local PV (optional).\n        - **measurements.S3.bucket**: Measurements S3 bucket name.\n        - **measurements.S3.key**: Measurements S3 key.\n        - **measurements.S3.secret**: Measurements S3 secret.\n        - **measurements.S3.region**: Measurements S3 region.\n    - **smtp.user**: Enter the email address for a designated user for the SMTP server (optional).\n    - **smtp.password**: Enter this user\u2019s password (optional).\n    - **smtp.identity**: Enter this user\u2019s password (optional).\n    - **smtp.url**: Enter the SMTP server URL (optional).\n    - **authentication.authority**: Authority for authentication (Optional).\n    - **authentication.client_id**: Client ID for authentication (Optional).\n    - **authentication.jwks_url**: JWKS URL for authentication (Optional).\n    - **authentication.issuer**: Issuer for authentication (Optional).\n    - **authentication.ca\\_root\\_crt**: CA root certificate for authentication (Optional).\n    - **tls.crt**: If your host FQDN starts with \u201chttps\u201d, paste in the certifications you have for using the TLS connection.\n    - **tls.key**: If your host FQDN starts with \u201chttps\u201d, enter the key you have for using the TLS connection.\n    - **backup.mysql.S3**: Backup MySQL to S3 (optional).\n        - **backup.mysql.S3.bucket**: MySQL backup S3 bucket name.\n        - **backup.mysql.S3.key**: MySQL backup S3 key.\n        - **backup.mysql.S3.secret**: MySQL backup S3 secret.\n        - **backup.mysql.S3.region**: MySQL backup S3 region.\n\n1. In the Installed Operators window choose and click on vFunction Operator and then Create Instance.\n1. In the Create vFunctionServer window, paste the YAML file that you created in step 1.\n1. Click Create.\n1. You can now click on your new created vFunction operand in order to see its details and installation progress.\n\n## Verifying the installation\n\nCheck that the operand installed successfully:\n\n1. Check that the \"Operand State\" property shows \u201cWorking\u201d.\n1. Check that the \"Successfully Installed\" property shows \"Yes\".\n\nIf \"Operand State\" shows \"Failed\", it indicates the operand wasn\u2019t installed correctly. Check the events and logs for all pods (operator and image containers) for any issues. In the event that you cannot troubleshoot, contact vFunction support.\n\n## After installation\n\nThe vFunction site is now accessible via the newly created vFunction application custom address, for example, my.domain.com. There are two ways you can access the vFunction dashboard.\n\n### Access using the router canonical hostname\n\n1. Update your DNS provider by creating a canonical name (CNAME) record.\nThis record should point to your host address, and to the \u201dvfunction\u201d subdomain of the  OpenShift canonical router hostname as the alias.\nFor example, ***my.domain.com.   CNAME   vfunction.apps.ocp4.my-openshift.com.***\n2. Find your cluster Router Canonical Hostname address in the newly created vfunction-route-xxx under your vFunction OpenShift project -> **Networking** -> **Routes** -> **vfunction-route-xxx** route -> **Router Canonical Hostname** field.\nYou can now access the dashboard using your defined \"host\" spec property (as above).\n\n### Access using the nginx service location\n\nYou may use this access method if your OpenShift is installed on a provider that supports exposing LoadBalancer-type services.\n1. Update your DNS provider by creating a canonical name (CNAME) record.\nThis record should point to your host address and to the vfunction-nginx-xxx service location.\nFor example, ***my.domain.com.   CNAME   a05951ed7cdf-1394239323.us-east-1.elb.amazonaws.com.***\n1. Point your custom domain to the vfunction-nginx-xxx service's external IP location, which you can find in the OpenShift project > **Networking** -> **Services** -> **vfunction-nginx-xxx** service > **Service Address** > **Location** field.\n\n## Upgrade and Rollback\n\nThe vFunction operator includes a built-in auto-upgrade mechanism.\n\nYou can choose one of 4 upgrading modes:\n- **Daily**: The operator will check for a new version every day at 3 AM and will install it automatically (default).\n- **Always**: The operator will check for a new version every 10 minutes and will install it automatically.\n- **Never**: The automatic upgrading mechanism is off.\n- **Maintenance**: Put the operator in a maintenance mode.\n\nFor an on-demand upgrade,  you can change anytime the upgrading mode from \u201cNever\u201d to \u201cAlways\u201d, wait for the operand to be upgraded, and change again to \u201cNever\u201d.\n\nDuring the upgrade, the \"Operand State\" property will change to \u201cUpgrading...\u201d and back again to \u201cWorking\u201d after a successful upgrade.\n\nIn case of a failure upgrading the operand, an automatic rollback to the last working version will occur. The failed version will be marked as defective and the operator will not try to upgrade to it again.\n\nChoosing the \"Maintenance\" option will tell the operator to take down all pods, so you can safely fix storage issues, return volumes from snapshots, etc.\nAfter finishing the maintenance, return the upgrade mode to your original desired policy.",
      "csv_display_name": "vFunction Operator",
      "csv_metadata_description": "vFunction is a cutting-edge code analysis, machine learning, and automation to boost your Java modernization projects.",
      "csv_name": "vfunction-server-operator.v2.3.597",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:20:42.770000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "vfunction-server-operator",
      "provided_apis": [
        {
          "group": "vfunction.com",
          "kind": "VfunctionServer",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c1d534d785a4835fdcbd5d79cddce90f2d17cd3f880c4724eac6e394007dd65a",
          "image": "registry.connect.redhat.com/vfunction/vfunction-server-operator@sha256:c1d534d785a4835fdcbd5d79cddce90f2d17cd3f880c4724eac6e394007dd65a",
          "name": "vfunction-server-operator-c1d534d785a4835fdcbd5d79cddce90f2d17cd3f880c4724eac6e394007dd65a-annotation"
        },
        {
          "digest": "sha256:c1d534d785a4835fdcbd5d79cddce90f2d17cd3f880c4724eac6e394007dd65a",
          "image": "registry.connect.redhat.com/vfunction/vfunction-server-operator@sha256:c1d534d785a4835fdcbd5d79cddce90f2d17cd3f880c4724eac6e394007dd65a",
          "name": "vfunction-server-operator"
        },
        {
          "digest": "sha256:0163ee3665984b42e282771a7c43100a7140aa1bc470fae5af51257f308bc3bd",
          "image": "registry.connect.redhat.com/vfunction/vfunction-mysql@sha256:0163ee3665984b42e282771a7c43100a7140aa1bc470fae5af51257f308bc3bd",
          "name": "vfunction_mysql_original_image"
        },
        {
          "digest": "sha256:2cd2ac53423f61073568c1180f058da3d79a4a8be9217fe1bf55017bc81bfd0f",
          "image": "registry.connect.redhat.com/vfunction/vfunction-nginx@sha256:2cd2ac53423f61073568c1180f058da3d79a4a8be9217fe1bf55017bc81bfd0f",
          "name": "vfunction_nginx_original_image"
        },
        {
          "digest": "sha256:ed8cc4cc0e51e6d659d5e71daba3fa71f6a7516b7a75027b48faca6f404946e9",
          "image": "registry.connect.redhat.com/vfunction/vfunction-storage@sha256:ed8cc4cc0e51e6d659d5e71daba3fa71f6a7516b7a75027b48faca6f404946e9",
          "name": "vfunction_storage_original_image"
        },
        {
          "digest": "sha256:fbab8495c43387904296b56996a11532c9e483fed907bfb6c399abe17ffb1453",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-idp@sha256:fbab8495c43387904296b56996a11532c9e483fed907bfb6c399abe17ffb1453",
          "name": "vfunction_vfapi_idp_original_image"
        },
        {
          "digest": "sha256:beca271a20ea895f91da57e2c378cbd1604fb7110c25a57ea1df3fdaaab82fd3",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-measurements@sha256:beca271a20ea895f91da57e2c378cbd1604fb7110c25a57ea1df3fdaaab82fd3",
          "name": "vfunction_vfapi_measurements_original_image"
        },
        {
          "digest": "sha256:a3770987370c38fdc13e42bf6833869a0b7bbbdeefddd12689ddc4b5f1989f8e",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-organizations@sha256:a3770987370c38fdc13e42bf6833869a0b7bbbdeefddd12689ddc4b5f1989f8e",
          "name": "vfunction_vfapi_organizations_original_image"
        },
        {
          "digest": "sha256:1f792540d6496e5c74e8a86ad3fad55d864df6fc761a62c95f7f9686e9924fa3",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-users@sha256:1f792540d6496e5c74e8a86ad3fad55d864df6fc761a62c95f7f9686e9924fa3",
          "name": "vfunction_vfapi_users_original_image"
        }
      ],
      "skip_range": "<2.3.597",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.3.597",
      "version_original": "2.3.597"
    },
    {
      "_id": "619ffbd63e9240fca360f337",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-69.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:6eba0d4cdc724698aa1d42dd74ae6b19e9446f601f337d5752531a14f10e41ef",
      "bundle_path_digest": "sha256:6eba0d4cdc724698aa1d42dd74ae6b19e9446f601f337d5752531a14f10e41ef",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2021-11-25T21:10:46.121000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:11:46.882000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "name": "redis-enterprise-operator-3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f-annotation"
        },
        {
          "digest": "sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "name": "redis-enterprise-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.20-4",
      "version_original": "6.0.20-4"
    },
    {
      "_id": "619ffc0b27e166330707d779",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:d778e1d70bee8e4a17cac2ea9b04c82c747fd1d1f3859e846626f581f58f1ae3",
      "bundle_path_digest": "sha256:d778e1d70bee8e4a17cac2ea9b04c82c747fd1d1f3859e846626f581f58f1ae3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-25T21:11:39.626000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.22",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:47:34.337000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:f839152251e021fe0ae1d4bd9e5374c2a2fb3c01da4381ba4c01afcbaadbf8bd",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:f839152251e021fe0ae1d4bd9e5374c2a2fb3c01da4381ba4c01afcbaadbf8bd",
          "name": "joget"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.22",
      "version_original": "0.0.22"
    },
    {
      "_id": "619ffc98c17162a20c1c65f4",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.12-57.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "bundle_path_digest": "sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2021-11-25T21:14:00.359000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.12-5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:17:45.337000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator-b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f-annotation"
        },
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.12-5",
      "version_original": "6.0.12-5"
    },
    {
      "_id": "619ffdadc17162a20c1c65f5",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "bundle_path_digest": "sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "capabilities": [
        ""
      ],
      "channel_name": "6.2.8",
      "creation_date": "2021-11-25T21:18:37.067000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-11",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:05:49.703000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.6-11",
      "version_original": "6.0.6-11"
    },
    {
      "_id": "619ffe62c17162a20c1c65f6",
      "alm_examples": [
        {
          "api_version": "astra.netapp.io/v1",
          "kind": "AstraControlCenter",
          "metadata": {
            "name": "astra"
          },
          "spec": {
            "accountName": "Example",
            "additionalValues": {},
            "astraAddress": "astra.example.com",
            "astraResourcesScaler": "Default",
            "astraVersion": "ASTRA_VERSION",
            "autoSupport": {
              "enrolled": true,
              "url": "https://stagesupport.netapp.com/asupprod/post/1.0/postAsup"
            },
            "crds": {
              "externalCertManager": false,
              "externalTraefik": false
            },
            "email": "admin@example.com",
            "firstName": "SRE",
            "imageRegistry": {
              "name": "example.registry/astra",
              "secret": "astra-registry-cred"
            },
            "lastName": "Admin",
            "storageClass": "ontap-gold",
            "volumeReclaimPolicy": "Retain"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/5e8d03cfac3db90370900b83/acc-operator-bundle@sha256:6b99d92f9d8de5380196a1b65ad12e8ea08adf9dfd8acc04158cc219d0100858",
      "bundle_path_digest": "sha256:6b99d92f9d8de5380196a1b65ad12e8ea08adf9dfd8acc04158cc219d0100858",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-25T21:21:38.697000+00:00",
      "csv_description": "Install, configure and monitor Astra Control Center",
      "csv_display_name": "netapp-acc-operator",
      "csv_metadata_description": "",
      "csv_name": "acc-operator.v21.10.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:29:34.023000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "acc-operator",
      "provided_apis": [
        {
          "group": "astra.netapp.io",
          "kind": "AstraControlCenter",
          "plural": "astracontrolcenters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:a5c16c64229aac3564c66816c123e81a849ff93b8a443cd6ff14bd8d63c06644",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:a5c16c64229aac3564c66816c123e81a849ff93b8a443cd6ff14bd8d63c06644",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:33d1dd15d0fcd40acbecadf824a99c611efce876ba73c5df9b9a8a2defc95214",
          "image": "registry.connect.redhat.com/netapp/acc-operator@sha256:33d1dd15d0fcd40acbecadf824a99c611efce876ba73c5df9b9a8a2defc95214",
          "name": "acc-operator"
        },
        {
          "digest": "sha256:a5c16c64229aac3564c66816c123e81a849ff93b8a443cd6ff14bd8d63c06644",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:a5c16c64229aac3564c66816c123e81a849ff93b8a443cd6ff14bd8d63c06644",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:33d1dd15d0fcd40acbecadf824a99c611efce876ba73c5df9b9a8a2defc95214",
          "image": "registry.connect.redhat.com/netapp/acc-operator@sha256:33d1dd15d0fcd40acbecadf824a99c611efce876ba73c5df9b9a8a2defc95214",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "21.10.7",
      "version_original": "21.10.7"
    },
    {
      "_id": "61a02dc7bfd4a5234d595e91",
      "alm_examples": [
        {
          "api_version": "ibm.com/v1",
          "kind": "IBMSecurityVerify",
          "metadata": {
            "name": "ibmsecurityverify-sample"
          },
          "spec": {
            "clientSecret": "--secret--",
            "sessionLifetime": 3600,
            "ssoPath": "/verify-sso"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/verify-operator-bundle@sha256:1a4b2faf029a41c1092664f10cd36b7b3eaa60f471885eb97b22c41899138fce",
      "bundle_path_digest": "sha256:1a4b2faf029a41c1092664f10cd36b7b3eaa60f471885eb97b22c41899138fce",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-26T00:43:51.098000+00:00",
      "csv_description": "[IBM Security Verify](https://www.ibm.com/products/verify-saas) is an Identity-as-a-Service platform that allows IT, security and business leaders to protect their digital users, assets and data in a hybrid, multi-cloud world by enabling technical agility and operational efficiency. IBM Security Verify SaaS provides single sign-on (SSO), multi-factor authentication (MFA), AI-powered context for risk-based authentication for adaptive access decisions, user management, access recertification campaigns and identity analytics.\n\nAs part of using Red Hat OpenShift, you are entitled to Verify SaaS SSO for unlimited apps and users.  If you do not already have a Verify SaaS SSO tenant a new one can be [created](https://www.ibm.com/account/reg/us-en/signup?formid=urx-51255).\n\nFor a detailed description of IBM Security Verify refer to the [Official documentation](https://www.ibm.com/docs/en/security-verify).\n\nThe IBM Security Verify operator can consistently enforce policy-driven security by using the Ingress networking capability of OpenShift in conjunction with the [Nginx Ingress operator](https://www.nginx.com/blog/getting-started-nginx-ingress-operator-red-hat-openshift/). With this approach, you can enforce authentication and authorization policies for all of the applications in your cluster at the same time, without ever changing your application code. You can also dynamically register your application to start protecting them centrally from the cloud via Verify SaaS. \n\nSee the project [Readme](https://github.com/IBM-Security/verify-operator/blob/master/README.md) for further information and details.\n\n",
      "csv_display_name": "IBM Security Verify Operator",
      "csv_metadata_description": "The IBM Security Verify operator can consistently enforce policy-driven security, including authentication and authorization, using the Ingress networking capability of OpenShift.",
      "csv_name": "ibm-security-verify-operator.v21.11.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:29:45.851000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "ibm-security-verify-operator",
      "provided_apis": [
        {
          "group": "ibm.com",
          "kind": "IBMSecurityVerify",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f6eeba8d714bff4ce0463ac90864b21091500a873dad40208f9e56f8e30ff94a",
          "image": "ibmcom/verify-operator@sha256:f6eeba8d714bff4ce0463ac90864b21091500a873dad40208f9e56f8e30ff94a",
          "name": "verify-operator-f6eeba8d714bff4ce0463ac90864b21091500a873dad40208f9e56f8e30ff94a-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:f6eeba8d714bff4ce0463ac90864b21091500a873dad40208f9e56f8e30ff94a",
          "image": "ibmcom/verify-operator@sha256:f6eeba8d714bff4ce0463ac90864b21091500a873dad40208f9e56f8e30ff94a",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "21.11.1",
      "version_original": "21.11.1"
    },
    {
      "_id": "61a02de1bfd4a5234d595e92",
      "alm_examples": [
        {
          "api_version": "ibm.com/v1",
          "kind": "IBMSecurityVerify",
          "metadata": {
            "name": "ibmsecurityverify-sample"
          },
          "spec": {
            "clientSecret": "--secret--",
            "sessionLifetime": 3600,
            "ssoPath": "/verify-sso"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/verify-operator-bundle@sha256:1a4b2faf029a41c1092664f10cd36b7b3eaa60f471885eb97b22c41899138fce",
      "bundle_path_digest": "sha256:1a4b2faf029a41c1092664f10cd36b7b3eaa60f471885eb97b22c41899138fce",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-26T00:44:17.229000+00:00",
      "csv_description": "[IBM Security Verify](https://www.ibm.com/products/verify-saas) is an Identity-as-a-Service platform that allows IT, security and business leaders to protect their digital users, assets and data in a hybrid, multi-cloud world by enabling technical agility and operational efficiency. IBM Security Verify SaaS provides single sign-on (SSO), multi-factor authentication (MFA), AI-powered context for risk-based authentication for adaptive access decisions, user management, access recertification campaigns and identity analytics.\n\nAs part of using Red Hat OpenShift, you are entitled to Verify SaaS SSO for unlimited apps and users.  If you do not already have a Verify SaaS SSO tenant a new one can be [created](https://www.ibm.com/account/reg/us-en/signup?formid=urx-51255).\n\nFor a detailed description of IBM Security Verify refer to the [Official documentation](https://www.ibm.com/docs/en/security-verify).\n\nThe IBM Security Verify operator can consistently enforce policy-driven security by using the Ingress networking capability of OpenShift in conjunction with the [Nginx Ingress operator](https://www.nginx.com/blog/getting-started-nginx-ingress-operator-red-hat-openshift/). With this approach, you can enforce authentication and authorization policies for all of the applications in your cluster at the same time, without ever changing your application code. You can also dynamically register your application to start protecting them centrally from the cloud via Verify SaaS. \n\nSee the project [Readme](https://github.com/IBM-Security/verify-operator/blob/master/README.md) for further information and details.\n\n",
      "csv_display_name": "IBM Security Verify Operator",
      "csv_metadata_description": "The IBM Security Verify operator can consistently enforce policy-driven security, including authentication and authorization, using the Ingress networking capability of OpenShift.",
      "csv_name": "ibm-security-verify-operator.v21.11.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:53:50.309000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "ibm-security-verify-operator",
      "provided_apis": [
        {
          "group": "ibm.com",
          "kind": "IBMSecurityVerify",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f6eeba8d714bff4ce0463ac90864b21091500a873dad40208f9e56f8e30ff94a",
          "image": "ibmcom/verify-operator@sha256:f6eeba8d714bff4ce0463ac90864b21091500a873dad40208f9e56f8e30ff94a",
          "name": "verify-operator-f6eeba8d714bff4ce0463ac90864b21091500a873dad40208f9e56f8e30ff94a-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:f6eeba8d714bff4ce0463ac90864b21091500a873dad40208f9e56f8e30ff94a",
          "image": "ibmcom/verify-operator@sha256:f6eeba8d714bff4ce0463ac90864b21091500a873dad40208f9e56f8e30ff94a",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "21.11.1",
      "version_original": "21.11.1"
    },
    {
      "_id": "61a02e33bfd4a5234d595e93",
      "alm_examples": [
        {
          "api_version": "ibm.com/v1",
          "kind": "IBMSecurityVerify",
          "metadata": {
            "name": "ibmsecurityverify-sample"
          },
          "spec": {
            "clientSecret": "--secret--",
            "sessionLifetime": 3600,
            "ssoPath": "/verify-sso"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/verify-operator-bundle@sha256:1a4b2faf029a41c1092664f10cd36b7b3eaa60f471885eb97b22c41899138fce",
      "bundle_path_digest": "sha256:1a4b2faf029a41c1092664f10cd36b7b3eaa60f471885eb97b22c41899138fce",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-26T00:45:39.220000+00:00",
      "csv_description": "[IBM Security Verify](https://www.ibm.com/products/verify-saas) is an Identity-as-a-Service platform that allows IT, security and business leaders to protect their digital users, assets and data in a hybrid, multi-cloud world by enabling technical agility and operational efficiency. IBM Security Verify SaaS provides single sign-on (SSO), multi-factor authentication (MFA), AI-powered context for risk-based authentication for adaptive access decisions, user management, access recertification campaigns and identity analytics.\n\nAs part of using Red Hat OpenShift, you are entitled to Verify SaaS SSO for unlimited apps and users.  If you do not already have a Verify SaaS SSO tenant a new one can be [created](https://www.ibm.com/account/reg/us-en/signup?formid=urx-51255).\n\nFor a detailed description of IBM Security Verify refer to the [Official documentation](https://www.ibm.com/docs/en/security-verify).\n\nThe IBM Security Verify operator can consistently enforce policy-driven security by using the Ingress networking capability of OpenShift in conjunction with the [Nginx Ingress operator](https://www.nginx.com/blog/getting-started-nginx-ingress-operator-red-hat-openshift/). With this approach, you can enforce authentication and authorization policies for all of the applications in your cluster at the same time, without ever changing your application code. You can also dynamically register your application to start protecting them centrally from the cloud via Verify SaaS. \n\nSee the project [Readme](https://github.com/IBM-Security/verify-operator/blob/master/README.md) for further information and details.\n\n",
      "csv_display_name": "IBM Security Verify Operator",
      "csv_metadata_description": "The IBM Security Verify operator can consistently enforce policy-driven security, including authentication and authorization, using the Ingress networking capability of OpenShift.",
      "csv_name": "ibm-security-verify-operator.v21.11.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:38:16.634000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "ibm-security-verify-operator",
      "provided_apis": [
        {
          "group": "ibm.com",
          "kind": "IBMSecurityVerify",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f6eeba8d714bff4ce0463ac90864b21091500a873dad40208f9e56f8e30ff94a",
          "image": "ibmcom/verify-operator@sha256:f6eeba8d714bff4ce0463ac90864b21091500a873dad40208f9e56f8e30ff94a",
          "name": "verify-operator-f6eeba8d714bff4ce0463ac90864b21091500a873dad40208f9e56f8e30ff94a-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:f6eeba8d714bff4ce0463ac90864b21091500a873dad40208f9e56f8e30ff94a",
          "image": "ibmcom/verify-operator@sha256:f6eeba8d714bff4ce0463ac90864b21091500a873dad40208f9e56f8e30ff94a",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "21.11.1",
      "version_original": "21.11.1"
    },
    {
      "_id": "61a09df43e9240fca360f35d",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:c8a08a5e6ca7ec66f11388a3e37b79b12f3fbbdd272eebb8431e2189f1ed320e",
      "bundle_path_digest": "sha256:c8a08a5e6ca7ec66f11388a3e37b79b12f3fbbdd272eebb8431e2189f1ed320e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-26T08:42:28.923000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.3.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:21:57.275000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:32178a16dd2115e0a11a2e3dfbfc130ae1d0afd8e293131e76b6fc1a79b36c12",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:32178a16dd2115e0a11a2e3dfbfc130ae1d0afd8e293131e76b6fc1a79b36c12",
          "name": "kubeturbo-operator-32178a16dd2115e0a11a2e3dfbfc130ae1d0afd8e293131e76b6fc1a79b36c12-annotation"
        },
        {
          "digest": "sha256:32178a16dd2115e0a11a2e3dfbfc130ae1d0afd8e293131e76b6fc1a79b36c12",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:32178a16dd2115e0a11a2e3dfbfc130ae1d0afd8e293131e76b6fc1a79b36c12",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:b023cf3d89b21fb3c1b7d8209cbe340d2daa1608ad586e6bd8387e",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:b023cf3d89b21fb3c1b7d8209cbe340d2daa1608ad586e6bd8387e",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "8.3.6",
      "version_original": "8.3.6"
    },
    {
      "_id": "61a0b374bfd4a5234d595eae",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:c8a08a5e6ca7ec66f11388a3e37b79b12f3fbbdd272eebb8431e2189f1ed320e",
      "bundle_path_digest": "sha256:c8a08a5e6ca7ec66f11388a3e37b79b12f3fbbdd272eebb8431e2189f1ed320e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-26T10:14:12.926000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.3.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T10:58:50.571000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:32178a16dd2115e0a11a2e3dfbfc130ae1d0afd8e293131e76b6fc1a79b36c12",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:32178a16dd2115e0a11a2e3dfbfc130ae1d0afd8e293131e76b6fc1a79b36c12",
          "name": "kubeturbo-operator-32178a16dd2115e0a11a2e3dfbfc130ae1d0afd8e293131e76b6fc1a79b36c12-annotation"
        },
        {
          "digest": "sha256:32178a16dd2115e0a11a2e3dfbfc130ae1d0afd8e293131e76b6fc1a79b36c12",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:32178a16dd2115e0a11a2e3dfbfc130ae1d0afd8e293131e76b6fc1a79b36c12",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:b023cf3d89b21fb3c1b7d8209cbe340d2daa1608ad586e6bd8387e",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:b023cf3d89b21fb3c1b7d8209cbe340d2daa1608ad586e6bd8387e",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.3.6",
      "version_original": "8.3.6"
    },
    {
      "_id": "61a0b3fec17162a20c1c6618",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:c8a08a5e6ca7ec66f11388a3e37b79b12f3fbbdd272eebb8431e2189f1ed320e",
      "bundle_path_digest": "sha256:c8a08a5e6ca7ec66f11388a3e37b79b12f3fbbdd272eebb8431e2189f1ed320e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-26T10:16:30.893000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.3.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:56:42.550000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:32178a16dd2115e0a11a2e3dfbfc130ae1d0afd8e293131e76b6fc1a79b36c12",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:32178a16dd2115e0a11a2e3dfbfc130ae1d0afd8e293131e76b6fc1a79b36c12",
          "name": "kubeturbo-operator-32178a16dd2115e0a11a2e3dfbfc130ae1d0afd8e293131e76b6fc1a79b36c12-annotation"
        },
        {
          "digest": "sha256:32178a16dd2115e0a11a2e3dfbfc130ae1d0afd8e293131e76b6fc1a79b36c12",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:32178a16dd2115e0a11a2e3dfbfc130ae1d0afd8e293131e76b6fc1a79b36c12",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:b023cf3d89b21fb3c1b7d8209cbe340d2daa1608ad586e6bd8387e",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:b023cf3d89b21fb3c1b7d8209cbe340d2daa1608ad586e6bd8387e",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "8.3.6",
      "version_original": "8.3.6"
    },
    {
      "_id": "61a0bfa1c17162a20c1c661e",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:c8a08a5e6ca7ec66f11388a3e37b79b12f3fbbdd272eebb8431e2189f1ed320e",
      "bundle_path_digest": "sha256:c8a08a5e6ca7ec66f11388a3e37b79b12f3fbbdd272eebb8431e2189f1ed320e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-26T11:06:09.210000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.3.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:14:53.879000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:32178a16dd2115e0a11a2e3dfbfc130ae1d0afd8e293131e76b6fc1a79b36c12",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:32178a16dd2115e0a11a2e3dfbfc130ae1d0afd8e293131e76b6fc1a79b36c12",
          "name": "kubeturbo-operator-32178a16dd2115e0a11a2e3dfbfc130ae1d0afd8e293131e76b6fc1a79b36c12-annotation"
        },
        {
          "digest": "sha256:32178a16dd2115e0a11a2e3dfbfc130ae1d0afd8e293131e76b6fc1a79b36c12",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:32178a16dd2115e0a11a2e3dfbfc130ae1d0afd8e293131e76b6fc1a79b36c12",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:b023cf3d89b21fb3c1b7d8209cbe340d2daa1608ad586e6bd8387e",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:b023cf3d89b21fb3c1b7d8209cbe340d2daa1608ad586e6bd8387e",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.3.6",
      "version_original": "8.3.6"
    },
    {
      "_id": "61a17e62c17162a20c1c6636",
      "alm_examples": [
        {
          "api_version": "apps.docker.io/v1alpha1",
          "kind": "CarbonetesAnalyzer",
          "metadata": {
            "name": "carbonetesanalyzer"
          },
          "spec": {
            "affinity": {},
            "autoscaling": {
              "enabled": false,
              "maxReplicas": 100,
              "minReplicas": 1,
              "targetCPUUtilizationPercentage": 80
            },
            "carbonetesCreds": {
              "password": "",
              "username": ""
            },
            "debugging": {
              "enabled": false
            },
            "fullnameOverride": "",
            "image": {
              "pullPolicy": "Always",
              "repository": "quay.carbonetes.com/carbonetes/carbonetes-analyzer@sha256:1b9b93c9a37f7138c6a6259d20a3cfe254a47b294adc48849008ecbb9917697f"
            },
            "imagePullSecrets": [],
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [
                {
                  "host": "chart.local",
                  "paths": []
                }
              ],
              "tls": []
            },
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "replicaCount": 1,
            "resources": {},
            "securityContext": {},
            "service": {
              "port": 3000,
              "type": "ClusterIP"
            },
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": "carbonetes-analyzer"
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/carbonetes/operator-bundle@sha256:ba799a2e818d8efe1ed200e366984b1e61baa7ec781c782e74e230692b1f98a6",
      "bundle_path_digest": "sha256:ba799a2e818d8efe1ed200e366984b1e61baa7ec781c782e74e230692b1f98a6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-27T00:40:02.340000+00:00",
      "csv_description": "A Kubernetes Operator for creating Carbonetes Analyzer instances that Provides complete container analysis and policy evaluation as a fully managed service.\n\nCarbonetes analyzes your container images for native code vulnerabilities, software composition analysis (SCA), license types, malware, secrets, and bill of materials.\n\n## Prerequisites\n\nTo start using the Operator, you will need to create a secret containing your Carbonetes username and password.\n\n```\nkubectl create namespace carbonetes-operator\nkubectl create secret generic carbonetes-secrets --from-literal=username=${CARBONETES_USERNAME}--from-literal=password=${CARBONETES_PASSWORD}\n```\nDon't have the account yet? [Sign up now](https://console.carbonetes.com).",
      "csv_display_name": "Carbonetes Operator",
      "csv_metadata_description": "A Kubernetes Operator for creating Carbonetes Analyzer instances.",
      "csv_name": "carbonetes-operator.v1.0.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:52:43.133000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "carbonetes-operator",
      "provided_apis": [
        {
          "group": "apps.docker.io",
          "kind": "CarbonetesAnalyzer",
          "plural": "carbonetesanalyzers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772",
          "image": "quay.carbonetes.com/carbonetes/operator@sha256:82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772",
          "name": "carbonetes-operator"
        },
        {
          "digest": "sha256:82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772",
          "image": "quay.carbonetes.com/carbonetes/operator@sha256:82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772",
          "name": "operator-82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772-annotation"
        },
        {
          "digest": "sha256:82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772",
          "image": "quay.carbonetes.com/carbonetes/operator@sha256:82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772",
          "name": "manager"
        },
        {
          "digest": "sha256:1b9b93c9a37f7138c6a6259d20a3cfe254a47b294adc48849008ecbb9917697f",
          "image": "quay.carbonetes.com/carbonetes/carbonetes-analyzer@sha256:1b9b93c9a37f7138c6a6259d20a3cfe254a47b294adc48849008ecbb9917697f",
          "name": "carbonetes-analyzer-1b9b93c9a37f7138c6a6259d20a3cfe254a47b294adc48849008ecbb9917697f-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.5",
      "version_original": "1.0.5"
    },
    {
      "_id": "61a17f1fbfd4a5234d595ec4",
      "alm_examples": [
        {
          "api_version": "apps.docker.io/v1alpha1",
          "kind": "CarbonetesAnalyzer",
          "metadata": {
            "name": "carbonetesanalyzer"
          },
          "spec": {
            "affinity": {},
            "autoscaling": {
              "enabled": false,
              "maxReplicas": 100,
              "minReplicas": 1,
              "targetCPUUtilizationPercentage": 80
            },
            "carbonetesCreds": {
              "password": "",
              "username": ""
            },
            "debugging": {
              "enabled": false
            },
            "fullnameOverride": "",
            "image": {
              "pullPolicy": "Always",
              "repository": "quay.carbonetes.com/carbonetes/carbonetes-analyzer@sha256:1b9b93c9a37f7138c6a6259d20a3cfe254a47b294adc48849008ecbb9917697f"
            },
            "imagePullSecrets": [],
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [
                {
                  "host": "chart.local",
                  "paths": []
                }
              ],
              "tls": []
            },
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "replicaCount": 1,
            "resources": {},
            "securityContext": {},
            "service": {
              "port": 3000,
              "type": "ClusterIP"
            },
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": "carbonetes-analyzer"
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/carbonetes/operator-bundle@sha256:ba799a2e818d8efe1ed200e366984b1e61baa7ec781c782e74e230692b1f98a6",
      "bundle_path_digest": "sha256:ba799a2e818d8efe1ed200e366984b1e61baa7ec781c782e74e230692b1f98a6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-27T00:43:11.841000+00:00",
      "csv_description": "A Kubernetes Operator for creating Carbonetes Analyzer instances that Provides complete container analysis and policy evaluation as a fully managed service.\n\nCarbonetes analyzes your container images for native code vulnerabilities, software composition analysis (SCA), license types, malware, secrets, and bill of materials.\n\n## Prerequisites\n\nTo start using the Operator, you will need to create a secret containing your Carbonetes username and password.\n\n```\nkubectl create namespace carbonetes-operator\nkubectl create secret generic carbonetes-secrets --from-literal=username=${CARBONETES_USERNAME}--from-literal=password=${CARBONETES_PASSWORD}\n```\nDon't have the account yet? [Sign up now](https://console.carbonetes.com).",
      "csv_display_name": "Carbonetes Operator",
      "csv_metadata_description": "A Kubernetes Operator for creating Carbonetes Analyzer instances.",
      "csv_name": "carbonetes-operator.v1.0.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:13:11.528000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "carbonetes-operator",
      "provided_apis": [
        {
          "group": "apps.docker.io",
          "kind": "CarbonetesAnalyzer",
          "plural": "carbonetesanalyzers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772",
          "image": "quay.carbonetes.com/carbonetes/operator@sha256:82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772",
          "name": "carbonetes-operator"
        },
        {
          "digest": "sha256:82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772",
          "image": "quay.carbonetes.com/carbonetes/operator@sha256:82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772",
          "name": "operator-82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772-annotation"
        },
        {
          "digest": "sha256:82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772",
          "image": "quay.carbonetes.com/carbonetes/operator@sha256:82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772",
          "name": "manager"
        },
        {
          "digest": "sha256:1b9b93c9a37f7138c6a6259d20a3cfe254a47b294adc48849008ecbb9917697f",
          "image": "quay.carbonetes.com/carbonetes/carbonetes-analyzer@sha256:1b9b93c9a37f7138c6a6259d20a3cfe254a47b294adc48849008ecbb9917697f",
          "name": "carbonetes-analyzer-1b9b93c9a37f7138c6a6259d20a3cfe254a47b294adc48849008ecbb9917697f-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.5",
      "version_original": "1.0.5"
    },
    {
      "_id": "61a20593bfd4a5234d595ecc",
      "alm_examples": [
        {
          "api_version": "apps.docker.io/v1alpha1",
          "kind": "CarbonetesAnalyzer",
          "metadata": {
            "name": "carbonetesanalyzer"
          },
          "spec": {
            "affinity": {},
            "autoscaling": {
              "enabled": false,
              "maxReplicas": 100,
              "minReplicas": 1,
              "targetCPUUtilizationPercentage": 80
            },
            "carbonetesCreds": {
              "password": "",
              "username": ""
            },
            "debugging": {
              "enabled": false
            },
            "fullnameOverride": "",
            "image": {
              "pullPolicy": "Always",
              "repository": "quay.carbonetes.com/carbonetes/carbonetes-analyzer@sha256:1b9b93c9a37f7138c6a6259d20a3cfe254a47b294adc48849008ecbb9917697f"
            },
            "imagePullSecrets": [],
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [
                {
                  "host": "chart.local",
                  "paths": []
                }
              ],
              "tls": []
            },
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "replicaCount": 1,
            "resources": {},
            "securityContext": {},
            "service": {
              "port": 3000,
              "type": "ClusterIP"
            },
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": "carbonetes-analyzer"
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/carbonetes/operator-bundle@sha256:ba799a2e818d8efe1ed200e366984b1e61baa7ec781c782e74e230692b1f98a6",
      "bundle_path_digest": "sha256:ba799a2e818d8efe1ed200e366984b1e61baa7ec781c782e74e230692b1f98a6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-27T10:16:51.887000+00:00",
      "csv_description": "A Kubernetes Operator for creating Carbonetes Analyzer instances that Provides complete container analysis and policy evaluation as a fully managed service.\n\nCarbonetes analyzes your container images for native code vulnerabilities, software composition analysis (SCA), license types, malware, secrets, and bill of materials.\n\n## Prerequisites\n\nTo start using the Operator, you will need to create a secret containing your Carbonetes username and password.\n\n```\nkubectl create namespace carbonetes-operator\nkubectl create secret generic carbonetes-secrets --from-literal=username=${CARBONETES_USERNAME}--from-literal=password=${CARBONETES_PASSWORD}\n```\nDon't have the account yet? [Sign up now](https://console.carbonetes.com).",
      "csv_display_name": "Carbonetes Operator",
      "csv_metadata_description": "A Kubernetes Operator for creating Carbonetes Analyzer instances.",
      "csv_name": "carbonetes-operator.v1.0.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:51:31.798000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "carbonetes-operator",
      "provided_apis": [
        {
          "group": "apps.docker.io",
          "kind": "CarbonetesAnalyzer",
          "plural": "carbonetesanalyzers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772",
          "image": "quay.carbonetes.com/carbonetes/operator@sha256:82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772",
          "name": "carbonetes-operator"
        },
        {
          "digest": "sha256:82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772",
          "image": "quay.carbonetes.com/carbonetes/operator@sha256:82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772",
          "name": "operator-82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772-annotation"
        },
        {
          "digest": "sha256:82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772",
          "image": "quay.carbonetes.com/carbonetes/operator@sha256:82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772",
          "name": "manager"
        },
        {
          "digest": "sha256:1b9b93c9a37f7138c6a6259d20a3cfe254a47b294adc48849008ecbb9917697f",
          "image": "quay.carbonetes.com/carbonetes/carbonetes-analyzer@sha256:1b9b93c9a37f7138c6a6259d20a3cfe254a47b294adc48849008ecbb9917697f",
          "name": "carbonetes-analyzer-1b9b93c9a37f7138c6a6259d20a3cfe254a47b294adc48849008ecbb9917697f-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.0.5",
      "version_original": "1.0.5"
    },
    {
      "_id": "61a418fcbfd4a5234d595ed5",
      "alm_examples": [
        {
          "api_version": "rc.app.stacks/v1beta2",
          "kind": "RuntimeComponent",
          "metadata": {
            "name": "runtimecomponent-sample"
          },
          "spec": {
            "applicationImage": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
            "expose": true,
            "replicas": 1,
            "service": {
              "port": 9080
            }
          }
        },
        {
          "api_version": "rc.app.stacks/v1beta2",
          "kind": "RuntimeOperation",
          "metadata": {
            "name": "runtimeoperation-sample"
          },
          "spec": {
            "command": [
              "./your_script.sh"
            ],
            "containerName": "app",
            "podName": "Specify_Pod_Name_Here"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/runtime-component-operator-bundle@sha256:65cc8aa40608b76956ff8c19316b63f805d7a28e8d7697b9ea1d427888a2ccdf",
      "bundle_path_digest": "sha256:65cc8aa40608b76956ff8c19316b63f805d7a28e8d7697b9ea1d427888a2ccdf",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "beta2",
      "creation_date": "2021-11-29T00:04:12.004000+00:00",
      "csv_description": "This advanced Operator is capable of deploying any runtime component image with consistent, production-grade QoS. It enables enterprise architects to govern the way their applications get deployed & managed in the cluster, while dramatically reducing the learning curve for developers to deploy into Kubernetes - allowing them to focus on writing the code!\nHere are some key features:\n\n#### Application Lifecyle\nYou can deploy your runtime component container by either pointing to a container image, or an OpenShift ImageStream. When using an ImageStream the Operator will watch for any updates and will re-deploy the modified image.\n\n#### Custom RBAC\nThis Operator is capable of using a custom ServiceAccount from the caller, allowing it to follow RBAC restrictions. By default it creates a ServiceAccount if one is not specified, which can also be bound with specific roles.\n\n#### Environment Configuration\nYou can configure a variety of artifacts with your deployment, such as: labels, annotations, and environment variables from a ConfigMap, a Secret or a value.\n\n#### Routing\nExpose your application to external users via a single toggle to create a Route on OpenShift or an Ingress on other Kubernetes environments. Advanced configuration, such as TLS settings, are also easily enabled.  Expiring Route certificates are re-issued.\n\n#### High Availability via Horizontal Pod Autoscaling\nRun multiple instances of your application for high availability. Either specify a static number of replicas or easily configure horizontal auto scaling to create (and delete) instances based on resource consumption.\n\n#### Persistence and advanced storage\nEnable persistence for your application by specifying simple requirements: just tell us the size of the storage and where you would like it to be mounted and We will create and manage that storage for you.\nThis toggles a StatefulSet resource instead of a Deployment resource, so your container can recover transactions and state upon a pod restart.\nWe offer an advanced mode where the user specifies a built-in PersistentVolumeClaim, allowing them to configure many details of the persistent volume, such as its storage class and access mode.\n\n#### Service Binding\nEasily bind to available services in your cluster.  Your runtime components can expose and consume other services by simply specifying the target endpoinds: we take care of the heavy lifting such as creating k8s Secrets, injecting them into your container and watching for any changes in configuration!  This way your applications can dynamically reconnect to its required services without any intervention or interruption.\n\n#### Exposing metrics to Prometheus\nThe Runtime Component Operator exposes the runtime container's metrics via the [Prometheus Operator](https://operatorhub.io/operator/prometheus).\nUsers can pick between a basic mode, where they simply specify the label that Prometheus is watching to scrape the metrics from the container, or they can specify the full `ServiceMonitor` spec embedded into the RuntimeComponent's `spec.monitoring` key controlling things like the poll internal and security credentials.\n\n#### Easily mount logs and transaction directories\nIf you need to mount the logs and transaction data from your runtime component to an external volume such as NFS (or any storage supported in your cluster), simply add the following (customizing the folder location and size) to your RuntimeComponent CR:\n``` storage: size: 2Gi mountPath: \"/logs\" ```\n\n#### Integration with OpenShift Serverless\nDeploy your serverless runtime component using a single toggle.  The Operator will convert all of its generated resources into [Knative](https://knative.dev) resources, allowing your pod to automatically scale to 0 when it is idle.\n\n#### Integration with OpenShift's Topology UI\nWe set the corresponding labels to support OpenShift's Developer Topology UI, which allows you to visualize your entire set of deployments and how they are connected.\n\nSee our [**documentation**](https://github.com/application-stacks/runtime-component-operator/tree/main/doc/) for more information.\n",
      "csv_display_name": "Runtime Component",
      "csv_metadata_description": "Deploys any runtime component with dynamic and auto-tuning configuration",
      "csv_name": "runtime-component.v0.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:58:02.920000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "runtime-component-operator-certified",
      "provided_apis": [
        {
          "group": "rc.app.stacks",
          "kind": "RuntimeComponent",
          "plural": "runtimecomponents",
          "version": "v1beta2"
        },
        {
          "group": "rc.app.stacks",
          "kind": "RuntimeOperation",
          "plural": "runtimeoperations",
          "version": "v1beta2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:febfbe4a75018bfdb1f3cb13caaa3e5e321bf9f8ac5ca1405dae96f9798bde2b",
          "image": "registry.connect.redhat.com/ibm/runtime-component-operator@sha256:febfbe4a75018bfdb1f3cb13caaa3e5e321bf9f8ac5ca1405dae96f9798bde2b",
          "name": "runtime-component-operator-febfbe4a75018bfdb1f3cb13caaa3e5e321bf9f8ac5ca1405dae96f9798bde2b-annotation"
        },
        {
          "digest": "sha256:febfbe4a75018bfdb1f3cb13caaa3e5e321bf9f8ac5ca1405dae96f9798bde2b",
          "image": "registry.connect.redhat.com/ibm/runtime-component-operator@sha256:febfbe4a75018bfdb1f3cb13caaa3e5e321bf9f8ac5ca1405dae96f9798bde2b",
          "name": "manager"
        },
        {
          "digest": "sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "image": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "name": "open-liberty-samples-8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.8.0",
      "version_original": "0.8.0"
    },
    {
      "_id": "61a419db27e166330707d7bc",
      "alm_examples": [
        {
          "api_version": "rc.app.stacks/v1beta2",
          "kind": "RuntimeComponent",
          "metadata": {
            "name": "runtimecomponent-sample"
          },
          "spec": {
            "applicationImage": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
            "expose": true,
            "replicas": 1,
            "service": {
              "port": 9080
            }
          }
        },
        {
          "api_version": "rc.app.stacks/v1beta2",
          "kind": "RuntimeOperation",
          "metadata": {
            "name": "runtimeoperation-sample"
          },
          "spec": {
            "command": [
              "./your_script.sh"
            ],
            "containerName": "app",
            "podName": "Specify_Pod_Name_Here"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/runtime-component-operator-bundle@sha256:65cc8aa40608b76956ff8c19316b63f805d7a28e8d7697b9ea1d427888a2ccdf",
      "bundle_path_digest": "sha256:65cc8aa40608b76956ff8c19316b63f805d7a28e8d7697b9ea1d427888a2ccdf",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "beta2",
      "creation_date": "2021-11-29T00:07:55.052000+00:00",
      "csv_description": "This advanced Operator is capable of deploying any runtime component image with consistent, production-grade QoS. It enables enterprise architects to govern the way their applications get deployed & managed in the cluster, while dramatically reducing the learning curve for developers to deploy into Kubernetes - allowing them to focus on writing the code!\nHere are some key features:\n\n#### Application Lifecyle\nYou can deploy your runtime component container by either pointing to a container image, or an OpenShift ImageStream. When using an ImageStream the Operator will watch for any updates and will re-deploy the modified image.\n\n#### Custom RBAC\nThis Operator is capable of using a custom ServiceAccount from the caller, allowing it to follow RBAC restrictions. By default it creates a ServiceAccount if one is not specified, which can also be bound with specific roles.\n\n#### Environment Configuration\nYou can configure a variety of artifacts with your deployment, such as: labels, annotations, and environment variables from a ConfigMap, a Secret or a value.\n\n#### Routing\nExpose your application to external users via a single toggle to create a Route on OpenShift or an Ingress on other Kubernetes environments. Advanced configuration, such as TLS settings, are also easily enabled.  Expiring Route certificates are re-issued.\n\n#### High Availability via Horizontal Pod Autoscaling\nRun multiple instances of your application for high availability. Either specify a static number of replicas or easily configure horizontal auto scaling to create (and delete) instances based on resource consumption.\n\n#### Persistence and advanced storage\nEnable persistence for your application by specifying simple requirements: just tell us the size of the storage and where you would like it to be mounted and We will create and manage that storage for you.\nThis toggles a StatefulSet resource instead of a Deployment resource, so your container can recover transactions and state upon a pod restart.\nWe offer an advanced mode where the user specifies a built-in PersistentVolumeClaim, allowing them to configure many details of the persistent volume, such as its storage class and access mode.\n\n#### Service Binding\nEasily bind to available services in your cluster.  Your runtime components can expose and consume other services by simply specifying the target endpoinds: we take care of the heavy lifting such as creating k8s Secrets, injecting them into your container and watching for any changes in configuration!  This way your applications can dynamically reconnect to its required services without any intervention or interruption.\n\n#### Exposing metrics to Prometheus\nThe Runtime Component Operator exposes the runtime container's metrics via the [Prometheus Operator](https://operatorhub.io/operator/prometheus).\nUsers can pick between a basic mode, where they simply specify the label that Prometheus is watching to scrape the metrics from the container, or they can specify the full `ServiceMonitor` spec embedded into the RuntimeComponent's `spec.monitoring` key controlling things like the poll internal and security credentials.\n\n#### Easily mount logs and transaction directories\nIf you need to mount the logs and transaction data from your runtime component to an external volume such as NFS (or any storage supported in your cluster), simply add the following (customizing the folder location and size) to your RuntimeComponent CR:\n``` storage: size: 2Gi mountPath: \"/logs\" ```\n\n#### Integration with OpenShift Serverless\nDeploy your serverless runtime component using a single toggle.  The Operator will convert all of its generated resources into [Knative](https://knative.dev) resources, allowing your pod to automatically scale to 0 when it is idle.\n\n#### Integration with OpenShift's Topology UI\nWe set the corresponding labels to support OpenShift's Developer Topology UI, which allows you to visualize your entire set of deployments and how they are connected.\n\nSee our [**documentation**](https://github.com/application-stacks/runtime-component-operator/tree/main/doc/) for more information.\n",
      "csv_display_name": "Runtime Component",
      "csv_metadata_description": "Deploys any runtime component with dynamic and auto-tuning configuration",
      "csv_name": "runtime-component.v0.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:37:24.973000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "runtime-component-operator-certified",
      "provided_apis": [
        {
          "group": "rc.app.stacks",
          "kind": "RuntimeComponent",
          "plural": "runtimecomponents",
          "version": "v1beta2"
        },
        {
          "group": "rc.app.stacks",
          "kind": "RuntimeOperation",
          "plural": "runtimeoperations",
          "version": "v1beta2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:febfbe4a75018bfdb1f3cb13caaa3e5e321bf9f8ac5ca1405dae96f9798bde2b",
          "image": "registry.connect.redhat.com/ibm/runtime-component-operator@sha256:febfbe4a75018bfdb1f3cb13caaa3e5e321bf9f8ac5ca1405dae96f9798bde2b",
          "name": "runtime-component-operator-febfbe4a75018bfdb1f3cb13caaa3e5e321bf9f8ac5ca1405dae96f9798bde2b-annotation"
        },
        {
          "digest": "sha256:febfbe4a75018bfdb1f3cb13caaa3e5e321bf9f8ac5ca1405dae96f9798bde2b",
          "image": "registry.connect.redhat.com/ibm/runtime-component-operator@sha256:febfbe4a75018bfdb1f3cb13caaa3e5e321bf9f8ac5ca1405dae96f9798bde2b",
          "name": "manager"
        },
        {
          "digest": "sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "image": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "name": "open-liberty-samples-8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.8.0",
      "version_original": "0.8.0"
    },
    {
      "_id": "61a419e1c17162a20c1c664e",
      "alm_examples": [
        {
          "api_version": "rc.app.stacks/v1beta2",
          "kind": "RuntimeComponent",
          "metadata": {
            "name": "runtimecomponent-sample"
          },
          "spec": {
            "applicationImage": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
            "expose": true,
            "replicas": 1,
            "service": {
              "port": 9080
            }
          }
        },
        {
          "api_version": "rc.app.stacks/v1beta2",
          "kind": "RuntimeOperation",
          "metadata": {
            "name": "runtimeoperation-sample"
          },
          "spec": {
            "command": [
              "./your_script.sh"
            ],
            "containerName": "app",
            "podName": "Specify_Pod_Name_Here"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/runtime-component-operator-bundle@sha256:65cc8aa40608b76956ff8c19316b63f805d7a28e8d7697b9ea1d427888a2ccdf",
      "bundle_path_digest": "sha256:65cc8aa40608b76956ff8c19316b63f805d7a28e8d7697b9ea1d427888a2ccdf",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "beta2",
      "creation_date": "2021-11-29T00:08:01.904000+00:00",
      "csv_description": "This advanced Operator is capable of deploying any runtime component image with consistent, production-grade QoS. It enables enterprise architects to govern the way their applications get deployed & managed in the cluster, while dramatically reducing the learning curve for developers to deploy into Kubernetes - allowing them to focus on writing the code!\nHere are some key features:\n\n#### Application Lifecyle\nYou can deploy your runtime component container by either pointing to a container image, or an OpenShift ImageStream. When using an ImageStream the Operator will watch for any updates and will re-deploy the modified image.\n\n#### Custom RBAC\nThis Operator is capable of using a custom ServiceAccount from the caller, allowing it to follow RBAC restrictions. By default it creates a ServiceAccount if one is not specified, which can also be bound with specific roles.\n\n#### Environment Configuration\nYou can configure a variety of artifacts with your deployment, such as: labels, annotations, and environment variables from a ConfigMap, a Secret or a value.\n\n#### Routing\nExpose your application to external users via a single toggle to create a Route on OpenShift or an Ingress on other Kubernetes environments. Advanced configuration, such as TLS settings, are also easily enabled.  Expiring Route certificates are re-issued.\n\n#### High Availability via Horizontal Pod Autoscaling\nRun multiple instances of your application for high availability. Either specify a static number of replicas or easily configure horizontal auto scaling to create (and delete) instances based on resource consumption.\n\n#### Persistence and advanced storage\nEnable persistence for your application by specifying simple requirements: just tell us the size of the storage and where you would like it to be mounted and We will create and manage that storage for you.\nThis toggles a StatefulSet resource instead of a Deployment resource, so your container can recover transactions and state upon a pod restart.\nWe offer an advanced mode where the user specifies a built-in PersistentVolumeClaim, allowing them to configure many details of the persistent volume, such as its storage class and access mode.\n\n#### Service Binding\nEasily bind to available services in your cluster.  Your runtime components can expose and consume other services by simply specifying the target endpoinds: we take care of the heavy lifting such as creating k8s Secrets, injecting them into your container and watching for any changes in configuration!  This way your applications can dynamically reconnect to its required services without any intervention or interruption.\n\n#### Exposing metrics to Prometheus\nThe Runtime Component Operator exposes the runtime container's metrics via the [Prometheus Operator](https://operatorhub.io/operator/prometheus).\nUsers can pick between a basic mode, where they simply specify the label that Prometheus is watching to scrape the metrics from the container, or they can specify the full `ServiceMonitor` spec embedded into the RuntimeComponent's `spec.monitoring` key controlling things like the poll internal and security credentials.\n\n#### Easily mount logs and transaction directories\nIf you need to mount the logs and transaction data from your runtime component to an external volume such as NFS (or any storage supported in your cluster), simply add the following (customizing the folder location and size) to your RuntimeComponent CR:\n``` storage: size: 2Gi mountPath: \"/logs\" ```\n\n#### Integration with OpenShift Serverless\nDeploy your serverless runtime component using a single toggle.  The Operator will convert all of its generated resources into [Knative](https://knative.dev) resources, allowing your pod to automatically scale to 0 when it is idle.\n\n#### Integration with OpenShift's Topology UI\nWe set the corresponding labels to support OpenShift's Developer Topology UI, which allows you to visualize your entire set of deployments and how they are connected.\n\nSee our [**documentation**](https://github.com/application-stacks/runtime-component-operator/tree/main/doc/) for more information.\n",
      "csv_display_name": "Runtime Component",
      "csv_metadata_description": "Deploys any runtime component with dynamic and auto-tuning configuration",
      "csv_name": "runtime-component.v0.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:51:14.486000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "runtime-component-operator-certified",
      "provided_apis": [
        {
          "group": "rc.app.stacks",
          "kind": "RuntimeComponent",
          "plural": "runtimecomponents",
          "version": "v1beta2"
        },
        {
          "group": "rc.app.stacks",
          "kind": "RuntimeOperation",
          "plural": "runtimeoperations",
          "version": "v1beta2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:febfbe4a75018bfdb1f3cb13caaa3e5e321bf9f8ac5ca1405dae96f9798bde2b",
          "image": "registry.connect.redhat.com/ibm/runtime-component-operator@sha256:febfbe4a75018bfdb1f3cb13caaa3e5e321bf9f8ac5ca1405dae96f9798bde2b",
          "name": "runtime-component-operator-febfbe4a75018bfdb1f3cb13caaa3e5e321bf9f8ac5ca1405dae96f9798bde2b-annotation"
        },
        {
          "digest": "sha256:febfbe4a75018bfdb1f3cb13caaa3e5e321bf9f8ac5ca1405dae96f9798bde2b",
          "image": "registry.connect.redhat.com/ibm/runtime-component-operator@sha256:febfbe4a75018bfdb1f3cb13caaa3e5e321bf9f8ac5ca1405dae96f9798bde2b",
          "name": "manager"
        },
        {
          "digest": "sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "image": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "name": "open-liberty-samples-8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.8.0",
      "version_original": "0.8.0"
    },
    {
      "_id": "61a49f6fbfd4a5234d595fc4",
      "alm_examples": [
        {
          "api_version": "federatorai.containers.ai/v1alpha1",
          "kind": "AlamedaService",
          "metadata": {
            "name": "my-alamedaservice"
          },
          "spec": {
            "alamedaAi": {
              "storages": [
                {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "size": "10Gi",
                  "type": "pvc",
                  "usage": "data"
                }
              ]
            },
            "alamedaInfluxdb": {
              "storages": [
                {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "size": "100Gi",
                  "type": "pvc",
                  "usage": "data"
                }
              ]
            },
            "fedemeterInfluxdb": {
              "storages": [
                {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "size": "10Gi",
                  "type": "pvc",
                  "usage": "data"
                }
              ]
            },
            "imageLocation": "registry.connect.redhat.com/prophetstor",
            "storages": [
              {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "size": "2Gi",
                "type": "pvc",
                "usage": "log"
              }
            ],
            "version": "v4.7.2-b1777"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/prophetstor/federatorai-operator-bundle@sha256:8fcbd648e2d8048c8a209e1aba7fa67a0651adeaec5c9523a7a8f3c1b51bd85a",
      "bundle_path_digest": "sha256:8fcbd648e2d8048c8a209e1aba7fa67a0651adeaec5c9523a7a8f3c1b51bd85a",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-29T09:37:51.136000+00:00",
      "csv_description": "Federator.ai helps enterprises optimize cloud resources, maximize application performance, and save significant cost without excessive over-provisioning or under-provisioning of resources, meeting the service-level requirements of their applications.\n\nEnterprises often lack understanding of the resources needed to support their applications. This leads to either excessive over-provisioning or under-provisioning of resources (CPU, memory, storage). Using machine learning, Federator.ai determines the optimal cloud resources needed to support any workload on OpenShift and helps users find the best-cost instances from cloud providers for their applications.\n\n\n**Multi-layer workload prediction**\n\nUsing machine learning and math-based algorithms, Federator.ai predicts containerized application and cluster node resource usage as the basis for resource recommendations at application level as well as at cluster node level. Federator.ai supports prediction for both physical/virtual CPUs and memories.\n\n\n**Auto-scaling via resource recommendation**\n\nFederator.ai utilizes the predicted resource usage to recommend the right number and size of pods for applications. Integrated with Datadog's WPA, applications are automatically scaled to meet the predicted resource usage.\n\n\n**Application-aware recommendation execution**\n\nOptimizing the resource usage and performance goals, Federator.ai uses application specific metrics for workload prediction and pod capacity estimation to auto-scale the right number of pods for best performance without overprovisioning.\n\n\n**Multi-cloud Cost Analysis**\n\nWith resource usage prediction, Federator.ai analyzes potential cost of a cluster on different public cloud providers. It also recommend appropriate cluster nodes and instance types based on resource usage.\n\n\n**Custom Datadog/Sysdig Dashboards**\n\nPredefined custom Datadog/Sysdig Dashboards for workload prediction/recommendation visualization for cluster nodes and applications.\n\n\n**Additional resources**\n\nWant more product information? Explore detailed information about using this product and where to find additional help.\n\n* [Federator.ai Datasheet](https://prophetstor.com/wp-content/uploads/datasheets/Federator.ai.pdf)\n* [Quick Start Guide](https://prophetstor.com/wp-content/uploads/documentation/Federator.ai/Latest%20Version/ProphetStor%20Federator.ai%20Quick%20Installation%20Guide.pdf)\n* [Installation Guide](https://prophetstor.com/wp-content/uploads/2021/08/ProphetStor-Federator.ai-v4.7.0-Installation-Guide-v1.0.pdf)\n* [User Guide](https://prophetstor.com/wp-content/uploads/2021/11/Federator.ai-User-Guide-4.7.2.pdf)\n* [Release Notes](https://prophetstor.com/wp-content/uploads/2021/11/Federator.ai-4.7.2-Release-Notes.pdf)\n* [Company Information](https://www.prophetstor.com/)\n\n\n### Prerequisite\n*  The [Openshift](https://www.openshift.com) version 4.6.x or later if using OpenShift platform.\n*  The [Kubernetes](https://kubernetes.io/) version 1.16 or later if using Kubernetes environment.",
      "csv_display_name": "Federator.ai",
      "csv_metadata_description": "Federator.ai Operator provides easy configuration and management of AI-based Kubernetes resource orchestrator",
      "csv_name": "federatorai.v4.7.2-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:46:28.933000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "federatorai-certified",
      "provided_apis": [
        {
          "group": "federatorai.containers.ai",
          "kind": "AlamedaService",
          "plural": "alamedaservices",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:b12df0a12196c1bf9fd036bfa64507b8469254c3ffbcbdd92333603576200e6c",
          "image": "registry.connect.redhat.com/prophetstor/alameda-ai-dispatcher@sha256:b12df0a12196c1bf9fd036bfa64507b8469254c3ffbcbdd92333603576200e6c",
          "name": "ai-dispatcher"
        },
        {
          "digest": "sha256:c4ca91f8b942f90141f3cacc2b80f4e123058447ae4ad880763360a42408e439",
          "image": "registry.connect.redhat.com/prophetstor/alameda-ai@sha256:c4ca91f8b942f90141f3cacc2b80f4e123058447ae4ad880763360a42408e439",
          "name": "ai_engine"
        },
        {
          "digest": "sha256:a9f8fa8224535f70a959f736aba992b2135018afd57184f4849e8739d1ea2a18",
          "image": "registry.connect.redhat.com/prophetstor/alameda-datahub-ubi@sha256:a9f8fa8224535f70a959f736aba992b2135018afd57184f4849e8739d1ea2a18",
          "name": "datahub"
        },
        {
          "digest": "sha256:d5c6fbd329f49100422a995a4e177ba76c0a49936f0a0c8139250bf1357e992e",
          "image": "registry.connect.redhat.com/prophetstor/alameda-executor-ubi@sha256:d5c6fbd329f49100422a995a4e177ba76c0a49936f0a0c8139250bf1357e992e",
          "name": "executor"
        },
        {
          "digest": "sha256:60328410dc4813c1285ade12533efba9acb602433be7cc1f256fb3ea6312d3c2",
          "image": "registry.connect.redhat.com/prophetstor/fedemeter-api-ubi@sha256:60328410dc4813c1285ade12533efba9acb602433be7cc1f256fb3ea6312d3c2",
          "name": "fedemeter-api"
        },
        {
          "digest": "sha256:163e559a6c684cde953f3515f1df08ebe7e799c53b24add3b225fcd6a976bb12",
          "image": "registry.connect.redhat.com/prophetstor/fedemeter-influxdb@sha256:163e559a6c684cde953f3515f1df08ebe7e799c53b24add3b225fcd6a976bb12",
          "name": "fedemeter-influxdb"
        },
        {
          "digest": "sha256:43641d57b7b694adb090e6377bfd6315aab6193e5637bab91221f076f205d819",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-agent-ubi@sha256:43641d57b7b694adb090e6377bfd6315aab6193e5637bab91221f076f205d819",
          "name": "federatorai-agent"
        },
        {
          "digest": "sha256:8f6ee4e54297b6dadc51bd8dad4d9f67cfb5aa7c4e8de82ad0928d71e1d0d0f7",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-agent-preloader@sha256:8f6ee4e54297b6dadc51bd8dad4d9f67cfb5aa7c4e8de82ad0928d71e1d0d0f7",
          "name": "federatorai-agent-preloader"
        },
        {
          "digest": "sha256:3bde9bb8f63c92619d28c80985e5e30ec4cc96dba8252dff6c3b5f10104db89d",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-dashboard-frontend@sha256:3bde9bb8f63c92619d28c80985e5e30ec4cc96dba8252dff6c3b5f10104db89d",
          "name": "federatorai-dashboard-frontend"
        },
        {
          "digest": "sha256:fa443c901e06aad3780666a4d676b330c61d66d8ea52ae2850f382f68559154d",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-dashboard-backend@sha256:fa443c901e06aad3780666a4d676b330c61d66d8ea52ae2850f382f68559154d",
          "name": "federatorai-dashboard-backend"
        },
        {
          "digest": "sha256:46b206bb1814b2b7d38e9e0d14ef1f0e3c51d7b3f18b32cc92515bffc5ca5b1f",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-data-adapter@sha256:46b206bb1814b2b7d38e9e0d14ef1f0e3c51d7b3f18b32cc92515bffc5ca5b1f",
          "name": "federatorai-data-adapter"
        },
        {
          "digest": "sha256:889136e2f82db71d4c7a5ab39472f578e12315c65bda1ab3dc3ef9adc9d4a6cc",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-rest-ubi@sha256:889136e2f82db71d4c7a5ab39472f578e12315c65bda1ab3dc3ef9adc9d4a6cc",
          "name": "federatorai-restapi"
        },
        {
          "digest": "sha256:75c7ac8323db161c3a37d1931c863bda21f224e67443543572d912b976ee3ff0",
          "image": "registry.connect.redhat.com/prophetstor/alameda-influxdb@sha256:75c7ac8323db161c3a37d1931c863bda21f224e67443543572d912b976ee3ff0",
          "name": "influxdb"
        },
        {
          "digest": "sha256:3738f97c0b50afcf9e6b78d1084e98a3c78e0fd6d10d0a3ae458c27604e395fd",
          "image": "registry.connect.redhat.com/prophetstor/alameda-notifier-ubi@sha256:3738f97c0b50afcf9e6b78d1084e98a3c78e0fd6d10d0a3ae458c27604e395fd",
          "name": "notifier"
        },
        {
          "digest": "sha256:c28e9740e6031f1db3274a3722e9682eb7708479187fcdc5799ae0c21141639b",
          "image": "registry.connect.redhat.com/prophetstor/alameda-operator-ubi@sha256:c28e9740e6031f1db3274a3722e9682eb7708479187fcdc5799ae0c21141639b",
          "name": "operator"
        },
        {
          "digest": "sha256:3db8b480b94452aa7211327ec4ec5382b9b94156dfc7c22e65b5cbf4d0e1140b",
          "image": "registry.connect.redhat.com/prophetstor/alameda-rabbitmq@sha256:3db8b480b94452aa7211327ec4ec5382b9b94156dfc7c22e65b5cbf4d0e1140b",
          "name": "rabbitmq"
        },
        {
          "digest": "sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "image": "registry.connect.redhat.com/prophetstor/alameda-recommender-ubi@sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "name": "federatorai-recommend-dispatcher"
        },
        {
          "digest": "sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "image": "registry.connect.redhat.com/prophetstor/alameda-recommender-ubi@sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "name": "federatorai-recommend-worker"
        },
        {
          "digest": "sha256:23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-operator@sha256:23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3",
          "name": "federatorai-operator-23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3-annotation"
        },
        {
          "digest": "sha256:23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-operator@sha256:23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3",
          "name": "federatorai-operator"
        },
        {
          "digest": "sha256:23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-operator@sha256:23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3",
          "name": "upgrader"
        },
        {
          "digest": "sha256:b12df0a12196c1bf9fd036bfa64507b8469254c3ffbcbdd92333603576200e6c",
          "image": "registry.connect.redhat.com/prophetstor/alameda-ai-dispatcher@sha256:b12df0a12196c1bf9fd036bfa64507b8469254c3ffbcbdd92333603576200e6c",
          "name": "ai_dispatcher"
        },
        {
          "digest": "sha256:60328410dc4813c1285ade12533efba9acb602433be7cc1f256fb3ea6312d3c2",
          "image": "registry.connect.redhat.com/prophetstor/fedemeter-api-ubi@sha256:60328410dc4813c1285ade12533efba9acb602433be7cc1f256fb3ea6312d3c2",
          "name": "fedemeter_api"
        },
        {
          "digest": "sha256:163e559a6c684cde953f3515f1df08ebe7e799c53b24add3b225fcd6a976bb12",
          "image": "registry.connect.redhat.com/prophetstor/fedemeter-influxdb@sha256:163e559a6c684cde953f3515f1df08ebe7e799c53b24add3b225fcd6a976bb12",
          "name": "fedemeter_influxdb"
        },
        {
          "digest": "sha256:43641d57b7b694adb090e6377bfd6315aab6193e5637bab91221f076f205d819",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-agent-ubi@sha256:43641d57b7b694adb090e6377bfd6315aab6193e5637bab91221f076f205d819",
          "name": "federatorai_agent"
        },
        {
          "digest": "sha256:8f6ee4e54297b6dadc51bd8dad4d9f67cfb5aa7c4e8de82ad0928d71e1d0d0f7",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-agent-preloader@sha256:8f6ee4e54297b6dadc51bd8dad4d9f67cfb5aa7c4e8de82ad0928d71e1d0d0f7",
          "name": "federatorai_agent_preloader"
        },
        {
          "digest": "sha256:3bde9bb8f63c92619d28c80985e5e30ec4cc96dba8252dff6c3b5f10104db89d",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-dashboard-frontend@sha256:3bde9bb8f63c92619d28c80985e5e30ec4cc96dba8252dff6c3b5f10104db89d",
          "name": "federatorai_dashboard_frontend"
        },
        {
          "digest": "sha256:fa443c901e06aad3780666a4d676b330c61d66d8ea52ae2850f382f68559154d",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-dashboard-backend@sha256:fa443c901e06aad3780666a4d676b330c61d66d8ea52ae2850f382f68559154d",
          "name": "federatorai_dashboard_backend"
        },
        {
          "digest": "sha256:46b206bb1814b2b7d38e9e0d14ef1f0e3c51d7b3f18b32cc92515bffc5ca5b1f",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-data-adapter@sha256:46b206bb1814b2b7d38e9e0d14ef1f0e3c51d7b3f18b32cc92515bffc5ca5b1f",
          "name": "federatorai_data_adapter"
        },
        {
          "digest": "sha256:889136e2f82db71d4c7a5ab39472f578e12315c65bda1ab3dc3ef9adc9d4a6cc",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-rest-ubi@sha256:889136e2f82db71d4c7a5ab39472f578e12315c65bda1ab3dc3ef9adc9d4a6cc",
          "name": "federatorai_restapi"
        },
        {
          "digest": "sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "image": "registry.connect.redhat.com/prophetstor/alameda-recommender-ubi@sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "name": "federatorai_recommend_dispatcher"
        },
        {
          "digest": "sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "image": "registry.connect.redhat.com/prophetstor/alameda-recommender-ubi@sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "name": "federatorai_recommend_worker"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "4.7.2-1",
      "version_original": "4.7.2-1"
    },
    {
      "_id": "61a49f75c17162a20c1c675c",
      "alm_examples": [
        {
          "api_version": "federatorai.containers.ai/v1alpha1",
          "kind": "AlamedaService",
          "metadata": {
            "name": "my-alamedaservice"
          },
          "spec": {
            "alamedaAi": {
              "storages": [
                {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "size": "10Gi",
                  "type": "pvc",
                  "usage": "data"
                }
              ]
            },
            "alamedaInfluxdb": {
              "storages": [
                {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "size": "100Gi",
                  "type": "pvc",
                  "usage": "data"
                }
              ]
            },
            "fedemeterInfluxdb": {
              "storages": [
                {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "size": "10Gi",
                  "type": "pvc",
                  "usage": "data"
                }
              ]
            },
            "imageLocation": "registry.connect.redhat.com/prophetstor",
            "storages": [
              {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "size": "2Gi",
                "type": "pvc",
                "usage": "log"
              }
            ],
            "version": "v4.7.2-b1777"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/prophetstor/federatorai-operator-bundle@sha256:8fcbd648e2d8048c8a209e1aba7fa67a0651adeaec5c9523a7a8f3c1b51bd85a",
      "bundle_path_digest": "sha256:8fcbd648e2d8048c8a209e1aba7fa67a0651adeaec5c9523a7a8f3c1b51bd85a",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-29T09:37:57.184000+00:00",
      "csv_description": "Federator.ai helps enterprises optimize cloud resources, maximize application performance, and save significant cost without excessive over-provisioning or under-provisioning of resources, meeting the service-level requirements of their applications.\n\nEnterprises often lack understanding of the resources needed to support their applications. This leads to either excessive over-provisioning or under-provisioning of resources (CPU, memory, storage). Using machine learning, Federator.ai determines the optimal cloud resources needed to support any workload on OpenShift and helps users find the best-cost instances from cloud providers for their applications.\n\n\n**Multi-layer workload prediction**\n\nUsing machine learning and math-based algorithms, Federator.ai predicts containerized application and cluster node resource usage as the basis for resource recommendations at application level as well as at cluster node level. Federator.ai supports prediction for both physical/virtual CPUs and memories.\n\n\n**Auto-scaling via resource recommendation**\n\nFederator.ai utilizes the predicted resource usage to recommend the right number and size of pods for applications. Integrated with Datadog's WPA, applications are automatically scaled to meet the predicted resource usage.\n\n\n**Application-aware recommendation execution**\n\nOptimizing the resource usage and performance goals, Federator.ai uses application specific metrics for workload prediction and pod capacity estimation to auto-scale the right number of pods for best performance without overprovisioning.\n\n\n**Multi-cloud Cost Analysis**\n\nWith resource usage prediction, Federator.ai analyzes potential cost of a cluster on different public cloud providers. It also recommend appropriate cluster nodes and instance types based on resource usage.\n\n\n**Custom Datadog/Sysdig Dashboards**\n\nPredefined custom Datadog/Sysdig Dashboards for workload prediction/recommendation visualization for cluster nodes and applications.\n\n\n**Additional resources**\n\nWant more product information? Explore detailed information about using this product and where to find additional help.\n\n* [Federator.ai Datasheet](https://prophetstor.com/wp-content/uploads/datasheets/Federator.ai.pdf)\n* [Quick Start Guide](https://prophetstor.com/wp-content/uploads/documentation/Federator.ai/Latest%20Version/ProphetStor%20Federator.ai%20Quick%20Installation%20Guide.pdf)\n* [Installation Guide](https://prophetstor.com/wp-content/uploads/2021/08/ProphetStor-Federator.ai-v4.7.0-Installation-Guide-v1.0.pdf)\n* [User Guide](https://prophetstor.com/wp-content/uploads/2021/11/Federator.ai-User-Guide-4.7.2.pdf)\n* [Release Notes](https://prophetstor.com/wp-content/uploads/2021/11/Federator.ai-4.7.2-Release-Notes.pdf)\n* [Company Information](https://www.prophetstor.com/)\n\n\n### Prerequisite\n*  The [Openshift](https://www.openshift.com) version 4.6.x or later if using OpenShift platform.\n*  The [Kubernetes](https://kubernetes.io/) version 1.16 or later if using Kubernetes environment.",
      "csv_display_name": "Federator.ai",
      "csv_metadata_description": "Federator.ai Operator provides easy configuration and management of AI-based Kubernetes resource orchestrator",
      "csv_name": "federatorai.v4.7.2-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:09:23.530000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "federatorai-certified",
      "provided_apis": [
        {
          "group": "federatorai.containers.ai",
          "kind": "AlamedaService",
          "plural": "alamedaservices",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:b12df0a12196c1bf9fd036bfa64507b8469254c3ffbcbdd92333603576200e6c",
          "image": "registry.connect.redhat.com/prophetstor/alameda-ai-dispatcher@sha256:b12df0a12196c1bf9fd036bfa64507b8469254c3ffbcbdd92333603576200e6c",
          "name": "ai-dispatcher"
        },
        {
          "digest": "sha256:c4ca91f8b942f90141f3cacc2b80f4e123058447ae4ad880763360a42408e439",
          "image": "registry.connect.redhat.com/prophetstor/alameda-ai@sha256:c4ca91f8b942f90141f3cacc2b80f4e123058447ae4ad880763360a42408e439",
          "name": "ai_engine"
        },
        {
          "digest": "sha256:a9f8fa8224535f70a959f736aba992b2135018afd57184f4849e8739d1ea2a18",
          "image": "registry.connect.redhat.com/prophetstor/alameda-datahub-ubi@sha256:a9f8fa8224535f70a959f736aba992b2135018afd57184f4849e8739d1ea2a18",
          "name": "datahub"
        },
        {
          "digest": "sha256:d5c6fbd329f49100422a995a4e177ba76c0a49936f0a0c8139250bf1357e992e",
          "image": "registry.connect.redhat.com/prophetstor/alameda-executor-ubi@sha256:d5c6fbd329f49100422a995a4e177ba76c0a49936f0a0c8139250bf1357e992e",
          "name": "executor"
        },
        {
          "digest": "sha256:60328410dc4813c1285ade12533efba9acb602433be7cc1f256fb3ea6312d3c2",
          "image": "registry.connect.redhat.com/prophetstor/fedemeter-api-ubi@sha256:60328410dc4813c1285ade12533efba9acb602433be7cc1f256fb3ea6312d3c2",
          "name": "fedemeter-api"
        },
        {
          "digest": "sha256:163e559a6c684cde953f3515f1df08ebe7e799c53b24add3b225fcd6a976bb12",
          "image": "registry.connect.redhat.com/prophetstor/fedemeter-influxdb@sha256:163e559a6c684cde953f3515f1df08ebe7e799c53b24add3b225fcd6a976bb12",
          "name": "fedemeter-influxdb"
        },
        {
          "digest": "sha256:43641d57b7b694adb090e6377bfd6315aab6193e5637bab91221f076f205d819",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-agent-ubi@sha256:43641d57b7b694adb090e6377bfd6315aab6193e5637bab91221f076f205d819",
          "name": "federatorai-agent"
        },
        {
          "digest": "sha256:8f6ee4e54297b6dadc51bd8dad4d9f67cfb5aa7c4e8de82ad0928d71e1d0d0f7",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-agent-preloader@sha256:8f6ee4e54297b6dadc51bd8dad4d9f67cfb5aa7c4e8de82ad0928d71e1d0d0f7",
          "name": "federatorai-agent-preloader"
        },
        {
          "digest": "sha256:3bde9bb8f63c92619d28c80985e5e30ec4cc96dba8252dff6c3b5f10104db89d",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-dashboard-frontend@sha256:3bde9bb8f63c92619d28c80985e5e30ec4cc96dba8252dff6c3b5f10104db89d",
          "name": "federatorai-dashboard-frontend"
        },
        {
          "digest": "sha256:fa443c901e06aad3780666a4d676b330c61d66d8ea52ae2850f382f68559154d",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-dashboard-backend@sha256:fa443c901e06aad3780666a4d676b330c61d66d8ea52ae2850f382f68559154d",
          "name": "federatorai-dashboard-backend"
        },
        {
          "digest": "sha256:46b206bb1814b2b7d38e9e0d14ef1f0e3c51d7b3f18b32cc92515bffc5ca5b1f",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-data-adapter@sha256:46b206bb1814b2b7d38e9e0d14ef1f0e3c51d7b3f18b32cc92515bffc5ca5b1f",
          "name": "federatorai-data-adapter"
        },
        {
          "digest": "sha256:889136e2f82db71d4c7a5ab39472f578e12315c65bda1ab3dc3ef9adc9d4a6cc",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-rest-ubi@sha256:889136e2f82db71d4c7a5ab39472f578e12315c65bda1ab3dc3ef9adc9d4a6cc",
          "name": "federatorai-restapi"
        },
        {
          "digest": "sha256:75c7ac8323db161c3a37d1931c863bda21f224e67443543572d912b976ee3ff0",
          "image": "registry.connect.redhat.com/prophetstor/alameda-influxdb@sha256:75c7ac8323db161c3a37d1931c863bda21f224e67443543572d912b976ee3ff0",
          "name": "influxdb"
        },
        {
          "digest": "sha256:3738f97c0b50afcf9e6b78d1084e98a3c78e0fd6d10d0a3ae458c27604e395fd",
          "image": "registry.connect.redhat.com/prophetstor/alameda-notifier-ubi@sha256:3738f97c0b50afcf9e6b78d1084e98a3c78e0fd6d10d0a3ae458c27604e395fd",
          "name": "notifier"
        },
        {
          "digest": "sha256:c28e9740e6031f1db3274a3722e9682eb7708479187fcdc5799ae0c21141639b",
          "image": "registry.connect.redhat.com/prophetstor/alameda-operator-ubi@sha256:c28e9740e6031f1db3274a3722e9682eb7708479187fcdc5799ae0c21141639b",
          "name": "operator"
        },
        {
          "digest": "sha256:3db8b480b94452aa7211327ec4ec5382b9b94156dfc7c22e65b5cbf4d0e1140b",
          "image": "registry.connect.redhat.com/prophetstor/alameda-rabbitmq@sha256:3db8b480b94452aa7211327ec4ec5382b9b94156dfc7c22e65b5cbf4d0e1140b",
          "name": "rabbitmq"
        },
        {
          "digest": "sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "image": "registry.connect.redhat.com/prophetstor/alameda-recommender-ubi@sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "name": "federatorai-recommend-dispatcher"
        },
        {
          "digest": "sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "image": "registry.connect.redhat.com/prophetstor/alameda-recommender-ubi@sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "name": "federatorai-recommend-worker"
        },
        {
          "digest": "sha256:23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-operator@sha256:23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3",
          "name": "federatorai-operator-23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3-annotation"
        },
        {
          "digest": "sha256:23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-operator@sha256:23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3",
          "name": "federatorai-operator"
        },
        {
          "digest": "sha256:23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-operator@sha256:23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3",
          "name": "upgrader"
        },
        {
          "digest": "sha256:b12df0a12196c1bf9fd036bfa64507b8469254c3ffbcbdd92333603576200e6c",
          "image": "registry.connect.redhat.com/prophetstor/alameda-ai-dispatcher@sha256:b12df0a12196c1bf9fd036bfa64507b8469254c3ffbcbdd92333603576200e6c",
          "name": "ai_dispatcher"
        },
        {
          "digest": "sha256:60328410dc4813c1285ade12533efba9acb602433be7cc1f256fb3ea6312d3c2",
          "image": "registry.connect.redhat.com/prophetstor/fedemeter-api-ubi@sha256:60328410dc4813c1285ade12533efba9acb602433be7cc1f256fb3ea6312d3c2",
          "name": "fedemeter_api"
        },
        {
          "digest": "sha256:163e559a6c684cde953f3515f1df08ebe7e799c53b24add3b225fcd6a976bb12",
          "image": "registry.connect.redhat.com/prophetstor/fedemeter-influxdb@sha256:163e559a6c684cde953f3515f1df08ebe7e799c53b24add3b225fcd6a976bb12",
          "name": "fedemeter_influxdb"
        },
        {
          "digest": "sha256:43641d57b7b694adb090e6377bfd6315aab6193e5637bab91221f076f205d819",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-agent-ubi@sha256:43641d57b7b694adb090e6377bfd6315aab6193e5637bab91221f076f205d819",
          "name": "federatorai_agent"
        },
        {
          "digest": "sha256:8f6ee4e54297b6dadc51bd8dad4d9f67cfb5aa7c4e8de82ad0928d71e1d0d0f7",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-agent-preloader@sha256:8f6ee4e54297b6dadc51bd8dad4d9f67cfb5aa7c4e8de82ad0928d71e1d0d0f7",
          "name": "federatorai_agent_preloader"
        },
        {
          "digest": "sha256:3bde9bb8f63c92619d28c80985e5e30ec4cc96dba8252dff6c3b5f10104db89d",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-dashboard-frontend@sha256:3bde9bb8f63c92619d28c80985e5e30ec4cc96dba8252dff6c3b5f10104db89d",
          "name": "federatorai_dashboard_frontend"
        },
        {
          "digest": "sha256:fa443c901e06aad3780666a4d676b330c61d66d8ea52ae2850f382f68559154d",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-dashboard-backend@sha256:fa443c901e06aad3780666a4d676b330c61d66d8ea52ae2850f382f68559154d",
          "name": "federatorai_dashboard_backend"
        },
        {
          "digest": "sha256:46b206bb1814b2b7d38e9e0d14ef1f0e3c51d7b3f18b32cc92515bffc5ca5b1f",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-data-adapter@sha256:46b206bb1814b2b7d38e9e0d14ef1f0e3c51d7b3f18b32cc92515bffc5ca5b1f",
          "name": "federatorai_data_adapter"
        },
        {
          "digest": "sha256:889136e2f82db71d4c7a5ab39472f578e12315c65bda1ab3dc3ef9adc9d4a6cc",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-rest-ubi@sha256:889136e2f82db71d4c7a5ab39472f578e12315c65bda1ab3dc3ef9adc9d4a6cc",
          "name": "federatorai_restapi"
        },
        {
          "digest": "sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "image": "registry.connect.redhat.com/prophetstor/alameda-recommender-ubi@sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "name": "federatorai_recommend_dispatcher"
        },
        {
          "digest": "sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "image": "registry.connect.redhat.com/prophetstor/alameda-recommender-ubi@sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "name": "federatorai_recommend_worker"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "4.7.2-1",
      "version_original": "4.7.2-1"
    },
    {
      "_id": "61a4a616bfd4a5234d595fc9",
      "alm_examples": [
        {
          "api_version": "federatorai.containers.ai/v1alpha1",
          "kind": "AlamedaService",
          "metadata": {
            "name": "my-alamedaservice"
          },
          "spec": {
            "alamedaAi": {
              "storages": [
                {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "size": "10Gi",
                  "type": "pvc",
                  "usage": "data"
                }
              ]
            },
            "alamedaInfluxdb": {
              "storages": [
                {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "size": "100Gi",
                  "type": "pvc",
                  "usage": "data"
                }
              ]
            },
            "fedemeterInfluxdb": {
              "storages": [
                {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "size": "10Gi",
                  "type": "pvc",
                  "usage": "data"
                }
              ]
            },
            "imageLocation": "registry.connect.redhat.com/prophetstor",
            "storages": [
              {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "size": "2Gi",
                "type": "pvc",
                "usage": "log"
              }
            ],
            "version": "v4.7.2-b1777"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/prophetstor/federatorai-operator-bundle@sha256:8fcbd648e2d8048c8a209e1aba7fa67a0651adeaec5c9523a7a8f3c1b51bd85a",
      "bundle_path_digest": "sha256:8fcbd648e2d8048c8a209e1aba7fa67a0651adeaec5c9523a7a8f3c1b51bd85a",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-29T10:06:14.844000+00:00",
      "csv_description": "Federator.ai helps enterprises optimize cloud resources, maximize application performance, and save significant cost without excessive over-provisioning or under-provisioning of resources, meeting the service-level requirements of their applications.\n\nEnterprises often lack understanding of the resources needed to support their applications. This leads to either excessive over-provisioning or under-provisioning of resources (CPU, memory, storage). Using machine learning, Federator.ai determines the optimal cloud resources needed to support any workload on OpenShift and helps users find the best-cost instances from cloud providers for their applications.\n\n\n**Multi-layer workload prediction**\n\nUsing machine learning and math-based algorithms, Federator.ai predicts containerized application and cluster node resource usage as the basis for resource recommendations at application level as well as at cluster node level. Federator.ai supports prediction for both physical/virtual CPUs and memories.\n\n\n**Auto-scaling via resource recommendation**\n\nFederator.ai utilizes the predicted resource usage to recommend the right number and size of pods for applications. Integrated with Datadog's WPA, applications are automatically scaled to meet the predicted resource usage.\n\n\n**Application-aware recommendation execution**\n\nOptimizing the resource usage and performance goals, Federator.ai uses application specific metrics for workload prediction and pod capacity estimation to auto-scale the right number of pods for best performance without overprovisioning.\n\n\n**Multi-cloud Cost Analysis**\n\nWith resource usage prediction, Federator.ai analyzes potential cost of a cluster on different public cloud providers. It also recommend appropriate cluster nodes and instance types based on resource usage.\n\n\n**Custom Datadog/Sysdig Dashboards**\n\nPredefined custom Datadog/Sysdig Dashboards for workload prediction/recommendation visualization for cluster nodes and applications.\n\n\n**Additional resources**\n\nWant more product information? Explore detailed information about using this product and where to find additional help.\n\n* [Federator.ai Datasheet](https://prophetstor.com/wp-content/uploads/datasheets/Federator.ai.pdf)\n* [Quick Start Guide](https://prophetstor.com/wp-content/uploads/documentation/Federator.ai/Latest%20Version/ProphetStor%20Federator.ai%20Quick%20Installation%20Guide.pdf)\n* [Installation Guide](https://prophetstor.com/wp-content/uploads/2021/08/ProphetStor-Federator.ai-v4.7.0-Installation-Guide-v1.0.pdf)\n* [User Guide](https://prophetstor.com/wp-content/uploads/2021/11/Federator.ai-User-Guide-4.7.2.pdf)\n* [Release Notes](https://prophetstor.com/wp-content/uploads/2021/11/Federator.ai-4.7.2-Release-Notes.pdf)\n* [Company Information](https://www.prophetstor.com/)\n\n\n### Prerequisite\n*  The [Openshift](https://www.openshift.com) version 4.6.x or later if using OpenShift platform.\n*  The [Kubernetes](https://kubernetes.io/) version 1.16 or later if using Kubernetes environment.",
      "csv_display_name": "Federator.ai",
      "csv_metadata_description": "Federator.ai Operator provides easy configuration and management of AI-based Kubernetes resource orchestrator",
      "csv_name": "federatorai.v4.7.2-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:29:47.653000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "federatorai-certified",
      "provided_apis": [
        {
          "group": "federatorai.containers.ai",
          "kind": "AlamedaService",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:b12df0a12196c1bf9fd036bfa64507b8469254c3ffbcbdd92333603576200e6c",
          "image": "registry.connect.redhat.com/prophetstor/alameda-ai-dispatcher@sha256:b12df0a12196c1bf9fd036bfa64507b8469254c3ffbcbdd92333603576200e6c",
          "name": "ai-dispatcher"
        },
        {
          "digest": "sha256:c4ca91f8b942f90141f3cacc2b80f4e123058447ae4ad880763360a42408e439",
          "image": "registry.connect.redhat.com/prophetstor/alameda-ai@sha256:c4ca91f8b942f90141f3cacc2b80f4e123058447ae4ad880763360a42408e439",
          "name": "ai_engine"
        },
        {
          "digest": "sha256:a9f8fa8224535f70a959f736aba992b2135018afd57184f4849e8739d1ea2a18",
          "image": "registry.connect.redhat.com/prophetstor/alameda-datahub-ubi@sha256:a9f8fa8224535f70a959f736aba992b2135018afd57184f4849e8739d1ea2a18",
          "name": "datahub"
        },
        {
          "digest": "sha256:d5c6fbd329f49100422a995a4e177ba76c0a49936f0a0c8139250bf1357e992e",
          "image": "registry.connect.redhat.com/prophetstor/alameda-executor-ubi@sha256:d5c6fbd329f49100422a995a4e177ba76c0a49936f0a0c8139250bf1357e992e",
          "name": "executor"
        },
        {
          "digest": "sha256:60328410dc4813c1285ade12533efba9acb602433be7cc1f256fb3ea6312d3c2",
          "image": "registry.connect.redhat.com/prophetstor/fedemeter-api-ubi@sha256:60328410dc4813c1285ade12533efba9acb602433be7cc1f256fb3ea6312d3c2",
          "name": "fedemeter-api"
        },
        {
          "digest": "sha256:163e559a6c684cde953f3515f1df08ebe7e799c53b24add3b225fcd6a976bb12",
          "image": "registry.connect.redhat.com/prophetstor/fedemeter-influxdb@sha256:163e559a6c684cde953f3515f1df08ebe7e799c53b24add3b225fcd6a976bb12",
          "name": "fedemeter-influxdb"
        },
        {
          "digest": "sha256:43641d57b7b694adb090e6377bfd6315aab6193e5637bab91221f076f205d819",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-agent-ubi@sha256:43641d57b7b694adb090e6377bfd6315aab6193e5637bab91221f076f205d819",
          "name": "federatorai-agent"
        },
        {
          "digest": "sha256:8f6ee4e54297b6dadc51bd8dad4d9f67cfb5aa7c4e8de82ad0928d71e1d0d0f7",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-agent-preloader@sha256:8f6ee4e54297b6dadc51bd8dad4d9f67cfb5aa7c4e8de82ad0928d71e1d0d0f7",
          "name": "federatorai-agent-preloader"
        },
        {
          "digest": "sha256:3bde9bb8f63c92619d28c80985e5e30ec4cc96dba8252dff6c3b5f10104db89d",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-dashboard-frontend@sha256:3bde9bb8f63c92619d28c80985e5e30ec4cc96dba8252dff6c3b5f10104db89d",
          "name": "federatorai-dashboard-frontend"
        },
        {
          "digest": "sha256:fa443c901e06aad3780666a4d676b330c61d66d8ea52ae2850f382f68559154d",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-dashboard-backend@sha256:fa443c901e06aad3780666a4d676b330c61d66d8ea52ae2850f382f68559154d",
          "name": "federatorai-dashboard-backend"
        },
        {
          "digest": "sha256:46b206bb1814b2b7d38e9e0d14ef1f0e3c51d7b3f18b32cc92515bffc5ca5b1f",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-data-adapter@sha256:46b206bb1814b2b7d38e9e0d14ef1f0e3c51d7b3f18b32cc92515bffc5ca5b1f",
          "name": "federatorai-data-adapter"
        },
        {
          "digest": "sha256:889136e2f82db71d4c7a5ab39472f578e12315c65bda1ab3dc3ef9adc9d4a6cc",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-rest-ubi@sha256:889136e2f82db71d4c7a5ab39472f578e12315c65bda1ab3dc3ef9adc9d4a6cc",
          "name": "federatorai-restapi"
        },
        {
          "digest": "sha256:75c7ac8323db161c3a37d1931c863bda21f224e67443543572d912b976ee3ff0",
          "image": "registry.connect.redhat.com/prophetstor/alameda-influxdb@sha256:75c7ac8323db161c3a37d1931c863bda21f224e67443543572d912b976ee3ff0",
          "name": "influxdb"
        },
        {
          "digest": "sha256:3738f97c0b50afcf9e6b78d1084e98a3c78e0fd6d10d0a3ae458c27604e395fd",
          "image": "registry.connect.redhat.com/prophetstor/alameda-notifier-ubi@sha256:3738f97c0b50afcf9e6b78d1084e98a3c78e0fd6d10d0a3ae458c27604e395fd",
          "name": "notifier"
        },
        {
          "digest": "sha256:c28e9740e6031f1db3274a3722e9682eb7708479187fcdc5799ae0c21141639b",
          "image": "registry.connect.redhat.com/prophetstor/alameda-operator-ubi@sha256:c28e9740e6031f1db3274a3722e9682eb7708479187fcdc5799ae0c21141639b",
          "name": "operator"
        },
        {
          "digest": "sha256:3db8b480b94452aa7211327ec4ec5382b9b94156dfc7c22e65b5cbf4d0e1140b",
          "image": "registry.connect.redhat.com/prophetstor/alameda-rabbitmq@sha256:3db8b480b94452aa7211327ec4ec5382b9b94156dfc7c22e65b5cbf4d0e1140b",
          "name": "rabbitmq"
        },
        {
          "digest": "sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "image": "registry.connect.redhat.com/prophetstor/alameda-recommender-ubi@sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "name": "federatorai-recommend-dispatcher"
        },
        {
          "digest": "sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "image": "registry.connect.redhat.com/prophetstor/alameda-recommender-ubi@sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "name": "federatorai-recommend-worker"
        },
        {
          "digest": "sha256:23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-operator@sha256:23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3",
          "name": "federatorai-operator-23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3-annotation"
        },
        {
          "digest": "sha256:23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-operator@sha256:23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3",
          "name": "federatorai-operator"
        },
        {
          "digest": "sha256:23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-operator@sha256:23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3",
          "name": "upgrader"
        },
        {
          "digest": "sha256:b12df0a12196c1bf9fd036bfa64507b8469254c3ffbcbdd92333603576200e6c",
          "image": "registry.connect.redhat.com/prophetstor/alameda-ai-dispatcher@sha256:b12df0a12196c1bf9fd036bfa64507b8469254c3ffbcbdd92333603576200e6c",
          "name": "ai_dispatcher"
        },
        {
          "digest": "sha256:60328410dc4813c1285ade12533efba9acb602433be7cc1f256fb3ea6312d3c2",
          "image": "registry.connect.redhat.com/prophetstor/fedemeter-api-ubi@sha256:60328410dc4813c1285ade12533efba9acb602433be7cc1f256fb3ea6312d3c2",
          "name": "fedemeter_api"
        },
        {
          "digest": "sha256:163e559a6c684cde953f3515f1df08ebe7e799c53b24add3b225fcd6a976bb12",
          "image": "registry.connect.redhat.com/prophetstor/fedemeter-influxdb@sha256:163e559a6c684cde953f3515f1df08ebe7e799c53b24add3b225fcd6a976bb12",
          "name": "fedemeter_influxdb"
        },
        {
          "digest": "sha256:43641d57b7b694adb090e6377bfd6315aab6193e5637bab91221f076f205d819",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-agent-ubi@sha256:43641d57b7b694adb090e6377bfd6315aab6193e5637bab91221f076f205d819",
          "name": "federatorai_agent"
        },
        {
          "digest": "sha256:8f6ee4e54297b6dadc51bd8dad4d9f67cfb5aa7c4e8de82ad0928d71e1d0d0f7",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-agent-preloader@sha256:8f6ee4e54297b6dadc51bd8dad4d9f67cfb5aa7c4e8de82ad0928d71e1d0d0f7",
          "name": "federatorai_agent_preloader"
        },
        {
          "digest": "sha256:3bde9bb8f63c92619d28c80985e5e30ec4cc96dba8252dff6c3b5f10104db89d",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-dashboard-frontend@sha256:3bde9bb8f63c92619d28c80985e5e30ec4cc96dba8252dff6c3b5f10104db89d",
          "name": "federatorai_dashboard_frontend"
        },
        {
          "digest": "sha256:fa443c901e06aad3780666a4d676b330c61d66d8ea52ae2850f382f68559154d",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-dashboard-backend@sha256:fa443c901e06aad3780666a4d676b330c61d66d8ea52ae2850f382f68559154d",
          "name": "federatorai_dashboard_backend"
        },
        {
          "digest": "sha256:46b206bb1814b2b7d38e9e0d14ef1f0e3c51d7b3f18b32cc92515bffc5ca5b1f",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-data-adapter@sha256:46b206bb1814b2b7d38e9e0d14ef1f0e3c51d7b3f18b32cc92515bffc5ca5b1f",
          "name": "federatorai_data_adapter"
        },
        {
          "digest": "sha256:889136e2f82db71d4c7a5ab39472f578e12315c65bda1ab3dc3ef9adc9d4a6cc",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-rest-ubi@sha256:889136e2f82db71d4c7a5ab39472f578e12315c65bda1ab3dc3ef9adc9d4a6cc",
          "name": "federatorai_restapi"
        },
        {
          "digest": "sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "image": "registry.connect.redhat.com/prophetstor/alameda-recommender-ubi@sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "name": "federatorai_recommend_dispatcher"
        },
        {
          "digest": "sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "image": "registry.connect.redhat.com/prophetstor/alameda-recommender-ubi@sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "name": "federatorai_recommend_worker"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "4.7.2-1",
      "version_original": "4.7.2-1"
    },
    {
      "_id": "61a4a62827e166330707d8ac",
      "alm_examples": [
        {
          "api_version": "apps.docker.io/v1alpha1",
          "kind": "CarbonetesAnalyzer",
          "metadata": {
            "name": "carbonetesanalyzer"
          },
          "spec": {
            "affinity": {},
            "autoscaling": {
              "enabled": false,
              "maxReplicas": 100,
              "minReplicas": 1,
              "targetCPUUtilizationPercentage": 80
            },
            "carbonetesCreds": {
              "password": "",
              "username": ""
            },
            "debugging": {
              "enabled": false
            },
            "fullnameOverride": "",
            "image": {
              "pullPolicy": "Always",
              "repository": "quay.carbonetes.com/carbonetes/carbonetes-analyzer@sha256:1b9b93c9a37f7138c6a6259d20a3cfe254a47b294adc48849008ecbb9917697f"
            },
            "imagePullSecrets": [],
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [
                {
                  "host": "chart.local",
                  "paths": []
                }
              ],
              "tls": []
            },
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "replicaCount": 1,
            "resources": {},
            "securityContext": {},
            "service": {
              "port": 3000,
              "type": "ClusterIP"
            },
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": "carbonetes-analyzer"
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/carbonetes/operator-bundle@sha256:ba799a2e818d8efe1ed200e366984b1e61baa7ec781c782e74e230692b1f98a6",
      "bundle_path_digest": "sha256:ba799a2e818d8efe1ed200e366984b1e61baa7ec781c782e74e230692b1f98a6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-29T10:06:32.563000+00:00",
      "csv_description": "A Kubernetes Operator for creating Carbonetes Analyzer instances that Provides complete container analysis and policy evaluation as a fully managed service.\n\nCarbonetes analyzes your container images for native code vulnerabilities, software composition analysis (SCA), license types, malware, secrets, and bill of materials.\n\n## Prerequisites\n\nTo start using the Operator, you will need to create a secret containing your Carbonetes username and password.\n\n```\nkubectl create namespace carbonetes-operator\nkubectl create secret generic carbonetes-secrets --from-literal=username=${CARBONETES_USERNAME}--from-literal=password=${CARBONETES_PASSWORD}\n```\nDon't have the account yet? [Sign up now](https://console.carbonetes.com).",
      "csv_display_name": "Carbonetes Operator",
      "csv_metadata_description": "A Kubernetes Operator for creating Carbonetes Analyzer instances.",
      "csv_name": "carbonetes-operator.v1.0.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:14:56.378000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "carbonetes-operator",
      "provided_apis": [
        {
          "group": "apps.docker.io",
          "kind": "CarbonetesAnalyzer",
          "plural": "carbonetesanalyzers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772",
          "image": "quay.carbonetes.com/carbonetes/operator@sha256:82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772",
          "name": "carbonetes-operator"
        },
        {
          "digest": "sha256:82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772",
          "image": "quay.carbonetes.com/carbonetes/operator@sha256:82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772",
          "name": "operator-82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772-annotation"
        },
        {
          "digest": "sha256:82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772",
          "image": "quay.carbonetes.com/carbonetes/operator@sha256:82318372a716645503fe30ec0e81a8bffb25afd84a8a14e58e881573fcc81772",
          "name": "manager"
        },
        {
          "digest": "sha256:1b9b93c9a37f7138c6a6259d20a3cfe254a47b294adc48849008ecbb9917697f",
          "image": "quay.carbonetes.com/carbonetes/carbonetes-analyzer@sha256:1b9b93c9a37f7138c6a6259d20a3cfe254a47b294adc48849008ecbb9917697f",
          "name": "carbonetes-analyzer-1b9b93c9a37f7138c6a6259d20a3cfe254a47b294adc48849008ecbb9917697f-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.5",
      "version_original": "1.0.5"
    },
    {
      "_id": "61a4a631bfd4a5234d595fca",
      "alm_examples": [
        {
          "api_version": "rc.app.stacks/v1beta2",
          "kind": "RuntimeComponent",
          "metadata": {
            "name": "runtimecomponent-sample"
          },
          "spec": {
            "applicationImage": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
            "expose": true,
            "replicas": 1,
            "service": {
              "port": 9080
            }
          }
        },
        {
          "api_version": "rc.app.stacks/v1beta2",
          "kind": "RuntimeOperation",
          "metadata": {
            "name": "runtimeoperation-sample"
          },
          "spec": {
            "command": [
              "./your_script.sh"
            ],
            "containerName": "app",
            "podName": "Specify_Pod_Name_Here"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/runtime-component-operator-bundle@sha256:65cc8aa40608b76956ff8c19316b63f805d7a28e8d7697b9ea1d427888a2ccdf",
      "bundle_path_digest": "sha256:65cc8aa40608b76956ff8c19316b63f805d7a28e8d7697b9ea1d427888a2ccdf",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "beta2",
      "creation_date": "2021-11-29T10:06:41.206000+00:00",
      "csv_description": "This advanced Operator is capable of deploying any runtime component image with consistent, production-grade QoS. It enables enterprise architects to govern the way their applications get deployed & managed in the cluster, while dramatically reducing the learning curve for developers to deploy into Kubernetes - allowing them to focus on writing the code!\nHere are some key features:\n\n#### Application Lifecyle\nYou can deploy your runtime component container by either pointing to a container image, or an OpenShift ImageStream. When using an ImageStream the Operator will watch for any updates and will re-deploy the modified image.\n\n#### Custom RBAC\nThis Operator is capable of using a custom ServiceAccount from the caller, allowing it to follow RBAC restrictions. By default it creates a ServiceAccount if one is not specified, which can also be bound with specific roles.\n\n#### Environment Configuration\nYou can configure a variety of artifacts with your deployment, such as: labels, annotations, and environment variables from a ConfigMap, a Secret or a value.\n\n#### Routing\nExpose your application to external users via a single toggle to create a Route on OpenShift or an Ingress on other Kubernetes environments. Advanced configuration, such as TLS settings, are also easily enabled.  Expiring Route certificates are re-issued.\n\n#### High Availability via Horizontal Pod Autoscaling\nRun multiple instances of your application for high availability. Either specify a static number of replicas or easily configure horizontal auto scaling to create (and delete) instances based on resource consumption.\n\n#### Persistence and advanced storage\nEnable persistence for your application by specifying simple requirements: just tell us the size of the storage and where you would like it to be mounted and We will create and manage that storage for you.\nThis toggles a StatefulSet resource instead of a Deployment resource, so your container can recover transactions and state upon a pod restart.\nWe offer an advanced mode where the user specifies a built-in PersistentVolumeClaim, allowing them to configure many details of the persistent volume, such as its storage class and access mode.\n\n#### Service Binding\nEasily bind to available services in your cluster.  Your runtime components can expose and consume other services by simply specifying the target endpoinds: we take care of the heavy lifting such as creating k8s Secrets, injecting them into your container and watching for any changes in configuration!  This way your applications can dynamically reconnect to its required services without any intervention or interruption.\n\n#### Exposing metrics to Prometheus\nThe Runtime Component Operator exposes the runtime container's metrics via the [Prometheus Operator](https://operatorhub.io/operator/prometheus).\nUsers can pick between a basic mode, where they simply specify the label that Prometheus is watching to scrape the metrics from the container, or they can specify the full `ServiceMonitor` spec embedded into the RuntimeComponent's `spec.monitoring` key controlling things like the poll internal and security credentials.\n\n#### Easily mount logs and transaction directories\nIf you need to mount the logs and transaction data from your runtime component to an external volume such as NFS (or any storage supported in your cluster), simply add the following (customizing the folder location and size) to your RuntimeComponent CR:\n``` storage: size: 2Gi mountPath: \"/logs\" ```\n\n#### Integration with OpenShift Serverless\nDeploy your serverless runtime component using a single toggle.  The Operator will convert all of its generated resources into [Knative](https://knative.dev) resources, allowing your pod to automatically scale to 0 when it is idle.\n\n#### Integration with OpenShift's Topology UI\nWe set the corresponding labels to support OpenShift's Developer Topology UI, which allows you to visualize your entire set of deployments and how they are connected.\n\nSee our [**documentation**](https://github.com/application-stacks/runtime-component-operator/tree/main/doc/) for more information.\n",
      "csv_display_name": "Runtime Component",
      "csv_metadata_description": "Deploys any runtime component with dynamic and auto-tuning configuration",
      "csv_name": "runtime-component.v0.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:18:25.453000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "runtime-component-operator-certified",
      "provided_apis": [
        {
          "group": "rc.app.stacks",
          "kind": "RuntimeOperation",
          "plural": "runtimeoperations",
          "version": "v1beta2"
        },
        {
          "group": "rc.app.stacks",
          "kind": "RuntimeComponent",
          "plural": "runtimecomponents",
          "version": "v1beta2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:febfbe4a75018bfdb1f3cb13caaa3e5e321bf9f8ac5ca1405dae96f9798bde2b",
          "image": "registry.connect.redhat.com/ibm/runtime-component-operator@sha256:febfbe4a75018bfdb1f3cb13caaa3e5e321bf9f8ac5ca1405dae96f9798bde2b",
          "name": "runtime-component-operator-febfbe4a75018bfdb1f3cb13caaa3e5e321bf9f8ac5ca1405dae96f9798bde2b-annotation"
        },
        {
          "digest": "sha256:febfbe4a75018bfdb1f3cb13caaa3e5e321bf9f8ac5ca1405dae96f9798bde2b",
          "image": "registry.connect.redhat.com/ibm/runtime-component-operator@sha256:febfbe4a75018bfdb1f3cb13caaa3e5e321bf9f8ac5ca1405dae96f9798bde2b",
          "name": "manager"
        },
        {
          "digest": "sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "image": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "name": "open-liberty-samples-8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.8.0",
      "version_original": "0.8.0"
    },
    {
      "_id": "61a51da727e166330707d94d",
      "alm_examples": [
        {
          "api_version": "federatorai.containers.ai/v1alpha1",
          "kind": "AlamedaService",
          "metadata": {
            "name": "my-alamedaservice"
          },
          "spec": {
            "alamedaAi": {
              "storages": [
                {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "size": "10Gi",
                  "type": "pvc",
                  "usage": "data"
                }
              ]
            },
            "alamedaInfluxdb": {
              "storages": [
                {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "size": "100Gi",
                  "type": "pvc",
                  "usage": "data"
                }
              ]
            },
            "fedemeterInfluxdb": {
              "storages": [
                {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "size": "10Gi",
                  "type": "pvc",
                  "usage": "data"
                }
              ]
            },
            "imageLocation": "registry.connect.redhat.com/prophetstor",
            "storages": [
              {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "size": "2Gi",
                "type": "pvc",
                "usage": "log"
              }
            ],
            "version": "v4.7.2-b1777"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/prophetstor/federatorai-operator-bundle@sha256:8fcbd648e2d8048c8a209e1aba7fa67a0651adeaec5c9523a7a8f3c1b51bd85a",
      "bundle_path_digest": "sha256:8fcbd648e2d8048c8a209e1aba7fa67a0651adeaec5c9523a7a8f3c1b51bd85a",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-29T18:36:23.424000+00:00",
      "csv_description": "Federator.ai helps enterprises optimize cloud resources, maximize application performance, and save significant cost without excessive over-provisioning or under-provisioning of resources, meeting the service-level requirements of their applications.\n\nEnterprises often lack understanding of the resources needed to support their applications. This leads to either excessive over-provisioning or under-provisioning of resources (CPU, memory, storage). Using machine learning, Federator.ai determines the optimal cloud resources needed to support any workload on OpenShift and helps users find the best-cost instances from cloud providers for their applications.\n\n\n**Multi-layer workload prediction**\n\nUsing machine learning and math-based algorithms, Federator.ai predicts containerized application and cluster node resource usage as the basis for resource recommendations at application level as well as at cluster node level. Federator.ai supports prediction for both physical/virtual CPUs and memories.\n\n\n**Auto-scaling via resource recommendation**\n\nFederator.ai utilizes the predicted resource usage to recommend the right number and size of pods for applications. Integrated with Datadog's WPA, applications are automatically scaled to meet the predicted resource usage.\n\n\n**Application-aware recommendation execution**\n\nOptimizing the resource usage and performance goals, Federator.ai uses application specific metrics for workload prediction and pod capacity estimation to auto-scale the right number of pods for best performance without overprovisioning.\n\n\n**Multi-cloud Cost Analysis**\n\nWith resource usage prediction, Federator.ai analyzes potential cost of a cluster on different public cloud providers. It also recommend appropriate cluster nodes and instance types based on resource usage.\n\n\n**Custom Datadog/Sysdig Dashboards**\n\nPredefined custom Datadog/Sysdig Dashboards for workload prediction/recommendation visualization for cluster nodes and applications.\n\n\n**Additional resources**\n\nWant more product information? Explore detailed information about using this product and where to find additional help.\n\n* [Federator.ai Datasheet](https://prophetstor.com/wp-content/uploads/datasheets/Federator.ai.pdf)\n* [Quick Start Guide](https://prophetstor.com/wp-content/uploads/documentation/Federator.ai/Latest%20Version/ProphetStor%20Federator.ai%20Quick%20Installation%20Guide.pdf)\n* [Installation Guide](https://prophetstor.com/wp-content/uploads/2021/08/ProphetStor-Federator.ai-v4.7.0-Installation-Guide-v1.0.pdf)\n* [User Guide](https://prophetstor.com/wp-content/uploads/2021/11/Federator.ai-User-Guide-4.7.2.pdf)\n* [Release Notes](https://prophetstor.com/wp-content/uploads/2021/11/Federator.ai-4.7.2-Release-Notes.pdf)\n* [Company Information](https://www.prophetstor.com/)\n\n\n### Prerequisite\n*  The [Openshift](https://www.openshift.com) version 4.6.x or later if using OpenShift platform.\n*  The [Kubernetes](https://kubernetes.io/) version 1.16 or later if using Kubernetes environment.",
      "csv_display_name": "Federator.ai",
      "csv_metadata_description": "Federator.ai Operator provides easy configuration and management of AI-based Kubernetes resource orchestrator",
      "csv_name": "federatorai.v4.7.2-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:53:05.121000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "federatorai-certified",
      "provided_apis": [
        {
          "group": "federatorai.containers.ai",
          "kind": "AlamedaService",
          "plural": "alamedaservices",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:b12df0a12196c1bf9fd036bfa64507b8469254c3ffbcbdd92333603576200e6c",
          "image": "registry.connect.redhat.com/prophetstor/alameda-ai-dispatcher@sha256:b12df0a12196c1bf9fd036bfa64507b8469254c3ffbcbdd92333603576200e6c",
          "name": "ai-dispatcher"
        },
        {
          "digest": "sha256:c4ca91f8b942f90141f3cacc2b80f4e123058447ae4ad880763360a42408e439",
          "image": "registry.connect.redhat.com/prophetstor/alameda-ai@sha256:c4ca91f8b942f90141f3cacc2b80f4e123058447ae4ad880763360a42408e439",
          "name": "ai_engine"
        },
        {
          "digest": "sha256:a9f8fa8224535f70a959f736aba992b2135018afd57184f4849e8739d1ea2a18",
          "image": "registry.connect.redhat.com/prophetstor/alameda-datahub-ubi@sha256:a9f8fa8224535f70a959f736aba992b2135018afd57184f4849e8739d1ea2a18",
          "name": "datahub"
        },
        {
          "digest": "sha256:d5c6fbd329f49100422a995a4e177ba76c0a49936f0a0c8139250bf1357e992e",
          "image": "registry.connect.redhat.com/prophetstor/alameda-executor-ubi@sha256:d5c6fbd329f49100422a995a4e177ba76c0a49936f0a0c8139250bf1357e992e",
          "name": "executor"
        },
        {
          "digest": "sha256:60328410dc4813c1285ade12533efba9acb602433be7cc1f256fb3ea6312d3c2",
          "image": "registry.connect.redhat.com/prophetstor/fedemeter-api-ubi@sha256:60328410dc4813c1285ade12533efba9acb602433be7cc1f256fb3ea6312d3c2",
          "name": "fedemeter-api"
        },
        {
          "digest": "sha256:163e559a6c684cde953f3515f1df08ebe7e799c53b24add3b225fcd6a976bb12",
          "image": "registry.connect.redhat.com/prophetstor/fedemeter-influxdb@sha256:163e559a6c684cde953f3515f1df08ebe7e799c53b24add3b225fcd6a976bb12",
          "name": "fedemeter-influxdb"
        },
        {
          "digest": "sha256:43641d57b7b694adb090e6377bfd6315aab6193e5637bab91221f076f205d819",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-agent-ubi@sha256:43641d57b7b694adb090e6377bfd6315aab6193e5637bab91221f076f205d819",
          "name": "federatorai-agent"
        },
        {
          "digest": "sha256:8f6ee4e54297b6dadc51bd8dad4d9f67cfb5aa7c4e8de82ad0928d71e1d0d0f7",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-agent-preloader@sha256:8f6ee4e54297b6dadc51bd8dad4d9f67cfb5aa7c4e8de82ad0928d71e1d0d0f7",
          "name": "federatorai-agent-preloader"
        },
        {
          "digest": "sha256:3bde9bb8f63c92619d28c80985e5e30ec4cc96dba8252dff6c3b5f10104db89d",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-dashboard-frontend@sha256:3bde9bb8f63c92619d28c80985e5e30ec4cc96dba8252dff6c3b5f10104db89d",
          "name": "federatorai-dashboard-frontend"
        },
        {
          "digest": "sha256:fa443c901e06aad3780666a4d676b330c61d66d8ea52ae2850f382f68559154d",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-dashboard-backend@sha256:fa443c901e06aad3780666a4d676b330c61d66d8ea52ae2850f382f68559154d",
          "name": "federatorai-dashboard-backend"
        },
        {
          "digest": "sha256:46b206bb1814b2b7d38e9e0d14ef1f0e3c51d7b3f18b32cc92515bffc5ca5b1f",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-data-adapter@sha256:46b206bb1814b2b7d38e9e0d14ef1f0e3c51d7b3f18b32cc92515bffc5ca5b1f",
          "name": "federatorai-data-adapter"
        },
        {
          "digest": "sha256:889136e2f82db71d4c7a5ab39472f578e12315c65bda1ab3dc3ef9adc9d4a6cc",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-rest-ubi@sha256:889136e2f82db71d4c7a5ab39472f578e12315c65bda1ab3dc3ef9adc9d4a6cc",
          "name": "federatorai-restapi"
        },
        {
          "digest": "sha256:75c7ac8323db161c3a37d1931c863bda21f224e67443543572d912b976ee3ff0",
          "image": "registry.connect.redhat.com/prophetstor/alameda-influxdb@sha256:75c7ac8323db161c3a37d1931c863bda21f224e67443543572d912b976ee3ff0",
          "name": "influxdb"
        },
        {
          "digest": "sha256:3738f97c0b50afcf9e6b78d1084e98a3c78e0fd6d10d0a3ae458c27604e395fd",
          "image": "registry.connect.redhat.com/prophetstor/alameda-notifier-ubi@sha256:3738f97c0b50afcf9e6b78d1084e98a3c78e0fd6d10d0a3ae458c27604e395fd",
          "name": "notifier"
        },
        {
          "digest": "sha256:c28e9740e6031f1db3274a3722e9682eb7708479187fcdc5799ae0c21141639b",
          "image": "registry.connect.redhat.com/prophetstor/alameda-operator-ubi@sha256:c28e9740e6031f1db3274a3722e9682eb7708479187fcdc5799ae0c21141639b",
          "name": "operator"
        },
        {
          "digest": "sha256:3db8b480b94452aa7211327ec4ec5382b9b94156dfc7c22e65b5cbf4d0e1140b",
          "image": "registry.connect.redhat.com/prophetstor/alameda-rabbitmq@sha256:3db8b480b94452aa7211327ec4ec5382b9b94156dfc7c22e65b5cbf4d0e1140b",
          "name": "rabbitmq"
        },
        {
          "digest": "sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "image": "registry.connect.redhat.com/prophetstor/alameda-recommender-ubi@sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "name": "federatorai-recommend-dispatcher"
        },
        {
          "digest": "sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "image": "registry.connect.redhat.com/prophetstor/alameda-recommender-ubi@sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "name": "federatorai-recommend-worker"
        },
        {
          "digest": "sha256:23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-operator@sha256:23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3",
          "name": "federatorai-operator-23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3-annotation"
        },
        {
          "digest": "sha256:23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-operator@sha256:23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3",
          "name": "federatorai-operator"
        },
        {
          "digest": "sha256:23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-operator@sha256:23743249f43219d077aa0a2b899e8c08bbee7caf0577771228c7192d3b99e9f3",
          "name": "upgrader"
        },
        {
          "digest": "sha256:b12df0a12196c1bf9fd036bfa64507b8469254c3ffbcbdd92333603576200e6c",
          "image": "registry.connect.redhat.com/prophetstor/alameda-ai-dispatcher@sha256:b12df0a12196c1bf9fd036bfa64507b8469254c3ffbcbdd92333603576200e6c",
          "name": "ai_dispatcher"
        },
        {
          "digest": "sha256:60328410dc4813c1285ade12533efba9acb602433be7cc1f256fb3ea6312d3c2",
          "image": "registry.connect.redhat.com/prophetstor/fedemeter-api-ubi@sha256:60328410dc4813c1285ade12533efba9acb602433be7cc1f256fb3ea6312d3c2",
          "name": "fedemeter_api"
        },
        {
          "digest": "sha256:163e559a6c684cde953f3515f1df08ebe7e799c53b24add3b225fcd6a976bb12",
          "image": "registry.connect.redhat.com/prophetstor/fedemeter-influxdb@sha256:163e559a6c684cde953f3515f1df08ebe7e799c53b24add3b225fcd6a976bb12",
          "name": "fedemeter_influxdb"
        },
        {
          "digest": "sha256:43641d57b7b694adb090e6377bfd6315aab6193e5637bab91221f076f205d819",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-agent-ubi@sha256:43641d57b7b694adb090e6377bfd6315aab6193e5637bab91221f076f205d819",
          "name": "federatorai_agent"
        },
        {
          "digest": "sha256:8f6ee4e54297b6dadc51bd8dad4d9f67cfb5aa7c4e8de82ad0928d71e1d0d0f7",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-agent-preloader@sha256:8f6ee4e54297b6dadc51bd8dad4d9f67cfb5aa7c4e8de82ad0928d71e1d0d0f7",
          "name": "federatorai_agent_preloader"
        },
        {
          "digest": "sha256:3bde9bb8f63c92619d28c80985e5e30ec4cc96dba8252dff6c3b5f10104db89d",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-dashboard-frontend@sha256:3bde9bb8f63c92619d28c80985e5e30ec4cc96dba8252dff6c3b5f10104db89d",
          "name": "federatorai_dashboard_frontend"
        },
        {
          "digest": "sha256:fa443c901e06aad3780666a4d676b330c61d66d8ea52ae2850f382f68559154d",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-dashboard-backend@sha256:fa443c901e06aad3780666a4d676b330c61d66d8ea52ae2850f382f68559154d",
          "name": "federatorai_dashboard_backend"
        },
        {
          "digest": "sha256:46b206bb1814b2b7d38e9e0d14ef1f0e3c51d7b3f18b32cc92515bffc5ca5b1f",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-data-adapter@sha256:46b206bb1814b2b7d38e9e0d14ef1f0e3c51d7b3f18b32cc92515bffc5ca5b1f",
          "name": "federatorai_data_adapter"
        },
        {
          "digest": "sha256:889136e2f82db71d4c7a5ab39472f578e12315c65bda1ab3dc3ef9adc9d4a6cc",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-rest-ubi@sha256:889136e2f82db71d4c7a5ab39472f578e12315c65bda1ab3dc3ef9adc9d4a6cc",
          "name": "federatorai_restapi"
        },
        {
          "digest": "sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "image": "registry.connect.redhat.com/prophetstor/alameda-recommender-ubi@sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "name": "federatorai_recommend_dispatcher"
        },
        {
          "digest": "sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "image": "registry.connect.redhat.com/prophetstor/alameda-recommender-ubi@sha256:b4cbe2b2aaac4200cb45310d0f9b4b6acb9d5c7c71d5daef0f3de491440ef94e",
          "name": "federatorai_recommend_worker"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "4.7.2-1",
      "version_original": "4.7.2-1"
    },
    {
      "_id": "61a51db027e166330707d94e",
      "alm_examples": [
        {
          "kind": "InfoScaleCluster",
          "metadata": {
            "name": "infoscalecluster-dev"
          },
          "spec": {
            "clusterInfo": [
              {},
              {}
            ],
            "version": "8.0.0.0000"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-operator-bundle@sha256:6036066bfb0ce4b8983f58b085ccf6c724d2d8c8dc141ddd24baa66d88f9557e",
      "bundle_path_digest": "sha256:6036066bfb0ce4b8983f58b085ccf6c724d2d8c8dc141ddd24baa66d88f9557e",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-29T18:36:32.538000+00:00",
      "csv_description": "## InfoScale\u2122 SDS Operator\n\nInfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster\n\n## Overview\n\n- Veritas InfoScale\u2122 delivers Infrastructure resiliency and persistent storage for your critical containerized applications for OpenShift\u00ae and Kubernetes Native deployments\n- Engineered to support stateful workloads generated for mission-critical containerized applications.\n\n---\n\n## Data Services & Benefits\n\n**1. Software-Defined Persistent Storage Volumes:** Enables customers to support multiple container application requirements leveraging existing SAN or DAS storage\n\n**2. CSI API Driver:** Facilitates static and dynamic provisioning for applications with RWX, RWO and ROX access modes\n\n**3. Life Cycle Management:** Enables automated deployment, configuration and upgrades of InfoScale Software-defined container images. Certified and Integrated with Red Hat OpenShift for a single-click deployment\n\n**4. Availability:** Provides scaling, mounting and/or movement of InfoScale persistent storage volumes on cluster nodes with minimal disruption\n\n**5. Data Integrity:** Prevents data corruption by allowing only the active cluster nodes to write to the volume. The I/O fencing feature recovers from cluster disruptions quickly by ensuring that application pods are moved to another node to continue normal operations\n\n**6. Point-in-Time Data Copies:** Create snapshots of Persistent Volumes for backup products, data analytics or forensic discovery and analysis\n\n**7. Disaster Recovery (DR) Tech Preview:** This DR feature provides the ability to test and validate disaster recovery capabilities by migrating Kubernetes cluster metadata and application components to peer cluster in case of a local or remote disaster\n\n---\n\n## Pre-requisites\n\n- [Please refer to pre-requisite section from official documentation](https://www.veritas.com/support/en_US/doc/151215298-151215302-0)\n\n## InfoScale Cluster custom resource\n\n```\nkind: InfoScaleCluster\nmetadata:\n  name:  < Infoscale Cluster Name >\n\nspec:\n  version: \"8.0.0.0000\"\n\n  clusterInfo:\n  - nodeName: <Name of the first node>\n  ip:\n  - <Optional - First IP address of the first node >\n  - <Optional - Second IP address of the first node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  - nodeName: <Name of the second node>\n  ip:\n  - <Optional - First IP address of the second node >\n  - <Optional - Second IP address of the second node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  # You can add up to 16 nodes.\n\n  licenseServer: < Optional - License server name/IP address >\n  licensePort: < Optional - License port number >\n\n  customImageRegistry: < Optional \u2013 Registry for Infoscale Container images>\n\n```\n\n#### Note\n\nYou can specify up to 16 worker nodes in CR. Although cluster configuration is allowed even with one Network Interface Card,\nVeritas recommends a minimum of two physical links for performance and High Availability (HA). Number of links for each network link must be same on all\nnodes. Optionally, you can enter node level IP addresses. If IP addresses are not provided, IP addresses of OpenShift cluster nodes are used.\n",
      "csv_display_name": "InfoScale\u2122 SDS Operator",
      "csv_metadata_description": "",
      "csv_name": "infoscale-operator.v8.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T10:58:00.765000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "infoscale-operator",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "InfoScaleCluster",
          "plural": "infoscaleclusters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f45746ae4fc2fe57f0c0d1d50fc184a5aa06ca6bc2970b25e10b70fe373c566a",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:f45746ae4fc2fe57f0c0d1d50fc184a5aa06ca6bc2970b25e10b70fe373c566a",
          "name": "manager"
        },
        {
          "digest": "sha256:f45746ae4fc2fe57f0c0d1d50fc184a5aa06ca6bc2970b25e10b70fe373c566a",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:f45746ae4fc2fe57f0c0d1d50fc184a5aa06ca6bc2970b25e10b70fe373c566a",
          "name": "pre-manager"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.0.0",
      "version_original": "8.0.0"
    },
    {
      "_id": "61a51df6bfd4a5234d5960b6",
      "alm_examples": [
        {
          "kind": "InfoScaleCluster",
          "metadata": {
            "name": "infoscalecluster-dev"
          },
          "spec": {
            "clusterInfo": [
              {},
              {}
            ],
            "version": "8.0.0.0000"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-operator-bundle@sha256:6036066bfb0ce4b8983f58b085ccf6c724d2d8c8dc141ddd24baa66d88f9557e",
      "bundle_path_digest": "sha256:6036066bfb0ce4b8983f58b085ccf6c724d2d8c8dc141ddd24baa66d88f9557e",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-29T18:37:42.929000+00:00",
      "csv_description": "## InfoScale\u2122 SDS Operator\n\nInfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster\n\n## Overview\n\n- Veritas InfoScale\u2122 delivers Infrastructure resiliency and persistent storage for your critical containerized applications for OpenShift\u00ae and Kubernetes Native deployments\n- Engineered to support stateful workloads generated for mission-critical containerized applications.\n\n---\n\n## Data Services & Benefits\n\n**1. Software-Defined Persistent Storage Volumes:** Enables customers to support multiple container application requirements leveraging existing SAN or DAS storage\n\n**2. CSI API Driver:** Facilitates static and dynamic provisioning for applications with RWX, RWO and ROX access modes\n\n**3. Life Cycle Management:** Enables automated deployment, configuration and upgrades of InfoScale Software-defined container images. Certified and Integrated with Red Hat OpenShift for a single-click deployment\n\n**4. Availability:** Provides scaling, mounting and/or movement of InfoScale persistent storage volumes on cluster nodes with minimal disruption\n\n**5. Data Integrity:** Prevents data corruption by allowing only the active cluster nodes to write to the volume. The I/O fencing feature recovers from cluster disruptions quickly by ensuring that application pods are moved to another node to continue normal operations\n\n**6. Point-in-Time Data Copies:** Create snapshots of Persistent Volumes for backup products, data analytics or forensic discovery and analysis\n\n**7. Disaster Recovery (DR) Tech Preview:** This DR feature provides the ability to test and validate disaster recovery capabilities by migrating Kubernetes cluster metadata and application components to peer cluster in case of a local or remote disaster\n\n---\n\n## Pre-requisites\n\n- [Please refer to pre-requisite section from official documentation](https://www.veritas.com/support/en_US/doc/151215298-151215302-0)\n\n## InfoScale Cluster custom resource\n\n```\nkind: InfoScaleCluster\nmetadata:\n  name:  < Infoscale Cluster Name >\n\nspec:\n  version: \"8.0.0.0000\"\n\n  clusterInfo:\n  - nodeName: <Name of the first node>\n  ip:\n  - <Optional - First IP address of the first node >\n  - <Optional - Second IP address of the first node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  - nodeName: <Name of the second node>\n  ip:\n  - <Optional - First IP address of the second node >\n  - <Optional - Second IP address of the second node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  # You can add up to 16 nodes.\n\n  licenseServer: < Optional - License server name/IP address >\n  licensePort: < Optional - License port number >\n\n  customImageRegistry: < Optional \u2013 Registry for Infoscale Container images>\n\n```\n\n#### Note\n\nYou can specify up to 16 worker nodes in CR. Although cluster configuration is allowed even with one Network Interface Card,\nVeritas recommends a minimum of two physical links for performance and High Availability (HA). Number of links for each network link must be same on all\nnodes. Optionally, you can enter node level IP addresses. If IP addresses are not provided, IP addresses of OpenShift cluster nodes are used.\n",
      "csv_display_name": "InfoScale\u2122 SDS Operator",
      "csv_metadata_description": "",
      "csv_name": "infoscale-operator.v8.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:16:54.660000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "infoscale-operator",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "InfoScaleCluster",
          "plural": "infoscaleclusters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f45746ae4fc2fe57f0c0d1d50fc184a5aa06ca6bc2970b25e10b70fe373c566a",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:f45746ae4fc2fe57f0c0d1d50fc184a5aa06ca6bc2970b25e10b70fe373c566a",
          "name": "manager"
        },
        {
          "digest": "sha256:f45746ae4fc2fe57f0c0d1d50fc184a5aa06ca6bc2970b25e10b70fe373c566a",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:f45746ae4fc2fe57f0c0d1d50fc184a5aa06ca6bc2970b25e10b70fe373c566a",
          "name": "pre-manager"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.0.0",
      "version_original": "8.0.0"
    },
    {
      "_id": "61a57ae13e9240fca360f54a",
      "alm_examples": [
        {
          "api_version": "aikit.intel/v1alpha1",
          "kind": "AIKitContainer",
          "metadata": {
            "name": "intel-aikit-container",
            "namespace": "redhat-ods-applications"
          },
          "spec": {
            "fullnameOverride": "",
            "imagestream": {
              "name": "oneapi-aikit",
              "namespace": "redhat-ods-applications",
              "registry": {
                "name": "oneapi-aikit",
                "repo": "intel",
                "root": "registry.connect.redhat.com",
                "version": "latest"
              }
            },
            "nameOverride": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/aikit-operator-bundle@sha256:2861cb69274ed1313bc97d870f9a52f361d5fc003b2d66752d38c9577bf1cf7c",
      "bundle_path_digest": "sha256:2861cb69274ed1313bc97d870f9a52f361d5fc003b2d66752d38c9577bf1cf7c",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:14:09.244000+00:00",
      "csv_description": "The Intel\u00ae oneAPI AI Analytics Toolkit gives data scientists, AI developers, and researchers familiar Python* tools and frameworks to accelerate end-to-end data science and machine learning pipelines on Intel\u00ae architectures. The components are built using oneAPI libraries for low-level compute optimizations. This toolkit maximizes performance from preprocessing through machine and deep learning phases and provides interoperability for efficient model development and deployment across single and multinodes.\n",
      "csv_display_name": "Intel\u00ae oneAPI AI Analytics Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "aikit-operator.v2021.2.100410",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:41:47.676000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "aikit-operator",
      "provided_apis": [
        {
          "group": "aikit.intel",
          "kind": "AIKitContainer",
          "plural": "aikitcontainers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1f232b2c9ecc3219835cd98b1e0ea96485d5630856fe611c5fb9f2a5219160e8",
          "image": "registry.connect.redhat.com/intel/aikit-operator@sha256:1f232b2c9ecc3219835cd98b1e0ea96485d5630856fe611c5fb9f2a5219160e8",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2021.2.100410",
      "version_original": "2021.2.100410"
    },
    {
      "_id": "61a57ae9c17162a20c1c687d",
      "alm_examples": [
        {
          "api_version": "aikit.intel/v1alpha1",
          "kind": "AIKitContainer",
          "metadata": {
            "name": "intel-aikit-container",
            "namespace": "redhat-ods-applications"
          },
          "spec": {
            "fullnameOverride": "",
            "imagestream": {
              "name": "oneapi-aikit",
              "namespace": "redhat-ods-applications",
              "registry": {
                "name": "oneapi-aikit",
                "repo": "intel",
                "root": "registry.connect.redhat.com",
                "version": "latest"
              }
            },
            "nameOverride": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/aikit-operator-bundle@sha256:504672b2db7fd25d1c85c9614f8242f98b4d2d04184a947dbaaada41ec205b45",
      "bundle_path_digest": "sha256:504672b2db7fd25d1c85c9614f8242f98b4d2d04184a947dbaaada41ec205b45",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:14:17.696000+00:00",
      "csv_description": "The Intel\u00ae oneAPI AI Analytics Toolkit gives data scientists, AI developers, and researchers familiar Python* tools and frameworks to accelerate end-to-end data science and machine learning pipelines on Intel\u00ae architectures. The components are built using oneAPI libraries for low-level compute optimizations. This toolkit maximizes performance from preprocessing through machine and deep learning phases and provides interoperability for efficient model development and deployment across single and multinodes.\n",
      "csv_display_name": "Intel\u00ae oneAPI AI Analytics Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "aikit-operator.v2021.2.102120",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:41:51.774000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "aikit-operator",
      "provided_apis": [
        {
          "group": "aikit.intel",
          "kind": "AIKitContainer",
          "plural": "aikitcontainers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:7abb5e6164ffb3e4b87c39061f45d09848218fcfb74b48bf5e1035d56b41ee0c",
          "image": "registry.connect.redhat.com/intel/aikit-operator@sha256:7abb5e6164ffb3e4b87c39061f45d09848218fcfb74b48bf5e1035d56b41ee0c",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2021.2.102120",
      "version_original": "2021.2.102120"
    },
    {
      "_id": "61a57af2bfd4a5234d5960cc",
      "alm_examples": [
        {
          "api_version": "aikit.intel/v1alpha1",
          "kind": "AIKitContainer",
          "metadata": {
            "name": "intel-aikit-container",
            "namespace": "redhat-ods-applications"
          },
          "spec": {
            "fullnameOverride": "",
            "imagestream": {
              "name": "oneapi-aikit",
              "namespace": "redhat-ods-applications",
              "registry": {
                "name": "oneapi-aikit",
                "repo": "intel",
                "root": "registry.connect.redhat.com",
                "version": "latest"
              }
            },
            "nameOverride": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/aikit-operator-bundle@sha256:044fe556abd0194f7e44a9b20875caa3ded4b2e479b45d9cf5acfa097ef6c6c1",
      "bundle_path_digest": "sha256:044fe556abd0194f7e44a9b20875caa3ded4b2e479b45d9cf5acfa097ef6c6c1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:14:26.534000+00:00",
      "csv_description": "The Intel\u00ae oneAPI AI Analytics Toolkit gives data scientists, AI developers, and researchers familiar Python* tools and frameworks to accelerate end-to-end data science and machine learning pipelines on Intel\u00ae architectures. The components are built using oneAPI libraries for low-level compute optimizations. This toolkit maximizes performance from preprocessing through machine and deep learning phases and provides interoperability for efficient model development and deployment across single and multinodes.\n",
      "csv_display_name": "Intel\u00ae oneAPI AI Analytics Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "aikit-operator.v2021.2.92808-dev-a60e5ba",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:41:56.190000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "aikit-operator",
      "provided_apis": [
        {
          "group": "aikit.intel",
          "kind": "AIKitContainer",
          "plural": "aikitcontainers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:34516d6df20aa91b4fcd691aafed3260c8a43aaaded64fdbe8078fc45c1357f0",
          "image": "registry.connect.redhat.com/intel/aikit-operator@sha256:34516d6df20aa91b4fcd691aafed3260c8a43aaaded64fdbe8078fc45c1357f0",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2021.2.92808-dev-a60e5ba",
      "version_original": "2021.2.92808-dev-a60e5ba"
    },
    {
      "_id": "61a57afb3e9240fca360f54b",
      "alm_examples": [
        {
          "api_version": "aikit.intel/v1alpha1",
          "kind": "AIKitContainer",
          "metadata": {
            "name": "intel-aikit-container",
            "namespace": "redhat-ods-applications"
          },
          "spec": {
            "fullnameOverride": "",
            "imagestream": {
              "name": "oneapi-aikit",
              "namespace": "redhat-ods-applications",
              "registry": {
                "name": "oneapi-aikit",
                "repo": "intel",
                "root": "registry.connect.redhat.com",
                "version": "latest"
              }
            },
            "nameOverride": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/aikit-operator-bundle@sha256:951e1dc1384a046270a6d5f540b1883aa47fa0c04895b5845635327c80281976",
      "bundle_path_digest": "sha256:951e1dc1384a046270a6d5f540b1883aa47fa0c04895b5845635327c80281976",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:14:35.233000+00:00",
      "csv_description": "The Intel\u00ae oneAPI AI Analytics Toolkit gives data scientists, AI developers, and researchers familiar Python* tools and frameworks to accelerate end-to-end data science and machine learning pipelines on Intel\u00ae architectures. The components are built using oneAPI libraries for low-level compute optimizations. This toolkit maximizes performance from preprocessing through machine and deep learning phases and provides interoperability for efficient model development and deployment across single and multinodes.\n",
      "csv_display_name": "Intel\u00ae oneAPI AI Analytics Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "aikit-operator.v2021.2.92814",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:42:00.570000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "aikit-operator",
      "provided_apis": [
        {
          "group": "aikit.intel",
          "kind": "AIKitContainer",
          "plural": "aikitcontainers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5448635df26ff738f5dd39256c961ad2a5756ca8ee0cb66370b261a242ef6f7b",
          "image": "registry.connect.redhat.com/intel/aikit-operator@sha256:5448635df26ff738f5dd39256c961ad2a5756ca8ee0cb66370b261a242ef6f7b",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2021.2.92814",
      "version_original": "2021.2.92814"
    },
    {
      "_id": "61a57b033e9240fca360f54c",
      "alm_examples": [
        {
          "api_version": "aikit.intel/v1alpha1",
          "kind": "AIKitContainer",
          "metadata": {
            "name": "intel-aikit-container",
            "namespace": "redhat-ods-applications"
          },
          "spec": {
            "fullnameOverride": "",
            "imagestream": {
              "name": "oneapi-aikit",
              "namespace": "redhat-ods-applications",
              "registry": {
                "name": "oneapi-aikit",
                "repo": "intel",
                "root": "registry.connect.redhat.com",
                "version": "latest"
              }
            },
            "nameOverride": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/aikit-operator-bundle@sha256:db2074b8ef12a3037a7aaa515c9055f080e546706f769404d6f9005a28f57e61",
      "bundle_path_digest": "sha256:db2074b8ef12a3037a7aaa515c9055f080e546706f769404d6f9005a28f57e61",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:14:43.525000+00:00",
      "csv_description": "The Intel\u00ae oneAPI AI Analytics Toolkit gives data scientists, AI developers, and researchers familiar Python* tools and frameworks to accelerate end-to-end data science and machine learning pipelines on Intel\u00ae architectures. The components are built using oneAPI libraries for low-level compute optimizations. This toolkit maximizes performance from preprocessing through machine and deep learning phases and provides interoperability for efficient model development and deployment across single and multinodes.\n",
      "csv_display_name": "Intel\u00ae oneAPI AI Analytics Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "aikit-operator.v2021.2.92911",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:42:05.905000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "aikit-operator",
      "provided_apis": [
        {
          "group": "aikit.intel",
          "kind": "AIKitContainer",
          "plural": "aikitcontainers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6c55351004f5b04f901a2a3ad3ffab01c7b7d237dde9943dda3116e354d3cfe7",
          "image": "registry.connect.redhat.com/intel/aikit-operator@sha256:6c55351004f5b04f901a2a3ad3ffab01c7b7d237dde9943dda3116e354d3cfe7",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2021.2.92911",
      "version_original": "2021.2.92911"
    },
    {
      "_id": "61a57b0c27e166330707d95f",
      "alm_examples": [
        {
          "api_version": "charts.anchore.io/v1alpha1",
          "kind": "AnchoreEngine",
          "metadata": {
            "name": "anchoreengine-sample"
          },
          "spec": {
            "anchoreGlobal": {
              "defaultAdminEmail": "example@email.com"
            },
            "postgresql": {
              "extraEnv": [
                {
                  "name": "POSTGRESQL_USER",
                  "value": "anchoreengine"
                },
                {
                  "name": "POSTGRESQL_PASSWORD",
                  "value": "anchore-postgres,123"
                },
                {
                  "name": "POSTGRESQL_DATABASE",
                  "value": "anchore"
                },
                {
                  "name": "PGUSER",
                  "value": "postgres"
                }
              ],
              "postgresDatabase": "anchore",
              "postgresPassword": "anchore-postgres,123",
              "postgresUser": "anchoreengine"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/anchore/engine-operator-bundle@sha256:fbbe7e6c1d75c4de2f47e2c825c930568e85f1134545e9d890a0c9f3d9187a4d",
      "bundle_path_digest": "sha256:fbbe7e6c1d75c4de2f47e2c825c930568e85f1134545e9d890a0c9f3d9187a4d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:14:52.340000+00:00",
      "csv_description": "Anchore Engine is an open source software system that provides a centralized service for analyzing container images, \n scanning for security vulnerabilities, and enforcing deployment policies. Anchore Engine is provided as a Docker \n container image that can be run standalone or with an orchestration platform such as Kubernetes. Anchore Engine allows \n users to perform detailed analysis on their container images, run queries, produce reports, and define policies that \n can be used in CI/CD pipelines. Users can extend Anchore Engine with plugins that add new queries, image analysis, and \n policies. Anchore Engine can be accessed directly through a RESTful API or via the Anchore CLI.\n\n The Anchore Engine Operator is based on the official stable [Helm Chart](https://github.com/anchore/anchore-charts/tree/master/stable/anchore-engine).",
      "csv_display_name": "Anchore Engine Operator",
      "csv_metadata_description": "Anchore Engine - container image scanning service for policy-based security, best-practice and compliance enforcement.",
      "csv_name": "anchore-engine.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:42:28.559000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "anchore-engine",
      "provided_apis": [
        {
          "group": "charts.anchore.io",
          "kind": "AnchoreEngine",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:baf0f5acd319bc4d0132c88922ee3f357fdcdc278d931f243d0cbec3f6d416c6",
          "image": "registry.connect.redhat.com/anchore/engine-operator@sha256:baf0f5acd319bc4d0132c88922ee3f357fdcdc278d931f243d0cbec3f6d416c6",
          "name": "engine-operator-baf0f5acd319bc4d0132c88922ee3f357fdcdc278d931f243d0cbec3f6d416c6-annotation"
        },
        {
          "digest": "sha256:baf0f5acd319bc4d0132c88922ee3f357fdcdc278d931f243d0cbec3f6d416c6",
          "image": "registry.connect.redhat.com/anchore/engine-operator@sha256:baf0f5acd319bc4d0132c88922ee3f357fdcdc278d931f243d0cbec3f6d416c6",
          "name": "manager"
        },
        {
          "digest": "sha256:68e09d5ff695b46f24de3d7610f88dfc14b77b38758bbd68d03350dbae3deb0f",
          "image": "registry.connect.redhat.com/anchore/engine0@sha256:68e09d5ff695b46f24de3d7610f88dfc14b77b38758bbd68d03350dbae3deb0f",
          "name": "anchore_engine"
        },
        {
          "digest": "sha256:e8177c5de05ccdd6d12e360b65c63c889b2de725d573ffdedd8914230b118639",
          "image": "registry.redhat.io/rhel8/postgresql-96@sha256:e8177c5de05ccdd6d12e360b65c63c889b2de725d573ffdedd8914230b118639",
          "name": "anchore_postgresql"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "61a57b153e9240fca360f54d",
      "alm_examples": [
        {
          "api_version": "anzo.cambridgesemantics.com/v1",
          "kind": "Anzo",
          "metadata": {
            "name": "agent01"
          },
          "spec": {
            "nodeConfig": {
              "spec": {
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "app": "anzo"
                  }
                },
                "serviceName": "anzo-agent01",
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "anzo"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:d1c2d54ca205d669c5ea1bb6aae105afe2385cc5695cecd78423ffa1d98929f8",
                        "name": "anzo",
                        "resources": {
                          "limits": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          },
                          "requests": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          }
                        }
                      }
                    ],
                    "serviceAccountName": "anzo-operator"
                  }
                }
              }
            },
            "role": "AnzoAgent"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-operator-bundle@sha256:28703523a1c160570fc23fb1236d2a02108b97e4423d42b0d3cde98c94d351cb",
      "bundle_path_digest": "sha256:28703523a1c160570fc23fb1236d2a02108b97e4423d42b0d3cde98c94d351cb",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:15:01.229000+00:00",
      "csv_description": "The Anzo Operator provides the way to install and configure an anzo agent setup on Red Hat K8S environment.\nCurrently, this is supported only through when deployed as an Anzo Agent as part of an Anzo Unstructured deployment.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo/blob/v2.0.0/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Operator",
      "csv_metadata_description": "kubernetes operator for Anzo",
      "csv_name": "anzo-operator.v2.0.101",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:42:33.671000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "anzo-operator",
      "provided_apis": [
        {
          "group": "anzo.cambridgesemantics.com",
          "kind": "Anzo",
          "plural": "anzos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:563e964f5771b9bfd860ea993b6e0936a54504908f5b2d1dff6f99ade74bb7a0",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:563e964f5771b9bfd860ea993b6e0936a54504908f5b2d1dff6f99ade74bb7a0",
          "name": "anzo-operator-563e964f5771b9bfd860ea993b6e0936a54504908f5b2d1dff6f99ade74bb7a0-annotation"
        },
        {
          "digest": "sha256:563e964f5771b9bfd860ea993b6e0936a54504908f5b2d1dff6f99ade74bb7a0",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:563e964f5771b9bfd860ea993b6e0936a54504908f5b2d1dff6f99ade74bb7a0",
          "name": "manager"
        },
        {
          "digest": "sha256:d1c2d54ca205d669c5ea1bb6aae105afe2385cc5695cecd78423ffa1d98929f8",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:d1c2d54ca205d669c5ea1bb6aae105afe2385cc5695cecd78423ffa1d98929f8",
          "name": "anzo"
        },
        {
          "digest": "sha256:d1c2d54ca205d669c5ea1bb6aae105afe2385cc5695cecd78423ffa1d98929f8",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:d1c2d54ca205d669c5ea1bb6aae105afe2385cc5695cecd78423ffa1d98929f8",
          "name": "anzo-d1c2d54ca205d669c5ea1bb6aae105afe2385cc5695cecd78423ffa1d98929f8-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "61a57b1ebfd4a5234d5960cd",
      "alm_examples": [
        {
          "api_version": "anzograph.clusters.cambridgesemantics.com/v2",
          "kind": "AnzoGraph",
          "metadata": {
            "name": "azg01"
          },
          "spec": {
            "db": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app_data": "anzograph-data-grpc",
                      "app_mgmt": "anzograph-mgmt-grpc"
                    }
                  },
                  "serviceName": "anzograph-azg01",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app_data": "anzograph-data-grpc",
                        "app_mgmt": "anzograph-mgmt-grpc"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5",
                          "name": "db",
                          "resources": {
                            "limits": {
                              "cpu": "8000m",
                              "memory": "8Gi"
                            },
                            "requests": {
                              "cpu": "8000m",
                              "memory": "8Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "anzograph-operator"
                    }
                  }
                }
              }
            },
            "deployFrontend": false,
            "frontend": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app_mgmt": "anzograph-frontend"
                    }
                  },
                  "serviceName": "anzograph-azg01",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app_mgmt": "anzograph-frontend"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3",
                          "name": "frontend",
                          "resources": {
                            "limits": {
                              "cpu": "2000m",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2000m",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "anzograph-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator-bundle@sha256:9418a3505873ac387f2b5455ec7e696739a2bb6f03232f8c0f59489c605b96f2",
      "bundle_path_digest": "sha256:9418a3505873ac387f2b5455ec7e696739a2bb6f03232f8c0f59489c605b96f2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:15:10.124000+00:00",
      "csv_description": "The AnzoGraph Operator provides the way to install and configure an AnzoGraph\ncluster on Red Hat K8S environment.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzograph/blob/v2.0.1/README_openshift_marketplace.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzograph/userdoc/ )\n\n### Support\n\nWe offer Support to our customers with the AnzoGraph db Enterprise Edition License [here]( https://customercenter.cambridgesemantics.com/ ). For AnzoGraph db Free Edition questions, get help from our Anzograph User Community at Stack Overflow. When submitting a question, include the tag 'anzograph'.",
      "csv_display_name": "AnzoGraph Operator",
      "csv_metadata_description": "kubernetes operator for AnzoGraph DB",
      "csv_name": "anzograph-operator.v2.0.102",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:42:39.544000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "anzograph-operator",
      "provided_apis": [
        {
          "group": "anzograph.clusters.cambridgesemantics.com",
          "kind": "AnzoGraph",
          "version": "v2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:a5b212558f748ddc8156541b546290320b656506e039a18903ad9fa6e638e732",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:a5b212558f748ddc8156541b546290320b656506e039a18903ad9fa6e638e732",
          "name": "anzograph-operator-a5b212558f748ddc8156541b546290320b656506e039a18903ad9fa6e638e732-annotation"
        },
        {
          "digest": "sha256:a5b212558f748ddc8156541b546290320b656506e039a18903ad9fa6e638e732",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:a5b212558f748ddc8156541b546290320b656506e039a18903ad9fa6e638e732",
          "name": "manager"
        },
        {
          "digest": "sha256:e3bdddf811b5ba69f388d023aea1ba538edd00e9f415c33ec555321d39129a36",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph@sha256:e3bdddf811b5ba69f388d023aea1ba538edd00e9f415c33ec555321d39129a36",
          "name": "anzograph_allinone"
        },
        {
          "digest": "sha256:8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5",
          "name": "anzograph_db"
        },
        {
          "digest": "sha256:c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3",
          "name": "anzograph_frontend"
        },
        {
          "digest": "sha256:c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3",
          "name": "anzograph-frontend-c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3-annotation"
        },
        {
          "digest": "sha256:8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5",
          "name": "anzograph-db-8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.0.1",
      "version_original": "2.0.1"
    },
    {
      "_id": "61a57b26c17162a20c1c687f",
      "alm_examples": [
        {
          "api_version": "anzounstructured.clusters.cambridgesemantics.com/v1",
          "kind": "AnzoUnstructured",
          "metadata": {
            "name": "au01"
          },
          "spec": {
            "auWorker": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-w",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2",
                          "name": "w",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            },
            "msLeader": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-ms",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286",
                          "name": "ms",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-operator-bundle@sha256:800c686058a8b80d2c082741019db9d35535b2ba2b59007cbde0c2dffa143e82",
      "bundle_path_digest": "sha256:800c686058a8b80d2c082741019db9d35535b2ba2b59007cbde0c2dffa143e82",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:15:18.637000+00:00",
      "csv_description": "The Anzo Unstructured Operator provides the way to install and configure an anzo unstructured setup on Red Hat K8S environment.\nCurrently, this is possible only through existing Anzo installation.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo-unstructured/blob/v2.0.0/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Unstructured Operator",
      "csv_metadata_description": "Kubernetes Operator for Anzo Unstructured",
      "csv_name": "anzounstructured-operator.v2.0.101",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:42:46.173000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "anzounstructured-operator",
      "provided_apis": [
        {
          "group": "anzounstructured.clusters.cambridgesemantics.com",
          "kind": "AnzoUnstructured",
          "plural": "anzounstructureds",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:a47af068a7aa55c12be84c80d263feeed5597ecc434986b4f2fff782b568bb04",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:a47af068a7aa55c12be84c80d263feeed5597ecc434986b4f2fff782b568bb04",
          "name": "unstructured-operator-a47af068a7aa55c12be84c80d263feeed5597ecc434986b4f2fff782b568bb04-annotation"
        },
        {
          "digest": "sha256:a47af068a7aa55c12be84c80d263feeed5597ecc434986b4f2fff782b568bb04",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:a47af068a7aa55c12be84c80d263feeed5597ecc434986b4f2fff782b568bb04",
          "name": "manager"
        },
        {
          "digest": "sha256:0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286",
          "name": "anzo_microservices_leader"
        },
        {
          "digest": "sha256:4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2",
          "name": "anzo_unstructured_worker"
        },
        {
          "digest": "sha256:0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286",
          "name": "anzo-microservices-leader-0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286-annotation"
        },
        {
          "digest": "sha256:4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2",
          "name": "anzo-unstructured-worker-4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "61a57b2ec17162a20c1c6880",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1alpha1",
          "kind": "OpenshiftArtifactoryHa",
          "metadata": {
            "name": "openshiftartifactoryha"
          },
          "spec": {
            "artifactory-ha": {
              "artifactory": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/artifactory-pro",
                  "tag": "7.25.7-2"
                },
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE",
                "node": {
                  "replicaCount": 2,
                  "waitForPrimaryStartup": {
                    "enabled": false
                  }
                },
                "uid": "1000721030"
              },
              "database": {
                "driver": "OVERRIDE",
                "password": "OVERRIDE",
                "type": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "databaseUpgradeReady": true,
              "initContainerImage": "registry.connect.redhat.com/jfrog/init@sha256:175efbb8c51f0c50c4d32e876b20083b92ec5a04bab94e93cb3cb92d86164d03",
              "nginx": {
                "gid": "1000720107",
                "http": {
                  "externalPort": 80,
                  "internalPort": 8080
                },
                "https": {
                  "externalPort": 443,
                  "internalPort": 8443
                },
                "image": {
                  "registry": "registry.redhat.io",
                  "repository": "rhel8/nginx-116",
                  "tag": "latest"
                },
                "service": {
                  "ssloffload": false
                },
                "tlsSecretName": "OVERRIDE",
                "uid": "1000720104"
              },
              "postgresql": {
                "enabled": false
              },
              "waitForDatabase": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/artifactory-operator-bundle@sha256:49229329083f8836be365b25beda86290cf8c6985dbeb1c46991c2121b54dda9",
      "bundle_path_digest": "sha256:49229329083f8836be365b25beda86290cf8c6985dbeb1c46991c2121b54dda9",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:15:26.440000+00:00",
      "csv_description": " ## Breaking change\nPlease update to version 1.1.10 of the operator.\nVersion 1.1.8 and 1.1.9 have issues. Please skip these versions.\n\n## Overview\nOpenshift Operator to deploy JFrog Artifactory Enterprise into your Openshift cluster.\n## Security Context Constraints\nTo deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc.\n```\noc adm policy add-scc-to-user anyuid -z artifactory-ha-operator -n openshift-operators\n```\nAdd the service account for the Artifactory chart to deploy successfully:\n``` oc adm policy add-scc-to-user anyuid -z openshiftartifactoryha-artifactory-ha -n artifactory ```\n### Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Artifactory Enterprise Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Artifactory Enterprise Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Artifactory HA.\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\nDATABASE_TYPE\nDATABASE_DRIVER\nDATABASE_URL\nDATABASE_USER\nDATABASE_PASSWORD\n```\nMaster key and Join key must be supplied. To generate a new key for each run the command below:\n\n```\n# Create a key\nexport JOIN_KEY=$(openssl rand -hex 32)\necho ${JOIN_KEY}\n```\n\nTo use TLS you will need to first create a k8s tls secret to store your .crt and .key file into.\nThen supply the value of this k8s secret into the TLS_SECRET field.\n``` oc create secret tls my_tls_secret --cert=tls.crt --key=tls.key --namespace=my_namespace ```\nClick Create for Artifactory Enterprise to deploy into OpenShift and connect to it on the external IP exposed by the load balancer.\n### Create a route\nTo expose Artifactory from Openshift we recommend you create a new route in Openshift.\nYou can either use the oc command line tool or the Openshift web console to generate a new route.\nDepending upon where you terminate TLS you will need to either specify pass through or edge.\nCommand Line (Edge):\n``` oc create route edge --service=openshiftartifactory-ha --cert=tls.crt --key=tls.key --ca-cert=ca.crt --hostname=www.example.com ```\nOr for more information visit the official Openshift documentation on routes here:\nhttps://docs.openshift.com/container-platform/4.6/networking/routes/route-configuration.html\n\n",
      "csv_display_name": "JFrog Artifactory Enterprise Operator",
      "csv_metadata_description": "JFrog Artifactory Enterprise deploys Artifactory in a high availability environment across multiple pods",
      "csv_name": "artifactory-ha-operator.v1.1.14",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:42:51.991000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:9b0b59194a052c63fa0d54d47220b7d2154ac38272694e54492cf2c029043cc4",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:9b0b59194a052c63fa0d54d47220b7d2154ac38272694e54492cf2c029043cc4",
          "name": "artifactory-operator-9b0b59194a052c63fa0d54d47220b7d2154ac38272694e54492cf2c029043cc4-annotation"
        },
        {
          "digest": "sha256:9b0b59194a052c63fa0d54d47220b7d2154ac38272694e54492cf2c029043cc4",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:9b0b59194a052c63fa0d54d47220b7d2154ac38272694e54492cf2c029043cc4",
          "name": "artifactory-ha-operator"
        },
        {
          "digest": "sha256:abd96a07bbeffcdcdf69b5998b9256b684e72bcecb9b94b9a623a0c02b276322",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:abd96a07bbeffcdcdf69b5998b9256b684e72bcecb9b94b9a623a0c02b276322",
          "name": "artifactory_image_repository"
        },
        {
          "digest": "sha256:225b9d8cac2b4d3a1d193782f4bba749194048b87bf31dcd12ea88422e6350c8",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:225b9d8cac2b4d3a1d193782f4bba749194048b87bf31dcd12ea88422e6350c8",
          "name": "nginx_image_repository"
        },
        {
          "digest": "sha256:175efbb8c51f0c50c4d32e876b20083b92ec5a04bab94e93cb3cb92d86164d03",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:175efbb8c51f0c50c4d32e876b20083b92ec5a04bab94e93cb3cb92d86164d03",
          "name": "init-175efbb8c51f0c50c4d32e876b20083b92ec5a04bab94e93cb3cb92d86164d03-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.1.14",
      "version_original": "1.1.14"
    },
    {
      "_id": "61a57b36bfd4a5234d5960ce",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1alpha1",
          "kind": "OpenshiftArtifactoryHa",
          "metadata": {
            "name": "openshiftartifactoryha"
          },
          "spec": {
            "artifactory-ha": {
              "artifactory": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/artifactory-pro",
                  "tag": "7.25.7-2"
                },
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE",
                "node": {
                  "replicaCount": 2,
                  "waitForPrimaryStartup": {
                    "enabled": false
                  }
                },
                "uid": "1000721030"
              },
              "database": {
                "driver": "OVERRIDE",
                "password": "OVERRIDE",
                "type": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "databaseUpgradeReady": true,
              "initContainerImage": "registry.connect.redhat.com/jfrog/init@sha256:175efbb8c51f0c50c4d32e876b20083b92ec5a04bab94e93cb3cb92d86164d03",
              "nginx": {
                "gid": "1000720107",
                "http": {
                  "externalPort": 80,
                  "internalPort": 8080
                },
                "https": {
                  "externalPort": 443,
                  "internalPort": 8443
                },
                "image": {
                  "registry": "registry.redhat.io",
                  "repository": "rhel8/nginx-116",
                  "tag": "latest"
                },
                "service": {
                  "ssloffload": false
                },
                "tlsSecretName": "OVERRIDE",
                "uid": "1000720104"
              },
              "postgresql": {
                "enabled": false
              },
              "waitForDatabase": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/artifactory-operator-bundle@sha256:49229329083f8836be365b25beda86290cf8c6985dbeb1c46991c2121b54dda9",
      "bundle_path_digest": "sha256:49229329083f8836be365b25beda86290cf8c6985dbeb1c46991c2121b54dda9",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:15:34.963000+00:00",
      "csv_description": " ## Breaking change\nPlease update to version 1.1.10 of the operator.\nVersion 1.1.8 and 1.1.9 have issues. Please skip these versions.\n\n## Overview\nOpenshift Operator to deploy JFrog Artifactory Enterprise into your Openshift cluster.\n## Security Context Constraints\nTo deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc.\n```\noc adm policy add-scc-to-user anyuid -z artifactory-ha-operator -n openshift-operators\n```\nAdd the service account for the Artifactory chart to deploy successfully:\n``` oc adm policy add-scc-to-user anyuid -z openshiftartifactoryha-artifactory-ha -n artifactory ```\n### Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Artifactory Enterprise Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Artifactory Enterprise Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Artifactory HA.\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\nDATABASE_TYPE\nDATABASE_DRIVER\nDATABASE_URL\nDATABASE_USER\nDATABASE_PASSWORD\n```\nMaster key and Join key must be supplied. To generate a new key for each run the command below:\n\n```\n# Create a key\nexport JOIN_KEY=$(openssl rand -hex 32)\necho ${JOIN_KEY}\n```\n\nTo use TLS you will need to first create a k8s tls secret to store your .crt and .key file into.\nThen supply the value of this k8s secret into the TLS_SECRET field.\n``` oc create secret tls my_tls_secret --cert=tls.crt --key=tls.key --namespace=my_namespace ```\nClick Create for Artifactory Enterprise to deploy into OpenShift and connect to it on the external IP exposed by the load balancer.\n### Create a route\nTo expose Artifactory from Openshift we recommend you create a new route in Openshift.\nYou can either use the oc command line tool or the Openshift web console to generate a new route.\nDepending upon where you terminate TLS you will need to either specify pass through or edge.\nCommand Line (Edge):\n``` oc create route edge --service=openshiftartifactory-ha --cert=tls.crt --key=tls.key --ca-cert=ca.crt --hostname=www.example.com ```\nOr for more information visit the official Openshift documentation on routes here:\nhttps://docs.openshift.com/container-platform/4.6/networking/routes/route-configuration.html\n\n",
      "csv_display_name": "JFrog Artifactory Enterprise Operator",
      "csv_metadata_description": "JFrog Artifactory Enterprise deploys Artifactory in a high availability environment across multiple pods",
      "csv_name": "artifactory-ha-operator.v1.1.14",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:42:58.116000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:9b0b59194a052c63fa0d54d47220b7d2154ac38272694e54492cf2c029043cc4",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:9b0b59194a052c63fa0d54d47220b7d2154ac38272694e54492cf2c029043cc4",
          "name": "artifactory-operator-9b0b59194a052c63fa0d54d47220b7d2154ac38272694e54492cf2c029043cc4-annotation"
        },
        {
          "digest": "sha256:9b0b59194a052c63fa0d54d47220b7d2154ac38272694e54492cf2c029043cc4",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:9b0b59194a052c63fa0d54d47220b7d2154ac38272694e54492cf2c029043cc4",
          "name": "artifactory-ha-operator"
        },
        {
          "digest": "sha256:abd96a07bbeffcdcdf69b5998b9256b684e72bcecb9b94b9a623a0c02b276322",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:abd96a07bbeffcdcdf69b5998b9256b684e72bcecb9b94b9a623a0c02b276322",
          "name": "artifactory_image_repository"
        },
        {
          "digest": "sha256:225b9d8cac2b4d3a1d193782f4bba749194048b87bf31dcd12ea88422e6350c8",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:225b9d8cac2b4d3a1d193782f4bba749194048b87bf31dcd12ea88422e6350c8",
          "name": "nginx_image_repository"
        },
        {
          "digest": "sha256:175efbb8c51f0c50c4d32e876b20083b92ec5a04bab94e93cb3cb92d86164d03",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:175efbb8c51f0c50c4d32e876b20083b92ec5a04bab94e93cb3cb92d86164d03",
          "name": "init-175efbb8c51f0c50c4d32e876b20083b92ec5a04bab94e93cb3cb92d86164d03-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.1.14",
      "version_original": "1.1.14"
    },
    {
      "_id": "61a57b3f3e9240fca360f54e",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1alpha1",
          "kind": "OpenshiftArtifactoryHa",
          "metadata": {
            "name": "openshiftartifactoryha"
          },
          "spec": {
            "artifactory-ha": {
              "artifactory": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/artifactory-pro",
                  "tag": "7.25.7-2"
                },
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE",
                "node": {
                  "replicaCount": 2,
                  "waitForPrimaryStartup": {
                    "enabled": false
                  }
                },
                "uid": "1000721030"
              },
              "database": {
                "driver": "OVERRIDE",
                "password": "OVERRIDE",
                "type": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "databaseUpgradeReady": true,
              "initContainerImage": "registry.connect.redhat.com/jfrog/init@sha256:175efbb8c51f0c50c4d32e876b20083b92ec5a04bab94e93cb3cb92d86164d03",
              "nginx": {
                "gid": "1000720107",
                "http": {
                  "externalPort": 80,
                  "internalPort": 8080
                },
                "https": {
                  "externalPort": 443,
                  "internalPort": 8443
                },
                "image": {
                  "registry": "registry.redhat.io",
                  "repository": "rhel8/nginx-116",
                  "tag": "latest"
                },
                "service": {
                  "ssloffload": false
                },
                "tlsSecretName": "OVERRIDE",
                "uid": "1000720104"
              },
              "postgresql": {
                "enabled": false
              },
              "waitForDatabase": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/artifactory-operator-bundle@sha256:55712df39fd00efa21711d24459e5a0610d9d2221af37a893fd80f7951838fab",
      "bundle_path_digest": "sha256:55712df39fd00efa21711d24459e5a0610d9d2221af37a893fd80f7951838fab",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:15:43.436000+00:00",
      "csv_description": " ## Breaking change\nPlease update to version 1.1.10 of the operator.\nVersion 1.1.8 and 1.1.9 have issues. Please skip these versions.\n\n## Overview\nOpenshift Operator to deploy JFrog Artifactory Enterprise into your Openshift cluster.\n## Security Context Constraints\nTo deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc.\n```\noc adm policy add-scc-to-user anyuid -z artifactory-ha-operator -n openshift-operators\n```\nAdd the service account for the Artifactory chart to deploy successfully:\n``` oc adm policy add-scc-to-user anyuid -z openshiftartifactoryha-artifactory-ha -n artifactory ```\n### Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Artifactory Enterprise Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Artifactory Enterprise Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Artifactory HA.\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\nDATABASE_TYPE\nDATABASE_DRIVER\nDATABASE_URL\nDATABASE_USER\nDATABASE_PASSWORD\n```\nMaster key and Join key must be supplied. To generate a new key for each run the command below:\n\n```\n# Create a key\nexport JOIN_KEY=$(openssl rand -hex 32)\necho ${JOIN_KEY}\n```\n\nTo use TLS you will need to first create a k8s tls secret to store your .crt and .key file into.\nThen supply the value of this k8s secret into the TLS_SECRET field.\n``` oc create secret tls my_tls_secret --cert=tls.crt --key=tls.key --namespace=my_namespace ```\nClick Create for Artifactory Enterprise to deploy into OpenShift and connect to it on the external IP exposed by the load balancer.\n### Create a route\nTo expose Artifactory from Openshift we recommend you create a new route in Openshift.\nYou can either use the oc command line tool or the Openshift web console to generate a new route.\nDepending upon where you terminate TLS you will need to either specify pass through or edge.\nCommand Line (Edge):\n``` oc create route edge --service=openshiftartifactory-ha --cert=tls.crt --key=tls.key --ca-cert=ca.crt --hostname=www.example.com ```\nOr for more information visit the official Openshift documentation on routes here:\nhttps://docs.openshift.com/container-platform/4.6/networking/routes/route-configuration.html\n\n",
      "csv_display_name": "JFrog Artifactory Enterprise Operator",
      "csv_metadata_description": "JFrog Artifactory Enterprise deploys Artifactory in a high availability environment across multiple pods",
      "csv_name": "artifactory-ha-operator.v1.1.15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:43:03.772000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:9b0b59194a052c63fa0d54d47220b7d2154ac38272694e54492cf2c029043cc4",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:9b0b59194a052c63fa0d54d47220b7d2154ac38272694e54492cf2c029043cc4",
          "name": "artifactory-operator-9b0b59194a052c63fa0d54d47220b7d2154ac38272694e54492cf2c029043cc4-annotation"
        },
        {
          "digest": "sha256:9b0b59194a052c63fa0d54d47220b7d2154ac38272694e54492cf2c029043cc4",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:9b0b59194a052c63fa0d54d47220b7d2154ac38272694e54492cf2c029043cc4",
          "name": "artifactory-ha-operator"
        },
        {
          "digest": "sha256:abd96a07bbeffcdcdf69b5998b9256b684e72bcecb9b94b9a623a0c02b276322",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:abd96a07bbeffcdcdf69b5998b9256b684e72bcecb9b94b9a623a0c02b276322",
          "name": "artifactory_image_repository"
        },
        {
          "digest": "sha256:d71d368d6094a5777000a8d99164959ccb97fca355e855e24bd92c13a8df04f6",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:d71d368d6094a5777000a8d99164959ccb97fca355e855e24bd92c13a8df04f6",
          "name": "nginx_image_repository"
        },
        {
          "digest": "sha256:175efbb8c51f0c50c4d32e876b20083b92ec5a04bab94e93cb3cb92d86164d03",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:175efbb8c51f0c50c4d32e876b20083b92ec5a04bab94e93cb3cb92d86164d03",
          "name": "init-175efbb8c51f0c50c4d32e876b20083b92ec5a04bab94e93cb3cb92d86164d03-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.1.15",
      "version_original": "1.1.15"
    },
    {
      "_id": "61a57b47bfd4a5234d5960cf",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "OpenshiftArtifactoryHa",
          "metadata": {
            "name": "openshiftartifactoryha"
          },
          "spec": {
            "artifactory-ha": {
              "artifactory": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/artifactory-pro",
                  "tag": "7.27.3-1"
                },
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE",
                "node": {
                  "replicaCount": 2,
                  "waitForPrimaryStartup": {
                    "enabled": false
                  }
                },
                "uid": "1000721030"
              },
              "database": {
                "driver": "OVERRIDE",
                "password": "OVERRIDE",
                "type": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "databaseUpgradeReady": true,
              "initContainerImage": "registry.connect.redhat.com/jfrog/init@sha256:164b41720a37f75c6129c8a28d05cc56f821022313d44ff918cce4a2146d93e8",
              "nginx": {
                "gid": "1000720107",
                "http": {
                  "externalPort": 80,
                  "internalPort": 8080
                },
                "https": {
                  "externalPort": 443,
                  "internalPort": 8443
                },
                "image": {
                  "registry": "registry.redhat.io",
                  "repository": "rhel8/nginx-116",
                  "tag": "latest"
                },
                "service": {
                  "ssloffload": false
                },
                "tlsSecretName": "OVERRIDE",
                "uid": "1000720104"
              },
              "postgresql": {
                "enabled": false
              },
              "waitForDatabase": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/artifactory-operator-bundle@sha256:fc374491270b9566b0a5c80f3dd665b2227b1e8fb224eada7e5c98c82926ae08",
      "bundle_path_digest": "sha256:fc374491270b9566b0a5c80f3dd665b2227b1e8fb224eada7e5c98c82926ae08",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:15:51.531000+00:00",
      "csv_description": " ## Breaking change\nPlease update to version 1.1.10 of the operator.\nVersion 1.1.8 and 1.1.9 have issues. Please skip these versions.\n\n## Overview\nOpenshift Operator to deploy JFrog Artifactory Enterprise into your Openshift cluster.\n## Security Context Constraints\nTo deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc.\n```\noc adm policy add-scc-to-user anyuid -z artifactory-ha-operator -n openshift-operators\n```\nAdd the service account for the Artifactory chart to deploy successfully:\n``` oc adm policy add-scc-to-user anyuid -z openshiftartifactoryha-artifactory-ha -n artifactory ```\n### Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Artifactory Enterprise Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Artifactory Enterprise Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Artifactory HA.\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\nDATABASE_TYPE\nDATABASE_DRIVER\nDATABASE_URL\nDATABASE_USER\nDATABASE_PASSWORD\n```\nMaster key and Join key must be supplied. To generate a new key for each run the command below:\n\n```\n# Create a key\nexport JOIN_KEY=$(openssl rand -hex 32)\necho ${JOIN_KEY}\n```\n\nTo use TLS you will need to first create a k8s tls secret to store your .crt and .key file into.\nThen supply the value of this k8s secret into the TLS_SECRET field.\n``` oc create secret tls my_tls_secret --cert=tls.crt --key=tls.key --namespace=my_namespace ```\nClick Create for Artifactory Enterprise to deploy into OpenShift and connect to it on the external IP exposed by the load balancer.\n### Create a route\nTo expose Artifactory from Openshift we recommend you create a new route in Openshift.\nYou can either use the oc command line tool or the Openshift web console to generate a new route.\nDepending upon where you terminate TLS you will need to either specify pass through or edge.\nCommand Line (Edge):\n``` oc create route edge --service=openshiftartifactory-ha --cert=tls.crt --key=tls.key --ca-cert=ca.crt --hostname=www.example.com ```\nOr for more information visit the official Openshift documentation on routes here:\nhttps://docs.openshift.com/container-platform/4.6/networking/routes/route-configuration.html\n\n",
      "csv_display_name": "JFrog Artifactory Enterprise Operator",
      "csv_metadata_description": "JFrog Artifactory Enterprise deploys Artifactory in a high availability environment across multiple pods",
      "csv_name": "artifactory-ha-operator.v1.1.18",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:43:09.847000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:e292553e1b6e792ff19276c7f6565d7ed61dd95289eb176066329954bc93e371",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:e292553e1b6e792ff19276c7f6565d7ed61dd95289eb176066329954bc93e371",
          "name": "artifactory-operator-e292553e1b6e792ff19276c7f6565d7ed61dd95289eb176066329954bc93e371-annotation"
        },
        {
          "digest": "sha256:e292553e1b6e792ff19276c7f6565d7ed61dd95289eb176066329954bc93e371",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:e292553e1b6e792ff19276c7f6565d7ed61dd95289eb176066329954bc93e371",
          "name": "artifactory-ha-operator"
        },
        {
          "digest": "sha256:7289dde95d1e4d8e161a28cffd9c4a0cc96f92f7536d069ab63ec304a92254fd",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:7289dde95d1e4d8e161a28cffd9c4a0cc96f92f7536d069ab63ec304a92254fd",
          "name": "artifactory_image_repository"
        },
        {
          "digest": "sha256:d71d368d6094a5777000a8d99164959ccb97fca355e855e24bd92c13a8df04f6",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:d71d368d6094a5777000a8d99164959ccb97fca355e855e24bd92c13a8df04f6",
          "name": "nginx_image_repository"
        },
        {
          "digest": "sha256:164b41720a37f75c6129c8a28d05cc56f821022313d44ff918cce4a2146d93e8",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:164b41720a37f75c6129c8a28d05cc56f821022313d44ff918cce4a2146d93e8",
          "name": "init-164b41720a37f75c6129c8a28d05cc56f821022313d44ff918cce4a2146d93e8-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.1.18",
      "version_original": "1.1.18"
    },
    {
      "_id": "61a57b4f3e9240fca360f54f",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "OpenshiftArtifactoryHa",
          "metadata": {
            "name": "openshiftartifactoryha"
          },
          "spec": {
            "artifactory-ha": {
              "artifactory": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/artifactory-pro",
                  "tag": "7.27.3-1"
                },
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE",
                "node": {
                  "replicaCount": 2,
                  "waitForPrimaryStartup": {
                    "enabled": false
                  }
                },
                "uid": "1000721030"
              },
              "database": {
                "driver": "OVERRIDE",
                "password": "OVERRIDE",
                "type": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "databaseUpgradeReady": true,
              "initContainerImage": "registry.connect.redhat.com/jfrog/init@sha256:164b41720a37f75c6129c8a28d05cc56f821022313d44ff918cce4a2146d93e8",
              "nginx": {
                "gid": "1000720107",
                "http": {
                  "externalPort": 80,
                  "internalPort": 8080
                },
                "https": {
                  "externalPort": 443,
                  "internalPort": 8443
                },
                "image": {
                  "registry": "registry.redhat.io",
                  "repository": "rhel8/nginx-116",
                  "tag": "latest"
                },
                "service": {
                  "ssloffload": false
                },
                "tlsSecretName": "OVERRIDE",
                "uid": "1000720104"
              },
              "postgresql": {
                "enabled": false
              },
              "waitForDatabase": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/artifactory-operator-bundle@sha256:3c12c9d9537b12f610b9f759ad0a94ed465608f69e6bd1cd175a8c3d177151b8",
      "bundle_path_digest": "sha256:3c12c9d9537b12f610b9f759ad0a94ed465608f69e6bd1cd175a8c3d177151b8",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:15:59.736000+00:00",
      "csv_description": " ## Breaking change\nPlease update to version 1.1.10 of the operator.\nVersion 1.1.8 and 1.1.9 have issues. Please skip these versions.\n\n## Overview\nOpenshift Operator to deploy JFrog Artifactory Enterprise into your Openshift cluster.\n## Security Context Constraints\nTo deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc.\n```\noc adm policy add-scc-to-user anyuid -z artifactory-ha-operator -n openshift-operators\n```\nAdd the service account for the Artifactory chart to deploy successfully:\n``` oc adm policy add-scc-to-user anyuid -z openshiftartifactoryha-artifactory-ha -n artifactory ```\n### Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Artifactory Enterprise Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Artifactory Enterprise Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Artifactory HA.\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\nDATABASE_TYPE\nDATABASE_DRIVER\nDATABASE_URL\nDATABASE_USER\nDATABASE_PASSWORD\n```\nMaster key and Join key must be supplied. To generate a new key for each run the command below:\n\n```\n# Create a key\nexport JOIN_KEY=$(openssl rand -hex 32)\necho ${JOIN_KEY}\n```\n\nTo use TLS you will need to first create a k8s tls secret to store your .crt and .key file into.\nThen supply the value of this k8s secret into the TLS_SECRET field.\n``` oc create secret tls my_tls_secret --cert=tls.crt --key=tls.key --namespace=my_namespace ```\nClick Create for Artifactory Enterprise to deploy into OpenShift and connect to it on the external IP exposed by the load balancer.\n### Create a route\nTo expose Artifactory from Openshift we recommend you create a new route in Openshift.\nYou can either use the oc command line tool or the Openshift web console to generate a new route.\nDepending upon where you terminate TLS you will need to either specify pass through or edge.\nCommand Line (Edge):\n``` oc create route edge --service=openshiftartifactory-ha --cert=tls.crt --key=tls.key --ca-cert=ca.crt --hostname=www.example.com ```\nOr for more information visit the official Openshift documentation on routes here:\nhttps://docs.openshift.com/container-platform/4.6/networking/routes/route-configuration.html\n\n",
      "csv_display_name": "JFrog Artifactory Enterprise Operator",
      "csv_metadata_description": "JFrog Artifactory Enterprise deploys Artifactory in a high availability environment across multiple pods",
      "csv_name": "artifactory-ha-operator.v1.1.20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:43:14.720000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:29dad888f9b74b2c19f221aa6634c94dcd2144237dc039157056a77cbb0c74a4",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:29dad888f9b74b2c19f221aa6634c94dcd2144237dc039157056a77cbb0c74a4",
          "name": "artifactory-operator-29dad888f9b74b2c19f221aa6634c94dcd2144237dc039157056a77cbb0c74a4-annotation"
        },
        {
          "digest": "sha256:29dad888f9b74b2c19f221aa6634c94dcd2144237dc039157056a77cbb0c74a4",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:29dad888f9b74b2c19f221aa6634c94dcd2144237dc039157056a77cbb0c74a4",
          "name": "artifactory-ha-operator"
        },
        {
          "digest": "sha256:7289dde95d1e4d8e161a28cffd9c4a0cc96f92f7536d069ab63ec304a92254fd",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:7289dde95d1e4d8e161a28cffd9c4a0cc96f92f7536d069ab63ec304a92254fd",
          "name": "artifactory_image_repository"
        },
        {
          "digest": "sha256:d71d368d6094a5777000a8d99164959ccb97fca355e855e24bd92c13a8df04f6",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:d71d368d6094a5777000a8d99164959ccb97fca355e855e24bd92c13a8df04f6",
          "name": "nginx_image_repository"
        },
        {
          "digest": "sha256:164b41720a37f75c6129c8a28d05cc56f821022313d44ff918cce4a2146d93e8",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:164b41720a37f75c6129c8a28d05cc56f821022313d44ff918cce4a2146d93e8",
          "name": "init-164b41720a37f75c6129c8a28d05cc56f821022313d44ff918cce4a2146d93e8-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.1.20",
      "version_original": "1.1.20"
    },
    {
      "_id": "61a57b60bfd4a5234d5960d0",
      "alm_examples": [
        {
          "api_version": "cilium.io/v1alpha1",
          "kind": "CiliumConfig",
          "metadata": {
            "name": "cilium-openshift-default",
            "namespace": "placeholder"
          },
          "spec": {
            "cni": {
              "binPath": "/var/lib/cni/bin",
              "confPath": "/var/run/multus/cni/net.d"
            },
            "endpointRoutes": {
              "enabled": true
            },
            "hubble": {
              "tls": {
                "enabled": false
              }
            },
            "ipam": {
              "mode": "cluster-pool",
              "operator": {
                "clusterPoolIPv4MaskSize": "23",
                "clusterPoolIPv4PodCIDR": "10.128.0.0/14"
              }
            },
            "kubeProxyReplacement": "probe",
            "nativeRoutingCIDR": "10.128.0.0/14",
            "prometheus": {
              "serviceMonitor": {
                "enabled": false
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/isovalent/cilium-olm-metadata@sha256:33a2e21a069ff24af4bf0ffc51e83ddf398df5d9735d0123120768e9dc2c27f9",
      "bundle_path_digest": "sha256:33a2e21a069ff24af4bf0ffc51e83ddf398df5d9735d0123120768e9dc2c27f9",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:16:16.258000+00:00",
      "csv_description": "Cilium - eBPF-based Networking, Security, and Observability",
      "csv_display_name": "Cilium",
      "csv_metadata_description": "",
      "csv_name": "cilium.v1.10.4-x5bfd7b3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:43:47.728000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "cilium",
      "provided_apis": [
        {
          "group": "cilium.io",
          "kind": "CiliumConfig",
          "plural": "ciliumconfigs",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:b45ff6a6552d71cbc26e358e0b25759d33818fd92301f1656453c5bcf826ff13",
          "image": "registry.connect.redhat.com/isovalent/cilium-olm@sha256:b45ff6a6552d71cbc26e358e0b25759d33818fd92301f1656453c5bcf826ff13",
          "name": "operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.10.4+x5bfd7b3",
      "version_original": "1.10.4+x5bfd7b3"
    },
    {
      "_id": "61a57b6927e166330707d960",
      "alm_examples": [
        {
          "api_version": "citrix.citrix.com/v1alpha1",
          "kind": "Citrix-adc-istio-ingress-gateway",
          "metadata": {
            "name": "cxa-ingress-gateway-sample"
          },
          "spec": {
            "ADMSettings": {
              "ADMIP": "",
              "bandWidth": "",
              "bandWidthLicense": false,
              "cpxCores": "",
              "licenseServerIP": "",
              "licenseServerPort": 27000,
              "vCPULicense": false
            },
            "certProvider": {
              "caAddr": "istiod.istio-system.svc",
              "caPort": 15012,
              "certTTLinHours": 720,
              "clusterId": "Kubernetes",
              "jwtPolicy": "",
              "trustDomain": "cluster.local"
            },
            "citrixCPX": false,
            "coe": {
              "coeTracing": false,
              "coeURL": ""
            },
            "ingressGateway": {
              "EULA": false,
              "adcServerName": "",
              "httpNodePort": 30180,
              "httpsNodePort": 31443,
              "image": "quay.io/citrix/citrix-k8s-cpx-ingress@sha256:8f28c8af17909f0c0ced2109701755be1edea22b2a80f00aa37da70168abe1dc",
              "imagePullPolicy": "IfNotPresent",
              "label": "citrix-ingressgateway",
              "lightWeightCPX": 1,
              "mgmtHttpPort": 10080,
              "mgmtHttpsPort": 10443,
              "multiClusterIngress": false,
              "multiClusterListenerNodePort": 32443,
              "multiClusterListenerPort": 15443,
              "multiClusterSvcDomain": "global",
              "netProfile": "",
              "netscalerUrl": "",
              "nodePortRequired": false,
              "secretVolumes": [],
              "tcpPort": [],
              "vserverIP": "nsip"
            },
            "istioPilot": {
              "insecureGrpcPort": 15010,
              "name": "istiod",
              "namespace": "istio-system",
              "secureGrpcPort": 15012
            },
            "metricExporter": {
              "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:edc7f42fed88a1652904abb3a9cca09cd555374320a55693087eea2da629e536",
              "imagePullPolicy": "IfNotPresent",
              "logLevel": "ERROR",
              "port": 8888,
              "required": true,
              "secure": "YES"
            },
            "secretName": "nslogin",
            "xDSAdaptor": {
              "image": "quay.io/citrix/citrix-xds-adaptor@sha256:b5b5ab8435d65dcbe4348c0f1b4b69fef8fcc8a27e67927821ff4b4f0b8594f6",
              "imagePullPolicy": "IfNotPresent",
              "jsonLog": false,
              "logLevel": "DEBUG",
              "proxyType": "router",
              "secureConnect": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/istioingressgateway-bundle@sha256:5af6bafd200b94629bf0c5371a779ec19a726225821daa796d494fa99ef2c6e8",
      "bundle_path_digest": "sha256:5af6bafd200b94629bf0c5371a779ec19a726225821daa796d494fa99ef2c6e8",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:16:25.137000+00:00",
      "csv_description": "An Istio ingress gateway acts as an entry point for the incoming traffic and secures and controls access to the service mesh from outside. It also performs routing and load balancing. Citrix ADC CPX, MPX, or VPX can be deployed as an ingress gateway to the Istio service mesh",
      "csv_display_name": "Citrix ADC Istio Ingress Gateway Operator",
      "csv_metadata_description": "An Istio ingress gateway acts as an entry point for the incoming traffic. Citrix ADC CPX, MPX, or VPX can be deployed as an ingress gateway to the Istio service jeee An Istio ingress gateway acts as an entry point for the incoming traffic and secures and controls access to the service mesh from outside. It also perform routing and load balancing. Citrix ADC CPX, MPX, or VPX can be deployed as an ingress gateway to the Istio service mesh.",
      "csv_name": "citrix-adc-istio-ingress-gateway-operator.v0.9.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:44:05.280000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "citrix-adc-istio-ingress-gateway-operator",
      "provided_apis": [
        {
          "group": "citrix.citrix.com",
          "kind": "Citrix-adc-istio-ingress-gateway",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:8333b7fb73ad7479be45cb6a71d391554480ee0a623744e0a2e185cd1f45c226",
          "image": "registry.connect.redhat.com/citrix/citrix-adc-istio-ingress-gateway@sha256:8333b7fb73ad7479be45cb6a71d391554480ee0a623744e0a2e185cd1f45c226",
          "name": "citrix-adc-istio-ingress-gateway-8333b7fb73ad7479be45cb6a71d391554480ee0a623744e0a2e185cd1f45c226-annotation"
        },
        {
          "digest": "sha256:a5c16c64229aac3564c66816c123e81a849ff93b8a443cd6ff14bd8d63c06644",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:a5c16c64229aac3564c66816c123e81a849ff93b8a443cd6ff14bd8d63c06644",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8333b7fb73ad7479be45cb6a71d391554480ee0a623744e0a2e185cd1f45c226",
          "image": "registry.connect.redhat.com/citrix/citrix-adc-istio-ingress-gateway@sha256:8333b7fb73ad7479be45cb6a71d391554480ee0a623744e0a2e185cd1f45c226",
          "name": "manager"
        },
        {
          "digest": "sha256:b5b5ab8435d65dcbe4348c0f1b4b69fef8fcc8a27e67927821ff4b4f0b8594f6",
          "image": "quay.io/citrix/citrix-xds-adaptor@sha256:b5b5ab8435d65dcbe4348c0f1b4b69fef8fcc8a27e67927821ff4b4f0b8594f6",
          "name": "citrix-xds-adaptor-b5b5ab8435d65dcbe4348c0f1b4b69fef8fcc8a27e67927821ff4b4f0b8594f6-annotation"
        },
        {
          "digest": "sha256:edc7f42fed88a1652904abb3a9cca09cd555374320a55693087eea2da629e536",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:edc7f42fed88a1652904abb3a9cca09cd555374320a55693087eea2da629e536",
          "name": "citrix-adc-metrics-exporter-edc7f42fed88a1652904abb3a9cca09cd555374320a55693087eea2da629e536-annotation"
        },
        {
          "digest": "sha256:8f28c8af17909f0c0ced2109701755be1edea22b2a80f00aa37da70168abe1dc",
          "image": "quay.io/citrix/citrix-k8s-cpx-ingress@sha256:8f28c8af17909f0c0ced2109701755be1edea22b2a80f00aa37da70168abe1dc",
          "name": "citrix-k8s-cpx-ingress-8f28c8af17909f0c0ced2109701755be1edea22b2a80f00aa37da70168abe1dc-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.9.9",
      "version_original": "0.9.9"
    },
    {
      "_id": "61a57b72c17162a20c1c6881",
      "alm_examples": [
        {
          "api_version": "citrix.citrix.com/v1alpha1",
          "kind": "Citrix-cpx-istio-sidecar-injector",
          "metadata": {
            "name": "cpx-sidecar-injector-sample"
          },
          "spec": {
            "ADMSettings": {
              "ADMIP": "",
              "bandWidth": "",
              "bandWidthLicense": false,
              "licenseServerIP": "",
              "licenseServerPort": 27000
            },
            "certProvider": {
              "caAddr": "istiod.istio-system.svc",
              "caPort": 15012,
              "certTTLinHours": 720,
              "clusterId": "Kubernetes",
              "jwtPolicy": "",
              "trustDomain": "cluster.local"
            },
            "coe": {
              "coeTracing": false,
              "coeURL": ""
            },
            "cpxProxy": {
              "EULA": false,
              "cpxDisableProbe": "YES",
              "cpxSidecarMode": true,
              "image": "quay.io/citrix/citrix-k8s-cpx-ingress@sha256:8f28c8af17909f0c0ced2109701755be1edea22b2a80f00aa37da70168abe1dc",
              "imagePullPolicy": "IfNotPresent",
              "mgmtHttpPort": 10080,
              "mgmtHttpsPort": 10443,
              "netscalerUrl": "http://127.0.0.1"
            },
            "istioPilot": {
              "SAN": "",
              "insecureGrpcPort": 15010,
              "name": "istiod",
              "namespace": "istio-system",
              "secureGrpcPort": 15012
            },
            "sidecarCertsGenerator": {
              "image": "quay.io/citrix/cpx-sidecar-injector-certgen@sha256:7a4cc4a981e703c508361aad75fa3b9df9e562890f4e1c0dfd9973c00e97abfb",
              "imagePullPolicy": "IfNotPresent"
            },
            "sidecarWebHook": {
              "imagePullPolicy": "IfNotPresent",
              "webhookImage": "quay.io/citrix/cpx-istio-sidecar-injector@sha256:c40909e434f633ce89e8d0c4df08ed0662833369b6d4b5272dfbc8f4c281b1ac"
            },
            "webhook": {
              "injectionLabelName": "cpx-injection"
            },
            "xDSAdaptor": {
              "image": "quay.io/citrix/citrix-xds-adaptor@sha256:b5b5ab8435d65dcbe4348c0f1b4b69fef8fcc8a27e67927821ff4b4f0b8594f6",
              "imagePullPolicy": "IfNotPresent",
              "jsonLog": false,
              "logLevel": "DEBUG",
              "proxyType": "sidecar",
              "secureConnect": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/istiosidecarcitrix-bundle@sha256:aa46e5305cf61454f4bec9134d8146449e84173ed580612ede9e1777097a780a",
      "bundle_path_digest": "sha256:aa46e5305cf61454f4bec9134d8146449e84173ed580612ede9e1777097a780a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:16:34.131000+00:00",
      "csv_description": "In Istio service mesh, a sidecar proxy runs alongside application pods and it intercepts and manages incoming and outgoing traffic for applications. Citrix ADC CPX can be deployed as the sidecar proxy in application pods. A sidecar proxy applies the configured routing policies or rules to the ingress and egress traffic from the pod.",
      "csv_display_name": "Citrix ADC CPX Istio Sidecar Injector Operator",
      "csv_metadata_description": "In Istio service mesh, a sidecar proxy runs alongside application pods and it intercepts and manages incoming and outgoing traffic for applications. Citrix ADC CPX can be deployed as the sidecar proxy in application pods. A sidecar proxy applies the configured routing policies or rules to the ingress and egress traffic from the pod.",
      "csv_name": "citrix-cpx-istio-sidecar-injector-operator.v0.9.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:44:11.772000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "citrix-cpx-istio-sidecar-injector-operator",
      "provided_apis": [
        {
          "group": "citrix.citrix.com",
          "kind": "Citrix-cpx-istio-sidecar-injector",
          "plural": "citrix-cpx-istio-sidecar-injectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ba07565418d5e88d9c1f59bc603c32e642f7ca37521097729b054b65636ca899",
          "image": "registry.connect.redhat.com/citrix/citrix-cpx-istio-sidecar-injector@sha256:ba07565418d5e88d9c1f59bc603c32e642f7ca37521097729b054b65636ca899",
          "name": "citrix-cpx-istio-sidecar-injector-ba07565418d5e88d9c1f59bc603c32e642f7ca37521097729b054b65636ca899-annotation"
        },
        {
          "digest": "sha256:9211b70edbb93d718428e1c9a992e5fc74a20cb213f8a0592ffe340c362890fe",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:9211b70edbb93d718428e1c9a992e5fc74a20cb213f8a0592ffe340c362890fe",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:ba07565418d5e88d9c1f59bc603c32e642f7ca37521097729b054b65636ca899",
          "image": "registry.connect.redhat.com/citrix/citrix-cpx-istio-sidecar-injector@sha256:ba07565418d5e88d9c1f59bc603c32e642f7ca37521097729b054b65636ca899",
          "name": "manager"
        },
        {
          "digest": "sha256:b5b5ab8435d65dcbe4348c0f1b4b69fef8fcc8a27e67927821ff4b4f0b8594f6",
          "image": "quay.io/citrix/citrix-xds-adaptor@sha256:b5b5ab8435d65dcbe4348c0f1b4b69fef8fcc8a27e67927821ff4b4f0b8594f6",
          "name": "citrix-xds-adaptor-b5b5ab8435d65dcbe4348c0f1b4b69fef8fcc8a27e67927821ff4b4f0b8594f6-annotation"
        },
        {
          "digest": "sha256:c40909e434f633ce89e8d0c4df08ed0662833369b6d4b5272dfbc8f4c281b1ac",
          "image": "quay.io/citrix/cpx-istio-sidecar-injector@sha256:c40909e434f633ce89e8d0c4df08ed0662833369b6d4b5272dfbc8f4c281b1ac",
          "name": "cpx-istio-sidecar-injector-c40909e434f633ce89e8d0c4df08ed0662833369b6d4b5272dfbc8f4c281b1ac-annotation"
        },
        {
          "digest": "sha256:7a4cc4a981e703c508361aad75fa3b9df9e562890f4e1c0dfd9973c00e97abfb",
          "image": "quay.io/citrix/cpx-sidecar-injector-certgen@sha256:7a4cc4a981e703c508361aad75fa3b9df9e562890f4e1c0dfd9973c00e97abfb",
          "name": "cpx-sidecar-injector-certgen-7a4cc4a981e703c508361aad75fa3b9df9e562890f4e1c0dfd9973c00e97abfb-annotation"
        },
        {
          "digest": "sha256:8f28c8af17909f0c0ced2109701755be1edea22b2a80f00aa37da70168abe1dc",
          "image": "quay.io/citrix/citrix-k8s-cpx-ingress@sha256:8f28c8af17909f0c0ced2109701755be1edea22b2a80f00aa37da70168abe1dc",
          "name": "citrix-k8s-cpx-ingress-8f28c8af17909f0c0ced2109701755be1edea22b2a80f00aa37da70168abe1dc-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.9.9",
      "version_original": "0.9.9"
    },
    {
      "_id": "61a57b82c17162a20c1c6882",
      "alm_examples": [
        {
          "api_version": "citrix.com/v1alpha1",
          "kind": "CitrixCpxWithIngressController",
          "metadata": {
            "name": "cpx-cic"
          },
          "spec": {
            "ADMSettings": {
              "ADMIP": "",
              "bandWidth": "",
              "bandWidthLicense": false,
              "cpxCores": "",
              "licenseServerIP": "",
              "licenseServerPort": 27000,
              "loginSecret": "",
              "vCPULicense": false
            },
            "bgpSettings": {
              "bgpConfig": [
                {
                  "bgpRouter": {
                    "localAS": 100,
                    "neighbor": [
                      {
                        "ASOriginationInterval": 10,
                        "address": "",
                        "advertisementInterval": 10,
                        "remoteAS": 100
                      }
                    ]
                  }
                }
              ],
              "required": false
            },
            "cic": {
              "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:91e7f337aab58db503e218ba3ac6b9f73173772314f57fc234ea340576426821",
              "pullPolicy": "Always",
              "required": true
            },
            "coeConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 5563
              },
              "transactions": {
                "enable": false,
                "port": 5557
              }
            },
            "cpxBgpRouter": false,
            "crds": {
              "install": false,
              "retainOnDelete": false
            },
            "defaultSSLCertSecret": "",
            "entityPrefix": "",
            "exporter": {
              "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:6ce388d8f6324713b2db96385311d1e7a06c41dc54353c4ed81e6cf3dfdfb4b8",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "Always",
              "required": false
            },
            "image": "quay.io/citrix/citrix-k8s-cpx-ingress@sha256:8f28c8af17909f0c0ced2109701755be1edea22b2a80f00aa37da70168abe1dc",
            "imagePullSecrets": [],
            "ingressClass": [],
            "ingressIP": "",
            "ipam": false,
            "kubernetesURL": "",
            "license": {
              "accept": "no"
            },
            "logLevel": "INFO",
            "logProxy": "",
            "mgmtHttpPort": 9080,
            "mgmtHttpsPort": 9443,
            "namespaceLabels": "",
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nsCookieVersion": "0",
            "nsGateway": "192.168.1.1",
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "192.168.1.2",
            "nsProtocol": "http",
            "openshift": true,
            "pullPolicy": "Always",
            "routeLabels": "",
            "serviceAccount": {
              "create": true
            },
            "serviceAnnotations": {},
            "servicePorts": [],
            "serviceSpec": {
              "loadBalancerSourceRanges": []
            },
            "serviceType": {
              "loadBalancer": {
                "enabled": false,
                "externalTrafficPolicy": "Local"
              },
              "nodePort": {
                "enabled": false,
                "httpPort": "",
                "httpsPort": ""
              }
            },
            "setAsDefaultIngressClass": false,
            "sslCertManagedByAWS": false,
            "tolerations": [],
            "updateIngressStatus": false
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-bundle@sha256:cb78fbaa6e154066b70b1e36731fc268bd61b514493f1541f630fff7f7e16d59",
      "bundle_path_digest": "sha256:cb78fbaa6e154066b70b1e36731fc268bd61b514493f1541f630fff7f7e16d59",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:16:50.131000+00:00",
      "csv_description": "Citrix ADC CPX is a container-based application delivery controller that can be provisioned on a Docker host. Citrix ADC CPX enables customers to leverage Docker engine capabilities and use NetScaler load balancing and traffic management features for container-based applications. Citrix Ingress Controller which will be running in side-car mode with Citrix ADC CPX will automatically configures Citrix ADC CPX based on the Ingress resource configuration. This operator can be used deploy Citrix ADC CPX with Citrix ingress controller in an OpenShift environment.",
      "csv_display_name": "Citrix ADC CPX with Ingress Controller",
      "csv_metadata_description": "Citrix ADC CPX is a container-based application delivery controller that can be provisioned on a Docker host. Citrix ADC CPX enables customers to leverage Docker engine capabilities and use NetScaler load balancing and traffic management features for container-based applications. Citrix Ingress Controller which will be running in side-car mode with Citrix ADC CPX will automatically configures Citrix ADC CPX based on the Ingress resource configuration. This operator can be used deploy Citrix ADC CPX with Citrix ingress controller in an Openshift environment.",
      "csv_name": "citrix-cpx-with-ingress-controller-operator.v1.18.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:44:18+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "citrix-cpx-with-ingress-controller-operator",
      "provided_apis": [
        {
          "group": "citrix.com",
          "kind": "CitrixCpxWithIngressController",
          "plural": "citrixcpxwithingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:92677d3e130f52490b52729a192b61ea5a03bd8eefd29f4ffe0222abfe2f9a1d",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-controller@sha256:92677d3e130f52490b52729a192b61ea5a03bd8eefd29f4ffe0222abfe2f9a1d",
          "name": "citrix-k8s-cpx-ingress-controller-92677d3e130f52490b52729a192b61ea5a03bd8eefd29f4ffe0222abfe2f9a1d-annotation"
        },
        {
          "digest": "sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:92677d3e130f52490b52729a192b61ea5a03bd8eefd29f4ffe0222abfe2f9a1d",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-controller@sha256:92677d3e130f52490b52729a192b61ea5a03bd8eefd29f4ffe0222abfe2f9a1d",
          "name": "manager"
        },
        {
          "digest": "sha256:8f28c8af17909f0c0ced2109701755be1edea22b2a80f00aa37da70168abe1dc",
          "image": "quay.io/citrix/citrix-k8s-cpx-ingress@sha256:8f28c8af17909f0c0ced2109701755be1edea22b2a80f00aa37da70168abe1dc",
          "name": "cpx"
        },
        {
          "digest": "sha256:91e7f337aab58db503e218ba3ac6b9f73173772314f57fc234ea340576426821",
          "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:91e7f337aab58db503e218ba3ac6b9f73173772314f57fc234ea340576426821",
          "name": "cic"
        },
        {
          "digest": "sha256:6ce388d8f6324713b2db96385311d1e7a06c41dc54353c4ed81e6cf3dfdfb4b8",
          "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:6ce388d8f6324713b2db96385311d1e7a06c41dc54353c4ed81e6cf3dfdfb4b8",
          "name": "exporter"
        },
        {
          "digest": "sha256:8f28c8af17909f0c0ced2109701755be1edea22b2a80f00aa37da70168abe1dc",
          "image": "quay.io/citrix/citrix-k8s-cpx-ingress@sha256:8f28c8af17909f0c0ced2109701755be1edea22b2a80f00aa37da70168abe1dc",
          "name": "citrix-k8s-cpx-ingress-8f28c8af17909f0c0ced2109701755be1edea22b2a80f00aa37da70168abe1dc-annotation"
        },
        {
          "digest": "sha256:6ce388d8f6324713b2db96385311d1e7a06c41dc54353c4ed81e6cf3dfdfb4b8",
          "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:6ce388d8f6324713b2db96385311d1e7a06c41dc54353c4ed81e6cf3dfdfb4b8",
          "name": "citrix-adc-metrics-exporter-6ce388d8f6324713b2db96385311d1e7a06c41dc54353c4ed81e6cf3dfdfb4b8-annotation"
        },
        {
          "digest": "sha256:91e7f337aab58db503e218ba3ac6b9f73173772314f57fc234ea340576426821",
          "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:91e7f337aab58db503e218ba3ac6b9f73173772314f57fc234ea340576426821",
          "name": "citrix-ingress-controller-91e7f337aab58db503e218ba3ac6b9f73173772314f57fc234ea340576426821-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.18.5",
      "version_original": "1.18.5"
    },
    {
      "_id": "61a57b8a27e166330707d961",
      "alm_examples": [
        {
          "api_version": "citrix.com/v1alpha1",
          "kind": "CitrixIngressController",
          "metadata": {
            "name": "cic"
          },
          "spec": {
            "adcCredentialSecret": "",
            "clusterName": "",
            "cncPbr": false,
            "coeConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 30002
              },
              "transactions": {
                "enable": false,
                "port": 30001
              }
            },
            "crds": {
              "install": false,
              "retainOnDelete": false
            },
            "defaultSSLCertSecret": "",
            "entityPrefix": "",
            "exporter": {
              "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:6ce388d8f6324713b2db96385311d1e7a06c41dc54353c4ed81e6cf3dfdfb4b8",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "Always",
              "required": false
            },
            "ignoreNodeExternalIP": false,
            "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:91e7f337aab58db503e218ba3ac6b9f73173772314f57fc234ea340576426821",
            "imagePullSecrets": [],
            "ingressClass": [],
            "ipam": false,
            "kubernetesURL": "",
            "license": {
              "accept": "no"
            },
            "logLevel": "INFO",
            "logProxy": "",
            "namespaceLabels": "",
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nodeWatch": false,
            "nsCookieVersion": "0",
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "x.x.x.x",
            "nsPort": 443,
            "nsProtocol": "HTTPS",
            "nsSNIPS": "",
            "nsVIP": "",
            "openshift": true,
            "podIPsforServiceGroupMembers": false,
            "pullPolicy": "Always",
            "routeLabels": "",
            "serviceAccount": {
              "create": true
            },
            "serviceClass": [],
            "setAsDefaultIngressClass": false,
            "tolerations": [],
            "updateIngressStatus": false
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-bundle@sha256:6f413e337185bf1d3d918d1286d8b2e698c9b05eb43f2a93016376a52ed8b9a2",
      "bundle_path_digest": "sha256:6f413e337185bf1d3d918d1286d8b2e698c9b05eb43f2a93016376a52ed8b9a2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:16:58.443000+00:00",
      "csv_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an OpenShift environment.",
      "csv_display_name": "Citrix Ingress Controller",
      "csv_metadata_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an Openshift environment.",
      "csv_name": "citrix-ingress-controller-operator.v1.18.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:44:23.686000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "citrix-ingress-controller-operator",
      "provided_apis": [
        {
          "group": "citrix.com",
          "kind": "CitrixIngressController",
          "plural": "citrixingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:2f6aaffb61cf9d29f89e63bf8b1111adab4527165beddfff5c618fba8ecfa10e",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:2f6aaffb61cf9d29f89e63bf8b1111adab4527165beddfff5c618fba8ecfa10e",
          "name": "citrix-k8s-ingress-controller-2f6aaffb61cf9d29f89e63bf8b1111adab4527165beddfff5c618fba8ecfa10e-annotation"
        },
        {
          "digest": "sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:2f6aaffb61cf9d29f89e63bf8b1111adab4527165beddfff5c618fba8ecfa10e",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:2f6aaffb61cf9d29f89e63bf8b1111adab4527165beddfff5c618fba8ecfa10e",
          "name": "manager"
        },
        {
          "digest": "sha256:91e7f337aab58db503e218ba3ac6b9f73173772314f57fc234ea340576426821",
          "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:91e7f337aab58db503e218ba3ac6b9f73173772314f57fc234ea340576426821",
          "name": "cic"
        },
        {
          "digest": "sha256:6ce388d8f6324713b2db96385311d1e7a06c41dc54353c4ed81e6cf3dfdfb4b8",
          "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:6ce388d8f6324713b2db96385311d1e7a06c41dc54353c4ed81e6cf3dfdfb4b8",
          "name": "exporter"
        },
        {
          "digest": "sha256:91e7f337aab58db503e218ba3ac6b9f73173772314f57fc234ea340576426821",
          "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:91e7f337aab58db503e218ba3ac6b9f73173772314f57fc234ea340576426821",
          "name": "citrix-ingress-controller-91e7f337aab58db503e218ba3ac6b9f73173772314f57fc234ea340576426821-annotation"
        },
        {
          "digest": "sha256:6ce388d8f6324713b2db96385311d1e7a06c41dc54353c4ed81e6cf3dfdfb4b8",
          "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:6ce388d8f6324713b2db96385311d1e7a06c41dc54353c4ed81e6cf3dfdfb4b8",
          "name": "citrix-adc-metrics-exporter-6ce388d8f6324713b2db96385311d1e7a06c41dc54353c4ed81e6cf3dfdfb4b8-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.18.5",
      "version_original": "1.18.5"
    },
    {
      "_id": "61a57b933e9240fca360f551",
      "alm_examples": [
        {
          "api_version": "charts.cloudbees.com/v1alpha1",
          "kind": "CloudBeesCI",
          "metadata": {
            "name": "cloudbeesci-sample"
          },
          "spec": {
            "Agents": {
              "Enabled": true,
              "Image": {
                "dockerImage": "cloudbees/cloudbees-core-agent:2.289.3.2"
              },
              "SeparateNamespace": {
                "Create": false,
                "Enabled": false
              }
            },
            "Hibernation": {
              "Enabled": false,
              "Image": {
                "dockerImage": "cloudbees/managed-master-hibernation-monitor:247.c5dfce00a179"
              },
              "NodeSelector": {},
              "Tolerations": []
            },
            "Master": {
              "Enabled": true,
              "Image": {
                "dockerImage": "cloudbees/cloudbees-core-mm:2.289.3.2"
              }
            },
            "NetworkPolicy": {
              "Enabled": false,
              "JMXSelectors": [],
              "ingressControllerSelector": []
            },
            "OperationsCenter": {
              "AgentListenerPort": 50000,
              "Annotations": {},
              "CSRF": {
                "ProxyCompatibility": false
              },
              "CasC": {
                "ConfigMapName": "oc-casc-bundle",
                "Enabled": false
              },
              "ContainerPort": 8080,
              "Enabled": true,
              "ExtraConfigMaps": [],
              "ExtraContainers": [],
              "ExtraGroovyConfiguration": {},
              "ExtraVolumeMounts": [],
              "ExtraVolumes": [],
              "HealthProbeLivenessFailureThreshold": 12,
              "HealthProbes": true,
              "Image": {
                "dockerImage": "cloudbees/cloudbees-cloud-core-oc:2.289.3.2"
              },
              "Ingress": {
                "Annotations": {
                  "kubernetes.io/tls-acme": "false"
                },
                "Class": "nginx",
                "tls": {
                  "Enable": false
                }
              },
              "LoadBalancerSourceRanges": [
                "0.0.0.0/0"
              ],
              "Name": "cjoc",
              "NodeSelector": {},
              "Platform": "standard",
              "Protocol": "http",
              "Resources": {
                "Limits": {
                  "Cpu": 1,
                  "Memory": "2G"
                },
                "Requests": {
                  "Cpu": 1,
                  "Memory": "2G"
                }
              },
              "Route": {
                "tls": {
                  "Enable": false,
                  "InsecureEdgeTerminationPolicy": "Redirect",
                  "Termination": "edge"
                }
              },
              "ServiceAgentListenerPort": 50000,
              "ServiceAnnotations": {},
              "ServicePort": 80,
              "ServiceType": "ClusterIP",
              "Tolerations": []
            },
            "Persistence": {
              "AccessMode": "ReadWriteOnce",
              "Annotations": {},
              "Size": "20Gi"
            },
            "PodSecurityPolicy": {
              "Annotations": {},
              "Enabled": false
            },
            "Subdomain": false,
            "ingress-nginx": {
              "Enabled": false,
              "controller": {
                "admissionWebhooks": {
                  "patch": {
                    "nodeSelector": {
                      "kubernetes.io/os": "linux"
                    }
                  }
                },
                "ingressClass": "nginx",
                "nodeSelector": {
                  "kubernetes.io/os": "linux"
                },
                "service": {
                  "externalTrafficPolicy": "Local"
                }
              },
              "defaultBackend": {
                "nodeSelector": {
                  "kubernetes.io/os": "linux"
                }
              }
            },
            "nginx-ingress": {
              "Enabled": false,
              "controller": {
                "ingressClass": "nginx",
                "nodeSelector": {
                  "kubernetes.io/os": "linux"
                },
                "service": {
                  "externalTrafficPolicy": "Local"
                }
              },
              "defaultBackend": {
                "nodeSelector": {
                  "kubernetes.io/os": "linux"
                }
              }
            },
            "rbac": {
              "agentsServiceAccountName": "jenkins-agents",
              "hibernationMonitorServiceAccountName": "managed-master-hibernation-monitor",
              "install": true,
              "masterServiceAccountName": "jenkins",
              "serviceAccountName": "cjoc"
            },
            "sidecarinjector": {
              "Enabled": false
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cloudbees/cloudbees-core-modern@sha256:2cf058c819b40512094f84f4d374457455370ec4994d34cee6e39b9d87841f05",
      "bundle_path_digest": "sha256:2cf058c819b40512094f84f4d374457455370ec4994d34cee6e39b9d87841f05",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:17:07.414000+00:00",
      "csv_description": "CloudBees CI",
      "csv_display_name": "CloudBees CI",
      "csv_metadata_description": "",
      "csv_name": "cloudbees-ci.v3.34.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:44:34.718000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "cloudbees-ci",
      "provided_apis": [
        {
          "group": "charts.cloudbees.com",
          "kind": "CloudBeesCI",
          "plural": "cloudbeescis",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:bd0bd72e9e7807b0fa307de8a93a56967221fe2dd181bac02383f0f9be9120e4",
          "image": "registry.connect.redhat.com/cloudbees/cloudbees-ci-operator@sha256:bd0bd72e9e7807b0fa307de8a93a56967221fe2dd181bac02383f0f9be9120e4",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "3.34.1",
      "version_original": "3.34.1"
    },
    {
      "_id": "61a57b9bbfd4a5234d5960d1",
      "alm_examples": [
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCluster",
          "metadata": {
            "name": "cb-example"
          },
          "spec": {
            "backup": {
              "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              },
              "serviceAccountName": "couchbase-backup"
            },
            "buckets": {
              "managed": true,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            },
            "cluster": {
              "analyticsServiceMemoryQuota": "1Gi",
              "autoCompaction": {
                "databaseFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                },
                "parallelCompaction": false,
                "timeWindow": {
                  "abortCompactionOutsideWindow": true,
                  "end": "06:00",
                  "start": "02:00"
                },
                "tombstonePurgeInterval": "72h",
                "viewFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                }
              },
              "autoFailoverMaxCount": 3,
              "autoFailoverOnDataDiskIssues": true,
              "autoFailoverOnDataDiskIssuesTimePeriod": "120s",
              "autoFailoverServerGroup": false,
              "autoFailoverTimeout": "120s",
              "clusterName": "cb-example",
              "dataServiceMemoryQuota": "256Mi",
              "eventingServiceMemoryQuota": "256Mi",
              "indexServiceMemoryQuota": "256Mi",
              "indexStorageSetting": "memory_optimized",
              "searchServiceMemoryQuota": "256Mi"
            },
            "enablePreviewScaling": false,
            "hibernate": false,
            "hibernationStrategy": "Immediate",
            "image": "registry.connect.redhat.com/couchbase/server@sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
            "logRetentionCount": 20,
            "logRetentionTime": "604800s",
            "monitoring": {
              "prometheus": {
                "enabled": false,
                "image": "registry.connect.redhat.com/couchbase/exporter@sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df"
              }
            },
            "networking": {
              "adminConsoleServiceType": "NodePort",
              "adminConsoleServices": [
                "data"
              ],
              "exposeAdminConsole": true,
              "exposedFeatureServiceType": "NodePort",
              "exposedFeatures": [
                "xdcr"
              ]
            },
            "recoveryPolicy": "PrioritizeDataIntegrity",
            "security": {
              "adminSecret": "cb-example-auth",
              "rbac": {
                "managed": true,
                "selector": {
                  "matchLabels": {
                    "cluster": "cb-example"
                  }
                }
              }
            },
            "servers": [
              {
                "name": "all_services",
                "services": [
                  "data",
                  "index",
                  "query",
                  "search",
                  "eventing",
                  "analytics"
                ],
                "size": 3
              }
            ],
            "upgradeStrategy": "RollingUpgrade",
            "xdcr": {
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "default"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "enableIndexReplica": true,
            "evictionPolicy": "valueOnly",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseEphemeralBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "ephemeral-bucket"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "evictionPolicy": "noEviction",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseMemcachedBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "memcached-bucket"
          },
          "spec": {
            "enableFlush": false,
            "memoryQuota": "100Mi"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseUser",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-user"
          },
          "spec": {
            "authDomain": "local",
            "authSecret": "cb-example-auth",
            "fullName": "My User"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseGroup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-group"
          },
          "spec": {
            "roles": [
              {
                "bucket": "default",
                "name": "bucket_admin"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseRoleBinding",
          "metadata": {
            "name": "my-role-binding"
          },
          "spec": {
            "roleRef": {
              "kind": "CouchbaseGroup",
              "name": "my-group"
            },
            "subjects": [
              {
                "kind": "CouchbaseUser",
                "name": "my-user"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseReplication",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-replication"
          },
          "spec": {
            "bucket": "default",
            "compressionType": "Snappy",
            "filterExpression": "",
            "paused": false,
            "remoteBucket": "default"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-backup"
          },
          "spec": {
            "backOffLimit": 2,
            "backupRetention": "24h",
            "failedJobsHistoryLimit": 3,
            "full": {
              "schedule": "0 3 * * 6"
            },
            "incremental": {
              "schedule": "0 3 * * 1-6"
            },
            "logRetention": "24h",
            "size": "5Gi",
            "strategy": "full_incremental",
            "successfulJobsHistoryLimit": 1
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackupRestore",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-restore"
          },
          "spec": {
            "backOffLimit": 2,
            "backup": "cb-backup",
            "end": {
              "int": 1
            },
            "logRetention": "24h",
            "repo": "cb-example-2020-10-29T19_00_03",
            "start": {
              "int": 1
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseAutoscaler",
          "metadata": {
            "name": "do.not.create.internal.only"
          },
          "spec": {
            "servers": "internal",
            "size": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:78656ed0df41696e67429609e3262ec31f5ca9f5ca946300e6a4a6503c1bbd18",
      "bundle_path_digest": "sha256:78656ed0df41696e67429609e3262ec31f5ca9f5ca946300e6a4a6503c1bbd18",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:17:15.908000+00:00",
      "csv_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments on OpenShift. By installing this integration you will be able to deply Couchbase Server clusters with a single command.\n\n## Supported Features\n\n* **Automated cluster provisioning** - Deploying a Couchbase Cluster has never been easier. Fill out a Couchbase specific configuration and let the Couchbase Operator take care of provisioning nodes and setting up cluster to your exact specification.\n\n* **On-demand scalability** - Automatically scale your cluster up or down by changing a simple configuration parameter and let the Couchbase Operator handle provisioning of new nodes and joining them into the cluster.\n\n* **Auto-recovery** - Detect Couchbase node failures, rebalance out bad nodes, and bring the cluster back up to the desired capacity. Auto-recovery is completely automated so you can sleep easy through the night knowing that the Couchbase Operator will handle any failures.\n\n* **Geo-distribution** - Replicate your data between datacenters to move data closer to the users who consume it and protect against disaster scenarios where an entire datacenter becomes unavailable.\n\n* **Persistent storage** - Define persistent network-attached storage for each node in your cluster to allow pods to be recovered even if the node they were running on is no longer available.\n\n* **Rack/zone awareness** - Tell the Couchbase Operator about availability zones in your datacenter and let the operator take care of ensuring that nodes in your cluster are deployed equally across each zone.\n\n* **Supportability** - When things go wrong, use the cbopinfo tool provided with the Couchbase Operator to collect relevant data about your Couchbase deployment so that you can quickly address issues.\n\n* **Centralized configuration management** - Manage your configuration centrally with OpenShift. Updates to the configuration are watched by the Couchbase Operator and actions are taken to make the target cluster match the desired configuration.\n## Required Parameters\n* `authSecret` - provide the name of a secret that contains two keys for the `username` and `password` of the super user ([documentation](https://docs.couchbase.com/operator/1.2/couchbase-cluster-config.html))\n\n## About Couchbase Server\n\nBuilt on the most powerful NoSQL technology, Couchbase Server delivers unparalleled performance at scale, in any cloud. With features like memory-first architecture, geo-distributed deployments, and workload isolation, Couchbase Server excels at supporting mission-critical applications at scale while maintaining submillisecond latencies and 99.999% availability. Plus, with the most comprehensive SQL-compatible query language (N1QL), migrating from RDBMS to Couchbase Server is easy with ANSI joins.\n",
      "csv_display_name": "Couchbase Operator",
      "csv_metadata_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments",
      "csv_name": "couchbase-operator.v2.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:44:41.277000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseAutoscaler",
          "plural": "couchbaseautoscalers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "version": "v1"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "version": "v2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:87f601a4fd68ba8a5fed9a610dc03661addc9db9b4e332bfc4907d754d91c496",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:87f601a4fd68ba8a5fed9a610dc03661addc9db9b4e332bfc4907d754d91c496",
          "name": "operator-87f601a4fd68ba8a5fed9a610dc03661addc9db9b4e332bfc4907d754d91c496-annotation"
        },
        {
          "digest": "sha256:87f601a4fd68ba8a5fed9a610dc03661addc9db9b4e332bfc4907d754d91c496",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:87f601a4fd68ba8a5fed9a610dc03661addc9db9b4e332bfc4907d754d91c496",
          "name": "couchbase-operator"
        },
        {
          "digest": "sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
          "name": "couchbase_server"
        },
        {
          "digest": "sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
          "name": "couchbase_backup"
        },
        {
          "digest": "sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df",
          "name": "couchbase_metrics"
        },
        {
          "digest": "sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df",
          "name": "exporter-18015c72d17a33a21ea221d48fddf493848fc1ca5702007f289369c5815fb3df-annotation"
        },
        {
          "digest": "sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78",
          "name": "operator-backup-3d0a9de740110b924b1ad5e83bb1e36b308f1b53f9e76a50cffcbeda9d34ea78-annotation"
        },
        {
          "digest": "sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e",
          "name": "server-fd6d9c0ef033009e76d60dc36f55ce7f3aaa942a7be9c2b66c335eabc8f5b11e-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.1.0",
      "version_original": "2.1.0"
    },
    {
      "_id": "61a57ba4c17162a20c1c6883",
      "alm_examples": [
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCluster",
          "metadata": {
            "name": "cb-example"
          },
          "spec": {
            "backup": {
              "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              },
              "serviceAccountName": "couchbase-backup"
            },
            "buckets": {
              "managed": true,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            },
            "cluster": {
              "analyticsServiceMemoryQuota": "1Gi",
              "autoCompaction": {
                "databaseFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                },
                "parallelCompaction": false,
                "timeWindow": {
                  "abortCompactionOutsideWindow": true,
                  "end": "06:00",
                  "start": "02:00"
                },
                "tombstonePurgeInterval": "72h",
                "viewFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                }
              },
              "autoFailoverMaxCount": 3,
              "autoFailoverOnDataDiskIssues": true,
              "autoFailoverOnDataDiskIssuesTimePeriod": "120s",
              "autoFailoverServerGroup": false,
              "autoFailoverTimeout": "120s",
              "clusterName": "cb-example",
              "dataServiceMemoryQuota": "256Mi",
              "eventingServiceMemoryQuota": "256Mi",
              "indexServiceMemoryQuota": "256Mi",
              "indexStorageSetting": "memory_optimized",
              "searchServiceMemoryQuota": "256Mi"
            },
            "enablePreviewScaling": false,
            "hibernate": false,
            "hibernationStrategy": "Immediate",
            "image": "registry.connect.redhat.com/couchbase/server@sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
            "logRetentionCount": 20,
            "logRetentionTime": "604800s",
            "monitoring": {
              "prometheus": {
                "enabled": false,
                "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784"
              }
            },
            "networking": {
              "adminConsoleServiceType": "NodePort",
              "adminConsoleServices": [
                "data"
              ],
              "exposeAdminConsole": true,
              "exposedFeatureServiceType": "NodePort",
              "exposedFeatures": [
                "xdcr"
              ]
            },
            "recoveryPolicy": "PrioritizeDataIntegrity",
            "security": {
              "adminSecret": "cb-example-auth",
              "rbac": {
                "managed": true,
                "selector": {
                  "matchLabels": {
                    "cluster": "cb-example"
                  }
                }
              }
            },
            "servers": [
              {
                "name": "all_services",
                "services": [
                  "data",
                  "index",
                  "query",
                  "search",
                  "eventing",
                  "analytics"
                ],
                "size": 3
              }
            ],
            "upgradeStrategy": "RollingUpgrade",
            "xdcr": {
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "default"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "enableIndexReplica": true,
            "evictionPolicy": "valueOnly",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseEphemeralBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "ephemeral-bucket"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "evictionPolicy": "noEviction",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseMemcachedBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "memcached-bucket"
          },
          "spec": {
            "enableFlush": false,
            "memoryQuota": "100Mi"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseUser",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-user"
          },
          "spec": {
            "authDomain": "local",
            "authSecret": "cb-example-auth",
            "fullName": "My User"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseGroup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-group"
          },
          "spec": {
            "roles": [
              {
                "bucket": "default",
                "name": "bucket_admin"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseRoleBinding",
          "metadata": {
            "name": "my-role-binding"
          },
          "spec": {
            "roleRef": {
              "kind": "CouchbaseGroup",
              "name": "my-group"
            },
            "subjects": [
              {
                "kind": "CouchbaseUser",
                "name": "my-user"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseReplication",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-replication"
          },
          "spec": {
            "bucket": "default",
            "compressionType": "Snappy",
            "filterExpression": "",
            "paused": false,
            "remoteBucket": "default"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-backup"
          },
          "spec": {
            "backOffLimit": 2,
            "backupRetention": "24h",
            "failedJobsHistoryLimit": 3,
            "full": {
              "schedule": "0 3 * * 6"
            },
            "incremental": {
              "schedule": "0 3 * * 1-6"
            },
            "logRetention": "24h",
            "size": "5Gi",
            "strategy": "full_incremental",
            "successfulJobsHistoryLimit": 1
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackupRestore",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-restore"
          },
          "spec": {
            "backOffLimit": 2,
            "backup": "cb-backup",
            "end": {
              "int": 1
            },
            "logRetention": "24h",
            "repo": "cb-example-2020-10-29T19_00_03",
            "start": {
              "int": 1
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseAutoscaler",
          "metadata": {
            "name": "do.not.create.internal.only"
          },
          "spec": {
            "servers": "internal",
            "size": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:69c9d29a8a5ba4eac037051a256a458d5772fca8b813c764ddbe02f80d89b76f",
      "bundle_path_digest": "sha256:69c9d29a8a5ba4eac037051a256a458d5772fca8b813c764ddbe02f80d89b76f",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:17:24.994000+00:00",
      "csv_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments on OpenShift. By installing this integration you will be able to deply Couchbase Server clusters with a single command.\n\n## Supported Features\n\n* **Automated cluster provisioning** - Deploying a Couchbase Cluster has never been easier. Fill out a Couchbase specific configuration and let the Couchbase Operator take care of provisioning nodes and setting up cluster to your exact specification.\n\n* **On-demand scalability** - Automatically scale your cluster up or down by changing a simple configuration parameter and let the Couchbase Operator handle provisioning of new nodes and joining them into the cluster.\n\n* **Auto-recovery** - Detect Couchbase node failures, rebalance out bad nodes, and bring the cluster back up to the desired capacity. Auto-recovery is completely automated so you can sleep easy through the night knowing that the Couchbase Operator will handle any failures.\n\n* **Geo-distribution** - Replicate your data between datacenters to move data closer to the users who consume it and protect against disaster scenarios where an entire datacenter becomes unavailable.\n\n* **Persistent storage** - Define persistent network-attached storage for each node in your cluster to allow pods to be recovered even if the node they were running on is no longer available.\n\n* **Rack/zone awareness** - Tell the Couchbase Operator about availability zones in your datacenter and let the operator take care of ensuring that nodes in your cluster are deployed equally across each zone.\n\n* **Supportability** - When things go wrong, use the cbopinfo tool provided with the Couchbase Operator to collect relevant data about your Couchbase deployment so that you can quickly address issues.\n\n* **Centralized configuration management** - Manage your configuration centrally with OpenShift. Updates to the configuration are watched by the Couchbase Operator and actions are taken to make the target cluster match the desired configuration.\n## Required Parameters\n* `authSecret` - provide the name of a secret that contains two keys for the `username` and `password` of the super user ([documentation](https://docs.couchbase.com/operator/1.2/couchbase-cluster-config.html))\n\n## About Couchbase Server\n\nBuilt on the most powerful NoSQL technology, Couchbase Server delivers unparalleled performance at scale, in any cloud. With features like memory-first architecture, geo-distributed deployments, and workload isolation, Couchbase Server excels at supporting mission-critical applications at scale while maintaining submillisecond latencies and 99.999% availability. Plus, with the most comprehensive SQL-compatible query language (N1QL), migrating from RDBMS to Couchbase Server is easy with ANSI joins.\n",
      "csv_display_name": "Couchbase Operator",
      "csv_metadata_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments",
      "csv_name": "couchbase-operator.v2.2.0-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:44:46.970000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseAutoscaler",
          "plural": "couchbaseautoscalers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "version": "v2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:59c872ac4b19b5086a47ce95675f11df2925aa0c5d3dc0afda8df4599a8b0649",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:59c872ac4b19b5086a47ce95675f11df2925aa0c5d3dc0afda8df4599a8b0649",
          "name": "operator-59c872ac4b19b5086a47ce95675f11df2925aa0c5d3dc0afda8df4599a8b0649-annotation"
        },
        {
          "digest": "sha256:59c872ac4b19b5086a47ce95675f11df2925aa0c5d3dc0afda8df4599a8b0649",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:59c872ac4b19b5086a47ce95675f11df2925aa0c5d3dc0afda8df4599a8b0649",
          "name": "couchbase-operator"
        },
        {
          "digest": "sha256:187046a848f32233e7e92705c57fa864b1d373c2078a92b51c9706bec6e372e5",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:187046a848f32233e7e92705c57fa864b1d373c2078a92b51c9706bec6e372e5",
          "name": "couchbase_server"
        },
        {
          "digest": "sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "name": "couchbase_backup"
        },
        {
          "digest": "sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "name": "couchbase_metrics"
        },
        {
          "digest": "sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "name": "exporter-b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784-annotation"
        },
        {
          "digest": "sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "name": "operator-backup-c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76-annotation"
        },
        {
          "digest": "sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
          "name": "server-c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.2.0-1",
      "version_original": "2.2.0-1"
    },
    {
      "_id": "61a57baec17162a20c1c6884",
      "alm_examples": [
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCluster",
          "metadata": {
            "name": "cb-example"
          },
          "spec": {
            "backup": {
              "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              },
              "serviceAccountName": "couchbase-backup"
            },
            "buckets": {
              "managed": true,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            },
            "cluster": {
              "analyticsServiceMemoryQuota": "1Gi",
              "autoCompaction": {
                "databaseFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                },
                "parallelCompaction": false,
                "timeWindow": {
                  "abortCompactionOutsideWindow": true,
                  "end": "06:00",
                  "start": "02:00"
                },
                "tombstonePurgeInterval": "72h",
                "viewFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                }
              },
              "autoFailoverMaxCount": 3,
              "autoFailoverOnDataDiskIssues": true,
              "autoFailoverOnDataDiskIssuesTimePeriod": "120s",
              "autoFailoverServerGroup": false,
              "autoFailoverTimeout": "120s",
              "clusterName": "cb-example",
              "dataServiceMemoryQuota": "256Mi",
              "eventingServiceMemoryQuota": "256Mi",
              "indexServiceMemoryQuota": "256Mi",
              "indexStorageSetting": "memory_optimized",
              "searchServiceMemoryQuota": "256Mi"
            },
            "enablePreviewScaling": false,
            "hibernate": false,
            "hibernationStrategy": "Immediate",
            "image": "registry.connect.redhat.com/couchbase/server@sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
            "logRetentionCount": 20,
            "logRetentionTime": "604800s",
            "monitoring": {
              "prometheus": {
                "enabled": false,
                "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784"
              }
            },
            "networking": {
              "adminConsoleServiceType": "NodePort",
              "adminConsoleServices": [
                "data"
              ],
              "exposeAdminConsole": true,
              "exposedFeatureServiceType": "NodePort",
              "exposedFeatures": [
                "xdcr"
              ]
            },
            "recoveryPolicy": "PrioritizeDataIntegrity",
            "security": {
              "adminSecret": "cb-example-auth",
              "rbac": {
                "managed": true,
                "selector": {
                  "matchLabels": {
                    "cluster": "cb-example"
                  }
                }
              }
            },
            "servers": [
              {
                "name": "all_services",
                "services": [
                  "data",
                  "index",
                  "query",
                  "search",
                  "eventing",
                  "analytics"
                ],
                "size": 3
              }
            ],
            "upgradeStrategy": "RollingUpgrade",
            "xdcr": {
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "default"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "enableIndexReplica": true,
            "evictionPolicy": "valueOnly",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseEphemeralBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "ephemeral-bucket"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "evictionPolicy": "noEviction",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseMemcachedBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "memcached-bucket"
          },
          "spec": {
            "enableFlush": false,
            "memoryQuota": "100Mi"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseUser",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-user"
          },
          "spec": {
            "authDomain": "local",
            "authSecret": "cb-example-auth",
            "fullName": "My User"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseGroup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-group"
          },
          "spec": {
            "roles": [
              {
                "bucket": "default",
                "name": "bucket_admin"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseRoleBinding",
          "metadata": {
            "name": "my-role-binding"
          },
          "spec": {
            "roleRef": {
              "kind": "CouchbaseGroup",
              "name": "my-group"
            },
            "subjects": [
              {
                "kind": "CouchbaseUser",
                "name": "my-user"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseReplication",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-replication"
          },
          "spec": {
            "bucket": "default",
            "compressionType": "Snappy",
            "filterExpression": "",
            "paused": false,
            "remoteBucket": "default"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-backup"
          },
          "spec": {
            "backOffLimit": 2,
            "backupRetention": "24h",
            "failedJobsHistoryLimit": 3,
            "full": {
              "schedule": "0 3 * * 6"
            },
            "incremental": {
              "schedule": "0 3 * * 1-6"
            },
            "logRetention": "24h",
            "size": "5Gi",
            "strategy": "full_incremental",
            "successfulJobsHistoryLimit": 1
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackupRestore",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-restore"
          },
          "spec": {
            "backOffLimit": 2,
            "backup": "cb-backup",
            "end": {
              "int": 1
            },
            "logRetention": "24h",
            "repo": "cb-example-2020-10-29T19_00_03",
            "start": {
              "int": 1
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseAutoscaler",
          "metadata": {
            "name": "do.not.create.internal.only"
          },
          "spec": {
            "servers": "internal",
            "size": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:df774ff23ab5a517a99d2d6565144574a29566ea8120d27803767aaf7f1c3b7c",
      "bundle_path_digest": "sha256:df774ff23ab5a517a99d2d6565144574a29566ea8120d27803767aaf7f1c3b7c",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:17:34.891000+00:00",
      "csv_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments on OpenShift. By installing this integration you will be able to deply Couchbase Server clusters with a single command.\n\n## Supported Features\n\n* **Automated cluster provisioning** - Deploying a Couchbase Cluster has never been easier. Fill out a Couchbase specific configuration and let the Couchbase Operator take care of provisioning nodes and setting up cluster to your exact specification.\n\n* **On-demand scalability** - Automatically scale your cluster up or down by changing a simple configuration parameter and let the Couchbase Operator handle provisioning of new nodes and joining them into the cluster.\n\n* **Auto-recovery** - Detect Couchbase node failures, rebalance out bad nodes, and bring the cluster back up to the desired capacity. Auto-recovery is completely automated so you can sleep easy through the night knowing that the Couchbase Operator will handle any failures.\n\n* **Geo-distribution** - Replicate your data between datacenters to move data closer to the users who consume it and protect against disaster scenarios where an entire datacenter becomes unavailable.\n\n* **Persistent storage** - Define persistent network-attached storage for each node in your cluster to allow pods to be recovered even if the node they were running on is no longer available.\n\n* **Rack/zone awareness** - Tell the Couchbase Operator about availability zones in your datacenter and let the operator take care of ensuring that nodes in your cluster are deployed equally across each zone.\n\n* **Supportability** - When things go wrong, use the cbopinfo tool provided with the Couchbase Operator to collect relevant data about your Couchbase deployment so that you can quickly address issues.\n\n* **Centralized configuration management** - Manage your configuration centrally with OpenShift. Updates to the configuration are watched by the Couchbase Operator and actions are taken to make the target cluster match the desired configuration.\n## Required Parameters\n* `authSecret` - provide the name of a secret that contains two keys for the `username` and `password` of the super user ([documentation](https://docs.couchbase.com/operator/1.2/couchbase-cluster-config.html))\n\n## About Couchbase Server\n\nBuilt on the most powerful NoSQL technology, Couchbase Server delivers unparalleled performance at scale, in any cloud. With features like memory-first architecture, geo-distributed deployments, and workload isolation, Couchbase Server excels at supporting mission-critical applications at scale while maintaining submillisecond latencies and 99.999% availability. Plus, with the most comprehensive SQL-compatible query language (N1QL), migrating from RDBMS to Couchbase Server is easy with ANSI joins.\n",
      "csv_display_name": "Couchbase Operator",
      "csv_metadata_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments",
      "csv_name": "couchbase-operator.v2.2.1-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:44:53.907000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseAutoscaler",
          "plural": "couchbaseautoscalers",
          "version": "v2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "name": "operator-81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f-annotation"
        },
        {
          "digest": "sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "name": "couchbase-operator"
        },
        {
          "digest": "sha256:187046a848f32233e7e92705c57fa864b1d373c2078a92b51c9706bec6e372e5",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:187046a848f32233e7e92705c57fa864b1d373c2078a92b51c9706bec6e372e5",
          "name": "couchbase_server"
        },
        {
          "digest": "sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "name": "couchbase_backup"
        },
        {
          "digest": "sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "name": "couchbase_metrics"
        },
        {
          "digest": "sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "name": "exporter-b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784-annotation"
        },
        {
          "digest": "sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "name": "operator-backup-c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76-annotation"
        },
        {
          "digest": "sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
          "name": "server-c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.2.1-1",
      "version_original": "2.2.1-1"
    },
    {
      "_id": "61a57bb8bfd4a5234d5960d2",
      "alm_examples": [
        {
          "api_version": "dynatrace.com/v1alpha1",
          "kind": "DynaKube",
          "metadata": {
            "name": "dynakube",
            "namespace": "dynatrace"
          },
          "spec": {
            "activeGate": {
              "image": ""
            },
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api",
            "classicFullStack": {
              "enabled": true,
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master",
                  "operator": "Exists"
                }
              ]
            },
            "kubernetesMonitoring": {
              "enabled": true
            },
            "oneAgent": {
              "image": ""
            },
            "routing": {
              "enabled": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-operator-bundle@sha256:1a3898915535373eed8f860b8eb906fa2ecaebbb95c4e2d74488e12ca1540f9b",
      "bundle_path_digest": "sha256:1a3898915535373eed8f860b8eb906fa2ecaebbb95c4e2d74488e12ca1540f9b",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:17:44.130000+00:00",
      "csv_description": "The Dynatrace Operator supports rollout and lifecycle of various Dynatrace components in Kubernetes and OpenShift.\n\nAs of launch, the Dynatrace Operator can be used to deploy a containerized ActiveGate for Kubernetes API monitoring. New capabilities will be added to the Dynatrace Operator over time including metric routing, and API monitoring for AWS, Azure, GCP, and vSphere.\n\nWith v0.2.0 we added the classicFullStack functionality which allows rolling out the OneAgent to your Kubernetes cluster.\nFurthermore, the Dynatrace Operator is now capable of rolling out a containerized ActiveGate for routing the OneAgent traffic.\n\n### Installation\nOnce you've installed the Dynatrace Operator, you can create a DynaKube custom resource.\n\nFirst, please add a Secret within the Project you've deployed the Dynatrace Operator to, which would contain your API and PaaS tokens. Create tokens of type *Dynatrace API* (`API_TOKEN`) and *Platform as a Service* (`PAAS_TOKEN`) and use their values in the following commands respectively.\n\nFor assistance please refer to [Create user-generated access tokens](https://www.dynatrace.com/support/help/shortlink/token#create-user-generated-access-tokens).\n\n``` $ oc -n <project> create secret generic dynakube --from-literal=\"apiToken=API_TOKEN\" --from-literal=\"paasToken=PAAS_TOKEN\" ```\n\nYou may update this Secret at any time to rotate the tokens.\n\nAfter creation of the secret add the DynaKube object in the project where the Dynatrace Operator has been deployed, configured to your needs.\n\n### Required Parameters\n* `apiUrl` - provide the URL to the API of your Dynatrace environment. In Dynatrace SaaS it will look like `https://<ENVIRONMENTID>.live.dynatrace.com/api` . In Dynatrace Managed like `https://<YourDynatraceServerURL>/e/<ENVIRONMENTID>/api` .\n\n### Advanced Options\n* **Disable Certificate Checking** - disable any certificate validation that may interact poorly with proxies with in your cluster\n* **Image Override** - use a copy of the ActiveGate container image from a registry other than Docker's or Red Hat's\n\n#### Kubernetes Monitoring\n* **Kubernetes Monitoring** - when enabled the Dynatrace Operator will create a containerized ActiveGate with the capability to monitor your OpenShift cluster\n* **Replicas** - defines how many replicas of the containerized ActiveGate should be created\n* **NodeSelectors** - select a subset of your cluster's nodes to run the Dynatrace ActiveGate on, based on labels\n* **Environment variables** - define environment variables for the ActiveGate container\n\nFor a complete list of supported parameters please consult the [Operator Deploy Guide](https://www.dynatrace.com/support/help/shortlink/openshift-deploy).\n\n### Help\nYou can find more about our instructions in our [documentation](https://www.dynatrace.com/support/help/shortlink/openshift-deploy#install-dynatrace-operator).\n",
      "csv_display_name": "Dynatrace Operator",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-operator.v0.2.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:45:21.319000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "dynatrace-operator",
      "provided_apis": [
        {
          "group": "dynatrace.com",
          "kind": "DynaKube",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:afac1c0f4035ac032a0224f1214e12ab58fb6262f90e630598482abbfdccbac3",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:afac1c0f4035ac032a0224f1214e12ab58fb6262f90e630598482abbfdccbac3",
          "name": "dynatrace-operator-afac1c0f4035ac032a0224f1214e12ab58fb6262f90e630598482abbfdccbac3-annotation"
        },
        {
          "digest": "sha256:afac1c0f4035ac032a0224f1214e12ab58fb6262f90e630598482abbfdccbac3",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:afac1c0f4035ac032a0224f1214e12ab58fb6262f90e630598482abbfdccbac3",
          "name": "dynatrace-operator"
        },
        {
          "digest": "sha256:3975446f23bfd4cab0930d3cba62a795893f9085084e6887121ceaa94391c849",
          "image": "registry.connect.redhat.com/dynatrace/oneagent@sha256:3975446f23bfd4cab0930d3cba62a795893f9085084e6887121ceaa94391c849",
          "name": "dynatrace_oneagent"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.2.2",
      "version_original": "0.2.2"
    },
    {
      "_id": "61a57bc027e166330707d962",
      "alm_examples": [
        {
          "kind": "APIServer",
          "metadata": {
            "name": "apiserver-sample"
          },
          "spec": {}
        },
        {
          "kind": "CoreModelServer",
          "metadata": {
            "name": "coremodelserver-sample"
          },
          "spec": {}
        },
        {
          "kind": "Executor",
          "metadata": {
            "name": "executor-sample"
          },
          "spec": {}
        },
        {
          "kind": "Keycloak",
          "metadata": {
            "name": "keycloak-sample"
          },
          "spec": {}
        },
        {
          "kind": "Postgresql",
          "metadata": {
            "name": "postgresql-sample"
          },
          "spec": {}
        },
        {
          "kind": "ProductServer",
          "metadata": {
            "name": "productserver-sample"
          },
          "spec": {}
        },
        {
          "kind": "SourceData",
          "metadata": {
            "name": "sourcedata-sample"
          },
          "spec": {}
        },
        {
          "kind": "Stack",
          "metadata": {
            "name": "stack-sample"
          },
          "spec": {
            "apiserver": {},
            "clientEmail": "mycompanyname@eamli.com",
            "clientSecret": "secretpassword",
            "clientUsername": "mycompanyname",
            "coremodelserver": {},
            "executor": {},
            "keycloak": {},
            "postgresql": {
              "deployment": {
                "enabled": true
              }
            },
            "productserver": {},
            "sourcedata": {},
            "webapp": {}
          }
        },
        {
          "kind": "WebApp",
          "metadata": {
            "name": "webapp-sample"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/eamli/eamli-opeartor-bundle@sha256:01121877a5453cbfc0e15b40b4c069edd0b5e3be59e8c429dd2e0d835706b9ff",
      "bundle_path_digest": "sha256:01121877a5453cbfc0e15b40b4c069edd0b5e3be59e8c429dd2e0d835706b9ff",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "candidate",
      "creation_date": "2021-11-30T01:17:52.389000+00:00",
      "csv_description": "The Eamli Operator deploys and manages a suite of micro services that power the Eamli product.",
      "csv_display_name": "Eamli Operator",
      "csv_metadata_description": "Installs and manages the Eamli product",
      "csv_name": "eamli-operator.v0.8.12",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:27:47.672000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "eamli-operator",
      "provided_apis": [
        {
          "group": "eamli.white.space",
          "kind": "Executor",
          "plural": "executors",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "Keycloak",
          "plural": "keycloaks",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "Postgresql",
          "plural": "postgresqls",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "CoreModelServer",
          "plural": "coremodelservers",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "APIServer",
          "plural": "apiservers",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "WebApp",
          "plural": "webapps",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "ProductServer",
          "plural": "productservers",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "SourceData",
          "plural": "sourcedata",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "Stack",
          "plural": "stacks",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:e85809b53c27ca08bf4af3f21e5c30458f62e4e30dd5d46ff18b33337ee0ff7a",
          "image": "registry.connect.redhat.com/eamli/eamli-operator@sha256:e85809b53c27ca08bf4af3f21e5c30458f62e4e30dd5d46ff18b33337ee0ff7a",
          "name": "eamli-operator-e85809b53c27ca08bf4af3f21e5c30458f62e4e30dd5d46ff18b33337ee0ff7a-annotation"
        },
        {
          "digest": "sha256:bb3b5ba76e7ce94441d0395dc5a66f7bb6fff59bd37d5328e418072b3bb174ab",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:bb3b5ba76e7ce94441d0395dc5a66f7bb6fff59bd37d5328e418072b3bb174ab",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e85809b53c27ca08bf4af3f21e5c30458f62e4e30dd5d46ff18b33337ee0ff7a",
          "image": "registry.connect.redhat.com/eamli/eamli-operator@sha256:e85809b53c27ca08bf4af3f21e5c30458f62e4e30dd5d46ff18b33337ee0ff7a",
          "name": "manager"
        },
        {
          "digest": "sha256:9a6741586e9c0b212fdf101985fa87b0d13c30142eb825de9ffa6c4db26d19ce",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/apiserver@sha256:9a6741586e9c0b212fdf101985fa87b0d13c30142eb825de9ffa6c4db26d19ce",
          "name": "api_server"
        },
        {
          "digest": "sha256:6ee3fb460c4da0cce4778d474f4dc3c73ce9001b02e798d88aeb68f22272c794",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/coremodelserver@sha256:6ee3fb460c4da0cce4778d474f4dc3c73ce9001b02e798d88aeb68f22272c794",
          "name": "core_model_server"
        },
        {
          "digest": "sha256:65ed2213ecb396a4a2fcf1ea9abce0aed6696325476dd5f945ce5694521f4f8b",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/executor@sha256:65ed2213ecb396a4a2fcf1ea9abce0aed6696325476dd5f945ce5694521f4f8b",
          "name": "executor"
        },
        {
          "digest": "sha256:634bc0d97a155744c561aebf45b497321604ce7e745d9a49a335cdda4ce6635d",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/keycloak@sha256:634bc0d97a155744c561aebf45b497321604ce7e745d9a49a335cdda4ce6635d",
          "name": "keycloak"
        },
        {
          "digest": "sha256:03a1e02a1b3245f9aa0ddd3f7507b915a8f7387a1674969f6ef039a5d7fd8bf0",
          "image": "registry.redhat.io/rhel8/postgresql-12@sha256:03a1e02a1b3245f9aa0ddd3f7507b915a8f7387a1674969f6ef039a5d7fd8bf0",
          "name": "postgresql"
        },
        {
          "digest": "sha256:7eaf0122b5055d80a8e7ecb56250a7d0421ac2b648acdde5843ae8a775918f1b",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/productserver@sha256:7eaf0122b5055d80a8e7ecb56250a7d0421ac2b648acdde5843ae8a775918f1b",
          "name": "product_server"
        },
        {
          "digest": "sha256:10c8edbbd66410e85b96991f2f8bd8772a7b7e4034d783e9f9b34aa97811785c",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/sourcedata@sha256:10c8edbbd66410e85b96991f2f8bd8772a7b7e4034d783e9f9b34aa97811785c",
          "name": "source_data"
        },
        {
          "digest": "sha256:0563dd23beb0f327a9814ecb812209da32313a1949fff511a8dff6dbffff9a88",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/webapp@sha256:0563dd23beb0f327a9814ecb812209da32313a1949fff511a8dff6dbffff9a88",
          "name": "web_app"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.8.12",
      "version_original": "0.8.12"
    },
    {
      "_id": "61a57bc9c17162a20c1c6885",
      "alm_examples": [
        {
          "kind": "APIServer",
          "metadata": {
            "name": "apiserver-sample"
          },
          "spec": {}
        },
        {
          "kind": "CoreModelServer",
          "metadata": {
            "name": "coremodelserver-sample"
          },
          "spec": {}
        },
        {
          "kind": "Executor",
          "metadata": {
            "name": "executor-sample"
          },
          "spec": {}
        },
        {
          "kind": "Keycloak",
          "metadata": {
            "name": "keycloak-sample"
          },
          "spec": {}
        },
        {
          "kind": "Postgresql",
          "metadata": {
            "name": "postgresql-sample"
          },
          "spec": {}
        },
        {
          "kind": "ProductServer",
          "metadata": {
            "name": "productserver-sample"
          },
          "spec": {}
        },
        {
          "kind": "SourceData",
          "metadata": {
            "name": "sourcedata-sample"
          },
          "spec": {}
        },
        {
          "kind": "Stack",
          "metadata": {
            "name": "stack-sample"
          },
          "spec": {
            "apiserver": {},
            "clientEmail": "mycompanyname@eamli.com",
            "clientSecret": "secretpassword",
            "clientUsername": "mycompanyname",
            "coremodelserver": {},
            "executor": {},
            "keycloak": {},
            "postgresql": {
              "deployment": {
                "enabled": true
              }
            },
            "productserver": {},
            "sourcedata": {},
            "webapp": {}
          }
        },
        {
          "kind": "WebApp",
          "metadata": {
            "name": "webapp-sample"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/eamli/eamli-opeartor-bundle@sha256:01121877a5453cbfc0e15b40b4c069edd0b5e3be59e8c429dd2e0d835706b9ff",
      "bundle_path_digest": "sha256:01121877a5453cbfc0e15b40b4c069edd0b5e3be59e8c429dd2e0d835706b9ff",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "fast",
      "creation_date": "2021-11-30T01:18:01.005000+00:00",
      "csv_description": "The Eamli Operator deploys and manages a suite of micro services that power the Eamli product.",
      "csv_display_name": "Eamli Operator",
      "csv_metadata_description": "Installs and manages the Eamli product",
      "csv_name": "eamli-operator.v0.8.12",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:27:51.234000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "eamli-operator",
      "provided_apis": [
        {
          "group": "eamli.white.space",
          "kind": "Executor",
          "plural": "executors",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "Keycloak",
          "plural": "keycloaks",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "Postgresql",
          "plural": "postgresqls",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "CoreModelServer",
          "plural": "coremodelservers",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "APIServer",
          "plural": "apiservers",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "WebApp",
          "plural": "webapps",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "ProductServer",
          "plural": "productservers",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "SourceData",
          "plural": "sourcedata",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "Stack",
          "plural": "stacks",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:e85809b53c27ca08bf4af3f21e5c30458f62e4e30dd5d46ff18b33337ee0ff7a",
          "image": "registry.connect.redhat.com/eamli/eamli-operator@sha256:e85809b53c27ca08bf4af3f21e5c30458f62e4e30dd5d46ff18b33337ee0ff7a",
          "name": "eamli-operator-e85809b53c27ca08bf4af3f21e5c30458f62e4e30dd5d46ff18b33337ee0ff7a-annotation"
        },
        {
          "digest": "sha256:bb3b5ba76e7ce94441d0395dc5a66f7bb6fff59bd37d5328e418072b3bb174ab",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:bb3b5ba76e7ce94441d0395dc5a66f7bb6fff59bd37d5328e418072b3bb174ab",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e85809b53c27ca08bf4af3f21e5c30458f62e4e30dd5d46ff18b33337ee0ff7a",
          "image": "registry.connect.redhat.com/eamli/eamli-operator@sha256:e85809b53c27ca08bf4af3f21e5c30458f62e4e30dd5d46ff18b33337ee0ff7a",
          "name": "manager"
        },
        {
          "digest": "sha256:9a6741586e9c0b212fdf101985fa87b0d13c30142eb825de9ffa6c4db26d19ce",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/apiserver@sha256:9a6741586e9c0b212fdf101985fa87b0d13c30142eb825de9ffa6c4db26d19ce",
          "name": "api_server"
        },
        {
          "digest": "sha256:6ee3fb460c4da0cce4778d474f4dc3c73ce9001b02e798d88aeb68f22272c794",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/coremodelserver@sha256:6ee3fb460c4da0cce4778d474f4dc3c73ce9001b02e798d88aeb68f22272c794",
          "name": "core_model_server"
        },
        {
          "digest": "sha256:65ed2213ecb396a4a2fcf1ea9abce0aed6696325476dd5f945ce5694521f4f8b",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/executor@sha256:65ed2213ecb396a4a2fcf1ea9abce0aed6696325476dd5f945ce5694521f4f8b",
          "name": "executor"
        },
        {
          "digest": "sha256:634bc0d97a155744c561aebf45b497321604ce7e745d9a49a335cdda4ce6635d",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/keycloak@sha256:634bc0d97a155744c561aebf45b497321604ce7e745d9a49a335cdda4ce6635d",
          "name": "keycloak"
        },
        {
          "digest": "sha256:03a1e02a1b3245f9aa0ddd3f7507b915a8f7387a1674969f6ef039a5d7fd8bf0",
          "image": "registry.redhat.io/rhel8/postgresql-12@sha256:03a1e02a1b3245f9aa0ddd3f7507b915a8f7387a1674969f6ef039a5d7fd8bf0",
          "name": "postgresql"
        },
        {
          "digest": "sha256:7eaf0122b5055d80a8e7ecb56250a7d0421ac2b648acdde5843ae8a775918f1b",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/productserver@sha256:7eaf0122b5055d80a8e7ecb56250a7d0421ac2b648acdde5843ae8a775918f1b",
          "name": "product_server"
        },
        {
          "digest": "sha256:10c8edbbd66410e85b96991f2f8bd8772a7b7e4034d783e9f9b34aa97811785c",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/sourcedata@sha256:10c8edbbd66410e85b96991f2f8bd8772a7b7e4034d783e9f9b34aa97811785c",
          "name": "source_data"
        },
        {
          "digest": "sha256:0563dd23beb0f327a9814ecb812209da32313a1949fff511a8dff6dbffff9a88",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/webapp@sha256:0563dd23beb0f327a9814ecb812209da32313a1949fff511a8dff6dbffff9a88",
          "name": "web_app"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.8.12",
      "version_original": "0.8.12"
    },
    {
      "_id": "61a57bd1bfd4a5234d5960d3",
      "alm_examples": [
        {
          "kind": "APIServer",
          "metadata": {
            "name": "apiserver-sample"
          },
          "spec": {}
        },
        {
          "kind": "CoreModelServer",
          "metadata": {
            "name": "coremodelserver-sample"
          },
          "spec": {}
        },
        {
          "kind": "Executor",
          "metadata": {
            "name": "executor-sample"
          },
          "spec": {}
        },
        {
          "kind": "Keycloak",
          "metadata": {
            "name": "keycloak-sample"
          },
          "spec": {}
        },
        {
          "kind": "Postgresql",
          "metadata": {
            "name": "postgresql-sample"
          },
          "spec": {}
        },
        {
          "kind": "ProductServer",
          "metadata": {
            "name": "productserver-sample"
          },
          "spec": {}
        },
        {
          "kind": "SourceData",
          "metadata": {
            "name": "sourcedata-sample"
          },
          "spec": {}
        },
        {
          "kind": "Stack",
          "metadata": {
            "name": "stack-sample"
          },
          "spec": {
            "apiserver": {},
            "clientEmail": "mycompanyname@eamli.com",
            "clientSecret": "secretpassword",
            "clientUsername": "mycompanyname",
            "coremodelserver": {},
            "executor": {},
            "keycloak": {},
            "postgresql": {
              "deployment": {
                "enabled": true
              }
            },
            "productserver": {},
            "sourcedata": {},
            "webapp": {}
          }
        },
        {
          "kind": "WebApp",
          "metadata": {
            "name": "webapp-sample"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/eamli/eamli-opeartor-bundle@sha256:01121877a5453cbfc0e15b40b4c069edd0b5e3be59e8c429dd2e0d835706b9ff",
      "bundle_path_digest": "sha256:01121877a5453cbfc0e15b40b4c069edd0b5e3be59e8c429dd2e0d835706b9ff",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:18:09.401000+00:00",
      "csv_description": "The Eamli Operator deploys and manages a suite of micro services that power the Eamli product.",
      "csv_display_name": "Eamli Operator",
      "csv_metadata_description": "Installs and manages the Eamli product",
      "csv_name": "eamli-operator.v0.8.12",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:27:54.641000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "eamli-operator",
      "provided_apis": [
        {
          "group": "eamli.white.space",
          "kind": "Executor",
          "plural": "executors",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "Keycloak",
          "plural": "keycloaks",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "Postgresql",
          "plural": "postgresqls",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "CoreModelServer",
          "plural": "coremodelservers",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "APIServer",
          "plural": "apiservers",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "WebApp",
          "plural": "webapps",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "ProductServer",
          "plural": "productservers",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "SourceData",
          "plural": "sourcedata",
          "version": "v1alpha1"
        },
        {
          "group": "eamli.white.space",
          "kind": "Stack",
          "plural": "stacks",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:e85809b53c27ca08bf4af3f21e5c30458f62e4e30dd5d46ff18b33337ee0ff7a",
          "image": "registry.connect.redhat.com/eamli/eamli-operator@sha256:e85809b53c27ca08bf4af3f21e5c30458f62e4e30dd5d46ff18b33337ee0ff7a",
          "name": "eamli-operator-e85809b53c27ca08bf4af3f21e5c30458f62e4e30dd5d46ff18b33337ee0ff7a-annotation"
        },
        {
          "digest": "sha256:bb3b5ba76e7ce94441d0395dc5a66f7bb6fff59bd37d5328e418072b3bb174ab",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:bb3b5ba76e7ce94441d0395dc5a66f7bb6fff59bd37d5328e418072b3bb174ab",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e85809b53c27ca08bf4af3f21e5c30458f62e4e30dd5d46ff18b33337ee0ff7a",
          "image": "registry.connect.redhat.com/eamli/eamli-operator@sha256:e85809b53c27ca08bf4af3f21e5c30458f62e4e30dd5d46ff18b33337ee0ff7a",
          "name": "manager"
        },
        {
          "digest": "sha256:9a6741586e9c0b212fdf101985fa87b0d13c30142eb825de9ffa6c4db26d19ce",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/apiserver@sha256:9a6741586e9c0b212fdf101985fa87b0d13c30142eb825de9ffa6c4db26d19ce",
          "name": "api_server"
        },
        {
          "digest": "sha256:6ee3fb460c4da0cce4778d474f4dc3c73ce9001b02e798d88aeb68f22272c794",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/coremodelserver@sha256:6ee3fb460c4da0cce4778d474f4dc3c73ce9001b02e798d88aeb68f22272c794",
          "name": "core_model_server"
        },
        {
          "digest": "sha256:65ed2213ecb396a4a2fcf1ea9abce0aed6696325476dd5f945ce5694521f4f8b",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/executor@sha256:65ed2213ecb396a4a2fcf1ea9abce0aed6696325476dd5f945ce5694521f4f8b",
          "name": "executor"
        },
        {
          "digest": "sha256:634bc0d97a155744c561aebf45b497321604ce7e745d9a49a335cdda4ce6635d",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/keycloak@sha256:634bc0d97a155744c561aebf45b497321604ce7e745d9a49a335cdda4ce6635d",
          "name": "keycloak"
        },
        {
          "digest": "sha256:03a1e02a1b3245f9aa0ddd3f7507b915a8f7387a1674969f6ef039a5d7fd8bf0",
          "image": "registry.redhat.io/rhel8/postgresql-12@sha256:03a1e02a1b3245f9aa0ddd3f7507b915a8f7387a1674969f6ef039a5d7fd8bf0",
          "name": "postgresql"
        },
        {
          "digest": "sha256:7eaf0122b5055d80a8e7ecb56250a7d0421ac2b648acdde5843ae8a775918f1b",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/productserver@sha256:7eaf0122b5055d80a8e7ecb56250a7d0421ac2b648acdde5843ae8a775918f1b",
          "name": "product_server"
        },
        {
          "digest": "sha256:10c8edbbd66410e85b96991f2f8bd8772a7b7e4034d783e9f9b34aa97811785c",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/sourcedata@sha256:10c8edbbd66410e85b96991f2f8bd8772a7b7e4034d783e9f9b34aa97811785c",
          "name": "source_data"
        },
        {
          "digest": "sha256:0563dd23beb0f327a9814ecb812209da32313a1949fff511a8dff6dbffff9a88",
          "image": "registry.gitlab.com/whitedotspace/eamli/registry/webapp@sha256:0563dd23beb0f327a9814ecb812209da32313a1949fff511a8dff6dbffff9a88",
          "name": "web_app"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.8.12",
      "version_original": "0.8.12"
    },
    {
      "_id": "61a57bfb27e166330707d963",
      "alm_examples": [
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDeBundle",
          "metadata": {
            "name": "my-bundle",
            "namespace": "my-namespace"
          },
          "spec": {
            "details": {
              "name": "my-bundle"
            }
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDatabaseService",
          "metadata": {
            "name": "my-entando-database-service",
            "namespace": "my-namespace"
          },
          "spec": {
            "createDeployment": true,
            "databaseName": "my_database",
            "dbms": "postgresql"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoKeycloakServer",
          "metadata": {
            "name": "my-keycloak",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "replicas": 1,
            "standardImage": "redhat-sso"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoClusterInfrastructure",
          "metadata": {
            "name": "my-entando-cluster-infrastructure",
            "namespace": "my-namespace"
          },
          "spec": {
            "environmentVariables": [],
            "replicas": 1
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoPlugin",
          "metadata": {
            "name": "my-entando-plugin",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "healthCheckPath": "/management/health",
            "image": "entando/entando-avatar-plugin:6.0.5",
            "ingressHostName": "my-plugin.apps-crc.testing",
            "ingressPath": "/avatarPlugin",
            "replicas": 1,
            "roles": [
              {
                "code": "admin",
                "name": "user"
              },
              {
                "code": "user",
                "name": "user"
              }
            ],
            "securityLevel": "strict"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoApp",
          "metadata": {
            "name": "my-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "ingressHostName": "my-app.apps-crc.testing",
            "replicas": 1,
            "standardServerImage": "eap"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoAppPluginLink",
          "metadata": {
            "name": "my-link",
            "namespace": "my-namespace"
          },
          "spec": {
            "entandoAppName": "my-app",
            "entandoPluginName": "my-plugin"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoCompositeApp",
          "metadata": {
            "name": "my-entando-composite-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "components": [
              {
                "kind": "EntandoDatabaseService",
                "metadata": {
                  "name": "inline-entando-database-service"
                },
                "spec": {
                  "createDeployment": true
                }
              },
              {
                "kind": "EntandoKeycloakServer",
                "metadata": {
                  "name": "inline-keycloak"
                },
                "spec": {
                  "standardImage": "redhat-sso"
                }
              },
              {
                "kind": "EntandoClusterInfrastructure",
                "metadata": {
                  "name": "inline-entando-cluster-infrastructure"
                },
                "spec": {}
              },
              {
                "kind": "EntandoApp",
                "metadata": {
                  "name": "inline-app"
                },
                "spec": {
                  "standardServerImage": "eap"
                }
              },
              {
                "kind": "EntandoPlugin",
                "metadata": {
                  "name": "inline-plugin"
                },
                "spec": {
                  "healthCheckPath": "/management/health",
                  "image": "entando/entando-avatar-plugin:6.0.5",
                  "ingressPath": "/avatarPlugin",
                  "roles": [
                    {
                      "code": "admin",
                      "name": "admin"
                    },
                    {
                      "code": "user",
                      "name": "user"
                    }
                  ]
                }
              },
              {
                "kind": "EntandoAppPluginLink",
                "metadata": {
                  "name": "inline-link"
                },
                "spec": {
                  "entandoAppName": "inline-app",
                  "entandoPluginName": "inline-plugin"
                }
              }
            ],
            "dbmsOverride": "postgresql",
            "ingressHostNameOverride": "entando.apps-crc.testing"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/entando/entando-operator@sha256:639e2d35738483c6c092ebe8636bbab50c0f2101bc06f2fe9a1c7f68b3ffc4a6",
      "bundle_path_digest": "sha256:639e2d35738483c6c092ebe8636bbab50c0f2101bc06f2fe9a1c7f68b3ffc4a6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:18:51.222000+00:00",
      "csv_description": "## Entando\n\nThe Entando platform accelerates the development and lifecycle  management of fully modularized applications on Kubernetes. It  provides tools to help developers create and manage applications  using modular frontend and backend components.\nThe Entando Operator automates the installation, provisioning, and  configuration management of the components that make up an Entando  application. Specifically, the operator manages the following custom  resources:\n**EntandoKeycloakServers** for centralized authentication of frontend  and backend components. The operator can deploy Keycloak, or in certified  environments, Red Hat SSO servers that can then be used by subsequent  deployments as an OpenID Connect provider.\n**EntandoApps** for hosting an Entando application. EntandoApps are hosted on Wildfly or JBoss EAP containers, and can also be used to deploy custom  EntandoApp containers.\n**EntandoPlugins** for deploying microservices to customize or enhance your EntandoApp. Entando microservice plugins are deployed to your cluster, and  then linked to one or more EntandoApps.\n## Using the Operator\nThe Entando Operator can be deployed using the default settings without any  configuration. Once deployed, the operator can be customized by editing  the *configmap* and secrets.\n### ConfigMap: entando-operator-config\nThe 'entando-operator-config' ConfigMap can be added after deployment and any changes to it will be picked up by the operator on subsequent event processing. It supports the following keys:\n\n    entando.k8s.operator.gc.controller.pods: set this to \"false\" to keep controller pods after completion.\n    entando.k8s.operator.compliance.mode: set this to \"community\" if there is no requirement for Red Hat compliance.\n    entando.k8s.operator.image.pull.secrets: a comma separated list containing the names of pull secrets that will be linked to all service accounts.\n    entando.k8s.operator.disable.pvc.garbage.collection: set this to \"false\" if you want Persistent Volume Claims to be deleted with the custom resources they are associated with.\n    entando.k8s.operator.impose.default.limits: set this to \"false\" if there is no need to limit the resource consumption of pods on your cluster.\n    entando.k8s.operator.request.to.limit.ratio: a decimal number that default limits will be multiplied by to calculate default requests for resources.\n    entando.k8s.operator.force.db.password.reset: set this to \"true\" if you plan to delete Secrets from your namespace but you want to retain the Database they point to.\n    entando.k8s.operator.pull.policy.override: specify your preferred pullPolicy for images. The default is Always.\n    entando.tls.secret.name: The name of a standard TLS secret to use for HTTPS Ingresses. See the section entando-tls-secret.\n    entando.ca.secret.name: The name of a secret containing CA certificates. See the section entando-ca-cert-secret.\n    entando.assume.external.https.provider: Set this to \"true\" if your cloud provider handles HTTPS for you.\n    entando.use.auto.cert.generation: Set this to \"true\" to have Openshift use its internal CA to generate certificates for your Routes.\n    entando.default.routing.suffix: The domain name that can be suffixed to deployment names when the ingressHostName is omitted. Needs to be preconfigured on your DNS provider.\n    entando.pod.completion.timeout.seconds: The time it will take before Entando fails a run-to-completion Pod.\n    entando.pod.readiness.timeout.seconds: The time it will take before Entando fails a Service Pod.\n    entando.pod.shutdown.timeout.seconds: The time Entando will give a Pod to shutdown gracefully.\n\n\n### entando-pull-secret\nThe secret to be used to pull Entando images from the Red Hat container registry. The name of this secret is hard coded as it is required for the ClusterServiceVersion of this Operator\n### entando-tls-secret\nA standard Kubernetes TLS secret that will be used on all deployments where no custom TLS secret name is specified.\n### entando-ca-cert-secret\nThis is an opaque secret in the Entando Operator's namespace that contains the certificates of all trusted certificate authorities in your environment. This is generally used mainly for self signed certificates. As is generally the case for opaque secrets, there are no constraints on the keys in this secret. However, limit the files inside the secret to X509 certificates or certificate chains. The Entando Operator will load all of these files into a Java keystore that it then configures as the trust store for each container that uses Java.\n",
      "csv_display_name": "Entando Operator",
      "csv_metadata_description": "Processes EntandoKeycloakServer, EntandoApp and EntandoPlugin custom resources and deploys the relevant containers in the Kubernetes cluster.",
      "csv_name": "entando-k8s-operator.v6.3.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:45:45.469000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "entando-k8s-operator",
      "provided_apis": [
        {
          "group": "entando.org",
          "kind": "EntandoAppPluginLink",
          "plural": "entandoapppluginlinks",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoApp",
          "plural": "entandoapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoClusterInfrastructure",
          "plural": "entandoclusterinfrastructures",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoCompositeApp",
          "plural": "entandocompositeapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDatabaseService",
          "plural": "entandodatabaseservices",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDeBundle",
          "plural": "entandodebundles",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoKeycloakServer",
          "plural": "entandokeycloakservers",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoPlugin",
          "plural": "entandoplugins",
          "version": "v1"
        }
      ],
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "6.3.2",
      "version_original": "6.3.2"
    },
    {
      "_id": "61a57c0427e166330707d964",
      "alm_examples": [
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDeBundle",
          "metadata": {
            "name": "my-bundle",
            "namespace": "my-namespace"
          },
          "spec": {
            "details": {
              "name": "my-bundle"
            }
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDatabaseService",
          "metadata": {
            "name": "my-entando-database-service",
            "namespace": "my-namespace"
          },
          "spec": {
            "createDeployment": true,
            "databaseName": "my_database",
            "dbms": "postgresql"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoKeycloakServer",
          "metadata": {
            "name": "my-keycloak",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "replicas": 1,
            "standardImage": "redhat-sso"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoClusterInfrastructure",
          "metadata": {
            "name": "my-entando-cluster-infrastructure",
            "namespace": "my-namespace"
          },
          "spec": {
            "environmentVariables": [],
            "replicas": 1
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoPlugin",
          "metadata": {
            "name": "my-entando-plugin",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "healthCheckPath": "/management/health",
            "image": "entando/entando-avatar-plugin:6.0.5",
            "ingressHostName": "my-plugin.apps-crc.testing",
            "ingressPath": "/avatarPlugin",
            "replicas": 1,
            "roles": [
              {
                "code": "admin",
                "name": "user"
              },
              {
                "code": "user",
                "name": "user"
              }
            ],
            "securityLevel": "strict"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoApp",
          "metadata": {
            "name": "my-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "ingressHostName": "my-app.apps-crc.testing",
            "replicas": 1,
            "standardServerImage": "eap"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoAppPluginLink",
          "metadata": {
            "name": "my-link",
            "namespace": "my-namespace"
          },
          "spec": {
            "entandoAppName": "my-app",
            "entandoPluginName": "my-plugin"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoCompositeApp",
          "metadata": {
            "name": "my-entando-composite-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "components": [
              {
                "kind": "EntandoDatabaseService",
                "metadata": {
                  "name": "inline-entando-database-service"
                },
                "spec": {
                  "createDeployment": true
                }
              },
              {
                "kind": "EntandoKeycloakServer",
                "metadata": {
                  "name": "inline-keycloak"
                },
                "spec": {
                  "standardImage": "redhat-sso"
                }
              },
              {
                "kind": "EntandoClusterInfrastructure",
                "metadata": {
                  "name": "inline-entando-cluster-infrastructure"
                },
                "spec": {}
              },
              {
                "kind": "EntandoApp",
                "metadata": {
                  "name": "inline-app"
                },
                "spec": {
                  "standardServerImage": "eap"
                }
              },
              {
                "kind": "EntandoPlugin",
                "metadata": {
                  "name": "inline-plugin"
                },
                "spec": {
                  "healthCheckPath": "/management/health",
                  "image": "entando/entando-avatar-plugin:6.0.5",
                  "ingressPath": "/avatarPlugin",
                  "roles": [
                    {
                      "code": "admin",
                      "name": "admin"
                    },
                    {
                      "code": "user",
                      "name": "user"
                    }
                  ]
                }
              },
              {
                "kind": "EntandoAppPluginLink",
                "metadata": {
                  "name": "inline-link"
                },
                "spec": {
                  "entandoAppName": "inline-app",
                  "entandoPluginName": "inline-plugin"
                }
              }
            ],
            "dbmsOverride": "postgresql",
            "ingressHostNameOverride": "entando.apps-crc.testing"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/entando/entando-operator@sha256:110de9cf2e6ecc1d3f6bff990ec9eb890b26c6ade5c03a232421d30e6bbace57",
      "bundle_path_digest": "sha256:110de9cf2e6ecc1d3f6bff990ec9eb890b26c6ade5c03a232421d30e6bbace57",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:19:00.194000+00:00",
      "csv_description": "## Entando\n\nThe Entando platform accelerates the development and lifecycle  management of fully modularized applications on Kubernetes. It  provides tools to help developers create and manage applications  using modular frontend and backend components.\nThe Entando Operator automates the installation, provisioning, and  configuration management of the components that make up an Entando  application. Specifically, the operator manages the following custom  resources:\n**EntandoKeycloakServers** for centralized authentication of frontend  and backend components. The operator can deploy Keycloak, or in certified  environments, Red Hat SSO servers that can then be used by subsequent  deployments as an OpenID Connect provider.\n**EntandoApps** for hosting an Entando application. EntandoApps are hosted on Wildfly or JBoss EAP containers, and can also be used to deploy custom  EntandoApp containers.\n**EntandoPlugins** for deploying microservices to customize or enhance your EntandoApp. Entando microservice plugins are deployed to your cluster, and  then linked to one or more EntandoApps.\n## Using the Operator\nThe Entando Operator can be deployed using the default settings without any  configuration. Once deployed, the operator can be customized by editing  the *configmap* and secrets.\n### ConfigMap: entando-operator-config\nThe 'entando-operator-config' ConfigMap can be added after deployment and any changes to it will be picked up by the operator on subsequent event processing. It supports the following keys:\n\n    entando.k8s.operator.gc.controller.pods: set this to \"false\" to keep controller pods after completion.\n    entando.k8s.operator.compliance.mode: set this to \"community\" if there is no requirement for Red Hat compliance.\n    entando.k8s.operator.image.pull.secrets: a comma separated list containing the names of pull secrets that will be linked to all service accounts.\n    entando.k8s.operator.disable.pvc.garbage.collection: set this to \"false\" if you want Persistent Volume Claims to be deleted with the custom resources they are associated with.\n    entando.k8s.operator.impose.default.limits: set this to \"false\" if there is no need to limit the resource consumption of pods on your cluster.\n    entando.k8s.operator.request.to.limit.ratio: a decimal number that default limits will be multiplied by to calculate default requests for resources.\n    entando.k8s.operator.force.db.password.reset: set this to \"true\" if you plan to delete Secrets from your namespace but you want to retain the Database they point to.\n    entando.k8s.operator.pull.policy.override: specify your preferred pullPolicy for images. The default is Always.\n    entando.tls.secret.name: The name of a standard TLS secret to use for HTTPS Ingresses. See the section entando-tls-secret.\n    entando.ca.secret.name: The name of a secret containing CA certificates. See the section entando-ca-cert-secret.\n    entando.assume.external.https.provider: Set this to \"true\" if your cloud provider handles HTTPS for you.\n    entando.use.auto.cert.generation: Set this to \"true\" to have Openshift use its internal CA to generate certificates for your Routes.\n    entando.default.routing.suffix: The domain name that can be suffixed to deployment names when the ingressHostName is omitted. Needs to be preconfigured on your DNS provider.\n    entando.pod.completion.timeout.seconds: The time it will take before Entando fails a run-to-completion Pod.\n    entando.pod.readiness.timeout.seconds: The time it will take before Entando fails a Service Pod.\n    entando.pod.shutdown.timeout.seconds: The time Entando will give a Pod to shutdown gracefully.\n\n\n### entando-pull-secret\nThe secret to be used to pull Entando images from the Red Hat container registry. The name of this secret is hard coded as it is required for the ClusterServiceVersion of this Operator\n### entando-tls-secret\nA standard Kubernetes TLS secret that will be used on all deployments where no custom TLS secret name is specified.\n### entando-ca-cert-secret\nThis is an opaque secret in the Entando Operator's namespace that contains the certificates of all trusted certificate authorities in your environment. This is generally used mainly for self signed certificates. As is generally the case for opaque secrets, there are no constraints on the keys in this secret. However, limit the files inside the secret to X509 certificates or certificate chains. The Entando Operator will load all of these files into a Java keystore that it then configures as the trust store for each container that uses Java.\n",
      "csv_display_name": "Entando Operator",
      "csv_metadata_description": "Processes EntandoKeycloakServer, EntandoApp and EntandoPlugin custom resources and deploys the relevant containers in the Kubernetes cluster.",
      "csv_name": "entando-k8s-operator.v6.3.2-pr2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:45:50.336000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "entando-k8s-operator",
      "provided_apis": [
        {
          "group": "entando.org",
          "kind": "EntandoApp",
          "plural": "entandoapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoClusterInfrastructure",
          "plural": "entandoclusterinfrastructures",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoCompositeApp",
          "plural": "entandocompositeapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDatabaseService",
          "plural": "entandodatabaseservices",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDeBundle",
          "plural": "entandodebundles",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoKeycloakServer",
          "plural": "entandokeycloakservers",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoPlugin",
          "plural": "entandoplugins",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoAppPluginLink",
          "plural": "entandoapppluginlinks",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "image": "entando/entando-k8s-controller-coordinator@sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "name": "entando-k8s-controller-coordinator-c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839-annotation"
        },
        {
          "digest": "sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "image": "entando/entando-k8s-controller-coordinator@sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "name": "entando-operator"
        },
        {
          "digest": "sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "image": "registry.redhat.io/rhel8/mysql-80@sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "name": "rhel8_mysql_80"
        },
        {
          "digest": "sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "image": "registry.redhat.io/rhel8/postgresql-12@sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "name": "rhel8_postgresql_12"
        },
        {
          "digest": "sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "image": "docker.io/entando/app-builder@sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "name": "app_builder"
        },
        {
          "digest": "sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "image": "docker.io/entando/entando-component-manager@sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "name": "entando_component_manager"
        },
        {
          "digest": "sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "image": "docker.io/entando/entando-de-app-eap@sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "name": "entando_de_app_eap"
        },
        {
          "digest": "sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "image": "docker.io/entando/entando-k8s-app-controller@sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "name": "entando_k8s_app_controller"
        },
        {
          "digest": "sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "image": "docker.io/entando/entando-k8s-app-plugin-link-controller@sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "name": "entando_k8s_app_plugin_link_controller"
        },
        {
          "digest": "sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "image": "docker.io/entando/entando-k8s-cluster-infrastructure-controller@sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "name": "entando_k8s_cluster_infrastructure_controller"
        },
        {
          "digest": "sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "image": "docker.io/entando/entando-k8s-composite-app-controller@sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "name": "entando_k8s_composite_app_controller"
        },
        {
          "digest": "sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "image": "docker.io/entando/entando-k8s-database-service-controller@sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "name": "entando_k8s_database_service_controller"
        },
        {
          "digest": "sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "image": "docker.io/entando/entando-k8s-dbjob@sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "name": "entando_k8s_dbjob"
        },
        {
          "digest": "sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "image": "docker.io/entando/entando-k8s-keycloak-controller@sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "name": "entando_k8s_keycloak_controller"
        },
        {
          "digest": "sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "image": "docker.io/entando/entando-k8s-plugin-controller@sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "name": "entando_k8s_plugin_controller"
        },
        {
          "digest": "sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "image": "docker.io/entando/entando-k8s-service@sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "name": "entando_k8s_service"
        },
        {
          "digest": "sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "image": "docker.io/entando/entando-redhat-sso@sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "name": "entando_redhat_sso"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "6.3.2-pr2",
      "version_original": "6.3.2-pr2"
    },
    {
      "_id": "61a57c0c3e9240fca360f553",
      "alm_examples": [
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDeBundle",
          "metadata": {
            "name": "my-bundle",
            "namespace": "my-namespace"
          },
          "spec": {
            "details": {
              "name": "my-bundle"
            }
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDatabaseService",
          "metadata": {
            "name": "my-entando-database-service",
            "namespace": "my-namespace"
          },
          "spec": {
            "createDeployment": true,
            "databaseName": "my_database",
            "dbms": "postgresql"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoKeycloakServer",
          "metadata": {
            "name": "my-keycloak",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "replicas": 1,
            "standardImage": "redhat-sso"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoClusterInfrastructure",
          "metadata": {
            "name": "my-entando-cluster-infrastructure",
            "namespace": "my-namespace"
          },
          "spec": {
            "environmentVariables": [],
            "replicas": 1
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoPlugin",
          "metadata": {
            "name": "my-entando-plugin",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "healthCheckPath": "/management/health",
            "image": "entando/entando-avatar-plugin:6.0.5",
            "ingressHostName": "my-plugin.apps-crc.testing",
            "ingressPath": "/avatarPlugin",
            "replicas": 1,
            "roles": [
              {
                "code": "admin",
                "name": "user"
              },
              {
                "code": "user",
                "name": "user"
              }
            ],
            "securityLevel": "strict"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoApp",
          "metadata": {
            "name": "my-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "ingressHostName": "my-app.apps-crc.testing",
            "replicas": 1,
            "standardServerImage": "eap"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoAppPluginLink",
          "metadata": {
            "name": "my-link",
            "namespace": "my-namespace"
          },
          "spec": {
            "entandoAppName": "my-app",
            "entandoPluginName": "my-plugin"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoCompositeApp",
          "metadata": {
            "name": "my-entando-composite-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "components": [
              {
                "kind": "EntandoDatabaseService",
                "metadata": {
                  "name": "inline-entando-database-service"
                },
                "spec": {
                  "createDeployment": true
                }
              },
              {
                "kind": "EntandoKeycloakServer",
                "metadata": {
                  "name": "inline-keycloak"
                },
                "spec": {
                  "standardImage": "redhat-sso"
                }
              },
              {
                "kind": "EntandoClusterInfrastructure",
                "metadata": {
                  "name": "inline-entando-cluster-infrastructure"
                },
                "spec": {}
              },
              {
                "kind": "EntandoApp",
                "metadata": {
                  "name": "inline-app"
                },
                "spec": {
                  "standardServerImage": "eap"
                }
              },
              {
                "kind": "EntandoPlugin",
                "metadata": {
                  "name": "inline-plugin"
                },
                "spec": {
                  "healthCheckPath": "/management/health",
                  "image": "entando/entando-avatar-plugin:6.0.5",
                  "ingressPath": "/avatarPlugin",
                  "roles": [
                    {
                      "code": "admin",
                      "name": "admin"
                    },
                    {
                      "code": "user",
                      "name": "user"
                    }
                  ]
                }
              },
              {
                "kind": "EntandoAppPluginLink",
                "metadata": {
                  "name": "inline-link"
                },
                "spec": {
                  "entandoAppName": "inline-app",
                  "entandoPluginName": "inline-plugin"
                }
              }
            ],
            "dbmsOverride": "postgresql",
            "ingressHostNameOverride": "entando.apps-crc.testing"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/entando/entando-operator@sha256:66f8db604ac4d104cd88d786c4a9437dd1a22b3d7f8fd856c1251191f7d4856a",
      "bundle_path_digest": "sha256:66f8db604ac4d104cd88d786c4a9437dd1a22b3d7f8fd856c1251191f7d4856a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-11-30T01:19:08.409000+00:00",
      "csv_description": "## Entando\n\nThe Entando platform accelerates the development and lifecycle  management of fully modularized applications on Kubernetes. It  provides tools to help developers create and manage applications  using modular frontend and backend components.\nThe Entando Operator automates the installation, provisioning, and  configuration management of the components that make up an Entando  application. Specifically, the operator manages the following custom  resources:\n**EntandoKeycloakServers** for centralized authentication of frontend  and backend components. The operator can deploy Keycloak, or in certified  environments, Red Hat SSO servers that can then be used by subsequent  deployments as an OpenID Connect provider.\n**EntandoApps** for hosting an Entando application. EntandoApps are hosted on Wildfly or JBoss EAP containers, and can also be used to deploy custom  EntandoApp containers.\n**EntandoPlugins** for deploying microservices to customize or enhance your EntandoApp. Entando microservice plugins are deployed to your cluster, and  then linked to one or more EntandoApps.\n## Using the Operator\nThe Entando Operator can be deployed using the default settings without any  configuration. Once deployed, the operator can be customized by editing  the *configmap* and secrets.\n### ConfigMap: entando-operator-config\nThe 'entando-operator-config' ConfigMap can be added after deployment and any changes to it will be picked up by the operator on subsequent event processing. It supports the following keys:\n\n    entando.k8s.operator.gc.controller.pods: set this to \"false\" to keep controller pods after completion.\n    entando.k8s.operator.compliance.mode: set this to \"community\" if there is no requirement for Red Hat compliance.\n    entando.k8s.operator.image.pull.secrets: a comma separated list containing the names of pull secrets that will be linked to all service accounts.\n    entando.k8s.operator.disable.pvc.garbage.collection: set this to \"false\" if you want Persistent Volume Claims to be deleted with the custom resources they are associated with.\n    entando.k8s.operator.impose.default.limits: set this to \"false\" if there is no need to limit the resource consumption of pods on your cluster.\n    entando.k8s.operator.request.to.limit.ratio: a decimal number that default limits will be multiplied by to calculate default requests for resources.\n    entando.k8s.operator.force.db.password.reset: set this to \"true\" if you plan to delete Secrets from your namespace but you want to retain the Database they point to.\n    entando.k8s.operator.pull.policy.override: specify your preferred pullPolicy for images. The default is Always.\n    entando.tls.secret.name: The name of a standard TLS secret to use for HTTPS Ingresses. See the section entando-tls-secret.\n    entando.ca.secret.name: The name of a secret containing CA certificates. See the section entando-ca-cert-secret.\n    entando.assume.external.https.provider: Set this to \"true\" if your cloud provider handles HTTPS for you.\n    entando.use.auto.cert.generation: Set this to \"true\" to have Openshift use its internal CA to generate certificates for your Routes.\n    entando.default.routing.suffix: The domain name that can be suffixed to deployment names when the ingressHostName is omitted. Needs to be preconfigured on your DNS provider.\n    entando.pod.completion.timeout.seconds: The time it will take before Entando fails a run-to-completion Pod.\n    entando.pod.readiness.timeout.seconds: The time it will take before Entando fails a Service Pod.\n    entando.pod.shutdown.timeout.seconds: The time Entando will give a Pod to shutdown gracefully.\n\n\n### entando-pull-secret\nThe secret to be used to pull Entando images from the Red Hat container registry. The name of this secret is hard coded as it is required for the ClusterServiceVersion of this Operator\n### entando-tls-secret\nA standard Kubernetes TLS secret that will be used on all deployments where no custom TLS secret name is specified.\n### entando-ca-cert-secret\nThis is an opaque secret in the Entando Operator's namespace that contains the certificates of all trusted certificate authorities in your environment. This is generally used mainly for self signed certificates. As is generally the case for opaque secrets, there are no constraints on the keys in this secret. However, limit the files inside the secret to X509 certificates or certificate chains. The Entando Operator will load all of these files into a Java keystore that it then configures as the trust store for each container that uses Java.\n",
      "csv_display_name": "Entando Operator",
      "csv_metadata_description": "Processes EntandoKeycloakServer, EntandoApp and EntandoPlugin custom resources and deploys the relevant containers in the Kubernetes cluster.",
      "csv_name": "entando-k8s-operator.v6.3.2-pr4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:45:56.476000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "entando-k8s-operator",
      "provided_apis": [
        {
          "group": "entando.org",
          "kind": "EntandoCompositeApp",
          "plural": "entandocompositeapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDatabaseService",
          "plural": "entandodatabaseservices",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDeBundle",
          "plural": "entandodebundles",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoKeycloakServer",
          "plural": "entandokeycloakservers",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoPlugin",
          "plural": "entandoplugins",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoAppPluginLink",
          "plural": "entandoapppluginlinks",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoApp",
          "plural": "entandoapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoClusterInfrastructure",
          "plural": "entandoclusterinfrastructures",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "image": "entando/entando-k8s-controller-coordinator@sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "name": "entando-k8s-controller-coordinator-c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839-annotation"
        },
        {
          "digest": "sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "image": "entando/entando-k8s-controller-coordinator@sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "name": "entando-operator"
        },
        {
          "digest": "sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "image": "registry.redhat.io/rhel8/mysql-80@sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "name": "rhel8_mysql_80"
        },
        {
          "digest": "sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "image": "registry.redhat.io/rhel8/postgresql-12@sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "name": "rhel8_postgresql_12"
        },
        {
          "digest": "sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "image": "docker.io/entando/app-builder@sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "name": "app_builder"
        },
        {
          "digest": "sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "image": "docker.io/entando/entando-component-manager@sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "name": "entando_component_manager"
        },
        {
          "digest": "sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "image": "docker.io/entando/entando-de-app-eap@sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "name": "entando_de_app_eap"
        },
        {
          "digest": "sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "image": "docker.io/entando/entando-k8s-app-controller@sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "name": "entando_k8s_app_controller"
        },
        {
          "digest": "sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "image": "docker.io/entando/entando-k8s-app-plugin-link-controller@sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "name": "entando_k8s_app_plugin_link_controller"
        },
        {
          "digest": "sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "image": "docker.io/entando/entando-k8s-cluster-infrastructure-controller@sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "name": "entando_k8s_cluster_infrastructure_controller"
        },
        {
          "digest": "sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "image": "docker.io/entando/entando-k8s-composite-app-controller@sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "name": "entando_k8s_composite_app_controller"
        },
        {
          "digest": "sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "image": "docker.io/entando/entando-k8s-database-service-controller@sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "name": "entando_k8s_database_service_controller"
        },
        {
          "digest": "sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "image": "docker.io/entando/entando-k8s-dbjob@sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "name": "entando_k8s_dbjob"
        },
        {
          "digest": "sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "image": "docker.io/entando/entando-k8s-keycloak-controller@sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "name": "entando_k8s_keycloak_controller"
        },
        {
          "digest": "sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "image": "docker.io/entando/entando-k8s-plugin-controller@sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "name": "entando_k8s_plugin_controller"
        },
        {
          "digest": "sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "image": "docker.io/entando/entando-k8s-service@sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "name": "entando_k8s_service"
        },
        {
          "digest": "sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "image": "docker.io/entando/entando-redhat-sso@sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "name": "entando_redhat_sso"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "6.3.2-pr4",
      "version_original": "6.3.2-pr4"
    },
    {
      "_id": "61a57c153e9240fca360f554",
      "alm_examples": [
        {
          "api_version": "federatorai.containers.ai/v1alpha1",
          "kind": "AlamedaService",
          "metadata": {
            "name": "my-alamedaservice"
          },
          "spec": {
            "alamedaAi": {
              "storages": [
                {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "size": "10Gi",
                  "type": "pvc",
                  "usage": "data"
                }
              ]
            },
            "alamedaInfluxdb": {
              "storages": [
                {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "size": "100Gi",
                  "type": "pvc",
                  "usage": "data"
                }
              ]
            },
            "fedemeterInfluxdb": {
              "storages": [
                {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "size": "10Gi",
                  "type": "pvc",
                  "usage": "data"
                }
              ]
            },
            "imageLocation": "registry.connect.redhat.com/prophetstor",
            "keycode": {
              "codeNumber": ""
            },
            "storages": [
              {
                "accessMode": [
                  "ReadWriteOnce"
                ],
                "size": "2Gi",
                "type": "pvc",
                "usage": "log"
              }
            ],
            "version": "v4.6.1-b1655-2"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/prophetstor/federatorai-operator-bundle@sha256:66fa5c8e525ce32eef696b286ba2278c0fca6be668bda76d28f5f78dc45c37e3",
      "bundle_path_digest": "sha256:66fa5c8e525ce32eef696b286ba2278c0fca6be668bda76d28f5f78dc45c37e3",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:19:17.150000+00:00",
      "csv_description": "Federator.ai helps enterprises optimize cloud resources, maximize application performance, and save significant cost without excessive over-provisioning or under-provisioning of resources, meeting the service-level requirements of their applications.\n\nEnterprises often lack understanding of the resources needed to support their applications. This leads to either excessive over-provisioning or under-provisioning of resources (CPU, memory, storage). Using machine learning, Federator.ai determines the optimal cloud resources needed to support any workload on OpenShift and helps users find the best-cost instances from cloud providers for their applications.\n\n\n**Multi-layer workload prediction**\n\nUsing machine learning and math-based algorithms, Federator.ai predicts containerized application and cluster node resource usage as the basis for resource recommendations at application level as well as at cluster node level. Federator.ai supports prediction for both physical/virtual CPUs and memories.\n\n\n**Auto-scaling via resource recommendation**\n\nFederator.ai utilizes the predicted resource usage to recommend the right number and size of pods for applications. Integrated with Datadog's WPA, applications are automatically scaled to meet the predicted resource usage.\n\n\n**Application-aware recommendation execution**\n\nOptimizing the resource usage and performance goals, Federator.ai uses application specific metrics for workload prediction and pod capacity estimation to auto-scale the right number of pods for best performance without overprovisioning.\n\n\n**Multi-cloud Cost Analysis**\n\nWith resource usage prediction, Federator.ai analyzes potential cost of a cluster on different public cloud providers. It also recommend appropriate cluster nodes and instance types based on resource usage.\n\n\n**Custom Datadog/Sysdig Dashboards**\n\nPredefined custom Datadog/Sysdig Dashboards for workload prediction/recommendation visualization for cluster nodes and applications.\n\n\n**Additional resources**\n\nWant more product information? Explore detailed information about using this product and where to find additional help.\n\n* [Federator.ai Datasheet](https://prophetstor.com/wp-content/uploads/datasheets/Federator.ai.pdf)\n* [Quick Start Guide](https://prophetstor.com/wp-content/uploads/documentation/Federator.ai/Latest%20Version/ProphetStor%20Federator.ai%20Quick%20Installation%20Guide.pdf)\n* [Installation Guide](https://prophetstor.com/wp-content/uploads/2021/07/ProphetStor-Federator.ai-v4.6.1-Installation-Guide-v1.0.pdf)\n* [User Guide](https://prophetstor.com/wp-content/uploads/2021/07/Federator.ai-4.6.1-User-Guide.pdf)\n* [Company Information](https://www.prophetstor.com/)\n\n\n### Prerequisite\n*  The [Openshift](https://www.openshift.com) version 4.4.x or later if using OpenShift platform.\n*  The [Kubernetes](https://kubernetes.io/) version 1.16 or later if using Kubernetes environment.",
      "csv_display_name": "Federator.ai",
      "csv_metadata_description": "Federator.ai Operator provides easy configuration and management of AI-based Kubernetes resource orchestrator",
      "csv_name": "federatorai.v4.6.1-4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:46:02.429000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "federatorai-certified",
      "provided_apis": [
        {
          "group": "federatorai.containers.ai",
          "kind": "AlamedaService",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:2c7070dcd426598c97e528b4fbc79de5585c4aeb4e5902406435a9e6d7e3bf0d",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-operator@sha256:2c7070dcd426598c97e528b4fbc79de5585c4aeb4e5902406435a9e6d7e3bf0d",
          "name": "federatorai-operator-2c7070dcd426598c97e528b4fbc79de5585c4aeb4e5902406435a9e6d7e3bf0d-annotation"
        },
        {
          "digest": "sha256:2c7070dcd426598c97e528b4fbc79de5585c4aeb4e5902406435a9e6d7e3bf0d",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-operator@sha256:2c7070dcd426598c97e528b4fbc79de5585c4aeb4e5902406435a9e6d7e3bf0d",
          "name": "federatorai-operator"
        },
        {
          "digest": "sha256:2c7070dcd426598c97e528b4fbc79de5585c4aeb4e5902406435a9e6d7e3bf0d",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-operator@sha256:2c7070dcd426598c97e528b4fbc79de5585c4aeb4e5902406435a9e6d7e3bf0d",
          "name": "upgrader"
        },
        {
          "digest": "sha256:17aed4cd6a97f8ee5655660d2d13911e7c99c9f304b2fa09de891e4bf3141c69",
          "image": "registry.connect.redhat.com/prophetstor/alameda-ai-dispatcher@sha256:17aed4cd6a97f8ee5655660d2d13911e7c99c9f304b2fa09de891e4bf3141c69",
          "name": "ai_dispatcher"
        },
        {
          "digest": "sha256:0f946dde5fcb2f631153ea778ea24cac3e53b052a6bc97d09a0d2c04a8860446",
          "image": "registry.connect.redhat.com/prophetstor/alameda-ai@sha256:0f946dde5fcb2f631153ea778ea24cac3e53b052a6bc97d09a0d2c04a8860446",
          "name": "ai_engine"
        },
        {
          "digest": "sha256:222f6166fef3c74f187446adf5ab6361a03231eabab88a54ebd8f6f2a0ebd5c4",
          "image": "registry.connect.redhat.com/prophetstor/alameda-analyzer-ubi@sha256:222f6166fef3c74f187446adf5ab6361a03231eabab88a54ebd8f6f2a0ebd5c4",
          "name": "analyzer"
        },
        {
          "digest": "sha256:7601000fdaf7b937847cea40c4ac1b60ab843b1439e8a0c7e9dc4723408055ba",
          "image": "registry.connect.redhat.com/prophetstor/alameda-datahub-ubi@sha256:7601000fdaf7b937847cea40c4ac1b60ab843b1439e8a0c7e9dc4723408055ba",
          "name": "datahub"
        },
        {
          "digest": "sha256:d59db2fa0cdf0b0a66955297174641bef668db1d010e306b2bb711756ca57c38",
          "image": "registry.connect.redhat.com/prophetstor/alameda-executor-ubi@sha256:d59db2fa0cdf0b0a66955297174641bef668db1d010e306b2bb711756ca57c38",
          "name": "executor"
        },
        {
          "digest": "sha256:ae1e6994e8e1414a117308d7fb24bccfb093aaa8492d1d357a26f9e2ab7acf7c",
          "image": "registry.connect.redhat.com/prophetstor/fedemeter-api-ubi@sha256:ae1e6994e8e1414a117308d7fb24bccfb093aaa8492d1d357a26f9e2ab7acf7c",
          "name": "fedemeter_api"
        },
        {
          "digest": "sha256:d3b5505dd4fe688071f2d685773ed691cebcb04ff35eaf41e4f7a0331ff6e688",
          "image": "registry.connect.redhat.com/prophetstor/fedemeter-influxdb@sha256:d3b5505dd4fe688071f2d685773ed691cebcb04ff35eaf41e4f7a0331ff6e688",
          "name": "fedemeter_influxdb"
        },
        {
          "digest": "sha256:c5c2794413aea8384e8325a8cd9d86b4ec29ee5652e6b3bd172f15269e1d8ae0",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-agent-ubi@sha256:c5c2794413aea8384e8325a8cd9d86b4ec29ee5652e6b3bd172f15269e1d8ae0",
          "name": "federatorai_agent"
        },
        {
          "digest": "sha256:468dfd11a6877103809cb17f56165d06e00d93a3c89411307249f921289fc1e4",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-agent-preloader@sha256:468dfd11a6877103809cb17f56165d06e00d93a3c89411307249f921289fc1e4",
          "name": "federatorai_agent_preloader"
        },
        {
          "digest": "sha256:5a552ec0a78ae167ad7ff8dbdb02ac3de49d60df49bcbe6ca11091077e744a12",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-dashboard-frontend@sha256:5a552ec0a78ae167ad7ff8dbdb02ac3de49d60df49bcbe6ca11091077e744a12",
          "name": "federatorai_dashboard_frontend"
        },
        {
          "digest": "sha256:77709a35443202cffd2ef4df9daabd6a00ab4e536525ce99a9fd4203a0669e9a",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-dashboard-backend@sha256:77709a35443202cffd2ef4df9daabd6a00ab4e536525ce99a9fd4203a0669e9a",
          "name": "federatorai_dashboard_backend"
        },
        {
          "digest": "sha256:9c4ce48758ea58003cd25351c440e9aa12664cd59ee75bed8063374815f4d4da",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-data-adapter@sha256:9c4ce48758ea58003cd25351c440e9aa12664cd59ee75bed8063374815f4d4da",
          "name": "federatorai_data_adapter"
        },
        {
          "digest": "sha256:801059280ae54de7eaa518f5701ea320696e5aa83b3cd7ef3ad82ba1e3e1d395",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-rest-ubi@sha256:801059280ae54de7eaa518f5701ea320696e5aa83b3cd7ef3ad82ba1e3e1d395",
          "name": "federatorai_restapi"
        },
        {
          "digest": "sha256:a20096b566e7dde77e7e5885a60d47e6c8824f8db896f20b90676d14f7d2bcc8",
          "image": "registry.connect.redhat.com/prophetstor/alameda-influxdb@sha256:a20096b566e7dde77e7e5885a60d47e6c8824f8db896f20b90676d14f7d2bcc8",
          "name": "influxdb"
        },
        {
          "digest": "sha256:87afe424d8d205b8a2f01262e3edac73e8f3eee0aa597610b8a4ee57e17f4ac0",
          "image": "registry.connect.redhat.com/prophetstor/alameda-notifier-ubi@sha256:87afe424d8d205b8a2f01262e3edac73e8f3eee0aa597610b8a4ee57e17f4ac0",
          "name": "notifier"
        },
        {
          "digest": "sha256:d4fceace6cc1f0e80b8b6abe870ec9722ea69e91c481246b13e3d50a2c3e1ffb",
          "image": "registry.connect.redhat.com/prophetstor/alameda-operator-ubi@sha256:d4fceace6cc1f0e80b8b6abe870ec9722ea69e91c481246b13e3d50a2c3e1ffb",
          "name": "operator"
        },
        {
          "digest": "sha256:2b61bfd1ba9186cc50b8f960f54d0ec94643715292bb874762009b3045477799",
          "image": "registry.connect.redhat.com/prophetstor/alameda-rabbitmq@sha256:2b61bfd1ba9186cc50b8f960f54d0ec94643715292bb874762009b3045477799",
          "name": "rabbitmq"
        },
        {
          "digest": "sha256:288cb6c29200d07451b8e2ab53b9a5112108cb5f2b6dc288026f9c2f12f5f9fd",
          "image": "registry.connect.redhat.com/prophetstor/alameda-recommender-ubi@sha256:288cb6c29200d07451b8e2ab53b9a5112108cb5f2b6dc288026f9c2f12f5f9fd",
          "name": "recommender"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "4.6.1-4",
      "version_original": "4.6.1-4"
    },
    {
      "_id": "61a57c1dbfd4a5234d5960d5",
      "alm_examples": [
        {
          "api_version": "federatorai.containers.ai/v1alpha1",
          "kind": "AlamedaService",
          "metadata": {
            "name": "my-alamedaservice"
          },
          "spec": {
            "alamedaAi": {
              "storages": [
                {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "size": "10Gi",
                  "type": "pvc",
                  "usage": "data"
                }
              ]
            },
            "alamedaInfluxdb": {
              "storages": [
                {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "size": "100Gi",
                  "type": "pvc",
                  "usage": "data"
                }
              ]
            },
            "fedemeterInfluxdb": {
              "storages": [
                {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "size": "10Gi",
                  "type": "pvc",
                  "usage": "data"
                }
              ]
            },
            "imageLocation": "registry.connect.redhat.com/prophetstor",
            "storages": [
              {
                "accessMode": [
                  "ReadWriteOnce"
                ],
                "size": "2Gi",
                "type": "pvc",
                "usage": "log"
              }
            ],
            "version": "v4.7.1-b1760"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/prophetstor/federatorai-operator-bundle@sha256:d0ac978d749654ddf4cc20823805ba7d33ee62e9a7ec98fdd53d9926b697c347",
      "bundle_path_digest": "sha256:d0ac978d749654ddf4cc20823805ba7d33ee62e9a7ec98fdd53d9926b697c347",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:19:25.850000+00:00",
      "csv_description": "Federator.ai helps enterprises optimize cloud resources, maximize application performance, and save significant cost without excessive over-provisioning or under-provisioning of resources, meeting the service-level requirements of their applications.\n\nEnterprises often lack understanding of the resources needed to support their applications. This leads to either excessive over-provisioning or under-provisioning of resources (CPU, memory, storage). Using machine learning, Federator.ai determines the optimal cloud resources needed to support any workload on OpenShift and helps users find the best-cost instances from cloud providers for their applications.\n\n\n**Multi-layer workload prediction**\n\nUsing machine learning and math-based algorithms, Federator.ai predicts containerized application and cluster node resource usage as the basis for resource recommendations at application level as well as at cluster node level. Federator.ai supports prediction for both physical/virtual CPUs and memories.\n\n\n**Auto-scaling via resource recommendation**\n\nFederator.ai utilizes the predicted resource usage to recommend the right number and size of pods for applications. Integrated with Datadog's WPA, applications are automatically scaled to meet the predicted resource usage.\n\n\n**Application-aware recommendation execution**\n\nOptimizing the resource usage and performance goals, Federator.ai uses application specific metrics for workload prediction and pod capacity estimation to auto-scale the right number of pods for best performance without overprovisioning.\n\n\n**Multi-cloud Cost Analysis**\n\nWith resource usage prediction, Federator.ai analyzes potential cost of a cluster on different public cloud providers. It also recommend appropriate cluster nodes and instance types based on resource usage.\n\n\n**Custom Datadog/Sysdig Dashboards**\n\nPredefined custom Datadog/Sysdig Dashboards for workload prediction/recommendation visualization for cluster nodes and applications.\n\n\n**Additional resources**\n\nWant more product information? Explore detailed information about using this product and where to find additional help.\n\n* [Federator.ai Datasheet](https://prophetstor.com/wp-content/uploads/datasheets/Federator.ai.pdf)\n* [Quick Start Guide](https://prophetstor.com/wp-content/uploads/documentation/Federator.ai/Latest%20Version/ProphetStor%20Federator.ai%20Quick%20Installation%20Guide.pdf)\n* [Installation Guide](https://prophetstor.com/wp-content/uploads/2021/08/ProphetStor-Federator.ai-v4.7.0-Installation-Guide-v1.0.pdf)\n* [User Guide](https://prophetstor.com/wp-content/uploads/2021/08/Federator.ai-4.7.0-User-Guide.pdf)\n* [Release Notes](https://prophetstor.com/wp-content/uploads/2021/08/Federator.ai-4.7.0-Release-Notes.pdf)\n* [Company Information](https://www.prophetstor.com/)\n\n\n### Prerequisite\n*  The [Openshift](https://www.openshift.com) version 4.4.x or later if using OpenShift platform.\n*  The [Kubernetes](https://kubernetes.io/) version 1.16 or later if using Kubernetes environment.",
      "csv_display_name": "Federator.ai",
      "csv_metadata_description": "Federator.ai Operator provides easy configuration and management of AI-based Kubernetes resource orchestrator",
      "csv_name": "federatorai.v4.7.1-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:46:09.088000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "federatorai-certified",
      "provided_apis": [
        {
          "group": "federatorai.containers.ai",
          "kind": "AlamedaService",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:bdd87f6b7d7ba9d12ed8ddb9c5151e5a89781e88d7a02b73814b16a766968047",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-operator@sha256:bdd87f6b7d7ba9d12ed8ddb9c5151e5a89781e88d7a02b73814b16a766968047",
          "name": "federatorai-operator-bdd87f6b7d7ba9d12ed8ddb9c5151e5a89781e88d7a02b73814b16a766968047-annotation"
        },
        {
          "digest": "sha256:bdd87f6b7d7ba9d12ed8ddb9c5151e5a89781e88d7a02b73814b16a766968047",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-operator@sha256:bdd87f6b7d7ba9d12ed8ddb9c5151e5a89781e88d7a02b73814b16a766968047",
          "name": "federatorai-operator"
        },
        {
          "digest": "sha256:bdd87f6b7d7ba9d12ed8ddb9c5151e5a89781e88d7a02b73814b16a766968047",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-operator@sha256:bdd87f6b7d7ba9d12ed8ddb9c5151e5a89781e88d7a02b73814b16a766968047",
          "name": "upgrader"
        },
        {
          "digest": "sha256:6e0dc1136b0f8e5971d92b95ce0d6dfac475044c073bada50f23b315f4478ae4",
          "image": "registry.connect.redhat.com/prophetstor/alameda-ai-dispatcher@sha256:6e0dc1136b0f8e5971d92b95ce0d6dfac475044c073bada50f23b315f4478ae4",
          "name": "ai_dispatcher"
        },
        {
          "digest": "sha256:9293298bb2a72d0b0764050b6f6d8da707b46a83363a3b6aa7be60f512e2ec61",
          "image": "registry.connect.redhat.com/prophetstor/alameda-ai@sha256:9293298bb2a72d0b0764050b6f6d8da707b46a83363a3b6aa7be60f512e2ec61",
          "name": "ai_engine"
        },
        {
          "digest": "sha256:6117ac4692793d49bc0204f13091dec119bdbc7b169e9deb86c243aca00ded27",
          "image": "registry.connect.redhat.com/prophetstor/alameda-analyzer-ubi@sha256:6117ac4692793d49bc0204f13091dec119bdbc7b169e9deb86c243aca00ded27",
          "name": "analyzer"
        },
        {
          "digest": "sha256:3819d6acce8d376dbe3b12469be2528d0ce9ac95c2a86507aeb76b6e3a5f5f38",
          "image": "registry.connect.redhat.com/prophetstor/alameda-datahub-ubi@sha256:3819d6acce8d376dbe3b12469be2528d0ce9ac95c2a86507aeb76b6e3a5f5f38",
          "name": "datahub"
        },
        {
          "digest": "sha256:4512e3be7a89d0ca9f120b68f6ab9766d000bf2b01b279cd55b2dbc433aacfb6",
          "image": "registry.connect.redhat.com/prophetstor/alameda-executor-ubi@sha256:4512e3be7a89d0ca9f120b68f6ab9766d000bf2b01b279cd55b2dbc433aacfb6",
          "name": "executor"
        },
        {
          "digest": "sha256:451456207fe8d16b9824b3f64d00645766dcccbc8d685b6942e6c00d0d0c627e",
          "image": "registry.connect.redhat.com/prophetstor/fedemeter-api-ubi@sha256:451456207fe8d16b9824b3f64d00645766dcccbc8d685b6942e6c00d0d0c627e",
          "name": "fedemeter_api"
        },
        {
          "digest": "sha256:36904f003e8e29d4a9fd738655f401fbe840d60158d7d820cda79a09858dc2c2",
          "image": "registry.connect.redhat.com/prophetstor/fedemeter-influxdb@sha256:36904f003e8e29d4a9fd738655f401fbe840d60158d7d820cda79a09858dc2c2",
          "name": "fedemeter_influxdb"
        },
        {
          "digest": "sha256:cfadc84f31f3776ded15d4d8dda92e00b7d9b1bce0ff5440277176292f9304d3",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-agent-ubi@sha256:cfadc84f31f3776ded15d4d8dda92e00b7d9b1bce0ff5440277176292f9304d3",
          "name": "federatorai_agent"
        },
        {
          "digest": "sha256:66daea6193e399f8363df5ba42e1fcd643db6df3a9075dbcd8c3464fdc91e776",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-agent-preloader@sha256:66daea6193e399f8363df5ba42e1fcd643db6df3a9075dbcd8c3464fdc91e776",
          "name": "federatorai_agent_preloader"
        },
        {
          "digest": "sha256:1c1147425ca6302103363a1a3bcf27baeef13b10ec6780ef266b7f52fe27ffeb",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-dashboard-frontend@sha256:1c1147425ca6302103363a1a3bcf27baeef13b10ec6780ef266b7f52fe27ffeb",
          "name": "federatorai_dashboard_frontend"
        },
        {
          "digest": "sha256:022dbf6696edb8eaf389fdbd1dff14c40a51c237c01f8a02a7ea65c60cd59f38",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-dashboard-backend@sha256:022dbf6696edb8eaf389fdbd1dff14c40a51c237c01f8a02a7ea65c60cd59f38",
          "name": "federatorai_dashboard_backend"
        },
        {
          "digest": "sha256:adf5d655fa030dc05133516d45642d7282fdd66e0aa8e7a7331ed614a41d3fe0",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-data-adapter@sha256:adf5d655fa030dc05133516d45642d7282fdd66e0aa8e7a7331ed614a41d3fe0",
          "name": "federatorai_data_adapter"
        },
        {
          "digest": "sha256:3e92528615543ea900bf38387c4eb8439b60759be5be2ac5311a9dbaafc7026b",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-rest-ubi@sha256:3e92528615543ea900bf38387c4eb8439b60759be5be2ac5311a9dbaafc7026b",
          "name": "federatorai_restapi"
        },
        {
          "digest": "sha256:485c2119a6a56807e28ad03b2087129950118b55531126a66bb414063052ae76",
          "image": "registry.connect.redhat.com/prophetstor/alameda-influxdb@sha256:485c2119a6a56807e28ad03b2087129950118b55531126a66bb414063052ae76",
          "name": "influxdb"
        },
        {
          "digest": "sha256:1f75034fb78d62924a87cb4a5435661b4afa990d6960431e784029742fbae0da",
          "image": "registry.connect.redhat.com/prophetstor/alameda-notifier-ubi@sha256:1f75034fb78d62924a87cb4a5435661b4afa990d6960431e784029742fbae0da",
          "name": "notifier"
        },
        {
          "digest": "sha256:9a863394cb1c89228223b26addb0d12bb91a97233fe2d5d19ecd5998e0cfe0d6",
          "image": "registry.connect.redhat.com/prophetstor/alameda-operator-ubi@sha256:9a863394cb1c89228223b26addb0d12bb91a97233fe2d5d19ecd5998e0cfe0d6",
          "name": "operator"
        },
        {
          "digest": "sha256:b396d9aa0470e593a36f5799c04fc3c9e59b5723f703f4b019f7ef92528e6741",
          "image": "registry.connect.redhat.com/prophetstor/alameda-rabbitmq@sha256:b396d9aa0470e593a36f5799c04fc3c9e59b5723f703f4b019f7ef92528e6741",
          "name": "rabbitmq"
        },
        {
          "digest": "sha256:13e941df9252cea3024ecb5e2247a696b64928015c1a3a4a04ee4e362388b1e4",
          "image": "registry.connect.redhat.com/prophetstor/alameda-recommender-ubi@sha256:13e941df9252cea3024ecb5e2247a696b64928015c1a3a4a04ee4e362388b1e4",
          "name": "federatorai_recommend_dispatcher"
        },
        {
          "digest": "sha256:13e941df9252cea3024ecb5e2247a696b64928015c1a3a4a04ee4e362388b1e4",
          "image": "registry.connect.redhat.com/prophetstor/alameda-recommender-ubi@sha256:13e941df9252cea3024ecb5e2247a696b64928015c1a3a4a04ee4e362388b1e4",
          "name": "federatorai_recommend_worker"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "4.7.1-1",
      "version_original": "4.7.1-1"
    },
    {
      "_id": "61a57c26c17162a20c1c6887",
      "alm_examples": [
        {
          "kind": "Runner",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "gitlabUrl": "https://gitlab.com",
            "imagePullPolicy": "Always",
            "tags": "openshift, test",
            "token": "gitlab-dev-runner-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-runner-operator-bundle@sha256:abe1504fedbf38bc1cb45e5393216bae9cca95066ca84fa730c7e8b129930074",
      "bundle_path_digest": "sha256:abe1504fedbf38bc1cb45e5393216bae9cca95066ca84fa730c7e8b129930074",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:19:34.641000+00:00",
      "csv_description": "GitLab Runner is the lightweight, highly-scalable agent that runs your build jobs and sends the results back to a GitLab instance. GitLab Runner works in conjunction with GitLab CI/CD, the open-source continuous integration service included with GitLab.\n\nThe GitLab Runner operator manages the lifecycle of GitLab Runner in Kubernetes or Openshift clusters. The operator aims to automate the tasks needed to run your CI/CD jobs in your container orchestration platform.\n\n## Usage\n\n To link a GitLab Runner instance to a self-hosted GitLab instance or the hosted [GitLab](https://gitlab.com), you first need to:\n\n 1. create a secret containing the `runner-registration-token` from your GitLab project.\n\n   ```\n  cat > gitlab-runner-secret.yml << EOF\n  apiVersion: v1\n  kind: Secret\n  metadata:\n    name: gitlab-runner-secret\n  type: Opaque\n  stringData:\n    runner-registration-token: REPLACE_ME # your project runner secret\n  EOF\n  ```\n\n  ```\n  oc apply -f gitlab-runner-secret.yml\n  ```\n\n 2. Create the Custom Resource Definition (CRD) file and include the following information. The tags value must be openshift for the job to run.\n\n   ```\n   cat > gitlab-runner.yml << EOF\n   apiVersion: apps.gitlab.com/v1beta2\n   kind: Runner\n   metadata:\n     name: gitlab-runner\n   spec:\n     gitlabUrl: https://gitlab.example.com\n     buildImage: alpine\n     token: gitlab-runner-secret\n     tags: openshift\n   EOF\n   ```\n\n  ```\n  oc apply -f gitlab-runner.yml\n  ```\n\n## Full documentation\n\nVisit [Install GitLab Runner on Red Hat OpenShift](https://docs.gitlab.com/runner/install/openshift.html)\n",
      "csv_display_name": "GitLab Runner",
      "csv_metadata_description": "GitLab Runner operator manages lifecycle of GitLab Runner instances",
      "csv_name": "gitlab-runner-operator.v1.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:28:31.010000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "gitlab-runner-operator",
      "provided_apis": [
        {
          "group": "apps.gitlab.com",
          "kind": "Runner",
          "version": "v1beta2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f48d93d89905284a35a72ec312ad4313bb1a42deaaab662eb181a65d34a89cd9",
          "image": "registry.connect.redhat.com/gitlab/gitlab-runner@sha256:f48d93d89905284a35a72ec312ad4313bb1a42deaaab662eb181a65d34a89cd9",
          "name": "gitlab-runner"
        },
        {
          "digest": "sha256:9148c4c10685871e3bbed037d9c36e85f0603da38e721c5db2a85b9c6defeac9",
          "image": "registry.connect.redhat.com/gitlab/gitlab-runner-helper@sha256:9148c4c10685871e3bbed037d9c36e85f0603da38e721c5db2a85b9c6defeac9",
          "name": "gitlab-runner-helper"
        },
        {
          "digest": "sha256:6ac79da50858f82949e1dae4a016cbe86b75de977fe747a958d28dcd5c8e4080",
          "image": "registry.connect.redhat.com/gitlab/gitlab-runner-operator@sha256:6ac79da50858f82949e1dae4a016cbe86b75de977fe747a958d28dcd5c8e4080",
          "name": "gitlab-runner-operator"
        },
        {
          "digest": "sha256:dc0f91e256c86c3f7cb930d0e4d48eb68576425bc4bd288fb76decb0577c7e9e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:dc0f91e256c86c3f7cb930d0e4d48eb68576425bc4bd288fb76decb0577c7e9e",
          "name": "kube-rbac-proxy"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.2.0",
      "version_original": "1.2.0"
    },
    {
      "_id": "61a57c30c17162a20c1c6888",
      "alm_examples": [
        {
          "kind": "Runner",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "gitlabUrl": "https://gitlab.com",
            "imagePullPolicy": "Always",
            "tags": "openshift, test",
            "token": "gitlab-dev-runner-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-runner-operator-bundle@sha256:a983d27fdb8e3c63bdbf40efe22a2ab62016c3ca75040c2f1a4b429278d72731",
      "bundle_path_digest": "sha256:a983d27fdb8e3c63bdbf40efe22a2ab62016c3ca75040c2f1a4b429278d72731",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:19:44.619000+00:00",
      "csv_description": "GitLab Runner is the lightweight, highly-scalable agent that runs your build jobs and sends the results back to a GitLab instance. GitLab Runner works in conjunction with GitLab CI/CD, the open-source continuous integration service included with GitLab.\n\nThe GitLab Runner operator manages the lifecycle of GitLab Runner in Kubernetes or Openshift clusters. The operator aims to automate the tasks needed to run your CI/CD jobs in your container orchestration platform.\n\n## Usage\n\n To link a GitLab Runner instance to a self-hosted GitLab instance or the hosted [GitLab](https://gitlab.com), you first need to:\n\n 1. create a secret containing the `runner-registration-token` from your GitLab project.\n\n   ```\n  cat > gitlab-runner-secret.yml << EOF\n  apiVersion: v1\n  kind: Secret\n  metadata:\n    name: gitlab-runner-secret\n  type: Opaque\n  stringData:\n    runner-registration-token: REPLACE_ME # your project runner secret\n  EOF\n  ```\n\n  ```\n  oc apply -f gitlab-runner-secret.yml\n  ```\n\n 2. Create the Custom Resource Definition (CRD) file and include the following information. The tags value must be openshift for the job to run.\n\n   ```\n   cat > gitlab-runner.yml << EOF\n   apiVersion: apps.gitlab.com/v1beta2\n   kind: Runner\n   metadata:\n     name: gitlab-runner\n   spec:\n     gitlabUrl: https://gitlab.example.com\n     buildImage: alpine\n     token: gitlab-runner-secret\n     tags: openshift\n   EOF\n   ```\n\n  ```\n  oc apply -f gitlab-runner.yml\n  ```\n\n## Full documentation\n\nVisit [Install GitLab Runner on Red Hat OpenShift](https://docs.gitlab.com/runner/install/openshift.html)\n",
      "csv_display_name": "GitLab Runner",
      "csv_metadata_description": "GitLab Runner operator manages lifecycle of GitLab Runner instances",
      "csv_name": "gitlab-runner-operator.v1.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:28:34.362000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "gitlab-runner-operator",
      "provided_apis": [
        {
          "group": "apps.gitlab.com",
          "kind": "Runner",
          "version": "v1beta2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:4cd860f02a5c22208cebfdae751fdc27069a4c14442a9020024c576c700f0634",
          "image": "registry.connect.redhat.com/gitlab/gitlab-runner@sha256:4cd860f02a5c22208cebfdae751fdc27069a4c14442a9020024c576c700f0634",
          "name": "gitlab-runner"
        },
        {
          "digest": "sha256:272c50ca9ef77c92deac0ca302df9e0127d5c54609c35230f96cf1d91de5fe97",
          "image": "registry.connect.redhat.com/gitlab/gitlab-runner-helper@sha256:272c50ca9ef77c92deac0ca302df9e0127d5c54609c35230f96cf1d91de5fe97",
          "name": "gitlab-runner-helper"
        },
        {
          "digest": "sha256:c6572cb1c20713f2f582f8b436307e80c23dcac08c1d7bde37833fd266ef9618",
          "image": "registry.connect.redhat.com/gitlab/gitlab-runner-operator@sha256:c6572cb1c20713f2f582f8b436307e80c23dcac08c1d7bde37833fd266ef9618",
          "name": "gitlab-runner-operator"
        },
        {
          "digest": "sha256:dc0f91e256c86c3f7cb930d0e4d48eb68576425bc4bd288fb76decb0577c7e9e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:dc0f91e256c86c3f7cb930d0e4d48eb68576425bc4bd288fb76decb0577c7e9e",
          "name": "kube-rbac-proxy"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.4.0",
      "version_original": "1.4.0"
    },
    {
      "_id": "61a57c523e9240fca360f556",
      "alm_examples": [
        {
          "api_version": "storage.hpe.com/v1",
          "kind": "HPECSIDriver",
          "metadata": {
            "name": "csi-driver"
          },
          "spec": {
            "cspClientTimeout": 60,
            "disable": {
              "alletra6000": false,
              "alletra9000": false,
              "nimble": false,
              "primera": false
            },
            "disableNodeConformance": false,
            "disableNodeGetVolumeStats": false,
            "imagePullPolicy": "IfNotPresent",
            "iscsi": {
              "chapPassword": "",
              "chapUser": ""
            },
            "kubeletRootDir": "/var/lib/kubelet/",
            "logLevel": "info",
            "registry": "quay.io"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/csi-driver-operator-bundle@sha256:24d8008a3b72f61d720a20f0f12eecc5b13fdc0916edcb7cb0ae99498c012c9b",
      "bundle_path_digest": "sha256:24d8008a3b72f61d720a20f0f12eecc5b13fdc0916edcb7cb0ae99498c012c9b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:20:18.247000+00:00",
      "csv_description": "The HPE CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE storage systems.\nThe HPE CSI Driver for Kubernetes leverages HPE storage platforms to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://scod.hpedev.io/csi_driver/index.html) for supported HPE platforms and full list of supported CSI features.\n## Installation\nRefer to the HPE CSI Operator for Kubernetes [documentation](https://scod.hpedev.io/csi_driver/deployment.html#operator).\n",
      "csv_display_name": "HPE CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE storage platforms. The CSI driver allows you to use HPE storage with your preferred container orchestrator.",
      "csv_name": "hpe-csi-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:47:14.484000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "hpe-csi-operator",
      "provided_apis": [
        {
          "group": "storage.hpe.com",
          "kind": "HPECSIDriver",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "name": "csi-driver-operator-e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771-annotation"
        },
        {
          "digest": "sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "name": "hpe-csi-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "61a57c70bfd4a5234d5960d6",
      "alm_examples": [
        {
          "api_version": "ibm.com/v1",
          "kind": "IBMSecurityVerify",
          "metadata": {
            "name": "ibmsecurityverify-sample"
          },
          "spec": {
            "clientSecret": "--secret--",
            "sessionLifetime": 3600,
            "ssoPath": "/verify-sso"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/verify-operator-bundle@sha256:1a4b2faf029a41c1092664f10cd36b7b3eaa60f471885eb97b22c41899138fce",
      "bundle_path_digest": "sha256:1a4b2faf029a41c1092664f10cd36b7b3eaa60f471885eb97b22c41899138fce",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:20:48.047000+00:00",
      "csv_description": "[IBM Security Verify](https://www.ibm.com/products/verify-saas) is an Identity-as-a-Service platform that allows IT, security and business leaders to protect their digital users, assets and data in a hybrid, multi-cloud world by enabling technical agility and operational efficiency. IBM Security Verify SaaS provides single sign-on (SSO), multi-factor authentication (MFA), AI-powered context for risk-based authentication for adaptive access decisions, user management, access recertification campaigns and identity analytics.\n\nAs part of using Red Hat OpenShift, you are entitled to Verify SaaS SSO for unlimited apps and users.  If you do not already have a Verify SaaS SSO tenant a new one can be [created](https://www.ibm.com/account/reg/us-en/signup?formid=urx-51255).\n\nFor a detailed description of IBM Security Verify refer to the [Official documentation](https://www.ibm.com/docs/en/security-verify).\n\nThe IBM Security Verify operator can consistently enforce policy-driven security by using the Ingress networking capability of OpenShift in conjunction with the [Nginx Ingress operator](https://www.nginx.com/blog/getting-started-nginx-ingress-operator-red-hat-openshift/). With this approach, you can enforce authentication and authorization policies for all of the applications in your cluster at the same time, without ever changing your application code. You can also dynamically register your application to start protecting them centrally from the cloud via Verify SaaS. \n\nSee the project [Readme](https://github.com/IBM-Security/verify-operator/blob/master/README.md) for further information and details.\n\n",
      "csv_display_name": "IBM Security Verify Operator",
      "csv_metadata_description": "The IBM Security Verify operator can consistently enforce policy-driven security, including authentication and authorization, using the Ingress networking capability of OpenShift.",
      "csv_name": "ibm-security-verify-operator.v21.11.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:47:40.579000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "ibm-security-verify-operator",
      "provided_apis": [
        {
          "group": "ibm.com",
          "kind": "IBMSecurityVerify",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f6eeba8d714bff4ce0463ac90864b21091500a873dad40208f9e56f8e30ff94a",
          "image": "ibmcom/verify-operator@sha256:f6eeba8d714bff4ce0463ac90864b21091500a873dad40208f9e56f8e30ff94a",
          "name": "verify-operator-f6eeba8d714bff4ce0463ac90864b21091500a873dad40208f9e56f8e30ff94a-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:f6eeba8d714bff4ce0463ac90864b21091500a873dad40208f9e56f8e30ff94a",
          "image": "ibmcom/verify-operator@sha256:f6eeba8d714bff4ce0463ac90864b21091500a873dad40208f9e56f8e30ff94a",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "21.11.1",
      "version_original": "21.11.1"
    },
    {
      "_id": "61a57c79c17162a20c1c688a",
      "alm_examples": [
        {
          "kind": "InfoScaleCluster",
          "metadata": {
            "name": "infoscalecluster-dev"
          },
          "spec": {
            "clusterInfo": [
              {},
              {}
            ],
            "version": "8.0.0.0000"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-operator-bundle@sha256:aa898cb65de29ecae7075b30fd3b79ff5f2bedf6f6224fd104ad930be7e82dcd",
      "bundle_path_digest": "sha256:aa898cb65de29ecae7075b30fd3b79ff5f2bedf6f6224fd104ad930be7e82dcd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:20:57.340000+00:00",
      "csv_description": "## InfoScale\u2122 SDS Operator\n\nInfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster\n\n## Overview\n\n- Veritas InfoScale\u2122 delivers Infrastructure resiliency and persistent storage for your critical containerized applications for OpenShift\u00ae and Kubernetes Native deployments\n- Engineered to support stateful workloads generated for mission-critical containerized applications.\n\n---\n\n## Data Services & Benefits\n\n**1. Software-Defined Persistent Storage Volumes:** Enables customers to support multiple container application requirements leveraging existing SAN or DAS storage\n\n**2. CSI API Driver:** Facilitates static and dynamic provisioning for applications with RWX, RWO and ROX access modes\n\n**3. Life Cycle Management:** Enables automated deployment, configuration and upgrades of InfoScale Software-defined container images. Certified and Integrated with Red Hat OpenShift for a single-click deployment\n\n**4. Availability:** Provides scaling, mounting and/or movement of InfoScale persistent storage volumes on cluster nodes with minimal disruption\n\n**5. Data Integrity:** Prevents data corruption by allowing only the active cluster nodes to write to the volume. The I/O fencing feature recovers from cluster disruptions quickly by ensuring that application pods are moved to another node to continue normal operations\n\n**6. Point-in-Time Data Copies:** Create snapshots of Persistent Volumes for backup products, data analytics or forensic discovery and analysis\n\n**7. Disaster Recovery (DR) Tech Preview:** This DR feature provides the ability to test and validate disaster recovery capabilities by migrating Kubernetes cluster metadata and application components to peer cluster in case of a local or remote disaster\n\n---\n\n## Pre-requisites\n\n- [Please refer to pre-requisite section from official documentation](https://www.veritas.com/support/en_US/doc/151215298-151215302-0)\n\n## InfoScale Cluster custom resource\n\n```\nkind: InfoScaleCluster\nmetadata:\n  name:  < Infoscale Cluster Name >\n\nspec:\n  version: \"8.0.0.0000\"\n\n  clusterInfo:\n  - nodeName: <Name of the first node>\n  ip:\n  - <Optional - First IP address of the first node >\n  - <Optional - Second IP address of the first node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  - nodeName: <Name of the second node>\n  ip:\n  - <Optional - First IP address of the second node >\n  - <Optional - Second IP address of the second node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  # You can add up to 16 nodes.\n\n  licenseServer: < Optional - License server name/IP address >\n  licensePort: < Optional - License port number >\n\n  customImageRegistry: < Optional \u2013 Registry for Infoscale Container images>\n\n```\n\n#### Note\n\nYou can specify up to 16 worker nodes in CR. Although cluster configuration is allowed even with one Network Interface Card,\nVeritas recommends a minimum of two physical links for performance and High Availability (HA). Number of links for each network link must be same on all\nnodes. Optionally, you can enter node level IP addresses. If IP addresses are not provided, IP addresses of OpenShift cluster nodes are used.\n",
      "csv_display_name": "InfoScale\u2122 SDS Operator",
      "csv_metadata_description": "",
      "csv_name": "infoscale-operator.v7.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:29:11.151000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "infoscale-operator",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "InfoScaleCluster",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:686f4fa379400e1c2151f5086276625241b5674ed91e90f1b328c510ca1034f0",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:686f4fa379400e1c2151f5086276625241b5674ed91e90f1b328c510ca1034f0",
          "name": "manager"
        },
        {
          "digest": "sha256:686f4fa379400e1c2151f5086276625241b5674ed91e90f1b328c510ca1034f0",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:686f4fa379400e1c2151f5086276625241b5674ed91e90f1b328c510ca1034f0",
          "name": "pre-manager"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "7.9.1",
      "version_original": "7.9.1"
    },
    {
      "_id": "61a57c82bfd4a5234d5960d7",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/runai/runai-operator@sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "bundle_path_digest": "sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "fast",
      "creation_date": "2021-11-30T01:21:06.138000+00:00",
      "csv_description": "Run:AI is a cloud-native compute management platform for the AI era. Run:AI gives data scientists access to all of the pooled compute power they need to accelerate AI development and deployment - whether on-premises or in the cloud. The platform provides IT and MLOps with real-time visibility and control over scheduling and dynamic provisioning of GPUs to deliver more than 2X gains in utilization of existing GPU infrastructure. Built on Kubernetes, Run:AI enables seamless integration with existing IT and data science workflows. More at www.run.ai.",
      "csv_display_name": "Run:AI",
      "csv_metadata_description": "",
      "csv_name": "installkit-customer.v2.0.15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T16:49:30.492000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "installkit-customer",
      "provided_apis": [],
      "related_images": [
        {
          "digest": "sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "image": "gcr.io/runai-openshift/operator@sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "name": "operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.1.5",
      "version_original": "2.1.5"
    },
    {
      "_id": "61a57c8ac17162a20c1c688b",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/runai/runai-operator@sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "bundle_path_digest": "sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "preview",
      "creation_date": "2021-11-30T01:21:14.791000+00:00",
      "csv_description": "Run:AI is a cloud-native compute management platform for the AI era. Run:AI gives data scientists access to all of the pooled compute power they need to accelerate AI development and deployment - whether on-premises or in the cloud. The platform provides IT and MLOps with real-time visibility and control over scheduling and dynamic provisioning of GPUs to deliver more than 2X gains in utilization of existing GPU infrastructure. Built on Kubernetes, Run:AI enables seamless integration with existing IT and data science workflows. More at www.run.ai.",
      "csv_display_name": "Run:AI",
      "csv_metadata_description": "",
      "csv_name": "installkit-customer.v2.0.15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T16:49:36.457000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "installkit-customer",
      "provided_apis": [],
      "related_images": [
        {
          "digest": "sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "image": "gcr.io/runai-openshift/operator@sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "name": "operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.1.5",
      "version_original": "2.1.5"
    },
    {
      "_id": "61a57c923e9240fca360f559",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/runai/runai-operator@sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "bundle_path_digest": "sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:21:22.949000+00:00",
      "csv_description": "Run:AI is a cloud-native compute management platform for the AI era. Run:AI gives data scientists access to all of the pooled compute power they need to accelerate AI development and deployment - whether on-premises or in the cloud. The platform provides IT and MLOps with real-time visibility and control over scheduling and dynamic provisioning of GPUs to deliver more than 2X gains in utilization of existing GPU infrastructure. Built on Kubernetes, Run:AI enables seamless integration with existing IT and data science workflows. More at www.run.ai.",
      "csv_display_name": "Run:AI",
      "csv_metadata_description": "",
      "csv_name": "installkit-customer.v2.0.15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:49:42.519000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "installkit-customer",
      "provided_apis": [],
      "related_images": [
        {
          "digest": "sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "image": "gcr.io/runai-openshift/operator@sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "name": "operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.1.5",
      "version_original": "2.1.5"
    },
    {
      "_id": "61a57c9b27e166330707d965",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/iomesh/iomesh@sha256:27c5d91d62371f3cf0dea4d50044d8a6e0a6015a453c4216a030683ea2474c64",
      "bundle_path_digest": "sha256:27c5d91d62371f3cf0dea4d50044d8a6e0a6015a453c4216a030683ea2474c64",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:21:31.836000+00:00",
      "csv_description": "IOMesh (https://www.iomesh.com/) is a cloud-native storage product specifically designed and developed for Kubernetes. It takes ZBS as its core, a \u201cproduction-ready\u201d distributed storage system developed independently by SmartX, to provide production-level high performance and reliable persistent storage for business-critical applications such as MySQL, Cassandra, MongoDB, etc., contributing to the containerized transformation of stateful applications.      \n## Pre-Requisites\n* According to https://docs.iomesh.com/deploy/prerequisites, make sure that your openshift cluster meets the \"Installation Requirements\" and set up the worker nodes correctly according to the \"Setup Worker Node\" chapter.\n* Run IOMesh Operator pre-installation script in an environment where oc or kubectl can be used to access the openshift cluster, the script will install the dependencies of IOMesh Operator and specific IOMesh settings for the openshift cluster:\n```shell\ncurl -sSL https://iomesh.run/iomesh-operator-pre-install-openshift.sh | sh -\n```\n## Install IOMesh Operator and IOMesh Cluster\n* Click install button on the current web page to install IOMesh Operator\n* On the **Installed Operators** -> **IOMesh Operator** -> **Create instance** -> **YAML view**, fill in an IOMesh Custom Resources according https://iomesh.run/iomesh.yaml, change the `spec.*.dataCIDR` to your own data network CIDR:\n## Post Install\n* Run IOMesh Operator post-installation script in an environment where oc or kubectl can be used to access the openshift cluster, the script will install IOMesh CSI Driver\n```shell\ncurl -sSL https://iomesh.run/iomesh-operator-post-install-openshift.sh | sh -\n```\n## Getting Started\n* Try to quickstart setup and use IOMesh: https://docs.iomesh.com/deploy/setup-iomesh\n",
      "csv_display_name": "IOMesh Operator",
      "csv_metadata_description": "",
      "csv_name": "iomesh-operator.0.10.1-rc4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:49:54.985000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "iomesh-operator",
      "provided_apis": [
        {
          "group": "iomesh.com",
          "kind": "IOMeshCluster",
          "plural": "iomeshclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "image": "iomesh/operator@sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "name": "operator-52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3-annotation"
        },
        {
          "digest": "sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "image": "iomesh/operator@sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "name": "operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.10.1-rc4",
      "version_original": "0.10.1-rc4"
    },
    {
      "_id": "61a57ca427e166330707d966",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:b0e763b8e865c832348cc4a883a99af0be4b657f0b44b4419ca4d6066a3c7bed",
      "bundle_path_digest": "sha256:b0e763b8e865c832348cc4a883a99af0be4b657f0b44b4419ca4d6066a3c7bed",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:21:40.640000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:48:46.445000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:dffc105b4cf03f0b4f15c90786505ba5d660bf703bf11e19e80c90d93fece559",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:dffc105b4cf03f0b4f15c90786505ba5d660bf703bf11e19e80c90d93fece559",
          "name": "joget"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.0.20",
      "version_original": "0.0.20"
    },
    {
      "_id": "61a57cae3e9240fca360f55a",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:58e3af46a8b343a8a899cea5c01061f9fb3530713d7786cca289b198d72bacf6",
      "bundle_path_digest": "sha256:58e3af46a8b343a8a899cea5c01061f9fb3530713d7786cca289b198d72bacf6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:21:50.428000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.21",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:48:51.987000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:326789849a178bdea0e57f1b4649a4e92a2590579902e899932c733bc24409d3",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:326789849a178bdea0e57f1b4649a4e92a2590579902e899932c733bc24409d3",
          "name": "joget"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.0.21",
      "version_original": "0.0.21"
    },
    {
      "_id": "61a57cb7c17162a20c1c688c",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:d778e1d70bee8e4a17cac2ea9b04c82c747fd1d1f3859e846626f581f58f1ae3",
      "bundle_path_digest": "sha256:d778e1d70bee8e4a17cac2ea9b04c82c747fd1d1f3859e846626f581f58f1ae3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:21:59.698000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.22",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:48:58.959000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:f839152251e021fe0ae1d4bd9e5374c2a2fb3c01da4381ba4c01afcbaadbf8bd",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:f839152251e021fe0ae1d4bd9e5374c2a2fb3c01da4381ba4c01afcbaadbf8bd",
          "name": "joget"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.0.22",
      "version_original": "0.0.22"
    },
    {
      "_id": "61a57ce1c17162a20c1c688f",
      "alm_examples": [
        {
          "api_version": "core.k8s.kubemq.io/v1beta1",
          "kind": "KubemqCluster",
          "metadata": {
            "name": "kubemq-cluster"
          },
          "spec": {
            "replicas": 3
          }
        },
        {
          "api_version": "core.k8s.kubemq.io/v1beta1",
          "kind": "KubemqDashboard",
          "metadata": {
            "name": "kubemq-dashboard"
          }
        },
        {
          "api_version": "core.k8s.kubemq.io/v1beta1",
          "kind": "KubemqConnector",
          "metadata": {
            "name": "kubemq-bridges"
          },
          "spec": {
            "config": "bindings: null",
            "type": "bridges"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/kubemq/kubemq-operator-bundle@sha256:9009198860c7a1e0de4f429261d442b75b5b2893a943bb77914b14d643db8829",
      "bundle_path_digest": "sha256:9009198860c7a1e0de4f429261d442b75b5b2893a943bb77914b14d643db8829",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:22:41.997000+00:00",
      "csv_description": "\n## Kubernetes Messaging Platform\nA message-based architecture for microservices providing flexible connectivity for hybrid environments: multi-cloud, on-premises, and at the edge. Powered by enterprise-grade message broker and message queue with ready to use connectors, bridges, and control center.\n\nMessaging platform components:\n  - **KubeMQ Cluster** - Enterprise-grade message broker and message queue, scalable, high available, and secured.\n  - **KubeMQ Targets Connector** - connects a KubeMQ cluster with external systems and cloud services.\n  - **KubeMQ Bridges Connector** - bridge, replicate, aggregate, and transform messages between KubeMQ clusters.\n  - **KubeMQ Sources Connector** - transform external systems and cloud services data to KubeMQ cluster messages.\n  - **KubeMQ Dashboard** - monitor KubeMQ cluster metrics.\n\n### Kubernetes Native\nInnovative and modern message queue and message broker in a lightweight container developed to run in Kubernetes, certified in the CNCF landscape, and connect natively to the cloud-native ecosystem.\n\n### Ease of use\n\nSimple deployment in Kubernetes in less than 1 minute. Developer friendly by simple to use SDKs and elimination of the many developers and DevOps-centered challenges to define exchanges, brokers, channels, routes, and predefined topics\n\n### All messaging patterns\n\nKubeMQ is available with all messaging patterns such as Queue, Stream, Pub/Sub, and RPC, Saving the need to maintain multiple messaging platforms for different use cases.\n\n### Hybrid Environments\n\nKubeMQ enables the microservices from multiple environments to communicate and build one hybrid infrastructure solution across clouds, on-prem, and at the edge.\n\n### KubeMQ Cluster key features\n\n- All-batteries included Messaging Queue Broker for the Kubernetes environment\n- Deployed with Operator for full life cycle operation\n- Blazing fast (written in Go), small and lightweight Docker container\n- Asynchronous and Synchronous messaging with support for  `At Most Once Delivery` and `At Least Once Delivery` models\n- Supports durable FIFO based Queue, Publish-Subscribe Events, Publish-Subscribe with Persistence (Events Store), RPC Command and Query messaging patterns\n- Supports gRPC, Rest and WebSocket Transport protocols with TLS support (both RPC and Stream modes)\n- Supports Access control Authorization and Authentication\n- Supports message masticating and smart routing\n- No Message broker configuration needed (i.e., queues, exchanges)\n- .Net, Java, Python, Go, and NodeJS SDKs\n\n### KubeMQ Targets Connector key features\n\n- Runs anywhere - Kubernetes, Cloud, on-prem, anywhere\n- Stand-alone - small docker container / binary\n- Single Interface - One interface all the services\n- Any Service - Support all major services types (databases, cache, messaging, serverless, HTTP, etc.)\n- Plug-in Architecture Easy to extend, easy to connect\n- Middleware Supports - Logs, Metrics, Retries, and Rate Limiters\n- Easy Configuration - simple yaml file builds your topology\n\n[Check out Github page](https://github.com/kubemq-io/kubemq-targets)\n\n### KubeMQ Bridges Connector key features\n\n- Runs anywhere - Kubernetes, Cloud, on-prem, anywhere\n- Stand-alone - small docker container / binary\n- Build Any Topology - connects KubeMQ clusters in 1:1, 1:n , n:1, n:n\n- Middleware Supports - Logs, Metrics, Retries, and Rate Limiters\n- Easy Configuration - simple yaml file builds your topology\n\n[Check out Github page](https://github.com/kubemq-io/kubemq-bridges)\n\n### KubeMQ Sources Connector key features\n\n- Runs anywhere - Kubernetes, Cloud, on-prem, anywhere\n- Stand-alone - small docker container / binary\n- Single Interface - One interface all the services\n- Any Service - Support all major messaging services such as Kafka, ActiveMQ, SQS, and more.\n- Plug-in Architecture Easy to extend, easy to connect\n- Middleware Supports - Logs, Metrics, Retries, and Rate Limiters\n- Easy Configuration - simple yaml file builds your topology\n\n[Check out Github page](https://github.com/kubemq-io/kubemq-sources)\n\n## Getting Started\n\n[Start with OpenShift](https://docs.kubemq.io/getting-started/create-cluster/openshift)\n\n## Get Enterprise Trial License\n\n[Register](https://account.kubemq.io/login/register)\n\n## Request a Demo\n\n[See KubeMQ in Action](https://kubemq.io/request-a-demo/)",
      "csv_display_name": "Kubemq Enterprise Operator",
      "csv_metadata_description": "Kubernetes Messaging Platform",
      "csv_name": "kubemq-operator.v1.7.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:50:02.192000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "kubemq-operator-marketplace",
      "provided_apis": [
        {
          "group": "core.k8s.kubemq.io",
          "kind": "KubemqDashboard",
          "plural": "kubemqdashboards",
          "version": "v1beta1"
        },
        {
          "group": "core.k8s.kubemq.io",
          "kind": "KubemqCluster",
          "plural": "kubemqclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.k8s.kubemq.io",
          "kind": "KubemqCluster",
          "plural": "kubemqclusters",
          "version": "v1beta1"
        },
        {
          "group": "core.k8s.kubemq.io",
          "kind": "KubemqConnector",
          "plural": "kubemqconnectors",
          "version": "v1alpha1"
        },
        {
          "group": "core.k8s.kubemq.io",
          "kind": "KubemqConnector",
          "plural": "kubemqconnectors",
          "version": "v1beta1"
        },
        {
          "group": "core.k8s.kubemq.io",
          "kind": "KubemqDashboard",
          "plural": "kubemqdashboards",
          "version": "v1alpha1"
        }
      ],
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.7.8",
      "version_original": "1.7.8"
    },
    {
      "_id": "61a57cea3e9240fca360f55c",
      "alm_examples": [
        {
          "api_version": "linstor.linbit.com/v1",
          "kind": "LinstorController",
          "metadata": {
            "name": "linstor"
          },
          "spec": {
            "controllerImage": "",
            "dbConnectionURL": "etcd://linstor-etcd:2379",
            "drbdRepoCred": "",
            "priorityClassName": ""
          }
        },
        {
          "api_version": "linstor.linbit.com/v1",
          "kind": "LinstorCSIDriver",
          "metadata": {
            "name": "linstor"
          },
          "spec": {
            "controllerEndpoint": "http://linstor:3370",
            "controllerReplicas": 1,
            "csiControllerServiceAccountName": "csi-controller",
            "csiNodeServiceAccountName": "csi-node",
            "imagePullSecret": "",
            "linstorPluginImage": ""
          }
        },
        {
          "api_version": "linstor.linbit.com/v1",
          "kind": "LinstorSatelliteSet",
          "metadata": {
            "name": "linstor-satellites"
          },
          "spec": {
            "automaticStorageType": "None",
            "controllerEndpoint": "http://linstor:3370",
            "drbdRepoCred": "",
            "kernelModuleInjectionMode": "ShippedModules",
            "priorityClassName": "",
            "satelliteImage": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/linbit/linstor-operator-bundle@sha256:20c0b821db27ef8f551212d14ba508f88a116f92a9f9a214e79709744b96678b",
      "bundle_path_digest": "sha256:20c0b821db27ef8f551212d14ba508f88a116f92a9f9a214e79709744b96678b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:22:50.595000+00:00",
      "csv_description": "LINSTOR is a configuration management system for storage on Linux systems.\nIt manages LVM logical volumes and/or ZFS ZVOLs on a cluster of nodes.\nIt leverages DRBD for replication between different nodes and to provide block\nstorage devices to users and applications. It manages snapshots, encryption and\ncaching of HDD backed data in SSDs via bcache.\n\nLINBIT provides a certified LINSTOR operator to ease deployment of LINSTOR\non Openshift by installing DRBD, managing Satellite and Controller pods,\nand integrating with Openshift to provision persistent storage for your workloads.\n\nFor detailed instructions and more configuration options, see our [user guide].\n\n[user guide]: https://www.linbit.com/drbd-user-guide/linstor-guide-1_0-en/#ch-openshift\n\n## Install\n\nUnlike deployment via the helm chart, the certified Openshift\noperator does not deploy the needed etcd cluster. You must deploy this\nyourself ahead of time. We do this via the etcd operator available in the\nOperatorHub.\n\nIMPORTANT: It is advised that the etcd deployment uses persistent\nstorage of some type. Either use an existing storage provisioner with\na default `StorageClass` or simply use `hostPath` volumes.\n\n### Installing the operator\n\nHit \"Install\", select the stable update channel and a namespace for the\noperator. Use of a new namespace is recommended.\n\nHit \"Install\" again. At this point you should have just one pod, the\noperator pod, running. Next we needs to configure the remaining provided APIs.\n\n#### A note on operator namespaces\nThe LINSTOR operator can only watch for events and manage\ncustom resources that are within the same namespace it is deployed\nwithin (OwnNamsespace). This means the LINSTOR Controller, LINSTOR\nSatellites, and LINSTOR CSI Driver pods all need to be deployed in the\nsame namsepace as the LINSTOR Operator pod.\n\n### Deploying the LINSTOR Controller\n\nNavigate to the left-hand control pane of the Openshift Web\nConsole. Expand the \"Operators\" section, selecting \"Installed Operators\".\nFind the entry for the \"Linstor Operator\", then select the \"LinstorController\"\nfrom the \"Provided APIs\" column on the right.\n\nFrom here you should see a page that says \"No Operands Found\" and will\nfeature a large button on the right which says \"Create\nLinstorController\". Click the \"Create LinstorController\" button.\n\nHere you will be presented with options to configure the LINSTOR\nController. Either via the web-form view or the YAML View. Regardless\nof which view you select, make sure that the `dbConnectionURL` matches\nthe endpoint provided from your etcd deployment. Otherwise, the\ndefaults are usually fine for most purposes.\n\nLastly hit \"Create\", you should now see a linstor-controller pod\nrunning.\n\n### Deploying the LINSTOR Satellites\n\nNext we need to deploy the Satellites Set. Just as before navigate\nto the left-hand control pane of the Openshift Web Console. Expand the\n\"Operators\" section, but this time select \"Installed Operators\". Find\nthe entry for the \"Linstor Operator\", then select the\n\"LinstorSatelliteSet\" from the \"Provided APIs\" column on the right.\n\nFrom here you should see a page that says \"No Operands Found\" and will\nfeature a large button on the right which says \"Create\nLinstorSatelliteSet\". Click the \"Create LinstorSatelliteSet\" button.\n\nHere you will be presented with the options to configure the LINSTOR\nSatellites. The defaults should be enough to get you started.\nMake sure the `controllerEndpoint` matches what is available in the\nopenshift endpoints. The default is usually correct here.\n\nYou can edit the `storagePools` section to configure LINSTOR storage pools,\nincluding preparing the backing devices. See our [storage guide].\n\n[storage guide]: https://www.linbit.com/drbd-user-guide/linstor-guide-1_0-en/#s-kubernetes-storage\n\nBelow is an example manifest:\n\n```yaml\napiVersion: linstor.linbit.com/v1\nkind: LinstorSatelliteSet\nmetadata:\n  name: linstor-satellites\nspec:\n  satelliteImage: ''\n  automaticStorageType: None\n  storagePools:\n    lvmThinPools:\n    - name: openshift-pool\n      volumeGroup: \"\"\n      thinVolume: openshift\n      devicePaths:\n      - /dev/vdb\n  drbdRepoCred: ''\n  kernelModuleInjectionMode: ShippedModules\n  controllerEndpoint: 'http://linstor:3370'\n  priorityClassName: ''\n```\n\nLastly hit \"Create\", you should now see a linstor-node pod\nrunning on every worker node.\n\n### Deploying the LINSTOR CSI driver\n\nLast bit left is the CSI pods to bridge the layer between the CSI and\nLINSTOR. Just as before navigate to the left-hand control pane of the\nOpenshift Web Console. Expand the \"Operators\" section, but this time\nselect \"Installed Operators\". Find the entry for the \"Linstor Operator\",\nthen select the \"LinstorCSIDriver\" from the \"Provided APIs\" column on the\nright.\n\nFrom here you should see a page that says \"No Operands Found\" and will\nfeature a large button on the right which says \"Create\nLinstorCSIDriver\". Click the \"Create LinstorCSIDriver\" button.\n\nAgain, you will be presented with the options. Make sure that the\n`controllerEndpoint` is correct. Otherwise the defaults are fine for\nmost use cases.\n\nLastly hit \"Create\". You will now see a single \"linstor-csi-controller\" pod,\nas well as a \"linstor-csi-node\" pod on all worker nodes.\n\n## Interacting with LINSTOR in Openshift.\n\nThe Controller pod includes a LINSTOR Client, making it easy to interact directly with LINSTOR.\nFor instance:\n\n```\noc exec deployment/linstor-cs-controller -- linstor storage-pool list\n```\n\nThis should only be necessary for investigating problems and accessing advanced functionality.\nRegular operation such as creating volumes should be achieved via the [Openshift/Kubernetes integration].\n\n[Openshift/Kubernetes integration]: https://www.linbit.com/drbd-user-guide/linstor-guide-1_0-en/#s-kubernetes-basic-configuration-and-deployment",
      "csv_display_name": "Linstor Operator",
      "csv_metadata_description": "LINSTOR Kubernetes Operator",
      "csv_name": "linstor-operator.v1.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:50:19.415000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "linstor-operator",
      "provided_apis": [
        {
          "group": "linstor.linbit.com",
          "kind": "LinstorCSIDriver",
          "version": "v1"
        },
        {
          "group": "linstor.linbit.com",
          "kind": "LinstorSatelliteSet",
          "version": "v1"
        },
        {
          "group": "linstor.linbit.com",
          "kind": "LinstorController",
          "version": "v1"
        }
      ],
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.5.1",
      "version_original": "1.5.1"
    },
    {
      "_id": "61a57cf2bfd4a5234d5960d8",
      "alm_examples": [
        {
          "api_version": "linstor.linbit.com/v1",
          "kind": "LinstorController",
          "metadata": {
            "name": "linstor"
          },
          "spec": {
            "controllerImage": "",
            "dbConnectionURL": "etcd://linstor-etcd:2379",
            "drbdRepoCred": "",
            "priorityClassName": ""
          }
        },
        {
          "api_version": "linstor.linbit.com/v1",
          "kind": "LinstorCSIDriver",
          "metadata": {
            "name": "linstor"
          },
          "spec": {
            "controllerEndpoint": "http://linstor:3370",
            "controllerReplicas": 1,
            "csiControllerServiceAccountName": "csi-controller",
            "csiNodeServiceAccountName": "csi-node",
            "imagePullSecret": "",
            "linstorPluginImage": ""
          }
        },
        {
          "api_version": "linstor.linbit.com/v1",
          "kind": "LinstorSatelliteSet",
          "metadata": {
            "name": "linstor-satellites"
          },
          "spec": {
            "automaticStorageType": "None",
            "controllerEndpoint": "http://linstor:3370",
            "drbdRepoCred": "",
            "kernelModuleInjectionMode": "ShippedModules",
            "priorityClassName": "",
            "satelliteImage": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/linbit/linstor-operator-bundle@sha256:20c0b821db27ef8f551212d14ba508f88a116f92a9f9a214e79709744b96678b",
      "bundle_path_digest": "sha256:20c0b821db27ef8f551212d14ba508f88a116f92a9f9a214e79709744b96678b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:22:58.728000+00:00",
      "csv_description": "LINSTOR is a configuration management system for storage on Linux systems.\nIt manages LVM logical volumes and/or ZFS ZVOLs on a cluster of nodes.\nIt leverages DRBD for replication between different nodes and to provide block\nstorage devices to users and applications. It manages snapshots, encryption and\ncaching of HDD backed data in SSDs via bcache.\n\nLINBIT provides a certified LINSTOR operator to ease deployment of LINSTOR\non Openshift by installing DRBD, managing Satellite and Controller pods,\nand integrating with Openshift to provision persistent storage for your workloads.\n\nFor detailed instructions and more configuration options, see our [user guide].\n\n[user guide]: https://www.linbit.com/drbd-user-guide/linstor-guide-1_0-en/#ch-openshift\n\n## Install\n\nUnlike deployment via the helm chart, the certified Openshift\noperator does not deploy the needed etcd cluster. You must deploy this\nyourself ahead of time. We do this via the etcd operator available in the\nOperatorHub.\n\nIMPORTANT: It is advised that the etcd deployment uses persistent\nstorage of some type. Either use an existing storage provisioner with\na default `StorageClass` or simply use `hostPath` volumes.\n\n### Installing the operator\n\nHit \"Install\", select the stable update channel and a namespace for the\noperator. Use of a new namespace is recommended.\n\nHit \"Install\" again. At this point you should have just one pod, the\noperator pod, running. Next we needs to configure the remaining provided APIs.\n\n#### A note on operator namespaces\nThe LINSTOR operator can only watch for events and manage\ncustom resources that are within the same namespace it is deployed\nwithin (OwnNamsespace). This means the LINSTOR Controller, LINSTOR\nSatellites, and LINSTOR CSI Driver pods all need to be deployed in the\nsame namsepace as the LINSTOR Operator pod.\n\n### Deploying the LINSTOR Controller\n\nNavigate to the left-hand control pane of the Openshift Web\nConsole. Expand the \"Operators\" section, selecting \"Installed Operators\".\nFind the entry for the \"Linstor Operator\", then select the \"LinstorController\"\nfrom the \"Provided APIs\" column on the right.\n\nFrom here you should see a page that says \"No Operands Found\" and will\nfeature a large button on the right which says \"Create\nLinstorController\". Click the \"Create LinstorController\" button.\n\nHere you will be presented with options to configure the LINSTOR\nController. Either via the web-form view or the YAML View. Regardless\nof which view you select, make sure that the `dbConnectionURL` matches\nthe endpoint provided from your etcd deployment. Otherwise, the\ndefaults are usually fine for most purposes.\n\nLastly hit \"Create\", you should now see a linstor-controller pod\nrunning.\n\n### Deploying the LINSTOR Satellites\n\nNext we need to deploy the Satellites Set. Just as before navigate\nto the left-hand control pane of the Openshift Web Console. Expand the\n\"Operators\" section, but this time select \"Installed Operators\". Find\nthe entry for the \"Linstor Operator\", then select the\n\"LinstorSatelliteSet\" from the \"Provided APIs\" column on the right.\n\nFrom here you should see a page that says \"No Operands Found\" and will\nfeature a large button on the right which says \"Create\nLinstorSatelliteSet\". Click the \"Create LinstorSatelliteSet\" button.\n\nHere you will be presented with the options to configure the LINSTOR\nSatellites. The defaults should be enough to get you started.\nMake sure the `controllerEndpoint` matches what is available in the\nopenshift endpoints. The default is usually correct here.\n\nYou can edit the `storagePools` section to configure LINSTOR storage pools,\nincluding preparing the backing devices. See our [storage guide].\n\n[storage guide]: https://www.linbit.com/drbd-user-guide/linstor-guide-1_0-en/#s-kubernetes-storage\n\nBelow is an example manifest:\n\n```yaml\napiVersion: linstor.linbit.com/v1\nkind: LinstorSatelliteSet\nmetadata:\n  name: linstor-satellites\nspec:\n  satelliteImage: ''\n  automaticStorageType: None\n  storagePools:\n    lvmThinPools:\n    - name: openshift-pool\n      volumeGroup: \"\"\n      thinVolume: openshift\n      devicePaths:\n      - /dev/vdb\n  drbdRepoCred: ''\n  kernelModuleInjectionMode: ShippedModules\n  controllerEndpoint: 'http://linstor:3370'\n  priorityClassName: ''\n```\n\nLastly hit \"Create\", you should now see a linstor-node pod\nrunning on every worker node.\n\n### Deploying the LINSTOR CSI driver\n\nLast bit left is the CSI pods to bridge the layer between the CSI and\nLINSTOR. Just as before navigate to the left-hand control pane of the\nOpenshift Web Console. Expand the \"Operators\" section, but this time\nselect \"Installed Operators\". Find the entry for the \"Linstor Operator\",\nthen select the \"LinstorCSIDriver\" from the \"Provided APIs\" column on the\nright.\n\nFrom here you should see a page that says \"No Operands Found\" and will\nfeature a large button on the right which says \"Create\nLinstorCSIDriver\". Click the \"Create LinstorCSIDriver\" button.\n\nAgain, you will be presented with the options. Make sure that the\n`controllerEndpoint` is correct. Otherwise the defaults are fine for\nmost use cases.\n\nLastly hit \"Create\". You will now see a single \"linstor-csi-controller\" pod,\nas well as a \"linstor-csi-node\" pod on all worker nodes.\n\n## Interacting with LINSTOR in Openshift.\n\nThe Controller pod includes a LINSTOR Client, making it easy to interact directly with LINSTOR.\nFor instance:\n\n```\noc exec deployment/linstor-cs-controller -- linstor storage-pool list\n```\n\nThis should only be necessary for investigating problems and accessing advanced functionality.\nRegular operation such as creating volumes should be achieved via the [Openshift/Kubernetes integration].\n\n[Openshift/Kubernetes integration]: https://www.linbit.com/drbd-user-guide/linstor-guide-1_0-en/#s-kubernetes-basic-configuration-and-deployment",
      "csv_display_name": "Linstor Operator",
      "csv_metadata_description": "LINSTOR Kubernetes Operator",
      "csv_name": "linstor-operator.v1.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:50:26.375000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "linstor-operator",
      "provided_apis": [
        {
          "group": "linstor.linbit.com",
          "kind": "LinstorCSIDriver",
          "version": "v1"
        },
        {
          "group": "linstor.linbit.com",
          "kind": "LinstorSatelliteSet",
          "version": "v1"
        },
        {
          "group": "linstor.linbit.com",
          "kind": "LinstorController",
          "version": "v1"
        }
      ],
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.5.1",
      "version_original": "1.5.1"
    },
    {
      "_id": "61a57cfec17162a20c1c6890",
      "alm_examples": [
        {
          "api_version": "game.marketplace.redhat.com/v1",
          "kind": "Arcade",
          "metadata": {
            "name": "arcade-sample"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/rhm-labs/arcade-operator-bundle@sha256:f5f025c7f56643fab9148bb5de8ee34a84d02b78a6abb4b5592306cf54296654",
      "bundle_path_digest": "sha256:f5f025c7f56643fab9148bb5de8ee34a84d02b78a6abb4b5592306cf54296654",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:23:10.074000+00:00",
      "csv_description": "RHM Arcade Operator - a simple operator used to showcase how to build an operator around an existing web application that can can run on Openshift, Vanilla k8s, or on-boarded to Red Hat Marketplace.",
      "csv_display_name": "Arcade Operator",
      "csv_metadata_description": "",
      "csv_name": "marketplace-games-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:50:31.468000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "marketplace-games-operator",
      "provided_apis": [
        {
          "group": "game.marketplace.redhat.com",
          "kind": "Arcade",
          "plural": "arcades",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d6959be6693728d2dc4cd38b69251551d23c5002cb52db2684df31a0a8f7b0ab",
          "image": "registry.connect.redhat.com/rhm-labs/arcade-operator@sha256:d6959be6693728d2dc4cd38b69251551d23c5002cb52db2684df31a0a8f7b0ab",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "61a57d08c17162a20c1c6891",
      "alm_examples": [
        {
          "api_version": "cache.omarg.net/v1alpha1",
          "kind": "Memcached",
          "metadata": {
            "name": "memcached-sample"
          },
          "spec": {
            "foo": "bar"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ogaye/ogaye@sha256:f35a21fb3936b259aabe27b453612616fca4e6327c9042361b4d00ef332905c0",
      "bundle_path_digest": "sha256:f35a21fb3936b259aabe27b453612616fca4e6327c9042361b4d00ef332905c0",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:23:20.029000+00:00",
      "csv_description": "Omar memcached operator",
      "csv_display_name": "memcached-operator-ogaye",
      "csv_metadata_description": "",
      "csv_name": "memcached-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:50:36.744000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "memcached-operator-ogaye",
      "provided_apis": [
        {
          "group": "cache.omarg.net",
          "kind": "Memcached",
          "plural": "memcacheds",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:9211b70edbb93d718428e1c9a992e5fc74a20cb213f8a0592ffe340c362890fe",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:9211b70edbb93d718428e1c9a992e5fc74a20cb213f8a0592ffe340c362890fe",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:5340ac11ce676dd3204bf3807a4c2333a8dddcbcec918db0aeafbc977163c1c6",
          "image": "quay.io/ogaye/memcached-operator@sha256:5340ac11ce676dd3204bf3807a4c2333a8dddcbcec918db0aeafbc977163c1c6",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "61a57d113e9240fca360f55d",
      "alm_examples": [
        {
          "kind": "Tenant",
          "metadata": {
            "name": "minio"
          },
          "spec": {
            "console": {
              "consoleSecret": {
                "name": "console-secret"
              },
              "replicas": 2
            },
            "credsSecret": {
              "name": "minio-creds-secret"
            },
            "pools": {
              "servers": 4,
              "volumeClaimTemplate": {
                "metadata": {
                  "name": "data"
                },
                "spec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "1Ti"
                    }
                  },
                  "storageClassName": "local-storage"
                }
              },
              "volumesPerServer": 4
            },
            "requestAutoCert": false
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/minio/minio-operator1@sha256:357a5089b211e9653efff6cacc433633993cf3317dcca29eb54f924374b47b88",
      "bundle_path_digest": "sha256:357a5089b211e9653efff6cacc433633993cf3317dcca29eb54f924374b47b88",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:23:29.842000+00:00",
      "csv_description": "## About MinIO\nMinIO object storage platform enables building high performance data infrastructure for machine learning, analytics and application data workloads. MinIO is Enterprise-Grade, Amazon S3 Compatible object storage. Some of the key features are:\n* SQL Select\n* Encryption & WORM\n* Lambda Compute\n* Integration with IAM Tools\n* Erasure Code & Bitrot Protection\n## About MinIO Operator\nMinIO Operator provides the following features:\n* Deploy: Launch MinIO Clusters with specific affinity, toleration and other pre-defined settings.\n* Expansion: Expand the existing tenant and increase the storage capacity.\n* Upgrade: Seamless upgrade of MinIO Tenant to new release as required.\n* Console: Graphical UI to manage MinIO Tenant.\n* Automatic TLS: Deploy TLS enabled MinIO clusters with builtin certificate signing requests.\n",
      "csv_display_name": "MinIO Operator",
      "csv_metadata_description": " MinIO Operator allows creating distributed MinIO Clusters and manage their lifecycle",
      "csv_name": "minio-operator.v4.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:30:05.671000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "minio-operator",
      "provided_apis": [
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:b30d13b802cd653b25d3a523f103a91fec67ff6b10c443abb389f31e4aade07e",
          "image": "minio/operator@sha256:b30d13b802cd653b25d3a523f103a91fec67ff6b10c443abb389f31e4aade07e",
          "name": "operator-b30d13b802cd653b25d3a523f103a91fec67ff6b10c443abb389f31e4aade07e-annotation"
        },
        {
          "digest": "sha256:0cbfee2437c988997fb12fcfdde075cbc46ff81f7a58cd8ae3fdbd529dd492a6",
          "image": "docker.io/minio/operator@sha256:0cbfee2437c988997fb12fcfdde075cbc46ff81f7a58cd8ae3fdbd529dd492a6",
          "name": "minio-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "4.0.9",
      "version_original": "4.0.9"
    },
    {
      "_id": "61a57d19c17162a20c1c6893",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
                "priorityClassName": "",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              }
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:6f4ff463c67af42c1c3603e36e512a60dedb95775380a1a6b26c4cded86de5e1",
      "bundle_path_digest": "sha256:6f4ff463c67af42c1c3603e36e512a60dedb95775380a1a6b26c4cded86de5e1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-11-30T01:23:37.745000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.2.8 of the NeuVector Certified Operator deploys version 4.3.1 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         NAME                              ROLE                                          AGE     USERS   GROUPS   SERVICEACCOUNTS\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:50:54.866000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72",
          "name": "neuvector-operator-9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72-annotation"
        },
        {
          "digest": "sha256:9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9d8ab5fc5e3122fe1332ccf624e6897277e2e935690f4b07ca1c491599daec72",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:55b3d9873846d0a8670b58e8a8a76c426d3aba74d4e5c4fca43d05c1dd296f10",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:55b3d9873846d0a8670b58e8a8a76c426d3aba74d4e5c4fca43d05c1dd296f10",
          "name": "controller"
        },
        {
          "digest": "sha256:fdd66288454dd01f4f618c8cf04c7da501d4362773266ec6f448d63e26e3a35c",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:fdd66288454dd01f4f618c8cf04c7da501d4362773266ec6f448d63e26e3a35c",
          "name": "enforcer"
        },
        {
          "digest": "sha256:73445c18ea18f131b6fa630a97623a3043d05758205ef93fc02fa920abbedaa6",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:73445c18ea18f131b6fa630a97623a3043d05758205ef93fc02fa920abbedaa6",
          "name": "manager"
        },
        {
          "digest": "sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "name": "scanner"
        },
        {
          "digest": "sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
          "image": "registry.access.redhat.com/ubi8@sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
          "name": "updater"
        },
        {
          "digest": "sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "name": "scanner-a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06-annotation"
        },
        {
          "digest": "sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
          "image": "registry.access.redhat.com/ubi8@sha256:091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49",
          "name": "ubi8-091ad37a5a638af2c21d01c2d3f4d489c2368070a6c43371e897013fb0987e49-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.2.8",
      "version_original": "1.2.8"
    },
    {
      "_id": "61a57d223e9240fca360f55e",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              }
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:29996196f2eba8f7662bdf1efeaac3a0ccf56bdfb2e522b340d9a239f7ca51e4",
      "bundle_path_digest": "sha256:29996196f2eba8f7662bdf1efeaac3a0ccf56bdfb2e522b340d9a239f7ca51e4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-11-30T01:23:46.035000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.2.9 of the NeuVector Certified Operator deploys version 4.3.1 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         NAME                              ROLE                                          AGE     USERS   GROUPS   SERVICEACCOUNTS\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:51:00.003000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "name": "neuvector-operator-487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1-annotation"
        },
        {
          "digest": "sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:55b3d9873846d0a8670b58e8a8a76c426d3aba74d4e5c4fca43d05c1dd296f10",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:55b3d9873846d0a8670b58e8a8a76c426d3aba74d4e5c4fca43d05c1dd296f10",
          "name": "controller"
        },
        {
          "digest": "sha256:fdd66288454dd01f4f618c8cf04c7da501d4362773266ec6f448d63e26e3a35c",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:fdd66288454dd01f4f618c8cf04c7da501d4362773266ec6f448d63e26e3a35c",
          "name": "enforcer"
        },
        {
          "digest": "sha256:73445c18ea18f131b6fa630a97623a3043d05758205ef93fc02fa920abbedaa6",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:73445c18ea18f131b6fa630a97623a3043d05758205ef93fc02fa920abbedaa6",
          "name": "manager"
        },
        {
          "digest": "sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "name": "scanner"
        },
        {
          "digest": "sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "image": "registry.access.redhat.com/ubi8@sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "name": "updater"
        },
        {
          "digest": "sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "name": "scanner-a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06-annotation"
        },
        {
          "digest": "sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "image": "registry.access.redhat.com/ubi8@sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "name": "ubi8-910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.2.9",
      "version_original": "1.2.9"
    },
    {
      "_id": "61a57d29c17162a20c1c6894",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:5f2d23d20f9ea5d1d3bc56b758ddc3f3b4f57a9db47c7cc95e74f6d7a4072e00",
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              }
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:38e93c5f551f7ebfc1736a58cf2f07a793974fdd04f59af1c15df20e38e195da",
      "bundle_path_digest": "sha256:38e93c5f551f7ebfc1736a58cf2f07a793974fdd04f59af1c15df20e38e195da",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-11-30T01:23:53.832000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.0 of the NeuVector Certified Operator deploys version 4.3.2 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:51:04.986000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "name": "neuvector-operator-487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1-annotation"
        },
        {
          "digest": "sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:a748a22eff64576a89b15a0f70b0d50d781bc0bff809029e78cdcd19c105e6ff",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:a748a22eff64576a89b15a0f70b0d50d781bc0bff809029e78cdcd19c105e6ff",
          "name": "controller"
        },
        {
          "digest": "sha256:45c5e78ed5a72944dfdd3123623d71376fea8ef329e2980e162c633c58c049f2",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:45c5e78ed5a72944dfdd3123623d71376fea8ef329e2980e162c633c58c049f2",
          "name": "enforcer"
        },
        {
          "digest": "sha256:a7139cddaf9f7e53494cd9ad553331473466973f151489cb92bd6ffee864a56a",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:a7139cddaf9f7e53494cd9ad553331473466973f151489cb92bd6ffee864a56a",
          "name": "manager"
        },
        {
          "digest": "sha256:5f2d23d20f9ea5d1d3bc56b758ddc3f3b4f57a9db47c7cc95e74f6d7a4072e00",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:5f2d23d20f9ea5d1d3bc56b758ddc3f3b4f57a9db47c7cc95e74f6d7a4072e00",
          "name": "scanner"
        },
        {
          "digest": "sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "image": "registry.access.redhat.com/ubi8@sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "name": "updater"
        },
        {
          "digest": "sha256:5f2d23d20f9ea5d1d3bc56b758ddc3f3b4f57a9db47c7cc95e74f6d7a4072e00",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:5f2d23d20f9ea5d1d3bc56b758ddc3f3b4f57a9db47c7cc95e74f6d7a4072e00",
          "name": "scanner-5f2d23d20f9ea5d1d3bc56b758ddc3f3b4f57a9db47c7cc95e74f6d7a4072e00-annotation"
        },
        {
          "digest": "sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "image": "registry.access.redhat.com/ubi8@sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "name": "ubi8-910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.3.0",
      "version_original": "1.3.0"
    },
    {
      "_id": "61a57d32c17162a20c1c6895",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:c0c7095bcb36e93a4c074e5c97d652db5f0133022fd2ab6838a092e8959f2041",
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:060d7d6827b34949cc0fc58a50f72a5dccf00a4cc594406bdf5982f41dfe6118",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              }
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:bd5db9f3403eee933627d3a1ef0c534cac8c7b53eda247589d546c1f6cfed71b",
      "bundle_path_digest": "sha256:bd5db9f3403eee933627d3a1ef0c534cac8c7b53eda247589d546c1f6cfed71b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-11-30T01:24:02.035000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.1 of the NeuVector Certified Operator deploys version 4.3.2-s1 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:51:08.812000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "name": "neuvector-operator-487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1-annotation"
        },
        {
          "digest": "sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:afa454d7a22de6161e6ff6b6f859ce15fa0bfc4e9d4e5e191b61125dfc5cad6b",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:afa454d7a22de6161e6ff6b6f859ce15fa0bfc4e9d4e5e191b61125dfc5cad6b",
          "name": "controller"
        },
        {
          "digest": "sha256:f9543cdf9bb338161a3f84a81381f26cbf724a23f6363583417c9da682e91cf8",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:f9543cdf9bb338161a3f84a81381f26cbf724a23f6363583417c9da682e91cf8",
          "name": "enforcer"
        },
        {
          "digest": "sha256:085bd24dadcd9d023c6600227ca088ed8d03ab83a70b62401477d10272450952",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:085bd24dadcd9d023c6600227ca088ed8d03ab83a70b62401477d10272450952",
          "name": "manager"
        },
        {
          "digest": "sha256:c0c7095bcb36e93a4c074e5c97d652db5f0133022fd2ab6838a092e8959f2041",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:c0c7095bcb36e93a4c074e5c97d652db5f0133022fd2ab6838a092e8959f2041",
          "name": "scanner"
        },
        {
          "digest": "sha256:060d7d6827b34949cc0fc58a50f72a5dccf00a4cc594406bdf5982f41dfe6118",
          "image": "registry.access.redhat.com/ubi8@sha256:060d7d6827b34949cc0fc58a50f72a5dccf00a4cc594406bdf5982f41dfe6118",
          "name": "updater"
        },
        {
          "digest": "sha256:c0c7095bcb36e93a4c074e5c97d652db5f0133022fd2ab6838a092e8959f2041",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:c0c7095bcb36e93a4c074e5c97d652db5f0133022fd2ab6838a092e8959f2041",
          "name": "scanner-c0c7095bcb36e93a4c074e5c97d652db5f0133022fd2ab6838a092e8959f2041-annotation"
        },
        {
          "digest": "sha256:060d7d6827b34949cc0fc58a50f72a5dccf00a4cc594406bdf5982f41dfe6118",
          "image": "registry.access.redhat.com/ubi8@sha256:060d7d6827b34949cc0fc58a50f72a5dccf00a4cc594406bdf5982f41dfe6118",
          "name": "ubi8-060d7d6827b34949cc0fc58a50f72a5dccf00a4cc594406bdf5982f41dfe6118-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.3.1",
      "version_original": "1.3.1"
    },
    {
      "_id": "61a57d3927e166330707d968",
      "alm_examples": [
        {
          "api_version": "k8s.nginx.org/v1alpha1",
          "kind": "NginxIngressController",
          "metadata": {
            "name": "my-nginx-ingress-controller",
            "namespace": "my-nginx-ingress"
          },
          "spec": {
            "image": {
              "pullPolicy": "Always",
              "repository": "docker.io/nginx/nginx-ingress",
              "tag": "1.11.1-ubi"
            },
            "ingressClass": "nginx",
            "nginxPlus": false,
            "serviceType": "NodePort",
            "type": "deployment"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nginx/nginx-ingress-operator-bundle@sha256:39e36214aae291f6724a9e688b16d702bbe57dfcb06e81de6d0d5efb0a5864d6",
      "bundle_path_digest": "sha256:39e36214aae291f6724a9e688b16d702bbe57dfcb06e81de6d0d5efb0a5864d6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:24:09.642000+00:00",
      "csv_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_display_name": "Nginx Ingress Operator",
      "csv_metadata_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_name": "nginx-ingress-operator.v0.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:51:34.457000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "nginx-ingress-operator",
      "provided_apis": [
        {
          "group": "k8s.nginx.org",
          "kind": "NginxIngressController",
          "plural": "nginxingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5e49760b52a497f9e8a9ef7e0fa0437766d3dfef69a007c8567de7d2f3c49284",
          "image": "registry.connect.redhat.com/nginx/nginx-ingress-operator@sha256:5e49760b52a497f9e8a9ef7e0fa0437766d3dfef69a007c8567de7d2f3c49284",
          "name": "nginx-ingress-operator-5e49760b52a497f9e8a9ef7e0fa0437766d3dfef69a007c8567de7d2f3c49284-annotation"
        },
        {
          "digest": "sha256:5e49760b52a497f9e8a9ef7e0fa0437766d3dfef69a007c8567de7d2f3c49284",
          "image": "registry.connect.redhat.com/nginx/nginx-ingress-operator@sha256:5e49760b52a497f9e8a9ef7e0fa0437766d3dfef69a007c8567de7d2f3c49284",
          "name": "nginx-ingress-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.2.0",
      "version_original": "0.2.0"
    },
    {
      "_id": "61a57d41c17162a20c1c6898",
      "alm_examples": [
        {
          "api_version": "k8s.nginx.org/v1alpha1",
          "kind": "NginxIngressController",
          "metadata": {
            "name": "my-nginx-ingress-controller"
          },
          "spec": {
            "image": {
              "pullPolicy": "Always",
              "repository": "docker.io/nginx/nginx-ingress",
              "tag": "2.0.0-ubi"
            },
            "ingressClass": "nginx",
            "nginxPlus": false,
            "serviceType": "NodePort",
            "type": "deployment"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nginx/nginx-ingress-operator-bundle@sha256:177b0e39c4ed3113932a2392ec86515b35994bb2c9e3740c92baefc139dfef6c",
      "bundle_path_digest": "sha256:177b0e39c4ed3113932a2392ec86515b35994bb2c9e3740c92baefc139dfef6c",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:24:17.342000+00:00",
      "csv_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_display_name": "Nginx Ingress Operator",
      "csv_metadata_description": "",
      "csv_name": "nginx-ingress-operator.v0.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:51:41.169000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "nginx-ingress-operator",
      "provided_apis": [
        {
          "group": "k8s.nginx.org",
          "kind": "NginxIngressController",
          "plural": "nginxingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:484e26e348354e6dd28934aedbcd139c786284a88a4e16a7652b5a52bd0beeac",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:484e26e348354e6dd28934aedbcd139c786284a88a4e16a7652b5a52bd0beeac",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:b7766e1dd702cee4443df2c089058d4cc7b154d5dda574bd432d02ef10313f57",
          "image": "registry.connect.redhat.com/nginx/nginx-ingress-operator@sha256:b7766e1dd702cee4443df2c089058d4cc7b154d5dda574bd432d02ef10313f57",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.4.0",
      "version_original": "0.4.0"
    },
    {
      "_id": "61a57d48c17162a20c1c689b",
      "alm_examples": [
        {
          "kind": "ModelServer",
          "metadata": {
            "name": "model-server-sample"
          },
          "spec": {
            "annotations": {},
            "aws_access_key_id": "",
            "aws_region": "",
            "aws_secret_access_key": "",
            "batch#": "",
            "config_configmap_name": "",
            "file_system_poll_wait_seconds": 0,
            "gcp_creds_secret_name": "",
            "grpc_port": 8080,
            "https_proxy": "",
            "image_name": "registry.connect.redhat.com/intel/openvino-model-server@sha256:4ee88853cd8361e9d0a3461ad552f79c14f22406f1e32c8cbbb9341ae9780671",
            "log_level": "INFO",
            "model_name": "resnet",
            "model_path": "gs://ovms-public-eu/resnet50-binary",
            "model_version_policy": "{\\\"latest\\\": { \\\"num_versions\\\":1 }}",
            "models_host_path": "",
            "models_volume_claim": "",
            "nireq": "",
            "plugin_config": "{\\\"CPU_THROUGHPUT_STREAMS\\\":\\\"1\\\"}",
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": 4,
                "memory": "250Mi"
              }
            },
            "rest_port": 8081,
            "s3_compat_api_endpoint": "",
            "security_context": {},
            "service_type": "ClusterIP",
            "shape": "",
            "target_device": "CPU"
          }
        },
        {
          "kind": "Notebook",
          "metadata": {
            "name": "openvino-notebook"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/ovms-operator-bundle@sha256:2b863f5777ba23d8ea38f23b6a9c974e87c282bf85acb4a8c1746bd51453937b",
      "bundle_path_digest": "sha256:2b863f5777ba23d8ea38f23b6a9c974e87c282bf85acb4a8c1746bd51453937b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:24:24.865000+00:00",
      "csv_description": "OpenVINO Toolkit Operator manages OpenVINO components in OpenShift.\n\nCurrently there are components ModelServer and Notebook.\n\n# Model Server\n[OpenVINO\u2122 Model Server](https://github.com/openvinotoolkit/model_server) (OVMS) is a scalable, high-performance solution for serving machine learning models optimized for Intel\u00ae architectures. The server provides an inference service via gRPC or REST API - making it easy to deploy new algorithms and AI experiments using the same architecture as [TensorFlow Serving](https://github.com/tensorflow/serving) for any models trained in a framework that is supported by [OpenVINO](https://software.intel.com/en-us/openvino-toolkit).\nModel Server configuration is identical with a [Helm chart](https://github.com/openvinotoolkit/model_server/tree/main/deploy) for OVMS. It supports all the parameters from the helm chart.\n## Using the cluster\nOpenVINO Model Server can be consumed as a `Service`. It is called like with `ModelServer` resource with `-ovms` suffix.\nThe suffix is ommited when `ovms` phrase is included in the name.\nThe service exposes gRPC and REST API interfaces to run inference requests.\n```\noc get pods\nNAME                                        READY   STATUS    RESTARTS   AGE\nmodel-server-sample-ovms-586f6f76df-dpps4   1/1     Running   0          8h\n\noc get services\nNAME                       TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)             AGE\nmodel-server-sample-ovms   ClusterIP   172.25.199.210   <none>        8080/TCP,8081/TCP   8h\n```\n## Before you start\nDepending on the deployment configuration there might be pre-requisites for additional records to be created in the cluster. \n## References\nOpenVINO Model Server on [Github](https://github.com/openvinotoolkit/model_server/tree/main/extras/openvino-operator-openshift)\n\n# Notebook\nThe Notebook resource integrates JupyterHub from OpenShift Data Science or Open Data Hub with a container image that includes [developer\ntools](https://github.com/openvinotoolkit/openvino/blob/master/docs/install_guides/pypi-openvino-dev.md)\nfrom the OpenVINO toolkit and a set of Jupyter notebook tutorials. It enables selecting a defined image `openvino-notebook` from\nthe Jupyter Spawner drop-down menu.\n\nCreate the `Notebook` resource in the same project with JupyterHub and RedHat OpenShift Data Science operator.\nIt builds the image in the cluster based on Dockerfile from [openvino_notebooks](https://github.com/openvinotoolkit/openvino_notebooks).\n",
      "csv_display_name": "OpenVINO Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "openvino-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:30:40.857000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "ovms-operator",
      "provided_apis": [
        {
          "group": "intel.com",
          "kind": "ModelServer",
          "plural": "modelservers",
          "version": "v1alpha1"
        },
        {
          "group": "intel.com",
          "kind": "Notebook",
          "plural": "notebooks",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6d0286b8a8f6f3cd9d6cd8319400acf27b70fbb52df5808ec6fe2d9849be7d8c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6d0286b8a8f6f3cd9d6cd8319400acf27b70fbb52df5808ec6fe2d9849be7d8c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8385d6de20d1e59a931c44f6a785b53c96495833756f8ed07602f9ac54d62eb4",
          "image": "registry.connect.redhat.com/intel/ovms-operator@sha256:8385d6de20d1e59a931c44f6a785b53c96495833756f8ed07602f9ac54d62eb4",
          "name": "manager"
        },
        {
          "digest": "sha256:4ee88853cd8361e9d0a3461ad552f79c14f22406f1e32c8cbbb9341ae9780671",
          "image": "registry.connect.redhat.com/intel/openvino-model-server@sha256:4ee88853cd8361e9d0a3461ad552f79c14f22406f1e32c8cbbb9341ae9780671",
          "name": "openvino-model-server-4ee88853cd8361e9d0a3461ad552f79c14f22406f1e32c8cbbb9341ae9780671-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.2.0",
      "version_original": "0.2.0"
    },
    {
      "_id": "61a57d50c17162a20c1c689c",
      "alm_examples": [
        {
          "api_version": "pmem-csi.intel.com/v1beta1",
          "kind": "PmemCSIDeployment",
          "metadata": {
            "name": "pmem-csi.intel.com"
          },
          "spec": {
            "deviceMode": "lvm",
            "nodeSelector": {
              "feature.node.kubernetes.io/memory-nv.dax": "true"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/pmem-csi-operator-os@sha256:72c1ec043ba8bba57e710d1cabac54374612a18cbce05caca9b14310942faa8d",
      "bundle_path_digest": "sha256:72c1ec043ba8bba57e710d1cabac54374612a18cbce05caca9b14310942faa8d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:24:32.229000+00:00",
      "csv_description": "\nIntel PMEM-CSI is a [CSI](https://github.com/container-storage-interface/spec)\nstorage driver for container orchestrators like Kubernetes. It makes local\npersistent memory ([PMEM](https://pmem.io/)) available as a filesystem volume to\ncontainer applications. This is the operator to deploy and manage the\n[PMEM-CSI](https://intel.github.io/pmem-csi/1.0/README.html)\ndriver on a Kubernetes cluster.\n\nRefer to the [PMEM-CSI documentation](https://intel.github.io/pmem-csi/1.0/README.html)\nfor more details on deploying and using the PMEM-CSI driver.\n",
      "csv_display_name": "Operator for PMEM-CSI driver",
      "csv_metadata_description": "An operator for deploying and managing the PMEM-CSI driver",
      "csv_name": "pmem-csi-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:52:42.055000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "pmem-csi-operator-os",
      "provided_apis": [
        {
          "group": "pmem-csi.intel.com",
          "kind": "PmemCSIDeployment",
          "plural": "pmemcsideployments",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:09c98a6588f3d9227f8ae8fc175b533b38590048b79cbdf367eeaa140926010a",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:09c98a6588f3d9227f8ae8fc175b533b38590048b79cbdf367eeaa140926010a",
          "name": "pmem-csi-driver-os-09c98a6588f3d9227f8ae8fc175b533b38590048b79cbdf367eeaa140926010a-annotation"
        },
        {
          "digest": "sha256:09c98a6588f3d9227f8ae8fc175b533b38590048b79cbdf367eeaa140926010a",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:09c98a6588f3d9227f8ae8fc175b533b38590048b79cbdf367eeaa140926010a",
          "name": "pmem-csi-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "61a57d5827e166330707d96a",
      "alm_examples": [
        {
          "api_version": "pmem-csi.intel.com/v1beta1",
          "kind": "PmemCSIDeployment",
          "metadata": {
            "name": "pmem-csi.intel.com"
          },
          "spec": {
            "deviceMode": "lvm",
            "nodeSelector": {
              "feature.node.kubernetes.io/memory-nv.dax": "true"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/pmem-csi-operator-os@sha256:72c1ec043ba8bba57e710d1cabac54374612a18cbce05caca9b14310942faa8d",
      "bundle_path_digest": "sha256:72c1ec043ba8bba57e710d1cabac54374612a18cbce05caca9b14310942faa8d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:24:40.141000+00:00",
      "csv_description": "\nIntel PMEM-CSI is a [CSI](https://github.com/container-storage-interface/spec)\nstorage driver for container orchestrators like Kubernetes. It makes local\npersistent memory ([PMEM](https://pmem.io/)) available as a filesystem volume to\ncontainer applications. This is the operator to deploy and manage the\n[PMEM-CSI](https://intel.github.io/pmem-csi/1.0/README.html)\ndriver on a Kubernetes cluster.\n\nRefer to the [PMEM-CSI documentation](https://intel.github.io/pmem-csi/1.0/README.html)\nfor more details on deploying and using the PMEM-CSI driver.\n",
      "csv_display_name": "Operator for PMEM-CSI driver",
      "csv_metadata_description": "An operator for deploying and managing the PMEM-CSI driver",
      "csv_name": "pmem-csi-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:52:46.855000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "pmem-csi-operator-os",
      "provided_apis": [
        {
          "group": "pmem-csi.intel.com",
          "kind": "PmemCSIDeployment",
          "plural": "pmemcsideployments",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:09c98a6588f3d9227f8ae8fc175b533b38590048b79cbdf367eeaa140926010a",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:09c98a6588f3d9227f8ae8fc175b533b38590048b79cbdf367eeaa140926010a",
          "name": "pmem-csi-driver-os-09c98a6588f3d9227f8ae8fc175b533b38590048b79cbdf367eeaa140926010a-annotation"
        },
        {
          "digest": "sha256:09c98a6588f3d9227f8ae8fc175b533b38590048b79cbdf367eeaa140926010a",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:09c98a6588f3d9227f8ae8fc175b533b38590048b79cbdf367eeaa140926010a",
          "name": "pmem-csi-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "61a57d60c17162a20c1c68a1",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:45853a8612cc9da123094499ac975eb2bc943346a0092fe9d892c5942170e77f",
      "bundle_path_digest": "sha256:45853a8612cc9da123094499ac975eb2bc943346a0092fe9d892c5942170e77f",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:24:48.340000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.6.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:52:53.272000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "name": "openstorage-operator-5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47-annotation"
        },
        {
          "digest": "sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "name": "portworx-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.6.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.6.1",
      "version_original": "1.6.1"
    },
    {
      "_id": "61a57d68bfd4a5234d5960dc",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:45853a8612cc9da123094499ac975eb2bc943346a0092fe9d892c5942170e77f",
      "bundle_path_digest": "sha256:45853a8612cc9da123094499ac975eb2bc943346a0092fe9d892c5942170e77f",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:24:56.920000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.6.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:52:58.972000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "name": "openstorage-operator-5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47-annotation"
        },
        {
          "digest": "sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:5d156a64d4ba9aba18cbd6b3c717049e903aac65b6db32189500d50898ca2b47",
          "name": "portworx-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.6.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.6.1",
      "version_original": "1.6.1"
    },
    {
      "_id": "61a57d72bfd4a5234d5960dd",
      "alm_examples": [
        {
          "kind": "PostgresCluster",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "instances": [
              {
                "dataVolumeClaimSpec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "1Gi"
                    }
                  }
                },
                "replicas": 1
              }
            ],
            "postgresVersion": 13
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/crunchydata/postgres-operator-bundle@sha256:98d0ab361f4d3d22de06248949887e6a9eb8b807cd6a709a74a94c5c895fcbb2",
      "bundle_path_digest": "sha256:98d0ab361f4d3d22de06248949887e6a9eb8b807cd6a709a74a94c5c895fcbb2",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "v5",
      "creation_date": "2021-11-30T01:25:06.335000+00:00",
      "csv_description": "[PGO](https://github.com/CrunchyData/postgres-operator), the\n[Postgres Operator](https://github.com/CrunchyData/postgres-operator) from\n[Crunchy Data](https://www.crunchydata.com), gives you a **declarative Postgres** solution that\nautomatically manages your [PostgreSQL](https://www.postgresql.org) clusters.\n\nDesigned for your GitOps workflows, it is [easy to get started](https://access.crunchydata.com/documentation/postgres-operator/v5/quickstart/)\nwith Postgres on Kubernetes with PGO. Within a few moments, you can have a production grade Postgres\ncluster complete with high availability, disaster recovery, and monitoring, all over secure TLS communications.\nEven better, PGO lets you easily customize your Postgres cluster to tailor it to your workload!\n\nWith conveniences like cloning Postgres clusters to using rolling updates to roll out disruptive\nchanges with minimal downtime, PGO is ready to support your Postgres data at every stage of your\nrelease pipeline. Built for resiliency and uptime, PGO will keep your desired Postgres in a desired\nstate so you do not need to worry about it.\n\nPGO is developed with many years of production experience in automating Postgres management on\nKubernetes, providing a seamless cloud native Postgres solution to keep your data always available.\n\n- **PostgreSQL Cluster Provisioning**: [Create, Scale, & Delete PostgreSQL clusters with ease][provisioning],\n  while fully customizing your Pods and PostgreSQL configuration!\n- **High-Availability**: Safe, automated failover backed by a [distributed consensus based high-availability solution][high-availability].\n  Uses [Pod Anti-Affinity][k8s-anti-affinity] to help resiliency; you can configure how aggressive this can be!\n  Failed primaries automatically heal, allowing for faster recovery time. You can even create regularly scheduled\n  backups as well and set your backup retention policy\n- **Disaster Recovery**: [Backups][backups] and [restores][disaster-recovery] leverage the open source [pgBackRest][] utility and\n  [includes support for full, incremental, and differential backups as well as efficient delta restores][backups].\n  Set how long you want your backups retained for. Works great with very large databases!\n- **Monitoring**: [Track the health of your PostgreSQL clusters][monitoring] using the open source [pgMonitor][] library.\n- **Clone**: [Create new clusters from your existing clusters or backups][clone] with efficient data cloning.\n- **TLS**: All connections are over [TLS][tls]. You can also [bring your own TLS infrastructure][tls] if you do not want to use the provided defaults.\n- **Connection Pooling**: Advanced [connection pooling][pool] support using [pgBouncer][].\n- **Affinity and Tolerations**: Have your PostgreSQL clusters deployed to [Kubernetes Nodes][k8s-nodes] of your preference.\n  Set your [pod anti-affinity][k8s-anti-affinity], node affinity, Pod tolerations and more rules to customize your deployment topology!\n- **Full Customizability**: Crunchy PostgreSQL for Kubernetes makes it easy to get your own PostgreSQL-as-a-Service up and running\n  and fully customize your deployments, including:\n    - Choose the resources for your Postgres cluster: [container resources and storage size][resize-cluster]. [Resize at any time][resize-cluster] with minimal disruption.\n    - Use your own container image repository, including support `imagePullSecrets` and private repositories\n    - [Customize your PostgreSQL configuration][customize-cluster]\n\nand much more!\n\n[backups]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/backups/\n[clone]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/#clone-a-postgres-cluster\n[customize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/\n[disaster-recovery]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/\n[high-availability]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/high-availability/\n[monitoring]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/monitoring/\n[pool]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[provisioning]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/create-cluster/\n[resize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/resize-cluster/\n[tls]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/#customize-tls\n\n[k8s-anti-affinity]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n[k8s-nodes]: https://kubernetes.io/docs/concepts/architecture/nodes/\n\n[pgBackRest]: https://www.pgbackrest.org\n[pgBouncer]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[pgMonitor]: https://github.com/CrunchyData/pgmonitor\n\n\n## Post-Installation\n\n### Tutorial\n\nWant to [learn more about the PostgreSQL Operator][tutorial]? Browse through the [tutorial][] to learn more about what you can do!\n\n[tutorial]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial",
      "csv_display_name": "Crunchy Postgres for Kubernetes",
      "csv_metadata_description": "Production Postgres Made Easy",
      "csv_name": "postgresoperator.v5.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:31:00.533000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "crunchy-postgres-operator",
      "provided_apis": [
        {
          "group": "postgres-operator.crunchydata.com",
          "kind": "PostgresCluster",
          "plural": "postgresclusters",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:18277dfef37345dd8f08f2e47ceecb99e409efadf926d624a57673ac7491818d",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:18277dfef37345dd8f08f2e47ceecb99e409efadf926d624a57673ac7491818d",
          "name": "postgres-operator-18277dfef37345dd8f08f2e47ceecb99e409efadf926d624a57673ac7491818d-annotation"
        },
        {
          "digest": "sha256:18277dfef37345dd8f08f2e47ceecb99e409efadf926d624a57673ac7491818d",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:18277dfef37345dd8f08f2e47ceecb99e409efadf926d624a57673ac7491818d",
          "name": "operator"
        },
        {
          "digest": "sha256:0fa5f4c6031e690838fe40eb618554f0c1878c14f1ab5d97999cc942177eb5ea",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:0fa5f4c6031e690838fe40eb618554f0c1878c14f1ab5d97999cc942177eb5ea",
          "name": "pgbackrest"
        },
        {
          "digest": "sha256:4a3b7bcf6461b4548eb124e7ec834f38e937dad4bd1338de27022bd9a3b13f5d",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:4a3b7bcf6461b4548eb124e7ec834f38e937dad4bd1338de27022bd9a3b13f5d",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:41b4adf29237184cef74380367ac55397d6df55a98866489beb396bdb2107cdf",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:41b4adf29237184cef74380367ac55397d6df55a98866489beb396bdb2107cdf",
          "name": "pgexporter"
        },
        {
          "digest": "sha256:155ddaaefb03e4bd3410881da27fcc5fa40dcfe7fc9195e1a563facecaae4356",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-ha@sha256:155ddaaefb03e4bd3410881da27fcc5fa40dcfe7fc9195e1a563facecaae4356",
          "name": "postgres_12"
        },
        {
          "digest": "sha256:fd9a0e9ecd3913210bdcb49d51d7d225fd2920c8235d703f2a2d629634865e1e",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-ha@sha256:fd9a0e9ecd3913210bdcb49d51d7d225fd2920c8235d703f2a2d629634865e1e",
          "name": "postgres_13"
        },
        {
          "digest": "sha256:d049d4cd94d7c810f5ca092e148a880b0c4b2283e55e60689dea49b6de967cf2",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis-ha@sha256:d049d4cd94d7c810f5ca092e148a880b0c4b2283e55e60689dea49b6de967cf2",
          "name": "postgres_12_gis_2.5"
        },
        {
          "digest": "sha256:d2a1f86dfedaf48efe6a9ade9ae15d901bf67792fa17254714cdd2b9002280a6",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis-ha@sha256:d2a1f86dfedaf48efe6a9ade9ae15d901bf67792fa17254714cdd2b9002280a6",
          "name": "postgres_12_gis_3.0"
        },
        {
          "digest": "sha256:d2a2e5cf820cb037c3f167515c9bee80b4d260fc86fe14c18ca794997941246f",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis-ha@sha256:d2a2e5cf820cb037c3f167515c9bee80b4d260fc86fe14c18ca794997941246f",
          "name": "postgres_13_gis_3.0"
        },
        {
          "digest": "sha256:3dc85b5fb89d3481e17ab148c06fb525c5fba0312b79f4707edf308c598ccc61",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis-ha@sha256:3dc85b5fb89d3481e17ab148c06fb525c5fba0312b79f4707edf308c598ccc61",
          "name": "postgres_13_gis_3.1"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "5.0.2",
      "version_original": "5.0.2"
    },
    {
      "_id": "61a57d7ac17162a20c1c68a3",
      "alm_examples": [
        {
          "kind": "PostgresCluster",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "instances": [
              {
                "dataVolumeClaimSpec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "1Gi"
                    }
                  }
                },
                "replicas": 1
              }
            ],
            "postgresVersion": 13
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/crunchydata/postgres-operator-bundle@sha256:dc5de09dc39f38932e2490b125b9e22183770ed6d1bd9d62c7bc429b1f50f345",
      "bundle_path_digest": "sha256:dc5de09dc39f38932e2490b125b9e22183770ed6d1bd9d62c7bc429b1f50f345",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "v5",
      "creation_date": "2021-11-30T01:25:14.644000+00:00",
      "csv_description": "[PGO](https://github.com/CrunchyData/postgres-operator), the\n[Postgres Operator](https://github.com/CrunchyData/postgres-operator) from\n[Crunchy Data](https://www.crunchydata.com), gives you a **declarative Postgres** solution that\nautomatically manages your [PostgreSQL](https://www.postgresql.org) clusters.\n\nDesigned for your GitOps workflows, it is [easy to get started](https://access.crunchydata.com/documentation/postgres-operator/v5/quickstart/)\nwith Postgres on Kubernetes with PGO. Within a few moments, you can have a production grade Postgres\ncluster complete with high availability, disaster recovery, and monitoring, all over secure TLS communications.\nEven better, PGO lets you easily customize your Postgres cluster to tailor it to your workload!\n\nWith conveniences like cloning Postgres clusters to using rolling updates to roll out disruptive\nchanges with minimal downtime, PGO is ready to support your Postgres data at every stage of your\nrelease pipeline. Built for resiliency and uptime, PGO will keep your desired Postgres in a desired\nstate so you do not need to worry about it.\n\nPGO is developed with many years of production experience in automating Postgres management on\nKubernetes, providing a seamless cloud native Postgres solution to keep your data always available.\n\n- **PostgreSQL Cluster Provisioning**: [Create, Scale, & Delete PostgreSQL clusters with ease][provisioning],\n  while fully customizing your Pods and PostgreSQL configuration!\n- **High-Availability**: Safe, automated failover backed by a [distributed consensus based high-availability solution][high-availability].\n  Uses [Pod Anti-Affinity][k8s-anti-affinity] to help resiliency; you can configure how aggressive this can be!\n  Failed primaries automatically heal, allowing for faster recovery time. You can even create regularly scheduled\n  backups as well and set your backup retention policy\n- **Disaster Recovery**: [Backups][backups] and [restores][disaster-recovery] leverage the open source [pgBackRest][] utility and\n  [includes support for full, incremental, and differential backups as well as efficient delta restores][backups].\n  Set how long you want your backups retained for. Works great with very large databases!\n- **Monitoring**: [Track the health of your PostgreSQL clusters][monitoring] using the open source [pgMonitor][] library.\n- **Clone**: [Create new clusters from your existing clusters or backups][clone] with efficient data cloning.\n- **TLS**: All connections are over [TLS][tls]. You can also [bring your own TLS infrastructure][tls] if you do not want to use the provided defaults.\n- **Connection Pooling**: Advanced [connection pooling][pool] support using [pgBouncer][].\n- **Affinity and Tolerations**: Have your PostgreSQL clusters deployed to [Kubernetes Nodes][k8s-nodes] of your preference.\n  Set your [pod anti-affinity][k8s-anti-affinity], node affinity, Pod tolerations and more rules to customize your deployment topology!\n- **Full Customizability**: Crunchy PostgreSQL for Kubernetes makes it easy to get your own PostgreSQL-as-a-Service up and running\n  and fully customize your deployments, including:\n    - Choose the resources for your Postgres cluster: [container resources and storage size][resize-cluster]. [Resize at any time][resize-cluster] with minimal disruption.\n    - Use your own container image repository, including support `imagePullSecrets` and private repositories\n    - [Customize your PostgreSQL configuration][customize-cluster]\n\nand much more!\n\n[backups]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/backups/\n[clone]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/#clone-a-postgres-cluster\n[customize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/\n[disaster-recovery]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/\n[high-availability]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/high-availability/\n[monitoring]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/monitoring/\n[pool]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[provisioning]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/create-cluster/\n[resize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/resize-cluster/\n[tls]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/#customize-tls\n\n[k8s-anti-affinity]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n[k8s-nodes]: https://kubernetes.io/docs/concepts/architecture/nodes/\n\n[pgBackRest]: https://www.pgbackrest.org\n[pgBouncer]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[pgMonitor]: https://github.com/CrunchyData/pgmonitor\n\n\n## Post-Installation\n\n### Tutorial\n\nWant to [learn more about the PostgreSQL Operator][tutorial]? Browse through the [tutorial][] to learn more about what you can do!\n\n[tutorial]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial",
      "csv_display_name": "Crunchy Postgres for Kubernetes",
      "csv_metadata_description": "Production Postgres Made Easy",
      "csv_name": "postgresoperator.v5.0.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:31:02.608000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "crunchy-postgres-operator",
      "provided_apis": [
        {
          "group": "postgres-operator.crunchydata.com",
          "kind": "PostgresCluster",
          "plural": "postgresclusters",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f5ec30082ce775b5a2be9800e389263ecdf4c32a56c6c41874bac6682913559b",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:f5ec30082ce775b5a2be9800e389263ecdf4c32a56c6c41874bac6682913559b",
          "name": "postgres-operator-f5ec30082ce775b5a2be9800e389263ecdf4c32a56c6c41874bac6682913559b-annotation"
        },
        {
          "digest": "sha256:f5ec30082ce775b5a2be9800e389263ecdf4c32a56c6c41874bac6682913559b",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:f5ec30082ce775b5a2be9800e389263ecdf4c32a56c6c41874bac6682913559b",
          "name": "operator"
        },
        {
          "digest": "sha256:eb610233da96ee06f0bec52dec4f50cc7d3bdb191cd6ac11ae8e0d112bf5028e",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:eb610233da96ee06f0bec52dec4f50cc7d3bdb191cd6ac11ae8e0d112bf5028e",
          "name": "pgbackrest"
        },
        {
          "digest": "sha256:0b9560dc5df40eb9207c152021536404922e1fced7dcae14aea229b7f4eb0ee0",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:0b9560dc5df40eb9207c152021536404922e1fced7dcae14aea229b7f4eb0ee0",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:e6bff80f2244dd6f469d642bca8117bf758d7529812df0b0a078cc8e0632b929",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:e6bff80f2244dd6f469d642bca8117bf758d7529812df0b0a078cc8e0632b929",
          "name": "pgexporter"
        },
        {
          "digest": "sha256:74e35614839ae674ee210e3850dee01e50c5d3d218eeee2d4d33e778db76ffbc",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:74e35614839ae674ee210e3850dee01e50c5d3d218eeee2d4d33e778db76ffbc",
          "name": "postgres_12"
        },
        {
          "digest": "sha256:d74ab0bee968613ab93310c78f7f8b7fc2d4ebc2a2da5835681584d25acbd2fe",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:d74ab0bee968613ab93310c78f7f8b7fc2d4ebc2a2da5835681584d25acbd2fe",
          "name": "postgres_13"
        },
        {
          "digest": "sha256:45778ce94cb7f95751c01eaf084af9d1a5cd2c7c0e359de39ff182dc0c56f909",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:45778ce94cb7f95751c01eaf084af9d1a5cd2c7c0e359de39ff182dc0c56f909",
          "name": "postgres_14"
        },
        {
          "digest": "sha256:c084654b6364288a43a2e07881c91aa86e85db6f3cd0d5721926af137f1b2e17",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:c084654b6364288a43a2e07881c91aa86e85db6f3cd0d5721926af137f1b2e17",
          "name": "postgres_12_gis_2.5"
        },
        {
          "digest": "sha256:2297070eb46e37cc28962354e9da9252eec12050c92f05fab943e1a88336a7d6",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:2297070eb46e37cc28962354e9da9252eec12050c92f05fab943e1a88336a7d6",
          "name": "postgres_12_gis_3.0"
        },
        {
          "digest": "sha256:2228446a660e766bc02443ca1c0b0e4874ec9c986c6b4d3921642dc2d67ec17b",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:2228446a660e766bc02443ca1c0b0e4874ec9c986c6b4d3921642dc2d67ec17b",
          "name": "postgres_13_gis_3.0"
        },
        {
          "digest": "sha256:c40568be23d2ae475e6116b64a1181afc046a55e7b8085354339ac6da20fb7e0",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:c40568be23d2ae475e6116b64a1181afc046a55e7b8085354339ac6da20fb7e0",
          "name": "postgres_13_gis_3.1"
        },
        {
          "digest": "sha256:6c2860dda07fdf12ac9fb24a71b6cd6ebb31d1b83a36f9736832a8e24d29ca78",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:6c2860dda07fdf12ac9fb24a71b6cd6ebb31d1b83a36f9736832a8e24d29ca78",
          "name": "postgres_14_gis_3.1"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "5.0.3",
      "version_original": "5.0.3"
    },
    {
      "_id": "61a57d833e9240fca360f564",
      "alm_examples": [
        {
          "api_version": "rc.app.stacks/v1beta2",
          "kind": "RuntimeComponent",
          "metadata": {
            "name": "runtimecomponent-sample"
          },
          "spec": {
            "applicationImage": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
            "expose": true,
            "replicas": 1,
            "service": {
              "port": 9080
            }
          }
        },
        {
          "api_version": "rc.app.stacks/v1beta2",
          "kind": "RuntimeOperation",
          "metadata": {
            "name": "runtimeoperation-sample"
          },
          "spec": {
            "command": [
              "./your_script.sh"
            ],
            "containerName": "app",
            "podName": "Specify_Pod_Name_Here"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/runtime-component-operator-bundle@sha256:65cc8aa40608b76956ff8c19316b63f805d7a28e8d7697b9ea1d427888a2ccdf",
      "bundle_path_digest": "sha256:65cc8aa40608b76956ff8c19316b63f805d7a28e8d7697b9ea1d427888a2ccdf",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "beta2",
      "creation_date": "2021-11-30T01:25:23.246000+00:00",
      "csv_description": "This advanced Operator is capable of deploying any runtime component image with consistent, production-grade QoS. It enables enterprise architects to govern the way their applications get deployed & managed in the cluster, while dramatically reducing the learning curve for developers to deploy into Kubernetes - allowing them to focus on writing the code!\nHere are some key features:\n\n#### Application Lifecyle\nYou can deploy your runtime component container by either pointing to a container image, or an OpenShift ImageStream. When using an ImageStream the Operator will watch for any updates and will re-deploy the modified image.\n\n#### Custom RBAC\nThis Operator is capable of using a custom ServiceAccount from the caller, allowing it to follow RBAC restrictions. By default it creates a ServiceAccount if one is not specified, which can also be bound with specific roles.\n\n#### Environment Configuration\nYou can configure a variety of artifacts with your deployment, such as: labels, annotations, and environment variables from a ConfigMap, a Secret or a value.\n\n#### Routing\nExpose your application to external users via a single toggle to create a Route on OpenShift or an Ingress on other Kubernetes environments. Advanced configuration, such as TLS settings, are also easily enabled.  Expiring Route certificates are re-issued.\n\n#### High Availability via Horizontal Pod Autoscaling\nRun multiple instances of your application for high availability. Either specify a static number of replicas or easily configure horizontal auto scaling to create (and delete) instances based on resource consumption.\n\n#### Persistence and advanced storage\nEnable persistence for your application by specifying simple requirements: just tell us the size of the storage and where you would like it to be mounted and We will create and manage that storage for you.\nThis toggles a StatefulSet resource instead of a Deployment resource, so your container can recover transactions and state upon a pod restart.\nWe offer an advanced mode where the user specifies a built-in PersistentVolumeClaim, allowing them to configure many details of the persistent volume, such as its storage class and access mode.\n\n#### Service Binding\nEasily bind to available services in your cluster.  Your runtime components can expose and consume other services by simply specifying the target endpoinds: we take care of the heavy lifting such as creating k8s Secrets, injecting them into your container and watching for any changes in configuration!  This way your applications can dynamically reconnect to its required services without any intervention or interruption.\n\n#### Exposing metrics to Prometheus\nThe Runtime Component Operator exposes the runtime container's metrics via the [Prometheus Operator](https://operatorhub.io/operator/prometheus).\nUsers can pick between a basic mode, where they simply specify the label that Prometheus is watching to scrape the metrics from the container, or they can specify the full `ServiceMonitor` spec embedded into the RuntimeComponent's `spec.monitoring` key controlling things like the poll internal and security credentials.\n\n#### Easily mount logs and transaction directories\nIf you need to mount the logs and transaction data from your runtime component to an external volume such as NFS (or any storage supported in your cluster), simply add the following (customizing the folder location and size) to your RuntimeComponent CR:\n``` storage: size: 2Gi mountPath: \"/logs\" ```\n\n#### Integration with OpenShift Serverless\nDeploy your serverless runtime component using a single toggle.  The Operator will convert all of its generated resources into [Knative](https://knative.dev) resources, allowing your pod to automatically scale to 0 when it is idle.\n\n#### Integration with OpenShift's Topology UI\nWe set the corresponding labels to support OpenShift's Developer Topology UI, which allows you to visualize your entire set of deployments and how they are connected.\n\nSee our [**documentation**](https://github.com/application-stacks/runtime-component-operator/tree/main/doc/) for more information.\n",
      "csv_display_name": "Runtime Component",
      "csv_metadata_description": "Deploys any runtime component with dynamic and auto-tuning configuration",
      "csv_name": "runtime-component.v0.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:54:04.421000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "runtime-component-operator-certified",
      "provided_apis": [
        {
          "group": "rc.app.stacks",
          "kind": "RuntimeComponent",
          "plural": "runtimecomponents",
          "version": "v1beta2"
        },
        {
          "group": "rc.app.stacks",
          "kind": "RuntimeOperation",
          "plural": "runtimeoperations",
          "version": "v1beta2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:febfbe4a75018bfdb1f3cb13caaa3e5e321bf9f8ac5ca1405dae96f9798bde2b",
          "image": "registry.connect.redhat.com/ibm/runtime-component-operator@sha256:febfbe4a75018bfdb1f3cb13caaa3e5e321bf9f8ac5ca1405dae96f9798bde2b",
          "name": "runtime-component-operator-febfbe4a75018bfdb1f3cb13caaa3e5e321bf9f8ac5ca1405dae96f9798bde2b-annotation"
        },
        {
          "digest": "sha256:febfbe4a75018bfdb1f3cb13caaa3e5e321bf9f8ac5ca1405dae96f9798bde2b",
          "image": "registry.connect.redhat.com/ibm/runtime-component-operator@sha256:febfbe4a75018bfdb1f3cb13caaa3e5e321bf9f8ac5ca1405dae96f9798bde2b",
          "name": "manager"
        },
        {
          "digest": "sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "image": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "name": "open-liberty-samples-8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.8.0",
      "version_original": "0.8.0"
    },
    {
      "_id": "61a57d8bbfd4a5234d5960e0",
      "alm_examples": [
        {
          "api_version": "csi.nec.com/v1",
          "kind": "SANStorageCSI",
          "metadata": {
            "name": "sanstoragecsi"
          },
          "spec": {
            "driverName": "san.csi.nec.com",
            "images": {
              "csiDriver": "",
              "externalAttacher": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083",
              "externalProvisioner": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715",
              "livenessProbe": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe",
              "nodeRegistrar": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0"
            },
            "parameters": {
              "controller": {
                "logLevel": 5
              },
              "node": {
                "livenessProbePort": 9808,
                "logLevel": 5,
                "maxVolumesPerNode": 1024
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nec/sanstoragecsi-operator-bundle@sha256:a547f2b1018aebda3dadf2599d082dd7cfebc3e255571634d97b3b3f6161436e",
      "bundle_path_digest": "sha256:a547f2b1018aebda3dadf2599d082dd7cfebc3e255571634d97b3b3f6161436e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:25:31.457000+00:00",
      "csv_description": "This operator deploys the NEC Storage M Series CSI Driver on OpenShift Container Platform.\n\nNEC Storage M Series CSI Driver provides persistent storage for stateful applications using NEC Storage M Series.\nPlease refer to the documentation of the NEC Storage M Series CSI Driver for detail information about supported NEC Storage Platforms and supported CSI features.\n",
      "csv_display_name": "NEC Storage M Series CSI Operator",
      "csv_metadata_description": "An operator for managing the NEC Storage M Series CSI Driver",
      "csv_name": "sanstoragecsi-operator-bundle.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:54:14.381000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "sanstoragecsi-operator-bundle",
      "provided_apis": [
        {
          "group": "csi.nec.com",
          "kind": "SANStorageCSI",
          "plural": "sanstoragecsis",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1e385777c7ce4bfd48902fbbb8023a6eba3f5dff4dc08e200450bc6f0bcb595c",
          "image": "registry.connect.redhat.com/nec/sanstoragecsi-operator@sha256:1e385777c7ce4bfd48902fbbb8023a6eba3f5dff4dc08e200450bc6f0bcb595c",
          "name": "sanstoragecsi-operator-bundle"
        },
        {
          "digest": "sha256:dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0",
          "image": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0",
          "name": "ose-csi-node-driver-registrar-dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0-annotation"
        },
        {
          "digest": "sha256:241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe",
          "image": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe",
          "name": "ose-csi-livenessprobe-241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe-annotation"
        },
        {
          "digest": "sha256:faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715",
          "image": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715",
          "name": "ose-csi-external-provisioner-faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715-annotation"
        },
        {
          "digest": "sha256:92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083",
          "image": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083",
          "name": "ose-csi-external-attacher-92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "61a57d93bfd4a5234d5960e2",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:e12119fa5cca31b75f9be94ea70e1980b7fe5da1783475a073ac7ade2fbb360b",
      "bundle_path_digest": "sha256:e12119fa5cca31b75f9be94ea70e1980b7fe5da1783475a073ac7ade2fbb360b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.20",
      "creation_date": "2021-11-30T01:25:39.409000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.20.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:54:52.249000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a",
          "image": "quay.io/tigera/operator@sha256:379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a",
          "name": "operator-379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a-annotation"
        },
        {
          "digest": "sha256:379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a",
          "image": "quay.io/tigera/operator@sha256:379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.20.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.20.1",
      "version_original": "1.20.1"
    },
    {
      "_id": "61a57d9bc17162a20c1c68a7",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:953d43c1d576ca70a0856d9f0cf8bd2a2e98e7fcb9e2fbff8cf5a214eae220aa",
      "bundle_path_digest": "sha256:953d43c1d576ca70a0856d9f0cf8bd2a2e98e7fcb9e2fbff8cf5a214eae220aa",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.20",
      "creation_date": "2021-11-30T01:25:47.799000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.20.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:54:56.455000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98",
          "image": "quay.io/tigera/operator@sha256:078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98",
          "name": "operator-078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98-annotation"
        },
        {
          "digest": "sha256:078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98",
          "image": "quay.io/tigera/operator@sha256:078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.20.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.20.2",
      "version_original": "1.20.2"
    },
    {
      "_id": "61a57da33e9240fca360f568",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:af132b6324918a5acfd1523acce674552d62035314bbb55f92ef11ea3081a09d",
      "bundle_path_digest": "sha256:af132b6324918a5acfd1523acce674552d62035314bbb55f92ef11ea3081a09d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.20",
      "creation_date": "2021-11-30T01:25:55.818000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.20.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:55:01.234000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068",
          "image": "quay.io/tigera/operator@sha256:b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068",
          "name": "operator-b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068-annotation"
        },
        {
          "digest": "sha256:b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068",
          "image": "quay.io/tigera/operator@sha256:b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.20.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.20.3",
      "version_original": "1.20.3"
    },
    {
      "_id": "61a57dac3e9240fca360f569",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:4d0d814fcfeb628aae8a05cb7a0a416ae85395197950085c907b6cdcf2fb4317",
      "bundle_path_digest": "sha256:4d0d814fcfeb628aae8a05cb7a0a416ae85395197950085c907b6cdcf2fb4317",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.20",
      "creation_date": "2021-11-30T01:26:04.448000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.20.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:55:06.446000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2",
          "image": "quay.io/tigera/operator@sha256:bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2",
          "name": "operator-bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2-annotation"
        },
        {
          "digest": "sha256:bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2",
          "image": "quay.io/tigera/operator@sha256:bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2",
          "name": "tigera-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.20.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.20.4",
      "version_original": "1.20.4"
    },
    {
      "_id": "61a57db4c17162a20c1c68a8",
      "alm_examples": [
        {
          "api_version": "vfunction.com/v1",
          "kind": "VfunctionServer",
          "metadata": {
            "labels": {
              "app.kubernetes.io/instance": "vfunction-server",
              "app.kubernetes.io/managed-by": "operator",
              "app.kubernetes.io/name": "vfunction",
              "name": "vfunction"
            },
            "name": "example-vfunction-server",
            "namespace": "vfunction"
          },
          "spec": {
            "admin": {
              "email": "admin@mycompany.com",
              "name": "Admin",
              "password": "Password1!"
            },
            "host": "http://my.domain.com",
            "measurements": {
              "auto_scaling": "No",
              "max_number_of_services": "10",
              "min_number_of_services": "2"
            },
            "org_name": "MyCompany",
            "smtp": {
              "identity": "",
              "password": "",
              "url": "",
              "user": ""
            },
            "tls": {
              "crt": "",
              "key": ""
            },
            "upgrade": "Daily"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/vfunction/vfunction-server-operator-bundle@sha256:75cb80116afa46260ad077967679040ee495535933a640f152ed2e2012226d13",
      "bundle_path_digest": "sha256:75cb80116afa46260ad077967679040ee495535933a640f152ed2e2012226d13",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:26:12.934000+00:00",
      "csv_description": "\n## Introduction\n\n[vFunction](https://www.vfunction.com/) is a cloud-native modernization platform that combines dynamic and static code analysis, machine learning, and automation to automatically identify and extract services from existing applications. vFunction is the only platform purpose-built for modernization of Java applications.\n\nThe vFunction modernization process starts by learning the running monolithic application, and surfacing the interdependencies within it. Using AI, the platform analyzes and identifies services that can be separated from the application. This decomposition can present a range of micro, mini, or even macro services, depending on your application environment, each being an independently deployable and scalable application component.\n\nvFunction automates the extraction of these services, enabling you to modernize your monolith, quickly and easily.\n\n## The vFunction platform\n\nThe platform consists of 3 basic components; the server, the controller package, and a tools package. The server runs as an operand on an OpenShift environment. The controller package is installed on the machine that runs the monolithic application which can be either a Linux or a Windows machine, and the tools are run on a development machine, with access to the code of the monolithic application.\n\nThe controller package consists of three elements: the vFunction agent, that collects data during the dynamic analysis phase; the vFunction Viper application, that performs static analysis on the binaries of the application; and the vFunction controller that handles all the communication between the agent, Viper, and the vFunction server.\n\nThe vFunction agent is a mix of a Java and native agent, and needs to run on the JVM that is currently running your application. [Refer to the vFunction OOB Support Matrix document](https://drive.google.com/file/d/1ccq8LFab1FrYAimDUxwgjiCOdk4QuVzs/view) for a list of supported application servers and JVMs.\n\nThis operator installs a vFunction server instance to be connected later with one or more vFunction controllers installed on your application machine(s).\n\n## Before You Start\n\nThe vFunction operator requires a Red Hat OpenShift Kubernetes Application Platform 4.x.\n\nThe cluster recommended configuration (which is the same as the minimal one) should consist of:\n\n- *1 master node*\n\n- *1 worker node*\n\n- *Storage capacity enough for dynamically provision 2 PVs of 50G each*\n\n- *A default StorageClass configured*\n\nvFunction doesn\u2019t provide any encryption mechanism for data stored on any attached storage. If required, encryption can be achieved by the client by using its own external means on the storage itself.\n\nvFunction supports backup of all critical data as part of the application. Nevertheless, for complete backup of entire data it is recommended that the client apply its own storage based backup mechanism.\n\n## Install Prerequisites\n\n###Cluster:\nThe operator was certified and tested on OCP 4.6 and 4.7.\nIf you encounter any issue with other OCP versions or cloud providers please contact info@vfunction.com.\n\n###Storage:\nThe operator creates two new PersistentVolumeClaims (PVCs) during installation time. For their creation, it relies on the default StorageClass to dynamically provision two PersistentVolumes (PVs). The system must have a default StorageClass in place.\n\nBoth PersistentVolumes are accessed with ReadWriteOnce mode.\n\n###Project:\nThe operator should be installed in a new and dedicated project (namespace). If you intend to install more than one vFunction operands in the same cluster, please use different projects for each one. Installation of more than one operand on the same cluster will allow scaling by load balancing multiple applications to different vFunction servers.\n\n## Installation instructions\n\n1. Prepare the YAML file to use in the installation:\n\n    a. Copy the following YAML template into a text editor:\n\n    ```yaml\n        apiVersion: vfunction.com/v1\n        kind: VfunctionServer\n        metadata:\n          name: vfunction\n          namespace: vfunction\n          labels:\n            name: vfunction\n            app.kubernetes.io/name: vfunction\n            app.kubernetes.io/instance: vfunction-server\n            app.kubernetes.io/managed-by: operator\n        spec:\n          host: \"http://my.domain.com\"\n          org_name: \"MyCompany\"\n          upgrade: \"Daily\"\n          admin:\n            email: \"admin@mycompany.com\"\n            name: \"Admin\"\n            password: \"Password1!\"\n          smtp:\n            password: \"\"\n            url: \"\"\n            identity: \"\"\n            user: \"\"\n          measurements:\n            auto_scaling: \"No\"\n            min_number_of_services: \"2\"\n            max_number_of_services: \"10\"\n          tls:\n            crt: |\n              -----BEGIN CERTIFICATE-----\n              ...\n              -----END CERTIFICATE-----\n            key: |\n              -----BEGIN PRIVATE KEY-----\n              ...\n              -----END PRIVATE KEY-----\n    ```\n    b. Customize the template fields by replacing with your information:\n\n    - **host**: Enter the FQDN for accessing the vFunction dashboard.\n                Make sure that you use a domain name and not an IP address. Writing \"https://\" will mandate TLS while writing \"http://\" will expose the server through HTTP.\n    - **org_name**: Enter your organization name.\n    - **upgrade**: Choose auto-upgrade mode\n        - **Daily**: The operator will check for a new version every day at 3 AM and will install it automatically (default).\n        - **Always**: The operator will check for a new version every 10 minutes and will install it automatically.\n        - **Never**: The automatic upgrading mechanism is off.\n        - **Maintenance**: Put the operator in a maintenance mode.\n\n    - **admin.email**: Enter the email address of your administrator.\n    - **admin.name**: Enter the name of your administrator.\n    - **admin.password**: Enter the password you want to use for the vFunction administrator.\n                          The password should be at least 8 characters long, and consist of at least one lowercase letter, at least one uppercase letter, at least one number, and at least one special character.\n    - **smtp.user**: Enter the email address for a designated user for the SMTP server (optional).\n    - **smtp.password**: Enter this user\u2019s password (optional).\n    - **smtp.identity**: Enter this user\u2019s password (optional).\n    - **smtp.url**: Enter the SMTP server URL (optional).\n    - **tls.crt**: If your host FQDN starts with \u201chttps\u201d, paste in the certifications you have for using the TLS connection.\n    - **tls.key**: If your host FQDN starts with \u201chttps\u201d, enter the key you have for using the TLS connection.\n    - **measurements.auto_scaling**: Indicates if the measurement services auto scalling is active.\n    - **measurements.min_num_of_services**: Minimum Number of measurement service pods.\n    - **measurements.max_num_of_services**: Maximum Number of measurement service pods.\n    - **measurements.S3**: Save all measurements data to S3, instead of local PV (optional).\n        - **measurements.S3.bucket**: Measurements S3 bucket name.\n        - **measurements.S3.key**: Measurements S3 key.\n        - **measurements.S3.secret**: Measurements S3 secret.\n        - **measurements.S3.region**: Measurements S3 region.\n    - **backup.mysql.S3**: Backup MySQL to S3 (optional).\n        - **backup.mysql.S3.bucket**: MySQL backup S3 bucket name.\n        - **backup.mysql.S3.key**: MySQL backup S3 key.\n        - **backup.mysql.S3.secret**: MySQL backup S3 secret.\n        - **backup.mysql.S3.region**: MySQL backup S3 region.\n\n1. In the Installed Operators window choose and click on vFunction Operator and then Create Instance.\n1. In the Create vFunctionServer window, paste the YAML file that you created in step 1.\n1. Click Create.\n1. You can now click on your new created vFunction operand in order to see its details and installation progress.\n\n## Verifying the installation\n\nCheck that the operand installed successfully:\n\n1. Check that the \"Operand State\" property shows \u201cWorking\u201d.\n1. Check that the \"Successfully Installed\" property shows \"Yes\".\n\nIf \"Operand State\" shows \"Failed\", it indicates the operand wasn\u2019t installed correctly. Check the events and logs for all pods (operator and image containers) for any issues. In the event that you cannot troubleshoot, contact vFunction support.\n\n## After installation\n\nThe vFunction site is now accessible via the newly created vFunction application custom address, for example, my.domain.com. There are two ways you can access the vFunction dashboard.\n\n### Access using the router canonical hostname\n\n1. Update your DNS provider by creating a canonical name (CNAME) record.\nThis record should point to your host address, and to the \u201dvfunction\u201d subdomain of the  OpenShift canonical router hostname as the alias.\nFor example, ***my.domain.com.   CNAME   vfunction.apps.ocp4.my-openshift.com.***\n2. Find your cluster Router Canonical Hostname address in the newly created vfunction-route-xxx under your vFunction OpenShift project -> **Networking** -> **Routes** -> **vfunction-route-xxx** route -> **Router Canonical Hostname** field.\nYou can now access the dashboard using your defined \"host\" spec property (as above).\n\n### Access using the nginx service location\n\nYou may use this access method if your OpenShift is installed on a provider that supports exposing LoadBalancer-type services.\n1. Update your DNS provider by creating a canonical name (CNAME) record.\nThis record should point to your host address and to the vfunction-nginx-xxx service location.\nFor example, ***my.domain.com.   CNAME   a05951ed7cdf-1394239323.us-east-1.elb.amazonaws.com.***\n1. Point your custom domain to the vfunction-nginx-xxx service's external IP location, which you can find in the OpenShift project > **Networking** -> **Services** -> **vfunction-nginx-xxx** service > **Service Address** > **Location** field.\n\n## Upgrade and Rollback\n\nThe vFunction operator includes a built-in auto-upgrade mechanism.\n\nYou can choose one of 4 upgrading modes:\n- **Daily**: The operator will check for a new version every day at 3 AM and will install it automatically (default).\n- **Always**: The operator will check for a new version every 10 minutes and will install it automatically.\n- **Never**: The automatic upgrading mechanism is off.\n- **Maintenance**: Put the operator in a maintenance mode.\n\nFor an on-demand upgrade,  you can change anytime the upgrading mode from \u201cNever\u201d to \u201cAlways\u201d, wait for the operand to be upgraded, and change again to \u201cNever\u201d.\n\nDuring the upgrade, the \"Operand State\" property will change to \u201cUpgrading...\u201d and back again to \u201cWorking\u201d after a successful upgrade.\n\nIn case of a failure upgrading the operand, an automatic rollback to the last working version will occur. The failed version will be marked as defective and the operator will not try to upgrade to it again.\n\nChoosing the \"Maintenance\" option will tell the operator to take down all pods, so you can safely fix storage issues, return volumes from snapshots, etc.\nAfter finishing the maintenance, return the upgrade mode to your original desired policy.",
      "csv_display_name": "vFunction Operator",
      "csv_metadata_description": "vFunction is a cutting-edge code analysis, machine learning, and automation to boost your Java modernization projects.",
      "csv_name": "vfunction-server-operator.v2.2.469",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:56:05.367000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "vfunction-server-operator",
      "provided_apis": [
        {
          "group": "vfunction.com",
          "kind": "VfunctionServer",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:60d1965460101d0fd90ecc9499d0a6d4c9684a54ada61a43a253d30661fab22f",
          "image": "registry.connect.redhat.com/vfunction/vfunction-server-operator@sha256:60d1965460101d0fd90ecc9499d0a6d4c9684a54ada61a43a253d30661fab22f",
          "name": "vfunction-server-operator-60d1965460101d0fd90ecc9499d0a6d4c9684a54ada61a43a253d30661fab22f-annotation"
        },
        {
          "digest": "sha256:60d1965460101d0fd90ecc9499d0a6d4c9684a54ada61a43a253d30661fab22f",
          "image": "registry.connect.redhat.com/vfunction/vfunction-server-operator@sha256:60d1965460101d0fd90ecc9499d0a6d4c9684a54ada61a43a253d30661fab22f",
          "name": "vfunction-server-operator"
        },
        {
          "digest": "sha256:a6e06ea08fffa33b709d4d1240587bb3ab5b4cc6a28f493a227555e88e645798",
          "image": "registry.connect.redhat.com/vfunction/vfunction-mysql@sha256:a6e06ea08fffa33b709d4d1240587bb3ab5b4cc6a28f493a227555e88e645798",
          "name": "vfunction_mysql_original_image"
        },
        {
          "digest": "sha256:435d1489aaf29a811081ddb51f40ae692e5833f42c31dbced6bc189c0ddc40ab",
          "image": "registry.connect.redhat.com/vfunction/vfunction-nginx@sha256:435d1489aaf29a811081ddb51f40ae692e5833f42c31dbced6bc189c0ddc40ab",
          "name": "vfunction_nginx_original_image"
        },
        {
          "digest": "sha256:b778cb9c724a59e51b4cb9088047be471cdf338f1138c31b81f79e50a491203f",
          "image": "registry.connect.redhat.com/vfunction/vfunction-storage@sha256:b778cb9c724a59e51b4cb9088047be471cdf338f1138c31b81f79e50a491203f",
          "name": "vfunction_storage_original_image"
        },
        {
          "digest": "sha256:21ca95a0209f3c557a45658452d154777f928539a93129148470562c79e68d70",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-idp@sha256:21ca95a0209f3c557a45658452d154777f928539a93129148470562c79e68d70",
          "name": "vfunction_vfapi_idp_original_image"
        },
        {
          "digest": "sha256:35ffbee4b0eead58706b23cf5a702b1d55d2a7913cd0019cefbff94957d4e5d6",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-measurements@sha256:35ffbee4b0eead58706b23cf5a702b1d55d2a7913cd0019cefbff94957d4e5d6",
          "name": "vfunction_vfapi_measurements_original_image"
        },
        {
          "digest": "sha256:bcc2c3d6222af95e614318daea3108fffc6bc77aa17b23031cce296a3811b79f",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-organizations@sha256:bcc2c3d6222af95e614318daea3108fffc6bc77aa17b23031cce296a3811b79f",
          "name": "vfunction_vfapi_organizations_original_image"
        },
        {
          "digest": "sha256:e47cc051953976a0e075e8cfb457cd4749e9b9e4394f2fbecab2458c2ade92ca",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-users@sha256:e47cc051953976a0e075e8cfb457cd4749e9b9e4394f2fbecab2458c2ade92ca",
          "name": "vfunction_vfapi_users_original_image"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.2.469",
      "version_original": "2.2.469"
    },
    {
      "_id": "61a57dbc3e9240fca360f56d",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "OpenshiftXray",
          "metadata": {
            "name": "openshiftxray"
          },
          "spec": {
            "xray": {
              "analysis": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-analysis"
                },
                "name": "xray-analysis",
                "podManagementPolicy": "Parallel",
                "updateStrategy": "RollingUpdate"
              },
              "common": {
                "xrayGroupId": "1000721035",
                "xrayUserId": "1000721035",
                "xrayVersion": "3.33.3-1"
              },
              "database": {
                "password": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "global": {},
              "indexer": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-indexer"
                },
                "name": "xray-indexer",
                "podManagementPolicy": "Parallel",
                "updateStrategy": "RollingUpdate"
              },
              "initContainerImage": "registry.connect.redhat.com/jfrog/init@sha256:164b41720a37f75c6129c8a28d05cc56f821022313d44ff918cce4a2146d93e8",
              "persist": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-persist"
                },
                "name": "xray-persist",
                "persistence": {
                  "size": "10Gi"
                },
                "podManagementPolicy": "Parallel",
                "updateStrategy": "RollingUpdate"
              },
              "postgresql": {
                "enabled": false
              },
              "rabbitmq": {
                "auth": {
                  "erlangCookie": "XRAYRABBITMQCLUSTER",
                  "password": "xray",
                  "tls": {
                    "caCertificate": "",
                    "enabled": false,
                    "failIfNoPeerCert": true,
                    "serverCertificate": "",
                    "serverKey": "",
                    "sslOptionsVerify": "verify_peer"
                  },
                  "username": "xray"
                },
                "enabled": true,
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-rabbitmq",
                  "tag": "3.33.3-1"
                },
                "podSecurityContext": {
                  "fsGroup": 1000721001,
                  "runAsUser": 1000721001
                },
                "rbac": {
                  "create": true
                },
                "replicaCount": 1
              },
              "rabbitmq-ha": {
                "enabled": false,
                "image": {
                  "repository": "registry.connect.redhat.com/jfrog/xray-rabbitmq",
                  "tag": "3.33.3-1"
                },
                "initContainer": {
                  "enabled": false
                },
                "managementPassword": "guest",
                "managementUsername": "guest",
                "rabbitmqPassword": "guest",
                "rabbitmqUsername": "guest",
                "replicaCount": 1,
                "securityContext": {
                  "fsGroup": 1000721035,
                  "runAsGroup": 1000721035,
                  "runAsUser": 1000721035
                }
              },
              "replicaCount": 1,
              "router": {
                "image": {
                  "imagePullPolicy": "IfNotPresent",
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-router",
                  "tag": "3.33.3-1"
                },
                "name": "router"
              },
              "server": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-server"
                },
                "name": "xray-server",
                "podManagementPolicy": "Parallel",
                "replicaCount": 1,
                "updateStrategy": "RollingUpdate"
              },
              "unifiedUpgradeAllowed": "true",
              "xray": {
                "consoleLog": false,
                "jfrogUrl": "OVERRIDE",
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/xray-operator-bundle@sha256:57874a477ec87a6f1b54d45c821f42cde38291c7f8a412263a6a8a40832cbb16",
      "bundle_path_digest": "sha256:57874a477ec87a6f1b54d45c821f42cde38291c7f8a412263a6a8a40832cbb16",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:26:20.956000+00:00",
      "csv_description": "## Overview\nOpenshift Operator to deploy JFrog Xray Continuous Security scanner into your Openshift cluster.\nNOTE: Artifactory is required for JFrog Xray to connect with and scan artifacts against.\n### Major version v2.0.4 Breaking change notification !!!\nThis release has major bug fix for Rabbitmq Pod.\nPlease update to version 2.0.4 of the operator.\n### Major version v2.0.0 Breaking change notification !!!\nXray is dependent upon Rabbitmq. The version of Rabbitmq that this chart uses has significantly changed from version 1.1.8 of the operator.\nFor full details on how to migrate please visit:\n`https://github.com/jfrog/charts/blob/master/stable/xray/RABBITMQ_MIGRATION_NOTES.md`\n### Security Context Constraints\nTo deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc.\n\n```\noc adm policy add-scc-to-user anyuid -z xray-operator\n```\n```\noc adm policy add-scc-to-user anyuid -z openshiftxray\n```\n```\noc adm policy add-scc-to-user anyuid -z openshiftxray-rabbitmq-ha\n```\n\n## Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Xray Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Xray Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Xray\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\nJFROG_URL\nDATABASE_URL\nDATABASE_USER\nDATABASE_PASSWORD\n```\n\nJFROG_URL is the external ip or DNS of your Artifactory to connect Xray to. Artifactory is required to use this operator.\nYou can set your JFROG_URL to the service name of your Artifactory Nginx:\n``` oc get svc -n my_namespace | grep nginx ```\nDATABASE_URL must be a Postgresql URL in the format:\n``\npostgres://postgres-postgresql:5432/xraydb?sslmode=disable\n``\nDATABASE_USER and DATABASE_PASSWORD must supply a valid user on Postgresql.\n\nClick Create for Xray to deploy into OpenShift.\n\nOpen Artifactory in a web browser to complete the onboarding wizard for Xray!\n\n### Air gap environments\n\nTo use Xray Operator in an air gap environment you will need to download the images as image streams into your Openshift air gap cluster manually.\n\nUse the image overrides to then specify the image stream locations that are local to your cluster.\n\nNext you will need to setup the database of index data for xray to use when scanning artifacts.\n\nFollow the link below for instructions on setup:\n\nhttps://www.jfrog.com/confluence/display/JFROG/Configuring+Xray#ConfiguringXray-SynchronizingtheDatabase\n\n",
      "csv_display_name": "JFrog Xray Continuous Security Operator",
      "csv_metadata_description": "JFrog Xray Enterprise deploys Xray continuous security scanner into Openshift (Requires Jfrog Artifactory)",
      "csv_name": "xray-operator.v2.0.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:56:09.674000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "openshiftxray-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftXray",
          "plural": "openshiftxrays",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:79fcd178d5f5f0d69daf714edd9fbf8f1bebb784513cf5d45ccbd7fd8c3a3a2c",
          "image": "registry.connect.redhat.com/jfrog/xray-operator@sha256:79fcd178d5f5f0d69daf714edd9fbf8f1bebb784513cf5d45ccbd7fd8c3a3a2c",
          "name": "xray-operator-79fcd178d5f5f0d69daf714edd9fbf8f1bebb784513cf5d45ccbd7fd8c3a3a2c-annotation"
        },
        {
          "digest": "sha256:79fcd178d5f5f0d69daf714edd9fbf8f1bebb784513cf5d45ccbd7fd8c3a3a2c",
          "image": "registry.connect.redhat.com/jfrog/xray-operator@sha256:79fcd178d5f5f0d69daf714edd9fbf8f1bebb784513cf5d45ccbd7fd8c3a3a2c",
          "name": "xray-operator"
        },
        {
          "digest": "sha256:8321f4971e7f65f8eb39cda6b6fde2e504cbdbce2139849593d8d8431484cba0",
          "image": "registry.connect.redhat.com/jfrog/xray-server@sha256:8321f4971e7f65f8eb39cda6b6fde2e504cbdbce2139849593d8d8431484cba0",
          "name": "xray_server_image_repository"
        },
        {
          "digest": "sha256:c96159770e67caa4004444361549292732d7a080d3ffe44900c148e387ae5f85",
          "image": "registry.connect.redhat.com/jfrog/xray-analysis@sha256:c96159770e67caa4004444361549292732d7a080d3ffe44900c148e387ae5f85",
          "name": "xray_analysis_image_repository"
        },
        {
          "digest": "sha256:ddf1b7980fcc690947c5385141725b20af250cf0e332ededc50babb217840265",
          "image": "registry.connect.redhat.com/jfrog/xray-persist@sha256:ddf1b7980fcc690947c5385141725b20af250cf0e332ededc50babb217840265",
          "name": "xray_persist_image_repository"
        },
        {
          "digest": "sha256:68f5d645dcdfeeb8d3364e176012518faaa995e5a585113fe7904fdf04f9adfc",
          "image": "registry.connect.redhat.com/jfrog/xray-indexer@sha256:68f5d645dcdfeeb8d3364e176012518faaa995e5a585113fe7904fdf04f9adfc",
          "name": "xray_indexer_image_repository"
        },
        {
          "digest": "sha256:1bf671848a06330b350ffeb0c2e90c1591cce5930d1398126377c01c70841319",
          "image": "registry.connect.redhat.com/jfrog/xray-router@sha256:1bf671848a06330b350ffeb0c2e90c1591cce5930d1398126377c01c70841319",
          "name": "xray_router_image_repository"
        },
        {
          "digest": "sha256:65a95da372693c96bdf9b7bcf21e757dc09569cf2eb66afd9bca4c552ad78f01",
          "image": "registry.connect.redhat.com/jfrog/xray-rabbitmq@sha256:65a95da372693c96bdf9b7bcf21e757dc09569cf2eb66afd9bca4c552ad78f01",
          "name": "xray_rabbitmq_image_repository"
        },
        {
          "digest": "sha256:164b41720a37f75c6129c8a28d05cc56f821022313d44ff918cce4a2146d93e8",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:164b41720a37f75c6129c8a28d05cc56f821022313d44ff918cce4a2146d93e8",
          "name": "init-164b41720a37f75c6129c8a28d05cc56f821022313d44ff918cce4a2146d93e8-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.0.9",
      "version_original": "2.0.9"
    },
    {
      "_id": "61a57dc4bfd4a5234d5960e5",
      "alm_examples": [
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixAgent",
          "metadata": {
            "labels": {
              "app": "agent",
              "vendor": "zabbix"
            },
            "name": "zabbix-agent"
          },
          "spec": {
            "active_allow": true,
            "activeservers": "",
            "allow_key": "",
            "allow_privileged": true,
            "buffer#": 100,
            "buffer_send": 5,
            "debug_level": 3,
            "deny_key": "system.run[*]",
            "host_interface": "",
            "host_interface_item": "",
            "hostname": "",
            "hostname_item": "system.hostname",
            "load_module": "",
            "log_remote_commands": true,
            "max_lines_per_second": 20,
            "metadata": "",
            "metadata_item": "",
            "passive_allow": true,
            "passive_servers": "",
            "refresh_active_checks": 120,
            "server_host": "zabbix-server",
            "start_agents": 3,
            "timeout": 3,
            "tls_accept": "unencrypted",
            "tls_ca_file_name": "",
            "tls_cert_file_name": "",
            "tls_cipher_all": "",
            "tls_cipher_cert_13": "",
            "tls_cipher_psk": "",
            "tls_cipherall_13": "",
            "tls_connect": "unencrypted",
            "tls_crl_file_name": "",
            "tls_key_file_name": "",
            "tls_psk_file_name": "",
            "tls_psk_identity": "",
            "tls_server_cert_issuer": "",
            "tls_server_cert_subject": "",
            "tlsciphercert": "",
            "tlscipherpsk13": "",
            "unsafe_user_parameters": false
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixAppliance",
          "metadata": {
            "labels": {
              "app": "appliance",
              "vendor": "zabbix"
            },
            "name": "zabbix-appliance"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_double_ieee754": true,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixFull",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-full"
          },
          "spec": {
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlsciphercert": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixProxyMysql",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-mysql"
          },
          "spec": {
            "db_server_port": 3306,
            "internal_db": true,
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix_proxy",
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixProxySqlite",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-sqlite"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "proxy#": 1
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixServer",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-server"
          },
          "spec": {
            "db_server_host": "mysql-server",
            "db_server_port": 3306,
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix",
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixAgent",
          "metadata": {
            "labels": {
              "app": "agent",
              "vendor": "zabbix"
            },
            "name": "zabbix-agent"
          },
          "spec": {
            "active_allow": true,
            "activeservers": "",
            "allow_key": "",
            "allow_privileged": true,
            "buffer#": 100,
            "buffer_send": 5,
            "debug_level": 3,
            "deny_key": "system.run[*]",
            "host_interface": "",
            "host_interface_item": "",
            "hostname": "",
            "hostname_item": "system.hostname",
            "load_module": "",
            "log_remote_commands": true,
            "max_lines_per_second": 20,
            "metadata": "",
            "metadata_item": "",
            "passive_allow": true,
            "passive_servers": "",
            "refresh_active_checks": 120,
            "server_host": "zabbix-server",
            "start_agents": 3,
            "timeout": 3,
            "tls_accept": "unencrypted",
            "tls_ca_file_name": "",
            "tls_cert_file_name": "",
            "tls_cipher_all": "",
            "tls_cipher_cert_13": "",
            "tls_cipher_psk": "",
            "tls_cipherall_13": "",
            "tls_connect": "unencrypted",
            "tls_crl_file_name": "",
            "tls_key_file_name": "",
            "tls_psk_file_name": "",
            "tls_psk_identity": "",
            "tls_server_cert_issuer": "",
            "tls_server_cert_subject": "",
            "tlsciphercert": "",
            "tlscipherpsk13": "",
            "unsafe_user_parameters": false
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixServer",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-server"
          },
          "spec": {
            "db_server_host": "mysql-server",
            "db_server_port": 3306,
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix",
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysqlsecret": "mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixProxySqlite",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-sqlite"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "proxy#": 1
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixProxyMysql",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-mysql"
          },
          "spec": {
            "db_server_port": 3306,
            "internal_db": true,
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix_proxy",
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixFull",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-full"
          },
          "spec": {
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlsciphercert": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixAppliance",
          "metadata": {
            "labels": {
              "app": "appliance",
              "vendor": "zabbix"
            },
            "name": "zabbix-appliance"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_double_ieee754": true,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "mysql-secrets"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zabbix/zabbixoperator-certified-bundle@sha256:236d7cc772634f20540dc153f9a7fc66357d7d4852962c5c7b5daff61c99e5c8",
      "bundle_path_digest": "sha256:236d7cc772634f20540dc153f9a7fc66357d7d4852962c5c7b5daff61c99e5c8",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "lts",
      "creation_date": "2021-11-30T01:26:28.907000+00:00",
      "csv_description": "## About this Operator\n\nZabbix helps you to real-time monitoring of millions of metrics collected from tens of thousands of servers, virtual machines and network devices.\nThe Zabbix Operator allows users to easily deploy, manage, and maintain Zabbix deployments on OpenShift. By installing this integration you will be able to deploy Zabbix server / proxies and other components with a single command.\n## Supported Features\n* **Zabbix Server** - Simple Zabbix installation with included Zabbix server, Zabbix web-interface and Zabbix Java Gateway with MySQL database support. The feature does not provide MySQL service and requires an external MySQL database. \n* **Zabbix Server (Full)** - Zabbix installation with included Zabbix server, Zabbix web-interface, Zabbix Java Gateway and MySQL server instance.\n* **Zabbix proxy (SQLite3)** - Very simple way to gain power of Zabbix proxy. The feature has  SQLite3 support for Zabbix proxies and allow to specify amount of proxies. \n* **Zabbix proxy (MySQL)** - Another option of Zabbix proxy. The option support and deliver MySQL database.\n* **Zabbix agent** - Zabbix agent can be deployed on each available node for stability and performance monitoring on remote nodes. It allows to gather metrics with full automation!\n* **Zabbix Appliance** - Zabbix appliance very simple way to test and check Zabbix features. The option provides all core components in one solution. It includes Zabbix server, Zabbix Java Gateway, Zabbix web-interface and MySQL server in deployment. It is very useful for testing Zabbix features!\n## Prerequisites\nAll deployment options are require additional information during deployment. Please, check the following instructions and provide required configuration:\n* **Zabbix Server** - MySQL database host information and MySQL database credentials in specially formatted *Secret*. Additionally it is possible to specify SSL certificates for HTTPS support in *Secret*.\n* **Zabbix Server (Full)** - MySQL database credentials in specially formatted *Secret*. MySQL database volume name information. Additionally it is possible to specify SSL certificates for HTTPS support in *Secret*.\n* **Zabbix proxy (SQLite3)** - Zabbix server host information only.\n* **Zabbix proxy (MySQL)** - MySQL database credentials in specially formatted *Secrets* and Zabbix server host information.\n* **Zabbix agent** - Zabbix server host information only for outgoing and incoming connections. Zabbix agent uses \"privileged\" mode to monitor node resources! For example, running processes.\n* **Zabbix Appliance** - MySQL database credentials in specially formatted *Secret*. MySQL database volume name information. Additionally it is possible to specify SSL certificates for HTTPS support in *Secret*.\n### MySQL credentials\n```\nkind: Secret\napiVersion: v1\nmetadata:\n  name: zabbix-full-secrets\ndata:\n  mysql_root_password: emFiYml4X3N1cGVyX3Jvb3Q= [1]\n  mysql_zabbix_password: emFiYml4X3VzZXJfcGFzc3dvcmQ= [2]\n  mysql_zabbix_username: emFiYml4 [3]\ntype: Opaque\n```\nUsing MySQL root password (*mysqlrootpassword* [1]) Zabbix server / proxy will try to create MySQL database schema with grant permissions to *mysqlzabbixusername* [2] and *mysqlzabbixpassword* [3].\n### SSL certificates for HTTPS\n```\nkind: Secret\napiVersion: v1\nmetadata:\n  name: zabbix-web-sslsecret\ndata:\n  ssl.crt: >-\n   < ssl.crt data>\n  ssl.key: >-\n\t < ssl.key data >\n  dhparam.pem: >-\n   <  dhparam.pem data >\n```\nFiles *ssl.crt*, *ssl.key* and *dhparam.perm* are required for Zabbix web-interface for SSL support.\n",
      "csv_display_name": "Zabbix Operator",
      "csv_metadata_description": "Zabbix operator with multiple deployment variants and different components",
      "csv_name": "zabbix-operator-certified.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:56:15.682000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "zabbix-operator-certified",
      "provided_apis": [
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixProxyMysql",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixProxySqlite",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixServer",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixAgent",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixAppliance",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixFull",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "image": "registry.connect.redhat.com/zabbix/zabbixoperator-certified@sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "name": "zabbixoperator-certified-c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66-annotation"
        },
        {
          "digest": "sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "image": "registry.connect.redhat.com/zabbix/zabbixoperator-certified@sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "name": "ansible"
        },
        {
          "digest": "sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "image": "registry.connect.redhat.com/zabbix/zabbixoperator-certified@sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "name": "operator"
        },
        {
          "digest": "sha256:2f76e7cbece9d9366b613bcb1079b030ddbcc5e97b2f133b73bd0131f0869725",
          "image": "registry.connect.redhat.com/zabbix/zabbix-server-mysql-50@sha256:2f76e7cbece9d9366b613bcb1079b030ddbcc5e97b2f133b73bd0131f0869725",
          "name": "zbx_server_mysql"
        },
        {
          "digest": "sha256:9f3ba82445ea3d9754f016e21b2ea1c99c1958da928f49aee1b18377af78d365",
          "image": "registry.connect.redhat.com/zabbix/zabbix-web-mysql-50@sha256:9f3ba82445ea3d9754f016e21b2ea1c99c1958da928f49aee1b18377af78d365",
          "name": "zbx_web_mysql"
        },
        {
          "digest": "sha256:a216de448dc10b2797a70f4fc6664c2bd611840b7b6c26f066635d48c606bf06",
          "image": "registry.connect.redhat.com/zabbix/zabbix-java-gateway-50@sha256:a216de448dc10b2797a70f4fc6664c2bd611840b7b6c26f066635d48c606bf06",
          "name": "zbx_java_gateway"
        },
        {
          "digest": "sha256:054ad28ade616642fb50fd38a48df2d00a9c0c6a57df1e367caeceb6469f6c42",
          "image": "registry.connect.redhat.com/zabbix/zabbix-proxy-mysql-50@sha256:054ad28ade616642fb50fd38a48df2d00a9c0c6a57df1e367caeceb6469f6c42",
          "name": "zbx_proxy_mysql"
        },
        {
          "digest": "sha256:713a6223a01ee57efb719d6f491ef779d74104a1bc1b8599eade8b3f4a3318ed",
          "image": "registry.connect.redhat.com/zabbix/zabbix-proxy-sqlite-50@sha256:713a6223a01ee57efb719d6f491ef779d74104a1bc1b8599eade8b3f4a3318ed",
          "name": "zbx_proxy_sqlite"
        },
        {
          "digest": "sha256:229562a27ed45319ef17397fe81cac81129c84eccd2c14f6085531a86ef9b87d",
          "image": "registry.connect.redhat.com/zabbix/zabbix-agent-50@sha256:229562a27ed45319ef17397fe81cac81129c84eccd2c14f6085531a86ef9b87d",
          "name": "zbx_agent"
        },
        {
          "digest": "sha256:7236c68c494f572edf64ced85c3a083b7eafff1c6562e95bdc50e50c37e3e3bf",
          "image": "registry.connect.redhat.com/zabbix/zabbix-appliance-50@sha256:7236c68c494f572edf64ced85c3a083b7eafff1c6562e95bdc50e50c37e3e3bf",
          "name": "zbx_appliance"
        },
        {
          "digest": "sha256:e7541d9fbcb7a71ac8a68cc4efc1806bab74023961c7d3fb562ded320df90c43",
          "image": "registry.redhat.io/rhel8/mysql-80@sha256:e7541d9fbcb7a71ac8a68cc4efc1806bab74023961c7d3fb562ded320df90c43",
          "name": "db_mysql"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "61a57dccbfd4a5234d5960e6",
      "alm_examples": [
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixAgent",
          "metadata": {
            "labels": {
              "app": "agent",
              "vendor": "zabbix"
            },
            "name": "zabbix-agent"
          },
          "spec": {
            "active_allow": true,
            "activeservers": "",
            "allow_key": "",
            "allow_privileged": true,
            "buffer#": 100,
            "buffer_send": 5,
            "debug_level": 3,
            "deny_key": "system.run[*]",
            "host_interface": "",
            "host_interface_item": "",
            "hostname": "",
            "hostname_item": "system.hostname",
            "load_module": "",
            "log_remote_commands": true,
            "max_lines_per_second": 20,
            "metadata": "",
            "metadata_item": "",
            "passive_allow": true,
            "passive_servers": "",
            "refresh_active_checks": 120,
            "server_host": "zabbix-server",
            "start_agents": 3,
            "timeout": 3,
            "tls_accept": "unencrypted",
            "tls_ca_file_name": "",
            "tls_cert_file_name": "",
            "tls_cipher_all": "",
            "tls_cipher_cert_13": "",
            "tls_cipher_psk": "",
            "tls_cipherall_13": "",
            "tls_connect": "unencrypted",
            "tls_crl_file_name": "",
            "tls_key_file_name": "",
            "tls_psk_file_name": "",
            "tls_psk_identity": "",
            "tls_server_cert_issuer": "",
            "tls_server_cert_subject": "",
            "tlsciphercert": "",
            "tlscipherpsk13": "",
            "unsafe_user_parameters": false
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixAppliance",
          "metadata": {
            "labels": {
              "app": "appliance",
              "vendor": "zabbix"
            },
            "name": "zabbix-appliance"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_double_ieee754": true,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixFull",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-full"
          },
          "spec": {
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlsciphercert": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixProxyMysql",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-mysql"
          },
          "spec": {
            "db_server_port": 3306,
            "internal_db": true,
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix_proxy",
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixProxySqlite",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-sqlite"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "proxy#": 1
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixServer",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-server"
          },
          "spec": {
            "db_server_host": "mysql-server",
            "db_server_port": 3306,
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix",
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixAgent",
          "metadata": {
            "labels": {
              "app": "agent",
              "vendor": "zabbix"
            },
            "name": "zabbix-agent"
          },
          "spec": {
            "active_allow": true,
            "activeservers": "",
            "allow_key": "",
            "allow_privileged": true,
            "buffer#": 100,
            "buffer_send": 5,
            "debug_level": 3,
            "deny_key": "system.run[*]",
            "host_interface": "",
            "host_interface_item": "",
            "hostname": "",
            "hostname_item": "system.hostname",
            "load_module": "",
            "log_remote_commands": true,
            "max_lines_per_second": 20,
            "metadata": "",
            "metadata_item": "",
            "passive_allow": true,
            "passive_servers": "",
            "refresh_active_checks": 120,
            "server_host": "zabbix-server",
            "start_agents": 3,
            "timeout": 3,
            "tls_accept": "unencrypted",
            "tls_ca_file_name": "",
            "tls_cert_file_name": "",
            "tls_cipher_all": "",
            "tls_cipher_cert_13": "",
            "tls_cipher_psk": "",
            "tls_cipherall_13": "",
            "tls_connect": "unencrypted",
            "tls_crl_file_name": "",
            "tls_key_file_name": "",
            "tls_psk_file_name": "",
            "tls_psk_identity": "",
            "tls_server_cert_issuer": "",
            "tls_server_cert_subject": "",
            "tlsciphercert": "",
            "tlscipherpsk13": "",
            "unsafe_user_parameters": false
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixServer",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-server"
          },
          "spec": {
            "db_server_host": "mysql-server",
            "db_server_port": 3306,
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix",
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysqlsecret": "mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixProxySqlite",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-sqlite"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "proxy#": 1
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixProxyMysql",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-mysql"
          },
          "spec": {
            "db_server_port": 3306,
            "internal_db": true,
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix_proxy",
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixFull",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-full"
          },
          "spec": {
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlsciphercert": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixAppliance",
          "metadata": {
            "labels": {
              "app": "appliance",
              "vendor": "zabbix"
            },
            "name": "zabbix-appliance"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_double_ieee754": true,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "mysql-secrets"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zabbix/zabbixoperator-certified-bundle@sha256:3351d4e9f8ddf2b4498852335ebd7197188ff3f167919c603c5dc77b08774091",
      "bundle_path_digest": "sha256:3351d4e9f8ddf2b4498852335ebd7197188ff3f167919c603c5dc77b08774091",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "lts",
      "creation_date": "2021-11-30T01:26:36.803000+00:00",
      "csv_description": "## About this Operator\n\nZabbix helps you to real-time monitoring of millions of metrics collected from tens of thousands of servers, virtual machines and network devices.\nThe Zabbix Operator allows users to easily deploy, manage, and maintain Zabbix deployments on OpenShift. By installing this integration you will be able to deploy Zabbix server / proxies and other components with a single command.\n## Supported Features\n* **Zabbix Server** - Simple Zabbix installation with included Zabbix server, Zabbix web-interface and Zabbix Java Gateway with MySQL database support. The feature does not provide MySQL service and requires an external MySQL database. \n* **Zabbix Server (Full)** - Zabbix installation with included Zabbix server, Zabbix web-interface, Zabbix Java Gateway and MySQL server instance.\n* **Zabbix proxy (SQLite3)** - Very simple way to gain power of Zabbix proxy. The feature has  SQLite3 support for Zabbix proxies and allow to specify amount of proxies. \n* **Zabbix proxy (MySQL)** - Another option of Zabbix proxy. The option support and deliver MySQL database.\n* **Zabbix agent** - Zabbix agent can be deployed on each available node for stability and performance monitoring on remote nodes. It allows to gather metrics with full automation!\n* **Zabbix Appliance** - Zabbix appliance very simple way to test and check Zabbix features. The option provides all core components in one solution. It includes Zabbix server, Zabbix Java Gateway, Zabbix web-interface and MySQL server in deployment. It is very useful for testing Zabbix features!\n## Prerequisites\nAll deployment options are require additional information during deployment. Please, check the following instructions and provide required configuration:\n* **Zabbix Server** - MySQL database host information and MySQL database credentials in specially formatted *Secret*. Additionally it is possible to specify SSL certificates for HTTPS support in *Secret*.\n* **Zabbix Server (Full)** - MySQL database credentials in specially formatted *Secret*. MySQL database volume name information. Additionally it is possible to specify SSL certificates for HTTPS support in *Secret*.\n* **Zabbix proxy (SQLite3)** - Zabbix server host information only.\n* **Zabbix proxy (MySQL)** - MySQL database credentials in specially formatted *Secrets* and Zabbix server host information.\n* **Zabbix agent** - Zabbix server host information only for outgoing and incoming connections. Zabbix agent uses \"privileged\" mode to monitor node resources! For example, running processes.\n* **Zabbix Appliance** - MySQL database credentials in specially formatted *Secret*. MySQL database volume name information. Additionally it is possible to specify SSL certificates for HTTPS support in *Secret*.\n### MySQL credentials\n```\nkind: Secret\napiVersion: v1\nmetadata:\n  name: zabbix-full-secrets\ndata:\n  mysql_root_password: emFiYml4X3N1cGVyX3Jvb3Q= [1]\n  mysql_zabbix_password: emFiYml4X3VzZXJfcGFzc3dvcmQ= [2]\n  mysql_zabbix_username: emFiYml4 [3]\ntype: Opaque\n```\nUsing MySQL root password (*mysqlrootpassword* [1]) Zabbix server / proxy will try to create MySQL database schema with grant permissions to *mysqlzabbixusername* [2] and *mysqlzabbixpassword* [3].\n### SSL certificates for HTTPS\n```\nkind: Secret\napiVersion: v1\nmetadata:\n  name: zabbix-web-sslsecret\ndata:\n  ssl.crt: >-\n   < ssl.crt data>\n  ssl.key: >-\n\t < ssl.key data >\n  dhparam.pem: >-\n   <  dhparam.pem data >\n```\nFiles *ssl.crt*, *ssl.key* and *dhparam.perm* are required for Zabbix web-interface for SSL support.\n",
      "csv_display_name": "Zabbix Operator",
      "csv_metadata_description": "Zabbix operator with multiple deployment variants and different components",
      "csv_name": "zabbix-operator-certified.v0.0.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:56:20.721000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "zabbix-operator-certified",
      "provided_apis": [
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixAgent",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixAppliance",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixFull",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixProxyMysql",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixProxySqlite",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixServer",
          "version": "v1alpha1"
        }
      ],
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.0.3",
      "version_original": "0.0.3"
    },
    {
      "_id": "61a57dd4c17162a20c1c68aa",
      "alm_examples": [
        {
          "api_version": "xcrypt.zettaset.com/v1alpha1",
          "kind": "XCrypt",
          "metadata": {
            "name": "zts-masterset"
          },
          "spec": {
            "status": {
              "podNames": "zts-ca",
              "replicas": "1,"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zts/xcrypt-operator-1-bundle@sha256:c3913778f986ae4f3a7d94da2a9d0157233dbb676e3c1eecacbdbc02a864685a",
      "bundle_path_digest": "sha256:c3913778f986ae4f3a7d94da2a9d0157233dbb676e3c1eecacbdbc02a864685a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:26:44.838000+00:00",
      "csv_description": "Zettaset\u2019s RedHat Certified XCrypt Operator allows users to deploy multiple XCrypt components on OpenShift with just a few simple commands. The XCrypt Operator deployment provides software-defined encryption that transparently protects container data throughout your OpenShift environment.\n\n## Core Features\n* **Automated XCrypt provisioning** - Deploying a Zettaset XCrypt has never been easier. Adjust cluster specific configuration and let the Zettaset Operator take care of provisioning XCrypt services and setting up the XCrypt encryption to your exact specification. \n* **CSI Driver deployment**: Zettaset XCrypt Operator automatically deploys Zettaset XCrypt CSI Driver in order to provide automated and transparent data-at-rest  encryption functionality compatible with Openshift and any other container orchestrator. Once the Operator is provisioned, the driver runs fine tuned and ready to work with other XCrypt components.\n* **Multi-node topology**: Encrypt as many nodes and volumes as you need to. XCrypt components can be installed on multiple nodes across the cluster. This is defined by two labels: zts-master and zts-worker. Normally zts-master node is a single node that runs Zettaset XCrypt major services required for the product operation. Multiple nodes can be marked as zts-worker and those are the nodes that can have encrypted volumes.\n* **Seamless Encrypted Volume mount**: Volumes are not only being encrypted, but also are mounted/unmounted to containers with Persistent Volume Claims. This happens as seamlessly as regular volumes provision and mount/unmount.\n* **Robust failover**: A node failure doesn\u2019t affect XCrypt operations on other nodes of the cluster. Encryption on a restarted/recovered node gets back to normal functioning if the node stays healthy and data hasn\u2019t been corrupted during the restart\n\n## About Zettaset XCrypt Kubernetes Encryption for OpenShift\nXCrypt Kubernetes Encryption for OpenShift is a software-only solution that enables encryption of data at rest stored in Red Hat OpenShift container environments without slowing down the DevSecOps process. In addition to providing a transparent and high-performance layer of security that flexibly protects container data across on-premise, in hybrid, and multi-cloud environments, it also helps your organization efficiently transition from DevOps to DevSecOps.  \n\nMore information about Zettaset XCrypt Kubernetes Encryption for OpenShift can be found in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)\n\n## RedHat OpenShift + Zettaset: The next generation of secure enterprise infrastructure for DevSecOps  \nBy combining RedHat\u2019s Container Platform with Zettaset\u2019s certified software-defined encryption, you can create the next generation of secure enterprise infrastructure that DevSecOps requires. Together they create the stable, consistent, and supported base that your organization needs to develop applications faster, simplify updates, drive innovation, and reduce the risk of potential security breaches and data theft.\n### Core Features\n* Software-only for simple and scalable deployments \n* Negligible performance impact\n* Transparent to developers and administrators \n* Works with AWS, Google, and Azure \n* Unique encryption key per container volume \n* Encrypted volumes are only available when in use\n* Direct integration with OpenShift \n* Automated encryption policy management Secure erase of volumes\n* Ability to securely decommission a node\n\n## How does XCrypt Kubernetes Encryption fit into OpenShift? \nXCrypt XCrypt Kubernetes Encryption for OpenShift Encryption makes it incredibly easy to protect container data in your OpenShift environment. \n### Use cases include:\n* Transitioning from DevOps to DevSecOps \n* Ensuring data protection in OpenShift container environments with negligible performance impact \n* Achieving compliance in regulated industries like healthcare and finance\n\n## Other Information\nRole-based access control needs to be configured prior to the Operator installation. Please find details in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)    ",
      "csv_display_name": "Zettaset XCrypt Operator",
      "csv_metadata_description": "XCrypt Operator deploys Zettaset XCrypt Container Encryption  - the only software-defined solution that offers transparent high performance data-at-rest encryption of critical data in container environments.",
      "csv_name": "zts-xcrypt-operator.v0.0.17",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:56:25.733000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "xcrypt-operator",
      "provided_apis": [
        {
          "group": "xcrypt.zettaset.com",
          "kind": "XCrypt",
          "plural": "xcrypts",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "name": "xcrypt-operator-1-7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac-annotation"
        },
        {
          "digest": "sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "name": "zts-xcrypt-operator"
        },
        {
          "digest": "sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "image": "registry.connect.redhat.com/zts/xcrypt-ca-1@sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "name": "ca"
        },
        {
          "digest": "sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "image": "registry.connect.redhat.com/zts/xcrypt-kmip-server-1@sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "name": "kmip"
        },
        {
          "digest": "sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "image": "registry.connect.redhat.com/zts/xcrypt-license-server-1@sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "name": "ls"
        },
        {
          "digest": "sha256:9faa4b597eb74df412761dffa057b64fb69dbf9fa016414962eb2099a343e734",
          "image": "registry.connect.redhat.com/zts/xcrypt-host-manager-1@sha256:9faa4b597eb74df412761dffa057b64fb69dbf9fa016414962eb2099a343e734",
          "name": "hm"
        },
        {
          "digest": "sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "image": "registry.connect.redhat.com/zts/zts-csi-driver-1@sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "name": "csi_driver"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.0.17",
      "version_original": "0.0.17"
    },
    {
      "_id": "61a5e1283e9240fca360f696",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:c771db6ff2400a5a78b66b4345e50f0346aa64f6cc66a3de34913d4f3dc57ea6",
      "bundle_path_digest": "sha256:c771db6ff2400a5a78b66b4345e50f0346aa64f6cc66a3de34913d4f3dc57ea6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T08:30:32.060000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:17:35.816000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator-879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d-annotation"
        },
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:4828ed949374c8191da9d54c0d3ea95d7c3c1f1d9548db55eed7ebf09a1ba076",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:4828ed949374c8191da9d54c0d3ea95d7c3c1f1d9548db55eed7ebf09a1ba076",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "8.4.0",
      "version_original": "8.4.0"
    },
    {
      "_id": "61a6b905bfd4a5234d5963a9",
      "alm_examples": [
        {
          "api_version": "operator.ionir.com/v1",
          "kind": "System",
          "metadata": {
            "name": "ionir"
          },
          "spec": {
            "imageRegistry": "quay.io/ionir",
            "profile": "minimal",
            "tag": "v2.5"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ionir/ionir-operator-bundle@sha256:79319e01b6f760d6a494bae31e8dfad3adfddc5d63f4c4d03424618b742b0279",
      "bundle_path_digest": "sha256:79319e01b6f760d6a494bae31e8dfad3adfddc5d63f4c4d03424618b742b0279",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T23:51:33.094000+00:00",
      "csv_description": "Ionir is a container-native data platform for Kubernetes.\nIonir virtualizes all available storage in a Kubernetes cluster to create a single pool of highly scalable storage.\nHaving a Container Storage Interface (CSI) plugin, Ionir storage can be provisioned and managed by Kubernetes,\nthe common control plane in the environment. In addition to providing resilient, high-performance storage, Ionir\nalso provides end-to-end data management capabilities. The Ionir architecture separates the metadata from the data,\nwhich enables unique data management capabilities such as instant clones. The microservices architecture provides\na unified data platform that is elastic, scalable, and agile, which is critical for containerized deployments.\n### Instant Data Mobility\nIonir gives K8s application data wings. Persistent volumes move at the speed of applications, in any direction, to and from anywhere - on-prem, cloud, public, private - in seconds!\nWhat\u2019s more, ionir transparently delivers everything you\u2019ve come to expect from enterprise storage \u2013 performance and scalability, data protection, replication, deduplication and more - built to run natively on Kubernetes clusters.\n### Enterprise-Class Data Protection\nOffering instant point-in-time restore with one second granularity, ionir\u2019s highly efficient data protection capabilities exceed even traditional monolithic arrays, and are unrivaled in K8s native storage.\n### Simple. Converged. Native.\nOne comprehensive platform \u2015 orchestrated by Kubernetes \u2015 serves, stores and manages all your K8s application data. All based on RESTful APIs for easy automation.\n### Aligned to Applications\nAdvanced machine learning ensures data is mapped to the optimal storage resource based on performance, density, cost, location, and other key factors.\n### How to install Ionir\n### Prerequisites\n* See details in [Ionir Deployment Requirements - OCP](https://github.com/ionir-cloud/deployments/blob/main/documents/Ionir%20Deployment%20Requirements%20-%20OCP.pdf)\n* Review Ionir [EULA] (https://ionir.com/legal/eula/)\n\n### Uninstall\nFirst remove all applications consuming Ionir storage prior to deleting Ionir system custom resource.<br>\nNote: Storage classes with Ionir provisioner should be deleted manually\n> :warning: This action uninstalls Ionir completely and wipes the entire data. This action can not be reversed.\n",
      "csv_display_name": "Ionir",
      "csv_metadata_description": "Ionir is a container-native data platform built in Kubernetes",
      "csv_name": "ionir-operator.v1.0.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:18:43.094000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "ionir-operator",
      "provided_apis": [
        {
          "group": "operator.ionir.com",
          "kind": "System",
          "plural": "systems",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5b28c9559e65d15fdeb13c62e893e05e8090de7658c10e06feb18c69fd8a5525",
          "image": "registry.connect.redhat.com/ionir/ionir-operator@sha256:5b28c9559e65d15fdeb13c62e893e05e8090de7658c10e06feb18c69fd8a5525",
          "name": "ionir-operator-5b28c9559e65d15fdeb13c62e893e05e8090de7658c10e06feb18c69fd8a5525-annotation"
        },
        {
          "digest": "sha256:5b28c9559e65d15fdeb13c62e893e05e8090de7658c10e06feb18c69fd8a5525",
          "image": "registry.connect.redhat.com/ionir/ionir-operator@sha256:5b28c9559e65d15fdeb13c62e893e05e8090de7658c10e06feb18c69fd8a5525",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.7",
      "version_original": "1.0.7"
    },
    {
      "_id": "61a6ba07c17162a20c1c6baf",
      "alm_examples": [
        {
          "kind": "PostgresCluster",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "instances": [
              {
                "dataVolumeClaimSpec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "1Gi"
                    }
                  }
                },
                "replicas": 1
              }
            ],
            "postgresVersion": 13
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/crunchydata/postgres-operator-bundle@sha256:6166f3ee3ea06cd8c3d4e78ee2b9298cb203002521db6de5ec97131d2ef3d97d",
      "bundle_path_digest": "sha256:6166f3ee3ea06cd8c3d4e78ee2b9298cb203002521db6de5ec97131d2ef3d97d",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "v5",
      "creation_date": "2021-11-30T23:55:51.410000+00:00",
      "csv_description": "[PGO](https://github.com/CrunchyData/postgres-operator), the\n[Postgres Operator](https://github.com/CrunchyData/postgres-operator) from\n[Crunchy Data](https://www.crunchydata.com), gives you a **declarative Postgres** solution that\nautomatically manages your [PostgreSQL](https://www.postgresql.org) clusters.\n\nDesigned for your GitOps workflows, it is [easy to get started](https://access.crunchydata.com/documentation/postgres-operator/v5/quickstart/)\nwith Postgres on Kubernetes with PGO. Within a few moments, you can have a production grade Postgres\ncluster complete with high availability, disaster recovery, and monitoring, all over secure TLS communications.\nEven better, PGO lets you easily customize your Postgres cluster to tailor it to your workload!\n\nWith conveniences like cloning Postgres clusters to using rolling updates to roll out disruptive\nchanges with minimal downtime, PGO is ready to support your Postgres data at every stage of your\nrelease pipeline. Built for resiliency and uptime, PGO will keep your desired Postgres in a desired\nstate so you do not need to worry about it.\n\nPGO is developed with many years of production experience in automating Postgres management on\nKubernetes, providing a seamless cloud native Postgres solution to keep your data always available.\n\n- **PostgreSQL Cluster Provisioning**: [Create, Scale, & Delete PostgreSQL clusters with ease][provisioning],\n  while fully customizing your Pods and PostgreSQL configuration!\n- **High-Availability**: Safe, automated failover backed by a [distributed consensus based high-availability solution][high-availability].\n  Uses [Pod Anti-Affinity][k8s-anti-affinity] to help resiliency; you can configure how aggressive this can be!\n  Failed primaries automatically heal, allowing for faster recovery time. You can even create regularly scheduled\n  backups as well and set your backup retention policy\n- **Disaster Recovery**: [Backups][backups] and [restores][disaster-recovery] leverage the open source [pgBackRest][] utility and\n  [includes support for full, incremental, and differential backups as well as efficient delta restores][backups].\n  Set how long you want your backups retained for. Works great with very large databases!\n- **Monitoring**: [Track the health of your PostgreSQL clusters][monitoring] using the open source [pgMonitor][] library.\n- **Clone**: [Create new clusters from your existing clusters or backups][clone] with efficient data cloning.\n- **TLS**: All connections are over [TLS][tls]. You can also [bring your own TLS infrastructure][tls] if you do not want to use the provided defaults.\n- **Connection Pooling**: Advanced [connection pooling][pool] support using [pgBouncer][].\n- **Affinity and Tolerations**: Have your PostgreSQL clusters deployed to [Kubernetes Nodes][k8s-nodes] of your preference.\n  Set your [pod anti-affinity][k8s-anti-affinity], node affinity, Pod tolerations and more rules to customize your deployment topology!\n- **Full Customizability**: Crunchy PostgreSQL for Kubernetes makes it easy to get your own PostgreSQL-as-a-Service up and running\n  and fully customize your deployments, including:\n    - Choose the resources for your Postgres cluster: [container resources and storage size][resize-cluster]. [Resize at any time][resize-cluster] with minimal disruption.\n    - Use your own container image repository, including support `imagePullSecrets` and private repositories\n    - [Customize your PostgreSQL configuration][customize-cluster]\n\nand much more!\n\n[backups]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/backups/\n[clone]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/#clone-a-postgres-cluster\n[customize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/\n[disaster-recovery]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/\n[high-availability]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/high-availability/\n[monitoring]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/monitoring/\n[pool]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[provisioning]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/create-cluster/\n[resize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/resize-cluster/\n[tls]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/#customize-tls\n\n[k8s-anti-affinity]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n[k8s-nodes]: https://kubernetes.io/docs/concepts/architecture/nodes/\n\n[pgBackRest]: https://www.pgbackrest.org\n[pgBouncer]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[pgMonitor]: https://github.com/CrunchyData/pgmonitor\n\n\n## Post-Installation\n\n### Tutorial\n\nWant to [learn more about the PostgreSQL Operator][tutorial]? Browse through the [tutorial][] to learn more about what you can do!\n\n[tutorial]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial",
      "csv_display_name": "Crunchy Postgres for Kubernetes",
      "csv_metadata_description": "Production Postgres Made Easy",
      "csv_name": "postgresoperator.v5.0.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:14:04.903000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "crunchy-postgres-operator",
      "provided_apis": [
        {
          "group": "postgres-operator.crunchydata.com",
          "kind": "PostgresCluster",
          "plural": "postgresclusters",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:35bd6e284d71881524766662657e60c654a9bc77cd79c43a667cd76b1984dc34",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:35bd6e284d71881524766662657e60c654a9bc77cd79c43a667cd76b1984dc34",
          "name": "postgres-operator-35bd6e284d71881524766662657e60c654a9bc77cd79c43a667cd76b1984dc34-annotation"
        },
        {
          "digest": "sha256:35bd6e284d71881524766662657e60c654a9bc77cd79c43a667cd76b1984dc34",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:35bd6e284d71881524766662657e60c654a9bc77cd79c43a667cd76b1984dc34",
          "name": "operator"
        },
        {
          "digest": "sha256:4256829ed455475e45ef210bea800c42d6eb53497a734428cb753c2af3d46ced",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:4256829ed455475e45ef210bea800c42d6eb53497a734428cb753c2af3d46ced",
          "name": "pgbackrest"
        },
        {
          "digest": "sha256:dd8c2aff733a4c064ce5a89bcd2b1e984099c72807e790def526d90dbc7f46dd",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:dd8c2aff733a4c064ce5a89bcd2b1e984099c72807e790def526d90dbc7f46dd",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:a6f88150ddd3e01d32d1c573ee3022072f98031341d1bed2ae440d772482ce65",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:a6f88150ddd3e01d32d1c573ee3022072f98031341d1bed2ae440d772482ce65",
          "name": "pgexporter"
        },
        {
          "digest": "sha256:74e35614839ae674ee210e3850dee01e50c5d3d218eeee2d4d33e778db76ffbc",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:74e35614839ae674ee210e3850dee01e50c5d3d218eeee2d4d33e778db76ffbc",
          "name": "postgres_12"
        },
        {
          "digest": "sha256:b9a152771c489673a51dfe815c290af5666e68e614ac0dfd1d3ba54a371f47be",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:b9a152771c489673a51dfe815c290af5666e68e614ac0dfd1d3ba54a371f47be",
          "name": "postgres_13"
        },
        {
          "digest": "sha256:a2b34428eb1e23cd2a39e85d3da95a35a19715543b13d3d7ab0183ba8083ec33",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a2b34428eb1e23cd2a39e85d3da95a35a19715543b13d3d7ab0183ba8083ec33",
          "name": "postgres_14"
        },
        {
          "digest": "sha256:ec92544d41f771e69ce84009ef145e1e59cd31521e4a948c5ecb8f0ddfb8fe9b",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ec92544d41f771e69ce84009ef145e1e59cd31521e4a948c5ecb8f0ddfb8fe9b",
          "name": "postgres_12_gis_2.5"
        },
        {
          "digest": "sha256:a1ec04b12610e2cb1094b85ed8fdd97106c07c048a3480d2baa25d7171284921",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a1ec04b12610e2cb1094b85ed8fdd97106c07c048a3480d2baa25d7171284921",
          "name": "postgres_12_gis_3.0"
        },
        {
          "digest": "sha256:23b8deca0a30982f14b433937c1c133e6f257b8599d52be60de9d85571a7f2a3",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:23b8deca0a30982f14b433937c1c133e6f257b8599d52be60de9d85571a7f2a3",
          "name": "postgres_13_gis_3.0"
        },
        {
          "digest": "sha256:4e6bfa1def778e9f20506ba980a2bd2cfd392142c1cd072b6892b41a68d56db1",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:4e6bfa1def778e9f20506ba980a2bd2cfd392142c1cd072b6892b41a68d56db1",
          "name": "postgres_13_gis_3.1"
        },
        {
          "digest": "sha256:550426086d4647d3c49ec17ffc1fde265ac3026ab042113b64111177eb898fb6",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:550426086d4647d3c49ec17ffc1fde265ac3026ab042113b64111177eb898fb6",
          "name": "postgres_14_gis_3.1"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "5.0.4",
      "version_original": "5.0.4"
    },
    {
      "_id": "61a6bc42bfd4a5234d5963ab",
      "alm_examples": [
        {
          "api_version": "operator.ionir.com/v1",
          "kind": "System",
          "metadata": {
            "name": "ionir"
          },
          "spec": {
            "imageRegistry": "quay.io/ionir",
            "profile": "minimal",
            "tag": "ilan-certification-test"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ionir/ionir-operator-bundle@sha256:f54f915f843f9372f447cec692d4076a963668cecacf11f66fd85439b069558e",
      "bundle_path_digest": "sha256:f54f915f843f9372f447cec692d4076a963668cecacf11f66fd85439b069558e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-12-01T00:05:22.643000+00:00",
      "csv_description": "Ionir is a container-native data platform for Kubernetes.\nIonir virtualizes all available storage in a Kubernetes cluster to create a single pool of highly scalable storage.\nHaving a Container Storage Interface (CSI) plugin, Ionir storage can be provisioned and managed by Kubernetes,\nthe common control plane in the environment. In addition to providing resilient, high-performance storage, Ionir\nalso provides end-to-end data management capabilities. The Ionir architecture separates the metadata from the data,\nwhich enables unique data management capabilities such as instant clones. The microservices architecture provides\na unified data platform that is elastic, scalable, and agile, which is critical for containerized deployments.\n### Instant Data Mobility\nIonir gives K8s application data wings. Persistent volumes move at the speed of applications, in any direction, to and from anywhere - on-prem, cloud, public, private - in seconds!\nWhat\u2019s more, ionir transparently delivers everything you\u2019ve come to expect from enterprise storage \u2013 performance and scalability, data protection, replication, deduplication and more - built to run natively on Kubernetes clusters.\n### Enterprise-Class Data Protection\nOffering instant point-in-time restore with one second granularity, ionir\u2019s highly efficient data protection capabilities exceed even traditional monolithic arrays, and are unrivaled in K8s native storage.\n### Simple. Converged. Native.\nOne comprehensive platform \u2015 orchestrated by Kubernetes \u2015 serves, stores and manages all your K8s application data. All based on RESTful APIs for easy automation.\n### Aligned to Applications\nAdvanced machine learning ensures data is mapped to the optimal storage resource based on performance, density, cost, location, and other key factors.\n### How to install Ionir\n### Prerequisites\n* See details in [Ionir Deployment Requirements - OCP](https://github.com/ionir-cloud/deployments/blob/main/documents/Ionir%20Deployment%20Requirements%20-%20OCP.pdf)\n* Review Ionir [EULA] (https://ionir.com/legal/eula/)\n\n### Uninstall\nFirst remove all applications consuming Ionir storage prior to deleting Ionir system custom resource.<br>\nNote: Storage classes with Ionir provisioner should be deleted manually\n> :warning: This action uninstalls Ionir completely and wipes the entire data. This action can not be reversed.\n",
      "csv_display_name": "Ionir",
      "csv_metadata_description": "Ionir is a container-native data platform built in Kubernetes",
      "csv_name": "ionir-operator.v1.0.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:10:27.012000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "ionir-operator",
      "provided_apis": [
        {
          "group": "operator.ionir.com",
          "kind": "System",
          "plural": "systems",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:3c6c05ea8feb356bb9f90c652bd05a94edeb33248be09eedf4f9f21e80de6ef1",
          "image": "registry.connect.redhat.com/ionir/ionir-operator@sha256:3c6c05ea8feb356bb9f90c652bd05a94edeb33248be09eedf4f9f21e80de6ef1",
          "name": "ionir-operator-3c6c05ea8feb356bb9f90c652bd05a94edeb33248be09eedf4f9f21e80de6ef1-annotation"
        },
        {
          "digest": "sha256:3c6c05ea8feb356bb9f90c652bd05a94edeb33248be09eedf4f9f21e80de6ef1",
          "image": "registry.connect.redhat.com/ionir/ionir-operator@sha256:3c6c05ea8feb356bb9f90c652bd05a94edeb33248be09eedf4f9f21e80de6ef1",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.6",
      "version_original": "1.0.6"
    },
    {
      "_id": "61a756bcbfd4a5234d59648b",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:c771db6ff2400a5a78b66b4345e50f0346aa64f6cc66a3de34913d4f3dc57ea6",
      "bundle_path_digest": "sha256:c771db6ff2400a5a78b66b4345e50f0346aa64f6cc66a3de34913d4f3dc57ea6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-12-01T11:04:28.797000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T10:58:52.525000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator-879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d-annotation"
        },
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:4828ed949374c8191da9d54c0d3ea95d7c3c1f1d9548db55eed7ebf09a1ba076",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:4828ed949374c8191da9d54c0d3ea95d7c3c1f1d9548db55eed7ebf09a1ba076",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.4.0",
      "version_original": "8.4.0"
    },
    {
      "_id": "61a75702bfd4a5234d59648c",
      "alm_examples": [
        {
          "kind": "PostgresCluster",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "instances": [
              {
                "dataVolumeClaimSpec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "1Gi"
                    }
                  }
                },
                "replicas": 1
              }
            ],
            "postgresVersion": 13
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/crunchydata/postgres-operator-bundle@sha256:6166f3ee3ea06cd8c3d4e78ee2b9298cb203002521db6de5ec97131d2ef3d97d",
      "bundle_path_digest": "sha256:6166f3ee3ea06cd8c3d4e78ee2b9298cb203002521db6de5ec97131d2ef3d97d",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "v5",
      "creation_date": "2021-12-01T11:05:38.286000+00:00",
      "csv_description": "[PGO](https://github.com/CrunchyData/postgres-operator), the\n[Postgres Operator](https://github.com/CrunchyData/postgres-operator) from\n[Crunchy Data](https://www.crunchydata.com), gives you a **declarative Postgres** solution that\nautomatically manages your [PostgreSQL](https://www.postgresql.org) clusters.\n\nDesigned for your GitOps workflows, it is [easy to get started](https://access.crunchydata.com/documentation/postgres-operator/v5/quickstart/)\nwith Postgres on Kubernetes with PGO. Within a few moments, you can have a production grade Postgres\ncluster complete with high availability, disaster recovery, and monitoring, all over secure TLS communications.\nEven better, PGO lets you easily customize your Postgres cluster to tailor it to your workload!\n\nWith conveniences like cloning Postgres clusters to using rolling updates to roll out disruptive\nchanges with minimal downtime, PGO is ready to support your Postgres data at every stage of your\nrelease pipeline. Built for resiliency and uptime, PGO will keep your desired Postgres in a desired\nstate so you do not need to worry about it.\n\nPGO is developed with many years of production experience in automating Postgres management on\nKubernetes, providing a seamless cloud native Postgres solution to keep your data always available.\n\n- **PostgreSQL Cluster Provisioning**: [Create, Scale, & Delete PostgreSQL clusters with ease][provisioning],\n  while fully customizing your Pods and PostgreSQL configuration!\n- **High-Availability**: Safe, automated failover backed by a [distributed consensus based high-availability solution][high-availability].\n  Uses [Pod Anti-Affinity][k8s-anti-affinity] to help resiliency; you can configure how aggressive this can be!\n  Failed primaries automatically heal, allowing for faster recovery time. You can even create regularly scheduled\n  backups as well and set your backup retention policy\n- **Disaster Recovery**: [Backups][backups] and [restores][disaster-recovery] leverage the open source [pgBackRest][] utility and\n  [includes support for full, incremental, and differential backups as well as efficient delta restores][backups].\n  Set how long you want your backups retained for. Works great with very large databases!\n- **Monitoring**: [Track the health of your PostgreSQL clusters][monitoring] using the open source [pgMonitor][] library.\n- **Clone**: [Create new clusters from your existing clusters or backups][clone] with efficient data cloning.\n- **TLS**: All connections are over [TLS][tls]. You can also [bring your own TLS infrastructure][tls] if you do not want to use the provided defaults.\n- **Connection Pooling**: Advanced [connection pooling][pool] support using [pgBouncer][].\n- **Affinity and Tolerations**: Have your PostgreSQL clusters deployed to [Kubernetes Nodes][k8s-nodes] of your preference.\n  Set your [pod anti-affinity][k8s-anti-affinity], node affinity, Pod tolerations and more rules to customize your deployment topology!\n- **Full Customizability**: Crunchy PostgreSQL for Kubernetes makes it easy to get your own PostgreSQL-as-a-Service up and running\n  and fully customize your deployments, including:\n    - Choose the resources for your Postgres cluster: [container resources and storage size][resize-cluster]. [Resize at any time][resize-cluster] with minimal disruption.\n    - Use your own container image repository, including support `imagePullSecrets` and private repositories\n    - [Customize your PostgreSQL configuration][customize-cluster]\n\nand much more!\n\n[backups]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/backups/\n[clone]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/#clone-a-postgres-cluster\n[customize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/\n[disaster-recovery]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/\n[high-availability]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/high-availability/\n[monitoring]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/monitoring/\n[pool]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[provisioning]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/create-cluster/\n[resize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/resize-cluster/\n[tls]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/#customize-tls\n\n[k8s-anti-affinity]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n[k8s-nodes]: https://kubernetes.io/docs/concepts/architecture/nodes/\n\n[pgBackRest]: https://www.pgbackrest.org\n[pgBouncer]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[pgMonitor]: https://github.com/CrunchyData/pgmonitor\n\n\n## Post-Installation\n\n### Tutorial\n\nWant to [learn more about the PostgreSQL Operator][tutorial]? Browse through the [tutorial][] to learn more about what you can do!\n\n[tutorial]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial",
      "csv_display_name": "Crunchy Postgres for Kubernetes",
      "csv_metadata_description": "Production Postgres Made Easy",
      "csv_name": "postgresoperator.v5.0.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:00:44.236000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "crunchy-postgres-operator",
      "provided_apis": [
        {
          "group": "postgres-operator.crunchydata.com",
          "kind": "PostgresCluster",
          "plural": "postgresclusters",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:35bd6e284d71881524766662657e60c654a9bc77cd79c43a667cd76b1984dc34",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:35bd6e284d71881524766662657e60c654a9bc77cd79c43a667cd76b1984dc34",
          "name": "postgres-operator-35bd6e284d71881524766662657e60c654a9bc77cd79c43a667cd76b1984dc34-annotation"
        },
        {
          "digest": "sha256:35bd6e284d71881524766662657e60c654a9bc77cd79c43a667cd76b1984dc34",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:35bd6e284d71881524766662657e60c654a9bc77cd79c43a667cd76b1984dc34",
          "name": "operator"
        },
        {
          "digest": "sha256:4256829ed455475e45ef210bea800c42d6eb53497a734428cb753c2af3d46ced",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:4256829ed455475e45ef210bea800c42d6eb53497a734428cb753c2af3d46ced",
          "name": "pgbackrest"
        },
        {
          "digest": "sha256:dd8c2aff733a4c064ce5a89bcd2b1e984099c72807e790def526d90dbc7f46dd",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:dd8c2aff733a4c064ce5a89bcd2b1e984099c72807e790def526d90dbc7f46dd",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:a6f88150ddd3e01d32d1c573ee3022072f98031341d1bed2ae440d772482ce65",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:a6f88150ddd3e01d32d1c573ee3022072f98031341d1bed2ae440d772482ce65",
          "name": "pgexporter"
        },
        {
          "digest": "sha256:74e35614839ae674ee210e3850dee01e50c5d3d218eeee2d4d33e778db76ffbc",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:74e35614839ae674ee210e3850dee01e50c5d3d218eeee2d4d33e778db76ffbc",
          "name": "postgres_12"
        },
        {
          "digest": "sha256:b9a152771c489673a51dfe815c290af5666e68e614ac0dfd1d3ba54a371f47be",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:b9a152771c489673a51dfe815c290af5666e68e614ac0dfd1d3ba54a371f47be",
          "name": "postgres_13"
        },
        {
          "digest": "sha256:a2b34428eb1e23cd2a39e85d3da95a35a19715543b13d3d7ab0183ba8083ec33",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a2b34428eb1e23cd2a39e85d3da95a35a19715543b13d3d7ab0183ba8083ec33",
          "name": "postgres_14"
        },
        {
          "digest": "sha256:ec92544d41f771e69ce84009ef145e1e59cd31521e4a948c5ecb8f0ddfb8fe9b",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ec92544d41f771e69ce84009ef145e1e59cd31521e4a948c5ecb8f0ddfb8fe9b",
          "name": "postgres_12_gis_2.5"
        },
        {
          "digest": "sha256:a1ec04b12610e2cb1094b85ed8fdd97106c07c048a3480d2baa25d7171284921",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a1ec04b12610e2cb1094b85ed8fdd97106c07c048a3480d2baa25d7171284921",
          "name": "postgres_12_gis_3.0"
        },
        {
          "digest": "sha256:23b8deca0a30982f14b433937c1c133e6f257b8599d52be60de9d85571a7f2a3",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:23b8deca0a30982f14b433937c1c133e6f257b8599d52be60de9d85571a7f2a3",
          "name": "postgres_13_gis_3.0"
        },
        {
          "digest": "sha256:4e6bfa1def778e9f20506ba980a2bd2cfd392142c1cd072b6892b41a68d56db1",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:4e6bfa1def778e9f20506ba980a2bd2cfd392142c1cd072b6892b41a68d56db1",
          "name": "postgres_13_gis_3.1"
        },
        {
          "digest": "sha256:550426086d4647d3c49ec17ffc1fde265ac3026ab042113b64111177eb898fb6",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:550426086d4647d3c49ec17ffc1fde265ac3026ab042113b64111177eb898fb6",
          "name": "postgres_14_gis_3.1"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "5.0.4",
      "version_original": "5.0.4"
    },
    {
      "_id": "61a75cca3e9240fca360f969",
      "alm_examples": [
        {
          "kind": "PostgresCluster",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "instances": [
              {
                "dataVolumeClaimSpec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "1Gi"
                    }
                  }
                },
                "replicas": 1
              }
            ],
            "postgresVersion": 13
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/crunchydata/postgres-operator-bundle@sha256:6166f3ee3ea06cd8c3d4e78ee2b9298cb203002521db6de5ec97131d2ef3d97d",
      "bundle_path_digest": "sha256:6166f3ee3ea06cd8c3d4e78ee2b9298cb203002521db6de5ec97131d2ef3d97d",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "v5",
      "creation_date": "2021-12-01T11:30:18.651000+00:00",
      "csv_description": "[PGO](https://github.com/CrunchyData/postgres-operator), the\n[Postgres Operator](https://github.com/CrunchyData/postgres-operator) from\n[Crunchy Data](https://www.crunchydata.com), gives you a **declarative Postgres** solution that\nautomatically manages your [PostgreSQL](https://www.postgresql.org) clusters.\n\nDesigned for your GitOps workflows, it is [easy to get started](https://access.crunchydata.com/documentation/postgres-operator/v5/quickstart/)\nwith Postgres on Kubernetes with PGO. Within a few moments, you can have a production grade Postgres\ncluster complete with high availability, disaster recovery, and monitoring, all over secure TLS communications.\nEven better, PGO lets you easily customize your Postgres cluster to tailor it to your workload!\n\nWith conveniences like cloning Postgres clusters to using rolling updates to roll out disruptive\nchanges with minimal downtime, PGO is ready to support your Postgres data at every stage of your\nrelease pipeline. Built for resiliency and uptime, PGO will keep your desired Postgres in a desired\nstate so you do not need to worry about it.\n\nPGO is developed with many years of production experience in automating Postgres management on\nKubernetes, providing a seamless cloud native Postgres solution to keep your data always available.\n\n- **PostgreSQL Cluster Provisioning**: [Create, Scale, & Delete PostgreSQL clusters with ease][provisioning],\n  while fully customizing your Pods and PostgreSQL configuration!\n- **High-Availability**: Safe, automated failover backed by a [distributed consensus based high-availability solution][high-availability].\n  Uses [Pod Anti-Affinity][k8s-anti-affinity] to help resiliency; you can configure how aggressive this can be!\n  Failed primaries automatically heal, allowing for faster recovery time. You can even create regularly scheduled\n  backups as well and set your backup retention policy\n- **Disaster Recovery**: [Backups][backups] and [restores][disaster-recovery] leverage the open source [pgBackRest][] utility and\n  [includes support for full, incremental, and differential backups as well as efficient delta restores][backups].\n  Set how long you want your backups retained for. Works great with very large databases!\n- **Monitoring**: [Track the health of your PostgreSQL clusters][monitoring] using the open source [pgMonitor][] library.\n- **Clone**: [Create new clusters from your existing clusters or backups][clone] with efficient data cloning.\n- **TLS**: All connections are over [TLS][tls]. You can also [bring your own TLS infrastructure][tls] if you do not want to use the provided defaults.\n- **Connection Pooling**: Advanced [connection pooling][pool] support using [pgBouncer][].\n- **Affinity and Tolerations**: Have your PostgreSQL clusters deployed to [Kubernetes Nodes][k8s-nodes] of your preference.\n  Set your [pod anti-affinity][k8s-anti-affinity], node affinity, Pod tolerations and more rules to customize your deployment topology!\n- **Full Customizability**: Crunchy PostgreSQL for Kubernetes makes it easy to get your own PostgreSQL-as-a-Service up and running\n  and fully customize your deployments, including:\n    - Choose the resources for your Postgres cluster: [container resources and storage size][resize-cluster]. [Resize at any time][resize-cluster] with minimal disruption.\n    - Use your own container image repository, including support `imagePullSecrets` and private repositories\n    - [Customize your PostgreSQL configuration][customize-cluster]\n\nand much more!\n\n[backups]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/backups/\n[clone]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/#clone-a-postgres-cluster\n[customize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/\n[disaster-recovery]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/\n[high-availability]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/high-availability/\n[monitoring]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/monitoring/\n[pool]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[provisioning]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/create-cluster/\n[resize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/resize-cluster/\n[tls]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/#customize-tls\n\n[k8s-anti-affinity]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n[k8s-nodes]: https://kubernetes.io/docs/concepts/architecture/nodes/\n\n[pgBackRest]: https://www.pgbackrest.org\n[pgBouncer]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[pgMonitor]: https://github.com/CrunchyData/pgmonitor\n\n\n## Post-Installation\n\n### Tutorial\n\nWant to [learn more about the PostgreSQL Operator][tutorial]? Browse through the [tutorial][] to learn more about what you can do!\n\n[tutorial]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial",
      "csv_display_name": "Crunchy Postgres for Kubernetes",
      "csv_metadata_description": "Production Postgres Made Easy",
      "csv_name": "postgresoperator.v5.0.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:11:56.971000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "crunchy-postgres-operator",
      "provided_apis": [
        {
          "group": "postgres-operator.crunchydata.com",
          "kind": "PostgresCluster",
          "plural": "postgresclusters",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:35bd6e284d71881524766662657e60c654a9bc77cd79c43a667cd76b1984dc34",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:35bd6e284d71881524766662657e60c654a9bc77cd79c43a667cd76b1984dc34",
          "name": "postgres-operator-35bd6e284d71881524766662657e60c654a9bc77cd79c43a667cd76b1984dc34-annotation"
        },
        {
          "digest": "sha256:35bd6e284d71881524766662657e60c654a9bc77cd79c43a667cd76b1984dc34",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:35bd6e284d71881524766662657e60c654a9bc77cd79c43a667cd76b1984dc34",
          "name": "operator"
        },
        {
          "digest": "sha256:4256829ed455475e45ef210bea800c42d6eb53497a734428cb753c2af3d46ced",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:4256829ed455475e45ef210bea800c42d6eb53497a734428cb753c2af3d46ced",
          "name": "pgbackrest"
        },
        {
          "digest": "sha256:dd8c2aff733a4c064ce5a89bcd2b1e984099c72807e790def526d90dbc7f46dd",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:dd8c2aff733a4c064ce5a89bcd2b1e984099c72807e790def526d90dbc7f46dd",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:a6f88150ddd3e01d32d1c573ee3022072f98031341d1bed2ae440d772482ce65",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:a6f88150ddd3e01d32d1c573ee3022072f98031341d1bed2ae440d772482ce65",
          "name": "pgexporter"
        },
        {
          "digest": "sha256:74e35614839ae674ee210e3850dee01e50c5d3d218eeee2d4d33e778db76ffbc",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:74e35614839ae674ee210e3850dee01e50c5d3d218eeee2d4d33e778db76ffbc",
          "name": "postgres_12"
        },
        {
          "digest": "sha256:b9a152771c489673a51dfe815c290af5666e68e614ac0dfd1d3ba54a371f47be",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:b9a152771c489673a51dfe815c290af5666e68e614ac0dfd1d3ba54a371f47be",
          "name": "postgres_13"
        },
        {
          "digest": "sha256:a2b34428eb1e23cd2a39e85d3da95a35a19715543b13d3d7ab0183ba8083ec33",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a2b34428eb1e23cd2a39e85d3da95a35a19715543b13d3d7ab0183ba8083ec33",
          "name": "postgres_14"
        },
        {
          "digest": "sha256:ec92544d41f771e69ce84009ef145e1e59cd31521e4a948c5ecb8f0ddfb8fe9b",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ec92544d41f771e69ce84009ef145e1e59cd31521e4a948c5ecb8f0ddfb8fe9b",
          "name": "postgres_12_gis_2.5"
        },
        {
          "digest": "sha256:a1ec04b12610e2cb1094b85ed8fdd97106c07c048a3480d2baa25d7171284921",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a1ec04b12610e2cb1094b85ed8fdd97106c07c048a3480d2baa25d7171284921",
          "name": "postgres_12_gis_3.0"
        },
        {
          "digest": "sha256:23b8deca0a30982f14b433937c1c133e6f257b8599d52be60de9d85571a7f2a3",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:23b8deca0a30982f14b433937c1c133e6f257b8599d52be60de9d85571a7f2a3",
          "name": "postgres_13_gis_3.0"
        },
        {
          "digest": "sha256:4e6bfa1def778e9f20506ba980a2bd2cfd392142c1cd072b6892b41a68d56db1",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:4e6bfa1def778e9f20506ba980a2bd2cfd392142c1cd072b6892b41a68d56db1",
          "name": "postgres_13_gis_3.1"
        },
        {
          "digest": "sha256:550426086d4647d3c49ec17ffc1fde265ac3026ab042113b64111177eb898fb6",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:550426086d4647d3c49ec17ffc1fde265ac3026ab042113b64111177eb898fb6",
          "name": "postgres_14_gis_3.1"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "5.0.4",
      "version_original": "5.0.4"
    },
    {
      "_id": "61a75d3f27e166330707dc6f",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:c771db6ff2400a5a78b66b4345e50f0346aa64f6cc66a3de34913d4f3dc57ea6",
      "bundle_path_digest": "sha256:c771db6ff2400a5a78b66b4345e50f0346aa64f6cc66a3de34913d4f3dc57ea6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-12-01T11:32:15.969000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:20:10.653000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator-879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d-annotation"
        },
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:4828ed949374c8191da9d54c0d3ea95d7c3c1f1d9548db55eed7ebf09a1ba076",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:4828ed949374c8191da9d54c0d3ea95d7c3c1f1d9548db55eed7ebf09a1ba076",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.4.0",
      "version_original": "8.4.0"
    },
    {
      "_id": "61a762cc27e166330707dc78",
      "alm_examples": [
        {
          "api_version": "operator.ionir.com/v1",
          "kind": "System",
          "metadata": {
            "name": "ionir"
          },
          "spec": {
            "imageRegistry": "quay.io/ionir",
            "profile": "minimal",
            "tag": "v2.5"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ionir/ionir-operator-bundle@sha256:79319e01b6f760d6a494bae31e8dfad3adfddc5d63f4c4d03424618b742b0279",
      "bundle_path_digest": "sha256:79319e01b6f760d6a494bae31e8dfad3adfddc5d63f4c4d03424618b742b0279",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-12-01T11:55:56.591000+00:00",
      "csv_description": "Ionir is a container-native data platform for Kubernetes.\nIonir virtualizes all available storage in a Kubernetes cluster to create a single pool of highly scalable storage.\nHaving a Container Storage Interface (CSI) plugin, Ionir storage can be provisioned and managed by Kubernetes,\nthe common control plane in the environment. In addition to providing resilient, high-performance storage, Ionir\nalso provides end-to-end data management capabilities. The Ionir architecture separates the metadata from the data,\nwhich enables unique data management capabilities such as instant clones. The microservices architecture provides\na unified data platform that is elastic, scalable, and agile, which is critical for containerized deployments.\n### Instant Data Mobility\nIonir gives K8s application data wings. Persistent volumes move at the speed of applications, in any direction, to and from anywhere - on-prem, cloud, public, private - in seconds!\nWhat\u2019s more, ionir transparently delivers everything you\u2019ve come to expect from enterprise storage \u2013 performance and scalability, data protection, replication, deduplication and more - built to run natively on Kubernetes clusters.\n### Enterprise-Class Data Protection\nOffering instant point-in-time restore with one second granularity, ionir\u2019s highly efficient data protection capabilities exceed even traditional monolithic arrays, and are unrivaled in K8s native storage.\n### Simple. Converged. Native.\nOne comprehensive platform \u2015 orchestrated by Kubernetes \u2015 serves, stores and manages all your K8s application data. All based on RESTful APIs for easy automation.\n### Aligned to Applications\nAdvanced machine learning ensures data is mapped to the optimal storage resource based on performance, density, cost, location, and other key factors.\n### How to install Ionir\n### Prerequisites\n* See details in [Ionir Deployment Requirements - OCP](https://github.com/ionir-cloud/deployments/blob/main/documents/Ionir%20Deployment%20Requirements%20-%20OCP.pdf)\n* Review Ionir [EULA] (https://ionir.com/legal/eula/)\n\n### Uninstall\nFirst remove all applications consuming Ionir storage prior to deleting Ionir system custom resource.<br>\nNote: Storage classes with Ionir provisioner should be deleted manually\n> :warning: This action uninstalls Ionir completely and wipes the entire data. This action can not be reversed.\n",
      "csv_display_name": "Ionir",
      "csv_metadata_description": "Ionir is a container-native data platform built in Kubernetes",
      "csv_name": "ionir-operator.v1.0.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:57:25.379000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "ionir-operator",
      "provided_apis": [
        {
          "group": "operator.ionir.com",
          "kind": "System",
          "plural": "systems",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5b28c9559e65d15fdeb13c62e893e05e8090de7658c10e06feb18c69fd8a5525",
          "image": "registry.connect.redhat.com/ionir/ionir-operator@sha256:5b28c9559e65d15fdeb13c62e893e05e8090de7658c10e06feb18c69fd8a5525",
          "name": "ionir-operator-5b28c9559e65d15fdeb13c62e893e05e8090de7658c10e06feb18c69fd8a5525-annotation"
        },
        {
          "digest": "sha256:5b28c9559e65d15fdeb13c62e893e05e8090de7658c10e06feb18c69fd8a5525",
          "image": "registry.connect.redhat.com/ionir/ionir-operator@sha256:5b28c9559e65d15fdeb13c62e893e05e8090de7658c10e06feb18c69fd8a5525",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.7",
      "version_original": "1.0.7"
    },
    {
      "_id": "61a762f53e9240fca360f976",
      "alm_examples": [
        {
          "api_version": "operator.ionir.com/v1",
          "kind": "System",
          "metadata": {
            "name": "ionir"
          },
          "spec": {
            "imageRegistry": "quay.io/ionir",
            "profile": "minimal",
            "tag": "ilan-certification-test"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ionir/ionir-operator-bundle@sha256:f54f915f843f9372f447cec692d4076a963668cecacf11f66fd85439b069558e",
      "bundle_path_digest": "sha256:f54f915f843f9372f447cec692d4076a963668cecacf11f66fd85439b069558e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-12-01T11:56:37.123000+00:00",
      "csv_description": "Ionir is a container-native data platform for Kubernetes.\nIonir virtualizes all available storage in a Kubernetes cluster to create a single pool of highly scalable storage.\nHaving a Container Storage Interface (CSI) plugin, Ionir storage can be provisioned and managed by Kubernetes,\nthe common control plane in the environment. In addition to providing resilient, high-performance storage, Ionir\nalso provides end-to-end data management capabilities. The Ionir architecture separates the metadata from the data,\nwhich enables unique data management capabilities such as instant clones. The microservices architecture provides\na unified data platform that is elastic, scalable, and agile, which is critical for containerized deployments.\n### Instant Data Mobility\nIonir gives K8s application data wings. Persistent volumes move at the speed of applications, in any direction, to and from anywhere - on-prem, cloud, public, private - in seconds!\nWhat\u2019s more, ionir transparently delivers everything you\u2019ve come to expect from enterprise storage \u2013 performance and scalability, data protection, replication, deduplication and more - built to run natively on Kubernetes clusters.\n### Enterprise-Class Data Protection\nOffering instant point-in-time restore with one second granularity, ionir\u2019s highly efficient data protection capabilities exceed even traditional monolithic arrays, and are unrivaled in K8s native storage.\n### Simple. Converged. Native.\nOne comprehensive platform \u2015 orchestrated by Kubernetes \u2015 serves, stores and manages all your K8s application data. All based on RESTful APIs for easy automation.\n### Aligned to Applications\nAdvanced machine learning ensures data is mapped to the optimal storage resource based on performance, density, cost, location, and other key factors.\n### How to install Ionir\n### Prerequisites\n* See details in [Ionir Deployment Requirements - OCP](https://github.com/ionir-cloud/deployments/blob/main/documents/Ionir%20Deployment%20Requirements%20-%20OCP.pdf)\n* Review Ionir [EULA] (https://ionir.com/legal/eula/)\n\n### Uninstall\nFirst remove all applications consuming Ionir storage prior to deleting Ionir system custom resource.<br>\nNote: Storage classes with Ionir provisioner should be deleted manually\n> :warning: This action uninstalls Ionir completely and wipes the entire data. This action can not be reversed.\n",
      "csv_display_name": "Ionir",
      "csv_metadata_description": "Ionir is a container-native data platform built in Kubernetes",
      "csv_name": "ionir-operator.v1.0.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:29:49.579000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "ionir-operator",
      "provided_apis": [
        {
          "group": "operator.ionir.com",
          "kind": "System",
          "plural": "systems",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:3c6c05ea8feb356bb9f90c652bd05a94edeb33248be09eedf4f9f21e80de6ef1",
          "image": "registry.connect.redhat.com/ionir/ionir-operator@sha256:3c6c05ea8feb356bb9f90c652bd05a94edeb33248be09eedf4f9f21e80de6ef1",
          "name": "ionir-operator-3c6c05ea8feb356bb9f90c652bd05a94edeb33248be09eedf4f9f21e80de6ef1-annotation"
        },
        {
          "digest": "sha256:3c6c05ea8feb356bb9f90c652bd05a94edeb33248be09eedf4f9f21e80de6ef1",
          "image": "registry.connect.redhat.com/ionir/ionir-operator@sha256:3c6c05ea8feb356bb9f90c652bd05a94edeb33248be09eedf4f9f21e80de6ef1",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.6",
      "version_original": "1.0.6"
    },
    {
      "_id": "61a765413e9240fca360f978",
      "alm_examples": [
        {
          "kind": "PostgresCluster",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "instances": [
              {
                "dataVolumeClaimSpec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "1Gi"
                    }
                  }
                },
                "replicas": 1
              }
            ],
            "postgresVersion": 13
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/crunchydata/postgres-operator-bundle@sha256:6166f3ee3ea06cd8c3d4e78ee2b9298cb203002521db6de5ec97131d2ef3d97d",
      "bundle_path_digest": "sha256:6166f3ee3ea06cd8c3d4e78ee2b9298cb203002521db6de5ec97131d2ef3d97d",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "v5",
      "creation_date": "2021-12-01T12:06:25.750000+00:00",
      "csv_description": "[PGO](https://github.com/CrunchyData/postgres-operator), the\n[Postgres Operator](https://github.com/CrunchyData/postgres-operator) from\n[Crunchy Data](https://www.crunchydata.com), gives you a **declarative Postgres** solution that\nautomatically manages your [PostgreSQL](https://www.postgresql.org) clusters.\n\nDesigned for your GitOps workflows, it is [easy to get started](https://access.crunchydata.com/documentation/postgres-operator/v5/quickstart/)\nwith Postgres on Kubernetes with PGO. Within a few moments, you can have a production grade Postgres\ncluster complete with high availability, disaster recovery, and monitoring, all over secure TLS communications.\nEven better, PGO lets you easily customize your Postgres cluster to tailor it to your workload!\n\nWith conveniences like cloning Postgres clusters to using rolling updates to roll out disruptive\nchanges with minimal downtime, PGO is ready to support your Postgres data at every stage of your\nrelease pipeline. Built for resiliency and uptime, PGO will keep your desired Postgres in a desired\nstate so you do not need to worry about it.\n\nPGO is developed with many years of production experience in automating Postgres management on\nKubernetes, providing a seamless cloud native Postgres solution to keep your data always available.\n\n- **PostgreSQL Cluster Provisioning**: [Create, Scale, & Delete PostgreSQL clusters with ease][provisioning],\n  while fully customizing your Pods and PostgreSQL configuration!\n- **High-Availability**: Safe, automated failover backed by a [distributed consensus based high-availability solution][high-availability].\n  Uses [Pod Anti-Affinity][k8s-anti-affinity] to help resiliency; you can configure how aggressive this can be!\n  Failed primaries automatically heal, allowing for faster recovery time. You can even create regularly scheduled\n  backups as well and set your backup retention policy\n- **Disaster Recovery**: [Backups][backups] and [restores][disaster-recovery] leverage the open source [pgBackRest][] utility and\n  [includes support for full, incremental, and differential backups as well as efficient delta restores][backups].\n  Set how long you want your backups retained for. Works great with very large databases!\n- **Monitoring**: [Track the health of your PostgreSQL clusters][monitoring] using the open source [pgMonitor][] library.\n- **Clone**: [Create new clusters from your existing clusters or backups][clone] with efficient data cloning.\n- **TLS**: All connections are over [TLS][tls]. You can also [bring your own TLS infrastructure][tls] if you do not want to use the provided defaults.\n- **Connection Pooling**: Advanced [connection pooling][pool] support using [pgBouncer][].\n- **Affinity and Tolerations**: Have your PostgreSQL clusters deployed to [Kubernetes Nodes][k8s-nodes] of your preference.\n  Set your [pod anti-affinity][k8s-anti-affinity], node affinity, Pod tolerations and more rules to customize your deployment topology!\n- **Full Customizability**: Crunchy PostgreSQL for Kubernetes makes it easy to get your own PostgreSQL-as-a-Service up and running\n  and fully customize your deployments, including:\n    - Choose the resources for your Postgres cluster: [container resources and storage size][resize-cluster]. [Resize at any time][resize-cluster] with minimal disruption.\n    - Use your own container image repository, including support `imagePullSecrets` and private repositories\n    - [Customize your PostgreSQL configuration][customize-cluster]\n\nand much more!\n\n[backups]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/backups/\n[clone]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/#clone-a-postgres-cluster\n[customize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/\n[disaster-recovery]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/\n[high-availability]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/high-availability/\n[monitoring]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/monitoring/\n[pool]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[provisioning]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/create-cluster/\n[resize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/resize-cluster/\n[tls]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/#customize-tls\n\n[k8s-anti-affinity]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n[k8s-nodes]: https://kubernetes.io/docs/concepts/architecture/nodes/\n\n[pgBackRest]: https://www.pgbackrest.org\n[pgBouncer]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[pgMonitor]: https://github.com/CrunchyData/pgmonitor\n\n\n## Post-Installation\n\n### Tutorial\n\nWant to [learn more about the PostgreSQL Operator][tutorial]? Browse through the [tutorial][] to learn more about what you can do!\n\n[tutorial]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial",
      "csv_display_name": "Crunchy Postgres for Kubernetes",
      "csv_metadata_description": "Production Postgres Made Easy",
      "csv_name": "postgresoperator.v5.0.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:56:47.742000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "crunchy-postgres-operator",
      "provided_apis": [
        {
          "group": "postgres-operator.crunchydata.com",
          "kind": "PostgresCluster",
          "plural": "postgresclusters",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:35bd6e284d71881524766662657e60c654a9bc77cd79c43a667cd76b1984dc34",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:35bd6e284d71881524766662657e60c654a9bc77cd79c43a667cd76b1984dc34",
          "name": "postgres-operator-35bd6e284d71881524766662657e60c654a9bc77cd79c43a667cd76b1984dc34-annotation"
        },
        {
          "digest": "sha256:35bd6e284d71881524766662657e60c654a9bc77cd79c43a667cd76b1984dc34",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:35bd6e284d71881524766662657e60c654a9bc77cd79c43a667cd76b1984dc34",
          "name": "operator"
        },
        {
          "digest": "sha256:4256829ed455475e45ef210bea800c42d6eb53497a734428cb753c2af3d46ced",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:4256829ed455475e45ef210bea800c42d6eb53497a734428cb753c2af3d46ced",
          "name": "pgbackrest"
        },
        {
          "digest": "sha256:dd8c2aff733a4c064ce5a89bcd2b1e984099c72807e790def526d90dbc7f46dd",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:dd8c2aff733a4c064ce5a89bcd2b1e984099c72807e790def526d90dbc7f46dd",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:a6f88150ddd3e01d32d1c573ee3022072f98031341d1bed2ae440d772482ce65",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:a6f88150ddd3e01d32d1c573ee3022072f98031341d1bed2ae440d772482ce65",
          "name": "pgexporter"
        },
        {
          "digest": "sha256:74e35614839ae674ee210e3850dee01e50c5d3d218eeee2d4d33e778db76ffbc",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:74e35614839ae674ee210e3850dee01e50c5d3d218eeee2d4d33e778db76ffbc",
          "name": "postgres_12"
        },
        {
          "digest": "sha256:b9a152771c489673a51dfe815c290af5666e68e614ac0dfd1d3ba54a371f47be",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:b9a152771c489673a51dfe815c290af5666e68e614ac0dfd1d3ba54a371f47be",
          "name": "postgres_13"
        },
        {
          "digest": "sha256:a2b34428eb1e23cd2a39e85d3da95a35a19715543b13d3d7ab0183ba8083ec33",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a2b34428eb1e23cd2a39e85d3da95a35a19715543b13d3d7ab0183ba8083ec33",
          "name": "postgres_14"
        },
        {
          "digest": "sha256:ec92544d41f771e69ce84009ef145e1e59cd31521e4a948c5ecb8f0ddfb8fe9b",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ec92544d41f771e69ce84009ef145e1e59cd31521e4a948c5ecb8f0ddfb8fe9b",
          "name": "postgres_12_gis_2.5"
        },
        {
          "digest": "sha256:a1ec04b12610e2cb1094b85ed8fdd97106c07c048a3480d2baa25d7171284921",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a1ec04b12610e2cb1094b85ed8fdd97106c07c048a3480d2baa25d7171284921",
          "name": "postgres_12_gis_3.0"
        },
        {
          "digest": "sha256:23b8deca0a30982f14b433937c1c133e6f257b8599d52be60de9d85571a7f2a3",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:23b8deca0a30982f14b433937c1c133e6f257b8599d52be60de9d85571a7f2a3",
          "name": "postgres_13_gis_3.0"
        },
        {
          "digest": "sha256:4e6bfa1def778e9f20506ba980a2bd2cfd392142c1cd072b6892b41a68d56db1",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:4e6bfa1def778e9f20506ba980a2bd2cfd392142c1cd072b6892b41a68d56db1",
          "name": "postgres_13_gis_3.1"
        },
        {
          "digest": "sha256:550426086d4647d3c49ec17ffc1fde265ac3026ab042113b64111177eb898fb6",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:550426086d4647d3c49ec17ffc1fde265ac3026ab042113b64111177eb898fb6",
          "name": "postgres_14_gis_3.1"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "5.0.4",
      "version_original": "5.0.4"
    },
    {
      "_id": "61a765963e9240fca360f979",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:c771db6ff2400a5a78b66b4345e50f0346aa64f6cc66a3de34913d4f3dc57ea6",
      "bundle_path_digest": "sha256:c771db6ff2400a5a78b66b4345e50f0346aa64f6cc66a3de34913d4f3dc57ea6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-12-01T12:07:50.823000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T15:13:38.810000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator-879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d-annotation"
        },
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:4828ed949374c8191da9d54c0d3ea95d7c3c1f1d9548db55eed7ebf09a1ba076",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:4828ed949374c8191da9d54c0d3ea95d7c3c1f1d9548db55eed7ebf09a1ba076",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "8.4.0",
      "version_original": "8.4.0"
    },
    {
      "_id": "61a877703e9240fca360fa84",
      "alm_examples": [
        {
          "api_version": "amcop.aarnanetworks.com/v1alpha1",
          "kind": "Installer",
          "metadata": {
            "name": "installer-sample"
          },
          "spec": {
            "foo": "bar"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aarna/amcop-k8s-operator-bundle@sha256:8cb7a9b39361707719f0dfc5589bbb55432e65941136d6034551003bd37c7f39",
      "bundle_path_digest": "sha256:8cb7a9b39361707719f0dfc5589bbb55432e65941136d6034551003bd37c7f39",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-12-02T07:36:16.951000+00:00",
      "csv_description": "LifeCycle Manager for Aarna Networks Multi Cluster Orchestration Platform (AMCOP)",
      "csv_display_name": "amcop-k8s-operator",
      "csv_metadata_description": "",
      "csv_name": "amcop-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:51:03.758000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "amcop-operator",
      "provided_apis": [
        {
          "group": "amcop.aarnanetworks.com",
          "kind": "Installer",
          "plural": "installers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:bb3b5ba76e7ce94441d0395dc5a66f7bb6fff59bd37d5328e418072b3bb174ab",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:bb3b5ba76e7ce94441d0395dc5a66f7bb6fff59bd37d5328e418072b3bb174ab",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:2cf47405d836adb9ec50ac39cbf3ee5550a41033865a77cec3ecece1c37d840c",
          "image": "registry.connect.redhat.com/aarna/amcop-k8s-operator@sha256:2cf47405d836adb9ec50ac39cbf3ee5550a41033865a77cec3ecece1c37d840c",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "61a8795c27e166330707dd67",
      "alm_examples": [
        {
          "api_version": "amcop.aarnanetworks.com/v1alpha1",
          "kind": "Installer",
          "metadata": {
            "name": "installer-sample"
          },
          "spec": {
            "foo": "bar"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aarna/amcop-k8s-operator-bundle@sha256:8cb7a9b39361707719f0dfc5589bbb55432e65941136d6034551003bd37c7f39",
      "bundle_path_digest": "sha256:8cb7a9b39361707719f0dfc5589bbb55432e65941136d6034551003bd37c7f39",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-12-02T07:44:28.599000+00:00",
      "csv_description": "LifeCycle Manager for Aarna Networks Multi Cluster Orchestration Platform (AMCOP)",
      "csv_display_name": "amcop-k8s-operator",
      "csv_metadata_description": "",
      "csv_name": "amcop-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:45:06.678000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "amcop-operator",
      "provided_apis": [
        {
          "group": "amcop.aarnanetworks.com",
          "kind": "Installer",
          "plural": "installers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:bb3b5ba76e7ce94441d0395dc5a66f7bb6fff59bd37d5328e418072b3bb174ab",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:bb3b5ba76e7ce94441d0395dc5a66f7bb6fff59bd37d5328e418072b3bb174ab",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:2cf47405d836adb9ec50ac39cbf3ee5550a41033865a77cec3ecece1c37d840c",
          "image": "registry.connect.redhat.com/aarna/amcop-k8s-operator@sha256:2cf47405d836adb9ec50ac39cbf3ee5550a41033865a77cec3ecece1c37d840c",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "61a89ab9c17162a20c1c6e33",
      "alm_examples": [
        {
          "api_version": "amcop.aarnanetworks.com/v1alpha1",
          "kind": "Installer",
          "metadata": {
            "name": "installer-sample"
          },
          "spec": {
            "foo": "bar"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aarna/amcop-k8s-operator-bundle@sha256:8cb7a9b39361707719f0dfc5589bbb55432e65941136d6034551003bd37c7f39",
      "bundle_path_digest": "sha256:8cb7a9b39361707719f0dfc5589bbb55432e65941136d6034551003bd37c7f39",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-12-02T10:06:49.093000+00:00",
      "csv_description": "LifeCycle Manager for Aarna Networks Multi Cluster Orchestration Platform (AMCOP)",
      "csv_display_name": "amcop-k8s-operator",
      "csv_metadata_description": "",
      "csv_name": "amcop-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:51:02.874000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "amcop-operator",
      "provided_apis": [
        {
          "group": "amcop.aarnanetworks.com",
          "kind": "Installer",
          "plural": "installers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:bb3b5ba76e7ce94441d0395dc5a66f7bb6fff59bd37d5328e418072b3bb174ab",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:bb3b5ba76e7ce94441d0395dc5a66f7bb6fff59bd37d5328e418072b3bb174ab",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:2cf47405d836adb9ec50ac39cbf3ee5550a41033865a77cec3ecece1c37d840c",
          "image": "registry.connect.redhat.com/aarna/amcop-k8s-operator@sha256:2cf47405d836adb9ec50ac39cbf3ee5550a41033865a77cec3ecece1c37d840c",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "61a8c596bfd4a5234d596591",
      "alm_examples": [
        {
          "api_version": "odf.ibm.com/v1alpha1",
          "kind": "FlashSystemCluster",
          "metadata": {
            "name": "flashsystemcluster-sample",
            "namespace": "openshift-storage"
          },
          "spec": {
            "defaultPool": {
              "fsType": "ext4",
              "poolName": "Pool0",
              "spaceEfficiency": "thick",
              "storageclassName": "odf-flashsystemcluster-sample",
              "volumeNamePrefix": "odf"
            },
            "insecureSkipVerify": true,
            "name": "flashsystem-xxx",
            "secret": {
              "name": "fs-secrets-example",
              "namespace": "openshift-storage"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/ibm-storage-odf-operator-bundle@sha256:905efe96fa1145c90b540289d9582ed789082c9b269a9beccb72f00a343eb22b",
      "bundle_path_digest": "sha256:905efe96fa1145c90b540289d9582ed789082c9b269a9beccb72f00a343eb22b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable-v1",
      "creation_date": "2021-12-02T13:09:42.981000+00:00",
      "csv_description": "IBM Storage ODF operator provides basic storage capabilities and extended management functions through OpenShift data foundation framework for applications.",
      "csv_display_name": "IBM Storage ODF operator",
      "csv_metadata_description": "",
      "csv_name": "ibm-storage-odf-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:53:54.310000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "ibm-storage-odf-operator",
      "provided_apis": [
        {
          "group": "odf.ibm.com",
          "kind": "FlashSystemCluster",
          "plural": "flashsystemclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:c34e32465c0f2c6aea4381de958d753433b4da454795fddb5048809ed67f654f",
          "image": "docker.io/ibmcom/ibm-storage-odf-operator@sha256:c34e32465c0f2c6aea4381de958d753433b4da454795fddb5048809ed67f654f",
          "name": "manager"
        },
        {
          "digest": "sha256:d49baf989ad004408b7fcaf3f421c90777fa78c8029ecd203d495e17e99f832d",
          "image": "docker.io/ibmcom/ibm-storage-odf-plugin@sha256:d49baf989ad004408b7fcaf3f421c90777fa78c8029ecd203d495e17e99f832d",
          "name": "ibm-odf-console"
        }
      ],
      "replaces": "",
      "skip_range": ">=0.0.1 <1.0.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "61a920383e9240fca360fd38",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {},
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "use_ocp_driver_toolkit": true,
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {}
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:311c0af18755aa941fca8e319f2bcf183f107897742ea4c4c85a08c75b31111d",
      "bundle_path_digest": "sha256:311c0af18755aa941fca8e319f2bcf183f107897742ea4c4c85a08c75b31111d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.9.0",
      "creation_date": "2021-12-02T19:36:24.232000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T10:53:25.624000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:57e7be259af342ccdf281d23d79e15d474e2e6f506f84c0cdae3db2a199b3395",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:57e7be259af342ccdf281d23d79e15d474e2e6f506f84c0cdae3db2a199b3395",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:5f0d3af074c92dfe0ce36899a1545bb5a408f2ad59878d43045e9ca302b82a41",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:5f0d3af074c92dfe0ce36899a1545bb5a408f2ad59878d43045e9ca302b82a41",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:f4c4de8d66b2fef8cebaee6fec2fb2d15d01e835de2654df6dfd4a0ce0baec6b",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:f4c4de8d66b2fef8cebaee6fec2fb2d15d01e835de2654df6dfd4a0ce0baec6b",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:5f826e306d093332a86afa7d1e96218b5bdda8d33067931cff7914f6bb2994ee",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:5f826e306d093332a86afa7d1e96218b5bdda8d33067931cff7914f6bb2994ee",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:35c8231e28e572b148699d52a5f5c9745556fd32ab4160da68d0fc84234c1309",
          "image": "nvcr.io/nvidia/driver@sha256:35c8231e28e572b148699d52a5f5c9745556fd32ab4160da68d0fc84234c1309",
          "name": "driver-image"
        },
        {
          "digest": "sha256:69171f906efe4bbabe31688343e59feea08a7e0ef8b0d9efb466abfa153aec16",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:69171f906efe4bbabe31688343e59feea08a7e0ef8b0d9efb466abfa153aec16",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:d718dda2f9c9f0a465240772ed1ca6db44789d37255172e00637a092bdd1ba31",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:d718dda2f9c9f0a465240772ed1ca6db44789d37255172e00637a092bdd1ba31",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:e137c897256501537e0986963889a91ec90cac029b5263fc4b229b278f5b1a02",
          "image": "nvcr.io/nvidia/cuda@sha256:e137c897256501537e0986963889a91ec90cac029b5263fc4b229b278f5b1a02",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:7b3509daf52c333c28da40d90586efa514ed9c14473f5ca495de7b65567ce4c2",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:7b3509daf52c333c28da40d90586efa514ed9c14473f5ca495de7b65567ce4c2",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:54233ebccbc3d2b388b237031907d58c3719d0e6f3ecb874349c91e8145225d2",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:54233ebccbc3d2b388b237031907d58c3719d0e6f3ecb874349c91e8145225d2",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:57e7be259af342ccdf281d23d79e15d474e2e6f506f84c0cdae3db2a199b3395",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:57e7be259af342ccdf281d23d79e15d474e2e6f506f84c0cdae3db2a199b3395",
          "name": "gpu-operator-57e7be259af342ccdf281d23d79e15d474e2e6f506f84c0cdae3db2a199b3395-annotation"
        },
        {
          "digest": "sha256:57e7be259af342ccdf281d23d79e15d474e2e6f506f84c0cdae3db2a199b3395",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:57e7be259af342ccdf281d23d79e15d474e2e6f506f84c0cdae3db2a199b3395",
          "name": "gpu-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.9.0",
      "version_original": "1.9.0"
    },
    {
      "_id": "61a9229e3e9240fca360fd40",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {},
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "use_ocp_driver_toolkit": true,
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {}
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:311c0af18755aa941fca8e319f2bcf183f107897742ea4c4c85a08c75b31111d",
      "bundle_path_digest": "sha256:311c0af18755aa941fca8e319f2bcf183f107897742ea4c4c85a08c75b31111d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-12-02T19:46:38.993000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:12:30.325000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:57e7be259af342ccdf281d23d79e15d474e2e6f506f84c0cdae3db2a199b3395",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:57e7be259af342ccdf281d23d79e15d474e2e6f506f84c0cdae3db2a199b3395",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:5f0d3af074c92dfe0ce36899a1545bb5a408f2ad59878d43045e9ca302b82a41",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:5f0d3af074c92dfe0ce36899a1545bb5a408f2ad59878d43045e9ca302b82a41",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:f4c4de8d66b2fef8cebaee6fec2fb2d15d01e835de2654df6dfd4a0ce0baec6b",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:f4c4de8d66b2fef8cebaee6fec2fb2d15d01e835de2654df6dfd4a0ce0baec6b",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:5f826e306d093332a86afa7d1e96218b5bdda8d33067931cff7914f6bb2994ee",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:5f826e306d093332a86afa7d1e96218b5bdda8d33067931cff7914f6bb2994ee",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:35c8231e28e572b148699d52a5f5c9745556fd32ab4160da68d0fc84234c1309",
          "image": "nvcr.io/nvidia/driver@sha256:35c8231e28e572b148699d52a5f5c9745556fd32ab4160da68d0fc84234c1309",
          "name": "driver-image"
        },
        {
          "digest": "sha256:69171f906efe4bbabe31688343e59feea08a7e0ef8b0d9efb466abfa153aec16",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:69171f906efe4bbabe31688343e59feea08a7e0ef8b0d9efb466abfa153aec16",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:d718dda2f9c9f0a465240772ed1ca6db44789d37255172e00637a092bdd1ba31",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:d718dda2f9c9f0a465240772ed1ca6db44789d37255172e00637a092bdd1ba31",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:e137c897256501537e0986963889a91ec90cac029b5263fc4b229b278f5b1a02",
          "image": "nvcr.io/nvidia/cuda@sha256:e137c897256501537e0986963889a91ec90cac029b5263fc4b229b278f5b1a02",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:7b3509daf52c333c28da40d90586efa514ed9c14473f5ca495de7b65567ce4c2",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:7b3509daf52c333c28da40d90586efa514ed9c14473f5ca495de7b65567ce4c2",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:54233ebccbc3d2b388b237031907d58c3719d0e6f3ecb874349c91e8145225d2",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:54233ebccbc3d2b388b237031907d58c3719d0e6f3ecb874349c91e8145225d2",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:57e7be259af342ccdf281d23d79e15d474e2e6f506f84c0cdae3db2a199b3395",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:57e7be259af342ccdf281d23d79e15d474e2e6f506f84c0cdae3db2a199b3395",
          "name": "gpu-operator-57e7be259af342ccdf281d23d79e15d474e2e6f506f84c0cdae3db2a199b3395-annotation"
        },
        {
          "digest": "sha256:57e7be259af342ccdf281d23d79e15d474e2e6f506f84c0cdae3db2a199b3395",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:57e7be259af342ccdf281d23d79e15d474e2e6f506f84c0cdae3db2a199b3395",
          "name": "gpu-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.9.0",
      "version_original": "1.9.0"
    },
    {
      "_id": "61a922a1c17162a20c1c71ad",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {},
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "use_ocp_driver_toolkit": true,
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {}
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:311c0af18755aa941fca8e319f2bcf183f107897742ea4c4c85a08c75b31111d",
      "bundle_path_digest": "sha256:311c0af18755aa941fca8e319f2bcf183f107897742ea4c4c85a08c75b31111d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.9.0",
      "creation_date": "2021-12-02T19:46:41.494000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:34:28.983000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:57e7be259af342ccdf281d23d79e15d474e2e6f506f84c0cdae3db2a199b3395",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:57e7be259af342ccdf281d23d79e15d474e2e6f506f84c0cdae3db2a199b3395",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:5f0d3af074c92dfe0ce36899a1545bb5a408f2ad59878d43045e9ca302b82a41",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:5f0d3af074c92dfe0ce36899a1545bb5a408f2ad59878d43045e9ca302b82a41",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:f4c4de8d66b2fef8cebaee6fec2fb2d15d01e835de2654df6dfd4a0ce0baec6b",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:f4c4de8d66b2fef8cebaee6fec2fb2d15d01e835de2654df6dfd4a0ce0baec6b",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:5f826e306d093332a86afa7d1e96218b5bdda8d33067931cff7914f6bb2994ee",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:5f826e306d093332a86afa7d1e96218b5bdda8d33067931cff7914f6bb2994ee",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:35c8231e28e572b148699d52a5f5c9745556fd32ab4160da68d0fc84234c1309",
          "image": "nvcr.io/nvidia/driver@sha256:35c8231e28e572b148699d52a5f5c9745556fd32ab4160da68d0fc84234c1309",
          "name": "driver-image"
        },
        {
          "digest": "sha256:69171f906efe4bbabe31688343e59feea08a7e0ef8b0d9efb466abfa153aec16",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:69171f906efe4bbabe31688343e59feea08a7e0ef8b0d9efb466abfa153aec16",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:d718dda2f9c9f0a465240772ed1ca6db44789d37255172e00637a092bdd1ba31",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:d718dda2f9c9f0a465240772ed1ca6db44789d37255172e00637a092bdd1ba31",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:e137c897256501537e0986963889a91ec90cac029b5263fc4b229b278f5b1a02",
          "image": "nvcr.io/nvidia/cuda@sha256:e137c897256501537e0986963889a91ec90cac029b5263fc4b229b278f5b1a02",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:7b3509daf52c333c28da40d90586efa514ed9c14473f5ca495de7b65567ce4c2",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:7b3509daf52c333c28da40d90586efa514ed9c14473f5ca495de7b65567ce4c2",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:54233ebccbc3d2b388b237031907d58c3719d0e6f3ecb874349c91e8145225d2",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:54233ebccbc3d2b388b237031907d58c3719d0e6f3ecb874349c91e8145225d2",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:57e7be259af342ccdf281d23d79e15d474e2e6f506f84c0cdae3db2a199b3395",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:57e7be259af342ccdf281d23d79e15d474e2e6f506f84c0cdae3db2a199b3395",
          "name": "gpu-operator-57e7be259af342ccdf281d23d79e15d474e2e6f506f84c0cdae3db2a199b3395-annotation"
        },
        {
          "digest": "sha256:57e7be259af342ccdf281d23d79e15d474e2e6f506f84c0cdae3db2a199b3395",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:57e7be259af342ccdf281d23d79e15d474e2e6f506f84c0cdae3db2a199b3395",
          "name": "gpu-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.9.0",
      "version_original": "1.9.0"
    },
    {
      "_id": "61a947e0c17162a20c1c71ff",
      "alm_examples": [
        {
          "api_version": "instana.io/v1",
          "kind": "InstanaAgent",
          "metadata": {
            "name": "instana-agent",
            "namespace": "instana-agent"
          },
          "spec": {
            "agent": {
              "configuration_yaml": "# You can leave this empty, or use this to configure your instana agent.\n# See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n",
              "endpointHost": "ingress-red-saas.instana.io",
              "endpointPort": "443",
              "env": {},
              "key": "replace-key"
            },
            "cluster": {
              "name": "my-cluster"
            },
            "zone": {
              "name": "edited-zone"
            }
          }
        },
        {
          "api_version": "instana.io/v1beta1",
          "kind": "InstanaAgent",
          "metadata": {
            "name": "instana-agent",
            "namespace": "instana-agent"
          },
          "spec": {
            "agent.endpoint.host": "ingress-red-saas.instana.io",
            "agent.endpoint.port": 443,
            "agent.env": {
              "INSTANA_AGENT_TAGS": "example"
            },
            "agent.key": "replace-me",
            "agent.zone.name": "my-zone",
            "cluster.name": "replace-me",
            "config.files": {
              "configuration.yaml": "# You can leave this empty, or use this to configure your instana agent.\n# See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/instana/instana-agent-operator-bundle@sha256:70821638936b353d5f06e3ed030d1d58b1eb14196e9b4238531cd67868df6570",
      "bundle_path_digest": "sha256:70821638936b353d5f06e3ed030d1d58b1eb14196e9b4238531cd67868df6570",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-12-02T22:25:36.110000+00:00",
      "csv_description": "# Instana\n\nInstana is an [APM solution](https://www.instana.com/product-overview/) built for microservices that enables IT Ops to build applications faster and deliver higher quality services by automating monitoring, tracing and root cause analysis. The solution is optimized for [Kubernetes](https://www.instana.com/automatic-kubernetes-monitoring/) and [OpenShift](https://www.instana.com/blog/automatic-root-cause-analysis-for-openshift-applications/).\n\n## Instana Agent Operator\n\nThis is the Kubernetes Operator for installing the Instana Agent on Kubernetes or OpenShift.\n\n## Prerequisites for OpenShift\n\nBefore the agent will be able to run in OpenShift, you need to perform a couple of extra configuration steps.\n\nYou need to set up a project for the Instana Agent and configure it's permissions.\n\nThe project you create here needs to be the namespace where you create the Instana Agent custom resource that the operator will use to deploy the agent.\n\nFor example, create the `instana-agent` project:\n\n    oc new-project instana-agent\n\nThen, ensure the `instana-agent` service account is in the privileged security context:\n\n    oc adm policy add-scc-to-user privileged -z instana-agent\n\nThis service account will be created by the operator.\n\nNow you can proceed with installing the operator for the Instana agent.\n\n## Installation and Configuration\n\nFirst, install this operator from [OperatorHub.io](https://operatorhub.io/), [OpenShift Container Platform](https://www.openshift.com/), or [OKD](https://www.okd.io/).\n\nSecond, create the target namespace where the Instana agent should be installed. The agent does not need to run in the same namespace as the operator. Most users create a new namespace `instana-agent` for running the agents.\n\nThird, create a custom resource with the agent configuration in the target namespace. The operator will pick up the custom resource and install the Instana agent accordingly.\n\nThe following is a minimal template of the custom resource:\n\n```yaml\napiVersion: instana.io/v1beta1\nkind: InstanaAgent\nmetadata:\n  name: instana-agent\n  namespace: instana-agent\nspec:\n  agent.zone.name: my-zone # (optional) name of the zone of the host\n  agent.key: replace-me # replace with your Instana agent key\n  agent.endpoint.host: ingress-red-saas.instana.io # the monitoring ingress endpoint\n  agent.endpoint.port: 443 # the monitoring ingress endpoint port, wrapped in quotes\n  agent.env:\n    INSTANA_AGENT_TAGS: example\n  cluster.name: replace-me # replace with the name of your Kubernetes cluster\n  config.files:\n    configuration.yaml: |\n      # You can leave this empty, or use this to configure your instana agent.\n      # See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n```\n\nSave the template in a file `instana-agent.yaml` and edit the following values:\n\n* If your target namespace is not `instana-agent`, replace the `namespace:` accordingly.\n* `agent.key` must be set with your Instana agent key.\n* `agent.endpoint` must be set with the monitoring ingress endpoint, generally either `saas-us-west-2.instana.io` or `saas-eu-west-1.instana.io`.\n* `agent.endpoint.port` must be set with the monitoring ingress port, generally \"443\" (wrapped in quotes).\n* `agent.zone.name` should be set with the name of the Kubernetes cluster that is be displayed in Instana.\n\nFor advanced configuration, you can edit the contents of the `configuration.yaml` file. View documentation [here](https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/).\n\nApply the custom resource with `kubectl apply -f instana-agent.yaml`. After some time, you should see `instana-agent` Pods being created on each node of your cluster, and your cluster should show on the infrastructure map on your Instana Web interface.\n\n## Uninstalling\n\nIn order to uninstall the Instana agent, simply remove the custom resource with `kubectl delete -f instana-agent.yaml`.\n\n## Source Code\n\nThe Instana agent operator is an open source project hosted on [https://github.com/instana/instana-agent-operator](https://github.com/instana/instana-agent-operator/).\n",
      "csv_display_name": "Instana Agent Operator",
      "csv_metadata_description": "Fully automated Application Performance Monitoring (APM) for microservices.",
      "csv_name": "instana-agent-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:39:48.221000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "instana-agent-operator",
      "provided_apis": [
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1"
        },
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:73cf53ca24ffe758a1c37db088a16be0da46c261436e9fef2ac0ccd6ed19e423",
          "image": "instana/instana-agent-operator@sha256:73cf53ca24ffe758a1c37db088a16be0da46c261436e9fef2ac0ccd6ed19e423",
          "name": "instana-agent-operator"
        },
        {
          "digest": "sha256:de42da5d3a955bfccfdcde86e8159ab4e0a20b8fe799c7e8a82878e971f3ec95",
          "image": "instana/agent@sha256:de42da5d3a955bfccfdcde86e8159ab4e0a20b8fe799c7e8a82878e971f3ec95",
          "name": "instana-agent"
        },
        {
          "digest": "sha256:73cf53ca24ffe758a1c37db088a16be0da46c261436e9fef2ac0ccd6ed19e423",
          "image": "instana/instana-agent-operator@sha256:73cf53ca24ffe758a1c37db088a16be0da46c261436e9fef2ac0ccd6ed19e423",
          "name": "instana-agent-operator-73cf53ca24ffe758a1c37db088a16be0da46c261436e9fef2ac0ccd6ed19e423-annotation"
        },
        {
          "digest": "sha256:73cf53ca24ffe758a1c37db088a16be0da46c261436e9fef2ac0ccd6ed19e423",
          "image": "instana/instana-agent-operator@sha256:73cf53ca24ffe758a1c37db088a16be0da46c261436e9fef2ac0ccd6ed19e423",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "<2.0.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "61ad9681bfd4a5234d596a09",
      "alm_examples": [
        {
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.4.1"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:a14d47bb4fd884917a50b8f9be82409272c50b1c30f879452d66305268ffd40e",
      "bundle_path_digest": "sha256:a14d47bb4fd884917a50b8f9be82409272c50b1c30f879452d66305268ffd40e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-12-06T04:50:09.003000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:01:36.305000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:65c7bca4c2323581867463317f6d9c519411d0770b73d7c68ef90ec1c34b7bf7",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:65c7bca4c2323581867463317f6d9c519411d0770b73d7c68ef90ec1c34b7bf7",
          "name": "t8c-operator-65c7bca4c2323581867463317f6d9c519411d0770b73d7c68ef90ec1c34b7bf7-annotation"
        },
        {
          "digest": "sha256:65c7bca4c2323581867463317f6d9c519411d0770b73d7c68ef90ec1c34b7bf7",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:65c7bca4c2323581867463317f6d9c519411d0770b73d7c68ef90ec1c34b7bf7",
          "name": "t8c-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "42.4.0",
      "version_original": "42.4.0"
    },
    {
      "_id": "61ad9b30bfd4a5234d596a0a",
      "alm_examples": [
        {
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.4.1"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:a14d47bb4fd884917a50b8f9be82409272c50b1c30f879452d66305268ffd40e",
      "bundle_path_digest": "sha256:a14d47bb4fd884917a50b8f9be82409272c50b1c30f879452d66305268ffd40e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-12-06T05:10:08.267000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:19:43.492000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:65c7bca4c2323581867463317f6d9c519411d0770b73d7c68ef90ec1c34b7bf7",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:65c7bca4c2323581867463317f6d9c519411d0770b73d7c68ef90ec1c34b7bf7",
          "name": "t8c-operator-65c7bca4c2323581867463317f6d9c519411d0770b73d7c68ef90ec1c34b7bf7-annotation"
        },
        {
          "digest": "sha256:65c7bca4c2323581867463317f6d9c519411d0770b73d7c68ef90ec1c34b7bf7",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:65c7bca4c2323581867463317f6d9c519411d0770b73d7c68ef90ec1c34b7bf7",
          "name": "t8c-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "42.4.0",
      "version_original": "42.4.0"
    },
    {
      "_id": "61add9bfbfd4a5234d596a4e",
      "alm_examples": [
        {
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.4.1"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:a14d47bb4fd884917a50b8f9be82409272c50b1c30f879452d66305268ffd40e",
      "bundle_path_digest": "sha256:a14d47bb4fd884917a50b8f9be82409272c50b1c30f879452d66305268ffd40e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-12-06T09:37:03.742000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:14:26.594000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:65c7bca4c2323581867463317f6d9c519411d0770b73d7c68ef90ec1c34b7bf7",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:65c7bca4c2323581867463317f6d9c519411d0770b73d7c68ef90ec1c34b7bf7",
          "name": "t8c-operator-65c7bca4c2323581867463317f6d9c519411d0770b73d7c68ef90ec1c34b7bf7-annotation"
        },
        {
          "digest": "sha256:65c7bca4c2323581867463317f6d9c519411d0770b73d7c68ef90ec1c34b7bf7",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:65c7bca4c2323581867463317f6d9c519411d0770b73d7c68ef90ec1c34b7bf7",
          "name": "t8c-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "42.4.0",
      "version_original": "42.4.0"
    },
    {
      "_id": "61af62c13e9240fca361089c",
      "alm_examples": [
        {
          "api_version": "instana.io/v1",
          "kind": "InstanaAgent",
          "metadata": {
            "name": "instana-agent",
            "namespace": "instana-agent"
          },
          "spec": {
            "agent": {
              "configuration_yaml": "# You can leave this empty, or use this to configure your instana agent.\n# See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n",
              "endpointHost": "ingress-red-saas.instana.io",
              "endpointPort": "443",
              "env": {},
              "key": "replace-key"
            },
            "cluster": {
              "name": "my-cluster"
            },
            "zone": {
              "name": "edited-zone"
            }
          }
        },
        {
          "api_version": "instana.io/v1beta1",
          "kind": "InstanaAgent",
          "metadata": {
            "name": "instana-agent",
            "namespace": "instana-agent"
          },
          "spec": {
            "agent.endpoint.host": "ingress-red-saas.instana.io",
            "agent.endpoint.port": 443,
            "agent.env": {
              "INSTANA_AGENT_TAGS": "example"
            },
            "agent.key": "replace-me",
            "agent.zone.name": "my-zone",
            "cluster.name": "replace-me",
            "config.files": {
              "configuration.yaml": "# You can leave this empty, or use this to configure your instana agent.\n# See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/instana/instana-agent-operator-bundle@sha256:d72b299e1344da4c81ad10f853facba47fd60a4554a79b0137da6646318428c0",
      "bundle_path_digest": "sha256:d72b299e1344da4c81ad10f853facba47fd60a4554a79b0137da6646318428c0",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-12-07T13:33:53.535000+00:00",
      "csv_description": "# Instana\n\nInstana is an [APM solution](https://www.instana.com/product-overview/) built for microservices that enables IT Ops to build applications faster and deliver higher quality services by automating monitoring, tracing and root cause analysis. The solution is optimized for [Kubernetes](https://www.instana.com/automatic-kubernetes-monitoring/) and [OpenShift](https://www.instana.com/blog/automatic-root-cause-analysis-for-openshift-applications/).\n\n## Instana Agent Operator\n\nThis is the Kubernetes Operator for installing the Instana Agent on Kubernetes or OpenShift.\n\n## Prerequisites for OpenShift\n\nBefore the agent will be able to run in OpenShift, you need to perform a couple of extra configuration steps.\n\nYou need to set up a project for the Instana Agent and configure it's permissions.\n\nThe project you create here needs to be the namespace where you create the Instana Agent custom resource that the operator will use to deploy the agent.\n\nFor example, create the `instana-agent` project:\n\n    oc new-project instana-agent\n\nThen, ensure the `instana-agent` service account is in the privileged security context:\n\n    oc adm policy add-scc-to-user privileged -z instana-agent\n\nThis service account will be created by the operator.\n\nNow you can proceed with installing the operator for the Instana agent.\n\n## Installation and Configuration\n\nFirst, install this operator from [OperatorHub.io](https://operatorhub.io/), [OpenShift Container Platform](https://www.openshift.com/), or [OKD](https://www.okd.io/).\n\nSecond, create a custom resource with the agent configuration in the target namespace (for now, this MUST always be the `instana-agent` namespace). The operator will pick up the custom resource and install the Instana agent accordingly.\n\nThe following is a minimal template of the custom resource:\n\n```yaml\napiVersion: instana.io/v1\nkind: InstanaAgent\nmetadata:\n  name: instana-agent\n  namespace: instana-agent\nspec:\n  zone:\n    name: my-zone # (optional) name of the zone of the host\n  cluster:\n    name: replace-me # replace with the name of your Kubernetes cluster\n  agent:\n    key: replace-me # replace with your Instana agent key\n    endpointHost: ingress-red-saas.instana.io # the monitoring ingress endpoint\n    endpointPort: \"443\" # the monitoring ingress endpoint port, wrapped in quotes\n    env:\n      INSTANA_AGENT_TAGS: example\n    configuration_yaml: |\n      # You can leave this empty, or use this to configure your instana agent.\n      # See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n```\n\nSave the template in a file `instana-agent.yaml` and edit the following values:\n\n* If your target namespace is not `instana-agent`, replace the `namespace:` accordingly.\n* `agent.key` must be set with your Instana agent key.\n* `agent.endpointHost` must be set with the monitoring ingress endpoint, generally either `saas-us-west-2.instana.io` or `saas-eu-west-1.instana.io`.\n* `agent.endpointPort` must be set with the monitoring ingress port, generally \"443\" (wrapped in quotes).\n* `zone.name` should be set with the name of the Kubernetes cluster that is be displayed in Instana.\n\nFor advanced configuration, you can edit the contents of the `configuration.yaml` file. View documentation [here](https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/).\n\nApply the custom resource with `kubectl apply -f instana-agent.yaml`. After some time, you should see `instana-agent` Pods being created on each node of your cluster, and your cluster should show on the infrastructure map on your Instana Web interface.\n\n## Uninstalling\n\nIn order to uninstall the Instana agent, simply remove the custom resource with `kubectl delete -f instana-agent.yaml`.\n\n## Source Code\n\nThe Instana agent operator is an open source project hosted on [https://github.com/instana/instana-agent-operator](https://github.com/instana/instana-agent-operator/).\n",
      "csv_display_name": "Instana Agent Operator",
      "csv_metadata_description": "Fully automated Application Performance Monitoring (APM) for microservices.",
      "csv_name": "instana-agent-operator.v2.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:24:49.929000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "instana-agent-operator",
      "provided_apis": [
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1"
        },
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:dad92f35c638d37b3f13ae2c2bc814411ff358d92c4cad9d325f5e191d36ff09",
          "image": "instana/instana-agent-operator@sha256:dad92f35c638d37b3f13ae2c2bc814411ff358d92c4cad9d325f5e191d36ff09",
          "name": "instana-agent-operator"
        },
        {
          "digest": "sha256:de42da5d3a955bfccfdcde86e8159ab4e0a20b8fe799c7e8a82878e971f3ec95",
          "image": "instana/agent@sha256:de42da5d3a955bfccfdcde86e8159ab4e0a20b8fe799c7e8a82878e971f3ec95",
          "name": "instana-agent"
        },
        {
          "digest": "sha256:dad92f35c638d37b3f13ae2c2bc814411ff358d92c4cad9d325f5e191d36ff09",
          "image": "instana/instana-agent-operator@sha256:dad92f35c638d37b3f13ae2c2bc814411ff358d92c4cad9d325f5e191d36ff09",
          "name": "instana-agent-operator-dad92f35c638d37b3f13ae2c2bc814411ff358d92c4cad9d325f5e191d36ff09-annotation"
        },
        {
          "digest": "sha256:dad92f35c638d37b3f13ae2c2bc814411ff358d92c4cad9d325f5e191d36ff09",
          "image": "instana/instana-agent-operator@sha256:dad92f35c638d37b3f13ae2c2bc814411ff358d92c4cad9d325f5e191d36ff09",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2.0.1",
      "version_original": "2.0.1"
    },
    {
      "_id": "61af670d3e9240fca36108c0",
      "alm_examples": [
        {
          "api_version": "instana.io/v1",
          "kind": "InstanaAgent",
          "metadata": {
            "name": "instana-agent",
            "namespace": "instana-agent"
          },
          "spec": {
            "agent": {
              "configuration_yaml": "# You can leave this empty, or use this to configure your instana agent.\n# See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n",
              "endpointHost": "ingress-red-saas.instana.io",
              "endpointPort": "443",
              "env": {},
              "key": "replace-key"
            },
            "cluster": {
              "name": "my-cluster"
            },
            "zone": {
              "name": "edited-zone"
            }
          }
        },
        {
          "api_version": "instana.io/v1beta1",
          "kind": "InstanaAgent",
          "metadata": {
            "name": "instana-agent",
            "namespace": "instana-agent"
          },
          "spec": {
            "agent.endpoint.host": "ingress-red-saas.instana.io",
            "agent.endpoint.port": 443,
            "agent.env": {
              "INSTANA_AGENT_TAGS": "example"
            },
            "agent.key": "replace-me",
            "agent.zone.name": "my-zone",
            "cluster.name": "replace-me",
            "config.files": {
              "configuration.yaml": "# You can leave this empty, or use this to configure your instana agent.\n# See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/instana/instana-agent-operator-bundle@sha256:1d8e2148413f5284dcedfe722bbf481ebbd64c6f4e78a5015081e3b4af826f81",
      "bundle_path_digest": "sha256:1d8e2148413f5284dcedfe722bbf481ebbd64c6f4e78a5015081e3b4af826f81",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-12-07T13:52:13.128000+00:00",
      "csv_description": "# Instana\n\nInstana is an [APM solution](https://www.instana.com/product-overview/) built for microservices that enables IT Ops to build applications faster and deliver higher quality services by automating monitoring, tracing and root cause analysis. The solution is optimized for [Kubernetes](https://www.instana.com/automatic-kubernetes-monitoring/) and [OpenShift](https://www.instana.com/blog/automatic-root-cause-analysis-for-openshift-applications/).\n\n## Instana Agent Operator\n\nThis is the Kubernetes Operator for installing the Instana Agent on Kubernetes or OpenShift.\n\n## Prerequisites for OpenShift\n\nBefore the agent will be able to run in OpenShift, you need to perform a couple of extra configuration steps.\n\nYou need to set up a project for the Instana Agent and configure it's permissions.\n\nThe project you create here needs to be the namespace where you create the Instana Agent custom resource that the operator will use to deploy the agent.\n\nFor example, create the `instana-agent` project:\n\n    oc new-project instana-agent\n\nThen, ensure the `instana-agent` service account is in the privileged security context:\n\n    oc adm policy add-scc-to-user privileged -z instana-agent\n\nThis service account will be created by the operator.\n\nNow you can proceed with installing the operator for the Instana agent.\n\n## Installation and Configuration\n\nFirst, install this operator from [OperatorHub.io](https://operatorhub.io/), [OpenShift Container Platform](https://www.openshift.com/), or [OKD](https://www.okd.io/).\n\nSecond, create a custom resource with the agent configuration in the target namespace (for now, this MUST always be the `instana-agent` namespace). The operator will pick up the custom resource and install the Instana agent accordingly.\n\nThe following is a minimal template of the custom resource:\n\n```yaml\napiVersion: instana.io/v1\nkind: InstanaAgent\nmetadata:\n  name: instana-agent\n  namespace: instana-agent\nspec:\n  zone:\n    name: my-zone # (optional) name of the zone of the host\n  cluster:\n    name: replace-me # replace with the name of your Kubernetes cluster\n  agent:\n    key: replace-me # replace with your Instana agent key\n    endpointHost: ingress-red-saas.instana.io # the monitoring ingress endpoint\n    endpointPort: \"443\" # the monitoring ingress endpoint port, wrapped in quotes\n    env:\n      INSTANA_AGENT_TAGS: example\n    configuration_yaml: |\n      # You can leave this empty, or use this to configure your instana agent.\n      # See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n```\n\nSave the template in a file `instana-agent.yaml` and edit the following values:\n\n* If your target namespace is not `instana-agent`, replace the `namespace:` accordingly.\n* `agent.key` must be set with your Instana agent key.\n* `agent.endpointHost` must be set with the monitoring ingress endpoint, generally either `saas-us-west-2.instana.io` or `saas-eu-west-1.instana.io`.\n* `agent.endpointPort` must be set with the monitoring ingress port, generally \"443\" (wrapped in quotes).\n* `zone.name` should be set with the name of the Kubernetes cluster that is be displayed in Instana.\n\nFor advanced configuration, you can edit the contents of the `configuration.yaml` file. View documentation [here](https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/).\n\nApply the custom resource with `kubectl apply -f instana-agent.yaml`. After some time, you should see `instana-agent` Pods being created on each node of your cluster, and your cluster should show on the infrastructure map on your Instana Web interface.\n\n## Uninstalling\n\nIn order to uninstall the Instana agent, simply remove the custom resource with `kubectl delete -f instana-agent.yaml`.\n\n## Source Code\n\nThe Instana agent operator is an open source project hosted on [https://github.com/instana/instana-agent-operator](https://github.com/instana/instana-agent-operator/).\n",
      "csv_display_name": "Instana Agent Operator",
      "csv_metadata_description": "Fully automated Application Performance Monitoring (APM) for microservices.",
      "csv_name": "instana-agent-operator.v2.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:04:53.976000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "instana-agent-operator",
      "provided_apis": [
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1"
        },
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6e44ea0498f98f82383dd47e988eaca1aabd5c65a3e61e6b2241be1ea12c6aa0",
          "image": "instana/instana-agent-operator@sha256:6e44ea0498f98f82383dd47e988eaca1aabd5c65a3e61e6b2241be1ea12c6aa0",
          "name": "instana-agent-operator"
        },
        {
          "digest": "sha256:aaa9a53850cbb1a876cd1b85286380ea970973ec21d1532dffd3efbcf7320bb8",
          "image": "instana/agent@sha256:aaa9a53850cbb1a876cd1b85286380ea970973ec21d1532dffd3efbcf7320bb8",
          "name": "instana-agent"
        },
        {
          "digest": "sha256:6e44ea0498f98f82383dd47e988eaca1aabd5c65a3e61e6b2241be1ea12c6aa0",
          "image": "instana/instana-agent-operator@sha256:6e44ea0498f98f82383dd47e988eaca1aabd5c65a3e61e6b2241be1ea12c6aa0",
          "name": "instana-agent-operator-6e44ea0498f98f82383dd47e988eaca1aabd5c65a3e61e6b2241be1ea12c6aa0-annotation"
        },
        {
          "digest": "sha256:6e44ea0498f98f82383dd47e988eaca1aabd5c65a3e61e6b2241be1ea12c6aa0",
          "image": "instana/instana-agent-operator@sha256:6e44ea0498f98f82383dd47e988eaca1aabd5c65a3e61e6b2241be1ea12c6aa0",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2.0.2",
      "version_original": "2.0.2"
    },
    {
      "_id": "61af8503bfd4a5234d5974ab",
      "alm_examples": [
        {
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.4.1"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:a14d47bb4fd884917a50b8f9be82409272c50b1c30f879452d66305268ffd40e",
      "bundle_path_digest": "sha256:a14d47bb4fd884917a50b8f9be82409272c50b1c30f879452d66305268ffd40e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-12-07T16:00:03.847000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:49:04.048000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:65c7bca4c2323581867463317f6d9c519411d0770b73d7c68ef90ec1c34b7bf7",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:65c7bca4c2323581867463317f6d9c519411d0770b73d7c68ef90ec1c34b7bf7",
          "name": "t8c-operator-65c7bca4c2323581867463317f6d9c519411d0770b73d7c68ef90ec1c34b7bf7-annotation"
        },
        {
          "digest": "sha256:65c7bca4c2323581867463317f6d9c519411d0770b73d7c68ef90ec1c34b7bf7",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:65c7bca4c2323581867463317f6d9c519411d0770b73d7c68ef90ec1c34b7bf7",
          "name": "t8c-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "42.4.0",
      "version_original": "42.4.0"
    },
    {
      "_id": "61b04425f405208b380d9691",
      "alm_examples": [
        {
          "api_version": "workloadmanager.nec.com/v1",
          "kind": "WorkloadManager",
          "metadata": {
            "name": "workload-manager",
            "namespace": "nec-workload-manager"
          },
          "spec": {
            "api_timeout": 3,
            "cluster_collection#": 10737418240,
            "cluster_platform": "OpenShift",
            "common_config_log_level": "INFO",
            "db_startup_recheck_time": 5,
            "db_startup_wait_time": 60,
            "default_monitor_count": 10,
            "default_monitor_interval": 60,
            "default_repeat_interval": 1800,
            "detail_collection#": 10737418240,
            "detect_count": 1,
            "detect_interval": 60,
            "event_collection#": 10737418240,
            "expire_after_seconds": 31536000,
            "get_info_interval": 60,
            "get_info_ssc": "off",
            "grafana_cooperation": "off",
            "grafana_datasource": "prometheus",
            "grafana_node_additional_varlist": "",
            "grafana_node_dashboard_endpoint": "https://changeit.nec.co.jp:443/d/wmnode/wm-node-dashboard",
            "grafana_node_varname_datasource": "datasource",
            "grafana_node_varname_node": "node",
            "grafana_pod_additional_varlist": "",
            "grafana_pod_dashboard_endpoint": "https://changeit.nec.co.jp:443/d/wmpod/wm-pod-dashboard",
            "grafana_pod_varname_datasource": "datasource",
            "grafana_pod_varname_pod": "pod",
            "grafana_time_range_minutes": 60,
            "hidden_namespace": "",
            "image": "registry.connect.redhat.com/nec/nec-workload-manager@sha256:1d99212cf18d83886a7b487151af00ef3abae8e2662aadfca38108b5eff9649d",
            "jaeger_endpoint": "https://changeit.nec.co.jp:443/search",
            "jaeger_service_mapping": "{}",
            "jaeger_time_range_sec": 60,
            "max_policy_fired_histories": 512,
            "mode": "trial",
            "node_cpu_usage_threshold": 80,
            "node_disk_usage_threshold": 100,
            "node_memory_usage_threshold": 80,
            "node_network_usage_threshold": 55,
            "openshift": {
              "use_ebs": "n",
              "web_console_host": "REPLACE_WEB_CONSOLE_HOST"
            },
            "policy_fired_histories_collection_max#": 1073741824,
            "policy_fired_histories_expire_after_seconds": 31536000,
            "skip_action_interval": 600,
            "ssc_auth_by_secret": "false",
            "ssc_event_collection#": 1073741824,
            "use_auth": "false",
            "use_pv": "false",
            "user_authority_config_json": "[\n  {\n    \"username\": \"cluster-admin-user\",\n    \"is_cluster_admin\": true,\n    \"namespaces\": []\n  },\n  {\n    \"username\": \"tenant-user\",\n    \"is_cluster_admin\": false,\n    \"namespaces\": [\n      \"tenant-namespace\"\n    ]\n  }\n]\n"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nec/nec-workload-manager-operator-bundle@sha256:5a47a3ac2e5c777cd226a410bba29bca08701416cfcd342215e579e24c8a738d",
      "bundle_path_digest": "sha256:5a47a3ac2e5c777cd226a410bba29bca08701416cfcd342215e579e24c8a738d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-12-08T05:35:33.828000+00:00",
      "csv_description": "This operator deploys the NEC Workload Manager for Container Platform on OpenShift Container Platform.",
      "csv_display_name": "NEC Workload Manager for Container Platform Operator",
      "csv_metadata_description": "",
      "csv_name": "workload-manager-operator.v1.3.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:09:19.036000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "workload-manager-operator",
      "provided_apis": [
        {
          "group": "workloadmanager.nec.com",
          "kind": "WorkloadManager",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1d99212cf18d83886a7b487151af00ef3abae8e2662aadfca38108b5eff9649d",
          "image": "registry.connect.redhat.com/nec/nec-workload-manager@sha256:1d99212cf18d83886a7b487151af00ef3abae8e2662aadfca38108b5eff9649d",
          "name": "nec-workload-manager"
        },
        {
          "digest": "sha256:5805850512de4c4868d0dcc7da6d2cc557196285b8c0e3c67c32065115e9ae87",
          "image": "registry.connect.redhat.com/nec/nec-workload-manager-operator@sha256:5805850512de4c4868d0dcc7da6d2cc557196285b8c0e3c67c32065115e9ae87",
          "name": "nec-workload-manager-operator"
        },
        {
          "digest": "sha256:5805850512de4c4868d0dcc7da6d2cc557196285b8c0e3c67c32065115e9ae87",
          "image": "registry.connect.redhat.com/nec/nec-workload-manager-operator@sha256:5805850512de4c4868d0dcc7da6d2cc557196285b8c0e3c67c32065115e9ae87",
          "name": "workload-manager-operator"
        },
        {
          "digest": "sha256:1d99212cf18d83886a7b487151af00ef3abae8e2662aadfca38108b5eff9649d",
          "image": "registry.connect.redhat.com/nec/nec-workload-manager@sha256:1d99212cf18d83886a7b487151af00ef3abae8e2662aadfca38108b5eff9649d",
          "name": "nec-workload-manager-1d99212cf18d83886a7b487151af00ef3abae8e2662aadfca38108b5eff9649d-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.3.1",
      "version_original": "1.3.1"
    },
    {
      "_id": "61b044b97f84cb9883a2f2d9",
      "alm_examples": [
        {
          "api_version": "workloadmanager.nec.com/v1",
          "kind": "WorkloadManager",
          "metadata": {
            "name": "workload-manager",
            "namespace": "nec-workload-manager"
          },
          "spec": {
            "api_timeout": 3,
            "cluster_collection#": 10737418240,
            "cluster_platform": "OpenShift",
            "common_config_log_level": "INFO",
            "db_startup_recheck_time": 5,
            "db_startup_wait_time": 60,
            "default_monitor_count": 10,
            "default_monitor_interval": 60,
            "default_repeat_interval": 1800,
            "detail_collection#": 10737418240,
            "detect_count": 1,
            "detect_interval": 60,
            "event_collection#": 10737418240,
            "expire_after_seconds": 31536000,
            "get_info_interval": 60,
            "get_info_ssc": "off",
            "grafana_cooperation": "off",
            "grafana_datasource": "prometheus",
            "grafana_node_additional_varlist": "",
            "grafana_node_dashboard_endpoint": "https://changeit.nec.co.jp:443/d/wmnode/wm-node-dashboard",
            "grafana_node_varname_datasource": "datasource",
            "grafana_node_varname_node": "node",
            "grafana_pod_additional_varlist": "",
            "grafana_pod_dashboard_endpoint": "https://changeit.nec.co.jp:443/d/wmpod/wm-pod-dashboard",
            "grafana_pod_varname_datasource": "datasource",
            "grafana_pod_varname_pod": "pod",
            "grafana_time_range_minutes": 60,
            "hidden_namespace": "",
            "image": "registry.connect.redhat.com/nec/nec-workload-manager@sha256:1d99212cf18d83886a7b487151af00ef3abae8e2662aadfca38108b5eff9649d",
            "jaeger_endpoint": "https://changeit.nec.co.jp:443/search",
            "jaeger_service_mapping": "{}",
            "jaeger_time_range_sec": 60,
            "max_policy_fired_histories": 512,
            "mode": "trial",
            "node_cpu_usage_threshold": 80,
            "node_disk_usage_threshold": 100,
            "node_memory_usage_threshold": 80,
            "node_network_usage_threshold": 55,
            "openshift": {
              "use_ebs": "n",
              "web_console_host": "REPLACE_WEB_CONSOLE_HOST"
            },
            "policy_fired_histories_collection_max#": 1073741824,
            "policy_fired_histories_expire_after_seconds": 31536000,
            "skip_action_interval": 600,
            "ssc_auth_by_secret": "false",
            "ssc_event_collection#": 1073741824,
            "use_auth": "false",
            "use_pv": "false",
            "user_authority_config_json": "[\n  {\n    \"username\": \"cluster-admin-user\",\n    \"is_cluster_admin\": true,\n    \"namespaces\": []\n  },\n  {\n    \"username\": \"tenant-user\",\n    \"is_cluster_admin\": false,\n    \"namespaces\": [\n      \"tenant-namespace\"\n    ]\n  }\n]\n"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nec/nec-workload-manager-operator-bundle@sha256:5a47a3ac2e5c777cd226a410bba29bca08701416cfcd342215e579e24c8a738d",
      "bundle_path_digest": "sha256:5a47a3ac2e5c777cd226a410bba29bca08701416cfcd342215e579e24c8a738d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-12-08T05:38:01.227000+00:00",
      "csv_description": "This operator deploys the NEC Workload Manager for Container Platform on OpenShift Container Platform.",
      "csv_display_name": "NEC Workload Manager for Container Platform Operator",
      "csv_metadata_description": "",
      "csv_name": "workload-manager-operator.v1.3.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:16:06.219000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "workload-manager-operator",
      "provided_apis": [
        {
          "group": "workloadmanager.nec.com",
          "kind": "WorkloadManager",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1d99212cf18d83886a7b487151af00ef3abae8e2662aadfca38108b5eff9649d",
          "image": "registry.connect.redhat.com/nec/nec-workload-manager@sha256:1d99212cf18d83886a7b487151af00ef3abae8e2662aadfca38108b5eff9649d",
          "name": "nec-workload-manager"
        },
        {
          "digest": "sha256:5805850512de4c4868d0dcc7da6d2cc557196285b8c0e3c67c32065115e9ae87",
          "image": "registry.connect.redhat.com/nec/nec-workload-manager-operator@sha256:5805850512de4c4868d0dcc7da6d2cc557196285b8c0e3c67c32065115e9ae87",
          "name": "nec-workload-manager-operator"
        },
        {
          "digest": "sha256:5805850512de4c4868d0dcc7da6d2cc557196285b8c0e3c67c32065115e9ae87",
          "image": "registry.connect.redhat.com/nec/nec-workload-manager-operator@sha256:5805850512de4c4868d0dcc7da6d2cc557196285b8c0e3c67c32065115e9ae87",
          "name": "workload-manager-operator"
        },
        {
          "digest": "sha256:1d99212cf18d83886a7b487151af00ef3abae8e2662aadfca38108b5eff9649d",
          "image": "registry.connect.redhat.com/nec/nec-workload-manager@sha256:1d99212cf18d83886a7b487151af00ef3abae8e2662aadfca38108b5eff9649d",
          "name": "nec-workload-manager-1d99212cf18d83886a7b487151af00ef3abae8e2662aadfca38108b5eff9649d-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.3.1",
      "version_original": "1.3.1"
    },
    {
      "_id": "61b079e409fbfe27c991b077",
      "alm_examples": [
        {
          "api_version": "workloadmanager.nec.com/v1",
          "kind": "WorkloadManager",
          "metadata": {
            "name": "workload-manager",
            "namespace": "nec-workload-manager"
          },
          "spec": {
            "api_timeout": 3,
            "cluster_collection#": 10737418240,
            "cluster_platform": "OpenShift",
            "common_config_log_level": "INFO",
            "db_startup_recheck_time": 5,
            "db_startup_wait_time": 60,
            "default_monitor_count": 10,
            "default_monitor_interval": 60,
            "default_repeat_interval": 1800,
            "detail_collection#": 10737418240,
            "detect_count": 1,
            "detect_interval": 60,
            "event_collection#": 10737418240,
            "expire_after_seconds": 31536000,
            "get_info_interval": 60,
            "get_info_ssc": "off",
            "grafana_cooperation": "off",
            "grafana_datasource": "prometheus",
            "grafana_node_additional_varlist": "",
            "grafana_node_dashboard_endpoint": "https://changeit.nec.co.jp:443/d/wmnode/wm-node-dashboard",
            "grafana_node_varname_datasource": "datasource",
            "grafana_node_varname_node": "node",
            "grafana_pod_additional_varlist": "",
            "grafana_pod_dashboard_endpoint": "https://changeit.nec.co.jp:443/d/wmpod/wm-pod-dashboard",
            "grafana_pod_varname_datasource": "datasource",
            "grafana_pod_varname_pod": "pod",
            "grafana_time_range_minutes": 60,
            "hidden_namespace": "",
            "image": "registry.connect.redhat.com/nec/nec-workload-manager@sha256:1d99212cf18d83886a7b487151af00ef3abae8e2662aadfca38108b5eff9649d",
            "jaeger_endpoint": "https://changeit.nec.co.jp:443/search",
            "jaeger_service_mapping": "{}",
            "jaeger_time_range_sec": 60,
            "max_policy_fired_histories": 512,
            "mode": "trial",
            "node_cpu_usage_threshold": 80,
            "node_disk_usage_threshold": 100,
            "node_memory_usage_threshold": 80,
            "node_network_usage_threshold": 55,
            "openshift": {
              "use_ebs": "n",
              "web_console_host": "REPLACE_WEB_CONSOLE_HOST"
            },
            "policy_fired_histories_collection_max#": 1073741824,
            "policy_fired_histories_expire_after_seconds": 31536000,
            "skip_action_interval": 600,
            "ssc_auth_by_secret": "false",
            "ssc_event_collection#": 1073741824,
            "use_auth": "false",
            "use_pv": "false",
            "user_authority_config_json": "[\n  {\n    \"username\": \"cluster-admin-user\",\n    \"is_cluster_admin\": true,\n    \"namespaces\": []\n  },\n  {\n    \"username\": \"tenant-user\",\n    \"is_cluster_admin\": false,\n    \"namespaces\": [\n      \"tenant-namespace\"\n    ]\n  }\n]\n"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nec/nec-workload-manager-operator-bundle@sha256:5a47a3ac2e5c777cd226a410bba29bca08701416cfcd342215e579e24c8a738d",
      "bundle_path_digest": "sha256:5a47a3ac2e5c777cd226a410bba29bca08701416cfcd342215e579e24c8a738d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-12-08T09:24:52.586000+00:00",
      "csv_description": "This operator deploys the NEC Workload Manager for Container Platform on OpenShift Container Platform.",
      "csv_display_name": "NEC Workload Manager for Container Platform Operator",
      "csv_metadata_description": "",
      "csv_name": "workload-manager-operator.v1.3.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:46:29.722000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "workload-manager-operator",
      "provided_apis": [
        {
          "group": "workloadmanager.nec.com",
          "kind": "WorkloadManager",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1d99212cf18d83886a7b487151af00ef3abae8e2662aadfca38108b5eff9649d",
          "image": "registry.connect.redhat.com/nec/nec-workload-manager@sha256:1d99212cf18d83886a7b487151af00ef3abae8e2662aadfca38108b5eff9649d",
          "name": "nec-workload-manager"
        },
        {
          "digest": "sha256:5805850512de4c4868d0dcc7da6d2cc557196285b8c0e3c67c32065115e9ae87",
          "image": "registry.connect.redhat.com/nec/nec-workload-manager-operator@sha256:5805850512de4c4868d0dcc7da6d2cc557196285b8c0e3c67c32065115e9ae87",
          "name": "nec-workload-manager-operator"
        },
        {
          "digest": "sha256:5805850512de4c4868d0dcc7da6d2cc557196285b8c0e3c67c32065115e9ae87",
          "image": "registry.connect.redhat.com/nec/nec-workload-manager-operator@sha256:5805850512de4c4868d0dcc7da6d2cc557196285b8c0e3c67c32065115e9ae87",
          "name": "workload-manager-operator"
        },
        {
          "digest": "sha256:1d99212cf18d83886a7b487151af00ef3abae8e2662aadfca38108b5eff9649d",
          "image": "registry.connect.redhat.com/nec/nec-workload-manager@sha256:1d99212cf18d83886a7b487151af00ef3abae8e2662aadfca38108b5eff9649d",
          "name": "nec-workload-manager-1d99212cf18d83886a7b487151af00ef3abae8e2662aadfca38108b5eff9649d-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.3.1",
      "version_original": "1.3.1"
    },
    {
      "_id": "61b16ee5f90e846f0ebdb0f2",
      "alm_examples": [
        {
          "api_version": "csi.hitachi.com/v1",
          "kind": "HSPC",
          "metadata": {
            "name": "hspc",
            "namespace": "kube-system"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hitachi/hspc-operator-bundle@sha256:91cd03f337743bb14df9fe49a0439dd6acc16a55c20bff7f7f7bf84b367676d4",
      "bundle_path_digest": "sha256:91cd03f337743bb14df9fe49a0439dd6acc16a55c20bff7f7f7bf84b367676d4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-12-09T02:50:13.484000+00:00",
      "csv_description": "## About\nHitachi Storage Plug-in for Containers (HSPC) is a plugin that integrates Hitachi VSP storage into Kubernetes based clusters.\nHSPC provides dynamic persistent volume provisioning capabilities from Hitachi's block storage arrays.\n\nFor full documentation, go to our [Knowledge Base](https://knowledge.hitachivantara.com/Documents/Adapters_and_Drivers/Storage_Adapters_and_Drivers/Containers) and refer to the reference guide for HSPC v3.8.0.\n\n## Requirements\n\n### Supported Driver Version\n\n* HSPC v3.8.0\n\n### Supported Platforms\n\n* OpenShift v4.6, v4.7, v4.8\n\n### Supported Operating Systems\n\n* RHEL 7.x\n* RHEL 8.x",
      "csv_display_name": "Hitachi Storage Plug-in for Containers",
      "csv_metadata_description": "An operator for managing Hitachi Storage Plug-in for Containers CSI driver",
      "csv_name": "hspc-operator.v1.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:04:49.079000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "hspc-operator",
      "provided_apis": [
        {
          "group": "csi.hitachi.com",
          "kind": "HSPC",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f82f352feadf07a971ab6a276cfb01e20310dfd611cc712958695a7b637f70bf",
          "image": "registry.connect.redhat.com/hitachi/hspc-operator@sha256:f82f352feadf07a971ab6a276cfb01e20310dfd611cc712958695a7b637f70bf",
          "name": "hspc-operator"
        },
        {
          "digest": "sha256:f82f352feadf07a971ab6a276cfb01e20310dfd611cc712958695a7b637f70bf",
          "image": "registry.connect.redhat.com/hitachi/hspc-operator@sha256:f82f352feadf07a971ab6a276cfb01e20310dfd611cc712958695a7b637f70bf",
          "name": "hspc-operator-f82f352feadf07a971ab6a276cfb01e20310dfd611cc712958695a7b637f70bf-annotation"
        },
        {
          "digest": "sha256:f82f352feadf07a971ab6a276cfb01e20310dfd611cc712958695a7b637f70bf",
          "image": "registry.connect.redhat.com/hitachi/hspc-operator@sha256:f82f352feadf07a971ab6a276cfb01e20310dfd611cc712958695a7b637f70bf",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.8.0",
      "version_original": "1.8.0"
    },
    {
      "_id": "61b391c2f5a71c2d7c841e4e",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:69638694cb924d90c1c741bb90be3fee24efc6a3072774e875b30d5c55877108",
      "bundle_path_digest": "sha256:69638694cb924d90c1c741bb90be3fee24efc6a3072774e875b30d5c55877108",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.23",
      "creation_date": "2021-12-10T17:43:30.067000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.23.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:55:11.511000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "CalicoNodeStatus",
          "plural": "caliconodestatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "APIServer",
          "plural": "apiservers",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPReservation",
          "plural": "ipreservations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:3685ddcc878ab11b91b9ea8b0adc94570dc398c8d79bb6ca87b1ea78e16ca272",
          "image": "quay.io/tigera/operator@sha256:3685ddcc878ab11b91b9ea8b0adc94570dc398c8d79bb6ca87b1ea78e16ca272",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:3685ddcc878ab11b91b9ea8b0adc94570dc398c8d79bb6ca87b1ea78e16ca272",
          "image": "quay.io/tigera/operator@sha256:3685ddcc878ab11b91b9ea8b0adc94570dc398c8d79bb6ca87b1ea78e16ca272",
          "name": "operator-3685ddcc878ab11b91b9ea8b0adc94570dc398c8d79bb6ca87b1ea78e16ca272-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.23.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.23.0",
      "version_original": "1.23.0"
    },
    {
      "_id": "61b394ef39aedd4833bb11ad",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:69638694cb924d90c1c741bb90be3fee24efc6a3072774e875b30d5c55877108",
      "bundle_path_digest": "sha256:69638694cb924d90c1c741bb90be3fee24efc6a3072774e875b30d5c55877108",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.23",
      "creation_date": "2021-12-10T17:57:03.788000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.23.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:40:43.185000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "operator.tigera.io",
          "kind": "APIServer",
          "plural": "apiservers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPReservation",
          "plural": "ipreservations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "CalicoNodeStatus",
          "plural": "caliconodestatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:3685ddcc878ab11b91b9ea8b0adc94570dc398c8d79bb6ca87b1ea78e16ca272",
          "image": "quay.io/tigera/operator@sha256:3685ddcc878ab11b91b9ea8b0adc94570dc398c8d79bb6ca87b1ea78e16ca272",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:3685ddcc878ab11b91b9ea8b0adc94570dc398c8d79bb6ca87b1ea78e16ca272",
          "image": "quay.io/tigera/operator@sha256:3685ddcc878ab11b91b9ea8b0adc94570dc398c8d79bb6ca87b1ea78e16ca272",
          "name": "operator-3685ddcc878ab11b91b9ea8b0adc94570dc398c8d79bb6ca87b1ea78e16ca272-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.23.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.23.0",
      "version_original": "1.23.0"
    },
    {
      "_id": "61b3950d9e4335b6d1b1d8bd",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:69638694cb924d90c1c741bb90be3fee24efc6a3072774e875b30d5c55877108",
      "bundle_path_digest": "sha256:69638694cb924d90c1c741bb90be3fee24efc6a3072774e875b30d5c55877108",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.23",
      "creation_date": "2021-12-10T17:57:33.938000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.23.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T10:59:18.137000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "CalicoNodeStatus",
          "plural": "caliconodestatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "APIServer",
          "plural": "apiservers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPReservation",
          "plural": "ipreservations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:3685ddcc878ab11b91b9ea8b0adc94570dc398c8d79bb6ca87b1ea78e16ca272",
          "image": "quay.io/tigera/operator@sha256:3685ddcc878ab11b91b9ea8b0adc94570dc398c8d79bb6ca87b1ea78e16ca272",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:3685ddcc878ab11b91b9ea8b0adc94570dc398c8d79bb6ca87b1ea78e16ca272",
          "image": "quay.io/tigera/operator@sha256:3685ddcc878ab11b91b9ea8b0adc94570dc398c8d79bb6ca87b1ea78e16ca272",
          "name": "operator-3685ddcc878ab11b91b9ea8b0adc94570dc398c8d79bb6ca87b1ea78e16ca272-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.23.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.23.0",
      "version_original": "1.23.0"
    },
    {
      "_id": "61b3956860a98527f7695a58",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:69638694cb924d90c1c741bb90be3fee24efc6a3072774e875b30d5c55877108",
      "bundle_path_digest": "sha256:69638694cb924d90c1c741bb90be3fee24efc6a3072774e875b30d5c55877108",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.23",
      "creation_date": "2021-12-10T17:59:04.690000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.23.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:28:37.963000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "APIServer",
          "plural": "apiservers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPReservation",
          "plural": "ipreservations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "CalicoNodeStatus",
          "plural": "caliconodestatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:3685ddcc878ab11b91b9ea8b0adc94570dc398c8d79bb6ca87b1ea78e16ca272",
          "image": "quay.io/tigera/operator@sha256:3685ddcc878ab11b91b9ea8b0adc94570dc398c8d79bb6ca87b1ea78e16ca272",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:3685ddcc878ab11b91b9ea8b0adc94570dc398c8d79bb6ca87b1ea78e16ca272",
          "image": "quay.io/tigera/operator@sha256:3685ddcc878ab11b91b9ea8b0adc94570dc398c8d79bb6ca87b1ea78e16ca272",
          "name": "operator-3685ddcc878ab11b91b9ea8b0adc94570dc398c8d79bb6ca87b1ea78e16ca272-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.23.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.23.0",
      "version_original": "1.23.0"
    },
    {
      "_id": "61b395c3f5a71c2d7c841e50",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:69638694cb924d90c1c741bb90be3fee24efc6a3072774e875b30d5c55877108",
      "bundle_path_digest": "sha256:69638694cb924d90c1c741bb90be3fee24efc6a3072774e875b30d5c55877108",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.23",
      "creation_date": "2021-12-10T18:00:35.385000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.23.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:38:47.509000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPReservation",
          "plural": "ipreservations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "CalicoNodeStatus",
          "plural": "caliconodestatuses",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "APIServer",
          "plural": "apiservers",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:3685ddcc878ab11b91b9ea8b0adc94570dc398c8d79bb6ca87b1ea78e16ca272",
          "image": "quay.io/tigera/operator@sha256:3685ddcc878ab11b91b9ea8b0adc94570dc398c8d79bb6ca87b1ea78e16ca272",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:3685ddcc878ab11b91b9ea8b0adc94570dc398c8d79bb6ca87b1ea78e16ca272",
          "image": "quay.io/tigera/operator@sha256:3685ddcc878ab11b91b9ea8b0adc94570dc398c8d79bb6ca87b1ea78e16ca272",
          "name": "operator-3685ddcc878ab11b91b9ea8b0adc94570dc398c8d79bb6ca87b1ea78e16ca272-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.23.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.23.0",
      "version_original": "1.23.0"
    },
    {
      "_id": "61b3b88e9e4335b6d1b1d8c0",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:55c18554ceac30fc13b0bd91b2374e2f95045605f80d94c861cd185adfa0e1b4",
      "bundle_path_digest": "sha256:55c18554ceac30fc13b0bd91b2374e2f95045605f80d94c861cd185adfa0e1b4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.23",
      "creation_date": "2021-12-10T20:29:02.910000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.23.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:55:17.352000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPReservation",
          "plural": "ipreservations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "CalicoNodeStatus",
          "plural": "caliconodestatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "APIServer",
          "plural": "apiservers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:df959774a8c3b2a870b42772d11dc0844c5bc4430a973c92a592be0b1012df65",
          "image": "quay.io/tigera/operator@sha256:df959774a8c3b2a870b42772d11dc0844c5bc4430a973c92a592be0b1012df65",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:df959774a8c3b2a870b42772d11dc0844c5bc4430a973c92a592be0b1012df65",
          "image": "quay.io/tigera/operator@sha256:df959774a8c3b2a870b42772d11dc0844c5bc4430a973c92a592be0b1012df65",
          "name": "operator-df959774a8c3b2a870b42772d11dc0844c5bc4430a973c92a592be0b1012df65-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.23.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.23.1",
      "version_original": "1.23.1"
    },
    {
      "_id": "61b3b8aaf5a71c2d7c841e55",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:55c18554ceac30fc13b0bd91b2374e2f95045605f80d94c861cd185adfa0e1b4",
      "bundle_path_digest": "sha256:55c18554ceac30fc13b0bd91b2374e2f95045605f80d94c861cd185adfa0e1b4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.23",
      "creation_date": "2021-12-10T20:29:30.990000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.23.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T10:59:21.221000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "CalicoNodeStatus",
          "plural": "caliconodestatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPReservation",
          "plural": "ipreservations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "APIServer",
          "plural": "apiservers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:df959774a8c3b2a870b42772d11dc0844c5bc4430a973c92a592be0b1012df65",
          "image": "quay.io/tigera/operator@sha256:df959774a8c3b2a870b42772d11dc0844c5bc4430a973c92a592be0b1012df65",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:df959774a8c3b2a870b42772d11dc0844c5bc4430a973c92a592be0b1012df65",
          "image": "quay.io/tigera/operator@sha256:df959774a8c3b2a870b42772d11dc0844c5bc4430a973c92a592be0b1012df65",
          "name": "operator-df959774a8c3b2a870b42772d11dc0844c5bc4430a973c92a592be0b1012df65-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.23.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.23.1",
      "version_original": "1.23.1"
    },
    {
      "_id": "61b3baddf5a71c2d7c841e56",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:55c18554ceac30fc13b0bd91b2374e2f95045605f80d94c861cd185adfa0e1b4",
      "bundle_path_digest": "sha256:55c18554ceac30fc13b0bd91b2374e2f95045605f80d94c861cd185adfa0e1b4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.23",
      "creation_date": "2021-12-10T20:38:53.293000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.23.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:35:01.254000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPReservation",
          "plural": "ipreservations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "CalicoNodeStatus",
          "plural": "caliconodestatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "APIServer",
          "plural": "apiservers",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:df959774a8c3b2a870b42772d11dc0844c5bc4430a973c92a592be0b1012df65",
          "image": "quay.io/tigera/operator@sha256:df959774a8c3b2a870b42772d11dc0844c5bc4430a973c92a592be0b1012df65",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:df959774a8c3b2a870b42772d11dc0844c5bc4430a973c92a592be0b1012df65",
          "image": "quay.io/tigera/operator@sha256:df959774a8c3b2a870b42772d11dc0844c5bc4430a973c92a592be0b1012df65",
          "name": "operator-df959774a8c3b2a870b42772d11dc0844c5bc4430a973c92a592be0b1012df65-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.23.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.23.1",
      "version_original": "1.23.1"
    },
    {
      "_id": "61b3bb3039aedd4833bb11b4",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:55c18554ceac30fc13b0bd91b2374e2f95045605f80d94c861cd185adfa0e1b4",
      "bundle_path_digest": "sha256:55c18554ceac30fc13b0bd91b2374e2f95045605f80d94c861cd185adfa0e1b4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.23",
      "creation_date": "2021-12-10T20:40:16.981000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.23.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:49:47.627000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPReservation",
          "plural": "ipreservations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "CalicoNodeStatus",
          "plural": "caliconodestatuses",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "APIServer",
          "plural": "apiservers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:df959774a8c3b2a870b42772d11dc0844c5bc4430a973c92a592be0b1012df65",
          "image": "quay.io/tigera/operator@sha256:df959774a8c3b2a870b42772d11dc0844c5bc4430a973c92a592be0b1012df65",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:df959774a8c3b2a870b42772d11dc0844c5bc4430a973c92a592be0b1012df65",
          "image": "quay.io/tigera/operator@sha256:df959774a8c3b2a870b42772d11dc0844c5bc4430a973c92a592be0b1012df65",
          "name": "operator-df959774a8c3b2a870b42772d11dc0844c5bc4430a973c92a592be0b1012df65-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.23.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.23.1",
      "version_original": "1.23.1"
    },
    {
      "_id": "61b3bb8960a98527f7695a5f",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:55c18554ceac30fc13b0bd91b2374e2f95045605f80d94c861cd185adfa0e1b4",
      "bundle_path_digest": "sha256:55c18554ceac30fc13b0bd91b2374e2f95045605f80d94c861cd185adfa0e1b4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.23",
      "creation_date": "2021-12-10T20:41:45.677000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.23.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:11:22.968000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPReservation",
          "plural": "ipreservations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "APIServer",
          "plural": "apiservers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "CalicoNodeStatus",
          "plural": "caliconodestatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:df959774a8c3b2a870b42772d11dc0844c5bc4430a973c92a592be0b1012df65",
          "image": "quay.io/tigera/operator@sha256:df959774a8c3b2a870b42772d11dc0844c5bc4430a973c92a592be0b1012df65",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:df959774a8c3b2a870b42772d11dc0844c5bc4430a973c92a592be0b1012df65",
          "image": "quay.io/tigera/operator@sha256:df959774a8c3b2a870b42772d11dc0844c5bc4430a973c92a592be0b1012df65",
          "name": "operator-df959774a8c3b2a870b42772d11dc0844c5bc4430a973c92a592be0b1012df65-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.23.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.23.1",
      "version_original": "1.23.1"
    },
    {
      "_id": "61b40a549e4335b6d1b1d8c5",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:85bb416b033fdeee5af37e48ac5ef16ae8d586c6a4305946e2f335713b021193",
      "bundle_path_digest": "sha256:85bb416b033fdeee5af37e48ac5ef16ae8d586c6a4305946e2f335713b021193",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.23",
      "creation_date": "2021-12-11T02:17:56.638000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.23.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:14:15.594000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPReservation",
          "plural": "ipreservations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "APIServer",
          "plural": "apiservers",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "CalicoNodeStatus",
          "plural": "caliconodestatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:a370072cbe39ee8afe03d843e803d91e41e8573a7385654138e31207a9b44d9a",
          "image": "quay.io/tigera/operator@sha256:a370072cbe39ee8afe03d843e803d91e41e8573a7385654138e31207a9b44d9a",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:a370072cbe39ee8afe03d843e803d91e41e8573a7385654138e31207a9b44d9a",
          "image": "quay.io/tigera/operator@sha256:a370072cbe39ee8afe03d843e803d91e41e8573a7385654138e31207a9b44d9a",
          "name": "operator-a370072cbe39ee8afe03d843e803d91e41e8573a7385654138e31207a9b44d9a-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.23.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.23.2",
      "version_original": "1.23.2"
    },
    {
      "_id": "61b40aa59e4335b6d1b1d8c6",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:85bb416b033fdeee5af37e48ac5ef16ae8d586c6a4305946e2f335713b021193",
      "bundle_path_digest": "sha256:85bb416b033fdeee5af37e48ac5ef16ae8d586c6a4305946e2f335713b021193",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.23",
      "creation_date": "2021-12-11T02:19:17.392000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.23.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:10:15.463000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPReservation",
          "plural": "ipreservations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "CalicoNodeStatus",
          "plural": "caliconodestatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "APIServer",
          "plural": "apiservers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:a370072cbe39ee8afe03d843e803d91e41e8573a7385654138e31207a9b44d9a",
          "image": "quay.io/tigera/operator@sha256:a370072cbe39ee8afe03d843e803d91e41e8573a7385654138e31207a9b44d9a",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:a370072cbe39ee8afe03d843e803d91e41e8573a7385654138e31207a9b44d9a",
          "image": "quay.io/tigera/operator@sha256:a370072cbe39ee8afe03d843e803d91e41e8573a7385654138e31207a9b44d9a",
          "name": "operator-a370072cbe39ee8afe03d843e803d91e41e8573a7385654138e31207a9b44d9a-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.23.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.23.2",
      "version_original": "1.23.2"
    },
    {
      "_id": "61b40b4639aedd4833bb11b7",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:85bb416b033fdeee5af37e48ac5ef16ae8d586c6a4305946e2f335713b021193",
      "bundle_path_digest": "sha256:85bb416b033fdeee5af37e48ac5ef16ae8d586c6a4305946e2f335713b021193",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.23",
      "creation_date": "2021-12-11T02:21:58.451000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.23.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:53:30.293000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPReservation",
          "plural": "ipreservations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "APIServer",
          "plural": "apiservers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "CalicoNodeStatus",
          "plural": "caliconodestatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:a370072cbe39ee8afe03d843e803d91e41e8573a7385654138e31207a9b44d9a",
          "image": "quay.io/tigera/operator@sha256:a370072cbe39ee8afe03d843e803d91e41e8573a7385654138e31207a9b44d9a",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:a370072cbe39ee8afe03d843e803d91e41e8573a7385654138e31207a9b44d9a",
          "image": "quay.io/tigera/operator@sha256:a370072cbe39ee8afe03d843e803d91e41e8573a7385654138e31207a9b44d9a",
          "name": "operator-a370072cbe39ee8afe03d843e803d91e41e8573a7385654138e31207a9b44d9a-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.23.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.23.2",
      "version_original": "1.23.2"
    },
    {
      "_id": "61b44c6360a98527f7695a6c",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:85bb416b033fdeee5af37e48ac5ef16ae8d586c6a4305946e2f335713b021193",
      "bundle_path_digest": "sha256:85bb416b033fdeee5af37e48ac5ef16ae8d586c6a4305946e2f335713b021193",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.23",
      "creation_date": "2021-12-11T06:59:47.553000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.23.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T10:59:24.223000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPReservation",
          "plural": "ipreservations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "CalicoNodeStatus",
          "plural": "caliconodestatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "APIServer",
          "plural": "apiservers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:a370072cbe39ee8afe03d843e803d91e41e8573a7385654138e31207a9b44d9a",
          "image": "quay.io/tigera/operator@sha256:a370072cbe39ee8afe03d843e803d91e41e8573a7385654138e31207a9b44d9a",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:a370072cbe39ee8afe03d843e803d91e41e8573a7385654138e31207a9b44d9a",
          "image": "quay.io/tigera/operator@sha256:a370072cbe39ee8afe03d843e803d91e41e8573a7385654138e31207a9b44d9a",
          "name": "operator-a370072cbe39ee8afe03d843e803d91e41e8573a7385654138e31207a9b44d9a-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.23.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.23.2",
      "version_original": "1.23.2"
    },
    {
      "_id": "61b471f59e4335b6d1b1d8d4",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:85bb416b033fdeee5af37e48ac5ef16ae8d586c6a4305946e2f335713b021193",
      "bundle_path_digest": "sha256:85bb416b033fdeee5af37e48ac5ef16ae8d586c6a4305946e2f335713b021193",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.23",
      "creation_date": "2021-12-11T09:40:05.110000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.23.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:55:23.421000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "CalicoNodeStatus",
          "plural": "caliconodestatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "APIServer",
          "plural": "apiservers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPReservation",
          "plural": "ipreservations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:a370072cbe39ee8afe03d843e803d91e41e8573a7385654138e31207a9b44d9a",
          "image": "quay.io/tigera/operator@sha256:a370072cbe39ee8afe03d843e803d91e41e8573a7385654138e31207a9b44d9a",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:a370072cbe39ee8afe03d843e803d91e41e8573a7385654138e31207a9b44d9a",
          "image": "quay.io/tigera/operator@sha256:a370072cbe39ee8afe03d843e803d91e41e8573a7385654138e31207a9b44d9a",
          "name": "operator-a370072cbe39ee8afe03d843e803d91e41e8573a7385654138e31207a9b44d9a-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.23.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.23.2",
      "version_original": "1.23.2"
    },
    {
      "_id": "61b471f69e4335b6d1b1d8d5",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:af2675c5b6917536944375fabb8cb53667c19fd5a24c498350ef4f66750f095e",
      "bundle_path_digest": "sha256:af2675c5b6917536944375fabb8cb53667c19fd5a24c498350ef4f66750f095e",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.23",
      "creation_date": "2021-12-11T09:40:06.514000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.23.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:55:28.830000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "CalicoNodeStatus",
          "plural": "caliconodestatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "APIServer",
          "plural": "apiservers",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPReservation",
          "plural": "ipreservations",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:b4e3eeccfd3d5a931c07f31c244b272e058ccabd2d8155ccc3ff52ed78855e69",
          "image": "quay.io/tigera/operator@sha256:b4e3eeccfd3d5a931c07f31c244b272e058ccabd2d8155ccc3ff52ed78855e69",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:b4e3eeccfd3d5a931c07f31c244b272e058ccabd2d8155ccc3ff52ed78855e69",
          "image": "quay.io/tigera/operator@sha256:b4e3eeccfd3d5a931c07f31c244b272e058ccabd2d8155ccc3ff52ed78855e69",
          "name": "operator-b4e3eeccfd3d5a931c07f31c244b272e058ccabd2d8155ccc3ff52ed78855e69-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.23.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.23.3",
      "version_original": "1.23.3"
    },
    {
      "_id": "61b472439e4335b6d1b1d8d6",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:af2675c5b6917536944375fabb8cb53667c19fd5a24c498350ef4f66750f095e",
      "bundle_path_digest": "sha256:af2675c5b6917536944375fabb8cb53667c19fd5a24c498350ef4f66750f095e",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.23",
      "creation_date": "2021-12-11T09:41:23.482000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.23.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:51:37.395000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "CalicoNodeStatus",
          "plural": "caliconodestatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPReservation",
          "plural": "ipreservations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "APIServer",
          "plural": "apiservers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:b4e3eeccfd3d5a931c07f31c244b272e058ccabd2d8155ccc3ff52ed78855e69",
          "image": "quay.io/tigera/operator@sha256:b4e3eeccfd3d5a931c07f31c244b272e058ccabd2d8155ccc3ff52ed78855e69",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:b4e3eeccfd3d5a931c07f31c244b272e058ccabd2d8155ccc3ff52ed78855e69",
          "image": "quay.io/tigera/operator@sha256:b4e3eeccfd3d5a931c07f31c244b272e058ccabd2d8155ccc3ff52ed78855e69",
          "name": "operator-b4e3eeccfd3d5a931c07f31c244b272e058ccabd2d8155ccc3ff52ed78855e69-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.23.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.23.3",
      "version_original": "1.23.3"
    },
    {
      "_id": "61b4729c9e4335b6d1b1d8d7",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:af2675c5b6917536944375fabb8cb53667c19fd5a24c498350ef4f66750f095e",
      "bundle_path_digest": "sha256:af2675c5b6917536944375fabb8cb53667c19fd5a24c498350ef4f66750f095e",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.23",
      "creation_date": "2021-12-11T09:42:52.128000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.23.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:26:31.471000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "CalicoNodeStatus",
          "plural": "caliconodestatuses",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPReservation",
          "plural": "ipreservations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "APIServer",
          "plural": "apiservers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:b4e3eeccfd3d5a931c07f31c244b272e058ccabd2d8155ccc3ff52ed78855e69",
          "image": "quay.io/tigera/operator@sha256:b4e3eeccfd3d5a931c07f31c244b272e058ccabd2d8155ccc3ff52ed78855e69",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:b4e3eeccfd3d5a931c07f31c244b272e058ccabd2d8155ccc3ff52ed78855e69",
          "image": "quay.io/tigera/operator@sha256:b4e3eeccfd3d5a931c07f31c244b272e058ccabd2d8155ccc3ff52ed78855e69",
          "name": "operator-b4e3eeccfd3d5a931c07f31c244b272e058ccabd2d8155ccc3ff52ed78855e69-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.23.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.23.3",
      "version_original": "1.23.3"
    },
    {
      "_id": "61b473039e4335b6d1b1d8d9",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:af2675c5b6917536944375fabb8cb53667c19fd5a24c498350ef4f66750f095e",
      "bundle_path_digest": "sha256:af2675c5b6917536944375fabb8cb53667c19fd5a24c498350ef4f66750f095e",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.23",
      "creation_date": "2021-12-11T09:44:35.900000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.23.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T10:59:28.943000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "CalicoNodeStatus",
          "plural": "caliconodestatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "APIServer",
          "plural": "apiservers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPReservation",
          "plural": "ipreservations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:b4e3eeccfd3d5a931c07f31c244b272e058ccabd2d8155ccc3ff52ed78855e69",
          "image": "quay.io/tigera/operator@sha256:b4e3eeccfd3d5a931c07f31c244b272e058ccabd2d8155ccc3ff52ed78855e69",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:b4e3eeccfd3d5a931c07f31c244b272e058ccabd2d8155ccc3ff52ed78855e69",
          "image": "quay.io/tigera/operator@sha256:b4e3eeccfd3d5a931c07f31c244b272e058ccabd2d8155ccc3ff52ed78855e69",
          "name": "operator-b4e3eeccfd3d5a931c07f31c244b272e058ccabd2d8155ccc3ff52ed78855e69-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.23.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.23.3",
      "version_original": "1.23.3"
    },
    {
      "_id": "61b4742b60a98527f7695a6e",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:af2675c5b6917536944375fabb8cb53667c19fd5a24c498350ef4f66750f095e",
      "bundle_path_digest": "sha256:af2675c5b6917536944375fabb8cb53667c19fd5a24c498350ef4f66750f095e",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.23",
      "creation_date": "2021-12-11T09:49:31.817000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.23.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:18:08.622000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "APIServer",
          "plural": "apiservers",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPReservation",
          "plural": "ipreservations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "CalicoNodeStatus",
          "plural": "caliconodestatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:b4e3eeccfd3d5a931c07f31c244b272e058ccabd2d8155ccc3ff52ed78855e69",
          "image": "quay.io/tigera/operator@sha256:b4e3eeccfd3d5a931c07f31c244b272e058ccabd2d8155ccc3ff52ed78855e69",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:b4e3eeccfd3d5a931c07f31c244b272e058ccabd2d8155ccc3ff52ed78855e69",
          "image": "quay.io/tigera/operator@sha256:b4e3eeccfd3d5a931c07f31c244b272e058ccabd2d8155ccc3ff52ed78855e69",
          "name": "operator-b4e3eeccfd3d5a931c07f31c244b272e058ccabd2d8155ccc3ff52ed78855e69-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.23.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.23.3",
      "version_original": "1.23.3"
    },
    {
      "_id": "61b7b936365e714ccb637aeb",
      "alm_examples": [
        {
          "api_version": "conjur.cyberark.com/v1",
          "kind": "ConjurFollower",
          "metadata": {
            "labels": {
              "app": "conjur-follower"
            },
            "name": "conjur-follower-operator-my-conjur-follower",
            "namespace": "conjur-follower-operator-system"
          },
          "spec": {
            "images": {
              "configurator": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
              "conjur": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
              "info": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
              "nginx": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
              "postgres": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
              "syslogNg": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c"
            },
            "master": {
              "account": "my-company",
              "authenticatorID": "conjur-openshift-follower",
              "authnLogin": "host/conjur-openshift-follower",
              "caCertificateFrom": {
                "configMapKeyRef": {
                  "key": "conjur.master-cert",
                  "name": "follower"
                }
              },
              "hostname": "conjur.my-company.net"
            },
            "replicas": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator-bundle@sha256:e3bc395543de733defc75270df2828fa8ba4cdf5c5cf79848a4640ee99a9fef7",
      "bundle_path_digest": "sha256:e3bc395543de733defc75270df2828fa8ba4cdf5c5cf79848a4640ee99a9fef7",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "preview",
      "creation_date": "2021-12-13T21:20:54.693000+00:00",
      "csv_description": "Use this Operator for managing Conjur Followers in an OpenShift cluster.\n\nCyberArk products secure your most sensitive and high-value assets\u2014and supporting your Identity Security goals is our top priority. We offer 24/7 service for high priority issues to all customers with resources across ten countries and in all continents.\n\nCyberArk Conjur makes secrets management simple. Conjur provides a seamless open source interface to securely authenticate, control, and audit non-human access across tools, applications, containers, and cloud environments via robust secrets management.",
      "csv_display_name": "Conjur Enterprise Follower Operator",
      "csv_metadata_description": "",
      "csv_name": "conjur-follower-operator.v2.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T10:52:09.039000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "conjur-follower-operator",
      "provided_apis": [
        {
          "group": "conjur.cyberark.com",
          "kind": "ConjurFollower",
          "plural": "conjurfollowers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "name": "conjur-openshift-follower-operator"
        },
        {
          "digest": "sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "name": "conjur-openshift-follower-configurator"
        },
        {
          "digest": "sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "name": "conjur-openshift-follower-conjur"
        },
        {
          "digest": "sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "name": "conjur-openshift-follower-info"
        },
        {
          "digest": "sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "name": "conjur-openshift-follower-nginx"
        },
        {
          "digest": "sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "name": "conjur-openshift-follower-postgres"
        },
        {
          "digest": "sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "name": "conjur-openshift-follower-syslog-ng"
        },
        {
          "digest": "sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "name": "conjur-follower-operator"
        },
        {
          "digest": "sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "name": "conjur-openshift-follower-syslog-ng-7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c-annotation"
        },
        {
          "digest": "sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "name": "conjur-openshift-follower-postgres-96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5-annotation"
        },
        {
          "digest": "sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "name": "conjur-openshift-follower-nginx-d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981-annotation"
        },
        {
          "digest": "sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "name": "conjur-openshift-follower-info-27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05-annotation"
        },
        {
          "digest": "sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "name": "conjur-openshift-follower-conjur-ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c-annotation"
        },
        {
          "digest": "sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "name": "conjur-openshift-follower-configurator-b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.0.2",
      "version_original": "2.0.2"
    },
    {
      "_id": "61b7b939dda6c5fe6ba361dd",
      "alm_examples": [
        {
          "api_version": "conjur.cyberark.com/v1",
          "kind": "ConjurFollower",
          "metadata": {
            "labels": {
              "app": "conjur-follower"
            },
            "name": "conjur-follower-operator-my-conjur-follower",
            "namespace": "conjur-follower-operator-system"
          },
          "spec": {
            "images": {
              "configurator": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
              "conjur": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
              "info": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
              "nginx": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
              "postgres": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
              "syslogNg": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c"
            },
            "master": {
              "account": "my-company",
              "authenticatorID": "conjur-openshift-follower",
              "authnLogin": "host/conjur-openshift-follower",
              "caCertificateFrom": {
                "configMapKeyRef": {
                  "key": "conjur.master-cert",
                  "name": "follower"
                }
              },
              "hostname": "conjur.my-company.net"
            },
            "replicas": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator-bundle@sha256:e3bc395543de733defc75270df2828fa8ba4cdf5c5cf79848a4640ee99a9fef7",
      "bundle_path_digest": "sha256:e3bc395543de733defc75270df2828fa8ba4cdf5c5cf79848a4640ee99a9fef7",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-12-13T21:20:57.202000+00:00",
      "csv_description": "Use this Operator for managing Conjur Followers in an OpenShift cluster.\n\nCyberArk products secure your most sensitive and high-value assets\u2014and supporting your Identity Security goals is our top priority. We offer 24/7 service for high priority issues to all customers with resources across ten countries and in all continents.\n\nCyberArk Conjur makes secrets management simple. Conjur provides a seamless open source interface to securely authenticate, control, and audit non-human access across tools, applications, containers, and cloud environments via robust secrets management.",
      "csv_display_name": "Conjur Enterprise Follower Operator",
      "csv_metadata_description": "",
      "csv_name": "conjur-follower-operator.v2.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:52:10.634000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "conjur-follower-operator",
      "provided_apis": [
        {
          "group": "conjur.cyberark.com",
          "kind": "ConjurFollower",
          "plural": "conjurfollowers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "name": "conjur-openshift-follower-operator"
        },
        {
          "digest": "sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "name": "conjur-openshift-follower-configurator"
        },
        {
          "digest": "sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "name": "conjur-openshift-follower-conjur"
        },
        {
          "digest": "sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "name": "conjur-openshift-follower-info"
        },
        {
          "digest": "sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "name": "conjur-openshift-follower-nginx"
        },
        {
          "digest": "sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "name": "conjur-openshift-follower-postgres"
        },
        {
          "digest": "sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "name": "conjur-openshift-follower-syslog-ng"
        },
        {
          "digest": "sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "name": "conjur-follower-operator"
        },
        {
          "digest": "sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "name": "conjur-openshift-follower-syslog-ng-7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c-annotation"
        },
        {
          "digest": "sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "name": "conjur-openshift-follower-postgres-96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5-annotation"
        },
        {
          "digest": "sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "name": "conjur-openshift-follower-nginx-d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981-annotation"
        },
        {
          "digest": "sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "name": "conjur-openshift-follower-info-27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05-annotation"
        },
        {
          "digest": "sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "name": "conjur-openshift-follower-conjur-ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c-annotation"
        },
        {
          "digest": "sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "name": "conjur-openshift-follower-configurator-b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.0.2",
      "version_original": "2.0.2"
    },
    {
      "_id": "61b7ba1b365e714ccb637aec",
      "alm_examples": [
        {
          "api_version": "conjur.cyberark.com/v1",
          "kind": "ConjurFollower",
          "metadata": {
            "labels": {
              "app": "conjur-follower"
            },
            "name": "conjur-follower-operator-my-conjur-follower",
            "namespace": "conjur-follower-operator-system"
          },
          "spec": {
            "images": {
              "configurator": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
              "conjur": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
              "info": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
              "nginx": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
              "postgres": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
              "syslogNg": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c"
            },
            "master": {
              "account": "my-company",
              "authenticatorID": "conjur-openshift-follower",
              "authnLogin": "host/conjur-openshift-follower",
              "caCertificateFrom": {
                "configMapKeyRef": {
                  "key": "conjur.master-cert",
                  "name": "follower"
                }
              },
              "hostname": "conjur.my-company.net"
            },
            "replicas": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator-bundle@sha256:e3bc395543de733defc75270df2828fa8ba4cdf5c5cf79848a4640ee99a9fef7",
      "bundle_path_digest": "sha256:e3bc395543de733defc75270df2828fa8ba4cdf5c5cf79848a4640ee99a9fef7",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-12-13T21:24:43.594000+00:00",
      "csv_description": "Use this Operator for managing Conjur Followers in an OpenShift cluster.\n\nCyberArk products secure your most sensitive and high-value assets\u2014and supporting your Identity Security goals is our top priority. We offer 24/7 service for high priority issues to all customers with resources across ten countries and in all continents.\n\nCyberArk Conjur makes secrets management simple. Conjur provides a seamless open source interface to securely authenticate, control, and audit non-human access across tools, applications, containers, and cloud environments via robust secrets management.",
      "csv_display_name": "Conjur Enterprise Follower Operator",
      "csv_metadata_description": "",
      "csv_name": "conjur-follower-operator.v2.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T12:03:10.196000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "conjur-follower-operator",
      "provided_apis": [
        {
          "group": "conjur.cyberark.com",
          "kind": "ConjurFollower",
          "plural": "conjurfollowers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "name": "conjur-openshift-follower-operator"
        },
        {
          "digest": "sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "name": "conjur-openshift-follower-configurator"
        },
        {
          "digest": "sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "name": "conjur-openshift-follower-conjur"
        },
        {
          "digest": "sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "name": "conjur-openshift-follower-info"
        },
        {
          "digest": "sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "name": "conjur-openshift-follower-nginx"
        },
        {
          "digest": "sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "name": "conjur-openshift-follower-postgres"
        },
        {
          "digest": "sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "name": "conjur-openshift-follower-syslog-ng"
        },
        {
          "digest": "sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "name": "conjur-follower-operator"
        },
        {
          "digest": "sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "name": "conjur-openshift-follower-syslog-ng-7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c-annotation"
        },
        {
          "digest": "sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "name": "conjur-openshift-follower-postgres-96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5-annotation"
        },
        {
          "digest": "sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "name": "conjur-openshift-follower-nginx-d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981-annotation"
        },
        {
          "digest": "sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "name": "conjur-openshift-follower-info-27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05-annotation"
        },
        {
          "digest": "sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "name": "conjur-openshift-follower-conjur-ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c-annotation"
        },
        {
          "digest": "sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "name": "conjur-openshift-follower-configurator-b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.0.2",
      "version_original": "2.0.2"
    },
    {
      "_id": "61b7ba1edda6c5fe6ba361df",
      "alm_examples": [
        {
          "api_version": "conjur.cyberark.com/v1",
          "kind": "ConjurFollower",
          "metadata": {
            "labels": {
              "app": "conjur-follower"
            },
            "name": "conjur-follower-operator-my-conjur-follower",
            "namespace": "conjur-follower-operator-system"
          },
          "spec": {
            "images": {
              "configurator": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
              "conjur": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
              "info": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
              "nginx": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
              "postgres": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
              "syslogNg": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c"
            },
            "master": {
              "account": "my-company",
              "authenticatorID": "conjur-openshift-follower",
              "authnLogin": "host/conjur-openshift-follower",
              "caCertificateFrom": {
                "configMapKeyRef": {
                  "key": "conjur.master-cert",
                  "name": "follower"
                }
              },
              "hostname": "conjur.my-company.net"
            },
            "replicas": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator-bundle@sha256:e3bc395543de733defc75270df2828fa8ba4cdf5c5cf79848a4640ee99a9fef7",
      "bundle_path_digest": "sha256:e3bc395543de733defc75270df2828fa8ba4cdf5c5cf79848a4640ee99a9fef7",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "preview",
      "creation_date": "2021-12-13T21:24:46.108000+00:00",
      "csv_description": "Use this Operator for managing Conjur Followers in an OpenShift cluster.\n\nCyberArk products secure your most sensitive and high-value assets\u2014and supporting your Identity Security goals is our top priority. We offer 24/7 service for high priority issues to all customers with resources across ten countries and in all continents.\n\nCyberArk Conjur makes secrets management simple. Conjur provides a seamless open source interface to securely authenticate, control, and audit non-human access across tools, applications, containers, and cloud environments via robust secrets management.",
      "csv_display_name": "Conjur Enterprise Follower Operator",
      "csv_metadata_description": "",
      "csv_name": "conjur-follower-operator.v2.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:13:44.501000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "conjur-follower-operator",
      "provided_apis": [
        {
          "group": "conjur.cyberark.com",
          "kind": "ConjurFollower",
          "plural": "conjurfollowers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "name": "conjur-openshift-follower-operator"
        },
        {
          "digest": "sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "name": "conjur-openshift-follower-configurator"
        },
        {
          "digest": "sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "name": "conjur-openshift-follower-conjur"
        },
        {
          "digest": "sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "name": "conjur-openshift-follower-info"
        },
        {
          "digest": "sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "name": "conjur-openshift-follower-nginx"
        },
        {
          "digest": "sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "name": "conjur-openshift-follower-postgres"
        },
        {
          "digest": "sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "name": "conjur-openshift-follower-syslog-ng"
        },
        {
          "digest": "sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "name": "conjur-follower-operator"
        },
        {
          "digest": "sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "name": "conjur-openshift-follower-syslog-ng-7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c-annotation"
        },
        {
          "digest": "sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "name": "conjur-openshift-follower-postgres-96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5-annotation"
        },
        {
          "digest": "sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "name": "conjur-openshift-follower-nginx-d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981-annotation"
        },
        {
          "digest": "sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "name": "conjur-openshift-follower-info-27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05-annotation"
        },
        {
          "digest": "sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "name": "conjur-openshift-follower-conjur-ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c-annotation"
        },
        {
          "digest": "sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "name": "conjur-openshift-follower-configurator-b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.0.2",
      "version_original": "2.0.2"
    },
    {
      "_id": "61b7bbe9dda6c5fe6ba361e1",
      "alm_examples": [
        {
          "api_version": "conjur.cyberark.com/v1",
          "kind": "ConjurFollower",
          "metadata": {
            "labels": {
              "app": "conjur-follower"
            },
            "name": "conjur-follower-operator-my-conjur-follower",
            "namespace": "conjur-follower-operator-system"
          },
          "spec": {
            "images": {
              "configurator": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
              "conjur": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
              "info": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
              "nginx": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
              "postgres": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
              "syslogNg": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c"
            },
            "master": {
              "account": "my-company",
              "authenticatorID": "conjur-openshift-follower",
              "authnLogin": "host/conjur-openshift-follower",
              "caCertificateFrom": {
                "configMapKeyRef": {
                  "key": "conjur.master-cert",
                  "name": "follower"
                }
              },
              "hostname": "conjur.my-company.net"
            },
            "replicas": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator-bundle@sha256:e3bc395543de733defc75270df2828fa8ba4cdf5c5cf79848a4640ee99a9fef7",
      "bundle_path_digest": "sha256:e3bc395543de733defc75270df2828fa8ba4cdf5c5cf79848a4640ee99a9fef7",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "preview",
      "creation_date": "2021-12-13T21:32:25.632000+00:00",
      "csv_description": "Use this Operator for managing Conjur Followers in an OpenShift cluster.\n\nCyberArk products secure your most sensitive and high-value assets\u2014and supporting your Identity Security goals is our top priority. We offer 24/7 service for high priority issues to all customers with resources across ten countries and in all continents.\n\nCyberArk Conjur makes secrets management simple. Conjur provides a seamless open source interface to securely authenticate, control, and audit non-human access across tools, applications, containers, and cloud environments via robust secrets management.",
      "csv_display_name": "Conjur Enterprise Follower Operator",
      "csv_metadata_description": "",
      "csv_name": "conjur-follower-operator.v2.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:53:57.634000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "conjur-follower-operator",
      "provided_apis": [
        {
          "group": "conjur.cyberark.com",
          "kind": "ConjurFollower",
          "plural": "conjurfollowers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "name": "conjur-openshift-follower-operator"
        },
        {
          "digest": "sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "name": "conjur-openshift-follower-configurator"
        },
        {
          "digest": "sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "name": "conjur-openshift-follower-conjur"
        },
        {
          "digest": "sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "name": "conjur-openshift-follower-info"
        },
        {
          "digest": "sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "name": "conjur-openshift-follower-nginx"
        },
        {
          "digest": "sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "name": "conjur-openshift-follower-postgres"
        },
        {
          "digest": "sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "name": "conjur-openshift-follower-syslog-ng"
        },
        {
          "digest": "sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "name": "conjur-follower-operator"
        },
        {
          "digest": "sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "name": "conjur-openshift-follower-syslog-ng-7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c-annotation"
        },
        {
          "digest": "sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "name": "conjur-openshift-follower-postgres-96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5-annotation"
        },
        {
          "digest": "sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "name": "conjur-openshift-follower-nginx-d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981-annotation"
        },
        {
          "digest": "sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "name": "conjur-openshift-follower-info-27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05-annotation"
        },
        {
          "digest": "sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "name": "conjur-openshift-follower-conjur-ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c-annotation"
        },
        {
          "digest": "sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "name": "conjur-openshift-follower-configurator-b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.0.2",
      "version_original": "2.0.2"
    },
    {
      "_id": "61b7bbec2e8aeda4b340e5cf",
      "alm_examples": [
        {
          "api_version": "conjur.cyberark.com/v1",
          "kind": "ConjurFollower",
          "metadata": {
            "labels": {
              "app": "conjur-follower"
            },
            "name": "conjur-follower-operator-my-conjur-follower",
            "namespace": "conjur-follower-operator-system"
          },
          "spec": {
            "images": {
              "configurator": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
              "conjur": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
              "info": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
              "nginx": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
              "postgres": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
              "syslogNg": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c"
            },
            "master": {
              "account": "my-company",
              "authenticatorID": "conjur-openshift-follower",
              "authnLogin": "host/conjur-openshift-follower",
              "caCertificateFrom": {
                "configMapKeyRef": {
                  "key": "conjur.master-cert",
                  "name": "follower"
                }
              },
              "hostname": "conjur.my-company.net"
            },
            "replicas": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator-bundle@sha256:e3bc395543de733defc75270df2828fa8ba4cdf5c5cf79848a4640ee99a9fef7",
      "bundle_path_digest": "sha256:e3bc395543de733defc75270df2828fa8ba4cdf5c5cf79848a4640ee99a9fef7",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-12-13T21:32:28.183000+00:00",
      "csv_description": "Use this Operator for managing Conjur Followers in an OpenShift cluster.\n\nCyberArk products secure your most sensitive and high-value assets\u2014and supporting your Identity Security goals is our top priority. We offer 24/7 service for high priority issues to all customers with resources across ten countries and in all continents.\n\nCyberArk Conjur makes secrets management simple. Conjur provides a seamless open source interface to securely authenticate, control, and audit non-human access across tools, applications, containers, and cloud environments via robust secrets management.",
      "csv_display_name": "Conjur Enterprise Follower Operator",
      "csv_metadata_description": "",
      "csv_name": "conjur-follower-operator.v2.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:57:48.715000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "conjur-follower-operator",
      "provided_apis": [
        {
          "group": "conjur.cyberark.com",
          "kind": "ConjurFollower",
          "plural": "conjurfollowers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "name": "conjur-openshift-follower-operator"
        },
        {
          "digest": "sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "name": "conjur-openshift-follower-configurator"
        },
        {
          "digest": "sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "name": "conjur-openshift-follower-conjur"
        },
        {
          "digest": "sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "name": "conjur-openshift-follower-info"
        },
        {
          "digest": "sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "name": "conjur-openshift-follower-nginx"
        },
        {
          "digest": "sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "name": "conjur-openshift-follower-postgres"
        },
        {
          "digest": "sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "name": "conjur-openshift-follower-syslog-ng"
        },
        {
          "digest": "sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "name": "conjur-follower-operator"
        },
        {
          "digest": "sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "name": "conjur-openshift-follower-syslog-ng-7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c-annotation"
        },
        {
          "digest": "sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "name": "conjur-openshift-follower-postgres-96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5-annotation"
        },
        {
          "digest": "sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "name": "conjur-openshift-follower-nginx-d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981-annotation"
        },
        {
          "digest": "sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "name": "conjur-openshift-follower-info-27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05-annotation"
        },
        {
          "digest": "sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "name": "conjur-openshift-follower-conjur-ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c-annotation"
        },
        {
          "digest": "sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "name": "conjur-openshift-follower-configurator-b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.0.2",
      "version_original": "2.0.2"
    },
    {
      "_id": "61b7bc4856779435db589dd4",
      "alm_examples": [
        {
          "api_version": "conjur.cyberark.com/v1",
          "kind": "ConjurFollower",
          "metadata": {
            "labels": {
              "app": "conjur-follower"
            },
            "name": "conjur-follower-operator-my-conjur-follower",
            "namespace": "conjur-follower-operator-system"
          },
          "spec": {
            "images": {
              "configurator": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
              "conjur": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
              "info": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
              "nginx": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
              "postgres": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
              "syslogNg": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c"
            },
            "master": {
              "account": "my-company",
              "authenticatorID": "conjur-openshift-follower",
              "authnLogin": "host/conjur-openshift-follower",
              "caCertificateFrom": {
                "configMapKeyRef": {
                  "key": "conjur.master-cert",
                  "name": "follower"
                }
              },
              "hostname": "conjur.my-company.net"
            },
            "replicas": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator-bundle@sha256:e3bc395543de733defc75270df2828fa8ba4cdf5c5cf79848a4640ee99a9fef7",
      "bundle_path_digest": "sha256:e3bc395543de733defc75270df2828fa8ba4cdf5c5cf79848a4640ee99a9fef7",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-12-13T21:34:00.170000+00:00",
      "csv_description": "Use this Operator for managing Conjur Followers in an OpenShift cluster.\n\nCyberArk products secure your most sensitive and high-value assets\u2014and supporting your Identity Security goals is our top priority. We offer 24/7 service for high priority issues to all customers with resources across ten countries and in all continents.\n\nCyberArk Conjur makes secrets management simple. Conjur provides a seamless open source interface to securely authenticate, control, and audit non-human access across tools, applications, containers, and cloud environments via robust secrets management.",
      "csv_display_name": "Conjur Enterprise Follower Operator",
      "csv_metadata_description": "",
      "csv_name": "conjur-follower-operator.v2.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:27:45.345000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "conjur-follower-operator",
      "provided_apis": [
        {
          "group": "conjur.cyberark.com",
          "kind": "ConjurFollower",
          "plural": "conjurfollowers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "name": "conjur-openshift-follower-operator"
        },
        {
          "digest": "sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "name": "conjur-openshift-follower-configurator"
        },
        {
          "digest": "sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "name": "conjur-openshift-follower-conjur"
        },
        {
          "digest": "sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "name": "conjur-openshift-follower-info"
        },
        {
          "digest": "sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "name": "conjur-openshift-follower-nginx"
        },
        {
          "digest": "sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "name": "conjur-openshift-follower-postgres"
        },
        {
          "digest": "sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "name": "conjur-openshift-follower-syslog-ng"
        },
        {
          "digest": "sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "name": "conjur-follower-operator"
        },
        {
          "digest": "sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "name": "conjur-openshift-follower-syslog-ng-7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c-annotation"
        },
        {
          "digest": "sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "name": "conjur-openshift-follower-postgres-96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5-annotation"
        },
        {
          "digest": "sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "name": "conjur-openshift-follower-nginx-d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981-annotation"
        },
        {
          "digest": "sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "name": "conjur-openshift-follower-info-27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05-annotation"
        },
        {
          "digest": "sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "name": "conjur-openshift-follower-conjur-ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c-annotation"
        },
        {
          "digest": "sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "name": "conjur-openshift-follower-configurator-b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.0.2",
      "version_original": "2.0.2"
    },
    {
      "_id": "61b7bc4adda6c5fe6ba361e2",
      "alm_examples": [
        {
          "api_version": "conjur.cyberark.com/v1",
          "kind": "ConjurFollower",
          "metadata": {
            "labels": {
              "app": "conjur-follower"
            },
            "name": "conjur-follower-operator-my-conjur-follower",
            "namespace": "conjur-follower-operator-system"
          },
          "spec": {
            "images": {
              "configurator": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
              "conjur": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
              "info": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
              "nginx": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
              "postgres": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
              "syslogNg": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c"
            },
            "master": {
              "account": "my-company",
              "authenticatorID": "conjur-openshift-follower",
              "authnLogin": "host/conjur-openshift-follower",
              "caCertificateFrom": {
                "configMapKeyRef": {
                  "key": "conjur.master-cert",
                  "name": "follower"
                }
              },
              "hostname": "conjur.my-company.net"
            },
            "replicas": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator-bundle@sha256:e3bc395543de733defc75270df2828fa8ba4cdf5c5cf79848a4640ee99a9fef7",
      "bundle_path_digest": "sha256:e3bc395543de733defc75270df2828fa8ba4cdf5c5cf79848a4640ee99a9fef7",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "preview",
      "creation_date": "2021-12-13T21:34:02.821000+00:00",
      "csv_description": "Use this Operator for managing Conjur Followers in an OpenShift cluster.\n\nCyberArk products secure your most sensitive and high-value assets\u2014and supporting your Identity Security goals is our top priority. We offer 24/7 service for high priority issues to all customers with resources across ten countries and in all continents.\n\nCyberArk Conjur makes secrets management simple. Conjur provides a seamless open source interface to securely authenticate, control, and audit non-human access across tools, applications, containers, and cloud environments via robust secrets management.",
      "csv_display_name": "Conjur Enterprise Follower Operator",
      "csv_metadata_description": "",
      "csv_name": "conjur-follower-operator.v2.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:11:21.016000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "conjur-follower-operator",
      "provided_apis": [
        {
          "group": "conjur.cyberark.com",
          "kind": "ConjurFollower",
          "plural": "conjurfollowers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "name": "conjur-openshift-follower-operator"
        },
        {
          "digest": "sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "name": "conjur-openshift-follower-configurator"
        },
        {
          "digest": "sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "name": "conjur-openshift-follower-conjur"
        },
        {
          "digest": "sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "name": "conjur-openshift-follower-info"
        },
        {
          "digest": "sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "name": "conjur-openshift-follower-nginx"
        },
        {
          "digest": "sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "name": "conjur-openshift-follower-postgres"
        },
        {
          "digest": "sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "name": "conjur-openshift-follower-syslog-ng"
        },
        {
          "digest": "sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:ba6d5751c8428a8749c7f0cda46aff3ac4f871c5127a1499b22dbd1988c7f63d",
          "name": "conjur-follower-operator"
        },
        {
          "digest": "sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c",
          "name": "conjur-openshift-follower-syslog-ng-7a51775bbea3185f5660c340e27813f97ac1a364d85dcc3fe62702926155840c-annotation"
        },
        {
          "digest": "sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5",
          "name": "conjur-openshift-follower-postgres-96a96a3ee41a08105c37a6ad44efe0a245dae51f2112529fb5c1fda31a0897f5-annotation"
        },
        {
          "digest": "sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981",
          "name": "conjur-openshift-follower-nginx-d2d23fffb9a867633622560fe99cfb0152607e7af46806bc1c0c636229914981-annotation"
        },
        {
          "digest": "sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05",
          "name": "conjur-openshift-follower-info-27b5d09d78b87a032104f6b4e79f9dae8069607202f0e7af327f6d2ef958aa05-annotation"
        },
        {
          "digest": "sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c",
          "name": "conjur-openshift-follower-conjur-ba4a079664b1ed1bae7f1cfb00145af150a23bd046c1606503382cb171131e6c-annotation"
        },
        {
          "digest": "sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21",
          "name": "conjur-openshift-follower-configurator-b4074231697be6e87b2cb0cb18dd89aa45fed314619ad102b261182eadb74c21-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.0.2",
      "version_original": "2.0.2"
    },
    {
      "_id": "61b908222d8e211ba9baba39",
      "alm_examples": [
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AirgappedDeployment",
          "metadata": {
            "name": "airgappeddeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AnalyticsProxy",
          "metadata": {
            "name": "analyticsproxy"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "DeleteCluster",
          "metadata": {
            "name": "deletecluster"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "FullDeployment",
          "metadata": {
            "name": "fulldeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "GenerateKey",
          "metadata": {
            "name": "bas-api-key"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "StoreForwardMetric",
          "metadata": {
            "name": "storeforwardmetric"
          },
          "spec": {
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "Dashboard",
          "metadata": {
            "name": "dashboard"
          },
          "spec": {
            "enable_test_api": true,
            "image_pull_secret": "bas-images-pull-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator-bundle@sha256:1113bb05d4dae37249cbdea23dc0b72eac99bd33e7a6ad1d723e74d423c14be9",
      "bundle_path_digest": "sha256:1113bb05d4dae37249cbdea23dc0b72eac99bd33e7a6ad1d723e74d423c14be9",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-12-14T21:09:54.487000+00:00",
      "csv_description": "Behavior Analytics Services Operator is a service that collects, transforms and transmits product usage data.\nThe Operator supports deployments using-\nA. Dashboard\nB. Openshift portal or CLI\n\n**A. Dashboard**\n----\nWhen the Operator is installed, the Dashboard is installed too. Goto the Dashboard Custom Resource to get the URL to the Dashboard.\n\n\n**B. Openshift portal or CLI**\n----\n----\nFor manual installation using Openshift portal or CLI, follow the steps below\n\n\n**Pre-requisites**\n----\nStep 1: Create a new Project\n```sh\noc new-project <project-name>\n```\n\nStep 2: Create a secret named \"database-credentials\" for PostgreSQL DB\n```sh\n oc create secret generic database-credentials --from-literal=db_username=<DB Username> --from-literal=db_password=<DB Password> -n <project-name>\n```\n\nStep 3: [Optional] If the images require a secret to pull the container images, create a secret of type dockerconfigjson. Pass this secret name in the CR spec image\\_pull\\_secret\n```sh\noc create secret generic bas-images-pull-secret --from-file=.dockerconfigjson=<path/to/.docker/config.json>  --type=kubernetes.io/dockerconfigjson\n```\n\nStep 4: Create a secret named \"mtls-proxy-secret\" which has the client key and certificate to connect to IBM Proxy service. If you don't have certificates then refer link https://developers.cloudflare.com/access/service-auth/mtls-testing#generating-the-root-ca to create root and client certificates. Please ensure to share root certificate with edge@us.ibm.com to allow access to IBM proxy service using client certificate.\n```sh\noc create secret tls mtls-proxy-secret --key client-key.pem --cert client.pem\n```\n\n**Installing the Behavior Analytics Services**\n----\n\nSelect any one of the deployments to setup the Behavior Analytics Services\n1. Full Deployment\n2. Analytics Proxy Deployment\n3. Store and Forward metrics Deployment\n4. Airgapped Analytics Proxy Deployment\n\n| Spec                                                      | Description                                                      | Default Value          |\n| --------------------------------------------------------- | ------------------------------------------------------------ | ---------------------- |\n| `ibmproxyurl`                                               | URL of IBM Proxy Service                                     | `https://iaps.ibm.com`   |\n| `postgres.storage_class`                                    | Storage class of type ReadWriteOnce                          | Required user input        |\n| `postgres.size`                                             | Size (in G) of the storage to be attached to Database        | `10G`                    |\n| `kafka.storage_class`                                       | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.storage_size`                                        | Size (in G) of the storage to be attached to Kafka  | `5G`                     |\n| `kafka.zookeeper_storage_class`                                 | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.zookeeper_storage_size`                                 | Size (in G) of the storage to be attached to Zookeeper | `5G`                     |\n| `airgapped.enabled`                                         | Set value to \"true\" if airgapped setup is to be enabled otherwise keep the default value \"false\" | `false`                  |\n| `airgapped.backup_retention_period`   | Number of days to keep the backup files in the storage       | `7`                     |\n| `airgapped.backup_deletion_frequency` | Frequency of job to delete files from the storage. It accepts values in Cron format (https://en.wikipedia.org/wiki/Cron) | `@daily`                 |\n| `event_scheduler_frequency`                               | Frequency at which events will be forwarded to proxy in Cron format. In case if internet connection available on the cluster only during a certain time frame, specify time in UTC equivalent Cron format. | `@hourly`                |\n| `prometheus_scheduler_frequency`                          | Frequency in Cronjob format to pull metrics from Prometheus  | `@daily`                |\n| `image_pull_secret`                                       | Secret to pull container images from registry                | `bas-images-pull-secret` |\n| `db_archive.frequency`                                    | Frequency in Cronjob format to run archive job                                                           | `@monthly`             |\n| `db_archive.retention_age`                                | Number of months to retain the data in Database              | `6`                    |\n| `db_archive.persistent_storage.storage_class`             |Storage class of type ReadWriteMany         | Required user input    |\n| `db_archive.persistent_storage.storage_size`              | Size (in G) of the storage to be attached for saving airgapped files | `10G`                  |\n| `prometheus_metrics`                                      | Array of metrics information to be send to destination at desired frequency | []\n| `env_type`              | Type of environment. Can be **prod** (HA) or **lite** (non HA)   | `lite`                  |\n| `allowed_domains`                                         | Comma separated values of domains allowed by BAS. By default all domains are allowed | '*'\n\n\n**Generating the API Key**\n----\nOnce the deployment is complete, to use the Behavior Analytics Services Endpoints, generate an API key using the CR GenerateKey. This API key to be used to authenticate Behavior Analytics Services Endpoints.\n\nNote- Key can be retrieved from the secret with same name used while creating Generate Key CR's instance.\nOnce you get key from the secret, decode it using below command:\n```sh\necho -n <secret key> | base64 -d\n```\n\n**Deleting the API Key**\n----\nTo revoke the Key, delete the corresponding GenerateKey instance.\n\n**Using Behavior Analytics Services Endpoints**\n---\nFor all BAS APIs, use the Generated API Key for Authentication. Pass it as the Header- X-API-KEY and the key while using the APIs.\n",
      "csv_display_name": "Behavior Analytics Services",
      "csv_metadata_description": "Behavior Analytics Services is a service that collects, transforms and transmits product usage data.",
      "csv_name": "behavior-analytics-services-operator-certified.v1.1.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:50:36.679000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "behavior-analytics-services-operator-certified",
      "provided_apis": [
        {
          "group": "bas.ibm.com",
          "kind": "StoreForwardMetric",
          "plural": "storeforwardmetrics",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AirgappedDeployment",
          "plural": "airgappeddeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AnalyticsProxy",
          "plural": "analyticsproxies",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "Dashboard",
          "plural": "dashboards",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "DeleteCluster",
          "plural": "deleteclusters",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "FullDeployment",
          "plural": "fulldeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "GenerateKey",
          "plural": "generatekeys",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:c30a58a4f7a6457bf7da404ccde64f58f26162eeee0be9cc01ad517542027e2a",
          "image": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator@sha256:c30a58a4f7a6457bf7da404ccde64f58f26162eeee0be9cc01ad517542027e2a",
          "name": "behavior-analytics-services-operator"
        },
        {
          "digest": "sha256:8e0f1d33edf005eb2dfafed9b8367435b0f33ef4adf006bc75338f2a88e8942c",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:8e0f1d33edf005eb2dfafed9b8367435b0f33ef4adf006bc75338f2a88e8942c",
          "name": "dashboardinstaller"
        },
        {
          "digest": "sha256:b35f209bb491f88da6a9e6ca2b55675a4d0eeb69c4a369a07704cd9a9443a058",
          "image": "registry.connect.redhat.com/ibm-edge/event-api@sha256:b35f209bb491f88da6a9e6ca2b55675a4d0eeb69c4a369a07704cd9a9443a058",
          "name": "event_api"
        },
        {
          "digest": "sha256:a606caf41cb689bb3496d1e76312ebbbe531ab5df52d4d0813bd7763cc170da1",
          "image": "registry.connect.redhat.com/ibm-edge/store-api@sha256:a606caf41cb689bb3496d1e76312ebbbe531ab5df52d4d0813bd7763cc170da1",
          "name": "store_api"
        },
        {
          "digest": "sha256:0b5a7b02e4cb4baf0e08171fdd1d7d35a16bb82254ff2e245e051e483f6cd08c",
          "image": "registry.connect.redhat.com/ibm-edge/event-reader@sha256:0b5a7b02e4cb4baf0e08171fdd1d7d35a16bb82254ff2e245e051e483f6cd08c",
          "name": "reader"
        },
        {
          "digest": "sha256:caf7464165c82783ec83f0cffd1163cbfdffc4bad1f81def00dd3a25ae8a806c",
          "image": "registry.connect.redhat.com/ibm-edge/event-scheduler@sha256:caf7464165c82783ec83f0cffd1163cbfdffc4bad1f81def00dd3a25ae8a806c",
          "name": "event_scheduler"
        },
        {
          "digest": "sha256:08ba04c0c3a0966568538ac709f7bb243f7768c1f200c1a7c99e2761144a9a6b",
          "image": "registry.connect.redhat.com/ibm-edge/prometheus-scheduler@sha256:08ba04c0c3a0966568538ac709f7bb243f7768c1f200c1a7c99e2761144a9a6b",
          "name": "prometheus_scheduler"
        },
        {
          "digest": "sha256:90ddecb54abe2880b86016a407507cecf77a113b4c7724235ab0abd21ad1d9aa",
          "image": "registry.connect.redhat.com/ibm-edge/pgo-client@sha256:90ddecb54abe2880b86016a407507cecf77a113b4c7724235ab0abd21ad1d9aa",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:815630d23e8d88664907fbf8096952adfd22593a4989063e9dd55549e674ee15",
          "image": "registry.connect.redhat.com/ibm-edge/reverse-proxy@sha256:815630d23e8d88664907fbf8096952adfd22593a4989063e9dd55549e674ee15",
          "name": "nginx"
        },
        {
          "digest": "sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "image": "registry.redhat.io/openshift4/ose-grafana@sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "name": "grafana"
        },
        {
          "digest": "sha256:c305e8a59ed5a6f100dd263c34743ad688c999c82cfdef76806d9e01b93834b6",
          "image": "registry.redhat.io/openshift3/ose-kube-rbac-proxy@sha256:c305e8a59ed5a6f100dd263c34743ad688c999c82cfdef76806d9e01b93834b6",
          "name": "ksm"
        },
        {
          "digest": "sha256:0c53b2cd52735491f15c39898c7d1347de6518a7cbff2c1bfc20623e29351361",
          "image": "registry.connect.redhat.com/ibm-edge/growth-stack-base@sha256:0c53b2cd52735491f15c39898c7d1347de6518a7cbff2c1bfc20623e29351361",
          "name": "init_container"
        },
        {
          "digest": "sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "image": "registry.access.redhat.com/ubi8/ubi@sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "name": "ubi"
        },
        {
          "digest": "sha256:19a8b33e2f4c2beee5266d5243abb7f43d85322fc62800899759cdf6ec568fee",
          "image": "registry.connect.redhat.com/ibm-edge/airgap-download-ui@sha256:19a8b33e2f4c2beee5266d5243abb7f43d85322fc62800899759cdf6ec568fee",
          "name": "download_ui"
        },
        {
          "digest": "sha256:d9034bf774c1cdf7933706eb76f274c57d1aeded7f59db747bfd9f0f2ac7581a",
          "image": "registry.connect.redhat.com/ibm-edge/bas-operator-dashboard@sha256:d9034bf774c1cdf7933706eb76f274c57d1aeded7f59db747bfd9f0f2ac7581a",
          "name": "dashboard_ui"
        },
        {
          "digest": "sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "image": "registry.connect.redhat.com/crunchydata/pgo-deployer@sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "name": "pgo_deployer"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.1.1",
      "version_original": "1.1.1"
    },
    {
      "_id": "61b914d02d8e211ba9babaa4",
      "alm_examples": [
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AirgappedDeployment",
          "metadata": {
            "name": "airgappeddeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AnalyticsProxy",
          "metadata": {
            "name": "analyticsproxy"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "DeleteCluster",
          "metadata": {
            "name": "deletecluster"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "FullDeployment",
          "metadata": {
            "name": "fulldeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "GenerateKey",
          "metadata": {
            "name": "bas-api-key"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "StoreForwardMetric",
          "metadata": {
            "name": "storeforwardmetric"
          },
          "spec": {
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "Dashboard",
          "metadata": {
            "name": "dashboard"
          },
          "spec": {
            "enable_test_api": true,
            "image_pull_secret": "bas-images-pull-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator-bundle@sha256:1113bb05d4dae37249cbdea23dc0b72eac99bd33e7a6ad1d723e74d423c14be9",
      "bundle_path_digest": "sha256:1113bb05d4dae37249cbdea23dc0b72eac99bd33e7a6ad1d723e74d423c14be9",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-12-14T22:04:00.510000+00:00",
      "csv_description": "Behavior Analytics Services Operator is a service that collects, transforms and transmits product usage data.\nThe Operator supports deployments using-\nA. Dashboard\nB. Openshift portal or CLI\n\n**A. Dashboard**\n----\nWhen the Operator is installed, the Dashboard is installed too. Goto the Dashboard Custom Resource to get the URL to the Dashboard.\n\n\n**B. Openshift portal or CLI**\n----\n----\nFor manual installation using Openshift portal or CLI, follow the steps below\n\n\n**Pre-requisites**\n----\nStep 1: Create a new Project\n```sh\noc new-project <project-name>\n```\n\nStep 2: Create a secret named \"database-credentials\" for PostgreSQL DB\n```sh\n oc create secret generic database-credentials --from-literal=db_username=<DB Username> --from-literal=db_password=<DB Password> -n <project-name>\n```\n\nStep 3: [Optional] If the images require a secret to pull the container images, create a secret of type dockerconfigjson. Pass this secret name in the CR spec image\\_pull\\_secret\n```sh\noc create secret generic bas-images-pull-secret --from-file=.dockerconfigjson=<path/to/.docker/config.json>  --type=kubernetes.io/dockerconfigjson\n```\n\nStep 4: Create a secret named \"mtls-proxy-secret\" which has the client key and certificate to connect to IBM Proxy service. If you don't have certificates then refer link https://developers.cloudflare.com/access/service-auth/mtls-testing#generating-the-root-ca to create root and client certificates. Please ensure to share root certificate with edge@us.ibm.com to allow access to IBM proxy service using client certificate.\n```sh\noc create secret tls mtls-proxy-secret --key client-key.pem --cert client.pem\n```\n\n**Installing the Behavior Analytics Services**\n----\n\nSelect any one of the deployments to setup the Behavior Analytics Services\n1. Full Deployment\n2. Analytics Proxy Deployment\n3. Store and Forward metrics Deployment\n4. Airgapped Analytics Proxy Deployment\n\n| Spec                                                      | Description                                                      | Default Value          |\n| --------------------------------------------------------- | ------------------------------------------------------------ | ---------------------- |\n| `ibmproxyurl`                                               | URL of IBM Proxy Service                                     | `https://iaps.ibm.com`   |\n| `postgres.storage_class`                                    | Storage class of type ReadWriteOnce                          | Required user input        |\n| `postgres.size`                                             | Size (in G) of the storage to be attached to Database        | `10G`                    |\n| `kafka.storage_class`                                       | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.storage_size`                                        | Size (in G) of the storage to be attached to Kafka  | `5G`                     |\n| `kafka.zookeeper_storage_class`                                 | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.zookeeper_storage_size`                                 | Size (in G) of the storage to be attached to Zookeeper | `5G`                     |\n| `airgapped.enabled`                                         | Set value to \"true\" if airgapped setup is to be enabled otherwise keep the default value \"false\" | `false`                  |\n| `airgapped.backup_retention_period`   | Number of days to keep the backup files in the storage       | `7`                     |\n| `airgapped.backup_deletion_frequency` | Frequency of job to delete files from the storage. It accepts values in Cron format (https://en.wikipedia.org/wiki/Cron) | `@daily`                 |\n| `event_scheduler_frequency`                               | Frequency at which events will be forwarded to proxy in Cron format. In case if internet connection available on the cluster only during a certain time frame, specify time in UTC equivalent Cron format. | `@hourly`                |\n| `prometheus_scheduler_frequency`                          | Frequency in Cronjob format to pull metrics from Prometheus  | `@daily`                |\n| `image_pull_secret`                                       | Secret to pull container images from registry                | `bas-images-pull-secret` |\n| `db_archive.frequency`                                    | Frequency in Cronjob format to run archive job                                                           | `@monthly`             |\n| `db_archive.retention_age`                                | Number of months to retain the data in Database              | `6`                    |\n| `db_archive.persistent_storage.storage_class`             |Storage class of type ReadWriteMany         | Required user input    |\n| `db_archive.persistent_storage.storage_size`              | Size (in G) of the storage to be attached for saving airgapped files | `10G`                  |\n| `prometheus_metrics`                                      | Array of metrics information to be send to destination at desired frequency | []\n| `env_type`              | Type of environment. Can be **prod** (HA) or **lite** (non HA)   | `lite`                  |\n| `allowed_domains`                                         | Comma separated values of domains allowed by BAS. By default all domains are allowed | '*'\n\n\n**Generating the API Key**\n----\nOnce the deployment is complete, to use the Behavior Analytics Services Endpoints, generate an API key using the CR GenerateKey. This API key to be used to authenticate Behavior Analytics Services Endpoints.\n\nNote- Key can be retrieved from the secret with same name used while creating Generate Key CR's instance.\nOnce you get key from the secret, decode it using below command:\n```sh\necho -n <secret key> | base64 -d\n```\n\n**Deleting the API Key**\n----\nTo revoke the Key, delete the corresponding GenerateKey instance.\n\n**Using Behavior Analytics Services Endpoints**\n---\nFor all BAS APIs, use the Generated API Key for Authentication. Pass it as the Header- X-API-KEY and the key while using the APIs.\n",
      "csv_display_name": "Behavior Analytics Services",
      "csv_metadata_description": "Behavior Analytics Services is a service that collects, transforms and transmits product usage data.",
      "csv_name": "behavior-analytics-services-operator-certified.v1.1.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:59:52.248000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "behavior-analytics-services-operator-certified",
      "provided_apis": [
        {
          "group": "bas.ibm.com",
          "kind": "AnalyticsProxy",
          "plural": "analyticsproxies",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "Dashboard",
          "plural": "dashboards",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "DeleteCluster",
          "plural": "deleteclusters",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "FullDeployment",
          "plural": "fulldeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "GenerateKey",
          "plural": "generatekeys",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "StoreForwardMetric",
          "plural": "storeforwardmetrics",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AirgappedDeployment",
          "plural": "airgappeddeployments",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:c30a58a4f7a6457bf7da404ccde64f58f26162eeee0be9cc01ad517542027e2a",
          "image": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator@sha256:c30a58a4f7a6457bf7da404ccde64f58f26162eeee0be9cc01ad517542027e2a",
          "name": "behavior-analytics-services-operator"
        },
        {
          "digest": "sha256:8e0f1d33edf005eb2dfafed9b8367435b0f33ef4adf006bc75338f2a88e8942c",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:8e0f1d33edf005eb2dfafed9b8367435b0f33ef4adf006bc75338f2a88e8942c",
          "name": "dashboardinstaller"
        },
        {
          "digest": "sha256:b35f209bb491f88da6a9e6ca2b55675a4d0eeb69c4a369a07704cd9a9443a058",
          "image": "registry.connect.redhat.com/ibm-edge/event-api@sha256:b35f209bb491f88da6a9e6ca2b55675a4d0eeb69c4a369a07704cd9a9443a058",
          "name": "event_api"
        },
        {
          "digest": "sha256:a606caf41cb689bb3496d1e76312ebbbe531ab5df52d4d0813bd7763cc170da1",
          "image": "registry.connect.redhat.com/ibm-edge/store-api@sha256:a606caf41cb689bb3496d1e76312ebbbe531ab5df52d4d0813bd7763cc170da1",
          "name": "store_api"
        },
        {
          "digest": "sha256:0b5a7b02e4cb4baf0e08171fdd1d7d35a16bb82254ff2e245e051e483f6cd08c",
          "image": "registry.connect.redhat.com/ibm-edge/event-reader@sha256:0b5a7b02e4cb4baf0e08171fdd1d7d35a16bb82254ff2e245e051e483f6cd08c",
          "name": "reader"
        },
        {
          "digest": "sha256:caf7464165c82783ec83f0cffd1163cbfdffc4bad1f81def00dd3a25ae8a806c",
          "image": "registry.connect.redhat.com/ibm-edge/event-scheduler@sha256:caf7464165c82783ec83f0cffd1163cbfdffc4bad1f81def00dd3a25ae8a806c",
          "name": "event_scheduler"
        },
        {
          "digest": "sha256:08ba04c0c3a0966568538ac709f7bb243f7768c1f200c1a7c99e2761144a9a6b",
          "image": "registry.connect.redhat.com/ibm-edge/prometheus-scheduler@sha256:08ba04c0c3a0966568538ac709f7bb243f7768c1f200c1a7c99e2761144a9a6b",
          "name": "prometheus_scheduler"
        },
        {
          "digest": "sha256:90ddecb54abe2880b86016a407507cecf77a113b4c7724235ab0abd21ad1d9aa",
          "image": "registry.connect.redhat.com/ibm-edge/pgo-client@sha256:90ddecb54abe2880b86016a407507cecf77a113b4c7724235ab0abd21ad1d9aa",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:815630d23e8d88664907fbf8096952adfd22593a4989063e9dd55549e674ee15",
          "image": "registry.connect.redhat.com/ibm-edge/reverse-proxy@sha256:815630d23e8d88664907fbf8096952adfd22593a4989063e9dd55549e674ee15",
          "name": "nginx"
        },
        {
          "digest": "sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "image": "registry.redhat.io/openshift4/ose-grafana@sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "name": "grafana"
        },
        {
          "digest": "sha256:c305e8a59ed5a6f100dd263c34743ad688c999c82cfdef76806d9e01b93834b6",
          "image": "registry.redhat.io/openshift3/ose-kube-rbac-proxy@sha256:c305e8a59ed5a6f100dd263c34743ad688c999c82cfdef76806d9e01b93834b6",
          "name": "ksm"
        },
        {
          "digest": "sha256:0c53b2cd52735491f15c39898c7d1347de6518a7cbff2c1bfc20623e29351361",
          "image": "registry.connect.redhat.com/ibm-edge/growth-stack-base@sha256:0c53b2cd52735491f15c39898c7d1347de6518a7cbff2c1bfc20623e29351361",
          "name": "init_container"
        },
        {
          "digest": "sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "image": "registry.access.redhat.com/ubi8/ubi@sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "name": "ubi"
        },
        {
          "digest": "sha256:19a8b33e2f4c2beee5266d5243abb7f43d85322fc62800899759cdf6ec568fee",
          "image": "registry.connect.redhat.com/ibm-edge/airgap-download-ui@sha256:19a8b33e2f4c2beee5266d5243abb7f43d85322fc62800899759cdf6ec568fee",
          "name": "download_ui"
        },
        {
          "digest": "sha256:d9034bf774c1cdf7933706eb76f274c57d1aeded7f59db747bfd9f0f2ac7581a",
          "image": "registry.connect.redhat.com/ibm-edge/bas-operator-dashboard@sha256:d9034bf774c1cdf7933706eb76f274c57d1aeded7f59db747bfd9f0f2ac7581a",
          "name": "dashboard_ui"
        },
        {
          "digest": "sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "image": "registry.connect.redhat.com/crunchydata/pgo-deployer@sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "name": "pgo_deployer"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.1.1",
      "version_original": "1.1.1"
    },
    {
      "_id": "61d324ce8093b97ef52e1b3c",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:bb9a141e7420196baf0bfc456ae28d7d150f6b40de987b214d0833207fcc1a3e",
      "bundle_path_digest": "sha256:bb9a141e7420196baf0bfc456ae28d7d150f6b40de987b214d0833207fcc1a3e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-01-03T16:31:10.004000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.2 of the NeuVector Certified Operator deploys version 4.4.2 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:07:52.655000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0",
          "name": "neuvector-operator-a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0-annotation"
        },
        {
          "digest": "sha256:a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:ecc4814bf9e38d41898ae2354bbafd2f1ed7c6e5602bb30cb40486e67725395c",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:ecc4814bf9e38d41898ae2354bbafd2f1ed7c6e5602bb30cb40486e67725395c",
          "name": "controller"
        },
        {
          "digest": "sha256:4621d69ca47929eedcab2c9163fc9d73ede09e0cd14f2a14db495e610590f5c2",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:4621d69ca47929eedcab2c9163fc9d73ede09e0cd14f2a14db495e610590f5c2",
          "name": "enforcer"
        },
        {
          "digest": "sha256:b49ba8bba9aaf292603896d5d3b9e5328b23260dfd977c70e7f3e39460564679",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:b49ba8bba9aaf292603896d5d3b9e5328b23260dfd977c70e7f3e39460564679",
          "name": "manager"
        },
        {
          "digest": "sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "name": "scanner"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "updater"
        },
        {
          "digest": "sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "name": "scanner-d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038-annotation"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "ubi8-228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.3.2",
      "version_original": "1.3.2"
    },
    {
      "_id": "61d326278093b97ef52e1b3e",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "OpenshiftArtifactoryHa",
          "metadata": {
            "name": "openshiftartifactoryha"
          },
          "spec": {
            "artifactory-ha": {
              "artifactory": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/artifactory-pro",
                  "tag": "7.27.9-1"
                },
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE",
                "node": {
                  "replicaCount": 2,
                  "waitForPrimaryStartup": {
                    "enabled": false
                  }
                },
                "uid": "1000721030"
              },
              "database": {
                "driver": "OVERRIDE",
                "password": "OVERRIDE",
                "type": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "databaseUpgradeReady": true,
              "initContainerImage": "registry.connect.redhat.com/jfrog/init@sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
              "nginx": {
                "gid": "1000720107",
                "http": {
                  "externalPort": 80,
                  "internalPort": 8080
                },
                "https": {
                  "externalPort": 443,
                  "internalPort": 8443
                },
                "image": {
                  "registry": "registry.redhat.io",
                  "repository": "rhel8/nginx-116",
                  "tag": "latest"
                },
                "service": {
                  "ssloffload": false
                },
                "tlsSecretName": "OVERRIDE",
                "uid": "1000720104"
              },
              "postgresql": {
                "enabled": false
              },
              "waitForDatabase": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/artifactory-operator-bundle@sha256:7f0eac75c3ad62bff844979c3f7cf1bf8553caa2c28e38c59299979a452bfb28",
      "bundle_path_digest": "sha256:7f0eac75c3ad62bff844979c3f7cf1bf8553caa2c28e38c59299979a452bfb28",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-03T16:36:55.343000+00:00",
      "csv_description": " ## Breaking change\nPlease update to version 1.1.10 of the operator.\nVersion 1.1.8 and 1.1.9 have issues. Please skip these versions.\n\n## Overview\nOpenshift Operator to deploy JFrog Artifactory Enterprise into your Openshift cluster.\n## Security Context Constraints\nTo deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc.\n```\noc adm policy add-scc-to-user anyuid -z artifactory-ha-operator -n openshift-operators\n```\nAdd the service account for the Artifactory chart to deploy successfully:\n``` oc adm policy add-scc-to-user anyuid -z openshiftartifactoryha-artifactory-ha -n artifactory ```\n### Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Artifactory Enterprise Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Artifactory Enterprise Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Artifactory HA.\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\nDATABASE_TYPE\nDATABASE_DRIVER\nDATABASE_URL\nDATABASE_USER\nDATABASE_PASSWORD\n```\nMaster key and Join key must be supplied. To generate a new key for each run the command below:\n\n```\n# Create a key\nexport JOIN_KEY=$(openssl rand -hex 32)\necho ${JOIN_KEY}\n```\n\nTo use TLS you will need to first create a k8s tls secret to store your .crt and .key file into.\nThen supply the value of this k8s secret into the TLS_SECRET field.\n``` oc create secret tls my_tls_secret --cert=tls.crt --key=tls.key --namespace=my_namespace ```\nClick Create for Artifactory Enterprise to deploy into OpenShift and connect to it on the external IP exposed by the load balancer.\n### Create a route\nTo expose Artifactory from Openshift we recommend you create a new route in Openshift.\nYou can either use the oc command line tool or the Openshift web console to generate a new route.\nDepending upon where you terminate TLS you will need to either specify pass through or edge.\nCommand Line (Edge):\n``` oc create route edge --service=openshiftartifactory-ha --cert=tls.crt --key=tls.key --ca-cert=ca.crt --hostname=www.example.com ```\nOr for more information visit the official Openshift documentation on routes here:\nhttps://docs.openshift.com/container-platform/4.6/networking/routes/route-configuration.html\n\n",
      "csv_display_name": "JFrog Artifactory Enterprise Operator",
      "csv_metadata_description": "JFrog Artifactory Enterprise deploys Artifactory in a high availability environment across multiple pods",
      "csv_name": "artifactory-ha-operator.v1.1.21",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:51:26.722000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "plural": "openshiftartifactoryhas",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:7f06776ddcaffa1f4c3ca74b0d71f7fd11a6af5b0f2f42ade89a7f4ef4011296",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:7f06776ddcaffa1f4c3ca74b0d71f7fd11a6af5b0f2f42ade89a7f4ef4011296",
          "name": "artifactory-pro"
        },
        {
          "digest": "sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "name": "artifactory-operator"
        },
        {
          "digest": "sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "name": "nginx"
        },
        {
          "digest": "sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "name": "artifactory-operator-65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f-annotation"
        },
        {
          "digest": "sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "name": "artifactory-ha-operator"
        },
        {
          "digest": "sha256:7f06776ddcaffa1f4c3ca74b0d71f7fd11a6af5b0f2f42ade89a7f4ef4011296",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:7f06776ddcaffa1f4c3ca74b0d71f7fd11a6af5b0f2f42ade89a7f4ef4011296",
          "name": "artifactory_image_repository"
        },
        {
          "digest": "sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "name": "nginx_image_repository"
        },
        {
          "digest": "sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
          "name": "init-9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.1.21",
      "version_original": "1.1.21"
    },
    {
      "_id": "61d3266417f914cd723308f9",
      "alm_examples": [
        {
          "api_version": "apps.cloudcasa.io/v1",
          "kind": "Cloudcasa",
          "metadata": {
            "name": "cloudcasa"
          },
          "spec": {
            "cluster_id": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/catalogicsoftware/cloudcasa-bundle@sha256:c66f5091446dc889a29da265c8c17c21181fe0fb5409eccd71fc4349c3bf0131",
      "bundle_path_digest": "sha256:c66f5091446dc889a29da265c8c17c21181fe0fb5409eccd71fc4349c3bf0131",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-03T16:37:56.130000+00:00",
      "csv_description": "CloudCasa is a powerful and easy-to-use data protection service for Kubernetes and cloud databases.  Configuration is quick and easy, and basic service is free. \n\n\n### How to Install \n* Create Namespace cloudcasa-operator. \n* Install the CloudCasa Operator by following the instructions presented when you click the Install button. Select **cloudcasa-operator** namespace. \n* After installing the operator, you will need to create an instance of the CloudCasa resource to configure the agent. \n* In order to create the CloudCasa resource you will need to generate a Cluster ID in CloudCasa.\n* Login to https://home.cloudcasa.io and add your OCP cluster under the Protection tab. Note the returned **Cluster ID**.\n* See the CloudCasa [Getting Started Guide](https://cloudcasa.io/get-started) for more information.\n* Navigate to the installed CloudCasa Operator and Click on the CloudCasa tab.\n* Create the CloudCasa resource and provide the **Cluster ID** noted in the previous step.\n\n\n### Supported Features\n\n* **AWS RDS Backup**\n\n* **Kubernetes cluster Backup** \n\n* **Kubernetes cluster restore**\n\n### Installation Checkpoints\n\n* **cloudcasa-io** namespace should be created.\n\n* **kubagent** pod should be created under **cloudcasa-io** namespace and should be in **running state.** \n\n* State of the OCP cluster on CloudCasa web UI should be **Active**.",
      "csv_display_name": "CloudCasa",
      "csv_metadata_description": "CloudCasa is a powerful and easy-to-use data protection service for Kubernetes and cloud databases.",
      "csv_name": "cloudcasa-operator.v2.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:51:59.909000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "cloudcasa-operator",
      "provided_apis": [
        {
          "group": "apps.cloudcasa.io",
          "kind": "Cloudcasa",
          "plural": "cloudcasas",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf",
          "image": "registry.connect.redhat.com/catalogicsoftware/cloudcasa-operator@sha256:31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf",
          "name": "cloudcasa-operator"
        },
        {
          "digest": "sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf",
          "image": "registry.connect.redhat.com/catalogicsoftware/cloudcasa-operator@sha256:31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf",
          "name": "cloudcasa-operator-31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf-annotation"
        },
        {
          "digest": "sha256:31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf",
          "image": "registry.connect.redhat.com/catalogicsoftware/cloudcasa-operator@sha256:31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.2.0",
      "version_original": "2.2.0"
    },
    {
      "_id": "61d326fc17f914cd723308fa",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:bb9a141e7420196baf0bfc456ae28d7d150f6b40de987b214d0833207fcc1a3e",
      "bundle_path_digest": "sha256:bb9a141e7420196baf0bfc456ae28d7d150f6b40de987b214d0833207fcc1a3e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-01-03T16:40:28.234000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.2 of the NeuVector Certified Operator deploys version 4.4.2 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:51:13.376000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0",
          "name": "neuvector-operator-a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0-annotation"
        },
        {
          "digest": "sha256:a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:ecc4814bf9e38d41898ae2354bbafd2f1ed7c6e5602bb30cb40486e67725395c",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:ecc4814bf9e38d41898ae2354bbafd2f1ed7c6e5602bb30cb40486e67725395c",
          "name": "controller"
        },
        {
          "digest": "sha256:4621d69ca47929eedcab2c9163fc9d73ede09e0cd14f2a14db495e610590f5c2",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:4621d69ca47929eedcab2c9163fc9d73ede09e0cd14f2a14db495e610590f5c2",
          "name": "enforcer"
        },
        {
          "digest": "sha256:b49ba8bba9aaf292603896d5d3b9e5328b23260dfd977c70e7f3e39460564679",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:b49ba8bba9aaf292603896d5d3b9e5328b23260dfd977c70e7f3e39460564679",
          "name": "manager"
        },
        {
          "digest": "sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "name": "scanner"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "updater"
        },
        {
          "digest": "sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "name": "scanner-d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038-annotation"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "ubi8-228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.3.2",
      "version_original": "1.3.2"
    },
    {
      "_id": "61d3270a8093b97ef52e1b40",
      "alm_examples": [
        {
          "api_version": "apps.openliberty.io/v1beta2",
          "kind": "OpenLibertyApplication",
          "metadata": {
            "name": "openliberty-app-sample"
          },
          "spec": {
            "applicationImage": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
            "expose": true,
            "replicas": 1
          }
        },
        {
          "api_version": "apps.openliberty.io/v1beta2",
          "kind": "OpenLibertyDump",
          "metadata": {
            "name": "openliberty-dump-sample"
          },
          "spec": {
            "include": [
              "thread",
              "heap"
            ],
            "podName": "Specify_Pod_Name_Here"
          }
        },
        {
          "api_version": "apps.openliberty.io/v1beta2",
          "kind": "OpenLibertyTrace",
          "metadata": {
            "name": "openliberty-trace-sample"
          },
          "spec": {
            "maxFileSize": 20,
            "maxFiles": 5,
            "podName": "Specify_Pod_Name_Here",
            "traceSpecification": "*=info:com.ibm.ws.webcontainer*=all"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/open-liberty-operator-bundle@sha256:88ff3cd847c4b606466b1e782cec0dfbdb62fb3dd0e4e1bc8b9c2d1016c74132",
      "bundle_path_digest": "sha256:88ff3cd847c4b606466b1e782cec0dfbdb62fb3dd0e4e1bc8b9c2d1016c74132",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "beta2",
      "creation_date": "2022-01-03T16:40:42.169000+00:00",
      "csv_description": "This advanced Operator can be used to deploy and manage Open Liberty applications with consistent, production-grade QoS. This operator is based on the [Runtime Component Operator](https://github.com/application-stacks/runtime-component-operator) and provides all of its capabilities in addition to Open Liberty specific features such as gathering traces and dumps (Day-2 operations) and easily configuring and managing the single sign-on information for your Open Liberty applications.\n\nOpen Liberty Operator enables enterprise architects to govern the way their applications get deployed & managed in the cluster, while dramatically reducing the learning curve for developers to deploy into Kubernetes - allowing them to focus on writing the code! Here are some key features:\n\n#### Application Lifecyle\nYou can deploy your Open Liberty application container by either pointing to a container image, or an OpenShift ImageStream. When using an ImageStream the Operator will watch for any updates and will re-deploy the modified image.\n\n#### Custom RBAC\nThis Operator is capable of using a custom ServiceAccount from the caller, allowing it to follow RBAC restrictions. By default it creates a ServiceAccount if one is not specified, which can also be bound with specific roles.\n\n#### Environment Configuration\nYou can configure a variety of artifacts with your deployment, such as: labels, annotations, and environment variables from a ConfigMap, a Secret or a value.\n\n#### Routing\nExpose your application to external users via a single toggle to create a Route on OpenShift or an Ingress on other Kubernetes environments. Advanced configuration, such as TLS settings, are also easily enabled. Expiring Route certificates are re-issued.\n\n#### High Availability via Horizontal Pod Autoscaling\nRun multiple instances of your application for high availability. Either specify a static number of replicas or easily configure horizontal auto scaling to create (and delete) instances based on resource consumption.\n\n#### Persistence and advanced storage\nEnable persistence for your application by specifying simple requirements: just tell us the size of the storage and where you would like it to be mounted and We will create and manage that storage for you.\nThis toggles a StatefulSet resource instead of a Deployment resource, so your container can recover transactions and state upon a pod restart.\nWe offer an advanced mode where the user specifies a built-in PersistentVolumeClaim, allowing them to configure many details of the persistent volume, such as its storage class and access mode.\nYou can also easily configure and use a single storage for serviceability related Day-2 operations, such as gatherig server traces and dumps.\n\n#### Service Binding\nYour runtime components can expose services by a simple toggle. We take care of the heavy lifting such as creating kubernetes Secrets with information other services can use to bind. We also keep the bindable information synchronized, so your applications can dynamically reconnect to its required services without any intervention or interruption.\n\n#### Single Sign-On (SSO)\nOpen Liberty provides capabilities to delegate authentication to external providers. Your application users can log in using their existing social media credentials from providers such as Google, Facebook, LinkedIn, Twitter, GitHub, and any OpenID Connect (OIDC) or OAuth 2.0 clients. Open Liberty Operator allows to easily configure and manage the single sign-on information for your applications.\n\n#### Exposing metrics to Prometheus\nThe Open Liberty Operator exposes the runtime container's metrics via the [Prometheus Operator](https://operatorhub.io/operator/prometheus).\nUsers can pick between a basic mode, where they simply specify the label that Prometheus is watching to scrape the metrics from the container, or they can specify the full `ServiceMonitor` spec embedded into the OpenLibertyApplication's `spec.monitoring` key controlling things like the poll internal and security credentials.\n\n#### Easily mount logs and transaction directories\nIf you need to mount the logs and transaction data from your application to an external volume such as NFS (or any storage supported in your cluster), simply add the following (customizing the folder location and size) to your OpenLibertyApplication CR:\n``` storage: size: 2Gi mountPath: \"/logs\" ```\n\n#### Integration with OpenShift Serverless\nDeploy your serverless runtime component using a single toggle.  The Operator will convert all of its generated resources into [Knative](https://knative.dev) resources, allowing your pod to automatically scale to 0 when it is idle.\n\n#### Integration with OpenShift's Topology UI\nWe set the corresponding labels to support OpenShift's Developer Topology UI, which allows you to visualize your entire set of deployments and how they are connected.\n\nSee our [**documentation**](https://github.com/OpenLiberty/open-liberty-operator/tree/main/doc/) for more information.\n",
      "csv_display_name": "Open Liberty",
      "csv_metadata_description": "Deploy and manage applications running on Liberty",
      "csv_name": "open-liberty-operator.v0.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:52:12.752000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "open-liberty-certified",
      "provided_apis": [
        {
          "group": "apps.openliberty.io",
          "kind": "OpenLibertyDump",
          "plural": "openlibertydumps",
          "version": "v1beta2"
        },
        {
          "group": "apps.openliberty.io",
          "kind": "OpenLibertyTrace",
          "plural": "openlibertytraces",
          "version": "v1beta2"
        },
        {
          "group": "apps.openliberty.io",
          "kind": "OpenLibertyApplication",
          "plural": "openlibertyapplications",
          "version": "v1beta2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:43b3f004a19c91c80ba815aedc1b361b87cd12daa28bb215e6775e64ef890af1",
          "image": "registry.connect.redhat.com/ibm/open-liberty-operator-controller@sha256:43b3f004a19c91c80ba815aedc1b361b87cd12daa28bb215e6775e64ef890af1",
          "name": "open-liberty-operator-controller-43b3f004a19c91c80ba815aedc1b361b87cd12daa28bb215e6775e64ef890af1-annotation"
        },
        {
          "digest": "sha256:43b3f004a19c91c80ba815aedc1b361b87cd12daa28bb215e6775e64ef890af1",
          "image": "registry.connect.redhat.com/ibm/open-liberty-operator-controller@sha256:43b3f004a19c91c80ba815aedc1b361b87cd12daa28bb215e6775e64ef890af1",
          "name": "manager"
        },
        {
          "digest": "sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "image": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "name": "open-liberty-samples-8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<0.8.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.8.0",
      "version_original": "0.8.0"
    },
    {
      "_id": "61d32748c6d6ba37322fd9e7",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:96a04fb99af74bc88406278004fbbdad4ae9b11189fd35347ebc86f065f8ae4b",
      "bundle_path_digest": "sha256:96a04fb99af74bc88406278004fbbdad4ae9b11189fd35347ebc86f065f8ae4b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-03T16:41:44.377000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T10:52:22.662000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "name": "COUCHDB-MGMT"
        },
        {
          "digest": "sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "name": "couchdb-operator-4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4-annotation"
        },
        {
          "digest": "sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "name": "couchdb-operator"
        },
        {
          "digest": "sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "name": "couchdb3"
        },
        {
          "digest": "sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "name": "mgmt"
        }
      ],
      "replaces": "",
      "skip_range": ">=1.0.0 <2.2.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.2.0",
      "version_original": "2.2.0"
    },
    {
      "_id": "61d3274b17f914cd723308fb",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:96a04fb99af74bc88406278004fbbdad4ae9b11189fd35347ebc86f065f8ae4b",
      "bundle_path_digest": "sha256:96a04fb99af74bc88406278004fbbdad4ae9b11189fd35347ebc86f065f8ae4b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v2.2",
      "creation_date": "2022-01-03T16:41:47.540000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:52:24.530000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "name": "COUCHDB-MGMT"
        },
        {
          "digest": "sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "name": "couchdb-operator-4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4-annotation"
        },
        {
          "digest": "sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "name": "couchdb-operator"
        },
        {
          "digest": "sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "name": "couchdb3"
        },
        {
          "digest": "sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "name": "mgmt"
        }
      ],
      "replaces": "",
      "skip_range": ">=1.0.0 <2.2.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.2.0",
      "version_original": "2.2.0"
    },
    {
      "_id": "61d328b1c6d6ba37322fd9e8",
      "alm_examples": [
        {
          "api_version": "symphony.spectrumcomputing.ibm.com/v1",
          "kind": "SymphonyCluster",
          "metadata": {
            "name": "symcluster"
          },
          "spec": {
            "client": [
              {
                "build": {
                  "git": {
                    "branch": "master",
                    "path": "samples/sampleapp_cpp",
                    "repository": "https://github.com/IBM/ibm-spectrum-symphony-operator.git"
                  },
                  "image": "registry.connect.redhat.com/ibm/spectrum-symphony@sha256:d6860f11eea6024e51134e58bc1968c41d797bd9555c4e0283224c52ccf17774",
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "2Gi"
                    },
                    "requests": {
                      "cpu": "500m",
                      "memory": "2Gi"
                    }
                  },
                  "serviceAccountName": "builder"
                },
                "image": "",
                "imagePullPolicy": "Always",
                "name": "SampleAppCPP1",
                "resources": {
                  "limits": {
                    "cpu": "250m",
                    "memory": "1Gi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1Gi"
                  }
                },
                "serviceAccountName": ""
              }
            ],
            "cluster": {
              "adminPasswordSecretName": "",
              "cacheImages": true,
              "clusterName": "",
              "enableSharedSubdir": false,
              "entitlementSecretName": "",
              "logsOnShared": false,
              "scriptsSecretName": "",
              "storage": {
                "pvcName": "",
                "pvcSize": "1Gi",
                "selector": {
                  "label": "",
                  "value": ""
                },
                "storageClassName": ""
              },
              "usersPasswordsSecretName": ""
            },
            "compute": {
              "image": "registry.connect.redhat.com/ibm/spectrum-symphony@sha256:1722eae3debcab3354a17c019cb38dc15acb71c6fed33585f669c9caceefc877",
              "imagePullPolicy": "Always",
              "maxReplicas": 64,
              "minReplicas": 1,
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "250m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "250m",
                  "memory": "1Gi"
                }
              },
              "targetCPUUtilizationPercentage": 70,
              "usePodAutoscaler": true
            },
            "licenceAccepted": true,
            "master": {
              "egoRestEnabled": false,
              "image": "registry.connect.redhat.com/ibm/spectrum-symphony@sha256:d6860f11eea6024e51134e58bc1968c41d797bd9555c4e0283224c52ccf17774",
              "imagePullPolicy": "Always",
              "replicaCount": 0,
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "4Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "4Gi"
                }
              },
              "symRestEnabled": false,
              "uiEnabled": true
            },
            "serviceAccountName": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/spectrum-symphony-operator-bundle@sha256:64d375f9e471f8f9918f9257ecc4f80b8a31379c3e4495b38c9039a0bfe0b779",
      "bundle_path_digest": "sha256:64d375f9e471f8f9918f9257ecc4f80b8a31379c3e4495b38c9039a0bfe0b779",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-03T16:47:45.055000+00:00",
      "csv_description": "Creates IBM Spectrum Symphony Cluster",
      "csv_display_name": "IBM Spectrum Symphony Cluster",
      "csv_metadata_description": "IBM Spectrum Symphony cluster",
      "csv_name": "ibm-spectrum-symphony-operator.v1.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:53:52.222000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "ibm-spectrum-symphony-operator",
      "provided_apis": [
        {
          "group": "symphony.spectrumcomputing.ibm.com",
          "kind": "SymphonyCluster",
          "plural": "symphonyclusters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1e93089d93c0dc97b60f0425c62f42b2ecaa46ecd5b9a14c6a3e3c3b80f16d33",
          "image": "registry.connect.redhat.com/ibm/spectrum-symphony-operator@sha256:1e93089d93c0dc97b60f0425c62f42b2ecaa46ecd5b9a14c6a3e3c3b80f16d33",
          "name": "spectrum-symphony-operator-1e93089d93c0dc97b60f0425c62f42b2ecaa46ecd5b9a14c6a3e3c3b80f16d33-annotation"
        },
        {
          "digest": "sha256:1e93089d93c0dc97b60f0425c62f42b2ecaa46ecd5b9a14c6a3e3c3b80f16d33",
          "image": "registry.connect.redhat.com/ibm/spectrum-symphony-operator@sha256:1e93089d93c0dc97b60f0425c62f42b2ecaa46ecd5b9a14c6a3e3c3b80f16d33",
          "name": "manager"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d6860f11eea6024e51134e58bc1968c41d797bd9555c4e0283224c52ccf17774",
          "image": "registry.connect.redhat.com/ibm/spectrum-symphony@sha256:d6860f11eea6024e51134e58bc1968c41d797bd9555c4e0283224c52ccf17774",
          "name": "spectrum-symphony-d6860f11eea6024e51134e58bc1968c41d797bd9555c4e0283224c52ccf17774-annotation"
        },
        {
          "digest": "sha256:1722eae3debcab3354a17c019cb38dc15acb71c6fed33585f669c9caceefc877",
          "image": "registry.connect.redhat.com/ibm/spectrum-symphony@sha256:1722eae3debcab3354a17c019cb38dc15acb71c6fed33585f669c9caceefc877",
          "name": "spectrum-symphony-1722eae3debcab3354a17c019cb38dc15acb71c6fed33585f669c9caceefc877-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.1.2",
      "version_original": "1.1.2"
    },
    {
      "_id": "61d328c78093b97ef52e1b42",
      "alm_examples": [
        {
          "kind": "InfoScaleCluster",
          "metadata": {
            "name": "infoscalecluster-dev"
          },
          "spec": {
            "clusterInfo": [
              {},
              {}
            ],
            "version": "8.0.1"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-operator-bundle@sha256:69ba6ea88e09e1fdf823bf4b53fa8c9aa38cedf4f1bd332800ee2537ae7839cf",
      "bundle_path_digest": "sha256:69ba6ea88e09e1fdf823bf4b53fa8c9aa38cedf4f1bd332800ee2537ae7839cf",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-03T16:48:07.032000+00:00",
      "csv_description": "## InfoScale\u2122 SDS Operator\n\nInfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster\n\n## Overview\n\n- Veritas InfoScale\u2122 delivers Infrastructure resiliency and persistent storage for your critical containerized applications for OpenShift\u00ae and Kubernetes Native deployments\n- Engineered to support stateful workloads generated for mission-critical containerized applications.\n\n---\n\n## Data Services & Benefits\n\n**1. Software-Defined Persistent Storage Volumes:** Enables customers to support multiple container application requirements leveraging existing SAN or DAS storage\n\n**2. CSI API Driver:** Facilitates static and dynamic provisioning for applications with RWX, RWO and ROX access modes\n\n**3. Life Cycle Management:** Enables automated deployment, configuration and upgrades of InfoScale Software-defined container images. Certified and Integrated with Red Hat OpenShift for a single-click deployment\n\n**4. Availability:** Provides scaling, mounting and/or movement of InfoScale persistent storage volumes on cluster nodes with minimal disruption\n\n**5. Data Integrity:** Prevents data corruption by allowing only the active cluster nodes to write to the volume. The I/O fencing feature recovers from cluster disruptions quickly by ensuring that application pods are moved to another node to continue normal operations\n\n**6. Point-in-Time Data Copies:** Create snapshots of Persistent Volumes for backup products, data analytics or forensic discovery and analysis\n\n**7. Disaster Recovery (DR) Tech Preview:** This DR feature provides the ability to test and validate disaster recovery capabilities by migrating Kubernetes cluster metadata and application components to peer cluster in case of a local or remote disaster\n\n---\n\n## Pre-requisites\n\n- [Please refer to pre-requisite section from official documentation](https://www.veritas.com/support/en_US/doc/151215298-151215302-0)\n\n\n## InfoScale Cluster custom resource\n\n```\nkind: InfoScaleCluster\nmetadata:\n  name:  < Infoscale Cluster Name >\n\nspec:\n  version: \"8.0.1\"\n\n  clusterInfo:\n  - nodeName: <Name of the first node>\n  ip:\n  - <Optional - First IP address of the first node >\n  - <Optional - Second IP address of the first node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  - nodeName: <Name of the second node>\n  ip:\n  - <Optional - First IP address of the second node >\n  - <Optional - Second IP address of the second node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  # You can add up to 16 nodes.\n\n  licenseServer: < Optional - License server name/IP address >\n  licensePort: < Optional - License port number >\n\n  customImageRegistry: < Optional \u2013 Registry for Infoscale Container images>\n\n```\n\n#### Note\n\nYou can specify up to 16 worker nodes in CR. Although cluster configuration is allowed even with one Network Interface Card,\nVeritas recommends a minimum of two physical links for performance and High Availability (HA). Number of links for each network link must be same on all\nnodes. Optionally, you can enter node level IP addresses. If IP addresses are not provided, IP addresses of OpenShift cluster nodes are used.\n",
      "csv_display_name": "InfoScale\u2122 SDS Operator",
      "csv_metadata_description": "InfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster",
      "csv_name": "infoscale-operator.v8.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T10:58:02.723000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "infoscale-operator",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "InfoScaleCluster",
          "plural": "infoscaleclusters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "name": "manager"
        },
        {
          "digest": "sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "name": "pre-manager"
        },
        {
          "digest": "sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "name": "infoscale-operator-dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.0.1",
      "version_original": "8.0.1"
    },
    {
      "_id": "61d328ca8093b97ef52e1b43",
      "alm_examples": [
        {
          "kind": "InfoScaleCluster",
          "metadata": {
            "name": "infoscalecluster-dev"
          },
          "spec": {
            "clusterInfo": [
              {},
              {}
            ],
            "version": "8.0.1"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-operator-bundle@sha256:f05e531495fcf80fa65b325d0a74e00003bbfb4474f6e597c59fdda986f8153f",
      "bundle_path_digest": "sha256:f05e531495fcf80fa65b325d0a74e00003bbfb4474f6e597c59fdda986f8153f",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-03T16:48:10.023000+00:00",
      "csv_description": "## InfoScale\u2122 SDS Operator\n\nInfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster\n\n## Overview\n\n- Veritas InfoScale\u2122 delivers Infrastructure resiliency and persistent storage for your critical containerized applications for OpenShift\u00ae and Kubernetes Native deployments\n- Engineered to support stateful workloads generated for mission-critical containerized applications.\n\n---\n\n## Data Services & Benefits\n\n**1. Software-Defined Persistent Storage Volumes:** Enables customers to support multiple container application requirements leveraging existing SAN or DAS storage\n\n**2. CSI API Driver:** Facilitates static and dynamic provisioning for applications with RWX, RWO and ROX access modes\n\n**3. Life Cycle Management:** Enables automated deployment, configuration and upgrades of InfoScale Software-defined container images. Certified and Integrated with Red Hat OpenShift for a single-click deployment\n\n**4. Availability:** Provides scaling, mounting and/or movement of InfoScale persistent storage volumes on cluster nodes with minimal disruption\n\n**5. Data Integrity:** Prevents data corruption by allowing only the active cluster nodes to write to the volume. The I/O fencing feature recovers from cluster disruptions quickly by ensuring that application pods are moved to another node to continue normal operations\n\n**6. Point-in-Time Data Copies:** Create snapshots of Persistent Volumes for backup products, data analytics or forensic discovery and analysis\n\n**7. Disaster Recovery (DR) Tech Preview:** This DR feature provides the ability to test and validate disaster recovery capabilities by migrating Kubernetes cluster metadata and application components to peer cluster in case of a local or remote disaster\n\n---\n\n## Pre-requisites\n\n- [Please refer to pre-requisite section from official documentation](https://www.veritas.com/support/en_US/doc/151215298-151215302-0)\n\n\n## InfoScale Cluster custom resource\n\n```\nkind: InfoScaleCluster\nmetadata:\n  name:  < Infoscale Cluster Name >\n\nspec:\n  version: \"8.0.1\"\n\n  clusterInfo:\n  - nodeName: <Name of the first node>\n  ip:\n  - <Optional - First IP address of the first node >\n  - <Optional - Second IP address of the first node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  - nodeName: <Name of the second node>\n  ip:\n  - <Optional - First IP address of the second node >\n  - <Optional - Second IP address of the second node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  # You can add up to 16 nodes.\n\n  licenseServer: < Optional - License server name/IP address >\n  licensePort: < Optional - License port number >\n\n  customImageRegistry: < Optional \u2013 Registry for Infoscale Container images>\n\n```\n\n#### Note\n\nYou can specify up to 16 worker nodes in CR. Although cluster configuration is allowed even with one Network Interface Card,\nVeritas recommends a minimum of two physical links for performance and High Availability (HA). Number of links for each network link must be same on all\nnodes. Optionally, you can enter node level IP addresses. If IP addresses are not provided, IP addresses of OpenShift cluster nodes are used.\n",
      "csv_display_name": "InfoScale\u2122 SDS Operator",
      "csv_metadata_description": "InfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster",
      "csv_name": "infoscale-operator.v8.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T10:58:05.667000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "infoscale-operator",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "InfoScaleCluster",
          "plural": "infoscaleclusters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "name": "manager"
        },
        {
          "digest": "sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "name": "pre-manager"
        },
        {
          "digest": "sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "name": "infoscale-operator-dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.0.2",
      "version_original": "8.0.2"
    },
    {
      "_id": "61d32a15d467cd4ec03ef495",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:acad9af174541d2b39a02a216dd462ee0d47d8dc3c9cb44371f0a6bbf1c83d3d",
      "bundle_path_digest": "sha256:acad9af174541d2b39a02a216dd462ee0d47d8dc3c9cb44371f0a6bbf1c83d3d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-03T16:53:41.773000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T10:58:54.450000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator-879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d-annotation"
        },
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:490db38c4cc1aa124f6ddd020f3ef6f8f1dfdf0913a25b2cfba9952dd2c0d6d5",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:490db38c4cc1aa124f6ddd020f3ef6f8f1dfdf0913a25b2cfba9952dd2c0d6d5",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.4.1",
      "version_original": "8.4.1"
    },
    {
      "_id": "61d32b5617f914cd723308ff",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:bb9a141e7420196baf0bfc456ae28d7d150f6b40de987b214d0833207fcc1a3e",
      "bundle_path_digest": "sha256:bb9a141e7420196baf0bfc456ae28d7d150f6b40de987b214d0833207fcc1a3e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-01-03T16:59:02.829000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.2 of the NeuVector Certified Operator deploys version 4.4.2 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:55:37.911000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0",
          "name": "neuvector-operator-a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0-annotation"
        },
        {
          "digest": "sha256:a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:ecc4814bf9e38d41898ae2354bbafd2f1ed7c6e5602bb30cb40486e67725395c",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:ecc4814bf9e38d41898ae2354bbafd2f1ed7c6e5602bb30cb40486e67725395c",
          "name": "controller"
        },
        {
          "digest": "sha256:4621d69ca47929eedcab2c9163fc9d73ede09e0cd14f2a14db495e610590f5c2",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:4621d69ca47929eedcab2c9163fc9d73ede09e0cd14f2a14db495e610590f5c2",
          "name": "enforcer"
        },
        {
          "digest": "sha256:b49ba8bba9aaf292603896d5d3b9e5328b23260dfd977c70e7f3e39460564679",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:b49ba8bba9aaf292603896d5d3b9e5328b23260dfd977c70e7f3e39460564679",
          "name": "manager"
        },
        {
          "digest": "sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "name": "scanner"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "updater"
        },
        {
          "digest": "sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "name": "scanner-d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038-annotation"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "ubi8-228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.3.2",
      "version_original": "1.3.2"
    },
    {
      "_id": "61d32b778093b97ef52e1b46",
      "alm_examples": [
        {
          "api_version": "apps.openliberty.io/v1beta2",
          "kind": "OpenLibertyApplication",
          "metadata": {
            "name": "openliberty-app-sample"
          },
          "spec": {
            "applicationImage": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
            "expose": true,
            "replicas": 1
          }
        },
        {
          "api_version": "apps.openliberty.io/v1beta2",
          "kind": "OpenLibertyDump",
          "metadata": {
            "name": "openliberty-dump-sample"
          },
          "spec": {
            "include": [
              "thread",
              "heap"
            ],
            "podName": "Specify_Pod_Name_Here"
          }
        },
        {
          "api_version": "apps.openliberty.io/v1beta2",
          "kind": "OpenLibertyTrace",
          "metadata": {
            "name": "openliberty-trace-sample"
          },
          "spec": {
            "maxFileSize": 20,
            "maxFiles": 5,
            "podName": "Specify_Pod_Name_Here",
            "traceSpecification": "*=info:com.ibm.ws.webcontainer*=all"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/open-liberty-operator-bundle@sha256:88ff3cd847c4b606466b1e782cec0dfbdb62fb3dd0e4e1bc8b9c2d1016c74132",
      "bundle_path_digest": "sha256:88ff3cd847c4b606466b1e782cec0dfbdb62fb3dd0e4e1bc8b9c2d1016c74132",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "beta2",
      "creation_date": "2022-01-03T16:59:35.470000+00:00",
      "csv_description": "This advanced Operator can be used to deploy and manage Open Liberty applications with consistent, production-grade QoS. This operator is based on the [Runtime Component Operator](https://github.com/application-stacks/runtime-component-operator) and provides all of its capabilities in addition to Open Liberty specific features such as gathering traces and dumps (Day-2 operations) and easily configuring and managing the single sign-on information for your Open Liberty applications.\n\nOpen Liberty Operator enables enterprise architects to govern the way their applications get deployed & managed in the cluster, while dramatically reducing the learning curve for developers to deploy into Kubernetes - allowing them to focus on writing the code! Here are some key features:\n\n#### Application Lifecyle\nYou can deploy your Open Liberty application container by either pointing to a container image, or an OpenShift ImageStream. When using an ImageStream the Operator will watch for any updates and will re-deploy the modified image.\n\n#### Custom RBAC\nThis Operator is capable of using a custom ServiceAccount from the caller, allowing it to follow RBAC restrictions. By default it creates a ServiceAccount if one is not specified, which can also be bound with specific roles.\n\n#### Environment Configuration\nYou can configure a variety of artifacts with your deployment, such as: labels, annotations, and environment variables from a ConfigMap, a Secret or a value.\n\n#### Routing\nExpose your application to external users via a single toggle to create a Route on OpenShift or an Ingress on other Kubernetes environments. Advanced configuration, such as TLS settings, are also easily enabled. Expiring Route certificates are re-issued.\n\n#### High Availability via Horizontal Pod Autoscaling\nRun multiple instances of your application for high availability. Either specify a static number of replicas or easily configure horizontal auto scaling to create (and delete) instances based on resource consumption.\n\n#### Persistence and advanced storage\nEnable persistence for your application by specifying simple requirements: just tell us the size of the storage and where you would like it to be mounted and We will create and manage that storage for you.\nThis toggles a StatefulSet resource instead of a Deployment resource, so your container can recover transactions and state upon a pod restart.\nWe offer an advanced mode where the user specifies a built-in PersistentVolumeClaim, allowing them to configure many details of the persistent volume, such as its storage class and access mode.\nYou can also easily configure and use a single storage for serviceability related Day-2 operations, such as gatherig server traces and dumps.\n\n#### Service Binding\nYour runtime components can expose services by a simple toggle. We take care of the heavy lifting such as creating kubernetes Secrets with information other services can use to bind. We also keep the bindable information synchronized, so your applications can dynamically reconnect to its required services without any intervention or interruption.\n\n#### Single Sign-On (SSO)\nOpen Liberty provides capabilities to delegate authentication to external providers. Your application users can log in using their existing social media credentials from providers such as Google, Facebook, LinkedIn, Twitter, GitHub, and any OpenID Connect (OIDC) or OAuth 2.0 clients. Open Liberty Operator allows to easily configure and manage the single sign-on information for your applications.\n\n#### Exposing metrics to Prometheus\nThe Open Liberty Operator exposes the runtime container's metrics via the [Prometheus Operator](https://operatorhub.io/operator/prometheus).\nUsers can pick between a basic mode, where they simply specify the label that Prometheus is watching to scrape the metrics from the container, or they can specify the full `ServiceMonitor` spec embedded into the OpenLibertyApplication's `spec.monitoring` key controlling things like the poll internal and security credentials.\n\n#### Easily mount logs and transaction directories\nIf you need to mount the logs and transaction data from your application to an external volume such as NFS (or any storage supported in your cluster), simply add the following (customizing the folder location and size) to your OpenLibertyApplication CR:\n``` storage: size: 2Gi mountPath: \"/logs\" ```\n\n#### Integration with OpenShift Serverless\nDeploy your serverless runtime component using a single toggle.  The Operator will convert all of its generated resources into [Knative](https://knative.dev) resources, allowing your pod to automatically scale to 0 when it is idle.\n\n#### Integration with OpenShift's Topology UI\nWe set the corresponding labels to support OpenShift's Developer Topology UI, which allows you to visualize your entire set of deployments and how they are connected.\n\nSee our [**documentation**](https://github.com/OpenLiberty/open-liberty-operator/tree/main/doc/) for more information.\n",
      "csv_display_name": "Open Liberty",
      "csv_metadata_description": "Deploy and manage applications running on Liberty",
      "csv_name": "open-liberty-operator.v0.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:56:10.794000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "open-liberty-certified",
      "provided_apis": [
        {
          "group": "apps.openliberty.io",
          "kind": "OpenLibertyApplication",
          "plural": "openlibertyapplications",
          "version": "v1beta2"
        },
        {
          "group": "apps.openliberty.io",
          "kind": "OpenLibertyDump",
          "plural": "openlibertydumps",
          "version": "v1beta2"
        },
        {
          "group": "apps.openliberty.io",
          "kind": "OpenLibertyTrace",
          "plural": "openlibertytraces",
          "version": "v1beta2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:43b3f004a19c91c80ba815aedc1b361b87cd12daa28bb215e6775e64ef890af1",
          "image": "registry.connect.redhat.com/ibm/open-liberty-operator-controller@sha256:43b3f004a19c91c80ba815aedc1b361b87cd12daa28bb215e6775e64ef890af1",
          "name": "open-liberty-operator-controller-43b3f004a19c91c80ba815aedc1b361b87cd12daa28bb215e6775e64ef890af1-annotation"
        },
        {
          "digest": "sha256:43b3f004a19c91c80ba815aedc1b361b87cd12daa28bb215e6775e64ef890af1",
          "image": "registry.connect.redhat.com/ibm/open-liberty-operator-controller@sha256:43b3f004a19c91c80ba815aedc1b361b87cd12daa28bb215e6775e64ef890af1",
          "name": "manager"
        },
        {
          "digest": "sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "image": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "name": "open-liberty-samples-8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<0.8.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.8.0",
      "version_original": "0.8.0"
    },
    {
      "_id": "61d32b838093b97ef52e1b47",
      "alm_examples": [
        {
          "api_version": "charts.paloaltonetworks.com/v1",
          "kind": "PanCnSeriesFirewall",
          "metadata": {
            "name": "pancnseriesfirewall-sample"
          },
          "spec": {
            "affinity": {},
            "cni": {
              "image": "gcr.io/itp-ext-cnseries/10.1.3/pan_cni",
              "version": "latest"
            },
            "csp": {},
            "dp": {
              "cpuLimit": 2,
              "image": "gcr.io/itp-ext-cnseries/10.1.3/panos_cn_ngfw"
            },
            "firewall": {
              "failoverMode": "failopen",
              "licenseBundle": "bundle2"
            },
            "fullnameOverride": "",
            "imagePullSecrets": [],
            "mp": {
              "cpuLimit": 4,
              "image": "gcr.io/itp-ext-cnseries/10.1.3/panos_cn_mgmt",
              "initImage": "gcr.io/itp-ext-cnseries/10.1.3/pan_cn_mgmt_init",
              "initVersion": "latest"
            },
            "nameOverride": "",
            "nodeSelector": {},
            "panorama": {
              "authKey": "",
              "ip": "x.x.x.x"
            },
            "podSecurityContext": {},
            "resources": {},
            "securityContext": {},
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/paloalto/not-applicable@sha256:606f6f43f543d631a463d2f581f2b30cc76ad0ba6b0302fc7ae3c52a578cbcb2",
      "bundle_path_digest": "sha256:606f6f43f543d631a463d2f581f2b30cc76ad0ba6b0302fc7ae3c52a578cbcb2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-03T16:59:47.489000+00:00",
      "csv_description": "**Palo Alto CN-Series NGFW (container firewall)**\n\n**Product Overview:** \nThe CN-Series firewall enables you to:\n1. Gain Layer-7 traffic visibility and control within the cluster\n2. Stop lateral movement of threats\n3. Prevent known and unknown inbound attacks\n4. Apply egress filtering to prevent data exfiltration and unwanted outbound connections\n5. Dynamically scale security without compromising DevOps agility.\n6. Ensure a frictionless CI/CD pipeline deployment.\n7. Unify management across all your firewalls using Panorama.\n\nDeploy CN-Series as-a-Kubernetes service and manage the fleet of firewalls from Panorama, alongside our hardware and VM-Series NGFW appliances to ensure consistent security posture everywhere. This subscription also includes industry-leading Threat Prevention, WildFire, URL Filtering, and DNS Security subscriptions that provide best-in-class runtime network security for East-West, Outbound and Inbound traffic.\n\n[Pre-Install Steps and Documentation](https://docs.paloaltonetworks.com/cn-series/10-1/cn-series-deployment/secure-kubernetes-workloads-with-cn-series.html)\n\n[Post-Install Steps and Documentation](https://github.com/PaloAltoNetworks/Kubernetes/tree/v2.0) -- Instructions at bottom of README (Multus and Openshift)",
      "csv_display_name": "pan-cn-series-operator",
      "csv_metadata_description": "",
      "csv_name": "pan-cn-series-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:56:24.519000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "pan-cn-series-operator",
      "provided_apis": [
        {
          "group": "charts.paloaltonetworks.com",
          "kind": "PanCnSeriesFirewall",
          "plural": "pancnseriesfirewalls",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:56d6c27633fa632bf6449ee8de8061cbcd705d90327a9fa8b665d9dd5ef50323",
          "image": "us.gcr.io/panw-gcp-team-testing/paloaltonetworks/pan-cn-series-operator@sha256:56d6c27633fa632bf6449ee8de8061cbcd705d90327a9fa8b665d9dd5ef50323",
          "name": "pan-cn-series-operator"
        },
        {
          "digest": "sha256:56d6c27633fa632bf6449ee8de8061cbcd705d90327a9fa8b665d9dd5ef50323",
          "image": "us.gcr.io/panw-gcp-team-testing/paloaltonetworks/pan-cn-series-operator@sha256:56d6c27633fa632bf6449ee8de8061cbcd705d90327a9fa8b665d9dd5ef50323",
          "name": "paloaltonetworks/pan-cn-series-operator-56d6c27633fa632bf6449ee8de8061cbcd705d90327a9fa8b665d9dd5ef50323-annotation"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:56d6c27633fa632bf6449ee8de8061cbcd705d90327a9fa8b665d9dd5ef50323",
          "image": "us.gcr.io/panw-gcp-team-testing/paloaltonetworks/pan-cn-series-operator@sha256:56d6c27633fa632bf6449ee8de8061cbcd705d90327a9fa8b665d9dd5ef50323",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "61d32b8cc6d6ba37322fd9ec",
      "alm_examples": [
        {
          "api_version": "psmdb.percona.com/v1-11-0",
          "kind": "PerconaServerMongoDB",
          "metadata": {
            "name": "my-cluster-name"
          },
          "spec": {
            "allowUnsafeConfigurations": false,
            "backup": {
              "enabled": true,
              "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:071ac076bdd1ddec2754f4a8e784b09dc1ab457ce1aaf29ba292df993005abff",
              "pitr": {
                "enabled": false
              },
              "restartOnFailure": true,
              "serviceAccountName": "percona-server-mongodb-operator"
            },
            "crVersion": "1.11.0",
            "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:580f6eaf815f9bce04185d62c9c6c28a67443c6d379912dff1f28af68af98a5f",
            "imagePullPolicy": "Always",
            "mongod": {
              "net": {
                "hostPort": 0,
                "port": 27017
              },
              "operationProfiling": {
                "mode": "slowOp",
                "rateLimit": 100,
                "slowOpThresholdMs": 100
              },
              "security": {
                "enableEncryption": true,
                "encryptionCipherMode": "AES256-CBC",
                "encryptionKeySecret": "my-cluster-name-mongodb-encryption-key",
                "redactClientLogData": false
              },
              "setParameter": {
                "ttlMonitorSleepSecs": 60,
                "wiredTigerConcurrentReadTransactions": 128,
                "wiredTigerConcurrentWriteTransactions": 128
              },
              "storage": {
                "engine": "wiredTiger",
                "inMemory": {
                  "engineConfig": {
                    "inMemorySizeRatio": 0.9
                  }
                },
                "wiredTiger": {
                  "collectionConfig": {
                    "blockCompressor": "snappy"
                  },
                  "engineConfig": {
                    "cacheSizeRatio": 0.5,
                    "directoryForIndexes": false,
                    "journalCompressor": "snappy"
                  },
                  "indexConfig": {
                    "prefixCompression": true
                  }
                }
              }
            },
            "pmm": {
              "enabled": false,
              "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:2cb5ae10f470c71ba760fb2259659c80ddcee1f374e340bf896574325c198614",
              "serverHost": "monitoring-service"
            },
            "replsets": [
              {
                "affinity": {
                  "antiAffinityTopologyKey": "kubernetes.io/hostname"
                },
                "arbiter": {
                  "affinity": {
                    "antiAffinityTopologyKey": "kubernetes.io/hostname"
                  },
                  "enabled": false,
                  "size": 1
                },
                "expose": {
                  "enabled": false,
                  "exposeType": "ClusterIP"
                },
                "name": "rs0",
                "nonvoting": {
                  "affinity": {
                    "antiAffinityTopologyKey": "kubernetes.io/hostname"
                  },
                  "enabled": false,
                  "podDisruptionBudget": {
                    "maxUnavailable": 1
                  },
                  "resources": {
                    "limits": {
                      "cpu": "300m",
                      "memory": "0.5G"
                    },
                    "requests": {
                      "cpu": "300m",
                      "memory": "0.5G"
                    }
                  },
                  "size": 3,
                  "volumeSpec": {
                    "persistentVolumeClaim": {
                      "resources": {
                        "requests": {
                          "storage": "1Gi"
                        }
                      }
                    }
                  }
                },
                "podDisruptionBudget": {
                  "maxUnavailable": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  },
                  "requests": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  }
                },
                "size": 3,
                "volumeSpec": {
                  "persistentVolumeClaim": {
                    "resources": {
                      "requests": {
                        "storage": "3Gi"
                      }
                    }
                  }
                }
              }
            ],
            "secrets": {
              "users": "my-cluster-name-secrets"
            },
            "sharding": {
              "configsvrReplSet": {
                "affinity": {
                  "antiAffinityTopologyKey": "kubernetes.io/hostname"
                },
                "expose": {
                  "enabled": false,
                  "exposeType": "ClusterIP"
                },
                "podDisruptionBudget": {
                  "maxUnavailable": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  },
                  "requests": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  }
                },
                "size": 3,
                "volumeSpec": {
                  "persistentVolumeClaim": {
                    "resources": {
                      "requests": {
                        "storage": "3Gi"
                      }
                    }
                  }
                }
              },
              "enabled": true,
              "mongos": {
                "affinity": {
                  "antiAffinityTopologyKey": "kubernetes.io/hostname"
                },
                "expose": {
                  "exposeType": "ClusterIP"
                },
                "podDisruptionBudget": {
                  "maxUnavailable": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  },
                  "requests": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  }
                },
                "size": 3
              }
            },
            "updateStrategy": "SmartUpdate",
            "upgradeOptions": {
              "apply": "disabled",
              "schedule": "0 2 * * *",
              "setFCV": false,
              "versionServiceEndpoint": "https://check.percona.com"
            }
          }
        },
        {
          "api_version": "psmdb.percona.com/v1",
          "kind": "PerconaServerMongoDBBackup",
          "metadata": {
            "name": "backup1"
          },
          "spec": {
            "psmdbCluster": "my-cluster-name",
            "storageName": "s3-us-west"
          }
        },
        {
          "api_version": "psmdb.percona.com/v1",
          "kind": "PerconaServerMongoDBRestore",
          "metadata": {
            "name": "restore1"
          },
          "spec": {
            "backupName": "backup1",
            "clusterName": "my-cluster-name"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-bundle@sha256:7ae55f5f3de98de4044cfe63a921a3b871fb6e8e1c70bdf2b1a7348c63fb1397",
      "bundle_path_digest": "sha256:7ae55f5f3de98de4044cfe63a921a3b871fb6e8e1c70bdf2b1a7348c63fb1397",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-03T16:59:56.085000+00:00",
      "csv_description": "\n## Percona is Cloud Native\n\nThe Percona Distribution for MongoDB Kubernetes Operator automates the creation, modification, or deletion of items in your Percona Server for MongoDB environment. The Operator contains the necessary Kubernetes settings to maintain a consistent Percona Server for MongoDB instance modification, or deletion of items in your Percona Server for MongoDB environment. The Operator contains the necessary Kubernetes settings to maintain a consistent Percona Server for MongoDB instance.\n\nConsult the [documentation](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/index.html/) on the Percona Kubernetes Operator for Percona Server for MongoDB for complete details on capabilities and options.\n\n### Supported Features\n\n* **Scale Your Cluster** - change the `size` parameter to [add or remove members](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/scaling.html) of the replica set. Three is the minimum recommended size for a functioning replica set.\n\n* **Add Monitoring** - [Percona Monitoring and Management (PMM) can be easily deployed](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/monitoring.html) to monitor your Percona Server for MongoDB replica set(s). The recommended installation process uses Helm, the package manager for Kubernetes.\n\n* **Automate Your Backups** - [configure automatic backups](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/backups.html) to run on a scheduled basis or run an on-demand backup at any time. Backups are performed using Percona Backup for MongoDB (PBM) and can be stored on local PVs or in any S3-compatible cloud storage provider.\n\n### Common Configurations\n\n* **Set Member as Arbiter** - [Set up a replica set which contains an arbiter](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/arbiter.html), which participates in elections but does not store any data.  This reduces storage costs while helping maintain replica set integrity.\n\n* **Expose Members Outside K8S** - [by appropriately configuring the ServiceType](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/expose.html) you can expose replica set members outside of Kubernetes or provide statically assigned IP addresses.\n\n* **Utilize Local Storage Options** - [with support for Local Storage you can mount existing data directories](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/storage.html) into your replica set managed by Kubernetes or utilize high performance hardware for local storage rather than network storage for your database.\n\n### Before You Start\n\nAdd the PSMDB user `Secret` to Kubernetes. User information must be placed in the data section of the `secrets.yaml`\nfile with Base64-encoded logins and passwords for the user accounts.\n\nBelow is a sample `secrets.yaml` file for the correct formatting.\n\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: my-cluster-name-secrets\ntype: Opaque\ndata:\n  MONGODB_BACKUP_USER: YmFja3Vw\n  MONGODB_BACKUP_PASSWORD: YmFja3VwMTIzNDU2\n  MONGODB_CLUSTER_ADMIN_USER: Y2x1c3RlckFkbWlu\n  MONGODB_CLUSTER_ADMIN_PASSWORD: Y2x1c3RlckFkbWluMTIzNDU2\n  MONGODB_CLUSTER_MONITOR_USER: Y2x1c3Rlck1vbml0b3I=\n  MONGODB_CLUSTER_MONITOR_PASSWORD: Y2x1c3Rlck1vbml0b3IxMjM0NTY=\n  MONGODB_USER_ADMIN_USER: dXNlckFkbWlu\n  MONGODB_USER_ADMIN_PASSWORD: dXNlckFkbWluMTIzNDU2\n  PMM_SERVER_USER: cG1t\n  PMM_SERVER_PASSWORD: c3VwYXxefHBheno=\n```\n### Release Highlights\n\n* In addition to S3-compatible storage, you can now configure backups to use Microsoft Azure Blob storage.\n  This feature makes the Operator fully compatible with Azure Cloud.\n* Custom sidecar containers allow users to customize Percona Distribution for MongoDB and other Operator components without changing the container images.\n  In this release, we enable even more customization, by allowing users to mount volumes into the sidecar containers.\n* It is now possible to set annotations to backup cron jobs (Thanks to Aliaksandr Karavai for contribution) * Mongos readiness probe now avoids running listDatabases command for all databases in the cluster to avoid unneeded delays on\n  clusters with an extremely large amount of databases\n* Timeout parameters for liveness and readiness probes can be customized to avoid false-positives for heavy-loaded clusters * Update backup status as error if it`s not started for a long time * New backup.pitr.oplogSpanMin option controls how often oplogs are uploaded to the cloud storage\n\n\n",
      "csv_display_name": "Percona Distribution for MongoDB Operator",
      "csv_metadata_description": "Percona Distribution for MongoDB Operator automates the creation, modification, or deletion of items in your Percona Server for MongoDB environment",
      "csv_name": "percona-server-mongodb-operator-certified.v1.11.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:56:37.659000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "percona-server-mongodb-operator-certified",
      "provided_apis": [
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-11-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-6-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1alpha1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-8-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDBRestore",
          "plural": "perconaservermongodbrestores",
          "version": "v1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-5-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-9-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDBBackup",
          "plural": "perconaservermongodbbackups",
          "version": "v1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-1-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-4-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-2-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-3-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-7-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-10-0"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f16d8d2437a49d7c8dfe30f3c9c36764d8f86e35fde64db5148f40612b1a361b",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:f16d8d2437a49d7c8dfe30f3c9c36764d8f86e35fde64db5148f40612b1a361b",
          "name": "mongod4.0"
        },
        {
          "digest": "sha256:a3154bc9ca7ef19371308e90e9cb9051879e48f02c95842b4b39a3208698d312",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:a3154bc9ca7ef19371308e90e9cb9051879e48f02c95842b4b39a3208698d312",
          "name": "mongod4.2"
        },
        {
          "digest": "sha256:580f6eaf815f9bce04185d62c9c6c28a67443c6d379912dff1f28af68af98a5f",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:580f6eaf815f9bce04185d62c9c6c28a67443c6d379912dff1f28af68af98a5f",
          "name": "mongod4.4"
        },
        {
          "digest": "sha256:b14f566236d51a3dfb5e523ab1ce70a72b16f95783f1baf460547893e50dadcf",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:b14f566236d51a3dfb5e523ab1ce70a72b16f95783f1baf460547893e50dadcf",
          "name": "mongod5.0"
        },
        {
          "digest": "sha256:071ac076bdd1ddec2754f4a8e784b09dc1ab457ce1aaf29ba292df993005abff",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:071ac076bdd1ddec2754f4a8e784b09dc1ab457ce1aaf29ba292df993005abff",
          "name": "backup"
        },
        {
          "digest": "sha256:662a64a539a23a8bbad653c71af3bee3dd1038ea575e1d67293b9e2ad4a1d3f1",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator@sha256:662a64a539a23a8bbad653c71af3bee3dd1038ea575e1d67293b9e2ad4a1d3f1",
          "name": "operator"
        },
        {
          "digest": "sha256:662a64a539a23a8bbad653c71af3bee3dd1038ea575e1d67293b9e2ad4a1d3f1",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator@sha256:662a64a539a23a8bbad653c71af3bee3dd1038ea575e1d67293b9e2ad4a1d3f1",
          "name": "percona-server-mongodb-operator-662a64a539a23a8bbad653c71af3bee3dd1038ea575e1d67293b9e2ad4a1d3f1-annotation"
        },
        {
          "digest": "sha256:662a64a539a23a8bbad653c71af3bee3dd1038ea575e1d67293b9e2ad4a1d3f1",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator@sha256:662a64a539a23a8bbad653c71af3bee3dd1038ea575e1d67293b9e2ad4a1d3f1",
          "name": "percona-server-mongodb-operator"
        },
        {
          "digest": "sha256:071ac076bdd1ddec2754f4a8e784b09dc1ab457ce1aaf29ba292df993005abff",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:071ac076bdd1ddec2754f4a8e784b09dc1ab457ce1aaf29ba292df993005abff",
          "name": "percona-server-mongodb-operator-containers-071ac076bdd1ddec2754f4a8e784b09dc1ab457ce1aaf29ba292df993005abff-annotation"
        },
        {
          "digest": "sha256:2cb5ae10f470c71ba760fb2259659c80ddcee1f374e340bf896574325c198614",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:2cb5ae10f470c71ba760fb2259659c80ddcee1f374e340bf896574325c198614",
          "name": "percona-server-mongodb-operator-containers-2cb5ae10f470c71ba760fb2259659c80ddcee1f374e340bf896574325c198614-annotation"
        },
        {
          "digest": "sha256:580f6eaf815f9bce04185d62c9c6c28a67443c6d379912dff1f28af68af98a5f",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:580f6eaf815f9bce04185d62c9c6c28a67443c6d379912dff1f28af68af98a5f",
          "name": "percona-server-mongodb-operator-containers-580f6eaf815f9bce04185d62c9c6c28a67443c6d379912dff1f28af68af98a5f-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.11.0",
      "version_original": "1.11.0"
    },
    {
      "_id": "61d32b8f8093b97ef52e1b48",
      "alm_examples": [
        {
          "api_version": "pxc.percona.com/v1-10-0",
          "kind": "PerconaXtraDBCluster",
          "metadata": {
            "finalizers": [
              "delete-pxc-pods-in-order"
            ],
            "name": "cluster1"
          },
          "spec": {
            "allowUnsafeConfigurations": false,
            "backup": {
              "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:6ab8efb3804d1e519e49ee10eb46b428a837cfdcee222cc5ae2089cc1dc02a6d",
              "pitr": {
                "enabled": false,
                "storageName": "STORAGE-NAME-HERE",
                "timeBetweenUploads": 60
              },
              "schedule": [
                {
                  "keep": 3,
                  "name": "sat-night-backup",
                  "schedule": "0 0 * * 6",
                  "storageName": "s3-us-west"
                },
                {
                  "keep": 5,
                  "name": "daily-backup",
                  "schedule": "0 0 * * *",
                  "storageName": "fs-pvc"
                }
              ],
              "storages": {
                "fs-pvc": {
                  "type": "filesystem",
                  "volume": {
                    "persistentVolumeClaim": {
                      "accessModes": [
                        "ReadWriteOnce"
                      ],
                      "resources": {
                        "requests": {
                          "storage": "6G"
                        }
                      }
                    }
                  }
                },
                "s3-us-west": {
                  "s3": {
                    "bucket": "S3-BACKUP-BUCKET-NAME-HERE",
                    "credentialsSecret": "my-cluster-name-backup-s3",
                    "region": "us-west-2"
                  },
                  "type": "s3"
                }
              }
            },
            "crVersion": "1.10.0",
            "haproxy": {
              "affinity": {
                "antiAffinityTopologyKey": "kubernetes.io/hostname"
              },
              "enabled": true,
              "gracePeriod": 30,
              "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:2f06ac4a0f39b2c0253421c3d024291d5ba19d41e35e633ff6ddcf4ba67fd51a",
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "resources": {
                "requests": {
                  "cpu": "600m",
                  "memory": "1G"
                }
              },
              "size": 3
            },
            "logCollectorSecretName": "my-log-collector-secrets",
            "logcollector": {
              "enabled": true,
              "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:6e5a945b2a824ee34befd864b98d85727fe3849d83f8942463bca87210c19bca",
              "resources": {
                "requests": {
                  "cpu": "200m",
                  "memory": "100M"
                }
              }
            },
            "pmm": {
              "enabled": false,
              "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:d25b59fc82a22f65fe90fee6b1b6938fcd8172f534a5d6573914009a39578e1e",
              "resources": {
                "requests": {
                  "cpu": "300m",
                  "memory": "150M"
                }
              },
              "serverHost": "monitoring-service",
              "serverUser": "admin"
            },
            "proxysql": {
              "affinity": {
                "antiAffinityTopologyKey": "kubernetes.io/hostname"
              },
              "enabled": false,
              "gracePeriod": 30,
              "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:a727ccc8d9f17bc715309e9cf05b4903f38518a0cfee02a4822c8ac301cb01d6",
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "resources": {
                "requests": {
                  "cpu": "600m",
                  "memory": "1G"
                }
              },
              "size": 3,
              "volumeSpec": {
                "persistentVolumeClaim": {
                  "resources": {
                    "requests": {
                      "storage": "2G"
                    }
                  }
                }
              }
            },
            "pxc": {
              "affinity": {
                "antiAffinityTopologyKey": "kubernetes.io/hostname"
              },
              "autoRecovery": true,
              "gracePeriod": 600,
              "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:dbb944de701dbcd030aacd430a09f5c329c95991bd4257aed8a7407169b7e4b2",
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "resources": {
                "requests": {
                  "cpu": "600m",
                  "memory": "1G"
                }
              },
              "size": 3,
              "volumeSpec": {
                "persistentVolumeClaim": {
                  "resources": {
                    "requests": {
                      "storage": "6G"
                    }
                  }
                }
              }
            },
            "secretsName": "my-cluster-secrets",
            "sslInternalSecretName": "my-cluster-ssl-internal",
            "sslSecretName": "my-cluster-ssl",
            "updateStrategy": "SmartUpdate",
            "upgradeOptions": {
              "apply": "8.0-recommended",
              "schedule": "0 4 * * *",
              "versionServiceEndpoint": "https://check.percona.com"
            },
            "vaultSecretName": "keyring-secret-vault"
          }
        },
        {
          "api_version": "pxc.percona.com/v1",
          "kind": "PerconaXtraDBClusterBackup",
          "metadata": {
            "name": "backup1"
          },
          "spec": {
            "pxcCluster": "cluster1",
            "storageName": "fs-pvc"
          }
        },
        {
          "api_version": "pxc.percona.com/v1alpha1",
          "kind": "PerconaXtraDBBackup",
          "metadata": {
            "name": "backup1"
          },
          "spec": {
            "pxcCluster": "cluster1",
            "storageName": "s3-us-west"
          }
        },
        {
          "api_version": "pxc.percona.com/v1",
          "kind": "PerconaXtraDBClusterRestore",
          "metadata": {
            "name": "restore1"
          },
          "spec": {
            "backupName": "backup1",
            "pxcCluster": "cluster1"
          }
        },
        {
          "api_version": "pxc.percona.com/v1",
          "kind": "PerconaXtraDBClusterBackup",
          "metadata": {
            "name": "backup1"
          },
          "spec": {
            "pxcCluster": "cluster1",
            "storageName": "fs-pvc"
          }
        },
        {
          "api_version": "pxc.percona.com/v1alpha1",
          "kind": "PerconaXtraDBBackup",
          "metadata": {
            "name": "backup1"
          },
          "spec": {
            "pxcCluster": "cluster1",
            "storageName": "s3-us-west"
          }
        },
        {
          "api_version": "pxc.percona.com/v1",
          "kind": "PerconaXtraDBClusterRestore",
          "metadata": {
            "name": "restore1"
          },
          "spec": {
            "backupName": "backup1",
            "pxcCluster": "cluster1"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-bundle@sha256:fefce85e617428a43eebe47f6d99d31ff298b797945b0fccb9eff498d133b0fb",
      "bundle_path_digest": "sha256:fefce85e617428a43eebe47f6d99d31ff298b797945b0fccb9eff498d133b0fb",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-03T16:59:59.620000+00:00",
      "csv_description": "\n## Percona is Cloud Native\n\nPercona Distribution for MySQL Operator is an open-source drop in replacement for MySQL Enterprise with synchronous replication running on Kubernetes. It automates the deployment and management of the members in your Percona XtraDB Cluster environment. It can be used to instantiate a new Percona XtraDB Cluster, or to scale an existing environment.\n\nConsult the [documentation](https://percona.github.io/percona-xtradb-cluster-operator/) on the Percona Distribution for MySQL Operator for complete details on capabilities and options.\n\n### Supported Features\n\n* **Scale Your Cluster**  change the `size` parameter to [add or remove members](https://percona.github.io/percona-xtradb-cluster-operator/install/scaling) of the cluster. Three is the minimum recommended size for a functioning cluster.\n\n* **Manage Your Users**  [add, remove, or change](https://percona.github.io/percona-xtradb-cluster-operator/configure/users) the privileges of database users\n\n* **Automate Your Backups**  [configure cluster backups](https://percona.github.io/percona-xtradb-cluster-operator/configure/operator) to run on a scheduled basis. Backups can be stored on a persistent volume or S3-compatible storage. Leverage [Point-in-time recovery](https://www.percona.com/doc/kubernetes-operator-for-pxc/backups.html#storing-binary-logs-for-point-in-time-recovery) to reduce RPO/RTO.\n* **Proxy integration**  choose HAProxy or ProxySQL as a proxy in front of the Percona XtraDB Cluster. Proxies are deployed and configured automatically with the Operator.\n\n### Common Configurations\n\n* **Set Resource Limits** - set limitation on requests to CPU and memory resources.\n\n* **Customize Storage** - set the desired Storage Class and Access Mode for your database cluster data.\n\n* **Control Scheduling** - define how your PXC Pods are scheduled onto the K8S cluster with tolerations, pod disruption budgets, node selector and affinity settings.\n* Automatic synchronization of MySQL users with ProxySQL\n* HAProxy Support\n* Fully automated minor version updates (Smart Update)\n* Update Reader members before Writer member at cluster upgrades\n* Support MySQL versions 5.7 and 8.0\n### Before You Start\n\nAdd the PXC user `Secret` to Kubernetes. User information must be placed in the data section of the `secrets.yaml`\nfile with Base64-encoded logins and passwords for the user accounts.\n\nBelow is a sample `secrets.yaml` file for the correct formatting.\n\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: my-cluster-secrets\ntype: Opaque\ndata:\n  root: cm9vdF9wYXNzd29yZA==\n  xtrabackup: YmFja3VwX3Bhc3N3b3Jk\n  monitor: bW9uaXRvcg==\n  clustercheck: Y2x1c3RlcmNoZWNrcGFzc3dvcmQ=\n  proxyadmin: YWRtaW5fcGFzc3dvcmQ=\n  pmmserver: c3VwYXxefHBheno=\n  operator: b3BlcmF0b3JhZG1pbg==\n```\n###  Release Highlights\n* Custom sidecar containers allow users to customize Percona XtraDB Cluster and other Operator components without changing the container images. In this release, we enable\n  even more customization, by allowing users to mount volumes into the sidecar containers.\n* In this release, we put a lot of effort into fixing bugs that were reported by the community. We appreciate everyone who helped us with discovering these issues and\n  contributed to the fixes.\n* Mount volumes into sidecar containers to enable customization (Thanks to Sridhar L for contributing) * spec.Backup.serviceAccount and spec.automountServiceAccountToken Custom Resource options can now be used in the Helm chart\n  (Thanks to Gerwin van de Steeg for reporting this issue)\n* The logrotate command now doesn\u2019t use verbose mode to avoid flooding the log with rotate information * Logs are now strictly following JSON specification to simplify parsing * New source_retry_count and source_connect_retry options were added to tune source retries for replication between two clusters * New replicasServiceEnabled option was added to allow disabling the Kubernetes Service for haproxy-replicas, which may be useful to avoid the unwanted forwarding of the\n  application write requests to all Percona XtraDB Cluster instances\n* Logrotate now doesn\u2019t rotate GRA logs (binlog events in ROW format representing the failed transaction) as ordinary log files, storing them for 7 days instead which\n  gives additional time to debug the problem\n\n",
      "csv_display_name": "Percona Distribution for MySQL Operator",
      "csv_metadata_description": "Percona Distribution for MySQL Operator manages the lifecycle of Percona XtraDB cluster instances.",
      "csv_name": "percona-xtradb-cluster-operator-certified.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:56:41.469000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "percona-xtradb-cluster-operator-certified",
      "provided_apis": [
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-6-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-8-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-1-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-4-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBClusterBackup",
          "plural": "perconaxtradbclusterbackups",
          "version": "v1"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-7-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-5-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-9-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-10-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBBackup",
          "plural": "perconaxtradbbackups",
          "version": "v1alpha1"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1alpha1"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-3-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBClusterRestore",
          "plural": "perconaxtradbclusterrestores",
          "version": "v1"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-2-0"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:0e25cf04d10058443c95571e039e8437dcf5875f2b14abcad7a21b0c36826dcf",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:0e25cf04d10058443c95571e039e8437dcf5875f2b14abcad7a21b0c36826dcf",
          "name": "pxc5.7"
        },
        {
          "digest": "sha256:2ff5992220ba251cf064cc2b4d5929e0fdb963db18e35d6c672f9aacb0be3bed",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:2ff5992220ba251cf064cc2b4d5929e0fdb963db18e35d6c672f9aacb0be3bed",
          "name": "pxc5.7-backup"
        },
        {
          "digest": "sha256:dbb944de701dbcd030aacd430a09f5c329c95991bd4257aed8a7407169b7e4b2",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:dbb944de701dbcd030aacd430a09f5c329c95991bd4257aed8a7407169b7e4b2",
          "name": "pxc8.0"
        },
        {
          "digest": "sha256:6ab8efb3804d1e519e49ee10eb46b428a837cfdcee222cc5ae2089cc1dc02a6d",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:6ab8efb3804d1e519e49ee10eb46b428a837cfdcee222cc5ae2089cc1dc02a6d",
          "name": "pxc8.0-backup"
        },
        {
          "digest": "sha256:73d2266258b700a691db6196f4b5c830845d34d57bdef5be5ffbd45e88407309",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator@sha256:73d2266258b700a691db6196f4b5c830845d34d57bdef5be5ffbd45e88407309",
          "name": "operator"
        },
        {
          "digest": "sha256:2f06ac4a0f39b2c0253421c3d024291d5ba19d41e35e633ff6ddcf4ba67fd51a",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:2f06ac4a0f39b2c0253421c3d024291d5ba19d41e35e633ff6ddcf4ba67fd51a",
          "name": "haproxy"
        },
        {
          "digest": "sha256:a727ccc8d9f17bc715309e9cf05b4903f38518a0cfee02a4822c8ac301cb01d6",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:a727ccc8d9f17bc715309e9cf05b4903f38518a0cfee02a4822c8ac301cb01d6",
          "name": "proxysql"
        },
        {
          "digest": "sha256:6e5a945b2a824ee34befd864b98d85727fe3849d83f8942463bca87210c19bca",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:6e5a945b2a824ee34befd864b98d85727fe3849d83f8942463bca87210c19bca",
          "name": "logcollector"
        },
        {
          "digest": "sha256:d25b59fc82a22f65fe90fee6b1b6938fcd8172f534a5d6573914009a39578e1e",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:d25b59fc82a22f65fe90fee6b1b6938fcd8172f534a5d6573914009a39578e1e",
          "name": "pmmclient"
        },
        {
          "digest": "sha256:73d2266258b700a691db6196f4b5c830845d34d57bdef5be5ffbd45e88407309",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator@sha256:73d2266258b700a691db6196f4b5c830845d34d57bdef5be5ffbd45e88407309",
          "name": "percona-xtradb-cluster-operator-73d2266258b700a691db6196f4b5c830845d34d57bdef5be5ffbd45e88407309-annotation"
        },
        {
          "digest": "sha256:73d2266258b700a691db6196f4b5c830845d34d57bdef5be5ffbd45e88407309",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator@sha256:73d2266258b700a691db6196f4b5c830845d34d57bdef5be5ffbd45e88407309",
          "name": "percona-xtradb-cluster-operator"
        },
        {
          "digest": "sha256:6ab8efb3804d1e519e49ee10eb46b428a837cfdcee222cc5ae2089cc1dc02a6d",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:6ab8efb3804d1e519e49ee10eb46b428a837cfdcee222cc5ae2089cc1dc02a6d",
          "name": "percona-xtradb-cluster-operator-containers-6ab8efb3804d1e519e49ee10eb46b428a837cfdcee222cc5ae2089cc1dc02a6d-annotation"
        },
        {
          "digest": "sha256:d25b59fc82a22f65fe90fee6b1b6938fcd8172f534a5d6573914009a39578e1e",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:d25b59fc82a22f65fe90fee6b1b6938fcd8172f534a5d6573914009a39578e1e",
          "name": "percona-xtradb-cluster-operator-containers-d25b59fc82a22f65fe90fee6b1b6938fcd8172f534a5d6573914009a39578e1e-annotation"
        },
        {
          "digest": "sha256:6e5a945b2a824ee34befd864b98d85727fe3849d83f8942463bca87210c19bca",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:6e5a945b2a824ee34befd864b98d85727fe3849d83f8942463bca87210c19bca",
          "name": "percona-xtradb-cluster-operator-containers-6e5a945b2a824ee34befd864b98d85727fe3849d83f8942463bca87210c19bca-annotation"
        },
        {
          "digest": "sha256:a727ccc8d9f17bc715309e9cf05b4903f38518a0cfee02a4822c8ac301cb01d6",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:a727ccc8d9f17bc715309e9cf05b4903f38518a0cfee02a4822c8ac301cb01d6",
          "name": "percona-xtradb-cluster-operator-containers-a727ccc8d9f17bc715309e9cf05b4903f38518a0cfee02a4822c8ac301cb01d6-annotation"
        },
        {
          "digest": "sha256:2f06ac4a0f39b2c0253421c3d024291d5ba19d41e35e633ff6ddcf4ba67fd51a",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:2f06ac4a0f39b2c0253421c3d024291d5ba19d41e35e633ff6ddcf4ba67fd51a",
          "name": "percona-xtradb-cluster-operator-containers-2f06ac4a0f39b2c0253421c3d024291d5ba19d41e35e633ff6ddcf4ba67fd51a-annotation"
        },
        {
          "digest": "sha256:dbb944de701dbcd030aacd430a09f5c329c95991bd4257aed8a7407169b7e4b2",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:dbb944de701dbcd030aacd430a09f5c329c95991bd4257aed8a7407169b7e4b2",
          "name": "percona-xtradb-cluster-operator-containers-dbb944de701dbcd030aacd430a09f5c329c95991bd4257aed8a7407169b7e4b2-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "61d3be8dc6d6ba37322fda25",
      "alm_examples": [
        {
          "api_version": "instana.io/v1",
          "kind": "InstanaAgent",
          "metadata": {
            "name": "instana-agent",
            "namespace": "instana-agent"
          },
          "spec": {
            "agent": {
              "configuration_yaml": "# You can leave this empty, or use this to configure your instana agent.\n# See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n",
              "endpointHost": "ingress-red-saas.instana.io",
              "endpointPort": "443",
              "env": {},
              "key": "replace-key"
            },
            "cluster": {
              "name": "my-cluster"
            },
            "zone": {
              "name": "edited-zone"
            }
          }
        },
        {
          "api_version": "instana.io/v1beta1",
          "kind": "InstanaAgent",
          "metadata": {
            "name": "instana-agent",
            "namespace": "instana-agent"
          },
          "spec": {
            "agent.endpoint.host": "ingress-red-saas.instana.io",
            "agent.endpoint.port": 443,
            "agent.env": {
              "INSTANA_AGENT_TAGS": "example"
            },
            "agent.key": "replace-me",
            "agent.zone.name": "my-zone",
            "cluster.name": "replace-me",
            "config.files": {
              "configuration.yaml": "# You can leave this empty, or use this to configure your instana agent.\n# See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/instana/instana-agent-operator-bundle@sha256:db3c857f8a1248703a1c34578d044f75390a7838f9a80111d1eeb3be79f5d2d4",
      "bundle_path_digest": "sha256:db3c857f8a1248703a1c34578d044f75390a7838f9a80111d1eeb3be79f5d2d4",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T03:27:09.839000+00:00",
      "csv_description": "# Instana\n\nInstana is an [APM solution](https://www.instana.com/product-overview/) built for microservices that enables IT Ops to build applications faster and deliver higher quality services by automating monitoring, tracing and root cause analysis. The solution is optimized for [Kubernetes](https://www.instana.com/automatic-kubernetes-monitoring/) and [OpenShift](https://www.instana.com/blog/automatic-root-cause-analysis-for-openshift-applications/).\n\n## Instana Agent Operator\n\nThis is the Kubernetes Operator for installing the Instana Agent on Kubernetes or OpenShift.\n\n## Prerequisites for OpenShift\n\nBefore the agent will be able to run in OpenShift, you need to perform a couple of extra configuration steps.\n\nYou need to set up a project for the Instana Agent and configure it's permissions.\n\nThe project you create here needs to be the namespace where you create the Instana Agent custom resource that the operator will use to deploy the agent.\n\nFor example, create the `instana-agent` project:\n\n    oc new-project instana-agent\n\nThen, ensure the `instana-agent` service account is in the privileged security context:\n\n    oc adm policy add-scc-to-user privileged -z instana-agent\n\nThis service account will be created by the operator.\n\nNow you can proceed with installing the operator for the Instana agent.\n\n## Installation and Configuration\n\nFirst, install this operator from [OperatorHub.io](https://operatorhub.io/), [OpenShift Container Platform](https://www.openshift.com/), or [OKD](https://www.okd.io/).\n\nSecond, create a custom resource with the agent configuration in the target namespace (for now, this MUST always be the `instana-agent` namespace). The operator will pick up the custom resource and install the Instana agent accordingly.\n\nThe following is a minimal template of the custom resource:\n\n```yaml\napiVersion: instana.io/v1\nkind: InstanaAgent\nmetadata:\n  name: instana-agent\n  namespace: instana-agent\nspec:\n  zone:\n    name: my-zone # (optional) name of the zone of the host\n  cluster:\n    name: replace-me # replace with the name of your Kubernetes cluster\n  agent:\n    key: replace-me # replace with your Instana agent key\n    endpointHost: ingress-red-saas.instana.io # the monitoring ingress endpoint\n    endpointPort: \"443\" # the monitoring ingress endpoint port, wrapped in quotes\n    env:\n      INSTANA_AGENT_TAGS: example\n    configuration_yaml: |\n      # You can leave this empty, or use this to configure your instana agent.\n      # See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n```\n\nSave the template in a file `instana-agent.yaml` and edit the following values:\n\n* If your target namespace is not `instana-agent`, replace the `namespace:` accordingly.\n* `agent.key` must be set with your Instana agent key.\n* `agent.endpointHost` must be set with the monitoring ingress endpoint, generally either `saas-us-west-2.instana.io` or `saas-eu-west-1.instana.io`.\n* `agent.endpointPort` must be set with the monitoring ingress port, generally \"443\" (wrapped in quotes).\n* `zone.name` should be set with the name of the Kubernetes cluster that is be displayed in Instana.\n\nFor advanced configuration, you can edit the contents of the `configuration.yaml` file. View documentation [here](https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/).\n\nApply the custom resource with `kubectl apply -f instana-agent.yaml`. After some time, you should see `instana-agent` Pods being created on each node of your cluster, and your cluster should show on the infrastructure map on your Instana Web interface.\n\n## Uninstalling\n\nIn order to uninstall the Instana agent, simply remove the custom resource with `kubectl delete -f instana-agent.yaml`.\n\n## Source Code\n\nThe Instana agent operator is an open source project hosted on [https://github.com/instana/instana-agent-operator](https://github.com/instana/instana-agent-operator/).\n",
      "csv_display_name": "Instana Agent Operator",
      "csv_metadata_description": "Fully automated Application Performance Monitoring (APM) for microservices.",
      "csv_name": "instana-agent-operator.v2.0.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:23:52.516000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "instana-agent-operator",
      "provided_apis": [
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1"
        },
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:36bfdad2a0d2a92ab119676e7c918919516c0ac33eab36a61129c7b614d3398c",
          "image": "instana/instana-agent-operator@sha256:36bfdad2a0d2a92ab119676e7c918919516c0ac33eab36a61129c7b614d3398c",
          "name": "instana-agent-operator"
        },
        {
          "digest": "sha256:6acfc65f6bcfb653c89f0fd1ec61f59902296666b781c3c3f89688f32b7547ba",
          "image": "instana/agent@sha256:6acfc65f6bcfb653c89f0fd1ec61f59902296666b781c3c3f89688f32b7547ba",
          "name": "instana-agent"
        },
        {
          "digest": "sha256:36bfdad2a0d2a92ab119676e7c918919516c0ac33eab36a61129c7b614d3398c",
          "image": "instana/instana-agent-operator@sha256:36bfdad2a0d2a92ab119676e7c918919516c0ac33eab36a61129c7b614d3398c",
          "name": "instana-agent-operator-36bfdad2a0d2a92ab119676e7c918919516c0ac33eab36a61129c7b614d3398c-annotation"
        },
        {
          "digest": "sha256:36bfdad2a0d2a92ab119676e7c918919516c0ac33eab36a61129c7b614d3398c",
          "image": "instana/instana-agent-operator@sha256:36bfdad2a0d2a92ab119676e7c918919516c0ac33eab36a61129c7b614d3398c",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2.0.3",
      "version_original": "2.0.3"
    },
    {
      "_id": "61d3beb017f914cd72330946",
      "alm_examples": [
        {
          "api_version": "apps.cloudcasa.io/v1",
          "kind": "Cloudcasa",
          "metadata": {
            "name": "cloudcasa"
          },
          "spec": {
            "cluster_id": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/catalogicsoftware/cloudcasa-bundle@sha256:c66f5091446dc889a29da265c8c17c21181fe0fb5409eccd71fc4349c3bf0131",
      "bundle_path_digest": "sha256:c66f5091446dc889a29da265c8c17c21181fe0fb5409eccd71fc4349c3bf0131",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-04T03:27:44.006000+00:00",
      "csv_description": "CloudCasa is a powerful and easy-to-use data protection service for Kubernetes and cloud databases.  Configuration is quick and easy, and basic service is free. \n\n\n### How to Install \n* Create Namespace cloudcasa-operator. \n* Install the CloudCasa Operator by following the instructions presented when you click the Install button. Select **cloudcasa-operator** namespace. \n* After installing the operator, you will need to create an instance of the CloudCasa resource to configure the agent. \n* In order to create the CloudCasa resource you will need to generate a Cluster ID in CloudCasa.\n* Login to https://home.cloudcasa.io and add your OCP cluster under the Protection tab. Note the returned **Cluster ID**.\n* See the CloudCasa [Getting Started Guide](https://cloudcasa.io/get-started) for more information.\n* Navigate to the installed CloudCasa Operator and Click on the CloudCasa tab.\n* Create the CloudCasa resource and provide the **Cluster ID** noted in the previous step.\n\n\n### Supported Features\n\n* **AWS RDS Backup**\n\n* **Kubernetes cluster Backup** \n\n* **Kubernetes cluster restore**\n\n### Installation Checkpoints\n\n* **cloudcasa-io** namespace should be created.\n\n* **kubagent** pod should be created under **cloudcasa-io** namespace and should be in **running state.** \n\n* State of the OCP cluster on CloudCasa web UI should be **Active**.",
      "csv_display_name": "CloudCasa",
      "csv_metadata_description": "CloudCasa is a powerful and easy-to-use data protection service for Kubernetes and cloud databases.",
      "csv_name": "cloudcasa-operator.v2.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:47:24.920000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cloudcasa-operator",
      "provided_apis": [
        {
          "group": "apps.cloudcasa.io",
          "kind": "Cloudcasa",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf",
          "image": "registry.connect.redhat.com/catalogicsoftware/cloudcasa-operator@sha256:31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf",
          "name": "cloudcasa-operator"
        },
        {
          "digest": "sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf",
          "image": "registry.connect.redhat.com/catalogicsoftware/cloudcasa-operator@sha256:31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf",
          "name": "cloudcasa-operator-31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf-annotation"
        },
        {
          "digest": "sha256:31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf",
          "image": "registry.connect.redhat.com/catalogicsoftware/cloudcasa-operator@sha256:31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.2.0",
      "version_original": "2.2.0"
    },
    {
      "_id": "61d3beb1c6d6ba37322fda2a",
      "alm_examples": [
        {
          "api_version": "symphony.spectrumcomputing.ibm.com/v1",
          "kind": "SymphonyCluster",
          "metadata": {
            "name": "symcluster"
          },
          "spec": {
            "client": [
              {
                "build": {
                  "git": {
                    "branch": "master",
                    "path": "samples/sampleapp_cpp",
                    "repository": "https://github.com/IBM/ibm-spectrum-symphony-operator.git"
                  },
                  "image": "registry.connect.redhat.com/ibm/spectrum-symphony@sha256:d6860f11eea6024e51134e58bc1968c41d797bd9555c4e0283224c52ccf17774",
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "2Gi"
                    },
                    "requests": {
                      "cpu": "500m",
                      "memory": "2Gi"
                    }
                  },
                  "serviceAccountName": "builder"
                },
                "image": "",
                "imagePullPolicy": "Always",
                "name": "SampleAppCPP1",
                "resources": {
                  "limits": {
                    "cpu": "250m",
                    "memory": "1Gi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1Gi"
                  }
                },
                "serviceAccountName": ""
              }
            ],
            "cluster": {
              "adminPasswordSecretName": "",
              "cacheImages": true,
              "clusterName": "",
              "enableSharedSubdir": false,
              "entitlementSecretName": "",
              "logsOnShared": false,
              "scriptsSecretName": "",
              "storage": {
                "pvcName": "",
                "pvcSize": "1Gi",
                "selector": {
                  "label": "",
                  "value": ""
                },
                "storageClassName": ""
              },
              "usersPasswordsSecretName": ""
            },
            "compute": {
              "image": "registry.connect.redhat.com/ibm/spectrum-symphony@sha256:1722eae3debcab3354a17c019cb38dc15acb71c6fed33585f669c9caceefc877",
              "imagePullPolicy": "Always",
              "maxReplicas": 64,
              "minReplicas": 1,
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "250m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "250m",
                  "memory": "1Gi"
                }
              },
              "targetCPUUtilizationPercentage": 70,
              "usePodAutoscaler": true
            },
            "licenceAccepted": true,
            "master": {
              "egoRestEnabled": false,
              "image": "registry.connect.redhat.com/ibm/spectrum-symphony@sha256:d6860f11eea6024e51134e58bc1968c41d797bd9555c4e0283224c52ccf17774",
              "imagePullPolicy": "Always",
              "replicaCount": 0,
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "4Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "4Gi"
                }
              },
              "symRestEnabled": false,
              "uiEnabled": true
            },
            "serviceAccountName": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/spectrum-symphony-operator-bundle@sha256:64d375f9e471f8f9918f9257ecc4f80b8a31379c3e4495b38c9039a0bfe0b779",
      "bundle_path_digest": "sha256:64d375f9e471f8f9918f9257ecc4f80b8a31379c3e4495b38c9039a0bfe0b779",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T03:27:45.603000+00:00",
      "csv_description": "Creates IBM Spectrum Symphony Cluster",
      "csv_display_name": "IBM Spectrum Symphony Cluster",
      "csv_metadata_description": "IBM Spectrum Symphony cluster",
      "csv_name": "ibm-spectrum-symphony-operator.v1.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:46:35.853000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "ibm-spectrum-symphony-operator",
      "provided_apis": [
        {
          "group": "symphony.spectrumcomputing.ibm.com",
          "kind": "SymphonyCluster",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1e93089d93c0dc97b60f0425c62f42b2ecaa46ecd5b9a14c6a3e3c3b80f16d33",
          "image": "registry.connect.redhat.com/ibm/spectrum-symphony-operator@sha256:1e93089d93c0dc97b60f0425c62f42b2ecaa46ecd5b9a14c6a3e3c3b80f16d33",
          "name": "spectrum-symphony-operator-1e93089d93c0dc97b60f0425c62f42b2ecaa46ecd5b9a14c6a3e3c3b80f16d33-annotation"
        },
        {
          "digest": "sha256:1e93089d93c0dc97b60f0425c62f42b2ecaa46ecd5b9a14c6a3e3c3b80f16d33",
          "image": "registry.connect.redhat.com/ibm/spectrum-symphony-operator@sha256:1e93089d93c0dc97b60f0425c62f42b2ecaa46ecd5b9a14c6a3e3c3b80f16d33",
          "name": "manager"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d6860f11eea6024e51134e58bc1968c41d797bd9555c4e0283224c52ccf17774",
          "image": "registry.connect.redhat.com/ibm/spectrum-symphony@sha256:d6860f11eea6024e51134e58bc1968c41d797bd9555c4e0283224c52ccf17774",
          "name": "spectrum-symphony-d6860f11eea6024e51134e58bc1968c41d797bd9555c4e0283224c52ccf17774-annotation"
        },
        {
          "digest": "sha256:1722eae3debcab3354a17c019cb38dc15acb71c6fed33585f669c9caceefc877",
          "image": "registry.connect.redhat.com/ibm/spectrum-symphony@sha256:1722eae3debcab3354a17c019cb38dc15acb71c6fed33585f669c9caceefc877",
          "name": "spectrum-symphony-1722eae3debcab3354a17c019cb38dc15acb71c6fed33585f669c9caceefc877-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.1.2",
      "version_original": "1.1.2"
    },
    {
      "_id": "61d3bf13d467cd4ec03ef4e6",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:bb9a141e7420196baf0bfc456ae28d7d150f6b40de987b214d0833207fcc1a3e",
      "bundle_path_digest": "sha256:bb9a141e7420196baf0bfc456ae28d7d150f6b40de987b214d0833207fcc1a3e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-01-04T03:29:23.624000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.2 of the NeuVector Certified Operator deploys version 4.4.2 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:08:24.843000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0",
          "name": "neuvector-operator-a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0-annotation"
        },
        {
          "digest": "sha256:a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:ecc4814bf9e38d41898ae2354bbafd2f1ed7c6e5602bb30cb40486e67725395c",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:ecc4814bf9e38d41898ae2354bbafd2f1ed7c6e5602bb30cb40486e67725395c",
          "name": "controller"
        },
        {
          "digest": "sha256:4621d69ca47929eedcab2c9163fc9d73ede09e0cd14f2a14db495e610590f5c2",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:4621d69ca47929eedcab2c9163fc9d73ede09e0cd14f2a14db495e610590f5c2",
          "name": "enforcer"
        },
        {
          "digest": "sha256:b49ba8bba9aaf292603896d5d3b9e5328b23260dfd977c70e7f3e39460564679",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:b49ba8bba9aaf292603896d5d3b9e5328b23260dfd977c70e7f3e39460564679",
          "name": "manager"
        },
        {
          "digest": "sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "name": "scanner"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "updater"
        },
        {
          "digest": "sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "name": "scanner-d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038-annotation"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "ubi8-228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.3.2",
      "version_original": "1.3.2"
    },
    {
      "_id": "61d3bfa68093b97ef52e1ba6",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:96a04fb99af74bc88406278004fbbdad4ae9b11189fd35347ebc86f065f8ae4b",
      "bundle_path_digest": "sha256:96a04fb99af74bc88406278004fbbdad4ae9b11189fd35347ebc86f065f8ae4b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T03:31:50.522000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:14:49.552000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "name": "COUCHDB-MGMT"
        },
        {
          "digest": "sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "name": "couchdb-operator-4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4-annotation"
        },
        {
          "digest": "sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "name": "couchdb-operator"
        },
        {
          "digest": "sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "name": "couchdb3"
        },
        {
          "digest": "sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "name": "mgmt"
        }
      ],
      "replaces": "",
      "skip_range": ">=1.0.0 <2.2.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.2.0",
      "version_original": "2.2.0"
    },
    {
      "_id": "61d3c66e17f914cd72330986",
      "alm_examples": [
        {
          "api_version": "pxc.percona.com/v1-10-0",
          "kind": "PerconaXtraDBCluster",
          "metadata": {
            "finalizers": [
              "delete-pxc-pods-in-order"
            ],
            "name": "cluster1"
          },
          "spec": {
            "allowUnsafeConfigurations": false,
            "backup": {
              "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:6ab8efb3804d1e519e49ee10eb46b428a837cfdcee222cc5ae2089cc1dc02a6d",
              "pitr": {
                "enabled": false,
                "storageName": "STORAGE-NAME-HERE",
                "timeBetweenUploads": 60
              },
              "schedule": [
                {
                  "keep": 3,
                  "name": "sat-night-backup",
                  "schedule": "0 0 * * 6",
                  "storageName": "s3-us-west"
                },
                {
                  "keep": 5,
                  "name": "daily-backup",
                  "schedule": "0 0 * * *",
                  "storageName": "fs-pvc"
                }
              ],
              "storages": {
                "fs-pvc": {
                  "type": "filesystem",
                  "volume": {
                    "persistentVolumeClaim": {
                      "accessModes": [
                        "ReadWriteOnce"
                      ],
                      "resources": {
                        "requests": {
                          "storage": "6G"
                        }
                      }
                    }
                  }
                },
                "s3-us-west": {
                  "s3": {
                    "bucket": "S3-BACKUP-BUCKET-NAME-HERE",
                    "credentialsSecret": "my-cluster-name-backup-s3",
                    "region": "us-west-2"
                  },
                  "type": "s3"
                }
              }
            },
            "crVersion": "1.10.0",
            "haproxy": {
              "affinity": {
                "antiAffinityTopologyKey": "kubernetes.io/hostname"
              },
              "enabled": true,
              "gracePeriod": 30,
              "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:2f06ac4a0f39b2c0253421c3d024291d5ba19d41e35e633ff6ddcf4ba67fd51a",
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "resources": {
                "requests": {
                  "cpu": "600m",
                  "memory": "1G"
                }
              },
              "size": 3
            },
            "logCollectorSecretName": "my-log-collector-secrets",
            "logcollector": {
              "enabled": true,
              "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:6e5a945b2a824ee34befd864b98d85727fe3849d83f8942463bca87210c19bca",
              "resources": {
                "requests": {
                  "cpu": "200m",
                  "memory": "100M"
                }
              }
            },
            "pmm": {
              "enabled": false,
              "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:d25b59fc82a22f65fe90fee6b1b6938fcd8172f534a5d6573914009a39578e1e",
              "resources": {
                "requests": {
                  "cpu": "300m",
                  "memory": "150M"
                }
              },
              "serverHost": "monitoring-service",
              "serverUser": "admin"
            },
            "proxysql": {
              "affinity": {
                "antiAffinityTopologyKey": "kubernetes.io/hostname"
              },
              "enabled": false,
              "gracePeriod": 30,
              "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:a727ccc8d9f17bc715309e9cf05b4903f38518a0cfee02a4822c8ac301cb01d6",
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "resources": {
                "requests": {
                  "cpu": "600m",
                  "memory": "1G"
                }
              },
              "size": 3,
              "volumeSpec": {
                "persistentVolumeClaim": {
                  "resources": {
                    "requests": {
                      "storage": "2G"
                    }
                  }
                }
              }
            },
            "pxc": {
              "affinity": {
                "antiAffinityTopologyKey": "kubernetes.io/hostname"
              },
              "autoRecovery": true,
              "gracePeriod": 600,
              "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:dbb944de701dbcd030aacd430a09f5c329c95991bd4257aed8a7407169b7e4b2",
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "resources": {
                "requests": {
                  "cpu": "600m",
                  "memory": "1G"
                }
              },
              "size": 3,
              "volumeSpec": {
                "persistentVolumeClaim": {
                  "resources": {
                    "requests": {
                      "storage": "6G"
                    }
                  }
                }
              }
            },
            "secretsName": "my-cluster-secrets",
            "sslInternalSecretName": "my-cluster-ssl-internal",
            "sslSecretName": "my-cluster-ssl",
            "updateStrategy": "SmartUpdate",
            "upgradeOptions": {
              "apply": "8.0-recommended",
              "schedule": "0 4 * * *",
              "versionServiceEndpoint": "https://check.percona.com"
            },
            "vaultSecretName": "keyring-secret-vault"
          }
        },
        {
          "api_version": "pxc.percona.com/v1",
          "kind": "PerconaXtraDBClusterBackup",
          "metadata": {
            "name": "backup1"
          },
          "spec": {
            "pxcCluster": "cluster1",
            "storageName": "fs-pvc"
          }
        },
        {
          "api_version": "pxc.percona.com/v1alpha1",
          "kind": "PerconaXtraDBBackup",
          "metadata": {
            "name": "backup1"
          },
          "spec": {
            "pxcCluster": "cluster1",
            "storageName": "s3-us-west"
          }
        },
        {
          "api_version": "pxc.percona.com/v1",
          "kind": "PerconaXtraDBClusterRestore",
          "metadata": {
            "name": "restore1"
          },
          "spec": {
            "backupName": "backup1",
            "pxcCluster": "cluster1"
          }
        },
        {
          "api_version": "pxc.percona.com/v1",
          "kind": "PerconaXtraDBClusterBackup",
          "metadata": {
            "name": "backup1"
          },
          "spec": {
            "pxcCluster": "cluster1",
            "storageName": "fs-pvc"
          }
        },
        {
          "api_version": "pxc.percona.com/v1alpha1",
          "kind": "PerconaXtraDBBackup",
          "metadata": {
            "name": "backup1"
          },
          "spec": {
            "pxcCluster": "cluster1",
            "storageName": "s3-us-west"
          }
        },
        {
          "api_version": "pxc.percona.com/v1",
          "kind": "PerconaXtraDBClusterRestore",
          "metadata": {
            "name": "restore1"
          },
          "spec": {
            "backupName": "backup1",
            "pxcCluster": "cluster1"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-bundle@sha256:fefce85e617428a43eebe47f6d99d31ff298b797945b0fccb9eff498d133b0fb",
      "bundle_path_digest": "sha256:fefce85e617428a43eebe47f6d99d31ff298b797945b0fccb9eff498d133b0fb",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T04:00:46.348000+00:00",
      "csv_description": "\n## Percona is Cloud Native\n\nPercona Distribution for MySQL Operator is an open-source drop in replacement for MySQL Enterprise with synchronous replication running on Kubernetes. It automates the deployment and management of the members in your Percona XtraDB Cluster environment. It can be used to instantiate a new Percona XtraDB Cluster, or to scale an existing environment.\n\nConsult the [documentation](https://percona.github.io/percona-xtradb-cluster-operator/) on the Percona Distribution for MySQL Operator for complete details on capabilities and options.\n\n### Supported Features\n\n* **Scale Your Cluster**  change the `size` parameter to [add or remove members](https://percona.github.io/percona-xtradb-cluster-operator/install/scaling) of the cluster. Three is the minimum recommended size for a functioning cluster.\n\n* **Manage Your Users**  [add, remove, or change](https://percona.github.io/percona-xtradb-cluster-operator/configure/users) the privileges of database users\n\n* **Automate Your Backups**  [configure cluster backups](https://percona.github.io/percona-xtradb-cluster-operator/configure/operator) to run on a scheduled basis. Backups can be stored on a persistent volume or S3-compatible storage. Leverage [Point-in-time recovery](https://www.percona.com/doc/kubernetes-operator-for-pxc/backups.html#storing-binary-logs-for-point-in-time-recovery) to reduce RPO/RTO.\n* **Proxy integration**  choose HAProxy or ProxySQL as a proxy in front of the Percona XtraDB Cluster. Proxies are deployed and configured automatically with the Operator.\n\n### Common Configurations\n\n* **Set Resource Limits** - set limitation on requests to CPU and memory resources.\n\n* **Customize Storage** - set the desired Storage Class and Access Mode for your database cluster data.\n\n* **Control Scheduling** - define how your PXC Pods are scheduled onto the K8S cluster with tolerations, pod disruption budgets, node selector and affinity settings.\n* Automatic synchronization of MySQL users with ProxySQL\n* HAProxy Support\n* Fully automated minor version updates (Smart Update)\n* Update Reader members before Writer member at cluster upgrades\n* Support MySQL versions 5.7 and 8.0\n### Before You Start\n\nAdd the PXC user `Secret` to Kubernetes. User information must be placed in the data section of the `secrets.yaml`\nfile with Base64-encoded logins and passwords for the user accounts.\n\nBelow is a sample `secrets.yaml` file for the correct formatting.\n\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: my-cluster-secrets\ntype: Opaque\ndata:\n  root: cm9vdF9wYXNzd29yZA==\n  xtrabackup: YmFja3VwX3Bhc3N3b3Jk\n  monitor: bW9uaXRvcg==\n  clustercheck: Y2x1c3RlcmNoZWNrcGFzc3dvcmQ=\n  proxyadmin: YWRtaW5fcGFzc3dvcmQ=\n  pmmserver: c3VwYXxefHBheno=\n  operator: b3BlcmF0b3JhZG1pbg==\n```\n###  Release Highlights\n* Custom sidecar containers allow users to customize Percona XtraDB Cluster and other Operator components without changing the container images. In this release, we enable\n  even more customization, by allowing users to mount volumes into the sidecar containers.\n* In this release, we put a lot of effort into fixing bugs that were reported by the community. We appreciate everyone who helped us with discovering these issues and\n  contributed to the fixes.\n* Mount volumes into sidecar containers to enable customization (Thanks to Sridhar L for contributing) * spec.Backup.serviceAccount and spec.automountServiceAccountToken Custom Resource options can now be used in the Helm chart\n  (Thanks to Gerwin van de Steeg for reporting this issue)\n* The logrotate command now doesn\u2019t use verbose mode to avoid flooding the log with rotate information * Logs are now strictly following JSON specification to simplify parsing * New source_retry_count and source_connect_retry options were added to tune source retries for replication between two clusters * New replicasServiceEnabled option was added to allow disabling the Kubernetes Service for haproxy-replicas, which may be useful to avoid the unwanted forwarding of the\n  application write requests to all Percona XtraDB Cluster instances\n* Logrotate now doesn\u2019t rotate GRA logs (binlog events in ROW format representing the failed transaction) as ordinary log files, storing them for 7 days instead which\n  gives additional time to debug the problem\n\n",
      "csv_display_name": "Percona Distribution for MySQL Operator",
      "csv_metadata_description": "Percona Distribution for MySQL Operator manages the lifecycle of Percona XtraDB cluster instances.",
      "csv_name": "percona-xtradb-cluster-operator-certified.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:46:52.879000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "percona-xtradb-cluster-operator-certified",
      "provided_apis": [
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBClusterBackup",
          "plural": "perconaxtradbclusterbackups",
          "version": "v1"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-10-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "version": "v1-8-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-1-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-7-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBBackup",
          "plural": "perconaxtradbbackups",
          "version": "v1alpha1"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-4-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-3-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-5-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-9-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1alpha1"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBClusterRestore",
          "plural": "perconaxtradbclusterrestores",
          "version": "v1"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-2-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-6-0"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:0e25cf04d10058443c95571e039e8437dcf5875f2b14abcad7a21b0c36826dcf",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:0e25cf04d10058443c95571e039e8437dcf5875f2b14abcad7a21b0c36826dcf",
          "name": "pxc5.7"
        },
        {
          "digest": "sha256:2ff5992220ba251cf064cc2b4d5929e0fdb963db18e35d6c672f9aacb0be3bed",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:2ff5992220ba251cf064cc2b4d5929e0fdb963db18e35d6c672f9aacb0be3bed",
          "name": "pxc5.7-backup"
        },
        {
          "digest": "sha256:dbb944de701dbcd030aacd430a09f5c329c95991bd4257aed8a7407169b7e4b2",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:dbb944de701dbcd030aacd430a09f5c329c95991bd4257aed8a7407169b7e4b2",
          "name": "pxc8.0"
        },
        {
          "digest": "sha256:6ab8efb3804d1e519e49ee10eb46b428a837cfdcee222cc5ae2089cc1dc02a6d",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:6ab8efb3804d1e519e49ee10eb46b428a837cfdcee222cc5ae2089cc1dc02a6d",
          "name": "pxc8.0-backup"
        },
        {
          "digest": "sha256:73d2266258b700a691db6196f4b5c830845d34d57bdef5be5ffbd45e88407309",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator@sha256:73d2266258b700a691db6196f4b5c830845d34d57bdef5be5ffbd45e88407309",
          "name": "operator"
        },
        {
          "digest": "sha256:2f06ac4a0f39b2c0253421c3d024291d5ba19d41e35e633ff6ddcf4ba67fd51a",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:2f06ac4a0f39b2c0253421c3d024291d5ba19d41e35e633ff6ddcf4ba67fd51a",
          "name": "haproxy"
        },
        {
          "digest": "sha256:a727ccc8d9f17bc715309e9cf05b4903f38518a0cfee02a4822c8ac301cb01d6",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:a727ccc8d9f17bc715309e9cf05b4903f38518a0cfee02a4822c8ac301cb01d6",
          "name": "proxysql"
        },
        {
          "digest": "sha256:6e5a945b2a824ee34befd864b98d85727fe3849d83f8942463bca87210c19bca",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:6e5a945b2a824ee34befd864b98d85727fe3849d83f8942463bca87210c19bca",
          "name": "logcollector"
        },
        {
          "digest": "sha256:d25b59fc82a22f65fe90fee6b1b6938fcd8172f534a5d6573914009a39578e1e",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:d25b59fc82a22f65fe90fee6b1b6938fcd8172f534a5d6573914009a39578e1e",
          "name": "pmmclient"
        },
        {
          "digest": "sha256:73d2266258b700a691db6196f4b5c830845d34d57bdef5be5ffbd45e88407309",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator@sha256:73d2266258b700a691db6196f4b5c830845d34d57bdef5be5ffbd45e88407309",
          "name": "percona-xtradb-cluster-operator-73d2266258b700a691db6196f4b5c830845d34d57bdef5be5ffbd45e88407309-annotation"
        },
        {
          "digest": "sha256:73d2266258b700a691db6196f4b5c830845d34d57bdef5be5ffbd45e88407309",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator@sha256:73d2266258b700a691db6196f4b5c830845d34d57bdef5be5ffbd45e88407309",
          "name": "percona-xtradb-cluster-operator"
        },
        {
          "digest": "sha256:6ab8efb3804d1e519e49ee10eb46b428a837cfdcee222cc5ae2089cc1dc02a6d",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:6ab8efb3804d1e519e49ee10eb46b428a837cfdcee222cc5ae2089cc1dc02a6d",
          "name": "percona-xtradb-cluster-operator-containers-6ab8efb3804d1e519e49ee10eb46b428a837cfdcee222cc5ae2089cc1dc02a6d-annotation"
        },
        {
          "digest": "sha256:d25b59fc82a22f65fe90fee6b1b6938fcd8172f534a5d6573914009a39578e1e",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:d25b59fc82a22f65fe90fee6b1b6938fcd8172f534a5d6573914009a39578e1e",
          "name": "percona-xtradb-cluster-operator-containers-d25b59fc82a22f65fe90fee6b1b6938fcd8172f534a5d6573914009a39578e1e-annotation"
        },
        {
          "digest": "sha256:6e5a945b2a824ee34befd864b98d85727fe3849d83f8942463bca87210c19bca",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:6e5a945b2a824ee34befd864b98d85727fe3849d83f8942463bca87210c19bca",
          "name": "percona-xtradb-cluster-operator-containers-6e5a945b2a824ee34befd864b98d85727fe3849d83f8942463bca87210c19bca-annotation"
        },
        {
          "digest": "sha256:a727ccc8d9f17bc715309e9cf05b4903f38518a0cfee02a4822c8ac301cb01d6",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:a727ccc8d9f17bc715309e9cf05b4903f38518a0cfee02a4822c8ac301cb01d6",
          "name": "percona-xtradb-cluster-operator-containers-a727ccc8d9f17bc715309e9cf05b4903f38518a0cfee02a4822c8ac301cb01d6-annotation"
        },
        {
          "digest": "sha256:2f06ac4a0f39b2c0253421c3d024291d5ba19d41e35e633ff6ddcf4ba67fd51a",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:2f06ac4a0f39b2c0253421c3d024291d5ba19d41e35e633ff6ddcf4ba67fd51a",
          "name": "percona-xtradb-cluster-operator-containers-2f06ac4a0f39b2c0253421c3d024291d5ba19d41e35e633ff6ddcf4ba67fd51a-annotation"
        },
        {
          "digest": "sha256:dbb944de701dbcd030aacd430a09f5c329c95991bd4257aed8a7407169b7e4b2",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:dbb944de701dbcd030aacd430a09f5c329c95991bd4257aed8a7407169b7e4b2",
          "name": "percona-xtradb-cluster-operator-containers-dbb944de701dbcd030aacd430a09f5c329c95991bd4257aed8a7407169b7e4b2-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "61d3c6a68093b97ef52e1bc9",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:acad9af174541d2b39a02a216dd462ee0d47d8dc3c9cb44371f0a6bbf1c83d3d",
      "bundle_path_digest": "sha256:acad9af174541d2b39a02a216dd462ee0d47d8dc3c9cb44371f0a6bbf1c83d3d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T04:01:42.365000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:21:11.351000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator-879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d-annotation"
        },
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:490db38c4cc1aa124f6ddd020f3ef6f8f1dfdf0913a25b2cfba9952dd2c0d6d5",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:490db38c4cc1aa124f6ddd020f3ef6f8f1dfdf0913a25b2cfba9952dd2c0d6d5",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.4.1",
      "version_original": "8.4.1"
    },
    {
      "_id": "61d3c6af17f914cd72330992",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "OpenshiftArtifactoryHa",
          "metadata": {
            "name": "openshiftartifactoryha"
          },
          "spec": {
            "artifactory-ha": {
              "artifactory": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/artifactory-pro",
                  "tag": "7.27.9-1"
                },
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE",
                "node": {
                  "replicaCount": 2,
                  "waitForPrimaryStartup": {
                    "enabled": false
                  }
                },
                "uid": "1000721030"
              },
              "database": {
                "driver": "OVERRIDE",
                "password": "OVERRIDE",
                "type": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "databaseUpgradeReady": true,
              "initContainerImage": "registry.connect.redhat.com/jfrog/init@sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
              "nginx": {
                "gid": "1000720107",
                "http": {
                  "externalPort": 80,
                  "internalPort": 8080
                },
                "https": {
                  "externalPort": 443,
                  "internalPort": 8443
                },
                "image": {
                  "registry": "registry.redhat.io",
                  "repository": "rhel8/nginx-116",
                  "tag": "latest"
                },
                "service": {
                  "ssloffload": false
                },
                "tlsSecretName": "OVERRIDE",
                "uid": "1000720104"
              },
              "postgresql": {
                "enabled": false
              },
              "waitForDatabase": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/artifactory-operator-bundle@sha256:7f0eac75c3ad62bff844979c3f7cf1bf8553caa2c28e38c59299979a452bfb28",
      "bundle_path_digest": "sha256:7f0eac75c3ad62bff844979c3f7cf1bf8553caa2c28e38c59299979a452bfb28",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-04T04:01:51.617000+00:00",
      "csv_description": " ## Breaking change\nPlease update to version 1.1.10 of the operator.\nVersion 1.1.8 and 1.1.9 have issues. Please skip these versions.\n\n## Overview\nOpenshift Operator to deploy JFrog Artifactory Enterprise into your Openshift cluster.\n## Security Context Constraints\nTo deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc.\n```\noc adm policy add-scc-to-user anyuid -z artifactory-ha-operator -n openshift-operators\n```\nAdd the service account for the Artifactory chart to deploy successfully:\n``` oc adm policy add-scc-to-user anyuid -z openshiftartifactoryha-artifactory-ha -n artifactory ```\n### Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Artifactory Enterprise Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Artifactory Enterprise Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Artifactory HA.\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\nDATABASE_TYPE\nDATABASE_DRIVER\nDATABASE_URL\nDATABASE_USER\nDATABASE_PASSWORD\n```\nMaster key and Join key must be supplied. To generate a new key for each run the command below:\n\n```\n# Create a key\nexport JOIN_KEY=$(openssl rand -hex 32)\necho ${JOIN_KEY}\n```\n\nTo use TLS you will need to first create a k8s tls secret to store your .crt and .key file into.\nThen supply the value of this k8s secret into the TLS_SECRET field.\n``` oc create secret tls my_tls_secret --cert=tls.crt --key=tls.key --namespace=my_namespace ```\nClick Create for Artifactory Enterprise to deploy into OpenShift and connect to it on the external IP exposed by the load balancer.\n### Create a route\nTo expose Artifactory from Openshift we recommend you create a new route in Openshift.\nYou can either use the oc command line tool or the Openshift web console to generate a new route.\nDepending upon where you terminate TLS you will need to either specify pass through or edge.\nCommand Line (Edge):\n``` oc create route edge --service=openshiftartifactory-ha --cert=tls.crt --key=tls.key --ca-cert=ca.crt --hostname=www.example.com ```\nOr for more information visit the official Openshift documentation on routes here:\nhttps://docs.openshift.com/container-platform/4.6/networking/routes/route-configuration.html\n\n",
      "csv_display_name": "JFrog Artifactory Enterprise Operator",
      "csv_metadata_description": "JFrog Artifactory Enterprise deploys Artifactory in a high availability environment across multiple pods",
      "csv_name": "artifactory-ha-operator.v1.1.21",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:36:27.671000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "plural": "openshiftartifactoryhas",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:7f06776ddcaffa1f4c3ca74b0d71f7fd11a6af5b0f2f42ade89a7f4ef4011296",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:7f06776ddcaffa1f4c3ca74b0d71f7fd11a6af5b0f2f42ade89a7f4ef4011296",
          "name": "artifactory-pro"
        },
        {
          "digest": "sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "name": "artifactory-operator"
        },
        {
          "digest": "sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "name": "nginx"
        },
        {
          "digest": "sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "name": "artifactory-operator-65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f-annotation"
        },
        {
          "digest": "sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "name": "artifactory-ha-operator"
        },
        {
          "digest": "sha256:7f06776ddcaffa1f4c3ca74b0d71f7fd11a6af5b0f2f42ade89a7f4ef4011296",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:7f06776ddcaffa1f4c3ca74b0d71f7fd11a6af5b0f2f42ade89a7f4ef4011296",
          "name": "artifactory_image_repository"
        },
        {
          "digest": "sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "name": "nginx_image_repository"
        },
        {
          "digest": "sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
          "name": "init-9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.1.21",
      "version_original": "1.1.21"
    },
    {
      "_id": "61d3c6d0c6d6ba37322fda75",
      "alm_examples": [
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AirgappedDeployment",
          "metadata": {
            "name": "airgappeddeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AnalyticsProxy",
          "metadata": {
            "name": "analyticsproxy"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "DeleteCluster",
          "metadata": {
            "name": "deletecluster"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "FullDeployment",
          "metadata": {
            "name": "fulldeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "GenerateKey",
          "metadata": {
            "name": "bas-api-key"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "StoreForwardMetric",
          "metadata": {
            "name": "storeforwardmetric"
          },
          "spec": {
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "Dashboard",
          "metadata": {
            "name": "dashboard"
          },
          "spec": {
            "enable_test_api": true,
            "image_pull_secret": "bas-images-pull-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator-bundle@sha256:1113bb05d4dae37249cbdea23dc0b72eac99bd33e7a6ad1d723e74d423c14be9",
      "bundle_path_digest": "sha256:1113bb05d4dae37249cbdea23dc0b72eac99bd33e7a6ad1d723e74d423c14be9",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-04T04:02:24.499000+00:00",
      "csv_description": "Behavior Analytics Services Operator is a service that collects, transforms and transmits product usage data.\nThe Operator supports deployments using-\nA. Dashboard\nB. Openshift portal or CLI\n\n**A. Dashboard**\n----\nWhen the Operator is installed, the Dashboard is installed too. Goto the Dashboard Custom Resource to get the URL to the Dashboard.\n\n\n**B. Openshift portal or CLI**\n----\n----\nFor manual installation using Openshift portal or CLI, follow the steps below\n\n\n**Pre-requisites**\n----\nStep 1: Create a new Project\n```sh\noc new-project <project-name>\n```\n\nStep 2: Create a secret named \"database-credentials\" for PostgreSQL DB\n```sh\n oc create secret generic database-credentials --from-literal=db_username=<DB Username> --from-literal=db_password=<DB Password> -n <project-name>\n```\n\nStep 3: [Optional] If the images require a secret to pull the container images, create a secret of type dockerconfigjson. Pass this secret name in the CR spec image\\_pull\\_secret\n```sh\noc create secret generic bas-images-pull-secret --from-file=.dockerconfigjson=<path/to/.docker/config.json>  --type=kubernetes.io/dockerconfigjson\n```\n\nStep 4: Create a secret named \"mtls-proxy-secret\" which has the client key and certificate to connect to IBM Proxy service. If you don't have certificates then refer link https://developers.cloudflare.com/access/service-auth/mtls-testing#generating-the-root-ca to create root and client certificates. Please ensure to share root certificate with edge@us.ibm.com to allow access to IBM proxy service using client certificate.\n```sh\noc create secret tls mtls-proxy-secret --key client-key.pem --cert client.pem\n```\n\n**Installing the Behavior Analytics Services**\n----\n\nSelect any one of the deployments to setup the Behavior Analytics Services\n1. Full Deployment\n2. Analytics Proxy Deployment\n3. Store and Forward metrics Deployment\n4. Airgapped Analytics Proxy Deployment\n\n| Spec                                                      | Description                                                      | Default Value          |\n| --------------------------------------------------------- | ------------------------------------------------------------ | ---------------------- |\n| `ibmproxyurl`                                               | URL of IBM Proxy Service                                     | `https://iaps.ibm.com`   |\n| `postgres.storage_class`                                    | Storage class of type ReadWriteOnce                          | Required user input        |\n| `postgres.size`                                             | Size (in G) of the storage to be attached to Database        | `10G`                    |\n| `kafka.storage_class`                                       | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.storage_size`                                        | Size (in G) of the storage to be attached to Kafka  | `5G`                     |\n| `kafka.zookeeper_storage_class`                                 | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.zookeeper_storage_size`                                 | Size (in G) of the storage to be attached to Zookeeper | `5G`                     |\n| `airgapped.enabled`                                         | Set value to \"true\" if airgapped setup is to be enabled otherwise keep the default value \"false\" | `false`                  |\n| `airgapped.backup_retention_period`   | Number of days to keep the backup files in the storage       | `7`                     |\n| `airgapped.backup_deletion_frequency` | Frequency of job to delete files from the storage. It accepts values in Cron format (https://en.wikipedia.org/wiki/Cron) | `@daily`                 |\n| `event_scheduler_frequency`                               | Frequency at which events will be forwarded to proxy in Cron format. In case if internet connection available on the cluster only during a certain time frame, specify time in UTC equivalent Cron format. | `@hourly`                |\n| `prometheus_scheduler_frequency`                          | Frequency in Cronjob format to pull metrics from Prometheus  | `@daily`                |\n| `image_pull_secret`                                       | Secret to pull container images from registry                | `bas-images-pull-secret` |\n| `db_archive.frequency`                                    | Frequency in Cronjob format to run archive job                                                           | `@monthly`             |\n| `db_archive.retention_age`                                | Number of months to retain the data in Database              | `6`                    |\n| `db_archive.persistent_storage.storage_class`             |Storage class of type ReadWriteMany         | Required user input    |\n| `db_archive.persistent_storage.storage_size`              | Size (in G) of the storage to be attached for saving airgapped files | `10G`                  |\n| `prometheus_metrics`                                      | Array of metrics information to be send to destination at desired frequency | []\n| `env_type`              | Type of environment. Can be **prod** (HA) or **lite** (non HA)   | `lite`                  |\n| `allowed_domains`                                         | Comma separated values of domains allowed by BAS. By default all domains are allowed | '*'\n\n\n**Generating the API Key**\n----\nOnce the deployment is complete, to use the Behavior Analytics Services Endpoints, generate an API key using the CR GenerateKey. This API key to be used to authenticate Behavior Analytics Services Endpoints.\n\nNote- Key can be retrieved from the secret with same name used while creating Generate Key CR's instance.\nOnce you get key from the secret, decode it using below command:\n```sh\necho -n <secret key> | base64 -d\n```\n\n**Deleting the API Key**\n----\nTo revoke the Key, delete the corresponding GenerateKey instance.\n\n**Using Behavior Analytics Services Endpoints**\n---\nFor all BAS APIs, use the Generated API Key for Authentication. Pass it as the Header- X-API-KEY and the key while using the APIs.\n",
      "csv_display_name": "Behavior Analytics Services",
      "csv_metadata_description": "Behavior Analytics Services is a service that collects, transforms and transmits product usage data.",
      "csv_name": "behavior-analytics-services-operator-certified.v1.1.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:52:06.473000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "behavior-analytics-services-operator-certified",
      "provided_apis": [
        {
          "group": "bas.ibm.com",
          "kind": "DeleteCluster",
          "plural": "deleteclusters",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "FullDeployment",
          "plural": "fulldeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "GenerateKey",
          "plural": "generatekeys",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "StoreForwardMetric",
          "plural": "storeforwardmetrics",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AirgappedDeployment",
          "plural": "airgappeddeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AnalyticsProxy",
          "plural": "analyticsproxies",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "Dashboard",
          "plural": "dashboards",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:c30a58a4f7a6457bf7da404ccde64f58f26162eeee0be9cc01ad517542027e2a",
          "image": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator@sha256:c30a58a4f7a6457bf7da404ccde64f58f26162eeee0be9cc01ad517542027e2a",
          "name": "behavior-analytics-services-operator"
        },
        {
          "digest": "sha256:8e0f1d33edf005eb2dfafed9b8367435b0f33ef4adf006bc75338f2a88e8942c",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:8e0f1d33edf005eb2dfafed9b8367435b0f33ef4adf006bc75338f2a88e8942c",
          "name": "dashboardinstaller"
        },
        {
          "digest": "sha256:b35f209bb491f88da6a9e6ca2b55675a4d0eeb69c4a369a07704cd9a9443a058",
          "image": "registry.connect.redhat.com/ibm-edge/event-api@sha256:b35f209bb491f88da6a9e6ca2b55675a4d0eeb69c4a369a07704cd9a9443a058",
          "name": "event_api"
        },
        {
          "digest": "sha256:a606caf41cb689bb3496d1e76312ebbbe531ab5df52d4d0813bd7763cc170da1",
          "image": "registry.connect.redhat.com/ibm-edge/store-api@sha256:a606caf41cb689bb3496d1e76312ebbbe531ab5df52d4d0813bd7763cc170da1",
          "name": "store_api"
        },
        {
          "digest": "sha256:0b5a7b02e4cb4baf0e08171fdd1d7d35a16bb82254ff2e245e051e483f6cd08c",
          "image": "registry.connect.redhat.com/ibm-edge/event-reader@sha256:0b5a7b02e4cb4baf0e08171fdd1d7d35a16bb82254ff2e245e051e483f6cd08c",
          "name": "reader"
        },
        {
          "digest": "sha256:caf7464165c82783ec83f0cffd1163cbfdffc4bad1f81def00dd3a25ae8a806c",
          "image": "registry.connect.redhat.com/ibm-edge/event-scheduler@sha256:caf7464165c82783ec83f0cffd1163cbfdffc4bad1f81def00dd3a25ae8a806c",
          "name": "event_scheduler"
        },
        {
          "digest": "sha256:08ba04c0c3a0966568538ac709f7bb243f7768c1f200c1a7c99e2761144a9a6b",
          "image": "registry.connect.redhat.com/ibm-edge/prometheus-scheduler@sha256:08ba04c0c3a0966568538ac709f7bb243f7768c1f200c1a7c99e2761144a9a6b",
          "name": "prometheus_scheduler"
        },
        {
          "digest": "sha256:90ddecb54abe2880b86016a407507cecf77a113b4c7724235ab0abd21ad1d9aa",
          "image": "registry.connect.redhat.com/ibm-edge/pgo-client@sha256:90ddecb54abe2880b86016a407507cecf77a113b4c7724235ab0abd21ad1d9aa",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:815630d23e8d88664907fbf8096952adfd22593a4989063e9dd55549e674ee15",
          "image": "registry.connect.redhat.com/ibm-edge/reverse-proxy@sha256:815630d23e8d88664907fbf8096952adfd22593a4989063e9dd55549e674ee15",
          "name": "nginx"
        },
        {
          "digest": "sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "image": "registry.redhat.io/openshift4/ose-grafana@sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "name": "grafana"
        },
        {
          "digest": "sha256:c305e8a59ed5a6f100dd263c34743ad688c999c82cfdef76806d9e01b93834b6",
          "image": "registry.redhat.io/openshift3/ose-kube-rbac-proxy@sha256:c305e8a59ed5a6f100dd263c34743ad688c999c82cfdef76806d9e01b93834b6",
          "name": "ksm"
        },
        {
          "digest": "sha256:0c53b2cd52735491f15c39898c7d1347de6518a7cbff2c1bfc20623e29351361",
          "image": "registry.connect.redhat.com/ibm-edge/growth-stack-base@sha256:0c53b2cd52735491f15c39898c7d1347de6518a7cbff2c1bfc20623e29351361",
          "name": "init_container"
        },
        {
          "digest": "sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "image": "registry.access.redhat.com/ubi8/ubi@sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "name": "ubi"
        },
        {
          "digest": "sha256:19a8b33e2f4c2beee5266d5243abb7f43d85322fc62800899759cdf6ec568fee",
          "image": "registry.connect.redhat.com/ibm-edge/airgap-download-ui@sha256:19a8b33e2f4c2beee5266d5243abb7f43d85322fc62800899759cdf6ec568fee",
          "name": "download_ui"
        },
        {
          "digest": "sha256:d9034bf774c1cdf7933706eb76f274c57d1aeded7f59db747bfd9f0f2ac7581a",
          "image": "registry.connect.redhat.com/ibm-edge/bas-operator-dashboard@sha256:d9034bf774c1cdf7933706eb76f274c57d1aeded7f59db747bfd9f0f2ac7581a",
          "name": "dashboard_ui"
        },
        {
          "digest": "sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "image": "registry.connect.redhat.com/crunchydata/pgo-deployer@sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "name": "pgo_deployer"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.1.1",
      "version_original": "1.1.1"
    },
    {
      "_id": "61d3f29017f914cd72330a18",
      "alm_examples": [
        {
          "api_version": "symphony.spectrumcomputing.ibm.com/v1",
          "kind": "SymphonyCluster",
          "metadata": {
            "name": "symcluster"
          },
          "spec": {
            "client": [
              {
                "build": {
                  "git": {
                    "branch": "master",
                    "path": "samples/sampleapp_cpp",
                    "repository": "https://github.com/IBM/ibm-spectrum-symphony-operator.git"
                  },
                  "image": "registry.connect.redhat.com/ibm/spectrum-symphony@sha256:d6860f11eea6024e51134e58bc1968c41d797bd9555c4e0283224c52ccf17774",
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "2Gi"
                    },
                    "requests": {
                      "cpu": "500m",
                      "memory": "2Gi"
                    }
                  },
                  "serviceAccountName": "builder"
                },
                "image": "",
                "imagePullPolicy": "Always",
                "name": "SampleAppCPP1",
                "resources": {
                  "limits": {
                    "cpu": "250m",
                    "memory": "1Gi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1Gi"
                  }
                },
                "serviceAccountName": ""
              }
            ],
            "cluster": {
              "adminPasswordSecretName": "",
              "cacheImages": true,
              "clusterName": "",
              "enableSharedSubdir": false,
              "entitlementSecretName": "",
              "logsOnShared": false,
              "scriptsSecretName": "",
              "storage": {
                "pvcName": "",
                "pvcSize": "1Gi",
                "selector": {
                  "label": "",
                  "value": ""
                },
                "storageClassName": ""
              },
              "usersPasswordsSecretName": ""
            },
            "compute": {
              "image": "registry.connect.redhat.com/ibm/spectrum-symphony@sha256:1722eae3debcab3354a17c019cb38dc15acb71c6fed33585f669c9caceefc877",
              "imagePullPolicy": "Always",
              "maxReplicas": 64,
              "minReplicas": 1,
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "250m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "250m",
                  "memory": "1Gi"
                }
              },
              "targetCPUUtilizationPercentage": 70,
              "usePodAutoscaler": true
            },
            "licenceAccepted": true,
            "master": {
              "egoRestEnabled": false,
              "image": "registry.connect.redhat.com/ibm/spectrum-symphony@sha256:d6860f11eea6024e51134e58bc1968c41d797bd9555c4e0283224c52ccf17774",
              "imagePullPolicy": "Always",
              "replicaCount": 0,
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "4Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "4Gi"
                }
              },
              "symRestEnabled": false,
              "uiEnabled": true
            },
            "serviceAccountName": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/spectrum-symphony-operator-bundle@sha256:64d375f9e471f8f9918f9257ecc4f80b8a31379c3e4495b38c9039a0bfe0b779",
      "bundle_path_digest": "sha256:64d375f9e471f8f9918f9257ecc4f80b8a31379c3e4495b38c9039a0bfe0b779",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T07:09:04.004000+00:00",
      "csv_description": "Creates IBM Spectrum Symphony Cluster",
      "csv_display_name": "IBM Spectrum Symphony Cluster",
      "csv_metadata_description": "IBM Spectrum Symphony cluster",
      "csv_name": "ibm-spectrum-symphony-operator.v1.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:42:12.546000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "ibm-spectrum-symphony-operator",
      "provided_apis": [
        {
          "group": "symphony.spectrumcomputing.ibm.com",
          "kind": "SymphonyCluster",
          "plural": "symphonyclusters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1e93089d93c0dc97b60f0425c62f42b2ecaa46ecd5b9a14c6a3e3c3b80f16d33",
          "image": "registry.connect.redhat.com/ibm/spectrum-symphony-operator@sha256:1e93089d93c0dc97b60f0425c62f42b2ecaa46ecd5b9a14c6a3e3c3b80f16d33",
          "name": "spectrum-symphony-operator-1e93089d93c0dc97b60f0425c62f42b2ecaa46ecd5b9a14c6a3e3c3b80f16d33-annotation"
        },
        {
          "digest": "sha256:1e93089d93c0dc97b60f0425c62f42b2ecaa46ecd5b9a14c6a3e3c3b80f16d33",
          "image": "registry.connect.redhat.com/ibm/spectrum-symphony-operator@sha256:1e93089d93c0dc97b60f0425c62f42b2ecaa46ecd5b9a14c6a3e3c3b80f16d33",
          "name": "manager"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d6860f11eea6024e51134e58bc1968c41d797bd9555c4e0283224c52ccf17774",
          "image": "registry.connect.redhat.com/ibm/spectrum-symphony@sha256:d6860f11eea6024e51134e58bc1968c41d797bd9555c4e0283224c52ccf17774",
          "name": "spectrum-symphony-d6860f11eea6024e51134e58bc1968c41d797bd9555c4e0283224c52ccf17774-annotation"
        },
        {
          "digest": "sha256:1722eae3debcab3354a17c019cb38dc15acb71c6fed33585f669c9caceefc877",
          "image": "registry.connect.redhat.com/ibm/spectrum-symphony@sha256:1722eae3debcab3354a17c019cb38dc15acb71c6fed33585f669c9caceefc877",
          "name": "spectrum-symphony-1722eae3debcab3354a17c019cb38dc15acb71c6fed33585f669c9caceefc877-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.1.2",
      "version_original": "1.1.2"
    },
    {
      "_id": "61d3f2e1c6d6ba37322fdb11",
      "alm_examples": [
        {
          "api_version": "apps.openliberty.io/v1beta2",
          "kind": "OpenLibertyApplication",
          "metadata": {
            "name": "openliberty-app-sample"
          },
          "spec": {
            "applicationImage": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
            "expose": true,
            "replicas": 1
          }
        },
        {
          "api_version": "apps.openliberty.io/v1beta2",
          "kind": "OpenLibertyDump",
          "metadata": {
            "name": "openliberty-dump-sample"
          },
          "spec": {
            "include": [
              "thread",
              "heap"
            ],
            "podName": "Specify_Pod_Name_Here"
          }
        },
        {
          "api_version": "apps.openliberty.io/v1beta2",
          "kind": "OpenLibertyTrace",
          "metadata": {
            "name": "openliberty-trace-sample"
          },
          "spec": {
            "maxFileSize": 20,
            "maxFiles": 5,
            "podName": "Specify_Pod_Name_Here",
            "traceSpecification": "*=info:com.ibm.ws.webcontainer*=all"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/open-liberty-operator-bundle@sha256:88ff3cd847c4b606466b1e782cec0dfbdb62fb3dd0e4e1bc8b9c2d1016c74132",
      "bundle_path_digest": "sha256:88ff3cd847c4b606466b1e782cec0dfbdb62fb3dd0e4e1bc8b9c2d1016c74132",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "beta2",
      "creation_date": "2022-01-04T07:10:25.538000+00:00",
      "csv_description": "This advanced Operator can be used to deploy and manage Open Liberty applications with consistent, production-grade QoS. This operator is based on the [Runtime Component Operator](https://github.com/application-stacks/runtime-component-operator) and provides all of its capabilities in addition to Open Liberty specific features such as gathering traces and dumps (Day-2 operations) and easily configuring and managing the single sign-on information for your Open Liberty applications.\n\nOpen Liberty Operator enables enterprise architects to govern the way their applications get deployed & managed in the cluster, while dramatically reducing the learning curve for developers to deploy into Kubernetes - allowing them to focus on writing the code! Here are some key features:\n\n#### Application Lifecyle\nYou can deploy your Open Liberty application container by either pointing to a container image, or an OpenShift ImageStream. When using an ImageStream the Operator will watch for any updates and will re-deploy the modified image.\n\n#### Custom RBAC\nThis Operator is capable of using a custom ServiceAccount from the caller, allowing it to follow RBAC restrictions. By default it creates a ServiceAccount if one is not specified, which can also be bound with specific roles.\n\n#### Environment Configuration\nYou can configure a variety of artifacts with your deployment, such as: labels, annotations, and environment variables from a ConfigMap, a Secret or a value.\n\n#### Routing\nExpose your application to external users via a single toggle to create a Route on OpenShift or an Ingress on other Kubernetes environments. Advanced configuration, such as TLS settings, are also easily enabled. Expiring Route certificates are re-issued.\n\n#### High Availability via Horizontal Pod Autoscaling\nRun multiple instances of your application for high availability. Either specify a static number of replicas or easily configure horizontal auto scaling to create (and delete) instances based on resource consumption.\n\n#### Persistence and advanced storage\nEnable persistence for your application by specifying simple requirements: just tell us the size of the storage and where you would like it to be mounted and We will create and manage that storage for you.\nThis toggles a StatefulSet resource instead of a Deployment resource, so your container can recover transactions and state upon a pod restart.\nWe offer an advanced mode where the user specifies a built-in PersistentVolumeClaim, allowing them to configure many details of the persistent volume, such as its storage class and access mode.\nYou can also easily configure and use a single storage for serviceability related Day-2 operations, such as gatherig server traces and dumps.\n\n#### Service Binding\nYour runtime components can expose services by a simple toggle. We take care of the heavy lifting such as creating kubernetes Secrets with information other services can use to bind. We also keep the bindable information synchronized, so your applications can dynamically reconnect to its required services without any intervention or interruption.\n\n#### Single Sign-On (SSO)\nOpen Liberty provides capabilities to delegate authentication to external providers. Your application users can log in using their existing social media credentials from providers such as Google, Facebook, LinkedIn, Twitter, GitHub, and any OpenID Connect (OIDC) or OAuth 2.0 clients. Open Liberty Operator allows to easily configure and manage the single sign-on information for your applications.\n\n#### Exposing metrics to Prometheus\nThe Open Liberty Operator exposes the runtime container's metrics via the [Prometheus Operator](https://operatorhub.io/operator/prometheus).\nUsers can pick between a basic mode, where they simply specify the label that Prometheus is watching to scrape the metrics from the container, or they can specify the full `ServiceMonitor` spec embedded into the OpenLibertyApplication's `spec.monitoring` key controlling things like the poll internal and security credentials.\n\n#### Easily mount logs and transaction directories\nIf you need to mount the logs and transaction data from your application to an external volume such as NFS (or any storage supported in your cluster), simply add the following (customizing the folder location and size) to your OpenLibertyApplication CR:\n``` storage: size: 2Gi mountPath: \"/logs\" ```\n\n#### Integration with OpenShift Serverless\nDeploy your serverless runtime component using a single toggle.  The Operator will convert all of its generated resources into [Knative](https://knative.dev) resources, allowing your pod to automatically scale to 0 when it is idle.\n\n#### Integration with OpenShift's Topology UI\nWe set the corresponding labels to support OpenShift's Developer Topology UI, which allows you to visualize your entire set of deployments and how they are connected.\n\nSee our [**documentation**](https://github.com/OpenLiberty/open-liberty-operator/tree/main/doc/) for more information.\n",
      "csv_display_name": "Open Liberty",
      "csv_metadata_description": "Deploy and manage applications running on Liberty",
      "csv_name": "open-liberty-operator.v0.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:20:33.383000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "open-liberty-certified",
      "provided_apis": [
        {
          "group": "apps.openliberty.io",
          "kind": "OpenLibertyTrace",
          "plural": "openlibertytraces",
          "version": "v1beta2"
        },
        {
          "group": "apps.openliberty.io",
          "kind": "OpenLibertyApplication",
          "plural": "openlibertyapplications",
          "version": "v1beta2"
        },
        {
          "group": "apps.openliberty.io",
          "kind": "OpenLibertyDump",
          "plural": "openlibertydumps",
          "version": "v1beta2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:43b3f004a19c91c80ba815aedc1b361b87cd12daa28bb215e6775e64ef890af1",
          "image": "registry.connect.redhat.com/ibm/open-liberty-operator-controller@sha256:43b3f004a19c91c80ba815aedc1b361b87cd12daa28bb215e6775e64ef890af1",
          "name": "open-liberty-operator-controller-43b3f004a19c91c80ba815aedc1b361b87cd12daa28bb215e6775e64ef890af1-annotation"
        },
        {
          "digest": "sha256:43b3f004a19c91c80ba815aedc1b361b87cd12daa28bb215e6775e64ef890af1",
          "image": "registry.connect.redhat.com/ibm/open-liberty-operator-controller@sha256:43b3f004a19c91c80ba815aedc1b361b87cd12daa28bb215e6775e64ef890af1",
          "name": "manager"
        },
        {
          "digest": "sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "image": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "name": "open-liberty-samples-8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<0.8.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.8.0",
      "version_original": "0.8.0"
    },
    {
      "_id": "61d3f2f6c6d6ba37322fdb13",
      "alm_examples": [
        {
          "api_version": "symphony.spectrumcomputing.ibm.com/v1",
          "kind": "SymphonyCluster",
          "metadata": {
            "name": "symcluster"
          },
          "spec": {
            "client": [
              {
                "build": {
                  "git": {
                    "branch": "master",
                    "path": "samples/sampleapp_cpp",
                    "repository": "https://github.com/IBM/ibm-spectrum-symphony-operator.git"
                  },
                  "image": "registry.connect.redhat.com/ibm/spectrum-symphony@sha256:d6860f11eea6024e51134e58bc1968c41d797bd9555c4e0283224c52ccf17774",
                  "resources": {
                    "limits": {
                      "cpu": "500m",
                      "memory": "2Gi"
                    },
                    "requests": {
                      "cpu": "500m",
                      "memory": "2Gi"
                    }
                  },
                  "serviceAccountName": "builder"
                },
                "image": "",
                "imagePullPolicy": "Always",
                "name": "SampleAppCPP1",
                "resources": {
                  "limits": {
                    "cpu": "250m",
                    "memory": "1Gi"
                  },
                  "requests": {
                    "cpu": "250m",
                    "memory": "1Gi"
                  }
                },
                "serviceAccountName": ""
              }
            ],
            "cluster": {
              "adminPasswordSecretName": "",
              "cacheImages": true,
              "clusterName": "",
              "enableSharedSubdir": false,
              "entitlementSecretName": "",
              "logsOnShared": false,
              "scriptsSecretName": "",
              "storage": {
                "pvcName": "",
                "pvcSize": "1Gi",
                "selector": {
                  "label": "",
                  "value": ""
                },
                "storageClassName": ""
              },
              "usersPasswordsSecretName": ""
            },
            "compute": {
              "image": "registry.connect.redhat.com/ibm/spectrum-symphony@sha256:1722eae3debcab3354a17c019cb38dc15acb71c6fed33585f669c9caceefc877",
              "imagePullPolicy": "Always",
              "maxReplicas": 64,
              "minReplicas": 1,
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "250m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "250m",
                  "memory": "1Gi"
                }
              },
              "targetCPUUtilizationPercentage": 70,
              "usePodAutoscaler": true
            },
            "licenceAccepted": true,
            "master": {
              "egoRestEnabled": false,
              "image": "registry.connect.redhat.com/ibm/spectrum-symphony@sha256:d6860f11eea6024e51134e58bc1968c41d797bd9555c4e0283224c52ccf17774",
              "imagePullPolicy": "Always",
              "replicaCount": 0,
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "4Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "4Gi"
                }
              },
              "symRestEnabled": false,
              "uiEnabled": true
            },
            "serviceAccountName": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/spectrum-symphony-operator-bundle@sha256:64d375f9e471f8f9918f9257ecc4f80b8a31379c3e4495b38c9039a0bfe0b779",
      "bundle_path_digest": "sha256:64d375f9e471f8f9918f9257ecc4f80b8a31379c3e4495b38c9039a0bfe0b779",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T07:10:46.343000+00:00",
      "csv_description": "Creates IBM Spectrum Symphony Cluster",
      "csv_display_name": "IBM Spectrum Symphony Cluster",
      "csv_metadata_description": "IBM Spectrum Symphony cluster",
      "csv_name": "ibm-spectrum-symphony-operator.v1.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:43:33.384000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "ibm-spectrum-symphony-operator",
      "provided_apis": [
        {
          "group": "symphony.spectrumcomputing.ibm.com",
          "kind": "SymphonyCluster",
          "plural": "symphonyclusters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1e93089d93c0dc97b60f0425c62f42b2ecaa46ecd5b9a14c6a3e3c3b80f16d33",
          "image": "registry.connect.redhat.com/ibm/spectrum-symphony-operator@sha256:1e93089d93c0dc97b60f0425c62f42b2ecaa46ecd5b9a14c6a3e3c3b80f16d33",
          "name": "spectrum-symphony-operator-1e93089d93c0dc97b60f0425c62f42b2ecaa46ecd5b9a14c6a3e3c3b80f16d33-annotation"
        },
        {
          "digest": "sha256:1e93089d93c0dc97b60f0425c62f42b2ecaa46ecd5b9a14c6a3e3c3b80f16d33",
          "image": "registry.connect.redhat.com/ibm/spectrum-symphony-operator@sha256:1e93089d93c0dc97b60f0425c62f42b2ecaa46ecd5b9a14c6a3e3c3b80f16d33",
          "name": "manager"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d6860f11eea6024e51134e58bc1968c41d797bd9555c4e0283224c52ccf17774",
          "image": "registry.connect.redhat.com/ibm/spectrum-symphony@sha256:d6860f11eea6024e51134e58bc1968c41d797bd9555c4e0283224c52ccf17774",
          "name": "spectrum-symphony-d6860f11eea6024e51134e58bc1968c41d797bd9555c4e0283224c52ccf17774-annotation"
        },
        {
          "digest": "sha256:1722eae3debcab3354a17c019cb38dc15acb71c6fed33585f669c9caceefc877",
          "image": "registry.connect.redhat.com/ibm/spectrum-symphony@sha256:1722eae3debcab3354a17c019cb38dc15acb71c6fed33585f669c9caceefc877",
          "name": "spectrum-symphony-1722eae3debcab3354a17c019cb38dc15acb71c6fed33585f669c9caceefc877-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.1.2",
      "version_original": "1.1.2"
    },
    {
      "_id": "61d3f5adc6d6ba37322fdb44",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "OpenshiftArtifactoryHa",
          "metadata": {
            "name": "openshiftartifactoryha"
          },
          "spec": {
            "artifactory-ha": {
              "artifactory": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/artifactory-pro",
                  "tag": "7.27.9-1"
                },
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE",
                "node": {
                  "replicaCount": 2,
                  "waitForPrimaryStartup": {
                    "enabled": false
                  }
                },
                "uid": "1000721030"
              },
              "database": {
                "driver": "OVERRIDE",
                "password": "OVERRIDE",
                "type": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "databaseUpgradeReady": true,
              "initContainerImage": "registry.connect.redhat.com/jfrog/init@sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
              "nginx": {
                "gid": "1000720107",
                "http": {
                  "externalPort": 80,
                  "internalPort": 8080
                },
                "https": {
                  "externalPort": 443,
                  "internalPort": 8443
                },
                "image": {
                  "registry": "registry.redhat.io",
                  "repository": "rhel8/nginx-116",
                  "tag": "latest"
                },
                "service": {
                  "ssloffload": false
                },
                "tlsSecretName": "OVERRIDE",
                "uid": "1000720104"
              },
              "postgresql": {
                "enabled": false
              },
              "waitForDatabase": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/artifactory-operator-bundle@sha256:7f0eac75c3ad62bff844979c3f7cf1bf8553caa2c28e38c59299979a452bfb28",
      "bundle_path_digest": "sha256:7f0eac75c3ad62bff844979c3f7cf1bf8553caa2c28e38c59299979a452bfb28",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-04T07:22:21.149000+00:00",
      "csv_description": " ## Breaking change\nPlease update to version 1.1.10 of the operator.\nVersion 1.1.8 and 1.1.9 have issues. Please skip these versions.\n\n## Overview\nOpenshift Operator to deploy JFrog Artifactory Enterprise into your Openshift cluster.\n## Security Context Constraints\nTo deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc.\n```\noc adm policy add-scc-to-user anyuid -z artifactory-ha-operator -n openshift-operators\n```\nAdd the service account for the Artifactory chart to deploy successfully:\n``` oc adm policy add-scc-to-user anyuid -z openshiftartifactoryha-artifactory-ha -n artifactory ```\n### Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Artifactory Enterprise Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Artifactory Enterprise Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Artifactory HA.\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\nDATABASE_TYPE\nDATABASE_DRIVER\nDATABASE_URL\nDATABASE_USER\nDATABASE_PASSWORD\n```\nMaster key and Join key must be supplied. To generate a new key for each run the command below:\n\n```\n# Create a key\nexport JOIN_KEY=$(openssl rand -hex 32)\necho ${JOIN_KEY}\n```\n\nTo use TLS you will need to first create a k8s tls secret to store your .crt and .key file into.\nThen supply the value of this k8s secret into the TLS_SECRET field.\n``` oc create secret tls my_tls_secret --cert=tls.crt --key=tls.key --namespace=my_namespace ```\nClick Create for Artifactory Enterprise to deploy into OpenShift and connect to it on the external IP exposed by the load balancer.\n### Create a route\nTo expose Artifactory from Openshift we recommend you create a new route in Openshift.\nYou can either use the oc command line tool or the Openshift web console to generate a new route.\nDepending upon where you terminate TLS you will need to either specify pass through or edge.\nCommand Line (Edge):\n``` oc create route edge --service=openshiftartifactory-ha --cert=tls.crt --key=tls.key --ca-cert=ca.crt --hostname=www.example.com ```\nOr for more information visit the official Openshift documentation on routes here:\nhttps://docs.openshift.com/container-platform/4.6/networking/routes/route-configuration.html\n\n",
      "csv_display_name": "JFrog Artifactory Enterprise Operator",
      "csv_metadata_description": "JFrog Artifactory Enterprise deploys Artifactory in a high availability environment across multiple pods",
      "csv_name": "artifactory-ha-operator.v1.1.21",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:16:08.676000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "plural": "openshiftartifactoryhas",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:7f06776ddcaffa1f4c3ca74b0d71f7fd11a6af5b0f2f42ade89a7f4ef4011296",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:7f06776ddcaffa1f4c3ca74b0d71f7fd11a6af5b0f2f42ade89a7f4ef4011296",
          "name": "artifactory-pro"
        },
        {
          "digest": "sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "name": "artifactory-operator"
        },
        {
          "digest": "sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "name": "nginx"
        },
        {
          "digest": "sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "name": "artifactory-operator-65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f-annotation"
        },
        {
          "digest": "sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "name": "artifactory-ha-operator"
        },
        {
          "digest": "sha256:7f06776ddcaffa1f4c3ca74b0d71f7fd11a6af5b0f2f42ade89a7f4ef4011296",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:7f06776ddcaffa1f4c3ca74b0d71f7fd11a6af5b0f2f42ade89a7f4ef4011296",
          "name": "artifactory_image_repository"
        },
        {
          "digest": "sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "name": "nginx_image_repository"
        },
        {
          "digest": "sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
          "name": "init-9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.1.21",
      "version_original": "1.1.21"
    },
    {
      "_id": "61d3f617c6d6ba37322fdb55",
      "alm_examples": [
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AirgappedDeployment",
          "metadata": {
            "name": "airgappeddeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AnalyticsProxy",
          "metadata": {
            "name": "analyticsproxy"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "DeleteCluster",
          "metadata": {
            "name": "deletecluster"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "FullDeployment",
          "metadata": {
            "name": "fulldeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "GenerateKey",
          "metadata": {
            "name": "bas-api-key"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "StoreForwardMetric",
          "metadata": {
            "name": "storeforwardmetric"
          },
          "spec": {
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "Dashboard",
          "metadata": {
            "name": "dashboard"
          },
          "spec": {
            "enable_test_api": true,
            "image_pull_secret": "bas-images-pull-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator-bundle@sha256:77fedadffaa16d08331a62b23569ddd05108d22b1de4d598250eedceba907abe",
      "bundle_path_digest": "sha256:77fedadffaa16d08331a62b23569ddd05108d22b1de4d598250eedceba907abe",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-04T07:24:07.340000+00:00",
      "csv_description": "Behavior Analytics Services Operator is a service that collects, transforms and transmits product usage data.\nThe Operator supports deployments using-\nA. Dashboard\nB. Openshift portal or CLI\n\n**A. Dashboard**\n----\nWhen the Operator is installed, the Dashboard is installed too. Goto the Dashboard Custom Resource to get the URL to the Dashboard.\n\n\n**B. Openshift portal or CLI**\n----\n----\nFor manual installation using Openshift portal or CLI, follow the steps below\n\n\n**Pre-requisites**\n----\nStep 1: Create a new Project\n```sh\noc new-project <project-name>\n```\n\nStep 2: Create a secret named \"database-credentials\" for PostgreSQL DB\n```sh\n oc create secret generic database-credentials --from-literal=db_username=<DB Username> --from-literal=db_password=<DB Password> -n <project-name>\n```\n\nStep 3: [Optional] If the images require a secret to pull the container images, create a secret of type dockerconfigjson. Pass this secret name in the CR spec image\\_pull\\_secret\n```sh\noc create secret generic bas-images-pull-secret --from-file=.dockerconfigjson=<path/to/.docker/config.json>  --type=kubernetes.io/dockerconfigjson\n```\n\nStep 4: Create a secret named \"mtls-proxy-secret\" which has the client key and certificate to connect to IBM Proxy service. If you don't have certificates then refer link https://developers.cloudflare.com/access/service-auth/mtls-testing#generating-the-root-ca to create root and client certificates. Please ensure to share root certificate with edge@us.ibm.com to allow access to IBM proxy service using client certificate.\n```sh\noc create secret tls mtls-proxy-secret --key client-key.pem --cert client.pem\n```\n\n**Installing the Behavior Analytics Services**\n----\n\nSelect any one of the deployments to setup the Behavior Analytics Services\n1. Full Deployment\n2. Analytics Proxy Deployment\n3. Store and Forward metrics Deployment\n4. Airgapped Analytics Proxy Deployment\n\n| Spec                                                      | Description                                                      | Default Value          |\n| --------------------------------------------------------- | ------------------------------------------------------------ | ---------------------- |\n| `ibmproxyurl`                                               | URL of IBM Proxy Service                                     | `https://iaps.ibm.com`   |\n| `postgres.storage_class`                                    | Storage class of type ReadWriteOnce                          | Required user input        |\n| `postgres.size`                                             | Size (in G) of the storage to be attached to Database        | `10G`                    |\n| `kafka.storage_class`                                       | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.storage_size`                                        | Size (in G) of the storage to be attached to Kafka  | `5G`                     |\n| `kafka.zookeeper_storage_class`                                 | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.zookeeper_storage_size`                                 | Size (in G) of the storage to be attached to Zookeeper | `5G`                     |\n| `airgapped.enabled`                                         | Set value to \"true\" if airgapped setup is to be enabled otherwise keep the default value \"false\" | `false`                  |\n| `airgapped.backup_retention_period`   | Number of days to keep the backup files in the storage       | `7`                     |\n| `airgapped.backup_deletion_frequency` | Frequency of job to delete files from the storage. It accepts values in Cron format (https://en.wikipedia.org/wiki/Cron) | `@daily`                 |\n| `event_scheduler_frequency`                               | Frequency at which events will be forwarded to proxy in Cron format. In case if internet connection available on the cluster only during a certain time frame, specify time in UTC equivalent Cron format. | `@hourly`                |\n| `prometheus_scheduler_frequency`                          | Frequency in Cronjob format to pull metrics from Prometheus  | `@daily`                |\n| `image_pull_secret`                                       | Secret to pull container images from registry                | `bas-images-pull-secret` |\n| `db_archive.frequency`                                    | Frequency in Cronjob format to run archive job                                                           | `@monthly`             |\n| `db_archive.retention_age`                                | Number of months to retain the data in Database              | `6`                    |\n| `db_archive.persistent_storage.storage_class`             |Storage class of type ReadWriteMany         | Required user input    |\n| `db_archive.persistent_storage.storage_size`              | Size (in G) of the storage to be attached for saving airgapped files | `10G`                  |\n| `prometheus_metrics`                                      | Array of metrics information to be send to destination at desired frequency | []\n| `env_type`              | Type of environment. Can be **prod** (HA) or **lite** (non HA)   | `lite`                  |\n| `allowed_domains`                                         | Comma separated values of domains allowed by BAS. By default all domains are allowed | '*'\n\n\n**Generating the API Key**\n----\nOnce the deployment is complete, to use the Behavior Analytics Services Endpoints, generate an API key using the CR GenerateKey. This API key to be used to authenticate Behavior Analytics Services Endpoints.\n\nNote- Key can be retrieved from the secret with same name used while creating Generate Key CR's instance.\nOnce you get key from the secret, decode it using below command:\n```sh\necho -n <secret key> | base64 -d\n```\n\n**Deleting the API Key**\n----\nTo revoke the Key, delete the corresponding GenerateKey instance.\n\n**Using Behavior Analytics Services Endpoints**\n---\nFor all BAS APIs, use the Generated API Key for Authentication. Pass it as the Header- X-API-KEY and the key while using the APIs.\n",
      "csv_display_name": "Behavior Analytics Services",
      "csv_metadata_description": "Behavior Analytics Services is a service that collects, transforms and transmits product usage data.",
      "csv_name": "behavior-analytics-services-operator-certified.v1.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:31:35.934000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "behavior-analytics-services-operator-certified",
      "provided_apis": [
        {
          "group": "bas.ibm.com",
          "kind": "Dashboard",
          "plural": "dashboards",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "DeleteCluster",
          "plural": "deleteclusters",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "FullDeployment",
          "plural": "fulldeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "GenerateKey",
          "plural": "generatekeys",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "StoreForwardMetric",
          "plural": "storeforwardmetrics",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AirgappedDeployment",
          "plural": "airgappeddeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AnalyticsProxy",
          "plural": "analyticsproxies",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:c30a58a4f7a6457bf7da404ccde64f58f26162eeee0be9cc01ad517542027e2a",
          "image": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator@sha256:c30a58a4f7a6457bf7da404ccde64f58f26162eeee0be9cc01ad517542027e2a",
          "name": "behavior-analytics-services-operator"
        },
        {
          "digest": "sha256:8e0f1d33edf005eb2dfafed9b8367435b0f33ef4adf006bc75338f2a88e8942c",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:8e0f1d33edf005eb2dfafed9b8367435b0f33ef4adf006bc75338f2a88e8942c",
          "name": "dashboardinstaller"
        },
        {
          "digest": "sha256:b35f209bb491f88da6a9e6ca2b55675a4d0eeb69c4a369a07704cd9a9443a058",
          "image": "registry.connect.redhat.com/ibm-edge/event-api@sha256:b35f209bb491f88da6a9e6ca2b55675a4d0eeb69c4a369a07704cd9a9443a058",
          "name": "event_api"
        },
        {
          "digest": "sha256:a606caf41cb689bb3496d1e76312ebbbe531ab5df52d4d0813bd7763cc170da1",
          "image": "registry.connect.redhat.com/ibm-edge/store-api@sha256:a606caf41cb689bb3496d1e76312ebbbe531ab5df52d4d0813bd7763cc170da1",
          "name": "store_api"
        },
        {
          "digest": "sha256:0b5a7b02e4cb4baf0e08171fdd1d7d35a16bb82254ff2e245e051e483f6cd08c",
          "image": "registry.connect.redhat.com/ibm-edge/event-reader@sha256:0b5a7b02e4cb4baf0e08171fdd1d7d35a16bb82254ff2e245e051e483f6cd08c",
          "name": "reader"
        },
        {
          "digest": "sha256:caf7464165c82783ec83f0cffd1163cbfdffc4bad1f81def00dd3a25ae8a806c",
          "image": "registry.connect.redhat.com/ibm-edge/event-scheduler@sha256:caf7464165c82783ec83f0cffd1163cbfdffc4bad1f81def00dd3a25ae8a806c",
          "name": "event_scheduler"
        },
        {
          "digest": "sha256:08ba04c0c3a0966568538ac709f7bb243f7768c1f200c1a7c99e2761144a9a6b",
          "image": "registry.connect.redhat.com/ibm-edge/prometheus-scheduler@sha256:08ba04c0c3a0966568538ac709f7bb243f7768c1f200c1a7c99e2761144a9a6b",
          "name": "prometheus_scheduler"
        },
        {
          "digest": "sha256:90ddecb54abe2880b86016a407507cecf77a113b4c7724235ab0abd21ad1d9aa",
          "image": "registry.connect.redhat.com/ibm-edge/pgo-client@sha256:90ddecb54abe2880b86016a407507cecf77a113b4c7724235ab0abd21ad1d9aa",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:815630d23e8d88664907fbf8096952adfd22593a4989063e9dd55549e674ee15",
          "image": "registry.connect.redhat.com/ibm-edge/reverse-proxy@sha256:815630d23e8d88664907fbf8096952adfd22593a4989063e9dd55549e674ee15",
          "name": "nginx"
        },
        {
          "digest": "sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "image": "registry.redhat.io/openshift4/ose-grafana@sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "name": "grafana"
        },
        {
          "digest": "sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "image": "registry.redhat.io/openshift3/ose-kube-state-metrics@sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "name": "ksm"
        },
        {
          "digest": "sha256:3288307dd03844ec3574ca5c173d7f608755fd23654434c48ea2e854fe0f22cf",
          "image": "registry.connect.redhat.com/ibm-edge/growth-stack-base@sha256:3288307dd03844ec3574ca5c173d7f608755fd23654434c48ea2e854fe0f22cf",
          "name": "init_container"
        },
        {
          "digest": "sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "image": "registry.access.redhat.com/ubi8/ubi@sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "name": "ubi"
        },
        {
          "digest": "sha256:19a8b33e2f4c2beee5266d5243abb7f43d85322fc62800899759cdf6ec568fee",
          "image": "registry.connect.redhat.com/ibm-edge/airgap-download-ui@sha256:19a8b33e2f4c2beee5266d5243abb7f43d85322fc62800899759cdf6ec568fee",
          "name": "download_ui"
        },
        {
          "digest": "sha256:9f6eae3e715d9aff6d9674059fb6bf4f6dfc3ad42f015200c69b481becd7abd9",
          "image": "registry.connect.redhat.com/ibm-edge/bas-operator-dashboard@sha256:9f6eae3e715d9aff6d9674059fb6bf4f6dfc3ad42f015200c69b481becd7abd9",
          "name": "dashboard_ui"
        },
        {
          "digest": "sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "image": "registry.connect.redhat.com/crunchydata/pgo-deployer@sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "name": "pgo_deployer"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.1.2",
      "version_original": "1.1.2"
    },
    {
      "_id": "61d3f62217f914cd72330a52",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:96a04fb99af74bc88406278004fbbdad4ae9b11189fd35347ebc86f065f8ae4b",
      "bundle_path_digest": "sha256:96a04fb99af74bc88406278004fbbdad4ae9b11189fd35347ebc86f065f8ae4b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v2.2",
      "creation_date": "2022-01-04T07:24:18.117000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:46:32.855000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "name": "COUCHDB-MGMT"
        },
        {
          "digest": "sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "name": "couchdb-operator-4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4-annotation"
        },
        {
          "digest": "sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "name": "couchdb-operator"
        },
        {
          "digest": "sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "name": "couchdb3"
        },
        {
          "digest": "sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "name": "mgmt"
        }
      ],
      "replaces": "",
      "skip_range": ">=1.0.0 <2.2.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.2.0",
      "version_original": "2.2.0"
    },
    {
      "_id": "61d3fcaa17f914cd72330a6d",
      "alm_examples": [
        {
          "api_version": "apps.openliberty.io/v1beta2",
          "kind": "OpenLibertyApplication",
          "metadata": {
            "name": "openliberty-app-sample"
          },
          "spec": {
            "applicationImage": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
            "expose": true,
            "replicas": 1
          }
        },
        {
          "api_version": "apps.openliberty.io/v1beta2",
          "kind": "OpenLibertyDump",
          "metadata": {
            "name": "openliberty-dump-sample"
          },
          "spec": {
            "include": [
              "thread",
              "heap"
            ],
            "podName": "Specify_Pod_Name_Here"
          }
        },
        {
          "api_version": "apps.openliberty.io/v1beta2",
          "kind": "OpenLibertyTrace",
          "metadata": {
            "name": "openliberty-trace-sample"
          },
          "spec": {
            "maxFileSize": 20,
            "maxFiles": 5,
            "podName": "Specify_Pod_Name_Here",
            "traceSpecification": "*=info:com.ibm.ws.webcontainer*=all"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/open-liberty-operator-bundle@sha256:88ff3cd847c4b606466b1e782cec0dfbdb62fb3dd0e4e1bc8b9c2d1016c74132",
      "bundle_path_digest": "sha256:88ff3cd847c4b606466b1e782cec0dfbdb62fb3dd0e4e1bc8b9c2d1016c74132",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "beta2",
      "creation_date": "2022-01-04T07:52:10.830000+00:00",
      "csv_description": "This advanced Operator can be used to deploy and manage Open Liberty applications with consistent, production-grade QoS. This operator is based on the [Runtime Component Operator](https://github.com/application-stacks/runtime-component-operator) and provides all of its capabilities in addition to Open Liberty specific features such as gathering traces and dumps (Day-2 operations) and easily configuring and managing the single sign-on information for your Open Liberty applications.\n\nOpen Liberty Operator enables enterprise architects to govern the way their applications get deployed & managed in the cluster, while dramatically reducing the learning curve for developers to deploy into Kubernetes - allowing them to focus on writing the code! Here are some key features:\n\n#### Application Lifecyle\nYou can deploy your Open Liberty application container by either pointing to a container image, or an OpenShift ImageStream. When using an ImageStream the Operator will watch for any updates and will re-deploy the modified image.\n\n#### Custom RBAC\nThis Operator is capable of using a custom ServiceAccount from the caller, allowing it to follow RBAC restrictions. By default it creates a ServiceAccount if one is not specified, which can also be bound with specific roles.\n\n#### Environment Configuration\nYou can configure a variety of artifacts with your deployment, such as: labels, annotations, and environment variables from a ConfigMap, a Secret or a value.\n\n#### Routing\nExpose your application to external users via a single toggle to create a Route on OpenShift or an Ingress on other Kubernetes environments. Advanced configuration, such as TLS settings, are also easily enabled. Expiring Route certificates are re-issued.\n\n#### High Availability via Horizontal Pod Autoscaling\nRun multiple instances of your application for high availability. Either specify a static number of replicas or easily configure horizontal auto scaling to create (and delete) instances based on resource consumption.\n\n#### Persistence and advanced storage\nEnable persistence for your application by specifying simple requirements: just tell us the size of the storage and where you would like it to be mounted and We will create and manage that storage for you.\nThis toggles a StatefulSet resource instead of a Deployment resource, so your container can recover transactions and state upon a pod restart.\nWe offer an advanced mode where the user specifies a built-in PersistentVolumeClaim, allowing them to configure many details of the persistent volume, such as its storage class and access mode.\nYou can also easily configure and use a single storage for serviceability related Day-2 operations, such as gatherig server traces and dumps.\n\n#### Service Binding\nYour runtime components can expose services by a simple toggle. We take care of the heavy lifting such as creating kubernetes Secrets with information other services can use to bind. We also keep the bindable information synchronized, so your applications can dynamically reconnect to its required services without any intervention or interruption.\n\n#### Single Sign-On (SSO)\nOpen Liberty provides capabilities to delegate authentication to external providers. Your application users can log in using their existing social media credentials from providers such as Google, Facebook, LinkedIn, Twitter, GitHub, and any OpenID Connect (OIDC) or OAuth 2.0 clients. Open Liberty Operator allows to easily configure and manage the single sign-on information for your applications.\n\n#### Exposing metrics to Prometheus\nThe Open Liberty Operator exposes the runtime container's metrics via the [Prometheus Operator](https://operatorhub.io/operator/prometheus).\nUsers can pick between a basic mode, where they simply specify the label that Prometheus is watching to scrape the metrics from the container, or they can specify the full `ServiceMonitor` spec embedded into the OpenLibertyApplication's `spec.monitoring` key controlling things like the poll internal and security credentials.\n\n#### Easily mount logs and transaction directories\nIf you need to mount the logs and transaction data from your application to an external volume such as NFS (or any storage supported in your cluster), simply add the following (customizing the folder location and size) to your OpenLibertyApplication CR:\n``` storage: size: 2Gi mountPath: \"/logs\" ```\n\n#### Integration with OpenShift Serverless\nDeploy your serverless runtime component using a single toggle.  The Operator will convert all of its generated resources into [Knative](https://knative.dev) resources, allowing your pod to automatically scale to 0 when it is idle.\n\n#### Integration with OpenShift's Topology UI\nWe set the corresponding labels to support OpenShift's Developer Topology UI, which allows you to visualize your entire set of deployments and how they are connected.\n\nSee our [**documentation**](https://github.com/OpenLiberty/open-liberty-operator/tree/main/doc/) for more information.\n",
      "csv_display_name": "Open Liberty",
      "csv_metadata_description": "Deploy and manage applications running on Liberty",
      "csv_name": "open-liberty-operator.v0.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:12:35.221000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "open-liberty-certified",
      "provided_apis": [
        {
          "group": "apps.openliberty.io",
          "kind": "OpenLibertyApplication",
          "plural": "openlibertyapplications",
          "version": "v1beta2"
        },
        {
          "group": "apps.openliberty.io",
          "kind": "OpenLibertyDump",
          "plural": "openlibertydumps",
          "version": "v1beta2"
        },
        {
          "group": "apps.openliberty.io",
          "kind": "OpenLibertyTrace",
          "plural": "openlibertytraces",
          "version": "v1beta2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:43b3f004a19c91c80ba815aedc1b361b87cd12daa28bb215e6775e64ef890af1",
          "image": "registry.connect.redhat.com/ibm/open-liberty-operator-controller@sha256:43b3f004a19c91c80ba815aedc1b361b87cd12daa28bb215e6775e64ef890af1",
          "name": "open-liberty-operator-controller-43b3f004a19c91c80ba815aedc1b361b87cd12daa28bb215e6775e64ef890af1-annotation"
        },
        {
          "digest": "sha256:43b3f004a19c91c80ba815aedc1b361b87cd12daa28bb215e6775e64ef890af1",
          "image": "registry.connect.redhat.com/ibm/open-liberty-operator-controller@sha256:43b3f004a19c91c80ba815aedc1b361b87cd12daa28bb215e6775e64ef890af1",
          "name": "manager"
        },
        {
          "digest": "sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "image": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "name": "open-liberty-samples-8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<0.8.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.8.0",
      "version_original": "0.8.0"
    },
    {
      "_id": "61d3ffcdc6d6ba37322fdd1d",
      "alm_examples": [
        {
          "api_version": "csi.ibm.com/v1",
          "kind": "IBMBlockCSI",
          "metadata": {
            "name": "ibm-block-csi"
          },
          "spec": {
            "controller": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-controller",
              "tag": "1.8.0"
            },
            "node": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-node",
              "tag": "1.8.0"
            },
            "sidecars": [
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-node-driver-registrar",
                "repository": "k8s.gcr.io/sig-storage/csi-node-driver-registrar",
                "tag": "v2.3.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-provisioner",
                "repository": "k8s.gcr.io/sig-storage/csi-provisioner",
                "tag": "v2.2.2"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-attacher",
                "repository": "k8s.gcr.io/sig-storage/csi-attacher",
                "tag": "v3.3.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-snapshotter",
                "repository": "k8s.gcr.io/sig-storage/csi-snapshotter",
                "tag": "v3.0.3"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-resizer",
                "repository": "k8s.gcr.io/sig-storage/csi-resizer",
                "tag": "v1.3.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-addons-replicator",
                "repository": "quay.io/csiaddons/volumereplication-operator",
                "tag": "v0.2.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "livenessprobe",
                "repository": "k8s.gcr.io/sig-storage/livenessprobe",
                "tag": "v2.4.0"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/ibm-block-csi-operator-bundle@sha256:51596e6e185f88dc3c2f3fb1800dc126f8a1247bb02352e5a7534ef771ac3581",
      "bundle_path_digest": "sha256:51596e6e185f88dc3c2f3fb1800dc126f8a1247bb02352e5a7534ef771ac3581",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T08:05:33.038000+00:00",
      "csv_description": "The Container Storage Interface (CSI) Driver for IBM block storage systems enables container orchestrators such as Kubernetes to manage the life cycle of persistent storage.\n\nThis is the official operator to deploy and manage IBM block storage CSI driver.\n\nFor compatibility, prerequisites, release notes, and other user information, see [IBM block storage CSI driver documentation](https://www.ibm.com/docs/en/stg-block-csi-driver).\n",
      "csv_display_name": "IBM block storage CSI driver operator",
      "csv_metadata_description": "Run IBM block storage CSI driver on OpenShift.",
      "csv_name": "ibm-block-csi-operator.v1.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:59:23.940000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "ibm-block-csi-operator",
      "provided_apis": [
        {
          "group": "csi.ibm.com",
          "kind": "IBMBlockCSI",
          "plural": "ibmblockcsis",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:df209e133fb5f25aa6d28afe12537a8e963a1ab9fbb2452d4314913ca9a5dde5",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:df209e133fb5f25aa6d28afe12537a8e963a1ab9fbb2452d4314913ca9a5dde5",
          "name": "ibm-block-csi-operator"
        },
        {
          "digest": "sha256:df209e133fb5f25aa6d28afe12537a8e963a1ab9fbb2452d4314913ca9a5dde5",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:df209e133fb5f25aa6d28afe12537a8e963a1ab9fbb2452d4314913ca9a5dde5",
          "name": "ibm-block-csi-operator-df209e133fb5f25aa6d28afe12537a8e963a1ab9fbb2452d4314913ca9a5dde5-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.8.0",
      "version_original": "1.8.0"
    },
    {
      "_id": "61d3ffdbc6d6ba37322fdd1e",
      "alm_examples": [
        {
          "api_version": "csi.hpe.com/v1",
          "kind": "XSPC",
          "metadata": {
            "name": "xspc",
            "namespace": "kube-system"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/xspc-csi-operator-bundle@sha256:770617a34080f62da641fbd5a681fd2e403b1419754bb13bc360f437d31671ef",
      "bundle_path_digest": "sha256:770617a34080f62da641fbd5a681fd2e403b1419754bb13bc360f437d31671ef",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T08:05:47.870000+00:00",
      "csv_description": "## About\nHPE XP Storage Plug-in for Containers (XSPC) is a plugin that integrates HPE XP storage into Kubernetes based clusters.\nXSPC provides dynamic persistent volume provisioning capabilities from HPE's block storage arrays.\n\n## Requirements\n\n### Supported Driver Version\n\n* XSPC v3.8.0\n\n### Supported Platforms\n\n* OpenShift v4.6, v4.7, v4.8\n\n### Supported Operating Systems\n\n* RHEL 7.x\n* RHEL 8.x",
      "csv_display_name": "HPE XP Storage CSI Driver Operator for Kubernetes",
      "csv_metadata_description": "An operator for managing HPE XP Storage Plug-in for Containers CSI driver",
      "csv_name": "xspc-csi-driver-operator.1.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:39:40.931000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "xspc-operator",
      "provided_apis": [
        {
          "group": "csi.hpe.com",
          "kind": "XSPC",
          "plural": "xspcs",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:834f8cf21b4f4e4f75e2e0c48242bf2e1b60fa8a611da10d1a79aa8fb9883978",
          "image": "registry.connect.redhat.com/hpestorage/xspc-csi-driver-operator@sha256:834f8cf21b4f4e4f75e2e0c48242bf2e1b60fa8a611da10d1a79aa8fb9883978",
          "name": "xspc-csi-driver-operator"
        },
        {
          "digest": "sha256:38e3fff6098ade087b857fd09baebd8a6570f214fe9b29fd7fd2e251f4ec455e",
          "image": "registry.connect.redhat.com/hpestorage/xspc-csi-driver@sha256:38e3fff6098ade087b857fd09baebd8a6570f214fe9b29fd7fd2e251f4ec455e",
          "name": "xspc-csi-driver"
        },
        {
          "digest": "sha256:834f8cf21b4f4e4f75e2e0c48242bf2e1b60fa8a611da10d1a79aa8fb9883978",
          "image": "registry.connect.redhat.com/hpestorage/xspc-csi-driver-operator@sha256:834f8cf21b4f4e4f75e2e0c48242bf2e1b60fa8a611da10d1a79aa8fb9883978",
          "name": "xspc-csi-driver-operator-834f8cf21b4f4e4f75e2e0c48242bf2e1b60fa8a611da10d1a79aa8fb9883978-annotation"
        },
        {
          "digest": "sha256:834f8cf21b4f4e4f75e2e0c48242bf2e1b60fa8a611da10d1a79aa8fb9883978",
          "image": "registry.connect.redhat.com/hpestorage/xspc-csi-driver-operator@sha256:834f8cf21b4f4e4f75e2e0c48242bf2e1b60fa8a611da10d1a79aa8fb9883978",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.8.0",
      "version_original": "1.8.0"
    },
    {
      "_id": "61d3ffe18093b97ef52e1e2e",
      "alm_examples": [
        {
          "kind": "InfoScaleCluster",
          "metadata": {
            "name": "infoscalecluster-dev"
          },
          "spec": {
            "clusterInfo": [
              {},
              {}
            ],
            "version": "8.0.1"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-operator-bundle@sha256:69ba6ea88e09e1fdf823bf4b53fa8c9aa38cedf4f1bd332800ee2537ae7839cf",
      "bundle_path_digest": "sha256:69ba6ea88e09e1fdf823bf4b53fa8c9aa38cedf4f1bd332800ee2537ae7839cf",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T08:05:53.284000+00:00",
      "csv_description": "## InfoScale\u2122 SDS Operator\n\nInfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster\n\n## Overview\n\n- Veritas InfoScale\u2122 delivers Infrastructure resiliency and persistent storage for your critical containerized applications for OpenShift\u00ae and Kubernetes Native deployments\n- Engineered to support stateful workloads generated for mission-critical containerized applications.\n\n---\n\n## Data Services & Benefits\n\n**1. Software-Defined Persistent Storage Volumes:** Enables customers to support multiple container application requirements leveraging existing SAN or DAS storage\n\n**2. CSI API Driver:** Facilitates static and dynamic provisioning for applications with RWX, RWO and ROX access modes\n\n**3. Life Cycle Management:** Enables automated deployment, configuration and upgrades of InfoScale Software-defined container images. Certified and Integrated with Red Hat OpenShift for a single-click deployment\n\n**4. Availability:** Provides scaling, mounting and/or movement of InfoScale persistent storage volumes on cluster nodes with minimal disruption\n\n**5. Data Integrity:** Prevents data corruption by allowing only the active cluster nodes to write to the volume. The I/O fencing feature recovers from cluster disruptions quickly by ensuring that application pods are moved to another node to continue normal operations\n\n**6. Point-in-Time Data Copies:** Create snapshots of Persistent Volumes for backup products, data analytics or forensic discovery and analysis\n\n**7. Disaster Recovery (DR) Tech Preview:** This DR feature provides the ability to test and validate disaster recovery capabilities by migrating Kubernetes cluster metadata and application components to peer cluster in case of a local or remote disaster\n\n---\n\n## Pre-requisites\n\n- [Please refer to pre-requisite section from official documentation](https://www.veritas.com/support/en_US/doc/151215298-151215302-0)\n\n\n## InfoScale Cluster custom resource\n\n```\nkind: InfoScaleCluster\nmetadata:\n  name:  < Infoscale Cluster Name >\n\nspec:\n  version: \"8.0.1\"\n\n  clusterInfo:\n  - nodeName: <Name of the first node>\n  ip:\n  - <Optional - First IP address of the first node >\n  - <Optional - Second IP address of the first node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  - nodeName: <Name of the second node>\n  ip:\n  - <Optional - First IP address of the second node >\n  - <Optional - Second IP address of the second node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  # You can add up to 16 nodes.\n\n  licenseServer: < Optional - License server name/IP address >\n  licensePort: < Optional - License port number >\n\n  customImageRegistry: < Optional \u2013 Registry for Infoscale Container images>\n\n```\n\n#### Note\n\nYou can specify up to 16 worker nodes in CR. Although cluster configuration is allowed even with one Network Interface Card,\nVeritas recommends a minimum of two physical links for performance and High Availability (HA). Number of links for each network link must be same on all\nnodes. Optionally, you can enter node level IP addresses. If IP addresses are not provided, IP addresses of OpenShift cluster nodes are used.\n",
      "csv_display_name": "InfoScale\u2122 SDS Operator",
      "csv_metadata_description": "InfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster",
      "csv_name": "infoscale-operator.v8.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:15:35.015000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "infoscale-operator",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "InfoScaleCluster",
          "plural": "infoscaleclusters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "name": "manager"
        },
        {
          "digest": "sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "name": "pre-manager"
        },
        {
          "digest": "sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "name": "infoscale-operator-dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.0.1",
      "version_original": "8.0.1"
    },
    {
      "_id": "61d40b8c17f914cd72330c28",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:96a04fb99af74bc88406278004fbbdad4ae9b11189fd35347ebc86f065f8ae4b",
      "bundle_path_digest": "sha256:96a04fb99af74bc88406278004fbbdad4ae9b11189fd35347ebc86f065f8ae4b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v2.2",
      "creation_date": "2022-01-04T08:55:40.981000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:09:31.307000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "name": "COUCHDB-MGMT"
        },
        {
          "digest": "sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "name": "couchdb-operator-4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4-annotation"
        },
        {
          "digest": "sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "name": "couchdb-operator"
        },
        {
          "digest": "sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "name": "couchdb3"
        },
        {
          "digest": "sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "name": "mgmt"
        }
      ],
      "replaces": "",
      "skip_range": ">=1.0.0 <2.2.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.2.0",
      "version_original": "2.2.0"
    },
    {
      "_id": "61d41fda8093b97ef52e1e72",
      "alm_examples": [
        {
          "api_version": "psmdb.percona.com/v1-11-0",
          "kind": "PerconaServerMongoDB",
          "metadata": {
            "name": "my-cluster-name"
          },
          "spec": {
            "allowUnsafeConfigurations": false,
            "backup": {
              "enabled": true,
              "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:071ac076bdd1ddec2754f4a8e784b09dc1ab457ce1aaf29ba292df993005abff",
              "pitr": {
                "enabled": false
              },
              "restartOnFailure": true,
              "serviceAccountName": "percona-server-mongodb-operator"
            },
            "crVersion": "1.11.0",
            "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:580f6eaf815f9bce04185d62c9c6c28a67443c6d379912dff1f28af68af98a5f",
            "imagePullPolicy": "Always",
            "mongod": {
              "net": {
                "hostPort": 0,
                "port": 27017
              },
              "operationProfiling": {
                "mode": "slowOp",
                "rateLimit": 100,
                "slowOpThresholdMs": 100
              },
              "security": {
                "enableEncryption": true,
                "encryptionCipherMode": "AES256-CBC",
                "encryptionKeySecret": "my-cluster-name-mongodb-encryption-key",
                "redactClientLogData": false
              },
              "setParameter": {
                "ttlMonitorSleepSecs": 60,
                "wiredTigerConcurrentReadTransactions": 128,
                "wiredTigerConcurrentWriteTransactions": 128
              },
              "storage": {
                "engine": "wiredTiger",
                "inMemory": {
                  "engineConfig": {
                    "inMemorySizeRatio": 0.9
                  }
                },
                "wiredTiger": {
                  "collectionConfig": {
                    "blockCompressor": "snappy"
                  },
                  "engineConfig": {
                    "cacheSizeRatio": 0.5,
                    "directoryForIndexes": false,
                    "journalCompressor": "snappy"
                  },
                  "indexConfig": {
                    "prefixCompression": true
                  }
                }
              }
            },
            "pmm": {
              "enabled": false,
              "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:2cb5ae10f470c71ba760fb2259659c80ddcee1f374e340bf896574325c198614",
              "serverHost": "monitoring-service"
            },
            "replsets": [
              {
                "affinity": {
                  "antiAffinityTopologyKey": "kubernetes.io/hostname"
                },
                "arbiter": {
                  "affinity": {
                    "antiAffinityTopologyKey": "kubernetes.io/hostname"
                  },
                  "enabled": false,
                  "size": 1
                },
                "expose": {
                  "enabled": false,
                  "exposeType": "ClusterIP"
                },
                "name": "rs0",
                "nonvoting": {
                  "affinity": {
                    "antiAffinityTopologyKey": "kubernetes.io/hostname"
                  },
                  "enabled": false,
                  "podDisruptionBudget": {
                    "maxUnavailable": 1
                  },
                  "resources": {
                    "limits": {
                      "cpu": "300m",
                      "memory": "0.5G"
                    },
                    "requests": {
                      "cpu": "300m",
                      "memory": "0.5G"
                    }
                  },
                  "size": 3,
                  "volumeSpec": {
                    "persistentVolumeClaim": {
                      "resources": {
                        "requests": {
                          "storage": "1Gi"
                        }
                      }
                    }
                  }
                },
                "podDisruptionBudget": {
                  "maxUnavailable": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  },
                  "requests": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  }
                },
                "size": 3,
                "volumeSpec": {
                  "persistentVolumeClaim": {
                    "resources": {
                      "requests": {
                        "storage": "3Gi"
                      }
                    }
                  }
                }
              }
            ],
            "secrets": {
              "users": "my-cluster-name-secrets"
            },
            "sharding": {
              "configsvrReplSet": {
                "affinity": {
                  "antiAffinityTopologyKey": "kubernetes.io/hostname"
                },
                "expose": {
                  "enabled": false,
                  "exposeType": "ClusterIP"
                },
                "podDisruptionBudget": {
                  "maxUnavailable": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  },
                  "requests": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  }
                },
                "size": 3,
                "volumeSpec": {
                  "persistentVolumeClaim": {
                    "resources": {
                      "requests": {
                        "storage": "3Gi"
                      }
                    }
                  }
                }
              },
              "enabled": true,
              "mongos": {
                "affinity": {
                  "antiAffinityTopologyKey": "kubernetes.io/hostname"
                },
                "expose": {
                  "exposeType": "ClusterIP"
                },
                "podDisruptionBudget": {
                  "maxUnavailable": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  },
                  "requests": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  }
                },
                "size": 3
              }
            },
            "updateStrategy": "SmartUpdate",
            "upgradeOptions": {
              "apply": "disabled",
              "schedule": "0 2 * * *",
              "setFCV": false,
              "versionServiceEndpoint": "https://check.percona.com"
            }
          }
        },
        {
          "api_version": "psmdb.percona.com/v1",
          "kind": "PerconaServerMongoDBBackup",
          "metadata": {
            "name": "backup1"
          },
          "spec": {
            "psmdbCluster": "my-cluster-name",
            "storageName": "s3-us-west"
          }
        },
        {
          "api_version": "psmdb.percona.com/v1",
          "kind": "PerconaServerMongoDBRestore",
          "metadata": {
            "name": "restore1"
          },
          "spec": {
            "backupName": "backup1",
            "clusterName": "my-cluster-name"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-bundle@sha256:7ae55f5f3de98de4044cfe63a921a3b871fb6e8e1c70bdf2b1a7348c63fb1397",
      "bundle_path_digest": "sha256:7ae55f5f3de98de4044cfe63a921a3b871fb6e8e1c70bdf2b1a7348c63fb1397",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T10:22:18.050000+00:00",
      "csv_description": "\n## Percona is Cloud Native\n\nThe Percona Distribution for MongoDB Kubernetes Operator automates the creation, modification, or deletion of items in your Percona Server for MongoDB environment. The Operator contains the necessary Kubernetes settings to maintain a consistent Percona Server for MongoDB instance modification, or deletion of items in your Percona Server for MongoDB environment. The Operator contains the necessary Kubernetes settings to maintain a consistent Percona Server for MongoDB instance.\n\nConsult the [documentation](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/index.html/) on the Percona Kubernetes Operator for Percona Server for MongoDB for complete details on capabilities and options.\n\n### Supported Features\n\n* **Scale Your Cluster** - change the `size` parameter to [add or remove members](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/scaling.html) of the replica set. Three is the minimum recommended size for a functioning replica set.\n\n* **Add Monitoring** - [Percona Monitoring and Management (PMM) can be easily deployed](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/monitoring.html) to monitor your Percona Server for MongoDB replica set(s). The recommended installation process uses Helm, the package manager for Kubernetes.\n\n* **Automate Your Backups** - [configure automatic backups](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/backups.html) to run on a scheduled basis or run an on-demand backup at any time. Backups are performed using Percona Backup for MongoDB (PBM) and can be stored on local PVs or in any S3-compatible cloud storage provider.\n\n### Common Configurations\n\n* **Set Member as Arbiter** - [Set up a replica set which contains an arbiter](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/arbiter.html), which participates in elections but does not store any data.  This reduces storage costs while helping maintain replica set integrity.\n\n* **Expose Members Outside K8S** - [by appropriately configuring the ServiceType](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/expose.html) you can expose replica set members outside of Kubernetes or provide statically assigned IP addresses.\n\n* **Utilize Local Storage Options** - [with support for Local Storage you can mount existing data directories](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/storage.html) into your replica set managed by Kubernetes or utilize high performance hardware for local storage rather than network storage for your database.\n\n### Before You Start\n\nAdd the PSMDB user `Secret` to Kubernetes. User information must be placed in the data section of the `secrets.yaml`\nfile with Base64-encoded logins and passwords for the user accounts.\n\nBelow is a sample `secrets.yaml` file for the correct formatting.\n\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: my-cluster-name-secrets\ntype: Opaque\ndata:\n  MONGODB_BACKUP_USER: YmFja3Vw\n  MONGODB_BACKUP_PASSWORD: YmFja3VwMTIzNDU2\n  MONGODB_CLUSTER_ADMIN_USER: Y2x1c3RlckFkbWlu\n  MONGODB_CLUSTER_ADMIN_PASSWORD: Y2x1c3RlckFkbWluMTIzNDU2\n  MONGODB_CLUSTER_MONITOR_USER: Y2x1c3Rlck1vbml0b3I=\n  MONGODB_CLUSTER_MONITOR_PASSWORD: Y2x1c3Rlck1vbml0b3IxMjM0NTY=\n  MONGODB_USER_ADMIN_USER: dXNlckFkbWlu\n  MONGODB_USER_ADMIN_PASSWORD: dXNlckFkbWluMTIzNDU2\n  PMM_SERVER_USER: cG1t\n  PMM_SERVER_PASSWORD: c3VwYXxefHBheno=\n```\n### Release Highlights\n\n* In addition to S3-compatible storage, you can now configure backups to use Microsoft Azure Blob storage.\n  This feature makes the Operator fully compatible with Azure Cloud.\n* Custom sidecar containers allow users to customize Percona Distribution for MongoDB and other Operator components without changing the container images.\n  In this release, we enable even more customization, by allowing users to mount volumes into the sidecar containers.\n* It is now possible to set annotations to backup cron jobs (Thanks to Aliaksandr Karavai for contribution) * Mongos readiness probe now avoids running listDatabases command for all databases in the cluster to avoid unneeded delays on\n  clusters with an extremely large amount of databases\n* Timeout parameters for liveness and readiness probes can be customized to avoid false-positives for heavy-loaded clusters * Update backup status as error if it`s not started for a long time * New backup.pitr.oplogSpanMin option controls how often oplogs are uploaded to the cloud storage\n\n\n",
      "csv_display_name": "Percona Distribution for MongoDB Operator",
      "csv_metadata_description": "Percona Distribution for MongoDB Operator automates the creation, modification, or deletion of items in your Percona Server for MongoDB environment",
      "csv_name": "percona-server-mongodb-operator-certified.v1.11.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:31:28.890000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "percona-server-mongodb-operator-certified",
      "provided_apis": [
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-4-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-9-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-5-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-3-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "version": "v1-10-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDBRestore",
          "plural": "perconaservermongodbrestores",
          "version": "v1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-2-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-6-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-7-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDBBackup",
          "plural": "perconaservermongodbbackups",
          "version": "v1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-8-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1alpha1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-11-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-1-0"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f16d8d2437a49d7c8dfe30f3c9c36764d8f86e35fde64db5148f40612b1a361b",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:f16d8d2437a49d7c8dfe30f3c9c36764d8f86e35fde64db5148f40612b1a361b",
          "name": "mongod4.0"
        },
        {
          "digest": "sha256:a3154bc9ca7ef19371308e90e9cb9051879e48f02c95842b4b39a3208698d312",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:a3154bc9ca7ef19371308e90e9cb9051879e48f02c95842b4b39a3208698d312",
          "name": "mongod4.2"
        },
        {
          "digest": "sha256:580f6eaf815f9bce04185d62c9c6c28a67443c6d379912dff1f28af68af98a5f",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:580f6eaf815f9bce04185d62c9c6c28a67443c6d379912dff1f28af68af98a5f",
          "name": "mongod4.4"
        },
        {
          "digest": "sha256:b14f566236d51a3dfb5e523ab1ce70a72b16f95783f1baf460547893e50dadcf",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:b14f566236d51a3dfb5e523ab1ce70a72b16f95783f1baf460547893e50dadcf",
          "name": "mongod5.0"
        },
        {
          "digest": "sha256:071ac076bdd1ddec2754f4a8e784b09dc1ab457ce1aaf29ba292df993005abff",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:071ac076bdd1ddec2754f4a8e784b09dc1ab457ce1aaf29ba292df993005abff",
          "name": "backup"
        },
        {
          "digest": "sha256:662a64a539a23a8bbad653c71af3bee3dd1038ea575e1d67293b9e2ad4a1d3f1",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator@sha256:662a64a539a23a8bbad653c71af3bee3dd1038ea575e1d67293b9e2ad4a1d3f1",
          "name": "operator"
        },
        {
          "digest": "sha256:662a64a539a23a8bbad653c71af3bee3dd1038ea575e1d67293b9e2ad4a1d3f1",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator@sha256:662a64a539a23a8bbad653c71af3bee3dd1038ea575e1d67293b9e2ad4a1d3f1",
          "name": "percona-server-mongodb-operator-662a64a539a23a8bbad653c71af3bee3dd1038ea575e1d67293b9e2ad4a1d3f1-annotation"
        },
        {
          "digest": "sha256:662a64a539a23a8bbad653c71af3bee3dd1038ea575e1d67293b9e2ad4a1d3f1",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator@sha256:662a64a539a23a8bbad653c71af3bee3dd1038ea575e1d67293b9e2ad4a1d3f1",
          "name": "percona-server-mongodb-operator"
        },
        {
          "digest": "sha256:071ac076bdd1ddec2754f4a8e784b09dc1ab457ce1aaf29ba292df993005abff",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:071ac076bdd1ddec2754f4a8e784b09dc1ab457ce1aaf29ba292df993005abff",
          "name": "percona-server-mongodb-operator-containers-071ac076bdd1ddec2754f4a8e784b09dc1ab457ce1aaf29ba292df993005abff-annotation"
        },
        {
          "digest": "sha256:2cb5ae10f470c71ba760fb2259659c80ddcee1f374e340bf896574325c198614",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:2cb5ae10f470c71ba760fb2259659c80ddcee1f374e340bf896574325c198614",
          "name": "percona-server-mongodb-operator-containers-2cb5ae10f470c71ba760fb2259659c80ddcee1f374e340bf896574325c198614-annotation"
        },
        {
          "digest": "sha256:580f6eaf815f9bce04185d62c9c6c28a67443c6d379912dff1f28af68af98a5f",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:580f6eaf815f9bce04185d62c9c6c28a67443c6d379912dff1f28af68af98a5f",
          "name": "percona-server-mongodb-operator-containers-580f6eaf815f9bce04185d62c9c6c28a67443c6d379912dff1f28af68af98a5f-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.11.0",
      "version_original": "1.11.0"
    },
    {
      "_id": "61d423bed467cd4ec03ef7fb",
      "alm_examples": [
        {
          "kind": "InfoScaleCluster",
          "metadata": {
            "name": "infoscalecluster-dev"
          },
          "spec": {
            "clusterInfo": [
              {},
              {}
            ],
            "version": "8.0.1"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-operator-bundle@sha256:f05e531495fcf80fa65b325d0a74e00003bbfb4474f6e597c59fdda986f8153f",
      "bundle_path_digest": "sha256:f05e531495fcf80fa65b325d0a74e00003bbfb4474f6e597c59fdda986f8153f",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T10:38:54.324000+00:00",
      "csv_description": "## InfoScale\u2122 SDS Operator\n\nInfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster\n\n## Overview\n\n- Veritas InfoScale\u2122 delivers Infrastructure resiliency and persistent storage for your critical containerized applications for OpenShift\u00ae and Kubernetes Native deployments\n- Engineered to support stateful workloads generated for mission-critical containerized applications.\n\n---\n\n## Data Services & Benefits\n\n**1. Software-Defined Persistent Storage Volumes:** Enables customers to support multiple container application requirements leveraging existing SAN or DAS storage\n\n**2. CSI API Driver:** Facilitates static and dynamic provisioning for applications with RWX, RWO and ROX access modes\n\n**3. Life Cycle Management:** Enables automated deployment, configuration and upgrades of InfoScale Software-defined container images. Certified and Integrated with Red Hat OpenShift for a single-click deployment\n\n**4. Availability:** Provides scaling, mounting and/or movement of InfoScale persistent storage volumes on cluster nodes with minimal disruption\n\n**5. Data Integrity:** Prevents data corruption by allowing only the active cluster nodes to write to the volume. The I/O fencing feature recovers from cluster disruptions quickly by ensuring that application pods are moved to another node to continue normal operations\n\n**6. Point-in-Time Data Copies:** Create snapshots of Persistent Volumes for backup products, data analytics or forensic discovery and analysis\n\n**7. Disaster Recovery (DR) Tech Preview:** This DR feature provides the ability to test and validate disaster recovery capabilities by migrating Kubernetes cluster metadata and application components to peer cluster in case of a local or remote disaster\n\n---\n\n## Pre-requisites\n\n- [Please refer to pre-requisite section from official documentation](https://www.veritas.com/support/en_US/doc/151215298-151215302-0)\n\n\n## InfoScale Cluster custom resource\n\n```\nkind: InfoScaleCluster\nmetadata:\n  name:  < Infoscale Cluster Name >\n\nspec:\n  version: \"8.0.1\"\n\n  clusterInfo:\n  - nodeName: <Name of the first node>\n  ip:\n  - <Optional - First IP address of the first node >\n  - <Optional - Second IP address of the first node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  - nodeName: <Name of the second node>\n  ip:\n  - <Optional - First IP address of the second node >\n  - <Optional - Second IP address of the second node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  # You can add up to 16 nodes.\n\n  licenseServer: < Optional - License server name/IP address >\n  licensePort: < Optional - License port number >\n\n  customImageRegistry: < Optional \u2013 Registry for Infoscale Container images>\n\n```\n\n#### Note\n\nYou can specify up to 16 worker nodes in CR. Although cluster configuration is allowed even with one Network Interface Card,\nVeritas recommends a minimum of two physical links for performance and High Availability (HA). Number of links for each network link must be same on all\nnodes. Optionally, you can enter node level IP addresses. If IP addresses are not provided, IP addresses of OpenShift cluster nodes are used.\n",
      "csv_display_name": "InfoScale\u2122 SDS Operator",
      "csv_metadata_description": "InfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster",
      "csv_name": "infoscale-operator.v8.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:16:07.459000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "infoscale-operator",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "InfoScaleCluster",
          "plural": "infoscaleclusters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "name": "manager"
        },
        {
          "digest": "sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "name": "pre-manager"
        },
        {
          "digest": "sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "name": "infoscale-operator-dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.0.2",
      "version_original": "8.0.2"
    },
    {
      "_id": "61d42434d467cd4ec03ef7fd",
      "alm_examples": [
        {
          "api_version": "psmdb.percona.com/v1-11-0",
          "kind": "PerconaServerMongoDB",
          "metadata": {
            "name": "my-cluster-name"
          },
          "spec": {
            "allowUnsafeConfigurations": false,
            "backup": {
              "enabled": true,
              "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:071ac076bdd1ddec2754f4a8e784b09dc1ab457ce1aaf29ba292df993005abff",
              "pitr": {
                "enabled": false
              },
              "restartOnFailure": true,
              "serviceAccountName": "percona-server-mongodb-operator"
            },
            "crVersion": "1.11.0",
            "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:580f6eaf815f9bce04185d62c9c6c28a67443c6d379912dff1f28af68af98a5f",
            "imagePullPolicy": "Always",
            "mongod": {
              "net": {
                "hostPort": 0,
                "port": 27017
              },
              "operationProfiling": {
                "mode": "slowOp",
                "rateLimit": 100,
                "slowOpThresholdMs": 100
              },
              "security": {
                "enableEncryption": true,
                "encryptionCipherMode": "AES256-CBC",
                "encryptionKeySecret": "my-cluster-name-mongodb-encryption-key",
                "redactClientLogData": false
              },
              "setParameter": {
                "ttlMonitorSleepSecs": 60,
                "wiredTigerConcurrentReadTransactions": 128,
                "wiredTigerConcurrentWriteTransactions": 128
              },
              "storage": {
                "engine": "wiredTiger",
                "inMemory": {
                  "engineConfig": {
                    "inMemorySizeRatio": 0.9
                  }
                },
                "wiredTiger": {
                  "collectionConfig": {
                    "blockCompressor": "snappy"
                  },
                  "engineConfig": {
                    "cacheSizeRatio": 0.5,
                    "directoryForIndexes": false,
                    "journalCompressor": "snappy"
                  },
                  "indexConfig": {
                    "prefixCompression": true
                  }
                }
              }
            },
            "pmm": {
              "enabled": false,
              "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:2cb5ae10f470c71ba760fb2259659c80ddcee1f374e340bf896574325c198614",
              "serverHost": "monitoring-service"
            },
            "replsets": [
              {
                "affinity": {
                  "antiAffinityTopologyKey": "kubernetes.io/hostname"
                },
                "arbiter": {
                  "affinity": {
                    "antiAffinityTopologyKey": "kubernetes.io/hostname"
                  },
                  "enabled": false,
                  "size": 1
                },
                "expose": {
                  "enabled": false,
                  "exposeType": "ClusterIP"
                },
                "name": "rs0",
                "nonvoting": {
                  "affinity": {
                    "antiAffinityTopologyKey": "kubernetes.io/hostname"
                  },
                  "enabled": false,
                  "podDisruptionBudget": {
                    "maxUnavailable": 1
                  },
                  "resources": {
                    "limits": {
                      "cpu": "300m",
                      "memory": "0.5G"
                    },
                    "requests": {
                      "cpu": "300m",
                      "memory": "0.5G"
                    }
                  },
                  "size": 3,
                  "volumeSpec": {
                    "persistentVolumeClaim": {
                      "resources": {
                        "requests": {
                          "storage": "1Gi"
                        }
                      }
                    }
                  }
                },
                "podDisruptionBudget": {
                  "maxUnavailable": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  },
                  "requests": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  }
                },
                "size": 3,
                "volumeSpec": {
                  "persistentVolumeClaim": {
                    "resources": {
                      "requests": {
                        "storage": "3Gi"
                      }
                    }
                  }
                }
              }
            ],
            "secrets": {
              "users": "my-cluster-name-secrets"
            },
            "sharding": {
              "configsvrReplSet": {
                "affinity": {
                  "antiAffinityTopologyKey": "kubernetes.io/hostname"
                },
                "expose": {
                  "enabled": false,
                  "exposeType": "ClusterIP"
                },
                "podDisruptionBudget": {
                  "maxUnavailable": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  },
                  "requests": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  }
                },
                "size": 3,
                "volumeSpec": {
                  "persistentVolumeClaim": {
                    "resources": {
                      "requests": {
                        "storage": "3Gi"
                      }
                    }
                  }
                }
              },
              "enabled": true,
              "mongos": {
                "affinity": {
                  "antiAffinityTopologyKey": "kubernetes.io/hostname"
                },
                "expose": {
                  "exposeType": "ClusterIP"
                },
                "podDisruptionBudget": {
                  "maxUnavailable": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  },
                  "requests": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  }
                },
                "size": 3
              }
            },
            "updateStrategy": "SmartUpdate",
            "upgradeOptions": {
              "apply": "disabled",
              "schedule": "0 2 * * *",
              "setFCV": false,
              "versionServiceEndpoint": "https://check.percona.com"
            }
          }
        },
        {
          "api_version": "psmdb.percona.com/v1",
          "kind": "PerconaServerMongoDBBackup",
          "metadata": {
            "name": "backup1"
          },
          "spec": {
            "psmdbCluster": "my-cluster-name",
            "storageName": "s3-us-west"
          }
        },
        {
          "api_version": "psmdb.percona.com/v1",
          "kind": "PerconaServerMongoDBRestore",
          "metadata": {
            "name": "restore1"
          },
          "spec": {
            "backupName": "backup1",
            "clusterName": "my-cluster-name"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-bundle@sha256:7ae55f5f3de98de4044cfe63a921a3b871fb6e8e1c70bdf2b1a7348c63fb1397",
      "bundle_path_digest": "sha256:7ae55f5f3de98de4044cfe63a921a3b871fb6e8e1c70bdf2b1a7348c63fb1397",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T10:40:52.743000+00:00",
      "csv_description": "\n## Percona is Cloud Native\n\nThe Percona Distribution for MongoDB Kubernetes Operator automates the creation, modification, or deletion of items in your Percona Server for MongoDB environment. The Operator contains the necessary Kubernetes settings to maintain a consistent Percona Server for MongoDB instance modification, or deletion of items in your Percona Server for MongoDB environment. The Operator contains the necessary Kubernetes settings to maintain a consistent Percona Server for MongoDB instance.\n\nConsult the [documentation](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/index.html/) on the Percona Kubernetes Operator for Percona Server for MongoDB for complete details on capabilities and options.\n\n### Supported Features\n\n* **Scale Your Cluster** - change the `size` parameter to [add or remove members](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/scaling.html) of the replica set. Three is the minimum recommended size for a functioning replica set.\n\n* **Add Monitoring** - [Percona Monitoring and Management (PMM) can be easily deployed](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/monitoring.html) to monitor your Percona Server for MongoDB replica set(s). The recommended installation process uses Helm, the package manager for Kubernetes.\n\n* **Automate Your Backups** - [configure automatic backups](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/backups.html) to run on a scheduled basis or run an on-demand backup at any time. Backups are performed using Percona Backup for MongoDB (PBM) and can be stored on local PVs or in any S3-compatible cloud storage provider.\n\n### Common Configurations\n\n* **Set Member as Arbiter** - [Set up a replica set which contains an arbiter](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/arbiter.html), which participates in elections but does not store any data.  This reduces storage costs while helping maintain replica set integrity.\n\n* **Expose Members Outside K8S** - [by appropriately configuring the ServiceType](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/expose.html) you can expose replica set members outside of Kubernetes or provide statically assigned IP addresses.\n\n* **Utilize Local Storage Options** - [with support for Local Storage you can mount existing data directories](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/storage.html) into your replica set managed by Kubernetes or utilize high performance hardware for local storage rather than network storage for your database.\n\n### Before You Start\n\nAdd the PSMDB user `Secret` to Kubernetes. User information must be placed in the data section of the `secrets.yaml`\nfile with Base64-encoded logins and passwords for the user accounts.\n\nBelow is a sample `secrets.yaml` file for the correct formatting.\n\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: my-cluster-name-secrets\ntype: Opaque\ndata:\n  MONGODB_BACKUP_USER: YmFja3Vw\n  MONGODB_BACKUP_PASSWORD: YmFja3VwMTIzNDU2\n  MONGODB_CLUSTER_ADMIN_USER: Y2x1c3RlckFkbWlu\n  MONGODB_CLUSTER_ADMIN_PASSWORD: Y2x1c3RlckFkbWluMTIzNDU2\n  MONGODB_CLUSTER_MONITOR_USER: Y2x1c3Rlck1vbml0b3I=\n  MONGODB_CLUSTER_MONITOR_PASSWORD: Y2x1c3Rlck1vbml0b3IxMjM0NTY=\n  MONGODB_USER_ADMIN_USER: dXNlckFkbWlu\n  MONGODB_USER_ADMIN_PASSWORD: dXNlckFkbWluMTIzNDU2\n  PMM_SERVER_USER: cG1t\n  PMM_SERVER_PASSWORD: c3VwYXxefHBheno=\n```\n### Release Highlights\n\n* In addition to S3-compatible storage, you can now configure backups to use Microsoft Azure Blob storage.\n  This feature makes the Operator fully compatible with Azure Cloud.\n* Custom sidecar containers allow users to customize Percona Distribution for MongoDB and other Operator components without changing the container images.\n  In this release, we enable even more customization, by allowing users to mount volumes into the sidecar containers.\n* It is now possible to set annotations to backup cron jobs (Thanks to Aliaksandr Karavai for contribution) * Mongos readiness probe now avoids running listDatabases command for all databases in the cluster to avoid unneeded delays on\n  clusters with an extremely large amount of databases\n* Timeout parameters for liveness and readiness probes can be customized to avoid false-positives for heavy-loaded clusters * Update backup status as error if it`s not started for a long time * New backup.pitr.oplogSpanMin option controls how often oplogs are uploaded to the cloud storage\n\n\n",
      "csv_display_name": "Percona Distribution for MongoDB Operator",
      "csv_metadata_description": "Percona Distribution for MongoDB Operator automates the creation, modification, or deletion of items in your Percona Server for MongoDB environment",
      "csv_name": "percona-server-mongodb-operator-certified.v1.11.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:38:58.423000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "percona-server-mongodb-operator-certified",
      "provided_apis": [
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-4-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-11-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDBRestore",
          "plural": "perconaservermongodbrestores",
          "version": "v1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1alpha1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-3-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-2-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-7-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDBBackup",
          "plural": "perconaservermongodbbackups",
          "version": "v1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-8-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-5-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-6-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-9-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "version": "v1-10-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-1-0"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f16d8d2437a49d7c8dfe30f3c9c36764d8f86e35fde64db5148f40612b1a361b",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:f16d8d2437a49d7c8dfe30f3c9c36764d8f86e35fde64db5148f40612b1a361b",
          "name": "mongod4.0"
        },
        {
          "digest": "sha256:a3154bc9ca7ef19371308e90e9cb9051879e48f02c95842b4b39a3208698d312",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:a3154bc9ca7ef19371308e90e9cb9051879e48f02c95842b4b39a3208698d312",
          "name": "mongod4.2"
        },
        {
          "digest": "sha256:580f6eaf815f9bce04185d62c9c6c28a67443c6d379912dff1f28af68af98a5f",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:580f6eaf815f9bce04185d62c9c6c28a67443c6d379912dff1f28af68af98a5f",
          "name": "mongod4.4"
        },
        {
          "digest": "sha256:b14f566236d51a3dfb5e523ab1ce70a72b16f95783f1baf460547893e50dadcf",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:b14f566236d51a3dfb5e523ab1ce70a72b16f95783f1baf460547893e50dadcf",
          "name": "mongod5.0"
        },
        {
          "digest": "sha256:071ac076bdd1ddec2754f4a8e784b09dc1ab457ce1aaf29ba292df993005abff",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:071ac076bdd1ddec2754f4a8e784b09dc1ab457ce1aaf29ba292df993005abff",
          "name": "backup"
        },
        {
          "digest": "sha256:662a64a539a23a8bbad653c71af3bee3dd1038ea575e1d67293b9e2ad4a1d3f1",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator@sha256:662a64a539a23a8bbad653c71af3bee3dd1038ea575e1d67293b9e2ad4a1d3f1",
          "name": "operator"
        },
        {
          "digest": "sha256:662a64a539a23a8bbad653c71af3bee3dd1038ea575e1d67293b9e2ad4a1d3f1",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator@sha256:662a64a539a23a8bbad653c71af3bee3dd1038ea575e1d67293b9e2ad4a1d3f1",
          "name": "percona-server-mongodb-operator-662a64a539a23a8bbad653c71af3bee3dd1038ea575e1d67293b9e2ad4a1d3f1-annotation"
        },
        {
          "digest": "sha256:662a64a539a23a8bbad653c71af3bee3dd1038ea575e1d67293b9e2ad4a1d3f1",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator@sha256:662a64a539a23a8bbad653c71af3bee3dd1038ea575e1d67293b9e2ad4a1d3f1",
          "name": "percona-server-mongodb-operator"
        },
        {
          "digest": "sha256:071ac076bdd1ddec2754f4a8e784b09dc1ab457ce1aaf29ba292df993005abff",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:071ac076bdd1ddec2754f4a8e784b09dc1ab457ce1aaf29ba292df993005abff",
          "name": "percona-server-mongodb-operator-containers-071ac076bdd1ddec2754f4a8e784b09dc1ab457ce1aaf29ba292df993005abff-annotation"
        },
        {
          "digest": "sha256:2cb5ae10f470c71ba760fb2259659c80ddcee1f374e340bf896574325c198614",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:2cb5ae10f470c71ba760fb2259659c80ddcee1f374e340bf896574325c198614",
          "name": "percona-server-mongodb-operator-containers-2cb5ae10f470c71ba760fb2259659c80ddcee1f374e340bf896574325c198614-annotation"
        },
        {
          "digest": "sha256:580f6eaf815f9bce04185d62c9c6c28a67443c6d379912dff1f28af68af98a5f",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:580f6eaf815f9bce04185d62c9c6c28a67443c6d379912dff1f28af68af98a5f",
          "name": "percona-server-mongodb-operator-containers-580f6eaf815f9bce04185d62c9c6c28a67443c6d379912dff1f28af68af98a5f-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.11.0",
      "version_original": "1.11.0"
    },
    {
      "_id": "61d427e9d467cd4ec03ef7ff",
      "alm_examples": [
        {
          "api_version": "apps.openliberty.io/v1beta2",
          "kind": "OpenLibertyApplication",
          "metadata": {
            "name": "openliberty-app-sample"
          },
          "spec": {
            "applicationImage": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
            "expose": true,
            "replicas": 1
          }
        },
        {
          "api_version": "apps.openliberty.io/v1beta2",
          "kind": "OpenLibertyDump",
          "metadata": {
            "name": "openliberty-dump-sample"
          },
          "spec": {
            "include": [
              "thread",
              "heap"
            ],
            "podName": "Specify_Pod_Name_Here"
          }
        },
        {
          "api_version": "apps.openliberty.io/v1beta2",
          "kind": "OpenLibertyTrace",
          "metadata": {
            "name": "openliberty-trace-sample"
          },
          "spec": {
            "maxFileSize": 20,
            "maxFiles": 5,
            "podName": "Specify_Pod_Name_Here",
            "traceSpecification": "*=info:com.ibm.ws.webcontainer*=all"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/open-liberty-operator-bundle@sha256:88ff3cd847c4b606466b1e782cec0dfbdb62fb3dd0e4e1bc8b9c2d1016c74132",
      "bundle_path_digest": "sha256:88ff3cd847c4b606466b1e782cec0dfbdb62fb3dd0e4e1bc8b9c2d1016c74132",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "beta2",
      "creation_date": "2022-01-04T10:56:41.997000+00:00",
      "csv_description": "This advanced Operator can be used to deploy and manage Open Liberty applications with consistent, production-grade QoS. This operator is based on the [Runtime Component Operator](https://github.com/application-stacks/runtime-component-operator) and provides all of its capabilities in addition to Open Liberty specific features such as gathering traces and dumps (Day-2 operations) and easily configuring and managing the single sign-on information for your Open Liberty applications.\n\nOpen Liberty Operator enables enterprise architects to govern the way their applications get deployed & managed in the cluster, while dramatically reducing the learning curve for developers to deploy into Kubernetes - allowing them to focus on writing the code! Here are some key features:\n\n#### Application Lifecyle\nYou can deploy your Open Liberty application container by either pointing to a container image, or an OpenShift ImageStream. When using an ImageStream the Operator will watch for any updates and will re-deploy the modified image.\n\n#### Custom RBAC\nThis Operator is capable of using a custom ServiceAccount from the caller, allowing it to follow RBAC restrictions. By default it creates a ServiceAccount if one is not specified, which can also be bound with specific roles.\n\n#### Environment Configuration\nYou can configure a variety of artifacts with your deployment, such as: labels, annotations, and environment variables from a ConfigMap, a Secret or a value.\n\n#### Routing\nExpose your application to external users via a single toggle to create a Route on OpenShift or an Ingress on other Kubernetes environments. Advanced configuration, such as TLS settings, are also easily enabled. Expiring Route certificates are re-issued.\n\n#### High Availability via Horizontal Pod Autoscaling\nRun multiple instances of your application for high availability. Either specify a static number of replicas or easily configure horizontal auto scaling to create (and delete) instances based on resource consumption.\n\n#### Persistence and advanced storage\nEnable persistence for your application by specifying simple requirements: just tell us the size of the storage and where you would like it to be mounted and We will create and manage that storage for you.\nThis toggles a StatefulSet resource instead of a Deployment resource, so your container can recover transactions and state upon a pod restart.\nWe offer an advanced mode where the user specifies a built-in PersistentVolumeClaim, allowing them to configure many details of the persistent volume, such as its storage class and access mode.\nYou can also easily configure and use a single storage for serviceability related Day-2 operations, such as gatherig server traces and dumps.\n\n#### Service Binding\nYour runtime components can expose services by a simple toggle. We take care of the heavy lifting such as creating kubernetes Secrets with information other services can use to bind. We also keep the bindable information synchronized, so your applications can dynamically reconnect to its required services without any intervention or interruption.\n\n#### Single Sign-On (SSO)\nOpen Liberty provides capabilities to delegate authentication to external providers. Your application users can log in using their existing social media credentials from providers such as Google, Facebook, LinkedIn, Twitter, GitHub, and any OpenID Connect (OIDC) or OAuth 2.0 clients. Open Liberty Operator allows to easily configure and manage the single sign-on information for your applications.\n\n#### Exposing metrics to Prometheus\nThe Open Liberty Operator exposes the runtime container's metrics via the [Prometheus Operator](https://operatorhub.io/operator/prometheus).\nUsers can pick between a basic mode, where they simply specify the label that Prometheus is watching to scrape the metrics from the container, or they can specify the full `ServiceMonitor` spec embedded into the OpenLibertyApplication's `spec.monitoring` key controlling things like the poll internal and security credentials.\n\n#### Easily mount logs and transaction directories\nIf you need to mount the logs and transaction data from your application to an external volume such as NFS (or any storage supported in your cluster), simply add the following (customizing the folder location and size) to your OpenLibertyApplication CR:\n``` storage: size: 2Gi mountPath: \"/logs\" ```\n\n#### Integration with OpenShift Serverless\nDeploy your serverless runtime component using a single toggle.  The Operator will convert all of its generated resources into [Knative](https://knative.dev) resources, allowing your pod to automatically scale to 0 when it is idle.\n\n#### Integration with OpenShift's Topology UI\nWe set the corresponding labels to support OpenShift's Developer Topology UI, which allows you to visualize your entire set of deployments and how they are connected.\n\nSee our [**documentation**](https://github.com/OpenLiberty/open-liberty-operator/tree/main/doc/) for more information.\n",
      "csv_display_name": "Open Liberty",
      "csv_metadata_description": "Deploy and manage applications running on Liberty",
      "csv_name": "open-liberty-operator.v0.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:53:06.447000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "open-liberty-certified",
      "provided_apis": [
        {
          "group": "apps.openliberty.io",
          "kind": "OpenLibertyApplication",
          "plural": "openlibertyapplications",
          "version": "v1beta2"
        },
        {
          "group": "apps.openliberty.io",
          "kind": "OpenLibertyDump",
          "plural": "openlibertydumps",
          "version": "v1beta2"
        },
        {
          "group": "apps.openliberty.io",
          "kind": "OpenLibertyTrace",
          "plural": "openlibertytraces",
          "version": "v1beta2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:43b3f004a19c91c80ba815aedc1b361b87cd12daa28bb215e6775e64ef890af1",
          "image": "registry.connect.redhat.com/ibm/open-liberty-operator-controller@sha256:43b3f004a19c91c80ba815aedc1b361b87cd12daa28bb215e6775e64ef890af1",
          "name": "open-liberty-operator-controller-43b3f004a19c91c80ba815aedc1b361b87cd12daa28bb215e6775e64ef890af1-annotation"
        },
        {
          "digest": "sha256:43b3f004a19c91c80ba815aedc1b361b87cd12daa28bb215e6775e64ef890af1",
          "image": "registry.connect.redhat.com/ibm/open-liberty-operator-controller@sha256:43b3f004a19c91c80ba815aedc1b361b87cd12daa28bb215e6775e64ef890af1",
          "name": "manager"
        },
        {
          "digest": "sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "image": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "name": "open-liberty-samples-8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<0.8.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.8.0",
      "version_original": "0.8.0"
    },
    {
      "_id": "61d427f28093b97ef52e1e7a",
      "alm_examples": [
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AirgappedDeployment",
          "metadata": {
            "name": "airgappeddeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AnalyticsProxy",
          "metadata": {
            "name": "analyticsproxy"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "DeleteCluster",
          "metadata": {
            "name": "deletecluster"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "FullDeployment",
          "metadata": {
            "name": "fulldeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "GenerateKey",
          "metadata": {
            "name": "bas-api-key"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "StoreForwardMetric",
          "metadata": {
            "name": "storeforwardmetric"
          },
          "spec": {
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "Dashboard",
          "metadata": {
            "name": "dashboard"
          },
          "spec": {
            "enable_test_api": true,
            "image_pull_secret": "bas-images-pull-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator-bundle@sha256:77fedadffaa16d08331a62b23569ddd05108d22b1de4d598250eedceba907abe",
      "bundle_path_digest": "sha256:77fedadffaa16d08331a62b23569ddd05108d22b1de4d598250eedceba907abe",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-04T10:56:50.843000+00:00",
      "csv_description": "Behavior Analytics Services Operator is a service that collects, transforms and transmits product usage data.\nThe Operator supports deployments using-\nA. Dashboard\nB. Openshift portal or CLI\n\n**A. Dashboard**\n----\nWhen the Operator is installed, the Dashboard is installed too. Goto the Dashboard Custom Resource to get the URL to the Dashboard.\n\n\n**B. Openshift portal or CLI**\n----\n----\nFor manual installation using Openshift portal or CLI, follow the steps below\n\n\n**Pre-requisites**\n----\nStep 1: Create a new Project\n```sh\noc new-project <project-name>\n```\n\nStep 2: Create a secret named \"database-credentials\" for PostgreSQL DB\n```sh\n oc create secret generic database-credentials --from-literal=db_username=<DB Username> --from-literal=db_password=<DB Password> -n <project-name>\n```\n\nStep 3: [Optional] If the images require a secret to pull the container images, create a secret of type dockerconfigjson. Pass this secret name in the CR spec image\\_pull\\_secret\n```sh\noc create secret generic bas-images-pull-secret --from-file=.dockerconfigjson=<path/to/.docker/config.json>  --type=kubernetes.io/dockerconfigjson\n```\n\nStep 4: Create a secret named \"mtls-proxy-secret\" which has the client key and certificate to connect to IBM Proxy service. If you don't have certificates then refer link https://developers.cloudflare.com/access/service-auth/mtls-testing#generating-the-root-ca to create root and client certificates. Please ensure to share root certificate with edge@us.ibm.com to allow access to IBM proxy service using client certificate.\n```sh\noc create secret tls mtls-proxy-secret --key client-key.pem --cert client.pem\n```\n\n**Installing the Behavior Analytics Services**\n----\n\nSelect any one of the deployments to setup the Behavior Analytics Services\n1. Full Deployment\n2. Analytics Proxy Deployment\n3. Store and Forward metrics Deployment\n4. Airgapped Analytics Proxy Deployment\n\n| Spec                                                      | Description                                                      | Default Value          |\n| --------------------------------------------------------- | ------------------------------------------------------------ | ---------------------- |\n| `ibmproxyurl`                                               | URL of IBM Proxy Service                                     | `https://iaps.ibm.com`   |\n| `postgres.storage_class`                                    | Storage class of type ReadWriteOnce                          | Required user input        |\n| `postgres.size`                                             | Size (in G) of the storage to be attached to Database        | `10G`                    |\n| `kafka.storage_class`                                       | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.storage_size`                                        | Size (in G) of the storage to be attached to Kafka  | `5G`                     |\n| `kafka.zookeeper_storage_class`                                 | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.zookeeper_storage_size`                                 | Size (in G) of the storage to be attached to Zookeeper | `5G`                     |\n| `airgapped.enabled`                                         | Set value to \"true\" if airgapped setup is to be enabled otherwise keep the default value \"false\" | `false`                  |\n| `airgapped.backup_retention_period`   | Number of days to keep the backup files in the storage       | `7`                     |\n| `airgapped.backup_deletion_frequency` | Frequency of job to delete files from the storage. It accepts values in Cron format (https://en.wikipedia.org/wiki/Cron) | `@daily`                 |\n| `event_scheduler_frequency`                               | Frequency at which events will be forwarded to proxy in Cron format. In case if internet connection available on the cluster only during a certain time frame, specify time in UTC equivalent Cron format. | `@hourly`                |\n| `prometheus_scheduler_frequency`                          | Frequency in Cronjob format to pull metrics from Prometheus  | `@daily`                |\n| `image_pull_secret`                                       | Secret to pull container images from registry                | `bas-images-pull-secret` |\n| `db_archive.frequency`                                    | Frequency in Cronjob format to run archive job                                                           | `@monthly`             |\n| `db_archive.retention_age`                                | Number of months to retain the data in Database              | `6`                    |\n| `db_archive.persistent_storage.storage_class`             |Storage class of type ReadWriteMany         | Required user input    |\n| `db_archive.persistent_storage.storage_size`              | Size (in G) of the storage to be attached for saving airgapped files | `10G`                  |\n| `prometheus_metrics`                                      | Array of metrics information to be send to destination at desired frequency | []\n| `env_type`              | Type of environment. Can be **prod** (HA) or **lite** (non HA)   | `lite`                  |\n| `allowed_domains`                                         | Comma separated values of domains allowed by BAS. By default all domains are allowed | '*'\n\n\n**Generating the API Key**\n----\nOnce the deployment is complete, to use the Behavior Analytics Services Endpoints, generate an API key using the CR GenerateKey. This API key to be used to authenticate Behavior Analytics Services Endpoints.\n\nNote- Key can be retrieved from the secret with same name used while creating Generate Key CR's instance.\nOnce you get key from the secret, decode it using below command:\n```sh\necho -n <secret key> | base64 -d\n```\n\n**Deleting the API Key**\n----\nTo revoke the Key, delete the corresponding GenerateKey instance.\n\n**Using Behavior Analytics Services Endpoints**\n---\nFor all BAS APIs, use the Generated API Key for Authentication. Pass it as the Header- X-API-KEY and the key while using the APIs.\n",
      "csv_display_name": "Behavior Analytics Services",
      "csv_metadata_description": "Behavior Analytics Services is a service that collects, transforms and transmits product usage data.",
      "csv_name": "behavior-analytics-services-operator-certified.v1.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:42:16.643000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "behavior-analytics-services-operator-certified",
      "provided_apis": [
        {
          "group": "bas.ibm.com",
          "kind": "DeleteCluster",
          "plural": "deleteclusters",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "FullDeployment",
          "plural": "fulldeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "GenerateKey",
          "plural": "generatekeys",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "StoreForwardMetric",
          "plural": "storeforwardmetrics",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AirgappedDeployment",
          "plural": "airgappeddeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AnalyticsProxy",
          "plural": "analyticsproxies",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "Dashboard",
          "plural": "dashboards",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:c30a58a4f7a6457bf7da404ccde64f58f26162eeee0be9cc01ad517542027e2a",
          "image": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator@sha256:c30a58a4f7a6457bf7da404ccde64f58f26162eeee0be9cc01ad517542027e2a",
          "name": "behavior-analytics-services-operator"
        },
        {
          "digest": "sha256:8e0f1d33edf005eb2dfafed9b8367435b0f33ef4adf006bc75338f2a88e8942c",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:8e0f1d33edf005eb2dfafed9b8367435b0f33ef4adf006bc75338f2a88e8942c",
          "name": "dashboardinstaller"
        },
        {
          "digest": "sha256:b35f209bb491f88da6a9e6ca2b55675a4d0eeb69c4a369a07704cd9a9443a058",
          "image": "registry.connect.redhat.com/ibm-edge/event-api@sha256:b35f209bb491f88da6a9e6ca2b55675a4d0eeb69c4a369a07704cd9a9443a058",
          "name": "event_api"
        },
        {
          "digest": "sha256:a606caf41cb689bb3496d1e76312ebbbe531ab5df52d4d0813bd7763cc170da1",
          "image": "registry.connect.redhat.com/ibm-edge/store-api@sha256:a606caf41cb689bb3496d1e76312ebbbe531ab5df52d4d0813bd7763cc170da1",
          "name": "store_api"
        },
        {
          "digest": "sha256:0b5a7b02e4cb4baf0e08171fdd1d7d35a16bb82254ff2e245e051e483f6cd08c",
          "image": "registry.connect.redhat.com/ibm-edge/event-reader@sha256:0b5a7b02e4cb4baf0e08171fdd1d7d35a16bb82254ff2e245e051e483f6cd08c",
          "name": "reader"
        },
        {
          "digest": "sha256:caf7464165c82783ec83f0cffd1163cbfdffc4bad1f81def00dd3a25ae8a806c",
          "image": "registry.connect.redhat.com/ibm-edge/event-scheduler@sha256:caf7464165c82783ec83f0cffd1163cbfdffc4bad1f81def00dd3a25ae8a806c",
          "name": "event_scheduler"
        },
        {
          "digest": "sha256:08ba04c0c3a0966568538ac709f7bb243f7768c1f200c1a7c99e2761144a9a6b",
          "image": "registry.connect.redhat.com/ibm-edge/prometheus-scheduler@sha256:08ba04c0c3a0966568538ac709f7bb243f7768c1f200c1a7c99e2761144a9a6b",
          "name": "prometheus_scheduler"
        },
        {
          "digest": "sha256:90ddecb54abe2880b86016a407507cecf77a113b4c7724235ab0abd21ad1d9aa",
          "image": "registry.connect.redhat.com/ibm-edge/pgo-client@sha256:90ddecb54abe2880b86016a407507cecf77a113b4c7724235ab0abd21ad1d9aa",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:815630d23e8d88664907fbf8096952adfd22593a4989063e9dd55549e674ee15",
          "image": "registry.connect.redhat.com/ibm-edge/reverse-proxy@sha256:815630d23e8d88664907fbf8096952adfd22593a4989063e9dd55549e674ee15",
          "name": "nginx"
        },
        {
          "digest": "sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "image": "registry.redhat.io/openshift4/ose-grafana@sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "name": "grafana"
        },
        {
          "digest": "sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "image": "registry.redhat.io/openshift3/ose-kube-state-metrics@sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "name": "ksm"
        },
        {
          "digest": "sha256:3288307dd03844ec3574ca5c173d7f608755fd23654434c48ea2e854fe0f22cf",
          "image": "registry.connect.redhat.com/ibm-edge/growth-stack-base@sha256:3288307dd03844ec3574ca5c173d7f608755fd23654434c48ea2e854fe0f22cf",
          "name": "init_container"
        },
        {
          "digest": "sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "image": "registry.access.redhat.com/ubi8/ubi@sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "name": "ubi"
        },
        {
          "digest": "sha256:19a8b33e2f4c2beee5266d5243abb7f43d85322fc62800899759cdf6ec568fee",
          "image": "registry.connect.redhat.com/ibm-edge/airgap-download-ui@sha256:19a8b33e2f4c2beee5266d5243abb7f43d85322fc62800899759cdf6ec568fee",
          "name": "download_ui"
        },
        {
          "digest": "sha256:9f6eae3e715d9aff6d9674059fb6bf4f6dfc3ad42f015200c69b481becd7abd9",
          "image": "registry.connect.redhat.com/ibm-edge/bas-operator-dashboard@sha256:9f6eae3e715d9aff6d9674059fb6bf4f6dfc3ad42f015200c69b481becd7abd9",
          "name": "dashboard_ui"
        },
        {
          "digest": "sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "image": "registry.connect.redhat.com/crunchydata/pgo-deployer@sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "name": "pgo_deployer"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.1.2",
      "version_original": "1.1.2"
    },
    {
      "_id": "61d42800d467cd4ec03ef800",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:acad9af174541d2b39a02a216dd462ee0d47d8dc3c9cb44371f0a6bbf1c83d3d",
      "bundle_path_digest": "sha256:acad9af174541d2b39a02a216dd462ee0d47d8dc3c9cb44371f0a6bbf1c83d3d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T10:57:04.364000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:22:58.577000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator-879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d-annotation"
        },
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:490db38c4cc1aa124f6ddd020f3ef6f8f1dfdf0913a25b2cfba9952dd2c0d6d5",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:490db38c4cc1aa124f6ddd020f3ef6f8f1dfdf0913a25b2cfba9952dd2c0d6d5",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "8.4.1",
      "version_original": "8.4.1"
    },
    {
      "_id": "61d42c138093b97ef52e1e95",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:96a04fb99af74bc88406278004fbbdad4ae9b11189fd35347ebc86f065f8ae4b",
      "bundle_path_digest": "sha256:96a04fb99af74bc88406278004fbbdad4ae9b11189fd35347ebc86f065f8ae4b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v2.2",
      "creation_date": "2022-01-04T11:14:27.933000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:39:41.929000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "name": "COUCHDB-MGMT"
        },
        {
          "digest": "sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "name": "couchdb-operator-4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4-annotation"
        },
        {
          "digest": "sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "name": "couchdb-operator"
        },
        {
          "digest": "sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "name": "couchdb3"
        },
        {
          "digest": "sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "name": "mgmt"
        }
      ],
      "replaces": "",
      "skip_range": ">=1.0.0 <2.2.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.2.0",
      "version_original": "2.2.0"
    },
    {
      "_id": "61d42c298093b97ef52e1e96",
      "alm_examples": [
        {
          "api_version": "charts.paloaltonetworks.com/v1",
          "kind": "PanCnSeriesFirewall",
          "metadata": {
            "name": "pancnseriesfirewall-sample"
          },
          "spec": {
            "affinity": {},
            "cni": {
              "image": "gcr.io/itp-ext-cnseries/10.1.3/pan_cni",
              "version": "latest"
            },
            "csp": {},
            "dp": {
              "cpuLimit": 2,
              "image": "gcr.io/itp-ext-cnseries/10.1.3/panos_cn_ngfw"
            },
            "firewall": {
              "failoverMode": "failopen",
              "licenseBundle": "bundle2"
            },
            "fullnameOverride": "",
            "imagePullSecrets": [],
            "mp": {
              "cpuLimit": 4,
              "image": "gcr.io/itp-ext-cnseries/10.1.3/panos_cn_mgmt",
              "initImage": "gcr.io/itp-ext-cnseries/10.1.3/pan_cn_mgmt_init",
              "initVersion": "latest"
            },
            "nameOverride": "",
            "nodeSelector": {},
            "panorama": {
              "authKey": "",
              "ip": "x.x.x.x"
            },
            "podSecurityContext": {},
            "resources": {},
            "securityContext": {},
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/paloalto/not-applicable@sha256:606f6f43f543d631a463d2f581f2b30cc76ad0ba6b0302fc7ae3c52a578cbcb2",
      "bundle_path_digest": "sha256:606f6f43f543d631a463d2f581f2b30cc76ad0ba6b0302fc7ae3c52a578cbcb2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-04T11:14:49.340000+00:00",
      "csv_description": "**Palo Alto CN-Series NGFW (container firewall)**\n\n**Product Overview:** \nThe CN-Series firewall enables you to:\n1. Gain Layer-7 traffic visibility and control within the cluster\n2. Stop lateral movement of threats\n3. Prevent known and unknown inbound attacks\n4. Apply egress filtering to prevent data exfiltration and unwanted outbound connections\n5. Dynamically scale security without compromising DevOps agility.\n6. Ensure a frictionless CI/CD pipeline deployment.\n7. Unify management across all your firewalls using Panorama.\n\nDeploy CN-Series as-a-Kubernetes service and manage the fleet of firewalls from Panorama, alongside our hardware and VM-Series NGFW appliances to ensure consistent security posture everywhere. This subscription also includes industry-leading Threat Prevention, WildFire, URL Filtering, and DNS Security subscriptions that provide best-in-class runtime network security for East-West, Outbound and Inbound traffic.\n\n[Pre-Install Steps and Documentation](https://docs.paloaltonetworks.com/cn-series/10-1/cn-series-deployment/secure-kubernetes-workloads-with-cn-series.html)\n\n[Post-Install Steps and Documentation](https://github.com/PaloAltoNetworks/Kubernetes/tree/v2.0) -- Instructions at bottom of README (Multus and Openshift)",
      "csv_display_name": "pan-cn-series-operator",
      "csv_metadata_description": "",
      "csv_name": "pan-cn-series-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:52:47.607000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "pan-cn-series-operator",
      "provided_apis": [
        {
          "group": "charts.paloaltonetworks.com",
          "kind": "PanCnSeriesFirewall",
          "plural": "pancnseriesfirewalls",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:56d6c27633fa632bf6449ee8de8061cbcd705d90327a9fa8b665d9dd5ef50323",
          "image": "us.gcr.io/panw-gcp-team-testing/paloaltonetworks/pan-cn-series-operator@sha256:56d6c27633fa632bf6449ee8de8061cbcd705d90327a9fa8b665d9dd5ef50323",
          "name": "pan-cn-series-operator"
        },
        {
          "digest": "sha256:56d6c27633fa632bf6449ee8de8061cbcd705d90327a9fa8b665d9dd5ef50323",
          "image": "us.gcr.io/panw-gcp-team-testing/paloaltonetworks/pan-cn-series-operator@sha256:56d6c27633fa632bf6449ee8de8061cbcd705d90327a9fa8b665d9dd5ef50323",
          "name": "paloaltonetworks/pan-cn-series-operator-56d6c27633fa632bf6449ee8de8061cbcd705d90327a9fa8b665d9dd5ef50323-annotation"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:56d6c27633fa632bf6449ee8de8061cbcd705d90327a9fa8b665d9dd5ef50323",
          "image": "us.gcr.io/panw-gcp-team-testing/paloaltonetworks/pan-cn-series-operator@sha256:56d6c27633fa632bf6449ee8de8061cbcd705d90327a9fa8b665d9dd5ef50323",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "61d43092d467cd4ec03ef970",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:bb9a141e7420196baf0bfc456ae28d7d150f6b40de987b214d0833207fcc1a3e",
      "bundle_path_digest": "sha256:bb9a141e7420196baf0bfc456ae28d7d150f6b40de987b214d0833207fcc1a3e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-01-04T11:33:38.437000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.2 of the NeuVector Certified Operator deploys version 4.4.2 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:51:46.689000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0",
          "name": "neuvector-operator-a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0-annotation"
        },
        {
          "digest": "sha256:a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:ecc4814bf9e38d41898ae2354bbafd2f1ed7c6e5602bb30cb40486e67725395c",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:ecc4814bf9e38d41898ae2354bbafd2f1ed7c6e5602bb30cb40486e67725395c",
          "name": "controller"
        },
        {
          "digest": "sha256:4621d69ca47929eedcab2c9163fc9d73ede09e0cd14f2a14db495e610590f5c2",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:4621d69ca47929eedcab2c9163fc9d73ede09e0cd14f2a14db495e610590f5c2",
          "name": "enforcer"
        },
        {
          "digest": "sha256:b49ba8bba9aaf292603896d5d3b9e5328b23260dfd977c70e7f3e39460564679",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:b49ba8bba9aaf292603896d5d3b9e5328b23260dfd977c70e7f3e39460564679",
          "name": "manager"
        },
        {
          "digest": "sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "name": "scanner"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "updater"
        },
        {
          "digest": "sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "name": "scanner-d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038-annotation"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "ubi8-228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.3.2",
      "version_original": "1.3.2"
    },
    {
      "_id": "61d430fcc6d6ba37322fdeb3",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:bb9a141e7420196baf0bfc456ae28d7d150f6b40de987b214d0833207fcc1a3e",
      "bundle_path_digest": "sha256:bb9a141e7420196baf0bfc456ae28d7d150f6b40de987b214d0833207fcc1a3e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-01-04T11:35:24.281000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.2 of the NeuVector Certified Operator deploys version 4.4.2 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:54:04.820000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0",
          "name": "neuvector-operator-a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0-annotation"
        },
        {
          "digest": "sha256:a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:a9f3e9bb91fa89aeff8133349673c0900258586f955251dd30fbd5fecabdf4d0",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:ecc4814bf9e38d41898ae2354bbafd2f1ed7c6e5602bb30cb40486e67725395c",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:ecc4814bf9e38d41898ae2354bbafd2f1ed7c6e5602bb30cb40486e67725395c",
          "name": "controller"
        },
        {
          "digest": "sha256:4621d69ca47929eedcab2c9163fc9d73ede09e0cd14f2a14db495e610590f5c2",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:4621d69ca47929eedcab2c9163fc9d73ede09e0cd14f2a14db495e610590f5c2",
          "name": "enforcer"
        },
        {
          "digest": "sha256:b49ba8bba9aaf292603896d5d3b9e5328b23260dfd977c70e7f3e39460564679",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:b49ba8bba9aaf292603896d5d3b9e5328b23260dfd977c70e7f3e39460564679",
          "name": "manager"
        },
        {
          "digest": "sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "name": "scanner"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "updater"
        },
        {
          "digest": "sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "name": "scanner-d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038-annotation"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "ubi8-228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.3.2",
      "version_original": "1.3.2"
    },
    {
      "_id": "61d43125c6d6ba37322fdeb6",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:96a04fb99af74bc88406278004fbbdad4ae9b11189fd35347ebc86f065f8ae4b",
      "bundle_path_digest": "sha256:96a04fb99af74bc88406278004fbbdad4ae9b11189fd35347ebc86f065f8ae4b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T11:36:05.932000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:53:13.572000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "name": "COUCHDB-MGMT"
        },
        {
          "digest": "sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "name": "couchdb-operator-4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4-annotation"
        },
        {
          "digest": "sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "name": "couchdb-operator"
        },
        {
          "digest": "sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "name": "couchdb3"
        },
        {
          "digest": "sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "name": "mgmt"
        }
      ],
      "replaces": "",
      "skip_range": ">=1.0.0 <2.2.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.2.0",
      "version_original": "2.2.0"
    },
    {
      "_id": "61d4315c8093b97ef52e1fdc",
      "alm_examples": [
        {
          "api_version": "ezmeral.hpe.com/v1",
          "kind": "HPEEzmeralCSIDriver",
          "metadata": {
            "name": "hpeezmeralcsidriver"
          },
          "spec": {
            "controllerImage": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
            "nodeImage": "registry.connect.redhat.com/maprtech/csi-kdfplugin@sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
            "pullPolicy": "Always"
          }
        },
        {
          "api_version": "ezmeral.hpe.com/v1",
          "kind": "HPEEzmeralNFSCSIDriver",
          "metadata": {
            "name": "hpeezmeralnfscsidriver"
          },
          "spec": {
            "controllerImage": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
            "nodeImage": "registry.connect.redhat.com/maprtech/csi-nfsplugin@sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
            "pullPolicy": "Always"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator-bundle@sha256:78c606d805d196915a282b66ac05258c6205515498887f3d02c3e1b67e459bae",
      "bundle_path_digest": "sha256:78c606d805d196915a282b66ac05258c6205515498887f3d02c3e1b67e459bae",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T11:37:00.953000+00:00",
      "csv_description": "The HPE Ezmeral CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE Ezmeral CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE Ezmeral Data Fabric platform.\nThe HPE Ezmeral CSI Driver for Kubernetes leverages HPE Ezmeral Data Fabric platform to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://docs.datafabric.hpe.com/home/CSIdriver/csi_overview.html) for full list of supported CSI features.\n## Installation\nRefer to the HPE Ezmeral CSI Operator for Kubernetes [documentation](https://docs.datafabric.hpe.com/home/CSIdriver/csi_installing_operator.html)\n",
      "csv_display_name": "HPE Ezmeral Data Fabric CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE Ezmeral Data Fabric platform. The CSI driver allows you to use HPE Ezmeral Data Fabric with your preferred container orchestrator.",
      "csv_name": "hpe-ezmeral-csi-operator.v1.0.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:53:43.036000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "hpe-ezmeral-csi-operator",
      "provided_apis": [
        {
          "group": "ezmeral.hpe.com",
          "kind": "HPEEzmeralCSIDriver",
          "version": "v1"
        },
        {
          "group": "ezmeral.hpe.com",
          "kind": "HPEEzmeralNFSCSIDriver",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "image": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator@sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "name": "hpe-ezmeral-csi-operator-82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f-annotation"
        },
        {
          "digest": "sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "image": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator@sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "name": "hpe-ezmeral-csi-operator"
        },
        {
          "digest": "sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
          "image": "registry.connect.redhat.com/maprtech/csi-nfsplugin@sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
          "name": "csi-nfsplugin-35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822-annotation"
        },
        {
          "digest": "sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
          "image": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
          "name": "csi-kdfprovisioner-89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42-annotation"
        },
        {
          "digest": "sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
          "image": "registry.connect.redhat.com/maprtech/csi-kdfplugin@sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
          "name": "csi-kdfplugin-480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.0.8",
      "version_original": "1.0.8"
    },
    {
      "_id": "61d4354dd467cd4ec03ef973",
      "alm_examples": [
        {
          "api_version": "pxc.percona.com/v1-10-0",
          "kind": "PerconaXtraDBCluster",
          "metadata": {
            "finalizers": [
              "delete-pxc-pods-in-order"
            ],
            "name": "cluster1"
          },
          "spec": {
            "allowUnsafeConfigurations": false,
            "backup": {
              "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:6ab8efb3804d1e519e49ee10eb46b428a837cfdcee222cc5ae2089cc1dc02a6d",
              "pitr": {
                "enabled": false,
                "storageName": "STORAGE-NAME-HERE",
                "timeBetweenUploads": 60
              },
              "schedule": [
                {
                  "keep": 3,
                  "name": "sat-night-backup",
                  "schedule": "0 0 * * 6",
                  "storageName": "s3-us-west"
                },
                {
                  "keep": 5,
                  "name": "daily-backup",
                  "schedule": "0 0 * * *",
                  "storageName": "fs-pvc"
                }
              ],
              "storages": {
                "fs-pvc": {
                  "type": "filesystem",
                  "volume": {
                    "persistentVolumeClaim": {
                      "accessModes": [
                        "ReadWriteOnce"
                      ],
                      "resources": {
                        "requests": {
                          "storage": "6G"
                        }
                      }
                    }
                  }
                },
                "s3-us-west": {
                  "s3": {
                    "bucket": "S3-BACKUP-BUCKET-NAME-HERE",
                    "credentialsSecret": "my-cluster-name-backup-s3",
                    "region": "us-west-2"
                  },
                  "type": "s3"
                }
              }
            },
            "crVersion": "1.10.0",
            "haproxy": {
              "affinity": {
                "antiAffinityTopologyKey": "kubernetes.io/hostname"
              },
              "enabled": true,
              "gracePeriod": 30,
              "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:2f06ac4a0f39b2c0253421c3d024291d5ba19d41e35e633ff6ddcf4ba67fd51a",
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "resources": {
                "requests": {
                  "cpu": "600m",
                  "memory": "1G"
                }
              },
              "size": 3
            },
            "logCollectorSecretName": "my-log-collector-secrets",
            "logcollector": {
              "enabled": true,
              "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:6e5a945b2a824ee34befd864b98d85727fe3849d83f8942463bca87210c19bca",
              "resources": {
                "requests": {
                  "cpu": "200m",
                  "memory": "100M"
                }
              }
            },
            "pmm": {
              "enabled": false,
              "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:d25b59fc82a22f65fe90fee6b1b6938fcd8172f534a5d6573914009a39578e1e",
              "resources": {
                "requests": {
                  "cpu": "300m",
                  "memory": "150M"
                }
              },
              "serverHost": "monitoring-service",
              "serverUser": "admin"
            },
            "proxysql": {
              "affinity": {
                "antiAffinityTopologyKey": "kubernetes.io/hostname"
              },
              "enabled": false,
              "gracePeriod": 30,
              "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:a727ccc8d9f17bc715309e9cf05b4903f38518a0cfee02a4822c8ac301cb01d6",
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "resources": {
                "requests": {
                  "cpu": "600m",
                  "memory": "1G"
                }
              },
              "size": 3,
              "volumeSpec": {
                "persistentVolumeClaim": {
                  "resources": {
                    "requests": {
                      "storage": "2G"
                    }
                  }
                }
              }
            },
            "pxc": {
              "affinity": {
                "antiAffinityTopologyKey": "kubernetes.io/hostname"
              },
              "autoRecovery": true,
              "gracePeriod": 600,
              "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:dbb944de701dbcd030aacd430a09f5c329c95991bd4257aed8a7407169b7e4b2",
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "resources": {
                "requests": {
                  "cpu": "600m",
                  "memory": "1G"
                }
              },
              "size": 3,
              "volumeSpec": {
                "persistentVolumeClaim": {
                  "resources": {
                    "requests": {
                      "storage": "6G"
                    }
                  }
                }
              }
            },
            "secretsName": "my-cluster-secrets",
            "sslInternalSecretName": "my-cluster-ssl-internal",
            "sslSecretName": "my-cluster-ssl",
            "updateStrategy": "SmartUpdate",
            "upgradeOptions": {
              "apply": "8.0-recommended",
              "schedule": "0 4 * * *",
              "versionServiceEndpoint": "https://check.percona.com"
            },
            "vaultSecretName": "keyring-secret-vault"
          }
        },
        {
          "api_version": "pxc.percona.com/v1",
          "kind": "PerconaXtraDBClusterBackup",
          "metadata": {
            "name": "backup1"
          },
          "spec": {
            "pxcCluster": "cluster1",
            "storageName": "fs-pvc"
          }
        },
        {
          "api_version": "pxc.percona.com/v1alpha1",
          "kind": "PerconaXtraDBBackup",
          "metadata": {
            "name": "backup1"
          },
          "spec": {
            "pxcCluster": "cluster1",
            "storageName": "s3-us-west"
          }
        },
        {
          "api_version": "pxc.percona.com/v1",
          "kind": "PerconaXtraDBClusterRestore",
          "metadata": {
            "name": "restore1"
          },
          "spec": {
            "backupName": "backup1",
            "pxcCluster": "cluster1"
          }
        },
        {
          "api_version": "pxc.percona.com/v1",
          "kind": "PerconaXtraDBClusterBackup",
          "metadata": {
            "name": "backup1"
          },
          "spec": {
            "pxcCluster": "cluster1",
            "storageName": "fs-pvc"
          }
        },
        {
          "api_version": "pxc.percona.com/v1alpha1",
          "kind": "PerconaXtraDBBackup",
          "metadata": {
            "name": "backup1"
          },
          "spec": {
            "pxcCluster": "cluster1",
            "storageName": "s3-us-west"
          }
        },
        {
          "api_version": "pxc.percona.com/v1",
          "kind": "PerconaXtraDBClusterRestore",
          "metadata": {
            "name": "restore1"
          },
          "spec": {
            "backupName": "backup1",
            "pxcCluster": "cluster1"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-bundle@sha256:fefce85e617428a43eebe47f6d99d31ff298b797945b0fccb9eff498d133b0fb",
      "bundle_path_digest": "sha256:fefce85e617428a43eebe47f6d99d31ff298b797945b0fccb9eff498d133b0fb",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T11:53:49.304000+00:00",
      "csv_description": "\n## Percona is Cloud Native\n\nPercona Distribution for MySQL Operator is an open-source drop in replacement for MySQL Enterprise with synchronous replication running on Kubernetes. It automates the deployment and management of the members in your Percona XtraDB Cluster environment. It can be used to instantiate a new Percona XtraDB Cluster, or to scale an existing environment.\n\nConsult the [documentation](https://percona.github.io/percona-xtradb-cluster-operator/) on the Percona Distribution for MySQL Operator for complete details on capabilities and options.\n\n### Supported Features\n\n* **Scale Your Cluster**  change the `size` parameter to [add or remove members](https://percona.github.io/percona-xtradb-cluster-operator/install/scaling) of the cluster. Three is the minimum recommended size for a functioning cluster.\n\n* **Manage Your Users**  [add, remove, or change](https://percona.github.io/percona-xtradb-cluster-operator/configure/users) the privileges of database users\n\n* **Automate Your Backups**  [configure cluster backups](https://percona.github.io/percona-xtradb-cluster-operator/configure/operator) to run on a scheduled basis. Backups can be stored on a persistent volume or S3-compatible storage. Leverage [Point-in-time recovery](https://www.percona.com/doc/kubernetes-operator-for-pxc/backups.html#storing-binary-logs-for-point-in-time-recovery) to reduce RPO/RTO.\n* **Proxy integration**  choose HAProxy or ProxySQL as a proxy in front of the Percona XtraDB Cluster. Proxies are deployed and configured automatically with the Operator.\n\n### Common Configurations\n\n* **Set Resource Limits** - set limitation on requests to CPU and memory resources.\n\n* **Customize Storage** - set the desired Storage Class and Access Mode for your database cluster data.\n\n* **Control Scheduling** - define how your PXC Pods are scheduled onto the K8S cluster with tolerations, pod disruption budgets, node selector and affinity settings.\n* Automatic synchronization of MySQL users with ProxySQL\n* HAProxy Support\n* Fully automated minor version updates (Smart Update)\n* Update Reader members before Writer member at cluster upgrades\n* Support MySQL versions 5.7 and 8.0\n### Before You Start\n\nAdd the PXC user `Secret` to Kubernetes. User information must be placed in the data section of the `secrets.yaml`\nfile with Base64-encoded logins and passwords for the user accounts.\n\nBelow is a sample `secrets.yaml` file for the correct formatting.\n\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: my-cluster-secrets\ntype: Opaque\ndata:\n  root: cm9vdF9wYXNzd29yZA==\n  xtrabackup: YmFja3VwX3Bhc3N3b3Jk\n  monitor: bW9uaXRvcg==\n  clustercheck: Y2x1c3RlcmNoZWNrcGFzc3dvcmQ=\n  proxyadmin: YWRtaW5fcGFzc3dvcmQ=\n  pmmserver: c3VwYXxefHBheno=\n  operator: b3BlcmF0b3JhZG1pbg==\n```\n###  Release Highlights\n* Custom sidecar containers allow users to customize Percona XtraDB Cluster and other Operator components without changing the container images. In this release, we enable\n  even more customization, by allowing users to mount volumes into the sidecar containers.\n* In this release, we put a lot of effort into fixing bugs that were reported by the community. We appreciate everyone who helped us with discovering these issues and\n  contributed to the fixes.\n* Mount volumes into sidecar containers to enable customization (Thanks to Sridhar L for contributing) * spec.Backup.serviceAccount and spec.automountServiceAccountToken Custom Resource options can now be used in the Helm chart\n  (Thanks to Gerwin van de Steeg for reporting this issue)\n* The logrotate command now doesn\u2019t use verbose mode to avoid flooding the log with rotate information * Logs are now strictly following JSON specification to simplify parsing * New source_retry_count and source_connect_retry options were added to tune source retries for replication between two clusters * New replicasServiceEnabled option was added to allow disabling the Kubernetes Service for haproxy-replicas, which may be useful to avoid the unwanted forwarding of the\n  application write requests to all Percona XtraDB Cluster instances\n* Logrotate now doesn\u2019t rotate GRA logs (binlog events in ROW format representing the failed transaction) as ordinary log files, storing them for 7 days instead which\n  gives additional time to debug the problem\n\n",
      "csv_display_name": "Percona Distribution for MySQL Operator",
      "csv_metadata_description": "Percona Distribution for MySQL Operator manages the lifecycle of Percona XtraDB cluster instances.",
      "csv_name": "percona-xtradb-cluster-operator-certified.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:54:22.668000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "percona-xtradb-cluster-operator-certified",
      "provided_apis": [
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-3-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBBackup",
          "plural": "perconaxtradbbackups",
          "version": "v1alpha1"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBClusterBackup",
          "plural": "perconaxtradbclusterbackups",
          "version": "v1"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBClusterRestore",
          "plural": "perconaxtradbclusterrestores",
          "version": "v1"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-10-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-8-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-1-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "version": "v1-9-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-4-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1alpha1"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-6-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-5-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "version": "v1-7-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-2-0"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:0e25cf04d10058443c95571e039e8437dcf5875f2b14abcad7a21b0c36826dcf",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:0e25cf04d10058443c95571e039e8437dcf5875f2b14abcad7a21b0c36826dcf",
          "name": "pxc5.7"
        },
        {
          "digest": "sha256:2ff5992220ba251cf064cc2b4d5929e0fdb963db18e35d6c672f9aacb0be3bed",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:2ff5992220ba251cf064cc2b4d5929e0fdb963db18e35d6c672f9aacb0be3bed",
          "name": "pxc5.7-backup"
        },
        {
          "digest": "sha256:dbb944de701dbcd030aacd430a09f5c329c95991bd4257aed8a7407169b7e4b2",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:dbb944de701dbcd030aacd430a09f5c329c95991bd4257aed8a7407169b7e4b2",
          "name": "pxc8.0"
        },
        {
          "digest": "sha256:6ab8efb3804d1e519e49ee10eb46b428a837cfdcee222cc5ae2089cc1dc02a6d",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:6ab8efb3804d1e519e49ee10eb46b428a837cfdcee222cc5ae2089cc1dc02a6d",
          "name": "pxc8.0-backup"
        },
        {
          "digest": "sha256:73d2266258b700a691db6196f4b5c830845d34d57bdef5be5ffbd45e88407309",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator@sha256:73d2266258b700a691db6196f4b5c830845d34d57bdef5be5ffbd45e88407309",
          "name": "operator"
        },
        {
          "digest": "sha256:2f06ac4a0f39b2c0253421c3d024291d5ba19d41e35e633ff6ddcf4ba67fd51a",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:2f06ac4a0f39b2c0253421c3d024291d5ba19d41e35e633ff6ddcf4ba67fd51a",
          "name": "haproxy"
        },
        {
          "digest": "sha256:a727ccc8d9f17bc715309e9cf05b4903f38518a0cfee02a4822c8ac301cb01d6",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:a727ccc8d9f17bc715309e9cf05b4903f38518a0cfee02a4822c8ac301cb01d6",
          "name": "proxysql"
        },
        {
          "digest": "sha256:6e5a945b2a824ee34befd864b98d85727fe3849d83f8942463bca87210c19bca",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:6e5a945b2a824ee34befd864b98d85727fe3849d83f8942463bca87210c19bca",
          "name": "logcollector"
        },
        {
          "digest": "sha256:d25b59fc82a22f65fe90fee6b1b6938fcd8172f534a5d6573914009a39578e1e",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:d25b59fc82a22f65fe90fee6b1b6938fcd8172f534a5d6573914009a39578e1e",
          "name": "pmmclient"
        },
        {
          "digest": "sha256:73d2266258b700a691db6196f4b5c830845d34d57bdef5be5ffbd45e88407309",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator@sha256:73d2266258b700a691db6196f4b5c830845d34d57bdef5be5ffbd45e88407309",
          "name": "percona-xtradb-cluster-operator-73d2266258b700a691db6196f4b5c830845d34d57bdef5be5ffbd45e88407309-annotation"
        },
        {
          "digest": "sha256:73d2266258b700a691db6196f4b5c830845d34d57bdef5be5ffbd45e88407309",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator@sha256:73d2266258b700a691db6196f4b5c830845d34d57bdef5be5ffbd45e88407309",
          "name": "percona-xtradb-cluster-operator"
        },
        {
          "digest": "sha256:6ab8efb3804d1e519e49ee10eb46b428a837cfdcee222cc5ae2089cc1dc02a6d",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:6ab8efb3804d1e519e49ee10eb46b428a837cfdcee222cc5ae2089cc1dc02a6d",
          "name": "percona-xtradb-cluster-operator-containers-6ab8efb3804d1e519e49ee10eb46b428a837cfdcee222cc5ae2089cc1dc02a6d-annotation"
        },
        {
          "digest": "sha256:d25b59fc82a22f65fe90fee6b1b6938fcd8172f534a5d6573914009a39578e1e",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:d25b59fc82a22f65fe90fee6b1b6938fcd8172f534a5d6573914009a39578e1e",
          "name": "percona-xtradb-cluster-operator-containers-d25b59fc82a22f65fe90fee6b1b6938fcd8172f534a5d6573914009a39578e1e-annotation"
        },
        {
          "digest": "sha256:6e5a945b2a824ee34befd864b98d85727fe3849d83f8942463bca87210c19bca",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:6e5a945b2a824ee34befd864b98d85727fe3849d83f8942463bca87210c19bca",
          "name": "percona-xtradb-cluster-operator-containers-6e5a945b2a824ee34befd864b98d85727fe3849d83f8942463bca87210c19bca-annotation"
        },
        {
          "digest": "sha256:a727ccc8d9f17bc715309e9cf05b4903f38518a0cfee02a4822c8ac301cb01d6",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:a727ccc8d9f17bc715309e9cf05b4903f38518a0cfee02a4822c8ac301cb01d6",
          "name": "percona-xtradb-cluster-operator-containers-a727ccc8d9f17bc715309e9cf05b4903f38518a0cfee02a4822c8ac301cb01d6-annotation"
        },
        {
          "digest": "sha256:2f06ac4a0f39b2c0253421c3d024291d5ba19d41e35e633ff6ddcf4ba67fd51a",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:2f06ac4a0f39b2c0253421c3d024291d5ba19d41e35e633ff6ddcf4ba67fd51a",
          "name": "percona-xtradb-cluster-operator-containers-2f06ac4a0f39b2c0253421c3d024291d5ba19d41e35e633ff6ddcf4ba67fd51a-annotation"
        },
        {
          "digest": "sha256:dbb944de701dbcd030aacd430a09f5c329c95991bd4257aed8a7407169b7e4b2",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:dbb944de701dbcd030aacd430a09f5c329c95991bd4257aed8a7407169b7e4b2",
          "name": "percona-xtradb-cluster-operator-containers-dbb944de701dbcd030aacd430a09f5c329c95991bd4257aed8a7407169b7e4b2-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "61d438798093b97ef52e1fde",
      "alm_examples": [
        {
          "api_version": "ezmeral.hpe.com/v1",
          "kind": "HPEEzmeralCSIDriver",
          "metadata": {
            "name": "hpeezmeralcsidriver"
          },
          "spec": {
            "controllerImage": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
            "nodeImage": "registry.connect.redhat.com/maprtech/csi-kdfplugin@sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
            "pullPolicy": "Always"
          }
        },
        {
          "api_version": "ezmeral.hpe.com/v1",
          "kind": "HPEEzmeralNFSCSIDriver",
          "metadata": {
            "name": "hpeezmeralnfscsidriver"
          },
          "spec": {
            "controllerImage": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
            "nodeImage": "registry.connect.redhat.com/maprtech/csi-nfsplugin@sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
            "pullPolicy": "Always"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator-bundle@sha256:78c606d805d196915a282b66ac05258c6205515498887f3d02c3e1b67e459bae",
      "bundle_path_digest": "sha256:78c606d805d196915a282b66ac05258c6205515498887f3d02c3e1b67e459bae",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T12:07:21.751000+00:00",
      "csv_description": "The HPE Ezmeral CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE Ezmeral CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE Ezmeral Data Fabric platform.\nThe HPE Ezmeral CSI Driver for Kubernetes leverages HPE Ezmeral Data Fabric platform to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://docs.datafabric.hpe.com/home/CSIdriver/csi_overview.html) for full list of supported CSI features.\n## Installation\nRefer to the HPE Ezmeral CSI Operator for Kubernetes [documentation](https://docs.datafabric.hpe.com/home/CSIdriver/csi_installing_operator.html)\n",
      "csv_display_name": "HPE Ezmeral Data Fabric CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE Ezmeral Data Fabric platform. The CSI driver allows you to use HPE Ezmeral Data Fabric with your preferred container orchestrator.",
      "csv_name": "hpe-ezmeral-csi-operator.v1.0.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:07:46.988000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "hpe-ezmeral-csi-operator",
      "provided_apis": [],
      "related_images": [
        {
          "digest": "sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "image": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator@sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "name": "hpe-ezmeral-csi-operator-82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f-annotation"
        },
        {
          "digest": "sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "image": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator@sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "name": "hpe-ezmeral-csi-operator"
        },
        {
          "digest": "sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
          "image": "registry.connect.redhat.com/maprtech/csi-nfsplugin@sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
          "name": "csi-nfsplugin-35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822-annotation"
        },
        {
          "digest": "sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
          "image": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
          "name": "csi-kdfprovisioner-89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42-annotation"
        },
        {
          "digest": "sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
          "image": "registry.connect.redhat.com/maprtech/csi-kdfplugin@sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
          "name": "csi-kdfplugin-480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.8",
      "version_original": "1.0.8"
    },
    {
      "_id": "61d438bed467cd4ec03ef974",
      "alm_examples": [
        {
          "api_version": "ezmeral.hpe.com/v1",
          "kind": "HPEEzmeralCSIDriver",
          "metadata": {
            "name": "hpeezmeralcsidriver"
          },
          "spec": {
            "controllerImage": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
            "nodeImage": "registry.connect.redhat.com/maprtech/csi-kdfplugin@sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
            "pullPolicy": "Always"
          }
        },
        {
          "api_version": "ezmeral.hpe.com/v1",
          "kind": "HPEEzmeralNFSCSIDriver",
          "metadata": {
            "name": "hpeezmeralnfscsidriver"
          },
          "spec": {
            "controllerImage": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
            "nodeImage": "registry.connect.redhat.com/maprtech/csi-nfsplugin@sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
            "pullPolicy": "Always"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator-bundle@sha256:78c606d805d196915a282b66ac05258c6205515498887f3d02c3e1b67e459bae",
      "bundle_path_digest": "sha256:78c606d805d196915a282b66ac05258c6205515498887f3d02c3e1b67e459bae",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T12:08:30.684000+00:00",
      "csv_description": "The HPE Ezmeral CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE Ezmeral CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE Ezmeral Data Fabric platform.\nThe HPE Ezmeral CSI Driver for Kubernetes leverages HPE Ezmeral Data Fabric platform to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://docs.datafabric.hpe.com/home/CSIdriver/csi_overview.html) for full list of supported CSI features.\n## Installation\nRefer to the HPE Ezmeral CSI Operator for Kubernetes [documentation](https://docs.datafabric.hpe.com/home/CSIdriver/csi_installing_operator.html)\n",
      "csv_display_name": "HPE Ezmeral Data Fabric CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE Ezmeral Data Fabric platform. The CSI driver allows you to use HPE Ezmeral Data Fabric with your preferred container orchestrator.",
      "csv_name": "hpe-ezmeral-csi-operator.v1.0.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:15:04.236000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "hpe-ezmeral-csi-operator",
      "provided_apis": [
        {
          "group": "ezmeral.hpe.com",
          "kind": "HPEEzmeralCSIDriver",
          "plural": "hpeezmeralcsidrivers",
          "version": "v1"
        },
        {
          "group": "ezmeral.hpe.com",
          "kind": "HPEEzmeralNFSCSIDriver",
          "plural": "hpeezmeralnfscsidrivers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "image": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator@sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "name": "hpe-ezmeral-csi-operator-82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f-annotation"
        },
        {
          "digest": "sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "image": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator@sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "name": "hpe-ezmeral-csi-operator"
        },
        {
          "digest": "sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
          "image": "registry.connect.redhat.com/maprtech/csi-nfsplugin@sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
          "name": "csi-nfsplugin-35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822-annotation"
        },
        {
          "digest": "sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
          "image": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
          "name": "csi-kdfprovisioner-89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42-annotation"
        },
        {
          "digest": "sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
          "image": "registry.connect.redhat.com/maprtech/csi-kdfplugin@sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
          "name": "csi-kdfplugin-480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.8",
      "version_original": "1.0.8"
    },
    {
      "_id": "61d438fa17f914cd72330dab",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:96a04fb99af74bc88406278004fbbdad4ae9b11189fd35347ebc86f065f8ae4b",
      "bundle_path_digest": "sha256:96a04fb99af74bc88406278004fbbdad4ae9b11189fd35347ebc86f065f8ae4b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T12:09:30.173000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:49:17.223000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "name": "COUCHDB-MGMT"
        },
        {
          "digest": "sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "name": "couchdb-operator-4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4-annotation"
        },
        {
          "digest": "sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:4c04bf6b3259fd8251744974dacdd427ef1ddfb1713c61ea673f14bc12906ce4",
          "name": "couchdb-operator"
        },
        {
          "digest": "sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:6af02557f1f9e12ca4037be71804eb5dc4c53134b937278cb779e58b350afb53",
          "name": "couchdb3"
        },
        {
          "digest": "sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:29c2509791ece532864c02ce3a429085afc197354308bded80de267ed2586fde",
          "name": "mgmt"
        }
      ],
      "replaces": "",
      "skip_range": ">=1.0.0 <2.2.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.2.0",
      "version_original": "2.2.0"
    },
    {
      "_id": "61d44259c6d6ba37322fdeb8",
      "alm_examples": [
        {
          "api_version": "charts.paloaltonetworks.com/v1",
          "kind": "PanCnSeriesFirewall",
          "metadata": {
            "name": "pancnseriesfirewall-sample"
          },
          "spec": {
            "affinity": {},
            "cni": {
              "image": "gcr.io/itp-ext-cnseries/10.1.3/pan_cni",
              "version": "latest"
            },
            "csp": {},
            "dp": {
              "cpuLimit": 2,
              "image": "gcr.io/itp-ext-cnseries/10.1.3/panos_cn_ngfw"
            },
            "firewall": {
              "failoverMode": "failopen",
              "licenseBundle": "bundle2"
            },
            "fullnameOverride": "",
            "imagePullSecrets": [],
            "mp": {
              "cpuLimit": 4,
              "image": "gcr.io/itp-ext-cnseries/10.1.3/panos_cn_mgmt",
              "initImage": "gcr.io/itp-ext-cnseries/10.1.3/pan_cn_mgmt_init",
              "initVersion": "latest"
            },
            "nameOverride": "",
            "nodeSelector": {},
            "panorama": {
              "authKey": "",
              "ip": "x.x.x.x"
            },
            "podSecurityContext": {},
            "resources": {},
            "securityContext": {},
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/paloalto/not-applicable@sha256:606f6f43f543d631a463d2f581f2b30cc76ad0ba6b0302fc7ae3c52a578cbcb2",
      "bundle_path_digest": "sha256:606f6f43f543d631a463d2f581f2b30cc76ad0ba6b0302fc7ae3c52a578cbcb2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-04T12:49:29.613000+00:00",
      "csv_description": "**Palo Alto CN-Series NGFW (container firewall)**\n\n**Product Overview:** \nThe CN-Series firewall enables you to:\n1. Gain Layer-7 traffic visibility and control within the cluster\n2. Stop lateral movement of threats\n3. Prevent known and unknown inbound attacks\n4. Apply egress filtering to prevent data exfiltration and unwanted outbound connections\n5. Dynamically scale security without compromising DevOps agility.\n6. Ensure a frictionless CI/CD pipeline deployment.\n7. Unify management across all your firewalls using Panorama.\n\nDeploy CN-Series as-a-Kubernetes service and manage the fleet of firewalls from Panorama, alongside our hardware and VM-Series NGFW appliances to ensure consistent security posture everywhere. This subscription also includes industry-leading Threat Prevention, WildFire, URL Filtering, and DNS Security subscriptions that provide best-in-class runtime network security for East-West, Outbound and Inbound traffic.\n\n[Pre-Install Steps and Documentation](https://docs.paloaltonetworks.com/cn-series/10-1/cn-series-deployment/secure-kubernetes-workloads-with-cn-series.html)\n\n[Post-Install Steps and Documentation](https://github.com/PaloAltoNetworks/Kubernetes/tree/v2.0) -- Instructions at bottom of README (Multus and Openshift)",
      "csv_display_name": "pan-cn-series-operator",
      "csv_metadata_description": "",
      "csv_name": "pan-cn-series-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:30:19.617000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "pan-cn-series-operator",
      "provided_apis": [
        {
          "group": "charts.paloaltonetworks.com",
          "kind": "PanCnSeriesFirewall",
          "plural": "pancnseriesfirewalls",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:56d6c27633fa632bf6449ee8de8061cbcd705d90327a9fa8b665d9dd5ef50323",
          "image": "us.gcr.io/panw-gcp-team-testing/paloaltonetworks/pan-cn-series-operator@sha256:56d6c27633fa632bf6449ee8de8061cbcd705d90327a9fa8b665d9dd5ef50323",
          "name": "pan-cn-series-operator"
        },
        {
          "digest": "sha256:56d6c27633fa632bf6449ee8de8061cbcd705d90327a9fa8b665d9dd5ef50323",
          "image": "us.gcr.io/panw-gcp-team-testing/paloaltonetworks/pan-cn-series-operator@sha256:56d6c27633fa632bf6449ee8de8061cbcd705d90327a9fa8b665d9dd5ef50323",
          "name": "paloaltonetworks/pan-cn-series-operator-56d6c27633fa632bf6449ee8de8061cbcd705d90327a9fa8b665d9dd5ef50323-annotation"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:56d6c27633fa632bf6449ee8de8061cbcd705d90327a9fa8b665d9dd5ef50323",
          "image": "us.gcr.io/panw-gcp-team-testing/paloaltonetworks/pan-cn-series-operator@sha256:56d6c27633fa632bf6449ee8de8061cbcd705d90327a9fa8b665d9dd5ef50323",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "61d4427717f914cd72330dad",
      "alm_examples": [
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AirgappedDeployment",
          "metadata": {
            "name": "airgappeddeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AnalyticsProxy",
          "metadata": {
            "name": "analyticsproxy"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "DeleteCluster",
          "metadata": {
            "name": "deletecluster"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "FullDeployment",
          "metadata": {
            "name": "fulldeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "GenerateKey",
          "metadata": {
            "name": "bas-api-key"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "StoreForwardMetric",
          "metadata": {
            "name": "storeforwardmetric"
          },
          "spec": {
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "Dashboard",
          "metadata": {
            "name": "dashboard"
          },
          "spec": {
            "enable_test_api": true,
            "image_pull_secret": "bas-images-pull-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator-bundle@sha256:77fedadffaa16d08331a62b23569ddd05108d22b1de4d598250eedceba907abe",
      "bundle_path_digest": "sha256:77fedadffaa16d08331a62b23569ddd05108d22b1de4d598250eedceba907abe",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-04T12:49:59.328000+00:00",
      "csv_description": "Behavior Analytics Services Operator is a service that collects, transforms and transmits product usage data.\nThe Operator supports deployments using-\nA. Dashboard\nB. Openshift portal or CLI\n\n**A. Dashboard**\n----\nWhen the Operator is installed, the Dashboard is installed too. Goto the Dashboard Custom Resource to get the URL to the Dashboard.\n\n\n**B. Openshift portal or CLI**\n----\n----\nFor manual installation using Openshift portal or CLI, follow the steps below\n\n\n**Pre-requisites**\n----\nStep 1: Create a new Project\n```sh\noc new-project <project-name>\n```\n\nStep 2: Create a secret named \"database-credentials\" for PostgreSQL DB\n```sh\n oc create secret generic database-credentials --from-literal=db_username=<DB Username> --from-literal=db_password=<DB Password> -n <project-name>\n```\n\nStep 3: [Optional] If the images require a secret to pull the container images, create a secret of type dockerconfigjson. Pass this secret name in the CR spec image\\_pull\\_secret\n```sh\noc create secret generic bas-images-pull-secret --from-file=.dockerconfigjson=<path/to/.docker/config.json>  --type=kubernetes.io/dockerconfigjson\n```\n\nStep 4: Create a secret named \"mtls-proxy-secret\" which has the client key and certificate to connect to IBM Proxy service. If you don't have certificates then refer link https://developers.cloudflare.com/access/service-auth/mtls-testing#generating-the-root-ca to create root and client certificates. Please ensure to share root certificate with edge@us.ibm.com to allow access to IBM proxy service using client certificate.\n```sh\noc create secret tls mtls-proxy-secret --key client-key.pem --cert client.pem\n```\n\n**Installing the Behavior Analytics Services**\n----\n\nSelect any one of the deployments to setup the Behavior Analytics Services\n1. Full Deployment\n2. Analytics Proxy Deployment\n3. Store and Forward metrics Deployment\n4. Airgapped Analytics Proxy Deployment\n\n| Spec                                                      | Description                                                      | Default Value          |\n| --------------------------------------------------------- | ------------------------------------------------------------ | ---------------------- |\n| `ibmproxyurl`                                               | URL of IBM Proxy Service                                     | `https://iaps.ibm.com`   |\n| `postgres.storage_class`                                    | Storage class of type ReadWriteOnce                          | Required user input        |\n| `postgres.size`                                             | Size (in G) of the storage to be attached to Database        | `10G`                    |\n| `kafka.storage_class`                                       | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.storage_size`                                        | Size (in G) of the storage to be attached to Kafka  | `5G`                     |\n| `kafka.zookeeper_storage_class`                                 | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.zookeeper_storage_size`                                 | Size (in G) of the storage to be attached to Zookeeper | `5G`                     |\n| `airgapped.enabled`                                         | Set value to \"true\" if airgapped setup is to be enabled otherwise keep the default value \"false\" | `false`                  |\n| `airgapped.backup_retention_period`   | Number of days to keep the backup files in the storage       | `7`                     |\n| `airgapped.backup_deletion_frequency` | Frequency of job to delete files from the storage. It accepts values in Cron format (https://en.wikipedia.org/wiki/Cron) | `@daily`                 |\n| `event_scheduler_frequency`                               | Frequency at which events will be forwarded to proxy in Cron format. In case if internet connection available on the cluster only during a certain time frame, specify time in UTC equivalent Cron format. | `@hourly`                |\n| `prometheus_scheduler_frequency`                          | Frequency in Cronjob format to pull metrics from Prometheus  | `@daily`                |\n| `image_pull_secret`                                       | Secret to pull container images from registry                | `bas-images-pull-secret` |\n| `db_archive.frequency`                                    | Frequency in Cronjob format to run archive job                                                           | `@monthly`             |\n| `db_archive.retention_age`                                | Number of months to retain the data in Database              | `6`                    |\n| `db_archive.persistent_storage.storage_class`             |Storage class of type ReadWriteMany         | Required user input    |\n| `db_archive.persistent_storage.storage_size`              | Size (in G) of the storage to be attached for saving airgapped files | `10G`                  |\n| `prometheus_metrics`                                      | Array of metrics information to be send to destination at desired frequency | []\n| `env_type`              | Type of environment. Can be **prod** (HA) or **lite** (non HA)   | `lite`                  |\n| `allowed_domains`                                         | Comma separated values of domains allowed by BAS. By default all domains are allowed | '*'\n\n\n**Generating the API Key**\n----\nOnce the deployment is complete, to use the Behavior Analytics Services Endpoints, generate an API key using the CR GenerateKey. This API key to be used to authenticate Behavior Analytics Services Endpoints.\n\nNote- Key can be retrieved from the secret with same name used while creating Generate Key CR's instance.\nOnce you get key from the secret, decode it using below command:\n```sh\necho -n <secret key> | base64 -d\n```\n\n**Deleting the API Key**\n----\nTo revoke the Key, delete the corresponding GenerateKey instance.\n\n**Using Behavior Analytics Services Endpoints**\n---\nFor all BAS APIs, use the Generated API Key for Authentication. Pass it as the Header- X-API-KEY and the key while using the APIs.\n",
      "csv_display_name": "Behavior Analytics Services",
      "csv_metadata_description": "Behavior Analytics Services is a service that collects, transforms and transmits product usage data.",
      "csv_name": "behavior-analytics-services-operator-certified.v1.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:11:49.728000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "behavior-analytics-services-operator-certified",
      "provided_apis": [
        {
          "group": "bas.ibm.com",
          "kind": "GenerateKey",
          "plural": "generatekeys",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "StoreForwardMetric",
          "plural": "storeforwardmetrics",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AirgappedDeployment",
          "plural": "airgappeddeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AnalyticsProxy",
          "plural": "analyticsproxies",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "Dashboard",
          "plural": "dashboards",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "DeleteCluster",
          "plural": "deleteclusters",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "FullDeployment",
          "plural": "fulldeployments",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:c30a58a4f7a6457bf7da404ccde64f58f26162eeee0be9cc01ad517542027e2a",
          "image": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator@sha256:c30a58a4f7a6457bf7da404ccde64f58f26162eeee0be9cc01ad517542027e2a",
          "name": "behavior-analytics-services-operator"
        },
        {
          "digest": "sha256:8e0f1d33edf005eb2dfafed9b8367435b0f33ef4adf006bc75338f2a88e8942c",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:8e0f1d33edf005eb2dfafed9b8367435b0f33ef4adf006bc75338f2a88e8942c",
          "name": "dashboardinstaller"
        },
        {
          "digest": "sha256:b35f209bb491f88da6a9e6ca2b55675a4d0eeb69c4a369a07704cd9a9443a058",
          "image": "registry.connect.redhat.com/ibm-edge/event-api@sha256:b35f209bb491f88da6a9e6ca2b55675a4d0eeb69c4a369a07704cd9a9443a058",
          "name": "event_api"
        },
        {
          "digest": "sha256:a606caf41cb689bb3496d1e76312ebbbe531ab5df52d4d0813bd7763cc170da1",
          "image": "registry.connect.redhat.com/ibm-edge/store-api@sha256:a606caf41cb689bb3496d1e76312ebbbe531ab5df52d4d0813bd7763cc170da1",
          "name": "store_api"
        },
        {
          "digest": "sha256:0b5a7b02e4cb4baf0e08171fdd1d7d35a16bb82254ff2e245e051e483f6cd08c",
          "image": "registry.connect.redhat.com/ibm-edge/event-reader@sha256:0b5a7b02e4cb4baf0e08171fdd1d7d35a16bb82254ff2e245e051e483f6cd08c",
          "name": "reader"
        },
        {
          "digest": "sha256:caf7464165c82783ec83f0cffd1163cbfdffc4bad1f81def00dd3a25ae8a806c",
          "image": "registry.connect.redhat.com/ibm-edge/event-scheduler@sha256:caf7464165c82783ec83f0cffd1163cbfdffc4bad1f81def00dd3a25ae8a806c",
          "name": "event_scheduler"
        },
        {
          "digest": "sha256:08ba04c0c3a0966568538ac709f7bb243f7768c1f200c1a7c99e2761144a9a6b",
          "image": "registry.connect.redhat.com/ibm-edge/prometheus-scheduler@sha256:08ba04c0c3a0966568538ac709f7bb243f7768c1f200c1a7c99e2761144a9a6b",
          "name": "prometheus_scheduler"
        },
        {
          "digest": "sha256:90ddecb54abe2880b86016a407507cecf77a113b4c7724235ab0abd21ad1d9aa",
          "image": "registry.connect.redhat.com/ibm-edge/pgo-client@sha256:90ddecb54abe2880b86016a407507cecf77a113b4c7724235ab0abd21ad1d9aa",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:815630d23e8d88664907fbf8096952adfd22593a4989063e9dd55549e674ee15",
          "image": "registry.connect.redhat.com/ibm-edge/reverse-proxy@sha256:815630d23e8d88664907fbf8096952adfd22593a4989063e9dd55549e674ee15",
          "name": "nginx"
        },
        {
          "digest": "sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "image": "registry.redhat.io/openshift4/ose-grafana@sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "name": "grafana"
        },
        {
          "digest": "sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "image": "registry.redhat.io/openshift3/ose-kube-state-metrics@sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "name": "ksm"
        },
        {
          "digest": "sha256:3288307dd03844ec3574ca5c173d7f608755fd23654434c48ea2e854fe0f22cf",
          "image": "registry.connect.redhat.com/ibm-edge/growth-stack-base@sha256:3288307dd03844ec3574ca5c173d7f608755fd23654434c48ea2e854fe0f22cf",
          "name": "init_container"
        },
        {
          "digest": "sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "image": "registry.access.redhat.com/ubi8/ubi@sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "name": "ubi"
        },
        {
          "digest": "sha256:19a8b33e2f4c2beee5266d5243abb7f43d85322fc62800899759cdf6ec568fee",
          "image": "registry.connect.redhat.com/ibm-edge/airgap-download-ui@sha256:19a8b33e2f4c2beee5266d5243abb7f43d85322fc62800899759cdf6ec568fee",
          "name": "download_ui"
        },
        {
          "digest": "sha256:9f6eae3e715d9aff6d9674059fb6bf4f6dfc3ad42f015200c69b481becd7abd9",
          "image": "registry.connect.redhat.com/ibm-edge/bas-operator-dashboard@sha256:9f6eae3e715d9aff6d9674059fb6bf4f6dfc3ad42f015200c69b481becd7abd9",
          "name": "dashboard_ui"
        },
        {
          "digest": "sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "image": "registry.connect.redhat.com/crunchydata/pgo-deployer@sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "name": "pgo_deployer"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.1.2",
      "version_original": "1.1.2"
    },
    {
      "_id": "61d44277d467cd4ec03ef975",
      "alm_examples": [
        {
          "api_version": "ezmeral.hpe.com/v1",
          "kind": "HPEEzmeralCSIDriver",
          "metadata": {
            "name": "hpeezmeralcsidriver"
          },
          "spec": {
            "controllerImage": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
            "nodeImage": "registry.connect.redhat.com/maprtech/csi-kdfplugin@sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
            "pullPolicy": "Always"
          }
        },
        {
          "api_version": "ezmeral.hpe.com/v1",
          "kind": "HPEEzmeralNFSCSIDriver",
          "metadata": {
            "name": "hpeezmeralnfscsidriver"
          },
          "spec": {
            "controllerImage": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
            "nodeImage": "registry.connect.redhat.com/maprtech/csi-nfsplugin@sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
            "pullPolicy": "Always"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator-bundle@sha256:78c606d805d196915a282b66ac05258c6205515498887f3d02c3e1b67e459bae",
      "bundle_path_digest": "sha256:78c606d805d196915a282b66ac05258c6205515498887f3d02c3e1b67e459bae",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T12:49:59.481000+00:00",
      "csv_description": "The HPE Ezmeral CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE Ezmeral CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE Ezmeral Data Fabric platform.\nThe HPE Ezmeral CSI Driver for Kubernetes leverages HPE Ezmeral Data Fabric platform to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://docs.datafabric.hpe.com/home/CSIdriver/csi_overview.html) for full list of supported CSI features.\n## Installation\nRefer to the HPE Ezmeral CSI Operator for Kubernetes [documentation](https://docs.datafabric.hpe.com/home/CSIdriver/csi_installing_operator.html)\n",
      "csv_display_name": "HPE Ezmeral Data Fabric CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE Ezmeral Data Fabric platform. The CSI driver allows you to use HPE Ezmeral Data Fabric with your preferred container orchestrator.",
      "csv_name": "hpe-ezmeral-csi-operator.v1.0.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:06:14.753000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "hpe-ezmeral-csi-operator",
      "provided_apis": [
        {
          "group": "ezmeral.hpe.com",
          "kind": "HPEEzmeralCSIDriver",
          "plural": "hpeezmeralcsidrivers",
          "version": "v1"
        },
        {
          "group": "ezmeral.hpe.com",
          "kind": "HPEEzmeralNFSCSIDriver",
          "plural": "hpeezmeralnfscsidrivers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "image": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator@sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "name": "hpe-ezmeral-csi-operator-82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f-annotation"
        },
        {
          "digest": "sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "image": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator@sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "name": "hpe-ezmeral-csi-operator"
        },
        {
          "digest": "sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
          "image": "registry.connect.redhat.com/maprtech/csi-nfsplugin@sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
          "name": "csi-nfsplugin-35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822-annotation"
        },
        {
          "digest": "sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
          "image": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
          "name": "csi-kdfprovisioner-89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42-annotation"
        },
        {
          "digest": "sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
          "image": "registry.connect.redhat.com/maprtech/csi-kdfplugin@sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
          "name": "csi-kdfplugin-480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.8",
      "version_original": "1.0.8"
    },
    {
      "_id": "61d442cbd467cd4ec03ef976",
      "alm_examples": [
        {
          "api_version": "apps.cloudcasa.io/v1",
          "kind": "Cloudcasa",
          "metadata": {
            "name": "cloudcasa"
          },
          "spec": {
            "cluster_id": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/catalogicsoftware/cloudcasa-bundle@sha256:c66f5091446dc889a29da265c8c17c21181fe0fb5409eccd71fc4349c3bf0131",
      "bundle_path_digest": "sha256:c66f5091446dc889a29da265c8c17c21181fe0fb5409eccd71fc4349c3bf0131",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-04T12:51:23.907000+00:00",
      "csv_description": "CloudCasa is a powerful and easy-to-use data protection service for Kubernetes and cloud databases.  Configuration is quick and easy, and basic service is free. \n\n\n### How to Install \n* Create Namespace cloudcasa-operator. \n* Install the CloudCasa Operator by following the instructions presented when you click the Install button. Select **cloudcasa-operator** namespace. \n* After installing the operator, you will need to create an instance of the CloudCasa resource to configure the agent. \n* In order to create the CloudCasa resource you will need to generate a Cluster ID in CloudCasa.\n* Login to https://home.cloudcasa.io and add your OCP cluster under the Protection tab. Note the returned **Cluster ID**.\n* See the CloudCasa [Getting Started Guide](https://cloudcasa.io/get-started) for more information.\n* Navigate to the installed CloudCasa Operator and Click on the CloudCasa tab.\n* Create the CloudCasa resource and provide the **Cluster ID** noted in the previous step.\n\n\n### Supported Features\n\n* **AWS RDS Backup**\n\n* **Kubernetes cluster Backup** \n\n* **Kubernetes cluster restore**\n\n### Installation Checkpoints\n\n* **cloudcasa-io** namespace should be created.\n\n* **kubagent** pod should be created under **cloudcasa-io** namespace and should be in **running state.** \n\n* State of the OCP cluster on CloudCasa web UI should be **Active**.",
      "csv_display_name": "CloudCasa",
      "csv_metadata_description": "CloudCasa is a powerful and easy-to-use data protection service for Kubernetes and cloud databases.",
      "csv_name": "cloudcasa-operator.v2.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:31:09.295000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cloudcasa-operator",
      "provided_apis": [
        {
          "group": "apps.cloudcasa.io",
          "kind": "Cloudcasa",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf",
          "image": "registry.connect.redhat.com/catalogicsoftware/cloudcasa-operator@sha256:31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf",
          "name": "cloudcasa-operator"
        },
        {
          "digest": "sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf",
          "image": "registry.connect.redhat.com/catalogicsoftware/cloudcasa-operator@sha256:31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf",
          "name": "cloudcasa-operator-31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf-annotation"
        },
        {
          "digest": "sha256:31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf",
          "image": "registry.connect.redhat.com/catalogicsoftware/cloudcasa-operator@sha256:31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.2.0",
      "version_original": "2.2.0"
    },
    {
      "_id": "61d448aad467cd4ec03ef97c",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "OpenshiftArtifactoryHa",
          "metadata": {
            "name": "openshiftartifactoryha"
          },
          "spec": {
            "artifactory-ha": {
              "artifactory": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/artifactory-pro",
                  "tag": "7.27.9-1"
                },
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE",
                "node": {
                  "replicaCount": 2,
                  "waitForPrimaryStartup": {
                    "enabled": false
                  }
                },
                "uid": "1000721030"
              },
              "database": {
                "driver": "OVERRIDE",
                "password": "OVERRIDE",
                "type": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "databaseUpgradeReady": true,
              "initContainerImage": "registry.connect.redhat.com/jfrog/init@sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
              "nginx": {
                "gid": "1000720107",
                "http": {
                  "externalPort": 80,
                  "internalPort": 8080
                },
                "https": {
                  "externalPort": 443,
                  "internalPort": 8443
                },
                "image": {
                  "registry": "registry.redhat.io",
                  "repository": "rhel8/nginx-116",
                  "tag": "latest"
                },
                "service": {
                  "ssloffload": false
                },
                "tlsSecretName": "OVERRIDE",
                "uid": "1000720104"
              },
              "postgresql": {
                "enabled": false
              },
              "waitForDatabase": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/artifactory-operator-bundle@sha256:7f0eac75c3ad62bff844979c3f7cf1bf8553caa2c28e38c59299979a452bfb28",
      "bundle_path_digest": "sha256:7f0eac75c3ad62bff844979c3f7cf1bf8553caa2c28e38c59299979a452bfb28",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-04T13:16:26.827000+00:00",
      "csv_description": " ## Breaking change\nPlease update to version 1.1.10 of the operator.\nVersion 1.1.8 and 1.1.9 have issues. Please skip these versions.\n\n## Overview\nOpenshift Operator to deploy JFrog Artifactory Enterprise into your Openshift cluster.\n## Security Context Constraints\nTo deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc.\n```\noc adm policy add-scc-to-user anyuid -z artifactory-ha-operator -n openshift-operators\n```\nAdd the service account for the Artifactory chart to deploy successfully:\n``` oc adm policy add-scc-to-user anyuid -z openshiftartifactoryha-artifactory-ha -n artifactory ```\n### Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Artifactory Enterprise Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Artifactory Enterprise Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Artifactory HA.\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\nDATABASE_TYPE\nDATABASE_DRIVER\nDATABASE_URL\nDATABASE_USER\nDATABASE_PASSWORD\n```\nMaster key and Join key must be supplied. To generate a new key for each run the command below:\n\n```\n# Create a key\nexport JOIN_KEY=$(openssl rand -hex 32)\necho ${JOIN_KEY}\n```\n\nTo use TLS you will need to first create a k8s tls secret to store your .crt and .key file into.\nThen supply the value of this k8s secret into the TLS_SECRET field.\n``` oc create secret tls my_tls_secret --cert=tls.crt --key=tls.key --namespace=my_namespace ```\nClick Create for Artifactory Enterprise to deploy into OpenShift and connect to it on the external IP exposed by the load balancer.\n### Create a route\nTo expose Artifactory from Openshift we recommend you create a new route in Openshift.\nYou can either use the oc command line tool or the Openshift web console to generate a new route.\nDepending upon where you terminate TLS you will need to either specify pass through or edge.\nCommand Line (Edge):\n``` oc create route edge --service=openshiftartifactory-ha --cert=tls.crt --key=tls.key --ca-cert=ca.crt --hostname=www.example.com ```\nOr for more information visit the official Openshift documentation on routes here:\nhttps://docs.openshift.com/container-platform/4.6/networking/routes/route-configuration.html\n\n",
      "csv_display_name": "JFrog Artifactory Enterprise Operator",
      "csv_metadata_description": "JFrog Artifactory Enterprise deploys Artifactory in a high availability environment across multiple pods",
      "csv_name": "artifactory-ha-operator.v1.1.21",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:28:45.568000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "plural": "openshiftartifactoryhas",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:7f06776ddcaffa1f4c3ca74b0d71f7fd11a6af5b0f2f42ade89a7f4ef4011296",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:7f06776ddcaffa1f4c3ca74b0d71f7fd11a6af5b0f2f42ade89a7f4ef4011296",
          "name": "artifactory-pro"
        },
        {
          "digest": "sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "name": "artifactory-operator"
        },
        {
          "digest": "sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "name": "nginx"
        },
        {
          "digest": "sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "name": "artifactory-operator-65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f-annotation"
        },
        {
          "digest": "sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "name": "artifactory-ha-operator"
        },
        {
          "digest": "sha256:7f06776ddcaffa1f4c3ca74b0d71f7fd11a6af5b0f2f42ade89a7f4ef4011296",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:7f06776ddcaffa1f4c3ca74b0d71f7fd11a6af5b0f2f42ade89a7f4ef4011296",
          "name": "artifactory_image_repository"
        },
        {
          "digest": "sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "name": "nginx_image_repository"
        },
        {
          "digest": "sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
          "name": "init-9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.1.21",
      "version_original": "1.1.21"
    },
    {
      "_id": "61d44a058093b97ef52e1ff3",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:acad9af174541d2b39a02a216dd462ee0d47d8dc3c9cb44371f0a6bbf1c83d3d",
      "bundle_path_digest": "sha256:acad9af174541d2b39a02a216dd462ee0d47d8dc3c9cb44371f0a6bbf1c83d3d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T13:22:13.310000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T15:06:41.470000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator-879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d-annotation"
        },
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:490db38c4cc1aa124f6ddd020f3ef6f8f1dfdf0913a25b2cfba9952dd2c0d6d5",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:490db38c4cc1aa124f6ddd020f3ef6f8f1dfdf0913a25b2cfba9952dd2c0d6d5",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "8.4.1",
      "version_original": "8.4.1"
    },
    {
      "_id": "61d44a368093b97ef52e1ff7",
      "alm_examples": [
        {
          "api_version": "apps.cloudcasa.io/v1",
          "kind": "Cloudcasa",
          "metadata": {
            "name": "cloudcasa"
          },
          "spec": {
            "cluster_id": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/catalogicsoftware/cloudcasa-bundle@sha256:c66f5091446dc889a29da265c8c17c21181fe0fb5409eccd71fc4349c3bf0131",
      "bundle_path_digest": "sha256:c66f5091446dc889a29da265c8c17c21181fe0fb5409eccd71fc4349c3bf0131",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-04T13:23:02.040000+00:00",
      "csv_description": "CloudCasa is a powerful and easy-to-use data protection service for Kubernetes and cloud databases.  Configuration is quick and easy, and basic service is free. \n\n\n### How to Install \n* Create Namespace cloudcasa-operator. \n* Install the CloudCasa Operator by following the instructions presented when you click the Install button. Select **cloudcasa-operator** namespace. \n* After installing the operator, you will need to create an instance of the CloudCasa resource to configure the agent. \n* In order to create the CloudCasa resource you will need to generate a Cluster ID in CloudCasa.\n* Login to https://home.cloudcasa.io and add your OCP cluster under the Protection tab. Note the returned **Cluster ID**.\n* See the CloudCasa [Getting Started Guide](https://cloudcasa.io/get-started) for more information.\n* Navigate to the installed CloudCasa Operator and Click on the CloudCasa tab.\n* Create the CloudCasa resource and provide the **Cluster ID** noted in the previous step.\n\n\n### Supported Features\n\n* **AWS RDS Backup**\n\n* **Kubernetes cluster Backup** \n\n* **Kubernetes cluster restore**\n\n### Installation Checkpoints\n\n* **cloudcasa-io** namespace should be created.\n\n* **kubagent** pod should be created under **cloudcasa-io** namespace and should be in **running state.** \n\n* State of the OCP cluster on CloudCasa web UI should be **Active**.",
      "csv_display_name": "CloudCasa",
      "csv_metadata_description": "CloudCasa is a powerful and easy-to-use data protection service for Kubernetes and cloud databases.",
      "csv_name": "cloudcasa-operator.v2.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:29:19.166000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cloudcasa-operator",
      "provided_apis": [
        {
          "group": "apps.cloudcasa.io",
          "kind": "Cloudcasa",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf",
          "image": "registry.connect.redhat.com/catalogicsoftware/cloudcasa-operator@sha256:31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf",
          "name": "cloudcasa-operator"
        },
        {
          "digest": "sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf",
          "image": "registry.connect.redhat.com/catalogicsoftware/cloudcasa-operator@sha256:31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf",
          "name": "cloudcasa-operator-31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf-annotation"
        },
        {
          "digest": "sha256:31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf",
          "image": "registry.connect.redhat.com/catalogicsoftware/cloudcasa-operator@sha256:31a6966d48485c58b6d136ac9a31c670b273b6f95ed6b3b96a11dbd34570a9cf",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.2.0",
      "version_original": "2.2.0"
    },
    {
      "_id": "61d44a82d467cd4ec03ef98a",
      "alm_examples": [
        {
          "api_version": "ezmeral.hpe.com/v1",
          "kind": "HPEEzmeralCSIDriver",
          "metadata": {
            "name": "hpeezmeralcsidriver"
          },
          "spec": {
            "controllerImage": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
            "nodeImage": "registry.connect.redhat.com/maprtech/csi-kdfplugin@sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
            "pullPolicy": "Always"
          }
        },
        {
          "api_version": "ezmeral.hpe.com/v1",
          "kind": "HPEEzmeralNFSCSIDriver",
          "metadata": {
            "name": "hpeezmeralnfscsidriver"
          },
          "spec": {
            "controllerImage": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
            "nodeImage": "registry.connect.redhat.com/maprtech/csi-nfsplugin@sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
            "pullPolicy": "Always"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator-bundle@sha256:78c606d805d196915a282b66ac05258c6205515498887f3d02c3e1b67e459bae",
      "bundle_path_digest": "sha256:78c606d805d196915a282b66ac05258c6205515498887f3d02c3e1b67e459bae",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T13:24:18.531000+00:00",
      "csv_description": "The HPE Ezmeral CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE Ezmeral CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE Ezmeral Data Fabric platform.\nThe HPE Ezmeral CSI Driver for Kubernetes leverages HPE Ezmeral Data Fabric platform to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://docs.datafabric.hpe.com/home/CSIdriver/csi_overview.html) for full list of supported CSI features.\n## Installation\nRefer to the HPE Ezmeral CSI Operator for Kubernetes [documentation](https://docs.datafabric.hpe.com/home/CSIdriver/csi_installing_operator.html)\n",
      "csv_display_name": "HPE Ezmeral Data Fabric CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE Ezmeral Data Fabric platform. The CSI driver allows you to use HPE Ezmeral Data Fabric with your preferred container orchestrator.",
      "csv_name": "hpe-ezmeral-csi-operator.v1.0.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:29:30.330000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "hpe-ezmeral-csi-operator",
      "provided_apis": [
        {
          "group": "ezmeral.hpe.com",
          "kind": "HPEEzmeralCSIDriver",
          "plural": "hpeezmeralcsidrivers",
          "version": "v1"
        },
        {
          "group": "ezmeral.hpe.com",
          "kind": "HPEEzmeralNFSCSIDriver",
          "plural": "hpeezmeralnfscsidrivers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "image": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator@sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "name": "hpe-ezmeral-csi-operator-82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f-annotation"
        },
        {
          "digest": "sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "image": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator@sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "name": "hpe-ezmeral-csi-operator"
        },
        {
          "digest": "sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
          "image": "registry.connect.redhat.com/maprtech/csi-nfsplugin@sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
          "name": "csi-nfsplugin-35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822-annotation"
        },
        {
          "digest": "sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
          "image": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
          "name": "csi-kdfprovisioner-89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42-annotation"
        },
        {
          "digest": "sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
          "image": "registry.connect.redhat.com/maprtech/csi-kdfplugin@sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
          "name": "csi-kdfplugin-480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.8",
      "version_original": "1.0.8"
    },
    {
      "_id": "61d478d517f914cd7233120c",
      "alm_examples": [
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AirgappedDeployment",
          "metadata": {
            "name": "airgappeddeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AnalyticsProxy",
          "metadata": {
            "name": "analyticsproxy"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "DeleteCluster",
          "metadata": {
            "name": "deletecluster"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "FullDeployment",
          "metadata": {
            "name": "fulldeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "GenerateKey",
          "metadata": {
            "name": "bas-api-key"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "StoreForwardMetric",
          "metadata": {
            "name": "storeforwardmetric"
          },
          "spec": {
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "Dashboard",
          "metadata": {
            "name": "dashboard"
          },
          "spec": {
            "enable_test_api": true,
            "image_pull_secret": "bas-images-pull-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator-bundle@sha256:6164be85fcbf2c96f90fc54278f99aa40690fab6e257b8087864bfbdf9adab33",
      "bundle_path_digest": "sha256:6164be85fcbf2c96f90fc54278f99aa40690fab6e257b8087864bfbdf9adab33",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-04T16:41:57.398000+00:00",
      "csv_description": "Behavior Analytics Services Operator is a service that collects, transforms and transmits product usage data.\nThe Operator supports deployments using-\nA. Dashboard\nB. Openshift portal or CLI\n\n**A. Dashboard**\n----\nWhen the Operator is installed, the Dashboard is installed too. Goto the Dashboard Custom Resource to get the URL to the Dashboard.\n\n\n**B. Openshift portal or CLI**\n----\n----\nFor manual installation using Openshift portal or CLI, follow the steps below\n\n\n**Pre-requisites**\n----\nStep 1: Create a new Project\n```sh\noc new-project <project-name>\n```\n\nStep 2: Create a secret named \"database-credentials\" for PostgreSQL DB\n```sh\n oc create secret generic database-credentials --from-literal=db_username=<DB Username> --from-literal=db_password=<DB Password> -n <project-name>\n```\n\nStep 3: [Optional] If the images require a secret to pull the container images, create a secret of type dockerconfigjson. Pass this secret name in the CR spec image\\_pull\\_secret\n```sh\noc create secret generic bas-images-pull-secret --from-file=.dockerconfigjson=<path/to/.docker/config.json>  --type=kubernetes.io/dockerconfigjson\n```\n\nStep 4: Create a secret named \"mtls-proxy-secret\" which has the client key and certificate to connect to IBM Proxy service. If you don't have certificates then refer link https://developers.cloudflare.com/access/service-auth/mtls-testing#generating-the-root-ca to create root and client certificates. Please ensure to share root certificate with edge@us.ibm.com to allow access to IBM proxy service using client certificate.\n```sh\noc create secret tls mtls-proxy-secret --key client-key.pem --cert client.pem\n```\n\n**Installing the Behavior Analytics Services**\n----\n\nSelect any one of the deployments to setup the Behavior Analytics Services\n1. Full Deployment\n2. Analytics Proxy Deployment\n3. Store and Forward metrics Deployment\n4. Airgapped Analytics Proxy Deployment\n\n| Spec                                                      | Description                                                      | Default Value          |\n| --------------------------------------------------------- | ------------------------------------------------------------ | ---------------------- |\n| `ibmproxyurl`                                               | URL of IBM Proxy Service                                     | `https://iaps.ibm.com`   |\n| `postgres.storage_class`                                    | Storage class of type ReadWriteOnce                          | Required user input        |\n| `postgres.size`                                             | Size (in G) of the storage to be attached to Database        | `10G`                    |\n| `kafka.storage_class`                                       | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.storage_size`                                        | Size (in G) of the storage to be attached to Kafka  | `5G`                     |\n| `kafka.zookeeper_storage_class`                                 | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.zookeeper_storage_size`                                 | Size (in G) of the storage to be attached to Zookeeper | `5G`                     |\n| `airgapped.enabled`                                         | Set value to \"true\" if airgapped setup is to be enabled otherwise keep the default value \"false\" | `false`                  |\n| `airgapped.backup_retention_period`   | Number of days to keep the backup files in the storage       | `7`                     |\n| `airgapped.backup_deletion_frequency` | Frequency of job to delete files from the storage. It accepts values in Cron format (https://en.wikipedia.org/wiki/Cron) | `@daily`                 |\n| `event_scheduler_frequency`                               | Frequency at which events will be forwarded to proxy in Cron format. In case if internet connection available on the cluster only during a certain time frame, specify time in UTC equivalent Cron format. | `@hourly`                |\n| `prometheus_scheduler_frequency`                          | Frequency in Cronjob format to pull metrics from Prometheus  | `@daily`                |\n| `image_pull_secret`                                       | Secret to pull container images from registry                | `bas-images-pull-secret` |\n| `db_archive.frequency`                                    | Frequency in Cronjob format to run archive job                                                           | `@monthly`             |\n| `db_archive.retention_age`                                | Number of months to retain the data in Database              | `6`                    |\n| `db_archive.persistent_storage.storage_class`             |Storage class of type ReadWriteMany         | Required user input    |\n| `db_archive.persistent_storage.storage_size`              | Size (in G) of the storage to be attached for saving airgapped files | `10G`                  |\n| `prometheus_metrics`                                      | Array of metrics information to be send to destination at desired frequency | []\n| `env_type`              | Type of environment. Can be **prod** (HA) or **lite** (non HA)   | `lite`                  |\n| `allowed_domains`                                         | Comma separated values of domains allowed by BAS. By default all domains are allowed | '*'\n\n\n**Generating the API Key**\n----\nOnce the deployment is complete, to use the Behavior Analytics Services Endpoints, generate an API key using the CR GenerateKey. This API key to be used to authenticate Behavior Analytics Services Endpoints.\n\nNote- Key can be retrieved from the secret with same name used while creating Generate Key CR's instance.\nOnce you get key from the secret, decode it using below command:\n```sh\necho -n <secret key> | base64 -d\n```\n\n**Deleting the API Key**\n----\nTo revoke the Key, delete the corresponding GenerateKey instance.\n\n**Using Behavior Analytics Services Endpoints**\n---\nFor all BAS APIs, use the Generated API Key for Authentication. Pass it as the Header- X-API-KEY and the key while using the APIs.\n",
      "csv_display_name": "Behavior Analytics Services",
      "csv_metadata_description": "Behavior Analytics Services is a service that collects, transforms and transmits product usage data.",
      "csv_name": "behavior-analytics-services-operator-certified.v1.1.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:19:53.996000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "behavior-analytics-services-operator-certified",
      "provided_apis": [
        {
          "group": "bas.ibm.com",
          "kind": "GenerateKey",
          "plural": "generatekeys",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "StoreForwardMetric",
          "plural": "storeforwardmetrics",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AirgappedDeployment",
          "plural": "airgappeddeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AnalyticsProxy",
          "plural": "analyticsproxies",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "Dashboard",
          "plural": "dashboards",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "DeleteCluster",
          "plural": "deleteclusters",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "FullDeployment",
          "plural": "fulldeployments",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d679fb7c9fa7fbc7c4c0065e676e65416f542e5408508d3e1f5040f8c3087366",
          "image": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator@sha256:d679fb7c9fa7fbc7c4c0065e676e65416f542e5408508d3e1f5040f8c3087366",
          "name": "behavior-analytics-services-operator"
        },
        {
          "digest": "sha256:8e0f1d33edf005eb2dfafed9b8367435b0f33ef4adf006bc75338f2a88e8942c",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:8e0f1d33edf005eb2dfafed9b8367435b0f33ef4adf006bc75338f2a88e8942c",
          "name": "dashboardinstaller"
        },
        {
          "digest": "sha256:239939ea3c5d24666f31e1d0ea281dd9664fcfe8139ee6d4b686b402ad64e5df",
          "image": "registry.connect.redhat.com/ibm-edge/event-api@sha256:239939ea3c5d24666f31e1d0ea281dd9664fcfe8139ee6d4b686b402ad64e5df",
          "name": "event_api"
        },
        {
          "digest": "sha256:6195b9dd602469d7cb3a92b2d071471d37980a6512ed604468a342ccd2ab2d42",
          "image": "registry.connect.redhat.com/ibm-edge/store-api@sha256:6195b9dd602469d7cb3a92b2d071471d37980a6512ed604468a342ccd2ab2d42",
          "name": "store_api"
        },
        {
          "digest": "sha256:96c726cbc10c44169aa5f84e77dd408ddad124ca7580575a459ed38908e3a99b",
          "image": "registry.connect.redhat.com/ibm-edge/event-reader@sha256:96c726cbc10c44169aa5f84e77dd408ddad124ca7580575a459ed38908e3a99b",
          "name": "reader"
        },
        {
          "digest": "sha256:6f2a627cdc0e5a05a351c160bc0dc8b73d886e7b4f93cd94a4c25acff869818e",
          "image": "registry.connect.redhat.com/ibm-edge/event-scheduler@sha256:6f2a627cdc0e5a05a351c160bc0dc8b73d886e7b4f93cd94a4c25acff869818e",
          "name": "event_scheduler"
        },
        {
          "digest": "sha256:e8dd581088cd9b008ce8a29f43d2ce22974dfaadfbfe9faba3370917717686ee",
          "image": "registry.connect.redhat.com/ibm-edge/prometheus-scheduler@sha256:e8dd581088cd9b008ce8a29f43d2ce22974dfaadfbfe9faba3370917717686ee",
          "name": "prometheus_scheduler"
        },
        {
          "digest": "sha256:90ddecb54abe2880b86016a407507cecf77a113b4c7724235ab0abd21ad1d9aa",
          "image": "registry.connect.redhat.com/ibm-edge/pgo-client@sha256:90ddecb54abe2880b86016a407507cecf77a113b4c7724235ab0abd21ad1d9aa",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:815630d23e8d88664907fbf8096952adfd22593a4989063e9dd55549e674ee15",
          "image": "registry.connect.redhat.com/ibm-edge/reverse-proxy@sha256:815630d23e8d88664907fbf8096952adfd22593a4989063e9dd55549e674ee15",
          "name": "nginx"
        },
        {
          "digest": "sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "image": "registry.redhat.io/openshift4/ose-grafana@sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "name": "grafana"
        },
        {
          "digest": "sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "image": "registry.redhat.io/openshift3/ose-kube-state-metrics@sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "name": "ksm"
        },
        {
          "digest": "sha256:3288307dd03844ec3574ca5c173d7f608755fd23654434c48ea2e854fe0f22cf",
          "image": "registry.connect.redhat.com/ibm-edge/growth-stack-base@sha256:3288307dd03844ec3574ca5c173d7f608755fd23654434c48ea2e854fe0f22cf",
          "name": "init_container"
        },
        {
          "digest": "sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "image": "registry.access.redhat.com/ubi8/ubi@sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "name": "ubi"
        },
        {
          "digest": "sha256:19a8b33e2f4c2beee5266d5243abb7f43d85322fc62800899759cdf6ec568fee",
          "image": "registry.connect.redhat.com/ibm-edge/airgap-download-ui@sha256:19a8b33e2f4c2beee5266d5243abb7f43d85322fc62800899759cdf6ec568fee",
          "name": "download_ui"
        },
        {
          "digest": "sha256:9f6eae3e715d9aff6d9674059fb6bf4f6dfc3ad42f015200c69b481becd7abd9",
          "image": "registry.connect.redhat.com/ibm-edge/bas-operator-dashboard@sha256:9f6eae3e715d9aff6d9674059fb6bf4f6dfc3ad42f015200c69b481becd7abd9",
          "name": "dashboard_ui"
        },
        {
          "digest": "sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "image": "registry.connect.redhat.com/crunchydata/pgo-deployer@sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "name": "pgo_deployer"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.1.3",
      "version_original": "1.1.3"
    },
    {
      "_id": "61d4791417f914cd7233120d",
      "alm_examples": [
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AirgappedDeployment",
          "metadata": {
            "name": "airgappeddeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AnalyticsProxy",
          "metadata": {
            "name": "analyticsproxy"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "DeleteCluster",
          "metadata": {
            "name": "deletecluster"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "FullDeployment",
          "metadata": {
            "name": "fulldeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "GenerateKey",
          "metadata": {
            "name": "bas-api-key"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "StoreForwardMetric",
          "metadata": {
            "name": "storeforwardmetric"
          },
          "spec": {
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "Dashboard",
          "metadata": {
            "name": "dashboard"
          },
          "spec": {
            "enable_test_api": true,
            "image_pull_secret": "bas-images-pull-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator-bundle@sha256:6164be85fcbf2c96f90fc54278f99aa40690fab6e257b8087864bfbdf9adab33",
      "bundle_path_digest": "sha256:6164be85fcbf2c96f90fc54278f99aa40690fab6e257b8087864bfbdf9adab33",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-04T16:43:00.546000+00:00",
      "csv_description": "Behavior Analytics Services Operator is a service that collects, transforms and transmits product usage data.\nThe Operator supports deployments using-\nA. Dashboard\nB. Openshift portal or CLI\n\n**A. Dashboard**\n----\nWhen the Operator is installed, the Dashboard is installed too. Goto the Dashboard Custom Resource to get the URL to the Dashboard.\n\n\n**B. Openshift portal or CLI**\n----\n----\nFor manual installation using Openshift portal or CLI, follow the steps below\n\n\n**Pre-requisites**\n----\nStep 1: Create a new Project\n```sh\noc new-project <project-name>\n```\n\nStep 2: Create a secret named \"database-credentials\" for PostgreSQL DB\n```sh\n oc create secret generic database-credentials --from-literal=db_username=<DB Username> --from-literal=db_password=<DB Password> -n <project-name>\n```\n\nStep 3: [Optional] If the images require a secret to pull the container images, create a secret of type dockerconfigjson. Pass this secret name in the CR spec image\\_pull\\_secret\n```sh\noc create secret generic bas-images-pull-secret --from-file=.dockerconfigjson=<path/to/.docker/config.json>  --type=kubernetes.io/dockerconfigjson\n```\n\nStep 4: Create a secret named \"mtls-proxy-secret\" which has the client key and certificate to connect to IBM Proxy service. If you don't have certificates then refer link https://developers.cloudflare.com/access/service-auth/mtls-testing#generating-the-root-ca to create root and client certificates. Please ensure to share root certificate with edge@us.ibm.com to allow access to IBM proxy service using client certificate.\n```sh\noc create secret tls mtls-proxy-secret --key client-key.pem --cert client.pem\n```\n\n**Installing the Behavior Analytics Services**\n----\n\nSelect any one of the deployments to setup the Behavior Analytics Services\n1. Full Deployment\n2. Analytics Proxy Deployment\n3. Store and Forward metrics Deployment\n4. Airgapped Analytics Proxy Deployment\n\n| Spec                                                      | Description                                                      | Default Value          |\n| --------------------------------------------------------- | ------------------------------------------------------------ | ---------------------- |\n| `ibmproxyurl`                                               | URL of IBM Proxy Service                                     | `https://iaps.ibm.com`   |\n| `postgres.storage_class`                                    | Storage class of type ReadWriteOnce                          | Required user input        |\n| `postgres.size`                                             | Size (in G) of the storage to be attached to Database        | `10G`                    |\n| `kafka.storage_class`                                       | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.storage_size`                                        | Size (in G) of the storage to be attached to Kafka  | `5G`                     |\n| `kafka.zookeeper_storage_class`                                 | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.zookeeper_storage_size`                                 | Size (in G) of the storage to be attached to Zookeeper | `5G`                     |\n| `airgapped.enabled`                                         | Set value to \"true\" if airgapped setup is to be enabled otherwise keep the default value \"false\" | `false`                  |\n| `airgapped.backup_retention_period`   | Number of days to keep the backup files in the storage       | `7`                     |\n| `airgapped.backup_deletion_frequency` | Frequency of job to delete files from the storage. It accepts values in Cron format (https://en.wikipedia.org/wiki/Cron) | `@daily`                 |\n| `event_scheduler_frequency`                               | Frequency at which events will be forwarded to proxy in Cron format. In case if internet connection available on the cluster only during a certain time frame, specify time in UTC equivalent Cron format. | `@hourly`                |\n| `prometheus_scheduler_frequency`                          | Frequency in Cronjob format to pull metrics from Prometheus  | `@daily`                |\n| `image_pull_secret`                                       | Secret to pull container images from registry                | `bas-images-pull-secret` |\n| `db_archive.frequency`                                    | Frequency in Cronjob format to run archive job                                                           | `@monthly`             |\n| `db_archive.retention_age`                                | Number of months to retain the data in Database              | `6`                    |\n| `db_archive.persistent_storage.storage_class`             |Storage class of type ReadWriteMany         | Required user input    |\n| `db_archive.persistent_storage.storage_size`              | Size (in G) of the storage to be attached for saving airgapped files | `10G`                  |\n| `prometheus_metrics`                                      | Array of metrics information to be send to destination at desired frequency | []\n| `env_type`              | Type of environment. Can be **prod** (HA) or **lite** (non HA)   | `lite`                  |\n| `allowed_domains`                                         | Comma separated values of domains allowed by BAS. By default all domains are allowed | '*'\n\n\n**Generating the API Key**\n----\nOnce the deployment is complete, to use the Behavior Analytics Services Endpoints, generate an API key using the CR GenerateKey. This API key to be used to authenticate Behavior Analytics Services Endpoints.\n\nNote- Key can be retrieved from the secret with same name used while creating Generate Key CR's instance.\nOnce you get key from the secret, decode it using below command:\n```sh\necho -n <secret key> | base64 -d\n```\n\n**Deleting the API Key**\n----\nTo revoke the Key, delete the corresponding GenerateKey instance.\n\n**Using Behavior Analytics Services Endpoints**\n---\nFor all BAS APIs, use the Generated API Key for Authentication. Pass it as the Header- X-API-KEY and the key while using the APIs.\n",
      "csv_display_name": "Behavior Analytics Services",
      "csv_metadata_description": "Behavior Analytics Services is a service that collects, transforms and transmits product usage data.",
      "csv_name": "behavior-analytics-services-operator-certified.v1.1.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:54:29.918000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "behavior-analytics-services-operator-certified",
      "provided_apis": [
        {
          "group": "bas.ibm.com",
          "kind": "DeleteCluster",
          "plural": "deleteclusters",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "FullDeployment",
          "plural": "fulldeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "GenerateKey",
          "plural": "generatekeys",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "StoreForwardMetric",
          "plural": "storeforwardmetrics",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AirgappedDeployment",
          "plural": "airgappeddeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AnalyticsProxy",
          "plural": "analyticsproxies",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "Dashboard",
          "plural": "dashboards",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d679fb7c9fa7fbc7c4c0065e676e65416f542e5408508d3e1f5040f8c3087366",
          "image": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator@sha256:d679fb7c9fa7fbc7c4c0065e676e65416f542e5408508d3e1f5040f8c3087366",
          "name": "behavior-analytics-services-operator"
        },
        {
          "digest": "sha256:8e0f1d33edf005eb2dfafed9b8367435b0f33ef4adf006bc75338f2a88e8942c",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:8e0f1d33edf005eb2dfafed9b8367435b0f33ef4adf006bc75338f2a88e8942c",
          "name": "dashboardinstaller"
        },
        {
          "digest": "sha256:239939ea3c5d24666f31e1d0ea281dd9664fcfe8139ee6d4b686b402ad64e5df",
          "image": "registry.connect.redhat.com/ibm-edge/event-api@sha256:239939ea3c5d24666f31e1d0ea281dd9664fcfe8139ee6d4b686b402ad64e5df",
          "name": "event_api"
        },
        {
          "digest": "sha256:6195b9dd602469d7cb3a92b2d071471d37980a6512ed604468a342ccd2ab2d42",
          "image": "registry.connect.redhat.com/ibm-edge/store-api@sha256:6195b9dd602469d7cb3a92b2d071471d37980a6512ed604468a342ccd2ab2d42",
          "name": "store_api"
        },
        {
          "digest": "sha256:96c726cbc10c44169aa5f84e77dd408ddad124ca7580575a459ed38908e3a99b",
          "image": "registry.connect.redhat.com/ibm-edge/event-reader@sha256:96c726cbc10c44169aa5f84e77dd408ddad124ca7580575a459ed38908e3a99b",
          "name": "reader"
        },
        {
          "digest": "sha256:6f2a627cdc0e5a05a351c160bc0dc8b73d886e7b4f93cd94a4c25acff869818e",
          "image": "registry.connect.redhat.com/ibm-edge/event-scheduler@sha256:6f2a627cdc0e5a05a351c160bc0dc8b73d886e7b4f93cd94a4c25acff869818e",
          "name": "event_scheduler"
        },
        {
          "digest": "sha256:e8dd581088cd9b008ce8a29f43d2ce22974dfaadfbfe9faba3370917717686ee",
          "image": "registry.connect.redhat.com/ibm-edge/prometheus-scheduler@sha256:e8dd581088cd9b008ce8a29f43d2ce22974dfaadfbfe9faba3370917717686ee",
          "name": "prometheus_scheduler"
        },
        {
          "digest": "sha256:90ddecb54abe2880b86016a407507cecf77a113b4c7724235ab0abd21ad1d9aa",
          "image": "registry.connect.redhat.com/ibm-edge/pgo-client@sha256:90ddecb54abe2880b86016a407507cecf77a113b4c7724235ab0abd21ad1d9aa",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:815630d23e8d88664907fbf8096952adfd22593a4989063e9dd55549e674ee15",
          "image": "registry.connect.redhat.com/ibm-edge/reverse-proxy@sha256:815630d23e8d88664907fbf8096952adfd22593a4989063e9dd55549e674ee15",
          "name": "nginx"
        },
        {
          "digest": "sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "image": "registry.redhat.io/openshift4/ose-grafana@sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "name": "grafana"
        },
        {
          "digest": "sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "image": "registry.redhat.io/openshift3/ose-kube-state-metrics@sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "name": "ksm"
        },
        {
          "digest": "sha256:3288307dd03844ec3574ca5c173d7f608755fd23654434c48ea2e854fe0f22cf",
          "image": "registry.connect.redhat.com/ibm-edge/growth-stack-base@sha256:3288307dd03844ec3574ca5c173d7f608755fd23654434c48ea2e854fe0f22cf",
          "name": "init_container"
        },
        {
          "digest": "sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "image": "registry.access.redhat.com/ubi8/ubi@sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "name": "ubi"
        },
        {
          "digest": "sha256:19a8b33e2f4c2beee5266d5243abb7f43d85322fc62800899759cdf6ec568fee",
          "image": "registry.connect.redhat.com/ibm-edge/airgap-download-ui@sha256:19a8b33e2f4c2beee5266d5243abb7f43d85322fc62800899759cdf6ec568fee",
          "name": "download_ui"
        },
        {
          "digest": "sha256:9f6eae3e715d9aff6d9674059fb6bf4f6dfc3ad42f015200c69b481becd7abd9",
          "image": "registry.connect.redhat.com/ibm-edge/bas-operator-dashboard@sha256:9f6eae3e715d9aff6d9674059fb6bf4f6dfc3ad42f015200c69b481becd7abd9",
          "name": "dashboard_ui"
        },
        {
          "digest": "sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "image": "registry.connect.redhat.com/crunchydata/pgo-deployer@sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "name": "pgo_deployer"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.1.3",
      "version_original": "1.1.3"
    },
    {
      "_id": "61d47f0b85d2c616abf7b0c5",
      "alm_examples": [
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AirgappedDeployment",
          "metadata": {
            "name": "airgappeddeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AnalyticsProxy",
          "metadata": {
            "name": "analyticsproxy"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "DeleteCluster",
          "metadata": {
            "name": "deletecluster"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "FullDeployment",
          "metadata": {
            "name": "fulldeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "GenerateKey",
          "metadata": {
            "name": "bas-api-key"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "StoreForwardMetric",
          "metadata": {
            "name": "storeforwardmetric"
          },
          "spec": {
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "Dashboard",
          "metadata": {
            "name": "dashboard"
          },
          "spec": {
            "enable_test_api": true,
            "image_pull_secret": "bas-images-pull-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator-bundle@sha256:6164be85fcbf2c96f90fc54278f99aa40690fab6e257b8087864bfbdf9adab33",
      "bundle_path_digest": "sha256:6164be85fcbf2c96f90fc54278f99aa40690fab6e257b8087864bfbdf9adab33",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-04T17:08:27.989000+00:00",
      "csv_description": "Behavior Analytics Services Operator is a service that collects, transforms and transmits product usage data.\nThe Operator supports deployments using-\nA. Dashboard\nB. Openshift portal or CLI\n\n**A. Dashboard**\n----\nWhen the Operator is installed, the Dashboard is installed too. Goto the Dashboard Custom Resource to get the URL to the Dashboard.\n\n\n**B. Openshift portal or CLI**\n----\n----\nFor manual installation using Openshift portal or CLI, follow the steps below\n\n\n**Pre-requisites**\n----\nStep 1: Create a new Project\n```sh\noc new-project <project-name>\n```\n\nStep 2: Create a secret named \"database-credentials\" for PostgreSQL DB\n```sh\n oc create secret generic database-credentials --from-literal=db_username=<DB Username> --from-literal=db_password=<DB Password> -n <project-name>\n```\n\nStep 3: [Optional] If the images require a secret to pull the container images, create a secret of type dockerconfigjson. Pass this secret name in the CR spec image\\_pull\\_secret\n```sh\noc create secret generic bas-images-pull-secret --from-file=.dockerconfigjson=<path/to/.docker/config.json>  --type=kubernetes.io/dockerconfigjson\n```\n\nStep 4: Create a secret named \"mtls-proxy-secret\" which has the client key and certificate to connect to IBM Proxy service. If you don't have certificates then refer link https://developers.cloudflare.com/access/service-auth/mtls-testing#generating-the-root-ca to create root and client certificates. Please ensure to share root certificate with edge@us.ibm.com to allow access to IBM proxy service using client certificate.\n```sh\noc create secret tls mtls-proxy-secret --key client-key.pem --cert client.pem\n```\n\n**Installing the Behavior Analytics Services**\n----\n\nSelect any one of the deployments to setup the Behavior Analytics Services\n1. Full Deployment\n2. Analytics Proxy Deployment\n3. Store and Forward metrics Deployment\n4. Airgapped Analytics Proxy Deployment\n\n| Spec                                                      | Description                                                      | Default Value          |\n| --------------------------------------------------------- | ------------------------------------------------------------ | ---------------------- |\n| `ibmproxyurl`                                               | URL of IBM Proxy Service                                     | `https://iaps.ibm.com`   |\n| `postgres.storage_class`                                    | Storage class of type ReadWriteOnce                          | Required user input        |\n| `postgres.size`                                             | Size (in G) of the storage to be attached to Database        | `10G`                    |\n| `kafka.storage_class`                                       | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.storage_size`                                        | Size (in G) of the storage to be attached to Kafka  | `5G`                     |\n| `kafka.zookeeper_storage_class`                                 | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.zookeeper_storage_size`                                 | Size (in G) of the storage to be attached to Zookeeper | `5G`                     |\n| `airgapped.enabled`                                         | Set value to \"true\" if airgapped setup is to be enabled otherwise keep the default value \"false\" | `false`                  |\n| `airgapped.backup_retention_period`   | Number of days to keep the backup files in the storage       | `7`                     |\n| `airgapped.backup_deletion_frequency` | Frequency of job to delete files from the storage. It accepts values in Cron format (https://en.wikipedia.org/wiki/Cron) | `@daily`                 |\n| `event_scheduler_frequency`                               | Frequency at which events will be forwarded to proxy in Cron format. In case if internet connection available on the cluster only during a certain time frame, specify time in UTC equivalent Cron format. | `@hourly`                |\n| `prometheus_scheduler_frequency`                          | Frequency in Cronjob format to pull metrics from Prometheus  | `@daily`                |\n| `image_pull_secret`                                       | Secret to pull container images from registry                | `bas-images-pull-secret` |\n| `db_archive.frequency`                                    | Frequency in Cronjob format to run archive job                                                           | `@monthly`             |\n| `db_archive.retention_age`                                | Number of months to retain the data in Database              | `6`                    |\n| `db_archive.persistent_storage.storage_class`             |Storage class of type ReadWriteMany         | Required user input    |\n| `db_archive.persistent_storage.storage_size`              | Size (in G) of the storage to be attached for saving airgapped files | `10G`                  |\n| `prometheus_metrics`                                      | Array of metrics information to be send to destination at desired frequency | []\n| `env_type`              | Type of environment. Can be **prod** (HA) or **lite** (non HA)   | `lite`                  |\n| `allowed_domains`                                         | Comma separated values of domains allowed by BAS. By default all domains are allowed | '*'\n\n\n**Generating the API Key**\n----\nOnce the deployment is complete, to use the Behavior Analytics Services Endpoints, generate an API key using the CR GenerateKey. This API key to be used to authenticate Behavior Analytics Services Endpoints.\n\nNote- Key can be retrieved from the secret with same name used while creating Generate Key CR's instance.\nOnce you get key from the secret, decode it using below command:\n```sh\necho -n <secret key> | base64 -d\n```\n\n**Deleting the API Key**\n----\nTo revoke the Key, delete the corresponding GenerateKey instance.\n\n**Using Behavior Analytics Services Endpoints**\n---\nFor all BAS APIs, use the Generated API Key for Authentication. Pass it as the Header- X-API-KEY and the key while using the APIs.\n",
      "csv_display_name": "Behavior Analytics Services",
      "csv_metadata_description": "Behavior Analytics Services is a service that collects, transforms and transmits product usage data.",
      "csv_name": "behavior-analytics-services-operator-certified.v1.1.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:42:33.035000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "behavior-analytics-services-operator-certified",
      "provided_apis": [
        {
          "group": "bas.ibm.com",
          "kind": "Dashboard",
          "plural": "dashboards",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "DeleteCluster",
          "plural": "deleteclusters",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "FullDeployment",
          "plural": "fulldeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "GenerateKey",
          "plural": "generatekeys",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "StoreForwardMetric",
          "plural": "storeforwardmetrics",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AirgappedDeployment",
          "plural": "airgappeddeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AnalyticsProxy",
          "plural": "analyticsproxies",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d679fb7c9fa7fbc7c4c0065e676e65416f542e5408508d3e1f5040f8c3087366",
          "image": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator@sha256:d679fb7c9fa7fbc7c4c0065e676e65416f542e5408508d3e1f5040f8c3087366",
          "name": "behavior-analytics-services-operator"
        },
        {
          "digest": "sha256:8e0f1d33edf005eb2dfafed9b8367435b0f33ef4adf006bc75338f2a88e8942c",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:8e0f1d33edf005eb2dfafed9b8367435b0f33ef4adf006bc75338f2a88e8942c",
          "name": "dashboardinstaller"
        },
        {
          "digest": "sha256:239939ea3c5d24666f31e1d0ea281dd9664fcfe8139ee6d4b686b402ad64e5df",
          "image": "registry.connect.redhat.com/ibm-edge/event-api@sha256:239939ea3c5d24666f31e1d0ea281dd9664fcfe8139ee6d4b686b402ad64e5df",
          "name": "event_api"
        },
        {
          "digest": "sha256:6195b9dd602469d7cb3a92b2d071471d37980a6512ed604468a342ccd2ab2d42",
          "image": "registry.connect.redhat.com/ibm-edge/store-api@sha256:6195b9dd602469d7cb3a92b2d071471d37980a6512ed604468a342ccd2ab2d42",
          "name": "store_api"
        },
        {
          "digest": "sha256:96c726cbc10c44169aa5f84e77dd408ddad124ca7580575a459ed38908e3a99b",
          "image": "registry.connect.redhat.com/ibm-edge/event-reader@sha256:96c726cbc10c44169aa5f84e77dd408ddad124ca7580575a459ed38908e3a99b",
          "name": "reader"
        },
        {
          "digest": "sha256:6f2a627cdc0e5a05a351c160bc0dc8b73d886e7b4f93cd94a4c25acff869818e",
          "image": "registry.connect.redhat.com/ibm-edge/event-scheduler@sha256:6f2a627cdc0e5a05a351c160bc0dc8b73d886e7b4f93cd94a4c25acff869818e",
          "name": "event_scheduler"
        },
        {
          "digest": "sha256:e8dd581088cd9b008ce8a29f43d2ce22974dfaadfbfe9faba3370917717686ee",
          "image": "registry.connect.redhat.com/ibm-edge/prometheus-scheduler@sha256:e8dd581088cd9b008ce8a29f43d2ce22974dfaadfbfe9faba3370917717686ee",
          "name": "prometheus_scheduler"
        },
        {
          "digest": "sha256:90ddecb54abe2880b86016a407507cecf77a113b4c7724235ab0abd21ad1d9aa",
          "image": "registry.connect.redhat.com/ibm-edge/pgo-client@sha256:90ddecb54abe2880b86016a407507cecf77a113b4c7724235ab0abd21ad1d9aa",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:815630d23e8d88664907fbf8096952adfd22593a4989063e9dd55549e674ee15",
          "image": "registry.connect.redhat.com/ibm-edge/reverse-proxy@sha256:815630d23e8d88664907fbf8096952adfd22593a4989063e9dd55549e674ee15",
          "name": "nginx"
        },
        {
          "digest": "sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "image": "registry.redhat.io/openshift4/ose-grafana@sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "name": "grafana"
        },
        {
          "digest": "sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "image": "registry.redhat.io/openshift3/ose-kube-state-metrics@sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "name": "ksm"
        },
        {
          "digest": "sha256:3288307dd03844ec3574ca5c173d7f608755fd23654434c48ea2e854fe0f22cf",
          "image": "registry.connect.redhat.com/ibm-edge/growth-stack-base@sha256:3288307dd03844ec3574ca5c173d7f608755fd23654434c48ea2e854fe0f22cf",
          "name": "init_container"
        },
        {
          "digest": "sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "image": "registry.access.redhat.com/ubi8/ubi@sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "name": "ubi"
        },
        {
          "digest": "sha256:19a8b33e2f4c2beee5266d5243abb7f43d85322fc62800899759cdf6ec568fee",
          "image": "registry.connect.redhat.com/ibm-edge/airgap-download-ui@sha256:19a8b33e2f4c2beee5266d5243abb7f43d85322fc62800899759cdf6ec568fee",
          "name": "download_ui"
        },
        {
          "digest": "sha256:9f6eae3e715d9aff6d9674059fb6bf4f6dfc3ad42f015200c69b481becd7abd9",
          "image": "registry.connect.redhat.com/ibm-edge/bas-operator-dashboard@sha256:9f6eae3e715d9aff6d9674059fb6bf4f6dfc3ad42f015200c69b481becd7abd9",
          "name": "dashboard_ui"
        },
        {
          "digest": "sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "image": "registry.connect.redhat.com/crunchydata/pgo-deployer@sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "name": "pgo_deployer"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.1.3",
      "version_original": "1.1.3"
    },
    {
      "_id": "61d8a4c585d2c616abf7b673",
      "alm_examples": [
        {
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.4.3"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:a385097d685c5c2b21b5d8d0b371be96ac9c0a79d82620ddc8f5156208960dab",
      "bundle_path_digest": "sha256:a385097d685c5c2b21b5d8d0b371be96ac9c0a79d82620ddc8f5156208960dab",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-07T20:38:29.656000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:01:38.303000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f095a94e3e70d6cc87bab45a48a54252663570059e0e54b2dac198636439b5ab",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:f095a94e3e70d6cc87bab45a48a54252663570059e0e54b2dac198636439b5ab",
          "name": "t8c-operator-f095a94e3e70d6cc87bab45a48a54252663570059e0e54b2dac198636439b5ab-annotation"
        },
        {
          "digest": "sha256:f095a94e3e70d6cc87bab45a48a54252663570059e0e54b2dac198636439b5ab",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:f095a94e3e70d6cc87bab45a48a54252663570059e0e54b2dac198636439b5ab",
          "name": "t8c-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "42.5.0",
      "version_original": "42.5.0"
    },
    {
      "_id": "61d8a7a785d2c616abf7b674",
      "alm_examples": [
        {
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.4.3"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:a385097d685c5c2b21b5d8d0b371be96ac9c0a79d82620ddc8f5156208960dab",
      "bundle_path_digest": "sha256:a385097d685c5c2b21b5d8d0b371be96ac9c0a79d82620ddc8f5156208960dab",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-07T20:50:47.543000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:14:34.877000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f095a94e3e70d6cc87bab45a48a54252663570059e0e54b2dac198636439b5ab",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:f095a94e3e70d6cc87bab45a48a54252663570059e0e54b2dac198636439b5ab",
          "name": "t8c-operator-f095a94e3e70d6cc87bab45a48a54252663570059e0e54b2dac198636439b5ab-annotation"
        },
        {
          "digest": "sha256:f095a94e3e70d6cc87bab45a48a54252663570059e0e54b2dac198636439b5ab",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:f095a94e3e70d6cc87bab45a48a54252663570059e0e54b2dac198636439b5ab",
          "name": "t8c-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "42.5.0",
      "version_original": "42.5.0"
    },
    {
      "_id": "61d8a8669ea53314a92f8e7e",
      "alm_examples": [
        {
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.4.3"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:a385097d685c5c2b21b5d8d0b371be96ac9c0a79d82620ddc8f5156208960dab",
      "bundle_path_digest": "sha256:a385097d685c5c2b21b5d8d0b371be96ac9c0a79d82620ddc8f5156208960dab",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-07T20:53:58.750000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:55:46.110000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f095a94e3e70d6cc87bab45a48a54252663570059e0e54b2dac198636439b5ab",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:f095a94e3e70d6cc87bab45a48a54252663570059e0e54b2dac198636439b5ab",
          "name": "t8c-operator-f095a94e3e70d6cc87bab45a48a54252663570059e0e54b2dac198636439b5ab-annotation"
        },
        {
          "digest": "sha256:f095a94e3e70d6cc87bab45a48a54252663570059e0e54b2dac198636439b5ab",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:f095a94e3e70d6cc87bab45a48a54252663570059e0e54b2dac198636439b5ab",
          "name": "t8c-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "42.5.0",
      "version_original": "42.5.0"
    },
    {
      "_id": "61d8ac2d12abd998d20741fa",
      "alm_examples": [
        {
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.4.3"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:a385097d685c5c2b21b5d8d0b371be96ac9c0a79d82620ddc8f5156208960dab",
      "bundle_path_digest": "sha256:a385097d685c5c2b21b5d8d0b371be96ac9c0a79d82620ddc8f5156208960dab",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-07T21:10:05.388000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:14:06.850000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f095a94e3e70d6cc87bab45a48a54252663570059e0e54b2dac198636439b5ab",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:f095a94e3e70d6cc87bab45a48a54252663570059e0e54b2dac198636439b5ab",
          "name": "t8c-operator-f095a94e3e70d6cc87bab45a48a54252663570059e0e54b2dac198636439b5ab-annotation"
        },
        {
          "digest": "sha256:f095a94e3e70d6cc87bab45a48a54252663570059e0e54b2dac198636439b5ab",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:f095a94e3e70d6cc87bab45a48a54252663570059e0e54b2dac198636439b5ab",
          "name": "t8c-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "42.5.0",
      "version_original": "42.5.0"
    },
    {
      "_id": "61d8df7823156829b87a48e5",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:4e3de1e4702a7efcd2bec9758d36e3126a96f1376afad22f8b98576753c65acf",
      "bundle_path_digest": "sha256:4e3de1e4702a7efcd2bec9758d36e3126a96f1376afad22f8b98576753c65acf",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-08T00:48:56.001000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T10:58:56.606000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator-879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d-annotation"
        },
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:6d86ff4af4063108e4d9a4546c586bb8df5ad837bfc95a2f40806a2e17fe9474",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:6d86ff4af4063108e4d9a4546c586bb8df5ad837bfc95a2f40806a2e17fe9474",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.4.2",
      "version_original": "8.4.2"
    },
    {
      "_id": "61d8e16923156829b87a48e6",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:4e3de1e4702a7efcd2bec9758d36e3126a96f1376afad22f8b98576753c65acf",
      "bundle_path_digest": "sha256:4e3de1e4702a7efcd2bec9758d36e3126a96f1376afad22f8b98576753c65acf",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-08T00:57:13.998000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:19:12.430000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator-879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d-annotation"
        },
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:6d86ff4af4063108e4d9a4546c586bb8df5ad837bfc95a2f40806a2e17fe9474",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:6d86ff4af4063108e4d9a4546c586bb8df5ad837bfc95a2f40806a2e17fe9474",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.4.2",
      "version_original": "8.4.2"
    },
    {
      "_id": "61d8e4bd12abd998d2074211",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:4e3de1e4702a7efcd2bec9758d36e3126a96f1376afad22f8b98576753c65acf",
      "bundle_path_digest": "sha256:4e3de1e4702a7efcd2bec9758d36e3126a96f1376afad22f8b98576753c65acf",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-08T01:11:25.154000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:22:06.932000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator-879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d-annotation"
        },
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:6d86ff4af4063108e4d9a4546c586bb8df5ad837bfc95a2f40806a2e17fe9474",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:6d86ff4af4063108e4d9a4546c586bb8df5ad837bfc95a2f40806a2e17fe9474",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "8.4.2",
      "version_original": "8.4.2"
    },
    {
      "_id": "61d8f73e85d2c616abf7b699",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:4e3de1e4702a7efcd2bec9758d36e3126a96f1376afad22f8b98576753c65acf",
      "bundle_path_digest": "sha256:4e3de1e4702a7efcd2bec9758d36e3126a96f1376afad22f8b98576753c65acf",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-08T02:30:22.345000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:55:38.041000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator-879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d-annotation"
        },
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:6d86ff4af4063108e4d9a4546c586bb8df5ad837bfc95a2f40806a2e17fe9474",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:6d86ff4af4063108e4d9a4546c586bb8df5ad837bfc95a2f40806a2e17fe9474",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "8.4.2",
      "version_original": "8.4.2"
    },
    {
      "_id": "61d8f73f9ea53314a92f8e9e",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:67d1077dfb115fbeab64b428e4cd95dc578f46d76d4d2170727c8773c7cfee13",
      "bundle_path_digest": "sha256:67d1077dfb115fbeab64b428e4cd95dc578f46d76d4d2170727c8773c7cfee13",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-08T02:30:23.656000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:54:29.482000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator-879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d-annotation"
        },
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:e6bdff05ed99cc1d39773fa4943a4804e000e87f1b17701fbaba24160347e48d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:e6bdff05ed99cc1d39773fa4943a4804e000e87f1b17701fbaba24160347e48d",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "8.4.3",
      "version_original": "8.4.3"
    },
    {
      "_id": "61d8f91123156829b87a48f8",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:67d1077dfb115fbeab64b428e4cd95dc578f46d76d4d2170727c8773c7cfee13",
      "bundle_path_digest": "sha256:67d1077dfb115fbeab64b428e4cd95dc578f46d76d4d2170727c8773c7cfee13",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-08T02:38:09.359000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T10:58:58.540000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator-879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d-annotation"
        },
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:e6bdff05ed99cc1d39773fa4943a4804e000e87f1b17701fbaba24160347e48d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:e6bdff05ed99cc1d39773fa4943a4804e000e87f1b17701fbaba24160347e48d",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.4.3",
      "version_original": "8.4.3"
    },
    {
      "_id": "61d8f91d9ea53314a92f8e9f",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:67d1077dfb115fbeab64b428e4cd95dc578f46d76d4d2170727c8773c7cfee13",
      "bundle_path_digest": "sha256:67d1077dfb115fbeab64b428e4cd95dc578f46d76d4d2170727c8773c7cfee13",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-08T02:38:21.967000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:22:12.764000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator-879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d-annotation"
        },
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:e6bdff05ed99cc1d39773fa4943a4804e000e87f1b17701fbaba24160347e48d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:e6bdff05ed99cc1d39773fa4943a4804e000e87f1b17701fbaba24160347e48d",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "8.4.3",
      "version_original": "8.4.3"
    },
    {
      "_id": "61d8f95185d2c616abf7b69a",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:67d1077dfb115fbeab64b428e4cd95dc578f46d76d4d2170727c8773c7cfee13",
      "bundle_path_digest": "sha256:67d1077dfb115fbeab64b428e4cd95dc578f46d76d4d2170727c8773c7cfee13",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-08T02:39:13.979000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:15:57.878000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator-879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d-annotation"
        },
        {
          "digest": "sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:879dfbb577866b48ee6c7e77094c6fda4b733accecdb7cc30755a5f579ec246d",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:e6bdff05ed99cc1d39773fa4943a4804e000e87f1b17701fbaba24160347e48d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:e6bdff05ed99cc1d39773fa4943a4804e000e87f1b17701fbaba24160347e48d",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.4.3",
      "version_original": "8.4.3"
    },
    {
      "_id": "61dd4efa9ea53314a92f9042",
      "alm_examples": [
        {
          "api_version": "hxcsi.cisco.com/v2",
          "kind": "HXCSIDriver",
          "metadata": {
            "name": "cisco-hyperflex-csi-driver"
          },
          "spec": {
            "affinity": {},
            "autoscaling": {},
            "fullnameOverride": "",
            "hx": {
              "clientId": "INPUT_VALUE_HERE",
              "dockerRegistryName": "INPUT_VALUE_HERE",
              "iscsiUrl": "INPUT_VALUE_HERE",
              "token": "INPUT_VALUE_HERE",
              "url": "INPUT_VALUE_HERE"
            },
            "image": {
              "attacher": "hxcsi-csi-attacher:3.2.1-cisco1",
              "hxcsi": "hxcsi-ubi8:hxcsi-1.2.4-latest",
              "provisioner": "hxcsi-csi-provisioner:2.2.1-cisco1",
              "pullPolicy": "Always",
              "registrar": "hxcsi-csi-node-driver-registrar:2.2.0-cisco1",
              "resizer": "hxcsi-csi-resizer:1.2.0-cisco1",
              "tag": ""
            },
            "ingress": {},
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "replicaCount": 2,
            "resources": {},
            "securityContext": {},
            "service": {},
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            },
            "storageClass": {
              "isDefault": "false",
              "name": "hyperflex"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hxcsiadmin/hxcsi-helm-bundle@sha256:3906d0837e6745f0024a8819f1cc6d93da7d1289ed9db9ccd47552918c11e9f4",
      "bundle_path_digest": "sha256:3906d0837e6745f0024a8819f1cc6d93da7d1289ed9db9ccd47552918c11e9f4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-11T09:33:46.017000+00:00",
      "csv_description": "\nCisco HyperFlex Data Platform (HX Data Platform) is a hyperconverged software appliance that transforms Cisco servers into a single pool of compute and storage resources. It eliminates the need for network storage and enables seamless interoperability between computing and storage in virtual environments. The Cisco HX Data Platform provides a highly fault-tolerant distributed storage system that preserves data integrity and optimizes performance for virtual machine (VM) storage workloads. In addition, native compression and deduplication reduce storage space occupied by the VMs and VM workloads.\n### HyperFlex CSI Driver\nThe Cisco HyperFlex Kubernetes CSI Integration allows Cisco HyperFlex to dynamically provide persistent storage to stateful Kubernetes workloads running on Cisco HyperFlex. The integration enables orchestration of the entire Persistent Volume object lifecycle to be offloaded and managed by Cisco HyperFlex, while being driven (initiated) by developers and users through standard Kubernetes Persistent Volume Claim objects. Developers and users get the benefit of leveraging Cisco HyperFlex for their Kubernetes persistent storage needs with zero additional administration overhead from their perspective.\n### Features Support\n- Support for CSI Spec 1.2 APIs\n- Kubernetes 1.18, 1.19, 1.20, 1.21 support\n- Kubernetes Cluster multi tenancy target masking using dedicated initiator group\n- Dynamic creation and deletion of volumes\n- Dynamic volume attach and detach\n- Block access support\n- CHAP support for iSCSI sessions\n- Clone volume (when source volume is from the same Datastore)\n- PV support with different filesystems (Ext4, Ext3, XFS)\n- Volume space statistics reporting per CSI specs\n- Multi-writer support (ReadWriteMany) for Block Mode only\n- Volume resize support for block mode volumes and ext3, ext4 filesystem volumes (expansion)\n",
      "csv_display_name": "Cisco Hyperflex CSI Operator",
      "csv_metadata_description": "Cisco HXCSI Plugin for RedHat OpenShift Platform",
      "csv_name": "cisco-hxcsi-operator.v1.2.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:51:46.729000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "cisco-hxcsi-operator",
      "provided_apis": [
        {
          "group": "hxcsi.cisco.com",
          "kind": "HXCSIDriver",
          "plural": "hxcsidrivers",
          "version": "v1"
        },
        {
          "group": "hxcsi.cisco.com",
          "kind": "HXCSIDriver",
          "plural": "hxcsidrivers",
          "version": "v2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:3539d2e9746e6c007b32ba49de8dcb5e04546779cd43ddb3b2412beb44dacfee",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-bundle@sha256:3539d2e9746e6c007b32ba49de8dcb5e04546779cd43ddb3b2412beb44dacfee",
          "name": "hxcsi-helm-bundle-3539d2e9746e6c007b32ba49de8dcb5e04546779cd43ddb3b2412beb44dacfee-annotation"
        },
        {
          "digest": "sha256:f000432f07cd187469f0310e3ed9dcf9a5db2be14b8bab9c5293dd1ee8518176",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f000432f07cd187469f0310e3ed9dcf9a5db2be14b8bab9c5293dd1ee8518176",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:76551da5c57ea629f1b6cf8b05b90bfa6dbc6b4e1cd886b9374fa6adb52f877d",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-operator@sha256:76551da5c57ea629f1b6cf8b05b90bfa6dbc6b4e1cd886b9374fa6adb52f877d",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.2.4",
      "version_original": "1.2.4"
    },
    {
      "_id": "61dda4a712abd998d20743d4",
      "alm_examples": [
        {
          "api_version": "hxcsi.cisco.com/v2",
          "kind": "HXCSIDriver",
          "metadata": {
            "name": "cisco-hyperflex-csi-driver"
          },
          "spec": {
            "affinity": {},
            "autoscaling": {},
            "fullnameOverride": "",
            "hx": {
              "clientId": "INPUT_VALUE_HERE",
              "dockerRegistryName": "INPUT_VALUE_HERE",
              "iscsiUrl": "INPUT_VALUE_HERE",
              "token": "INPUT_VALUE_HERE",
              "url": "INPUT_VALUE_HERE"
            },
            "image": {
              "attacher": "hxcsi-csi-attacher:3.2.1-cisco1",
              "hxcsi": "hxcsi-ubi8:hxcsi-1.2.4-latest",
              "provisioner": "hxcsi-csi-provisioner:2.2.1-cisco1",
              "pullPolicy": "Always",
              "registrar": "hxcsi-csi-node-driver-registrar:2.2.0-cisco1",
              "resizer": "hxcsi-csi-resizer:1.2.0-cisco1",
              "tag": ""
            },
            "ingress": {},
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "replicaCount": 2,
            "resources": {},
            "securityContext": {},
            "service": {},
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            },
            "storageClass": {
              "isDefault": "false",
              "name": "hyperflex"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hxcsiadmin/hxcsi-helm-bundle@sha256:3906d0837e6745f0024a8819f1cc6d93da7d1289ed9db9ccd47552918c11e9f4",
      "bundle_path_digest": "sha256:3906d0837e6745f0024a8819f1cc6d93da7d1289ed9db9ccd47552918c11e9f4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-11T15:39:19.938000+00:00",
      "csv_description": "\nCisco HyperFlex Data Platform (HX Data Platform) is a hyperconverged software appliance that transforms Cisco servers into a single pool of compute and storage resources. It eliminates the need for network storage and enables seamless interoperability between computing and storage in virtual environments. The Cisco HX Data Platform provides a highly fault-tolerant distributed storage system that preserves data integrity and optimizes performance for virtual machine (VM) storage workloads. In addition, native compression and deduplication reduce storage space occupied by the VMs and VM workloads.\n### HyperFlex CSI Driver\nThe Cisco HyperFlex Kubernetes CSI Integration allows Cisco HyperFlex to dynamically provide persistent storage to stateful Kubernetes workloads running on Cisco HyperFlex. The integration enables orchestration of the entire Persistent Volume object lifecycle to be offloaded and managed by Cisco HyperFlex, while being driven (initiated) by developers and users through standard Kubernetes Persistent Volume Claim objects. Developers and users get the benefit of leveraging Cisco HyperFlex for their Kubernetes persistent storage needs with zero additional administration overhead from their perspective.\n### Features Support\n- Support for CSI Spec 1.2 APIs\n- Kubernetes 1.18, 1.19, 1.20, 1.21 support\n- Kubernetes Cluster multi tenancy target masking using dedicated initiator group\n- Dynamic creation and deletion of volumes\n- Dynamic volume attach and detach\n- Block access support\n- CHAP support for iSCSI sessions\n- Clone volume (when source volume is from the same Datastore)\n- PV support with different filesystems (Ext4, Ext3, XFS)\n- Volume space statistics reporting per CSI specs\n- Multi-writer support (ReadWriteMany) for Block Mode only\n- Volume resize support for block mode volumes and ext3, ext4 filesystem volumes (expansion)\n",
      "csv_display_name": "Cisco Hyperflex CSI Operator",
      "csv_metadata_description": "Cisco HXCSI Plugin for RedHat OpenShift Platform",
      "csv_name": "cisco-hxcsi-operator.v1.2.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:53:07.950000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cisco-hxcsi-operator",
      "provided_apis": [
        {
          "group": "hxcsi.cisco.com",
          "kind": "HXCSIDriver",
          "plural": "hxcsidrivers",
          "version": "v1"
        },
        {
          "group": "hxcsi.cisco.com",
          "kind": "HXCSIDriver",
          "plural": "hxcsidrivers",
          "version": "v2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:3539d2e9746e6c007b32ba49de8dcb5e04546779cd43ddb3b2412beb44dacfee",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-bundle@sha256:3539d2e9746e6c007b32ba49de8dcb5e04546779cd43ddb3b2412beb44dacfee",
          "name": "hxcsi-helm-bundle-3539d2e9746e6c007b32ba49de8dcb5e04546779cd43ddb3b2412beb44dacfee-annotation"
        },
        {
          "digest": "sha256:f000432f07cd187469f0310e3ed9dcf9a5db2be14b8bab9c5293dd1ee8518176",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f000432f07cd187469f0310e3ed9dcf9a5db2be14b8bab9c5293dd1ee8518176",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:76551da5c57ea629f1b6cf8b05b90bfa6dbc6b4e1cd886b9374fa6adb52f877d",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-operator@sha256:76551da5c57ea629f1b6cf8b05b90bfa6dbc6b4e1cd886b9374fa6adb52f877d",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.2.4",
      "version_original": "1.2.4"
    },
    {
      "_id": "61dda6c012abd998d20743d5",
      "alm_examples": [
        {
          "api_version": "hxcsi.cisco.com/v2",
          "kind": "HXCSIDriver",
          "metadata": {
            "name": "cisco-hyperflex-csi-driver"
          },
          "spec": {
            "affinity": {},
            "autoscaling": {},
            "fullnameOverride": "",
            "hx": {
              "clientId": "INPUT_VALUE_HERE",
              "dockerRegistryName": "INPUT_VALUE_HERE",
              "iscsiUrl": "INPUT_VALUE_HERE",
              "token": "INPUT_VALUE_HERE",
              "url": "INPUT_VALUE_HERE"
            },
            "image": {
              "attacher": "hxcsi-csi-attacher:3.2.1-cisco1",
              "hxcsi": "hxcsi-ubi8:hxcsi-1.2.4-latest",
              "provisioner": "hxcsi-csi-provisioner:2.2.1-cisco1",
              "pullPolicy": "Always",
              "registrar": "hxcsi-csi-node-driver-registrar:2.2.0-cisco1",
              "resizer": "hxcsi-csi-resizer:1.2.0-cisco1",
              "tag": ""
            },
            "ingress": {},
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "replicaCount": 2,
            "resources": {},
            "securityContext": {},
            "service": {},
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            },
            "storageClass": {
              "isDefault": "false",
              "name": "hyperflex"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hxcsiadmin/hxcsi-helm-bundle@sha256:3906d0837e6745f0024a8819f1cc6d93da7d1289ed9db9ccd47552918c11e9f4",
      "bundle_path_digest": "sha256:3906d0837e6745f0024a8819f1cc6d93da7d1289ed9db9ccd47552918c11e9f4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-11T15:48:16.163000+00:00",
      "csv_description": "\nCisco HyperFlex Data Platform (HX Data Platform) is a hyperconverged software appliance that transforms Cisco servers into a single pool of compute and storage resources. It eliminates the need for network storage and enables seamless interoperability between computing and storage in virtual environments. The Cisco HX Data Platform provides a highly fault-tolerant distributed storage system that preserves data integrity and optimizes performance for virtual machine (VM) storage workloads. In addition, native compression and deduplication reduce storage space occupied by the VMs and VM workloads.\n### HyperFlex CSI Driver\nThe Cisco HyperFlex Kubernetes CSI Integration allows Cisco HyperFlex to dynamically provide persistent storage to stateful Kubernetes workloads running on Cisco HyperFlex. The integration enables orchestration of the entire Persistent Volume object lifecycle to be offloaded and managed by Cisco HyperFlex, while being driven (initiated) by developers and users through standard Kubernetes Persistent Volume Claim objects. Developers and users get the benefit of leveraging Cisco HyperFlex for their Kubernetes persistent storage needs with zero additional administration overhead from their perspective.\n### Features Support\n- Support for CSI Spec 1.2 APIs\n- Kubernetes 1.18, 1.19, 1.20, 1.21 support\n- Kubernetes Cluster multi tenancy target masking using dedicated initiator group\n- Dynamic creation and deletion of volumes\n- Dynamic volume attach and detach\n- Block access support\n- CHAP support for iSCSI sessions\n- Clone volume (when source volume is from the same Datastore)\n- PV support with different filesystems (Ext4, Ext3, XFS)\n- Volume space statistics reporting per CSI specs\n- Multi-writer support (ReadWriteMany) for Block Mode only\n- Volume resize support for block mode volumes and ext3, ext4 filesystem volumes (expansion)\n",
      "csv_display_name": "Cisco Hyperflex CSI Operator",
      "csv_metadata_description": "Cisco HXCSI Plugin for RedHat OpenShift Platform",
      "csv_name": "cisco-hxcsi-operator.v1.2.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:43:58.017000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "cisco-hxcsi-operator",
      "provided_apis": [
        {
          "group": "hxcsi.cisco.com",
          "kind": "HXCSIDriver",
          "plural": "hxcsidrivers",
          "version": "v1"
        },
        {
          "group": "hxcsi.cisco.com",
          "kind": "HXCSIDriver",
          "plural": "hxcsidrivers",
          "version": "v2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:3539d2e9746e6c007b32ba49de8dcb5e04546779cd43ddb3b2412beb44dacfee",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-bundle@sha256:3539d2e9746e6c007b32ba49de8dcb5e04546779cd43ddb3b2412beb44dacfee",
          "name": "hxcsi-helm-bundle-3539d2e9746e6c007b32ba49de8dcb5e04546779cd43ddb3b2412beb44dacfee-annotation"
        },
        {
          "digest": "sha256:f000432f07cd187469f0310e3ed9dcf9a5db2be14b8bab9c5293dd1ee8518176",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f000432f07cd187469f0310e3ed9dcf9a5db2be14b8bab9c5293dd1ee8518176",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:76551da5c57ea629f1b6cf8b05b90bfa6dbc6b4e1cd886b9374fa6adb52f877d",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-operator@sha256:76551da5c57ea629f1b6cf8b05b90bfa6dbc6b4e1cd886b9374fa6adb52f877d",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.2.4",
      "version_original": "1.2.4"
    },
    {
      "_id": "61decc7892aa95b37d10a636",
      "alm_examples": [
        {
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false
          }
        },
        {
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.5"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        },
        {
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:ef19254785b3c1ee16b10eaddb36c836d8257e3011cc8205b96c5bfa95f52373",
      "bundle_path_digest": "sha256:ef19254785b3c1ee16b10eaddb36c836d8257e3011cc8205b96c5bfa95f52373",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.5",
      "creation_date": "2022-01-12T12:41:28.038000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.5.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.5.22003",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:39:32.131000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:cf95a89db8b01a58386e34f510a99f491d219a17a7a0fa3130612a6540d9c249",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:cf95a89db8b01a58386e34f510a99f491d219a17a7a0fa3130612a6540d9c249",
          "name": "aquasec-cf95a89db8b01a58386e34f510a99f491d219a17a7a0fa3130612a6540d9c249-annotation"
        },
        {
          "digest": "sha256:cf95a89db8b01a58386e34f510a99f491d219a17a7a0fa3130612a6540d9c249",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:cf95a89db8b01a58386e34f510a99f491d219a17a7a0fa3130612a6540d9c249",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:e4a0b6b5d7b31f9366f1477a0fe10b2a353ad5d9bf4f6ab24b8d28915eb12002",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:e4a0b6b5d7b31f9366f1477a0fe10b2a353ad5d9bf4f6ab24b8d28915eb12002",
          "name": "gateway"
        },
        {
          "digest": "sha256:ad9b95ae369d44b81109ecfbc8fe82b0286daf1050752c1fbdd6314ed6aab77e",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:ad9b95ae369d44b81109ecfbc8fe82b0286daf1050752c1fbdd6314ed6aab77e",
          "name": "server"
        },
        {
          "digest": "sha256:2caaab98579fbe9626a346f836c36d4c7d33e78a52f5a4926404ac11c5a29da8",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:2caaab98579fbe9626a346f836c36d4c7d33e78a52f5a4926404ac11c5a29da8",
          "name": "scanner"
        },
        {
          "digest": "sha256:3837b984c21ccf4cdbc4fb8ce4022f0de342426d39b3434f4f50d29590a8d144",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:3837b984c21ccf4cdbc4fb8ce4022f0de342426d39b3434f4f50d29590a8d144",
          "name": "enforcer"
        },
        {
          "digest": "sha256:0033414610ff5d13e5a527115933d7f357e69902f062a8887bdd595af85cb78a",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:0033414610ff5d13e5a527115933d7f357e69902f062a8887bdd595af85cb78a",
          "name": "kube_enforcer"
        }
      ],
      "skip_range": ">=1.0.2 <6.5.22003",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.5.22003",
      "version_original": "6.5.22003"
    },
    {
      "_id": "61df2621af2ecd8db0283c65",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-53.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "bundle_path_digest": "sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2022-01-12T19:04:01.932000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:47:57.374000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator-5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59-annotation"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.2.8-11",
      "version_original": "6.2.8-11"
    },
    {
      "_id": "61df262318e211622411f6d7",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-53.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "bundle_path_digest": "sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-01-12T19:04:03.747000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:50:33.752000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator-5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59-annotation"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "admission"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.2.8-11",
      "version_original": "6.2.8-11"
    },
    {
      "_id": "61df268e10a746fc32d384cb",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-53.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "bundle_path_digest": "sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2022-01-12T19:05:50.817000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:45:42.588000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator-5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59-annotation"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.2.8-11",
      "version_original": "6.2.8-11"
    },
    {
      "_id": "61df269010a746fc32d384cc",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-53.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "bundle_path_digest": "sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-01-12T19:05:52.248000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:15:19.157000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator-5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59-annotation"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "admission"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.2.8-11",
      "version_original": "6.2.8-11"
    },
    {
      "_id": "61df28c592aa95b37d10a667",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-53.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "bundle_path_digest": "sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-01-12T19:15:17.436000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:00:59.223000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator-5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59-annotation"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "admission"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.2.8-11",
      "version_original": "6.2.8-11"
    },
    {
      "_id": "61df28c610a746fc32d384cd",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-53.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "bundle_path_digest": "sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2022-01-12T19:15:18.971000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:57:46.033000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator-5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59-annotation"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.2.8-11",
      "version_original": "6.2.8-11"
    },
    {
      "_id": "61df294e10a746fc32d384ce",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-53.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "bundle_path_digest": "sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2022-01-12T19:17:34.582000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:12:53.039000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator-5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59-annotation"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.2.8-11",
      "version_original": "6.2.8-11"
    },
    {
      "_id": "61df295092aa95b37d10a668",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-53.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "bundle_path_digest": "sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-01-12T19:17:36.533000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:22:38.385000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator-5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59-annotation"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "admission"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.2.8-11",
      "version_original": "6.2.8-11"
    },
    {
      "_id": "61df4db7af2ecd8db0283c72",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:b0429d13d8f0146a431bb9a009b1c1c691ec0afea12c23547f46c73f7e116a38",
      "bundle_path_digest": "sha256:b0429d13d8f0146a431bb9a009b1c1c691ec0afea12c23547f46c73f7e116a38",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-12T21:52:55.086000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.23",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:54:29.403000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:20361ef412dab120fe6ac4793db463e9e32cdaca348791c97043af874e8326d2",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:20361ef412dab120fe6ac4793db463e9e32cdaca348791c97043af874e8326d2",
          "name": "joget"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.0.23",
      "version_original": "0.0.23"
    },
    {
      "_id": "61df4f7910a746fc32d384e5",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:b0429d13d8f0146a431bb9a009b1c1c691ec0afea12c23547f46c73f7e116a38",
      "bundle_path_digest": "sha256:b0429d13d8f0146a431bb9a009b1c1c691ec0afea12c23547f46c73f7e116a38",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-12T22:00:25.536000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.23",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:49:04.598000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:20361ef412dab120fe6ac4793db463e9e32cdaca348791c97043af874e8326d2",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:20361ef412dab120fe6ac4793db463e9e32cdaca348791c97043af874e8326d2",
          "name": "joget"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.0.23",
      "version_original": "0.0.23"
    },
    {
      "_id": "61df530818e211622411f6e7",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:b0429d13d8f0146a431bb9a009b1c1c691ec0afea12c23547f46c73f7e116a38",
      "bundle_path_digest": "sha256:b0429d13d8f0146a431bb9a009b1c1c691ec0afea12c23547f46c73f7e116a38",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-12T22:15:36.173000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.23",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:01:15.522000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [],
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:20361ef412dab120fe6ac4793db463e9e32cdaca348791c97043af874e8326d2",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:20361ef412dab120fe6ac4793db463e9e32cdaca348791c97043af874e8326d2",
          "name": "joget"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.23",
      "version_original": "0.0.23"
    },
    {
      "_id": "61df53c318e211622411f6e8",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:b0429d13d8f0146a431bb9a009b1c1c691ec0afea12c23547f46c73f7e116a38",
      "bundle_path_digest": "sha256:b0429d13d8f0146a431bb9a009b1c1c691ec0afea12c23547f46c73f7e116a38",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-12T22:18:43.429000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.23",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:49:27.509000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:20361ef412dab120fe6ac4793db463e9e32cdaca348791c97043af874e8326d2",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:20361ef412dab120fe6ac4793db463e9e32cdaca348791c97043af874e8326d2",
          "name": "joget"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.23",
      "version_original": "0.0.23"
    },
    {
      "_id": "61df54cbaf2ecd8db0283c76",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:b0429d13d8f0146a431bb9a009b1c1c691ec0afea12c23547f46c73f7e116a38",
      "bundle_path_digest": "sha256:b0429d13d8f0146a431bb9a009b1c1c691ec0afea12c23547f46c73f7e116a38",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-12T22:23:07.337000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.23",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:43:16.833000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:20361ef412dab120fe6ac4793db463e9e32cdaca348791c97043af874e8326d2",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:20361ef412dab120fe6ac4793db463e9e32cdaca348791c97043af874e8326d2",
          "name": "joget"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.23",
      "version_original": "0.0.23"
    },
    {
      "_id": "61df5d8c92aa95b37d10a680",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:2710597189b856e4eb175a5b08ca65f67a762be6bbf6b68f247d86f412c13a61",
      "bundle_path_digest": "sha256:2710597189b856e4eb175a5b08ca65f67a762be6bbf6b68f247d86f412c13a61",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-12T23:00:28.057000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:49:09.994000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:560d089ad138bb6f3e38ba33d78aee348cce0020f0cfbbe1ea6f87586b01b1df",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:560d089ad138bb6f3e38ba33d78aee348cce0020f0cfbbe1ea6f87586b01b1df",
          "name": "joget"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.0.24",
      "version_original": "0.0.24"
    },
    {
      "_id": "61df5f1910a746fc32d384f2",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:b0429d13d8f0146a431bb9a009b1c1c691ec0afea12c23547f46c73f7e116a38",
      "bundle_path_digest": "sha256:b0429d13d8f0146a431bb9a009b1c1c691ec0afea12c23547f46c73f7e116a38",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-12T23:07:05.746000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.23",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:23:13.687000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:20361ef412dab120fe6ac4793db463e9e32cdaca348791c97043af874e8326d2",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:20361ef412dab120fe6ac4793db463e9e32cdaca348791c97043af874e8326d2",
          "name": "joget"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.23",
      "version_original": "0.0.23"
    },
    {
      "_id": "61df5f1b18e211622411f6f1",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:2710597189b856e4eb175a5b08ca65f67a762be6bbf6b68f247d86f412c13a61",
      "bundle_path_digest": "sha256:2710597189b856e4eb175a5b08ca65f67a762be6bbf6b68f247d86f412c13a61",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-12T23:07:07.122000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:07:55.415000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:560d089ad138bb6f3e38ba33d78aee348cce0020f0cfbbe1ea6f87586b01b1df",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:560d089ad138bb6f3e38ba33d78aee348cce0020f0cfbbe1ea6f87586b01b1df",
          "name": "joget"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.24",
      "version_original": "0.0.24"
    },
    {
      "_id": "61df604d92aa95b37d10a684",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:2710597189b856e4eb175a5b08ca65f67a762be6bbf6b68f247d86f412c13a61",
      "bundle_path_digest": "sha256:2710597189b856e4eb175a5b08ca65f67a762be6bbf6b68f247d86f412c13a61",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-12T23:12:13.682000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:17:34.220000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:560d089ad138bb6f3e38ba33d78aee348cce0020f0cfbbe1ea6f87586b01b1df",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:560d089ad138bb6f3e38ba33d78aee348cce0020f0cfbbe1ea6f87586b01b1df",
          "name": "joget"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.24",
      "version_original": "0.0.24"
    },
    {
      "_id": "61df605718e211622411f6f2",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:2710597189b856e4eb175a5b08ca65f67a762be6bbf6b68f247d86f412c13a61",
      "bundle_path_digest": "sha256:2710597189b856e4eb175a5b08ca65f67a762be6bbf6b68f247d86f412c13a61",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-12T23:12:23.493000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:54:31.945000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:560d089ad138bb6f3e38ba33d78aee348cce0020f0cfbbe1ea6f87586b01b1df",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:560d089ad138bb6f3e38ba33d78aee348cce0020f0cfbbe1ea6f87586b01b1df",
          "name": "joget"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.0.24",
      "version_original": "0.0.24"
    },
    {
      "_id": "61df60b410a746fc32d384f3",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:2710597189b856e4eb175a5b08ca65f67a762be6bbf6b68f247d86f412c13a61",
      "bundle_path_digest": "sha256:2710597189b856e4eb175a5b08ca65f67a762be6bbf6b68f247d86f412c13a61",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-12T23:13:56.074000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:57:26.642000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [],
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:560d089ad138bb6f3e38ba33d78aee348cce0020f0cfbbe1ea6f87586b01b1df",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:560d089ad138bb6f3e38ba33d78aee348cce0020f0cfbbe1ea6f87586b01b1df",
          "name": "joget"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.24",
      "version_original": "0.0.24"
    },
    {
      "_id": "61df645f92aa95b37d10a685",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:2710597189b856e4eb175a5b08ca65f67a762be6bbf6b68f247d86f412c13a61",
      "bundle_path_digest": "sha256:2710597189b856e4eb175a5b08ca65f67a762be6bbf6b68f247d86f412c13a61",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-12T23:29:35.839000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:28:00.942000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:560d089ad138bb6f3e38ba33d78aee348cce0020f0cfbbe1ea6f87586b01b1df",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:560d089ad138bb6f3e38ba33d78aee348cce0020f0cfbbe1ea6f87586b01b1df",
          "name": "joget"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.24",
      "version_original": "0.0.24"
    },
    {
      "_id": "61e0e0ea4ec9945c187874bb",
      "alm_examples": [
        {
          "api_version": "k8s.nginx.org/v1alpha1",
          "kind": "NginxIngressController",
          "metadata": {
            "name": "my-nginx-ingress-controller"
          },
          "spec": {
            "image": {
              "pullPolicy": "Always",
              "repository": "docker.io/nginx/nginx-ingress",
              "tag": "2.1.0-ubi"
            },
            "ingressClass": "nginx",
            "nginxPlus": false,
            "serviceType": "NodePort",
            "type": "deployment"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/nginx/nginx-ingress-operator-bundle@sha256:f5f78f507a6ca839318b690ca7f00ce95cbedfabd2373a28e1aea7447d989759",
      "bundle_path_digest": "sha256:f5f78f507a6ca839318b690ca7f00ce95cbedfabd2373a28e1aea7447d989759",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-14T02:33:14.250000+00:00",
      "csv_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_display_name": "Nginx Ingress Operator",
      "csv_metadata_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_name": "nginx-ingress-operator.v0.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:51:46.127000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "nginx-ingress-operator",
      "provided_apis": [
        {
          "group": "k8s.nginx.org",
          "kind": "NginxIngressController",
          "plural": "nginxingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ce32ee52df88c74d7a4a1011e5df2644138558a7f855d6f994dca7647e9a7bf1",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:ce32ee52df88c74d7a4a1011e5df2644138558a7f855d6f994dca7647e9a7bf1",
          "name": "nginx-ingress-operator-ce32ee52df88c74d7a4a1011e5df2644138558a7f855d6f994dca7647e9a7bf1-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:ce32ee52df88c74d7a4a1011e5df2644138558a7f855d6f994dca7647e9a7bf1",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:ce32ee52df88c74d7a4a1011e5df2644138558a7f855d6f994dca7647e9a7bf1",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.5.0",
      "version_original": "0.5.0"
    },
    {
      "_id": "61e0e2b34ec9945c187874bc",
      "alm_examples": [
        {
          "api_version": "k8s.nginx.org/v1alpha1",
          "kind": "NginxIngressController",
          "metadata": {
            "name": "my-nginx-ingress-controller"
          },
          "spec": {
            "image": {
              "pullPolicy": "Always",
              "repository": "docker.io/nginx/nginx-ingress",
              "tag": "2.1.0-ubi"
            },
            "ingressClass": "nginx",
            "nginxPlus": false,
            "serviceType": "NodePort",
            "type": "deployment"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/nginx/nginx-ingress-operator-bundle@sha256:f5f78f507a6ca839318b690ca7f00ce95cbedfabd2373a28e1aea7447d989759",
      "bundle_path_digest": "sha256:f5f78f507a6ca839318b690ca7f00ce95cbedfabd2373a28e1aea7447d989759",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-14T02:40:51.054000+00:00",
      "csv_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_display_name": "Nginx Ingress Operator",
      "csv_metadata_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_name": "nginx-ingress-operator.v0.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:44:48.128000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "nginx-ingress-operator",
      "provided_apis": [
        {
          "group": "k8s.nginx.org",
          "kind": "NginxIngressController",
          "plural": "nginxingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ce32ee52df88c74d7a4a1011e5df2644138558a7f855d6f994dca7647e9a7bf1",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:ce32ee52df88c74d7a4a1011e5df2644138558a7f855d6f994dca7647e9a7bf1",
          "name": "nginx-ingress-operator-ce32ee52df88c74d7a4a1011e5df2644138558a7f855d6f994dca7647e9a7bf1-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:ce32ee52df88c74d7a4a1011e5df2644138558a7f855d6f994dca7647e9a7bf1",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:ce32ee52df88c74d7a4a1011e5df2644138558a7f855d6f994dca7647e9a7bf1",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.5.0",
      "version_original": "0.5.0"
    },
    {
      "_id": "61e0e2e8694e832f5a056e35",
      "alm_examples": [
        {
          "api_version": "k8s.nginx.org/v1alpha1",
          "kind": "NginxIngressController",
          "metadata": {
            "name": "my-nginx-ingress-controller"
          },
          "spec": {
            "image": {
              "pullPolicy": "Always",
              "repository": "docker.io/nginx/nginx-ingress",
              "tag": "2.1.0-ubi"
            },
            "ingressClass": "nginx",
            "nginxPlus": false,
            "serviceType": "NodePort",
            "type": "deployment"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/nginx/nginx-ingress-operator-bundle@sha256:f5f78f507a6ca839318b690ca7f00ce95cbedfabd2373a28e1aea7447d989759",
      "bundle_path_digest": "sha256:f5f78f507a6ca839318b690ca7f00ce95cbedfabd2373a28e1aea7447d989759",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-14T02:41:44.689000+00:00",
      "csv_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_display_name": "Nginx Ingress Operator",
      "csv_metadata_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_name": "nginx-ingress-operator.v0.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:55:51.840000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "nginx-ingress-operator",
      "provided_apis": [
        {
          "group": "k8s.nginx.org",
          "kind": "NginxIngressController",
          "plural": "nginxingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ce32ee52df88c74d7a4a1011e5df2644138558a7f855d6f994dca7647e9a7bf1",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:ce32ee52df88c74d7a4a1011e5df2644138558a7f855d6f994dca7647e9a7bf1",
          "name": "nginx-ingress-operator-ce32ee52df88c74d7a4a1011e5df2644138558a7f855d6f994dca7647e9a7bf1-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:ce32ee52df88c74d7a4a1011e5df2644138558a7f855d6f994dca7647e9a7bf1",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:ce32ee52df88c74d7a4a1011e5df2644138558a7f855d6f994dca7647e9a7bf1",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.5.0",
      "version_original": "0.5.0"
    },
    {
      "_id": "61e1dcd24ec9945c187874ea",
      "alm_examples": [
        {
          "api_version": "k8s.nginx.org/v1alpha1",
          "kind": "NginxIngressController",
          "metadata": {
            "name": "my-nginx-ingress-controller"
          },
          "spec": {
            "image": {
              "pullPolicy": "Always",
              "repository": "docker.io/nginx/nginx-ingress",
              "tag": "2.0.0-ubi"
            },
            "ingressClass": "nginx",
            "nginxPlus": false,
            "serviceType": "NodePort",
            "type": "deployment"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nginx/nginx-ingress-operator-bundle@sha256:177b0e39c4ed3113932a2392ec86515b35994bb2c9e3740c92baefc139dfef6c",
      "bundle_path_digest": "sha256:177b0e39c4ed3113932a2392ec86515b35994bb2c9e3740c92baefc139dfef6c",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-14T20:28:02.915000+00:00",
      "csv_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_display_name": "Nginx Ingress Operator",
      "csv_metadata_description": "",
      "csv_name": "nginx-ingress-operator.v0.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:58:47.909000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nginx-ingress-operator",
      "provided_apis": [
        {
          "group": "k8s.nginx.org",
          "kind": "NginxIngressController",
          "plural": "nginxingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:484e26e348354e6dd28934aedbcd139c786284a88a4e16a7652b5a52bd0beeac",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:484e26e348354e6dd28934aedbcd139c786284a88a4e16a7652b5a52bd0beeac",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:b7766e1dd702cee4443df2c089058d4cc7b154d5dda574bd432d02ef10313f57",
          "image": "registry.connect.redhat.com/nginx/nginx-ingress-operator@sha256:b7766e1dd702cee4443df2c089058d4cc7b154d5dda574bd432d02ef10313f57",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.4.0",
      "version_original": "0.4.0"
    },
    {
      "_id": "61e1ddbe223cb93ac44f9e50",
      "alm_examples": [
        {
          "api_version": "k8s.nginx.org/v1alpha1",
          "kind": "NginxIngressController",
          "metadata": {
            "name": "my-nginx-ingress-controller"
          },
          "spec": {
            "image": {
              "pullPolicy": "Always",
              "repository": "docker.io/nginx/nginx-ingress",
              "tag": "2.0.0-ubi"
            },
            "ingressClass": "nginx",
            "nginxPlus": false,
            "serviceType": "NodePort",
            "type": "deployment"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nginx/nginx-ingress-operator-bundle@sha256:177b0e39c4ed3113932a2392ec86515b35994bb2c9e3740c92baefc139dfef6c",
      "bundle_path_digest": "sha256:177b0e39c4ed3113932a2392ec86515b35994bb2c9e3740c92baefc139dfef6c",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-14T20:31:58.149000+00:00",
      "csv_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_display_name": "Nginx Ingress Operator",
      "csv_metadata_description": "",
      "csv_name": "nginx-ingress-operator.v0.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:45:24.843000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "nginx-ingress-operator",
      "provided_apis": [
        {
          "group": "k8s.nginx.org",
          "kind": "NginxIngressController",
          "plural": "nginxingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:484e26e348354e6dd28934aedbcd139c786284a88a4e16a7652b5a52bd0beeac",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:484e26e348354e6dd28934aedbcd139c786284a88a4e16a7652b5a52bd0beeac",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:b7766e1dd702cee4443df2c089058d4cc7b154d5dda574bd432d02ef10313f57",
          "image": "registry.connect.redhat.com/nginx/nginx-ingress-operator@sha256:b7766e1dd702cee4443df2c089058d4cc7b154d5dda574bd432d02ef10313f57",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.4.0",
      "version_original": "0.4.0"
    },
    {
      "_id": "61e1e6604ec9945c187874f3",
      "alm_examples": [
        {
          "api_version": "k8s.nginx.org/v1alpha1",
          "kind": "NginxIngressController",
          "metadata": {
            "name": "my-nginx-ingress-controller"
          },
          "spec": {
            "image": {
              "pullPolicy": "Always",
              "repository": "docker.io/nginx/nginx-ingress",
              "tag": "2.1.0-ubi"
            },
            "ingressClass": "nginx",
            "nginxPlus": false,
            "serviceType": "NodePort",
            "type": "deployment"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/nginx/nginx-ingress-operator-bundle@sha256:f5f78f507a6ca839318b690ca7f00ce95cbedfabd2373a28e1aea7447d989759",
      "bundle_path_digest": "sha256:f5f78f507a6ca839318b690ca7f00ce95cbedfabd2373a28e1aea7447d989759",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-14T21:08:48.585000+00:00",
      "csv_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_display_name": "Nginx Ingress Operator",
      "csv_metadata_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_name": "nginx-ingress-operator.v0.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:33:52.782000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nginx-ingress-operator",
      "provided_apis": [
        {
          "group": "k8s.nginx.org",
          "kind": "NginxIngressController",
          "plural": "nginxingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ce32ee52df88c74d7a4a1011e5df2644138558a7f855d6f994dca7647e9a7bf1",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:ce32ee52df88c74d7a4a1011e5df2644138558a7f855d6f994dca7647e9a7bf1",
          "name": "nginx-ingress-operator-ce32ee52df88c74d7a4a1011e5df2644138558a7f855d6f994dca7647e9a7bf1-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:ce32ee52df88c74d7a4a1011e5df2644138558a7f855d6f994dca7647e9a7bf1",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:ce32ee52df88c74d7a4a1011e5df2644138558a7f855d6f994dca7647e9a7bf1",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.5.0",
      "version_original": "0.5.0"
    },
    {
      "_id": "61e1e6944ec9945c187874f4",
      "alm_examples": [
        {
          "api_version": "k8s.nginx.org/v1alpha1",
          "kind": "NginxIngressController",
          "metadata": {
            "name": "my-nginx-ingress-controller"
          },
          "spec": {
            "image": {
              "pullPolicy": "Always",
              "repository": "docker.io/nginx/nginx-ingress",
              "tag": "2.1.0-ubi"
            },
            "ingressClass": "nginx",
            "nginxPlus": false,
            "serviceType": "NodePort",
            "type": "deployment"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/nginx/nginx-ingress-operator-bundle@sha256:f5f78f507a6ca839318b690ca7f00ce95cbedfabd2373a28e1aea7447d989759",
      "bundle_path_digest": "sha256:f5f78f507a6ca839318b690ca7f00ce95cbedfabd2373a28e1aea7447d989759",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-14T21:09:40.290000+00:00",
      "csv_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_display_name": "Nginx Ingress Operator",
      "csv_metadata_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_name": "nginx-ingress-operator.v0.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:17:11.462000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "nginx-ingress-operator",
      "provided_apis": [
        {
          "group": "k8s.nginx.org",
          "kind": "NginxIngressController",
          "plural": "nginxingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ce32ee52df88c74d7a4a1011e5df2644138558a7f855d6f994dca7647e9a7bf1",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:ce32ee52df88c74d7a4a1011e5df2644138558a7f855d6f994dca7647e9a7bf1",
          "name": "nginx-ingress-operator-ce32ee52df88c74d7a4a1011e5df2644138558a7f855d6f994dca7647e9a7bf1-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:ce32ee52df88c74d7a4a1011e5df2644138558a7f855d6f994dca7647e9a7bf1",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:ce32ee52df88c74d7a4a1011e5df2644138558a7f855d6f994dca7647e9a7bf1",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.5.0",
      "version_original": "0.5.0"
    },
    {
      "_id": "61e6fc1ffb528ee347236de6",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "OpenshiftArtifactoryHa",
          "metadata": {
            "name": "openshiftartifactoryha"
          },
          "spec": {
            "artifactory-ha": {
              "artifactory": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/artifactory-pro",
                  "tag": "7.27.3-1"
                },
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE",
                "node": {
                  "replicaCount": 2,
                  "waitForPrimaryStartup": {
                    "enabled": false
                  }
                },
                "uid": "1000721030"
              },
              "database": {
                "driver": "OVERRIDE",
                "password": "OVERRIDE",
                "type": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "databaseUpgradeReady": true,
              "initContainerImage": "registry.connect.redhat.com/jfrog/init@sha256:164b41720a37f75c6129c8a28d05cc56f821022313d44ff918cce4a2146d93e8",
              "nginx": {
                "gid": "1000720107",
                "http": {
                  "externalPort": 80,
                  "internalPort": 8080
                },
                "https": {
                  "externalPort": 443,
                  "internalPort": 8443
                },
                "image": {
                  "registry": "registry.redhat.io",
                  "repository": "rhel8/nginx-116",
                  "tag": "latest"
                },
                "service": {
                  "ssloffload": false
                },
                "tlsSecretName": "OVERRIDE",
                "uid": "1000720104"
              },
              "postgresql": {
                "enabled": false
              },
              "waitForDatabase": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/artifactory-operator-bundle@sha256:3c12c9d9537b12f610b9f759ad0a94ed465608f69e6bd1cd175a8c3d177151b8",
      "bundle_path_digest": "sha256:3c12c9d9537b12f610b9f759ad0a94ed465608f69e6bd1cd175a8c3d177151b8",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-18T17:42:55.933000+00:00",
      "csv_description": " ## Breaking change\nPlease update to version 1.1.10 of the operator.\nVersion 1.1.8 and 1.1.9 have issues. Please skip these versions.\n\n## Overview\nOpenshift Operator to deploy JFrog Artifactory Enterprise into your Openshift cluster.\n## Security Context Constraints\nTo deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc.\n```\noc adm policy add-scc-to-user anyuid -z artifactory-ha-operator -n openshift-operators\n```\nAdd the service account for the Artifactory chart to deploy successfully:\n``` oc adm policy add-scc-to-user anyuid -z openshiftartifactoryha-artifactory-ha -n artifactory ```\n### Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Artifactory Enterprise Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Artifactory Enterprise Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Artifactory HA.\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\nDATABASE_TYPE\nDATABASE_DRIVER\nDATABASE_URL\nDATABASE_USER\nDATABASE_PASSWORD\n```\nMaster key and Join key must be supplied. To generate a new key for each run the command below:\n\n```\n# Create a key\nexport JOIN_KEY=$(openssl rand -hex 32)\necho ${JOIN_KEY}\n```\n\nTo use TLS you will need to first create a k8s tls secret to store your .crt and .key file into.\nThen supply the value of this k8s secret into the TLS_SECRET field.\n``` oc create secret tls my_tls_secret --cert=tls.crt --key=tls.key --namespace=my_namespace ```\nClick Create for Artifactory Enterprise to deploy into OpenShift and connect to it on the external IP exposed by the load balancer.\n### Create a route\nTo expose Artifactory from Openshift we recommend you create a new route in Openshift.\nYou can either use the oc command line tool or the Openshift web console to generate a new route.\nDepending upon where you terminate TLS you will need to either specify pass through or edge.\nCommand Line (Edge):\n``` oc create route edge --service=openshiftartifactory-ha --cert=tls.crt --key=tls.key --ca-cert=ca.crt --hostname=www.example.com ```\nOr for more information visit the official Openshift documentation on routes here:\nhttps://docs.openshift.com/container-platform/4.6/networking/routes/route-configuration.html\n\n",
      "csv_display_name": "JFrog Artifactory Enterprise Operator",
      "csv_metadata_description": "JFrog Artifactory Enterprise deploys Artifactory in a high availability environment across multiple pods",
      "csv_name": "artifactory-ha-operator.v1.1.20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:11:44.518000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [],
      "related_images": [
        {
          "digest": "sha256:29dad888f9b74b2c19f221aa6634c94dcd2144237dc039157056a77cbb0c74a4",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:29dad888f9b74b2c19f221aa6634c94dcd2144237dc039157056a77cbb0c74a4",
          "name": "artifactory-operator-29dad888f9b74b2c19f221aa6634c94dcd2144237dc039157056a77cbb0c74a4-annotation"
        },
        {
          "digest": "sha256:29dad888f9b74b2c19f221aa6634c94dcd2144237dc039157056a77cbb0c74a4",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:29dad888f9b74b2c19f221aa6634c94dcd2144237dc039157056a77cbb0c74a4",
          "name": "artifactory-ha-operator"
        },
        {
          "digest": "sha256:7289dde95d1e4d8e161a28cffd9c4a0cc96f92f7536d069ab63ec304a92254fd",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:7289dde95d1e4d8e161a28cffd9c4a0cc96f92f7536d069ab63ec304a92254fd",
          "name": "artifactory_image_repository"
        },
        {
          "digest": "sha256:d71d368d6094a5777000a8d99164959ccb97fca355e855e24bd92c13a8df04f6",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:d71d368d6094a5777000a8d99164959ccb97fca355e855e24bd92c13a8df04f6",
          "name": "nginx_image_repository"
        },
        {
          "digest": "sha256:164b41720a37f75c6129c8a28d05cc56f821022313d44ff918cce4a2146d93e8",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:164b41720a37f75c6129c8a28d05cc56f821022313d44ff918cce4a2146d93e8",
          "name": "init-164b41720a37f75c6129c8a28d05cc56f821022313d44ff918cce4a2146d93e8-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.1.20",
      "version_original": "1.1.20"
    },
    {
      "_id": "61e70984223cb93ac44fa0c7",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "OpenshiftArtifactoryHa",
          "metadata": {
            "name": "openshiftartifactoryha"
          },
          "spec": {
            "artifactory-ha": {
              "artifactory": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/artifactory-pro",
                  "tag": "7.27.9-1"
                },
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE",
                "node": {
                  "replicaCount": 2,
                  "waitForPrimaryStartup": {
                    "enabled": false
                  }
                },
                "uid": "1000721030"
              },
              "database": {
                "driver": "OVERRIDE",
                "password": "OVERRIDE",
                "type": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "databaseUpgradeReady": true,
              "initContainerImage": "registry.connect.redhat.com/jfrog/init@sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
              "nginx": {
                "gid": "1000720107",
                "http": {
                  "externalPort": 80,
                  "internalPort": 8080
                },
                "https": {
                  "externalPort": 443,
                  "internalPort": 8443
                },
                "image": {
                  "registry": "registry.redhat.io",
                  "repository": "rhel8/nginx-116",
                  "tag": "latest"
                },
                "service": {
                  "ssloffload": false
                },
                "tlsSecretName": "OVERRIDE",
                "uid": "1000720104"
              },
              "postgresql": {
                "enabled": false
              },
              "waitForDatabase": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/artifactory-operator-bundle@sha256:7f0eac75c3ad62bff844979c3f7cf1bf8553caa2c28e38c59299979a452bfb28",
      "bundle_path_digest": "sha256:7f0eac75c3ad62bff844979c3f7cf1bf8553caa2c28e38c59299979a452bfb28",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-18T18:40:04.932000+00:00",
      "csv_description": " ## Breaking change\nPlease update to version 1.1.10 of the operator.\nVersion 1.1.8 and 1.1.9 have issues. Please skip these versions.\n\n## Overview\nOpenshift Operator to deploy JFrog Artifactory Enterprise into your Openshift cluster.\n## Security Context Constraints\nTo deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc.\n```\noc adm policy add-scc-to-user anyuid -z artifactory-ha-operator -n openshift-operators\n```\nAdd the service account for the Artifactory chart to deploy successfully:\n``` oc adm policy add-scc-to-user anyuid -z openshiftartifactoryha-artifactory-ha -n artifactory ```\n### Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Artifactory Enterprise Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Artifactory Enterprise Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Artifactory HA.\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\nDATABASE_TYPE\nDATABASE_DRIVER\nDATABASE_URL\nDATABASE_USER\nDATABASE_PASSWORD\n```\nMaster key and Join key must be supplied. To generate a new key for each run the command below:\n\n```\n# Create a key\nexport JOIN_KEY=$(openssl rand -hex 32)\necho ${JOIN_KEY}\n```\n\nTo use TLS you will need to first create a k8s tls secret to store your .crt and .key file into.\nThen supply the value of this k8s secret into the TLS_SECRET field.\n``` oc create secret tls my_tls_secret --cert=tls.crt --key=tls.key --namespace=my_namespace ```\nClick Create for Artifactory Enterprise to deploy into OpenShift and connect to it on the external IP exposed by the load balancer.\n### Create a route\nTo expose Artifactory from Openshift we recommend you create a new route in Openshift.\nYou can either use the oc command line tool or the Openshift web console to generate a new route.\nDepending upon where you terminate TLS you will need to either specify pass through or edge.\nCommand Line (Edge):\n``` oc create route edge --service=openshiftartifactory-ha --cert=tls.crt --key=tls.key --ca-cert=ca.crt --hostname=www.example.com ```\nOr for more information visit the official Openshift documentation on routes here:\nhttps://docs.openshift.com/container-platform/4.6/networking/routes/route-configuration.html\n\n",
      "csv_display_name": "JFrog Artifactory Enterprise Operator",
      "csv_metadata_description": "JFrog Artifactory Enterprise deploys Artifactory in a high availability environment across multiple pods",
      "csv_name": "artifactory-ha-operator.v1.1.21",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:24:21.919000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [],
      "related_images": [
        {
          "digest": "sha256:7f06776ddcaffa1f4c3ca74b0d71f7fd11a6af5b0f2f42ade89a7f4ef4011296",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:7f06776ddcaffa1f4c3ca74b0d71f7fd11a6af5b0f2f42ade89a7f4ef4011296",
          "name": "artifactory-pro"
        },
        {
          "digest": "sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "name": "artifactory-operator"
        },
        {
          "digest": "sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "name": "nginx"
        },
        {
          "digest": "sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "name": "artifactory-operator-65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f-annotation"
        },
        {
          "digest": "sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:65fbf73f8affdafa2b4122daa2515164a6cd7e43864eda7ed7f4357465269e3f",
          "name": "artifactory-ha-operator"
        },
        {
          "digest": "sha256:7f06776ddcaffa1f4c3ca74b0d71f7fd11a6af5b0f2f42ade89a7f4ef4011296",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:7f06776ddcaffa1f4c3ca74b0d71f7fd11a6af5b0f2f42ade89a7f4ef4011296",
          "name": "artifactory_image_repository"
        },
        {
          "digest": "sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "name": "nginx_image_repository"
        },
        {
          "digest": "sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
          "name": "init-9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.1.21",
      "version_original": "1.1.21"
    },
    {
      "_id": "61e71658fe3f56de6a31386a",
      "alm_examples": [
        {
          "api_version": "headspin.com/v1alpha1",
          "kind": "HeadspinUnifiedcontroller",
          "metadata": {
            "name": "headspin-sample"
          },
          "spec": {
            "keys-map": "headspin-keys",
            "keys-map-red": "keys-red"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/headspin/headspin-operator-bundle@sha256:85b3c93ba5a9355fb05273401b04c4d3b9d37187f83e928640c147e2cab2b149",
      "bundle_path_digest": "sha256:85b3c93ba5a9355fb05273401b04c4d3b9d37187f83e928640c147e2cab2b149",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-18T19:34:48.914000+00:00",
      "csv_description": "The Headspin unifiedcontroller operator for ubi 8.4",
      "csv_display_name": "Headspin Unifiedcontroller",
      "csv_metadata_description": "",
      "csv_name": "headspinunifiedcontroller.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:53:37.029000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "headspinunifiedcontroller",
      "provided_apis": [
        {
          "group": "headspin.com",
          "kind": "HeadspinUnifiedcontroller",
          "plural": "headspinunifiedcontrollers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:40fc6a4c5c76dc3e99d557c5c590bc95294f9edd249bfa839551b22837e1511e",
          "image": "registry.connect.redhat.com/headspin/headspin-operator@sha256:40fc6a4c5c76dc3e99d557c5c590bc95294f9edd249bfa839551b22837e1511e",
          "name": "manager"
        },
        {
          "digest": "sha256:6f4aaaa8f67784d63790a65c9155b2cbbad7f8cc73034c0d7a70ce7ad638e81e",
          "image": "registry.connect.redhat.com/headspin/hspusher@sha256:6f4aaaa8f67784d63790a65c9155b2cbbad7f8cc73034c0d7a70ce7ad638e81e",
          "name": "headspin"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "61e717c2fe3f56de6a3138a3",
      "alm_examples": [
        {
          "api_version": "headspin.com/v1alpha1",
          "kind": "HeadspinUnifiedcontroller",
          "metadata": {
            "name": "headspin-sample"
          },
          "spec": {
            "keys-map": "headspin-keys",
            "keys-map-red": "keys-red"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/headspin/headspin-operator-bundle@sha256:85b3c93ba5a9355fb05273401b04c4d3b9d37187f83e928640c147e2cab2b149",
      "bundle_path_digest": "sha256:85b3c93ba5a9355fb05273401b04c4d3b9d37187f83e928640c147e2cab2b149",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-18T19:40:50.808000+00:00",
      "csv_description": "The Headspin unifiedcontroller operator for ubi 8.4",
      "csv_display_name": "Headspin Unifiedcontroller",
      "csv_metadata_description": "",
      "csv_name": "headspinunifiedcontroller.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:52:42.019000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "headspinunifiedcontroller",
      "provided_apis": [
        {
          "group": "headspin.com",
          "kind": "HeadspinUnifiedcontroller",
          "plural": "headspinunifiedcontrollers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:40fc6a4c5c76dc3e99d557c5c590bc95294f9edd249bfa839551b22837e1511e",
          "image": "registry.connect.redhat.com/headspin/headspin-operator@sha256:40fc6a4c5c76dc3e99d557c5c590bc95294f9edd249bfa839551b22837e1511e",
          "name": "manager"
        },
        {
          "digest": "sha256:6f4aaaa8f67784d63790a65c9155b2cbbad7f8cc73034c0d7a70ce7ad638e81e",
          "image": "registry.connect.redhat.com/headspin/hspusher@sha256:6f4aaaa8f67784d63790a65c9155b2cbbad7f8cc73034c0d7a70ce7ad638e81e",
          "name": "headspin"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "61e719cd4ec9945c187877c5",
      "alm_examples": [
        {
          "api_version": "headspin.com/v1alpha1",
          "kind": "HeadspinUnifiedcontroller",
          "metadata": {
            "name": "headspin-sample"
          },
          "spec": {
            "keys-map": "headspin-keys",
            "keys-map-red": "keys-red"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/headspin/headspin-operator-bundle@sha256:85b3c93ba5a9355fb05273401b04c4d3b9d37187f83e928640c147e2cab2b149",
      "bundle_path_digest": "sha256:85b3c93ba5a9355fb05273401b04c4d3b9d37187f83e928640c147e2cab2b149",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-18T19:49:33.344000+00:00",
      "csv_description": "The Headspin unifiedcontroller operator for ubi 8.4",
      "csv_display_name": "Headspin Unifiedcontroller",
      "csv_metadata_description": "",
      "csv_name": "headspinunifiedcontroller.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:42:22.015000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "headspinunifiedcontroller",
      "provided_apis": [
        {
          "group": "headspin.com",
          "kind": "HeadspinUnifiedcontroller",
          "plural": "headspinunifiedcontrollers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:40fc6a4c5c76dc3e99d557c5c590bc95294f9edd249bfa839551b22837e1511e",
          "image": "registry.connect.redhat.com/headspin/headspin-operator@sha256:40fc6a4c5c76dc3e99d557c5c590bc95294f9edd249bfa839551b22837e1511e",
          "name": "manager"
        },
        {
          "digest": "sha256:6f4aaaa8f67784d63790a65c9155b2cbbad7f8cc73034c0d7a70ce7ad638e81e",
          "image": "registry.connect.redhat.com/headspin/hspusher@sha256:6f4aaaa8f67784d63790a65c9155b2cbbad7f8cc73034c0d7a70ce7ad638e81e",
          "name": "headspin"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "61e84cf5cd79f05770030cc3",
      "alm_examples": [
        {
          "api_version": "sysdig.com/v1",
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:4f4f1bf24be82a2879596c353daf28425bdaccb2323869412fecb4eef2086d2f",
      "bundle_path_digest": "sha256:4f4f1bf24be82a2879596c353daf28425bdaccb2323869412fecb4eef2086d2f",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-19T17:40:05.327000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.12.43",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:54:38.121000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "plural": "sysdigagents",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "sysdig-operator-f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d-annotation"
        },
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.12.43",
      "version_original": "1.12.43"
    },
    {
      "_id": "61e84e963c729b08979b7854",
      "alm_examples": [
        {
          "api_version": "sysdig.com/v1",
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:4f4f1bf24be82a2879596c353daf28425bdaccb2323869412fecb4eef2086d2f",
      "bundle_path_digest": "sha256:4f4f1bf24be82a2879596c353daf28425bdaccb2323869412fecb4eef2086d2f",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-19T17:47:02.972000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.12.43",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:37:56.731000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "plural": "sysdigagents",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "sysdig-operator-f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d-annotation"
        },
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.12.43",
      "version_original": "1.12.43"
    },
    {
      "_id": "61e84f27a864921968a3da20",
      "alm_examples": [
        {
          "api_version": "sysdig.com/v1",
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:4f4f1bf24be82a2879596c353daf28425bdaccb2323869412fecb4eef2086d2f",
      "bundle_path_digest": "sha256:4f4f1bf24be82a2879596c353daf28425bdaccb2323869412fecb4eef2086d2f",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-19T17:49:27.726000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.12.43",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:58:43.619000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "sysdig-operator-f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d-annotation"
        },
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.12.43",
      "version_original": "1.12.43"
    },
    {
      "_id": "61e84fd1cd79f05770030cc4",
      "alm_examples": [
        {
          "api_version": "sysdig.com/v1",
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:4f4f1bf24be82a2879596c353daf28425bdaccb2323869412fecb4eef2086d2f",
      "bundle_path_digest": "sha256:4f4f1bf24be82a2879596c353daf28425bdaccb2323869412fecb4eef2086d2f",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-19T17:52:17.417000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.12.43",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:27:04.507000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "plural": "sysdigagents",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "sysdig-operator-f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d-annotation"
        },
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.12.43",
      "version_original": "1.12.43"
    },
    {
      "_id": "61e85277cd79f05770030cc7",
      "alm_examples": [
        {
          "api_version": "sysdig.com/v1",
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:4f4f1bf24be82a2879596c353daf28425bdaccb2323869412fecb4eef2086d2f",
      "bundle_path_digest": "sha256:4f4f1bf24be82a2879596c353daf28425bdaccb2323869412fecb4eef2086d2f",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-19T18:03:35.389000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.12.43",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:43:55.249000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "sysdig-operator-f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d-annotation"
        },
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.12.43",
      "version_original": "1.12.43"
    },
    {
      "_id": "61e887f6acbf20746c2ed70a",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-64.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9d1a896c1276852d8cad7e670924f309a7a82de2f8843f23d2a6ae42ba0a8b53",
      "bundle_path_digest": "sha256:9d1a896c1276852d8cad7e670924f309a7a82de2f8843f23d2a6ae42ba0a8b53",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-01-19T21:51:50.881000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:01:05.224000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "redis-enterprise-operator-0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37-annotation"
        },
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "admission"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.2.8-15",
      "version_original": "6.2.8-15"
    },
    {
      "_id": "61e887f8fe3f56de6a313968",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-64.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9d1a896c1276852d8cad7e670924f309a7a82de2f8843f23d2a6ae42ba0a8b53",
      "bundle_path_digest": "sha256:9d1a896c1276852d8cad7e670924f309a7a82de2f8843f23d2a6ae42ba0a8b53",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2022-01-19T21:51:52.257000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:57:56.137000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "redis-enterprise-operator-0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37-annotation"
        },
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.2.8-15",
      "version_original": "6.2.8-15"
    },
    {
      "_id": "61e88ad7223cb93ac44fa1d6",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-64.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9d1a896c1276852d8cad7e670924f309a7a82de2f8843f23d2a6ae42ba0a8b53",
      "bundle_path_digest": "sha256:9d1a896c1276852d8cad7e670924f309a7a82de2f8843f23d2a6ae42ba0a8b53",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2022-01-19T22:04:07.942000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:25:27.824000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "redis-enterprise-operator-0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37-annotation"
        },
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.2.8-15",
      "version_original": "6.2.8-15"
    },
    {
      "_id": "61e88ad9d5ed928bb413a1cd",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-64.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9d1a896c1276852d8cad7e670924f309a7a82de2f8843f23d2a6ae42ba0a8b53",
      "bundle_path_digest": "sha256:9d1a896c1276852d8cad7e670924f309a7a82de2f8843f23d2a6ae42ba0a8b53",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-01-19T22:04:09.632000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:17:43.008000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "redis-enterprise-operator-0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37-annotation"
        },
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "admission"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.2.8-15",
      "version_original": "6.2.8-15"
    },
    {
      "_id": "61e88b7ffb528ee347236f58",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-64.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9d1a896c1276852d8cad7e670924f309a7a82de2f8843f23d2a6ae42ba0a8b53",
      "bundle_path_digest": "sha256:9d1a896c1276852d8cad7e670924f309a7a82de2f8843f23d2a6ae42ba0a8b53",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2022-01-19T22:06:55.342000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:15:17.288000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "redis-enterprise-operator-0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37-annotation"
        },
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.2.8-15",
      "version_original": "6.2.8-15"
    },
    {
      "_id": "61e88b81d5ed928bb413a1ce",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-64.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9d1a896c1276852d8cad7e670924f309a7a82de2f8843f23d2a6ae42ba0a8b53",
      "bundle_path_digest": "sha256:9d1a896c1276852d8cad7e670924f309a7a82de2f8843f23d2a6ae42ba0a8b53",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-01-19T22:06:57.103000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:20:41.574000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "redis-enterprise-operator-0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37-annotation"
        },
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "admission"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.2.8-15",
      "version_original": "6.2.8-15"
    },
    {
      "_id": "61e88c734a56f73689b1124b",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-64.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9d1a896c1276852d8cad7e670924f309a7a82de2f8843f23d2a6ae42ba0a8b53",
      "bundle_path_digest": "sha256:9d1a896c1276852d8cad7e670924f309a7a82de2f8843f23d2a6ae42ba0a8b53",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-01-19T22:10:59.495000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T15:09:20.045000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "redis-enterprise-operator-0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37-annotation"
        },
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "admission"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.2.8-15",
      "version_original": "6.2.8-15"
    },
    {
      "_id": "61e88c744ec9945c1878789b",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-64.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9d1a896c1276852d8cad7e670924f309a7a82de2f8843f23d2a6ae42ba0a8b53",
      "bundle_path_digest": "sha256:9d1a896c1276852d8cad7e670924f309a7a82de2f8843f23d2a6ae42ba0a8b53",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2022-01-19T22:11:00.861000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:23:32.955000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "redis-enterprise-operator-0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37-annotation"
        },
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.2.8-15",
      "version_original": "6.2.8-15"
    },
    {
      "_id": "61e99560ed74b2ffb22ac2d9",
      "alm_examples": [
        {
          "api_version": "sysdig.com/v1",
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:72fa8220017452583ffaeba2fc0c57f9c1b218adf1aeeb4fbbd0e63c427312c6",
      "bundle_path_digest": "sha256:72fa8220017452583ffaeba2fc0c57f9c1b218adf1aeeb4fbbd0e63c427312c6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-20T17:01:20.608000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.12.44",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:54:43.052000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "plural": "sysdigagents",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "sysdig-operator-f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d-annotation"
        },
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.12.44",
      "version_original": "1.12.44"
    },
    {
      "_id": "61e9965d81c433814d21708c",
      "alm_examples": [
        {
          "api_version": "sysdig.com/v1",
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:72fa8220017452583ffaeba2fc0c57f9c1b218adf1aeeb4fbbd0e63c427312c6",
      "bundle_path_digest": "sha256:72fa8220017452583ffaeba2fc0c57f9c1b218adf1aeeb4fbbd0e63c427312c6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-20T17:05:33.635000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.12.44",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:58:47.137000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "sysdig-operator-f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d-annotation"
        },
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.12.44",
      "version_original": "1.12.44"
    },
    {
      "_id": "61e996a4384a3eb3319925af",
      "alm_examples": [
        {
          "api_version": "sysdig.com/v1",
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:72fa8220017452583ffaeba2fc0c57f9c1b218adf1aeeb4fbbd0e63c427312c6",
      "bundle_path_digest": "sha256:72fa8220017452583ffaeba2fc0c57f9c1b218adf1aeeb4fbbd0e63c427312c6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-20T17:06:44.729000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.12.44",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:50:32.653000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "plural": "sysdigagents",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "sysdig-operator-f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d-annotation"
        },
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.12.44",
      "version_original": "1.12.44"
    },
    {
      "_id": "61e99a8981c433814d2171f6",
      "alm_examples": [
        {
          "api_version": "sysdig.com/v1",
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:72fa8220017452583ffaeba2fc0c57f9c1b218adf1aeeb4fbbd0e63c427312c6",
      "bundle_path_digest": "sha256:72fa8220017452583ffaeba2fc0c57f9c1b218adf1aeeb4fbbd0e63c427312c6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-20T17:23:21.718000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.12.44",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:24:54.475000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "sysdig-operator-f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d-annotation"
        },
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.12.44",
      "version_original": "1.12.44"
    },
    {
      "_id": "61e99ac1384a3eb331992706",
      "alm_examples": [
        {
          "api_version": "sysdig.com/v1",
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:72fa8220017452583ffaeba2fc0c57f9c1b218adf1aeeb4fbbd0e63c427312c6",
      "bundle_path_digest": "sha256:72fa8220017452583ffaeba2fc0c57f9c1b218adf1aeeb4fbbd0e63c427312c6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-20T17:24:17.865000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.12.44",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:45:47.582000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "plural": "sysdigagents",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "sysdig-operator-f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d-annotation"
        },
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.12.44",
      "version_original": "1.12.44"
    },
    {
      "_id": "61ea38ea81c433814d217b0a",
      "alm_examples": [
        {
          "kind": "InfoScaleCluster",
          "metadata": {
            "name": "infoscalecluster-dev"
          },
          "spec": {
            "clusterInfo": [
              {},
              {}
            ],
            "version": "8.0.20"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-operator-bundle@sha256:0bc4ca37d6eccf674b67271f5006c57133073606a4e09445e65f590c1f635636",
      "bundle_path_digest": "sha256:0bc4ca37d6eccf674b67271f5006c57133073606a4e09445e65f590c1f635636",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-21T04:39:06.052000+00:00",
      "csv_description": "# InfoScale\u2122 SDS Operator\n\nInfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster\n\n## Overview\n\n- Veritas InfoScale\u2122 delivers Infrastructure resiliency and persistent storage for your critical containerized applications for OpenShift\u00ae and Kubernetes Native deployments\n- Engineered to support stateful workloads generated for mission-critical containerized applications.\n\n---\n\n## Data Services & Benefits\n\n**1. Software-Defined Persistent Storage Volumes:** Enables customers to support multiple container application requirements leveraging existing SAN or DAS storage\n\n**2. CSI API Driver:** Facilitates static and dynamic provisioning for applications with RWX, RWO and ROX access modes\n\n**3. Life Cycle Management:** Enables automated deployment, configuration and upgrades of InfoScale Software-defined container images. Certified and Integrated with Red Hat OpenShift for a single-click deployment\n\n**4. Availability:** Provides scaling, mounting and/or movement of InfoScale persistent storage volumes on cluster nodes with minimal disruption\n\n**5. Data Integrity:** Prevents data corruption by allowing only the active cluster nodes to write to the volume. The I/O fencing feature recovers from cluster disruptions quickly by ensuring that application pods are moved to another node to continue normal operations\n\n**6. Point-in-Time Data Copies:** Create snapshots of Persistent Volumes for backup products, data analytics or forensic discovery and analysis\n\n**7. Disaster Recovery (DR) Tech Preview:** This DR feature provides the ability to test and validate disaster recovery capabilities by migrating Kubernetes cluster metadata and application components to peer cluster in case of a local or remote disaster\n\n---\n\n## Pre-requisites\n\n- [Please refer to pre-requisite section from official documentation](https://www.veritas.com/support/en_US/doc/151215298-151215302-0)\n\n\n## InfoScale Cluster custom resource\n\n```\nkind: InfoScaleCluster\nmetadata:\n  name:  < Infoscale Cluster Name >\n\nspec:\n  version: \"8.0.20\"\n\n  clusterInfo:\n  - nodeName: <Name of the first node>\n  ip:\n  - <Optional - First IP address of the first node >\n  - <Optional - Second IP address of the first node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  - nodeName: <Name of the second node>\n  ip:\n  - <Optional - First IP address of the second node >\n  - <Optional - Second IP address of the second node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  # You can add up to 16 nodes.\n\n  licenseServer: < Optional - License server name/IP address >\n  licensePort: < Optional - License port number >\n\n  customImageRegistry: < Optional \u2013 Registry for Infoscale Container images>\n\n```\n\n#### Note\n\nYou can specify up to 16 worker nodes in CR. Although cluster configuration is allowed even with one Network Interface Card,\nVeritas recommends a minimum of two physical links for performance and High Availability (HA). Number of links for each network link must be same on all\nnodes. Optionally, you can enter node level IP addresses. If IP addresses are not provided, IP addresses of OpenShift cluster nodes are used.\n",
      "csv_display_name": "InfoScale\u2122 SDS Operator",
      "csv_metadata_description": "InfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster",
      "csv_name": "infoscale-operator.v8.0.20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T10:58:07.607000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "infoscale-operator",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "InfoScaleCluster",
          "plural": "infoscaleclusters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d",
          "name": "manager"
        },
        {
          "digest": "sha256:fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d",
          "name": "pre-manager"
        },
        {
          "digest": "sha256:fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d",
          "name": "infoscale-operator-fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.0.20",
      "version_original": "8.0.20"
    },
    {
      "_id": "61ea39bc384a3eb331992fda",
      "alm_examples": [
        {
          "kind": "InfoScaleCluster",
          "metadata": {
            "name": "infoscalecluster-dev"
          },
          "spec": {
            "clusterInfo": [
              {},
              {}
            ],
            "version": "8.0.20"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-operator-bundle@sha256:0bc4ca37d6eccf674b67271f5006c57133073606a4e09445e65f590c1f635636",
      "bundle_path_digest": "sha256:0bc4ca37d6eccf674b67271f5006c57133073606a4e09445e65f590c1f635636",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-21T04:42:36.799000+00:00",
      "csv_description": "# InfoScale\u2122 SDS Operator\n\nInfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster\n\n## Overview\n\n- Veritas InfoScale\u2122 delivers Infrastructure resiliency and persistent storage for your critical containerized applications for OpenShift\u00ae and Kubernetes Native deployments\n- Engineered to support stateful workloads generated for mission-critical containerized applications.\n\n---\n\n## Data Services & Benefits\n\n**1. Software-Defined Persistent Storage Volumes:** Enables customers to support multiple container application requirements leveraging existing SAN or DAS storage\n\n**2. CSI API Driver:** Facilitates static and dynamic provisioning for applications with RWX, RWO and ROX access modes\n\n**3. Life Cycle Management:** Enables automated deployment, configuration and upgrades of InfoScale Software-defined container images. Certified and Integrated with Red Hat OpenShift for a single-click deployment\n\n**4. Availability:** Provides scaling, mounting and/or movement of InfoScale persistent storage volumes on cluster nodes with minimal disruption\n\n**5. Data Integrity:** Prevents data corruption by allowing only the active cluster nodes to write to the volume. The I/O fencing feature recovers from cluster disruptions quickly by ensuring that application pods are moved to another node to continue normal operations\n\n**6. Point-in-Time Data Copies:** Create snapshots of Persistent Volumes for backup products, data analytics or forensic discovery and analysis\n\n**7. Disaster Recovery (DR) Tech Preview:** This DR feature provides the ability to test and validate disaster recovery capabilities by migrating Kubernetes cluster metadata and application components to peer cluster in case of a local or remote disaster\n\n---\n\n## Pre-requisites\n\n- [Please refer to pre-requisite section from official documentation](https://www.veritas.com/support/en_US/doc/151215298-151215302-0)\n\n\n## InfoScale Cluster custom resource\n\n```\nkind: InfoScaleCluster\nmetadata:\n  name:  < Infoscale Cluster Name >\n\nspec:\n  version: \"8.0.20\"\n\n  clusterInfo:\n  - nodeName: <Name of the first node>\n  ip:\n  - <Optional - First IP address of the first node >\n  - <Optional - Second IP address of the first node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  - nodeName: <Name of the second node>\n  ip:\n  - <Optional - First IP address of the second node >\n  - <Optional - Second IP address of the second node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  # You can add up to 16 nodes.\n\n  licenseServer: < Optional - License server name/IP address >\n  licensePort: < Optional - License port number >\n\n  customImageRegistry: < Optional \u2013 Registry for Infoscale Container images>\n\n```\n\n#### Note\n\nYou can specify up to 16 worker nodes in CR. Although cluster configuration is allowed even with one Network Interface Card,\nVeritas recommends a minimum of two physical links for performance and High Availability (HA). Number of links for each network link must be same on all\nnodes. Optionally, you can enter node level IP addresses. If IP addresses are not provided, IP addresses of OpenShift cluster nodes are used.\n",
      "csv_display_name": "InfoScale\u2122 SDS Operator",
      "csv_metadata_description": "InfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster",
      "csv_name": "infoscale-operator.v8.0.20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:17:21.338000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "infoscale-operator",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "InfoScaleCluster",
          "plural": "infoscaleclusters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d",
          "name": "manager"
        },
        {
          "digest": "sha256:fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d",
          "name": "pre-manager"
        },
        {
          "digest": "sha256:fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d",
          "name": "infoscale-operator-fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d-annotation"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.0.20",
      "version_original": "8.0.20"
    },
    {
      "_id": "61ea62f5ed74b2ffb22acd1c",
      "alm_examples": [
        {
          "api_version": "xcrypt.zettaset.com/v1alpha1",
          "kind": "XCrypt",
          "metadata": {
            "name": "zts-masterset"
          },
          "spec": {
            "status": {
              "podNames": "zts-ca",
              "replicas": "1,"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zts/xcrypt-operator-1-bundle@sha256:d437cee5092b604054ce4b09341fa0287e7fe75bcb3ea0486e4067ac45459478",
      "bundle_path_digest": "sha256:d437cee5092b604054ce4b09341fa0287e7fe75bcb3ea0486e4067ac45459478",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-21T07:38:29.120000+00:00",
      "csv_description": "Zettaset\u2019s RedHat Certified XCrypt Operator allows users to deploy multiple XCrypt components on OpenShift with just a few simple commands. The XCrypt Operator deployment provides software-defined encryption that transparently protects container data throughout your OpenShift environment.\n\n## Core Features\n* **Automated XCrypt provisioning** - Deploying a Zettaset XCrypt has never been easier. Adjust cluster specific configuration and let the Zettaset Operator take care of provisioning XCrypt services and setting up the XCrypt encryption to your exact specification.\n* **CSI Driver deployment**: Zettaset XCrypt Operator automatically deploys Zettaset XCrypt CSI Driver in order to provide automated and transparent data-at-rest  encryption functionality compatible with Openshift and any other container orchestrator. Once the Operator is provisioned, the driver runs fine tuned and ready to work with other XCrypt components.\n* **Multi-node topology**: Encrypt as many nodes and volumes as you need to. XCrypt components can be installed on multiple nodes across the cluster. This is defined by two labels: zts-master and zts-worker. Normally zts-master node is a single node that runs Zettaset XCrypt major services required for the product operation. Multiple nodes can be marked as zts-worker and those are the nodes that can have encrypted volumes.\n* **Seamless Encrypted Volume mount**: Volumes are not only being encrypted, but also are mounted/unmounted to containers with Persistent Volume Claims. This happens as seamlessly as regular volumes provision and mount/unmount.\n* **Robust failover**: A node failure doesn\u2019t affect XCrypt operations on other nodes of the cluster. Encryption on a restarted/recovered node gets back to normal functioning if the node stays healthy and data hasn\u2019t been corrupted during the restart\n\n## About Zettaset XCrypt Kubernetes Encryption for OpenShift\nXCrypt Kubernetes Encryption for OpenShift is a software-only solution that enables encryption of data at rest stored in Red Hat OpenShift container environments without slowing down the DevSecOps process. In addition to providing a transparent and high-performance layer of security that flexibly protects container data across on-premise, in hybrid, and multi-cloud environments, it also helps your organization efficiently transition from DevOps to DevSecOps.\n\nMore information about Zettaset XCrypt Kubernetes Encryption for OpenShift can be found in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)\n\n## RedHat OpenShift + Zettaset: The next generation of secure enterprise infrastructure for DevSecOps\nBy combining RedHat\u2019s Container Platform with Zettaset\u2019s certified software-defined encryption, you can create the next generation of secure enterprise infrastructure that DevSecOps requires. Together they create the stable, consistent, and supported base that your organization needs to develop applications faster, simplify updates, drive innovation, and reduce the risk of potential security breaches and data theft.\n### Core Features\n* Software-only for simple and scalable deployments\n* Negligible performance impact\n* Transparent to developers and administrators\n* Works with AWS, Google, and Azure\n* Unique encryption key per container volume\n* Encrypted volumes are only available when in use\n* Direct integration with OpenShift\n* Automated encryption policy management Secure erase of volumes\n* Ability to securely decommission a node\n\n## How does XCrypt Kubernetes Encryption fit into OpenShift?\nXCrypt XCrypt Kubernetes Encryption for OpenShift Encryption makes it incredibly easy to protect container data in your OpenShift environment.\n### Use cases include:\n* Transitioning from DevOps to DevSecOps\n* Ensuring data protection in OpenShift container environments with negligible performance impact\n* Achieving compliance in regulated industries like healthcare and finance\n\nRole-based access control needs to be configured prior to the Operator installation. Please find details in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)\n## Other Information",
      "csv_display_name": "Zettaset XCrypt Operator",
      "csv_metadata_description": "XCrypt Operator deploys Zettaset XCrypt Container Encryption  - the only software-defined solution that offers transparent high performance data-at-rest encryption of critical data in container environments.",
      "csv_name": "zts-xcrypt-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:00:31.173000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "xcrypt-operator",
      "provided_apis": [
        {
          "group": "xcrypt.zettaset.com",
          "kind": "XCrypt",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "image": "registry.connect.redhat.com/zts/xcrypt-host-manager-1@sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "name": "host-manager"
        },
        {
          "digest": "sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "image": "registry.connect.redhat.com/zts/xcrypt-ca-1@sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "name": "certificate-authority"
        },
        {
          "digest": "sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "image": "registry.connect.redhat.com/zts/xcrypt-kmip-server-1@sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "name": "kmip"
        },
        {
          "digest": "sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "image": "registry.connect.redhat.com/zts/xcrypt-license-server-1@sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "name": "license-server"
        },
        {
          "digest": "sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "image": "registry.connect.redhat.com/zts/zts-csi-driver-1@sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "name": "csi-driver"
        },
        {
          "digest": "sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "name": "xcrypt-operator"
        },
        {
          "digest": "sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "name": "xcrypt-operator-1-592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f-annotation"
        },
        {
          "digest": "sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "name": "zts-xcrypt-operator"
        },
        {
          "digest": "sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "image": "registry.connect.redhat.com/zts/xcrypt-ca-1@sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "name": "ca"
        },
        {
          "digest": "sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "image": "registry.connect.redhat.com/zts/xcrypt-license-server-1@sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "name": "ls"
        },
        {
          "digest": "sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "image": "registry.connect.redhat.com/zts/xcrypt-host-manager-1@sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "name": "hm"
        },
        {
          "digest": "sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "image": "registry.connect.redhat.com/zts/zts-csi-driver-1@sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "name": "csi_driver"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "61ea63e5384a3eb331992fe9",
      "alm_examples": [
        {
          "api_version": "xcrypt.zettaset.com/v1alpha1",
          "kind": "XCrypt",
          "metadata": {
            "name": "zts-masterset"
          },
          "spec": {
            "status": {
              "podNames": "zts-ca",
              "replicas": "1,"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zts/xcrypt-operator-1-bundle@sha256:d437cee5092b604054ce4b09341fa0287e7fe75bcb3ea0486e4067ac45459478",
      "bundle_path_digest": "sha256:d437cee5092b604054ce4b09341fa0287e7fe75bcb3ea0486e4067ac45459478",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-21T07:42:29.309000+00:00",
      "csv_description": "Zettaset\u2019s RedHat Certified XCrypt Operator allows users to deploy multiple XCrypt components on OpenShift with just a few simple commands. The XCrypt Operator deployment provides software-defined encryption that transparently protects container data throughout your OpenShift environment.\n\n## Core Features\n* **Automated XCrypt provisioning** - Deploying a Zettaset XCrypt has never been easier. Adjust cluster specific configuration and let the Zettaset Operator take care of provisioning XCrypt services and setting up the XCrypt encryption to your exact specification.\n* **CSI Driver deployment**: Zettaset XCrypt Operator automatically deploys Zettaset XCrypt CSI Driver in order to provide automated and transparent data-at-rest  encryption functionality compatible with Openshift and any other container orchestrator. Once the Operator is provisioned, the driver runs fine tuned and ready to work with other XCrypt components.\n* **Multi-node topology**: Encrypt as many nodes and volumes as you need to. XCrypt components can be installed on multiple nodes across the cluster. This is defined by two labels: zts-master and zts-worker. Normally zts-master node is a single node that runs Zettaset XCrypt major services required for the product operation. Multiple nodes can be marked as zts-worker and those are the nodes that can have encrypted volumes.\n* **Seamless Encrypted Volume mount**: Volumes are not only being encrypted, but also are mounted/unmounted to containers with Persistent Volume Claims. This happens as seamlessly as regular volumes provision and mount/unmount.\n* **Robust failover**: A node failure doesn\u2019t affect XCrypt operations on other nodes of the cluster. Encryption on a restarted/recovered node gets back to normal functioning if the node stays healthy and data hasn\u2019t been corrupted during the restart\n\n## About Zettaset XCrypt Kubernetes Encryption for OpenShift\nXCrypt Kubernetes Encryption for OpenShift is a software-only solution that enables encryption of data at rest stored in Red Hat OpenShift container environments without slowing down the DevSecOps process. In addition to providing a transparent and high-performance layer of security that flexibly protects container data across on-premise, in hybrid, and multi-cloud environments, it also helps your organization efficiently transition from DevOps to DevSecOps.\n\nMore information about Zettaset XCrypt Kubernetes Encryption for OpenShift can be found in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)\n\n## RedHat OpenShift + Zettaset: The next generation of secure enterprise infrastructure for DevSecOps\nBy combining RedHat\u2019s Container Platform with Zettaset\u2019s certified software-defined encryption, you can create the next generation of secure enterprise infrastructure that DevSecOps requires. Together they create the stable, consistent, and supported base that your organization needs to develop applications faster, simplify updates, drive innovation, and reduce the risk of potential security breaches and data theft.\n### Core Features\n* Software-only for simple and scalable deployments\n* Negligible performance impact\n* Transparent to developers and administrators\n* Works with AWS, Google, and Azure\n* Unique encryption key per container volume\n* Encrypted volumes are only available when in use\n* Direct integration with OpenShift\n* Automated encryption policy management Secure erase of volumes\n* Ability to securely decommission a node\n\n## How does XCrypt Kubernetes Encryption fit into OpenShift?\nXCrypt XCrypt Kubernetes Encryption for OpenShift Encryption makes it incredibly easy to protect container data in your OpenShift environment.\n### Use cases include:\n* Transitioning from DevOps to DevSecOps\n* Ensuring data protection in OpenShift container environments with negligible performance impact\n* Achieving compliance in regulated industries like healthcare and finance\n\nRole-based access control needs to be configured prior to the Operator installation. Please find details in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)\n## Other Information",
      "csv_display_name": "Zettaset XCrypt Operator",
      "csv_metadata_description": "XCrypt Operator deploys Zettaset XCrypt Container Encryption  - the only software-defined solution that offers transparent high performance data-at-rest encryption of critical data in container environments.",
      "csv_name": "zts-xcrypt-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:06:34.025000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "xcrypt-operator",
      "provided_apis": [
        {
          "group": "xcrypt.zettaset.com",
          "kind": "XCrypt",
          "plural": "xcrypts",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "image": "registry.connect.redhat.com/zts/xcrypt-host-manager-1@sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "name": "host-manager"
        },
        {
          "digest": "sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "image": "registry.connect.redhat.com/zts/xcrypt-ca-1@sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "name": "certificate-authority"
        },
        {
          "digest": "sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "image": "registry.connect.redhat.com/zts/xcrypt-kmip-server-1@sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "name": "kmip"
        },
        {
          "digest": "sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "image": "registry.connect.redhat.com/zts/xcrypt-license-server-1@sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "name": "license-server"
        },
        {
          "digest": "sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "image": "registry.connect.redhat.com/zts/zts-csi-driver-1@sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "name": "csi-driver"
        },
        {
          "digest": "sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "name": "xcrypt-operator"
        },
        {
          "digest": "sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "name": "xcrypt-operator-1-592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f-annotation"
        },
        {
          "digest": "sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "name": "zts-xcrypt-operator"
        },
        {
          "digest": "sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "image": "registry.connect.redhat.com/zts/xcrypt-ca-1@sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "name": "ca"
        },
        {
          "digest": "sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "image": "registry.connect.redhat.com/zts/xcrypt-license-server-1@sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "name": "ls"
        },
        {
          "digest": "sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "image": "registry.connect.redhat.com/zts/xcrypt-host-manager-1@sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "name": "hm"
        },
        {
          "digest": "sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "image": "registry.connect.redhat.com/zts/zts-csi-driver-1@sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "name": "csi_driver"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "61ea643933f211c454076df8",
      "alm_examples": [
        {
          "api_version": "xcrypt.zettaset.com/v1alpha1",
          "kind": "XCrypt",
          "metadata": {
            "name": "zts-masterset"
          },
          "spec": {
            "status": {
              "podNames": "zts-ca",
              "replicas": "1,"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zts/xcrypt-operator-1-bundle@sha256:d437cee5092b604054ce4b09341fa0287e7fe75bcb3ea0486e4067ac45459478",
      "bundle_path_digest": "sha256:d437cee5092b604054ce4b09341fa0287e7fe75bcb3ea0486e4067ac45459478",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-21T07:43:53.321000+00:00",
      "csv_description": "Zettaset\u2019s RedHat Certified XCrypt Operator allows users to deploy multiple XCrypt components on OpenShift with just a few simple commands. The XCrypt Operator deployment provides software-defined encryption that transparently protects container data throughout your OpenShift environment.\n\n## Core Features\n* **Automated XCrypt provisioning** - Deploying a Zettaset XCrypt has never been easier. Adjust cluster specific configuration and let the Zettaset Operator take care of provisioning XCrypt services and setting up the XCrypt encryption to your exact specification.\n* **CSI Driver deployment**: Zettaset XCrypt Operator automatically deploys Zettaset XCrypt CSI Driver in order to provide automated and transparent data-at-rest  encryption functionality compatible with Openshift and any other container orchestrator. Once the Operator is provisioned, the driver runs fine tuned and ready to work with other XCrypt components.\n* **Multi-node topology**: Encrypt as many nodes and volumes as you need to. XCrypt components can be installed on multiple nodes across the cluster. This is defined by two labels: zts-master and zts-worker. Normally zts-master node is a single node that runs Zettaset XCrypt major services required for the product operation. Multiple nodes can be marked as zts-worker and those are the nodes that can have encrypted volumes.\n* **Seamless Encrypted Volume mount**: Volumes are not only being encrypted, but also are mounted/unmounted to containers with Persistent Volume Claims. This happens as seamlessly as regular volumes provision and mount/unmount.\n* **Robust failover**: A node failure doesn\u2019t affect XCrypt operations on other nodes of the cluster. Encryption on a restarted/recovered node gets back to normal functioning if the node stays healthy and data hasn\u2019t been corrupted during the restart\n\n## About Zettaset XCrypt Kubernetes Encryption for OpenShift\nXCrypt Kubernetes Encryption for OpenShift is a software-only solution that enables encryption of data at rest stored in Red Hat OpenShift container environments without slowing down the DevSecOps process. In addition to providing a transparent and high-performance layer of security that flexibly protects container data across on-premise, in hybrid, and multi-cloud environments, it also helps your organization efficiently transition from DevOps to DevSecOps.\n\nMore information about Zettaset XCrypt Kubernetes Encryption for OpenShift can be found in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)\n\n## RedHat OpenShift + Zettaset: The next generation of secure enterprise infrastructure for DevSecOps\nBy combining RedHat\u2019s Container Platform with Zettaset\u2019s certified software-defined encryption, you can create the next generation of secure enterprise infrastructure that DevSecOps requires. Together they create the stable, consistent, and supported base that your organization needs to develop applications faster, simplify updates, drive innovation, and reduce the risk of potential security breaches and data theft.\n### Core Features\n* Software-only for simple and scalable deployments\n* Negligible performance impact\n* Transparent to developers and administrators\n* Works with AWS, Google, and Azure\n* Unique encryption key per container volume\n* Encrypted volumes are only available when in use\n* Direct integration with OpenShift\n* Automated encryption policy management Secure erase of volumes\n* Ability to securely decommission a node\n\n## How does XCrypt Kubernetes Encryption fit into OpenShift?\nXCrypt XCrypt Kubernetes Encryption for OpenShift Encryption makes it incredibly easy to protect container data in your OpenShift environment.\n### Use cases include:\n* Transitioning from DevOps to DevSecOps\n* Ensuring data protection in OpenShift container environments with negligible performance impact\n* Achieving compliance in regulated industries like healthcare and finance\n\nRole-based access control needs to be configured prior to the Operator installation. Please find details in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)\n## Other Information",
      "csv_display_name": "Zettaset XCrypt Operator",
      "csv_metadata_description": "XCrypt Operator deploys Zettaset XCrypt Container Encryption  - the only software-defined solution that offers transparent high performance data-at-rest encryption of critical data in container environments.",
      "csv_name": "zts-xcrypt-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:43:02.421000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "xcrypt-operator",
      "provided_apis": [
        {
          "group": "xcrypt.zettaset.com",
          "kind": "XCrypt",
          "plural": "xcrypts",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "image": "registry.connect.redhat.com/zts/xcrypt-host-manager-1@sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "name": "host-manager"
        },
        {
          "digest": "sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "image": "registry.connect.redhat.com/zts/xcrypt-ca-1@sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "name": "certificate-authority"
        },
        {
          "digest": "sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "image": "registry.connect.redhat.com/zts/xcrypt-kmip-server-1@sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "name": "kmip"
        },
        {
          "digest": "sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "image": "registry.connect.redhat.com/zts/xcrypt-license-server-1@sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "name": "license-server"
        },
        {
          "digest": "sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "image": "registry.connect.redhat.com/zts/zts-csi-driver-1@sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "name": "csi-driver"
        },
        {
          "digest": "sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "name": "xcrypt-operator"
        },
        {
          "digest": "sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "name": "xcrypt-operator-1-592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f-annotation"
        },
        {
          "digest": "sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "name": "zts-xcrypt-operator"
        },
        {
          "digest": "sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "image": "registry.connect.redhat.com/zts/xcrypt-ca-1@sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "name": "ca"
        },
        {
          "digest": "sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "image": "registry.connect.redhat.com/zts/xcrypt-license-server-1@sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "name": "ls"
        },
        {
          "digest": "sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "image": "registry.connect.redhat.com/zts/xcrypt-host-manager-1@sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "name": "hm"
        },
        {
          "digest": "sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "image": "registry.connect.redhat.com/zts/zts-csi-driver-1@sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "name": "csi_driver"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "61ea64e2384a3eb331992fea",
      "alm_examples": [
        {
          "api_version": "xcrypt.zettaset.com/v1alpha1",
          "kind": "XCrypt",
          "metadata": {
            "name": "zts-masterset"
          },
          "spec": {
            "status": {
              "podNames": "zts-ca",
              "replicas": "1,"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zts/xcrypt-operator-1-bundle@sha256:d437cee5092b604054ce4b09341fa0287e7fe75bcb3ea0486e4067ac45459478",
      "bundle_path_digest": "sha256:d437cee5092b604054ce4b09341fa0287e7fe75bcb3ea0486e4067ac45459478",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-21T07:46:42.818000+00:00",
      "csv_description": "Zettaset\u2019s RedHat Certified XCrypt Operator allows users to deploy multiple XCrypt components on OpenShift with just a few simple commands. The XCrypt Operator deployment provides software-defined encryption that transparently protects container data throughout your OpenShift environment.\n\n## Core Features\n* **Automated XCrypt provisioning** - Deploying a Zettaset XCrypt has never been easier. Adjust cluster specific configuration and let the Zettaset Operator take care of provisioning XCrypt services and setting up the XCrypt encryption to your exact specification.\n* **CSI Driver deployment**: Zettaset XCrypt Operator automatically deploys Zettaset XCrypt CSI Driver in order to provide automated and transparent data-at-rest  encryption functionality compatible with Openshift and any other container orchestrator. Once the Operator is provisioned, the driver runs fine tuned and ready to work with other XCrypt components.\n* **Multi-node topology**: Encrypt as many nodes and volumes as you need to. XCrypt components can be installed on multiple nodes across the cluster. This is defined by two labels: zts-master and zts-worker. Normally zts-master node is a single node that runs Zettaset XCrypt major services required for the product operation. Multiple nodes can be marked as zts-worker and those are the nodes that can have encrypted volumes.\n* **Seamless Encrypted Volume mount**: Volumes are not only being encrypted, but also are mounted/unmounted to containers with Persistent Volume Claims. This happens as seamlessly as regular volumes provision and mount/unmount.\n* **Robust failover**: A node failure doesn\u2019t affect XCrypt operations on other nodes of the cluster. Encryption on a restarted/recovered node gets back to normal functioning if the node stays healthy and data hasn\u2019t been corrupted during the restart\n\n## About Zettaset XCrypt Kubernetes Encryption for OpenShift\nXCrypt Kubernetes Encryption for OpenShift is a software-only solution that enables encryption of data at rest stored in Red Hat OpenShift container environments without slowing down the DevSecOps process. In addition to providing a transparent and high-performance layer of security that flexibly protects container data across on-premise, in hybrid, and multi-cloud environments, it also helps your organization efficiently transition from DevOps to DevSecOps.\n\nMore information about Zettaset XCrypt Kubernetes Encryption for OpenShift can be found in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)\n\n## RedHat OpenShift + Zettaset: The next generation of secure enterprise infrastructure for DevSecOps\nBy combining RedHat\u2019s Container Platform with Zettaset\u2019s certified software-defined encryption, you can create the next generation of secure enterprise infrastructure that DevSecOps requires. Together they create the stable, consistent, and supported base that your organization needs to develop applications faster, simplify updates, drive innovation, and reduce the risk of potential security breaches and data theft.\n### Core Features\n* Software-only for simple and scalable deployments\n* Negligible performance impact\n* Transparent to developers and administrators\n* Works with AWS, Google, and Azure\n* Unique encryption key per container volume\n* Encrypted volumes are only available when in use\n* Direct integration with OpenShift\n* Automated encryption policy management Secure erase of volumes\n* Ability to securely decommission a node\n\n## How does XCrypt Kubernetes Encryption fit into OpenShift?\nXCrypt XCrypt Kubernetes Encryption for OpenShift Encryption makes it incredibly easy to protect container data in your OpenShift environment.\n### Use cases include:\n* Transitioning from DevOps to DevSecOps\n* Ensuring data protection in OpenShift container environments with negligible performance impact\n* Achieving compliance in regulated industries like healthcare and finance\n\nRole-based access control needs to be configured prior to the Operator installation. Please find details in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)\n## Other Information",
      "csv_display_name": "Zettaset XCrypt Operator",
      "csv_metadata_description": "XCrypt Operator deploys Zettaset XCrypt Container Encryption  - the only software-defined solution that offers transparent high performance data-at-rest encryption of critical data in container environments.",
      "csv_name": "zts-xcrypt-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:22:01.077000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "xcrypt-operator",
      "provided_apis": [
        {
          "group": "xcrypt.zettaset.com",
          "kind": "XCrypt",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "image": "registry.connect.redhat.com/zts/xcrypt-host-manager-1@sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "name": "host-manager"
        },
        {
          "digest": "sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "image": "registry.connect.redhat.com/zts/xcrypt-ca-1@sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "name": "certificate-authority"
        },
        {
          "digest": "sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "image": "registry.connect.redhat.com/zts/xcrypt-kmip-server-1@sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "name": "kmip"
        },
        {
          "digest": "sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "image": "registry.connect.redhat.com/zts/xcrypt-license-server-1@sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "name": "license-server"
        },
        {
          "digest": "sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "image": "registry.connect.redhat.com/zts/zts-csi-driver-1@sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "name": "csi-driver"
        },
        {
          "digest": "sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "name": "xcrypt-operator"
        },
        {
          "digest": "sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "name": "xcrypt-operator-1-592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f-annotation"
        },
        {
          "digest": "sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "name": "zts-xcrypt-operator"
        },
        {
          "digest": "sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "image": "registry.connect.redhat.com/zts/xcrypt-ca-1@sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "name": "ca"
        },
        {
          "digest": "sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "image": "registry.connect.redhat.com/zts/xcrypt-license-server-1@sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "name": "ls"
        },
        {
          "digest": "sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "image": "registry.connect.redhat.com/zts/xcrypt-host-manager-1@sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "name": "hm"
        },
        {
          "digest": "sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "image": "registry.connect.redhat.com/zts/zts-csi-driver-1@sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "name": "csi_driver"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "61ea6cbc81c433814d217b57",
      "alm_examples": [
        {
          "api_version": "fic.f5.com/v1",
          "kind": "F5IpamCtlr",
          "metadata": {
            "name": "f5ipamctlr-sample"
          },
          "spec": {
            "args": {
              "infoblox_grid_host": "<IP Address of Server>",
              "infoblox_labels": "<CIDR Labels>",
              "infoblox_netview": "<NetView>",
              "infoblox_password": "<PASSWORD>",
              "infoblox_username": "<USERNAME>",
              "infoblox_wapi_version": "<VERSION>",
              "ip_range": "<IP RANGE LABELS>",
              "orchestration": "kubernetes",
              "provider": "infoblox"
            },
            "image": {
              "pullPolicy": "Always",
              "repo": "f5-ipam-controller",
              "user": "f5networks",
              "version": "0.1.5"
            },
            "namespace": "kube-system",
            "rbac": {
              "create": true
            },
            "serviceAccount": {
              "create": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/f5networks/f5-ipam-controller-operator-bundle@sha256:1ae77a9ea0781721f93f9485e783caf69722cbb9a6ccc5470b91a740352ff906",
      "bundle_path_digest": "sha256:1ae77a9ea0781721f93f9485e783caf69722cbb9a6ccc5470b91a740352ff906",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-21T08:20:12.631000+00:00",
      "csv_description": "## Introduction\nThis Operator installs F5 IPAM Controller in your OpenShift Cluster. This enables to configure and deploy FIC using Helm Charts.\n## F5 IPAM Controller\nThe F5 IPAM Controller is a Docker container that runs in an orchestration environment and interfaces with an IPAM system. It allocates IP addresses from an IPAM system\u2019s address pool for hostnames in an orchestration environment. The F5 IPAM Controller watches orchestration-specific resources and consumes the hostnames within each resource.\n## Documentation\nRefer to F5 IPAM Controller documentation\n- https://github.com/F5Networks/f5-ipam-controller/blob/main/README.md\n## Prerequisites\n### Configure Infoblox with network and netview [Provider: Infoblox]\nRefer Infoblox documentation\n### Create persistent volume and persistent volume claim [Provider: f5-ip-provider]\nCreate persistent volume and persistent volume claim\n```\noc apply -f https://raw.githubusercontent.com/F5Networks/f5-ipam-controller/main/docs/config_examples/f5-ip-provider/localstorage-pv-pvc-example.yaml\n```\n",
      "csv_display_name": "F5 Ipam controller",
      "csv_metadata_description": "Operator to install F5 IPAM Controller.",
      "csv_name": "f5-ipam-controller-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:53:03.591000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "f5-ipam-controller-operator",
      "provided_apis": [
        {
          "group": "fic.f5.com",
          "kind": "F5IpamCtlr",
          "plural": "f5ipamctlrs",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:65eb080a6610d3422fb5f36aba312c403b1971371e8cfba79187f7008f7d7902",
          "image": "registry.connect.redhat.com/f5networks/f5-ipam-controller-operator@sha256:65eb080a6610d3422fb5f36aba312c403b1971371e8cfba79187f7008f7d7902",
          "name": "f5-ipam-controller-operator-65eb080a6610d3422fb5f36aba312c403b1971371e8cfba79187f7008f7d7902-annotation"
        },
        {
          "digest": "sha256:076093ea58ca42a77839d911193977a7985728607187f31d3652ce189d79900d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:076093ea58ca42a77839d911193977a7985728607187f31d3652ce189d79900d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:65eb080a6610d3422fb5f36aba312c403b1971371e8cfba79187f7008f7d7902",
          "image": "registry.connect.redhat.com/f5networks/f5-ipam-controller-operator@sha256:65eb080a6610d3422fb5f36aba312c403b1971371e8cfba79187f7008f7d7902",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "61ea6e4e81c433814d217c35",
      "alm_examples": [
        {
          "api_version": "fic.f5.com/v1",
          "kind": "F5IpamCtlr",
          "metadata": {
            "name": "f5ipamctlr-sample"
          },
          "spec": {
            "args": {
              "infoblox_grid_host": "<IP Address of Server>",
              "infoblox_labels": "<CIDR Labels>",
              "infoblox_netview": "<NetView>",
              "infoblox_password": "<PASSWORD>",
              "infoblox_username": "<USERNAME>",
              "infoblox_wapi_version": "<VERSION>",
              "ip_range": "<IP RANGE LABELS>",
              "orchestration": "kubernetes",
              "provider": "infoblox"
            },
            "image": {
              "pullPolicy": "Always",
              "repo": "f5-ipam-controller",
              "user": "f5networks",
              "version": "0.1.5"
            },
            "namespace": "kube-system",
            "rbac": {
              "create": true
            },
            "serviceAccount": {
              "create": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/f5networks/f5-ipam-controller-operator-bundle@sha256:1ae77a9ea0781721f93f9485e783caf69722cbb9a6ccc5470b91a740352ff906",
      "bundle_path_digest": "sha256:1ae77a9ea0781721f93f9485e783caf69722cbb9a6ccc5470b91a740352ff906",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-21T08:26:54.920000+00:00",
      "csv_description": "## Introduction\nThis Operator installs F5 IPAM Controller in your OpenShift Cluster. This enables to configure and deploy FIC using Helm Charts.\n## F5 IPAM Controller\nThe F5 IPAM Controller is a Docker container that runs in an orchestration environment and interfaces with an IPAM system. It allocates IP addresses from an IPAM system\u2019s address pool for hostnames in an orchestration environment. The F5 IPAM Controller watches orchestration-specific resources and consumes the hostnames within each resource.\n## Documentation\nRefer to F5 IPAM Controller documentation\n- https://github.com/F5Networks/f5-ipam-controller/blob/main/README.md\n## Prerequisites\n### Configure Infoblox with network and netview [Provider: Infoblox]\nRefer Infoblox documentation\n### Create persistent volume and persistent volume claim [Provider: f5-ip-provider]\nCreate persistent volume and persistent volume claim\n```\noc apply -f https://raw.githubusercontent.com/F5Networks/f5-ipam-controller/main/docs/config_examples/f5-ip-provider/localstorage-pv-pvc-example.yaml\n```\n",
      "csv_display_name": "F5 Ipam controller",
      "csv_metadata_description": "Operator to install F5 IPAM Controller.",
      "csv_name": "f5-ipam-controller-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:17:19.365000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "f5-ipam-controller-operator",
      "provided_apis": [
        {
          "group": "fic.f5.com",
          "kind": "F5IpamCtlr",
          "plural": "f5ipamctlrs",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:65eb080a6610d3422fb5f36aba312c403b1971371e8cfba79187f7008f7d7902",
          "image": "registry.connect.redhat.com/f5networks/f5-ipam-controller-operator@sha256:65eb080a6610d3422fb5f36aba312c403b1971371e8cfba79187f7008f7d7902",
          "name": "f5-ipam-controller-operator-65eb080a6610d3422fb5f36aba312c403b1971371e8cfba79187f7008f7d7902-annotation"
        },
        {
          "digest": "sha256:076093ea58ca42a77839d911193977a7985728607187f31d3652ce189d79900d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:076093ea58ca42a77839d911193977a7985728607187f31d3652ce189d79900d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:65eb080a6610d3422fb5f36aba312c403b1971371e8cfba79187f7008f7d7902",
          "image": "registry.connect.redhat.com/f5networks/f5-ipam-controller-operator@sha256:65eb080a6610d3422fb5f36aba312c403b1971371e8cfba79187f7008f7d7902",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "61ea6e8fed74b2ffb22ace57",
      "alm_examples": [
        {
          "api_version": "fic.f5.com/v1",
          "kind": "F5IpamCtlr",
          "metadata": {
            "name": "f5ipamctlr-sample"
          },
          "spec": {
            "args": {
              "infoblox_grid_host": "<IP Address of Server>",
              "infoblox_labels": "<CIDR Labels>",
              "infoblox_netview": "<NetView>",
              "infoblox_password": "<PASSWORD>",
              "infoblox_username": "<USERNAME>",
              "infoblox_wapi_version": "<VERSION>",
              "ip_range": "<IP RANGE LABELS>",
              "orchestration": "kubernetes",
              "provider": "infoblox"
            },
            "image": {
              "pullPolicy": "Always",
              "repo": "f5-ipam-controller",
              "user": "f5networks",
              "version": "0.1.5"
            },
            "namespace": "kube-system",
            "rbac": {
              "create": true
            },
            "serviceAccount": {
              "create": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/f5networks/f5-ipam-controller-operator-bundle@sha256:1ae77a9ea0781721f93f9485e783caf69722cbb9a6ccc5470b91a740352ff906",
      "bundle_path_digest": "sha256:1ae77a9ea0781721f93f9485e783caf69722cbb9a6ccc5470b91a740352ff906",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-21T08:27:59.312000+00:00",
      "csv_description": "## Introduction\nThis Operator installs F5 IPAM Controller in your OpenShift Cluster. This enables to configure and deploy FIC using Helm Charts.\n## F5 IPAM Controller\nThe F5 IPAM Controller is a Docker container that runs in an orchestration environment and interfaces with an IPAM system. It allocates IP addresses from an IPAM system\u2019s address pool for hostnames in an orchestration environment. The F5 IPAM Controller watches orchestration-specific resources and consumes the hostnames within each resource.\n## Documentation\nRefer to F5 IPAM Controller documentation\n- https://github.com/F5Networks/f5-ipam-controller/blob/main/README.md\n## Prerequisites\n### Configure Infoblox with network and netview [Provider: Infoblox]\nRefer Infoblox documentation\n### Create persistent volume and persistent volume claim [Provider: f5-ip-provider]\nCreate persistent volume and persistent volume claim\n```\noc apply -f https://raw.githubusercontent.com/F5Networks/f5-ipam-controller/main/docs/config_examples/f5-ip-provider/localstorage-pv-pvc-example.yaml\n```\n",
      "csv_display_name": "F5 Ipam controller",
      "csv_metadata_description": "Operator to install F5 IPAM Controller.",
      "csv_name": "f5-ipam-controller-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:12:57.960000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "f5-ipam-controller-operator",
      "provided_apis": [
        {
          "group": "fic.f5.com",
          "kind": "F5IpamCtlr",
          "plural": "f5ipamctlrs",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:65eb080a6610d3422fb5f36aba312c403b1971371e8cfba79187f7008f7d7902",
          "image": "registry.connect.redhat.com/f5networks/f5-ipam-controller-operator@sha256:65eb080a6610d3422fb5f36aba312c403b1971371e8cfba79187f7008f7d7902",
          "name": "f5-ipam-controller-operator-65eb080a6610d3422fb5f36aba312c403b1971371e8cfba79187f7008f7d7902-annotation"
        },
        {
          "digest": "sha256:076093ea58ca42a77839d911193977a7985728607187f31d3652ce189d79900d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:076093ea58ca42a77839d911193977a7985728607187f31d3652ce189d79900d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:65eb080a6610d3422fb5f36aba312c403b1971371e8cfba79187f7008f7d7902",
          "image": "registry.connect.redhat.com/f5networks/f5-ipam-controller-operator@sha256:65eb080a6610d3422fb5f36aba312c403b1971371e8cfba79187f7008f7d7902",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "61ea6eb381c433814d217c6a",
      "alm_examples": [
        {
          "api_version": "fic.f5.com/v1",
          "kind": "F5IpamCtlr",
          "metadata": {
            "name": "f5ipamctlr-sample"
          },
          "spec": {
            "args": {
              "infoblox_grid_host": "<IP Address of Server>",
              "infoblox_labels": "<CIDR Labels>",
              "infoblox_netview": "<NetView>",
              "infoblox_password": "<PASSWORD>",
              "infoblox_username": "<USERNAME>",
              "infoblox_wapi_version": "<VERSION>",
              "ip_range": "<IP RANGE LABELS>",
              "orchestration": "kubernetes",
              "provider": "infoblox"
            },
            "image": {
              "pullPolicy": "Always",
              "repo": "f5-ipam-controller",
              "user": "f5networks",
              "version": "0.1.5"
            },
            "namespace": "kube-system",
            "rbac": {
              "create": true
            },
            "serviceAccount": {
              "create": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/f5networks/f5-ipam-controller-operator-bundle@sha256:1ae77a9ea0781721f93f9485e783caf69722cbb9a6ccc5470b91a740352ff906",
      "bundle_path_digest": "sha256:1ae77a9ea0781721f93f9485e783caf69722cbb9a6ccc5470b91a740352ff906",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-21T08:28:35.427000+00:00",
      "csv_description": "## Introduction\nThis Operator installs F5 IPAM Controller in your OpenShift Cluster. This enables to configure and deploy FIC using Helm Charts.\n## F5 IPAM Controller\nThe F5 IPAM Controller is a Docker container that runs in an orchestration environment and interfaces with an IPAM system. It allocates IP addresses from an IPAM system\u2019s address pool for hostnames in an orchestration environment. The F5 IPAM Controller watches orchestration-specific resources and consumes the hostnames within each resource.\n## Documentation\nRefer to F5 IPAM Controller documentation\n- https://github.com/F5Networks/f5-ipam-controller/blob/main/README.md\n## Prerequisites\n### Configure Infoblox with network and netview [Provider: Infoblox]\nRefer Infoblox documentation\n### Create persistent volume and persistent volume claim [Provider: f5-ip-provider]\nCreate persistent volume and persistent volume claim\n```\noc apply -f https://raw.githubusercontent.com/F5Networks/f5-ipam-controller/main/docs/config_examples/f5-ip-provider/localstorage-pv-pvc-example.yaml\n```\n",
      "csv_display_name": "F5 Ipam controller",
      "csv_metadata_description": "Operator to install F5 IPAM Controller.",
      "csv_name": "f5-ipam-controller-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:38:31.537000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "f5-ipam-controller-operator",
      "provided_apis": [
        {
          "group": "fic.f5.com",
          "kind": "F5IpamCtlr",
          "plural": "f5ipamctlrs",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:65eb080a6610d3422fb5f36aba312c403b1971371e8cfba79187f7008f7d7902",
          "image": "registry.connect.redhat.com/f5networks/f5-ipam-controller-operator@sha256:65eb080a6610d3422fb5f36aba312c403b1971371e8cfba79187f7008f7d7902",
          "name": "f5-ipam-controller-operator-65eb080a6610d3422fb5f36aba312c403b1971371e8cfba79187f7008f7d7902-annotation"
        },
        {
          "digest": "sha256:076093ea58ca42a77839d911193977a7985728607187f31d3652ce189d79900d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:076093ea58ca42a77839d911193977a7985728607187f31d3652ce189d79900d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:65eb080a6610d3422fb5f36aba312c403b1971371e8cfba79187f7008f7d7902",
          "image": "registry.connect.redhat.com/f5networks/f5-ipam-controller-operator@sha256:65eb080a6610d3422fb5f36aba312c403b1971371e8cfba79187f7008f7d7902",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "61eab45381c433814d21a40d",
      "alm_examples": [
        {
          "api_version": "anzo.cambridgesemantics.com/v1",
          "kind": "Anzo",
          "metadata": {
            "name": "agent01"
          },
          "spec": {
            "nodeConfig": {
              "spec": {
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "app": "anzo"
                  }
                },
                "serviceName": "anzo-agent01",
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "anzo"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
                        "name": "anzo",
                        "resources": {
                          "limits": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          },
                          "requests": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          }
                        }
                      }
                    ],
                    "serviceAccountName": "anzo-operator"
                  }
                }
              }
            },
            "role": "AnzoAgent"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-operator-bundle@sha256:bb64ea12a7c351a015dbb2486d2d9c6c7e9b2b64b8c5a3c235e2af36bccf6f63",
      "bundle_path_digest": "sha256:bb64ea12a7c351a015dbb2486d2d9c6c7e9b2b64b8c5a3c235e2af36bccf6f63",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-21T13:25:39.486000+00:00",
      "csv_description": "The Anzo Operator provides the way to install and configure an anzo agent setup on Red Hat K8S environment.\nCurrently, this is supported only through when deployed as an Anzo Agent as part of an Anzo Unstructured deployment.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo/blob/v2.0.1/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Operator",
      "csv_metadata_description": "kubernetes operator for Anzo",
      "csv_name": "anzo-operator",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:41:22.687000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "anzo-operator",
      "provided_apis": [
        {
          "group": "anzo.cambridgesemantics.com",
          "kind": "Anzo",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "name": "anzo-operator"
        },
        {
          "digest": "sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
          "name": "anzo"
        },
        {
          "digest": "sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "name": "anzo-operator-067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58-annotation"
        },
        {
          "digest": "sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "name": "manager"
        },
        {
          "digest": "sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
          "name": "anzo-53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.0.1",
      "version_original": "2.0.1"
    },
    {
      "_id": "61eab475384a3eb331995996",
      "alm_examples": [
        {
          "api_version": "anzo.cambridgesemantics.com/v1",
          "kind": "Anzo",
          "metadata": {
            "name": "agent01"
          },
          "spec": {
            "nodeConfig": {
              "spec": {
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "app": "anzo"
                  }
                },
                "serviceName": "anzo-agent01",
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "anzo"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
                        "name": "anzo",
                        "resources": {
                          "limits": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          },
                          "requests": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          }
                        }
                      }
                    ],
                    "serviceAccountName": "anzo-operator"
                  }
                }
              }
            },
            "role": "AnzoAgent"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-operator-bundle@sha256:bb64ea12a7c351a015dbb2486d2d9c6c7e9b2b64b8c5a3c235e2af36bccf6f63",
      "bundle_path_digest": "sha256:bb64ea12a7c351a015dbb2486d2d9c6c7e9b2b64b8c5a3c235e2af36bccf6f63",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-21T13:26:13.529000+00:00",
      "csv_description": "The Anzo Operator provides the way to install and configure an anzo agent setup on Red Hat K8S environment.\nCurrently, this is supported only through when deployed as an Anzo Agent as part of an Anzo Unstructured deployment.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo/blob/v2.0.1/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Operator",
      "csv_metadata_description": "kubernetes operator for Anzo",
      "csv_name": "anzo-operator",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:28:18.363000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "anzo-operator",
      "provided_apis": [
        {
          "group": "anzo.cambridgesemantics.com",
          "kind": "Anzo",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "name": "anzo-operator"
        },
        {
          "digest": "sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
          "name": "anzo"
        },
        {
          "digest": "sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "name": "anzo-operator-067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58-annotation"
        },
        {
          "digest": "sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "name": "manager"
        },
        {
          "digest": "sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
          "name": "anzo-53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.0.1",
      "version_original": "2.0.1"
    },
    {
      "_id": "61eab573384a3eb3319959f8",
      "alm_examples": [
        {
          "api_version": "anzo.cambridgesemantics.com/v1",
          "kind": "Anzo",
          "metadata": {
            "name": "agent01"
          },
          "spec": {
            "nodeConfig": {
              "spec": {
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "app": "anzo"
                  }
                },
                "serviceName": "anzo-agent01",
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "anzo"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
                        "name": "anzo",
                        "resources": {
                          "limits": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          },
                          "requests": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          }
                        }
                      }
                    ],
                    "serviceAccountName": "anzo-operator"
                  }
                }
              }
            },
            "role": "AnzoAgent"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-operator-bundle@sha256:bb64ea12a7c351a015dbb2486d2d9c6c7e9b2b64b8c5a3c235e2af36bccf6f63",
      "bundle_path_digest": "sha256:bb64ea12a7c351a015dbb2486d2d9c6c7e9b2b64b8c5a3c235e2af36bccf6f63",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-21T13:30:27.220000+00:00",
      "csv_description": "The Anzo Operator provides the way to install and configure an anzo agent setup on Red Hat K8S environment.\nCurrently, this is supported only through when deployed as an Anzo Agent as part of an Anzo Unstructured deployment.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo/blob/v2.0.1/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Operator",
      "csv_metadata_description": "kubernetes operator for Anzo",
      "csv_name": "anzo-operator",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:40:40.116000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "anzo-operator",
      "provided_apis": [
        {
          "group": "anzo.cambridgesemantics.com",
          "kind": "Anzo",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "name": "anzo-operator"
        },
        {
          "digest": "sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
          "name": "anzo"
        },
        {
          "digest": "sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "name": "anzo-operator-067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58-annotation"
        },
        {
          "digest": "sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "name": "manager"
        },
        {
          "digest": "sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
          "name": "anzo-53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.0.1",
      "version_original": "2.0.1"
    },
    {
      "_id": "61eb29b2ed74b2ffb22b0155",
      "alm_examples": [
        {
          "api_version": "csi.hpe.com/v1",
          "kind": "XSPC",
          "metadata": {
            "name": "xspc",
            "namespace": "kube-system"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/xspc-csi-operator-bundle@sha256:24af9ee64e2266041112337e8e4ae3db8ce82f3edbcbf79d3c514eed0273ebe7",
      "bundle_path_digest": "sha256:24af9ee64e2266041112337e8e4ae3db8ce82f3edbcbf79d3c514eed0273ebe7",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-21T21:46:26.641000+00:00",
      "csv_description": "## About\nHPE XP Storage Plug-in for Containers (XSPC) is a plugin that integrates HPE XP storage into Kubernetes based clusters.\nXSPC provides dynamic persistent volume provisioning capabilities from HPE's block storage arrays.\n\n## Requirements\n\n### Supported Driver Version\n\n* XSPC v3.8.0\n\n### Supported Platforms\n\n* OpenShift v4.6, v4.7, v4.8\n\n### Supported Operating Systems\n\n* RHEL 7.x\n* RHEL 8.x",
      "csv_display_name": "HPE XP Storage CSI Driver Operator for Kubernetes",
      "csv_metadata_description": "An operator for managing HPE XP Storage Plug-in for Containers CSI driver",
      "csv_name": "xspc-csi-driver-operator.1.8.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:32:54.393000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "xspc-operator",
      "provided_apis": [
        {
          "group": "csi.hpe.com",
          "kind": "XSPC",
          "plural": "xspcs",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ad4dd52519ea946dc35e9519a3c0ae87a2db26af0135c50a849fdb54dacbe1b8",
          "image": "registry.connect.redhat.com/hpestorage/xspc-csi-driver-operator@sha256:ad4dd52519ea946dc35e9519a3c0ae87a2db26af0135c50a849fdb54dacbe1b8",
          "name": "xspc-csi-driver-operator"
        },
        {
          "digest": "sha256:cb2747479b5a1b32f32e4a98cb2c9e2a6a2f485ca811c869fd90b4835fc62e1f",
          "image": "registry.connect.redhat.com/hpestorage/xspc-csi-driver@sha256:cb2747479b5a1b32f32e4a98cb2c9e2a6a2f485ca811c869fd90b4835fc62e1f",
          "name": "xspc-csi-driver"
        },
        {
          "digest": "sha256:ad4dd52519ea946dc35e9519a3c0ae87a2db26af0135c50a849fdb54dacbe1b8",
          "image": "registry.connect.redhat.com/hpestorage/xspc-csi-driver-operator@sha256:ad4dd52519ea946dc35e9519a3c0ae87a2db26af0135c50a849fdb54dacbe1b8",
          "name": "xspc-csi-driver-operator-ad4dd52519ea946dc35e9519a3c0ae87a2db26af0135c50a849fdb54dacbe1b8-annotation"
        },
        {
          "digest": "sha256:ad4dd52519ea946dc35e9519a3c0ae87a2db26af0135c50a849fdb54dacbe1b8",
          "image": "registry.connect.redhat.com/hpestorage/xspc-csi-driver-operator@sha256:ad4dd52519ea946dc35e9519a3c0ae87a2db26af0135c50a849fdb54dacbe1b8",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.8.1",
      "version_original": "1.8.1"
    },
    {
      "_id": "61ec4b2ad2fa2f75ee9c0f56",
      "alm_examples": [
        {
          "api_version": "machinelearning.seldon.io/v1",
          "kind": "SeldonDeployment",
          "metadata": {
            "labels": {
              "app": "seldon",
              "app.kubernetes.io/instance": "seldon1",
              "app.kubernetes.io/name": "seldon",
              "app.kubernetes.io/version": "v0.5"
            },
            "name": "seldon-model"
          },
          "spec": {
            "name": "test-deployment",
            "predictors": [
              {
                "componentSpecs": [
                  {
                    "spec": {
                      "containers": [
                        {
                          "image": "seldonio/mock_classifier:1.6.0",
                          "name": "classifier"
                        }
                      ]
                    }
                  }
                ],
                "graph": {
                  "children": [],
                  "name": "classifier",
                  "type": "MODEL"
                },
                "name": "example",
                "replicas": 1
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-core-operator-bundle@sha256:4ff78537117948052d6e7414fec414ff8351601ec09e7a097a804298a831c11d",
      "bundle_path_digest": "sha256:4ff78537117948052d6e7414fec414ff8351601ec09e7a097a804298a831c11d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-22T18:21:30.814000+00:00",
      "csv_description": "The Seldon operator enables for native operation of production machine learning workloads, including monitoring and operations of language-agnostic models with the benefits of real-time metrics and log analysis.\n   \n## Overview\nSeldon Core is an open source platform for deploying machine learning models on a Kubernetes cluster.\n\n* Deploy machine learning models in the cloud or on-premise.\n* Get metrics and ensure proper governance and compliance for your running machine learning models.\n* Create powerful inference graphs made up of multiple components.\n* Provide a consistent serving layer for models built using heterogeneous ML toolkits.\n\nYou can get started by following the guides in our documentation at https://docs.seldon.io/projects/seldon-core/en/latest/workflow/README.html\n",
      "csv_display_name": "Seldon Operator",
      "csv_metadata_description": "The Seldon operator for management, monitoring and operations of machine learning systems through the Seldon Engine. Once installed, the Seldon Operator provides multiple functions which facilitate the productisation, monitoring and maintenance of machine learning systems at scale.",
      "csv_name": "seldon-operator.v1.12.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:54:18.581000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "seldon-operator-certified",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:dbea873072acda45863dabc94555d39b9f48670ac04fec3e835c90531f1a2eda",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:dbea873072acda45863dabc94555d39b9f48670ac04fec3e835c90531f1a2eda",
          "name": "seldon-core-operator-dbea873072acda45863dabc94555d39b9f48670ac04fec3e835c90531f1a2eda-annotation"
        },
        {
          "digest": "sha256:dbea873072acda45863dabc94555d39b9f48670ac04fec3e835c90531f1a2eda",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:dbea873072acda45863dabc94555d39b9f48670ac04fec3e835c90531f1a2eda",
          "name": "manager"
        },
        {
          "digest": "sha256:4aab0706cef5ae37e3d62ba3cc4f92bc5d0b0e18d0d953143d25d745696ecc54",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-executor@sha256:4aab0706cef5ae37e3d62ba3cc4f92bc5d0b0e18d0d953143d25d745696ecc54",
          "name": "executor"
        },
        {
          "digest": "sha256:0abffc5f882b16a7ffa9ecfb7d1b362d8e8017b47e94b4b72b10dce74daeec65",
          "image": "registry.connect.redhat.com/seldonio/seldon-engine@sha256:0abffc5f882b16a7ffa9ecfb7d1b362d8e8017b47e94b4b72b10dce74daeec65",
          "name": "engine"
        },
        {
          "digest": "sha256:554547229653bf1ebedb88c8eec40e63c8282146e0a0ea14f2d47f000004439f",
          "image": "registry.connect.redhat.com/seldonio/storage-initializer@sha256:554547229653bf1ebedb88c8eec40e63c8282146e0a0ea14f2d47f000004439f",
          "name": "storage_initializer"
        },
        {
          "digest": "sha256:0a68b243b28d2dc273a3278393e9f986b6ed5fc29aea7b9f3f343bf9efc5ac8e",
          "image": "registry.connect.redhat.com/seldonio/sklearnserver@sha256:0a68b243b28d2dc273a3278393e9f986b6ed5fc29aea7b9f3f343bf9efc5ac8e",
          "name": "sklearnserver"
        },
        {
          "digest": "sha256:0ee0001730d21ca636417824655d74d423d4492d7fed28befc74c23caf0cc4c8",
          "image": "registry.connect.redhat.com/seldonio/xgboostserver@sha256:0ee0001730d21ca636417824655d74d423d4492d7fed28befc74c23caf0cc4c8",
          "name": "xgboostserver"
        },
        {
          "digest": "sha256:3381cad85a16434f48cd65afbcfc65f2693bee46a149aa143a4088c9f9d899a2",
          "image": "registry.connect.redhat.com/seldonio/mlflowserver@sha256:3381cad85a16434f48cd65afbcfc65f2693bee46a149aa143a4088c9f9d899a2",
          "name": "mlflowserver"
        },
        {
          "digest": "sha256:407932f2d8e670bb4d3b9f6670a687039fae8d79312269d4da2677b73dc3e301",
          "image": "registry.connect.redhat.com/seldonio/tfproxy@sha256:407932f2d8e670bb4d3b9f6670a687039fae8d79312269d4da2677b73dc3e301",
          "name": "tfproxy"
        },
        {
          "digest": "sha256:04d1eee0208ca0e64ae277197cb1ddff4c0ee143a712a7f7a30faec397239dfc",
          "image": "registry.connect.redhat.com/seldonio/tensorflow-serving@sha256:04d1eee0208ca0e64ae277197cb1ddff4c0ee143a712a7f7a30faec397239dfc",
          "name": "tensorflow"
        },
        {
          "digest": "sha256:6ec697ad5187639712701454198a5f6afa1f662d3c127641c06b4322f391d6dd",
          "image": "registry.connect.redhat.com/seldonio/alibiexplainer@sha256:6ec697ad5187639712701454198a5f6afa1f662d3c127641c06b4322f391d6dd",
          "name": "explainer"
        },
        {
          "digest": "sha256:ea78453871e656b71ec9ce4660623a58938d0492fb8b660cc36a1943c768ce4d",
          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:ea78453871e656b71ec9ce4660623a58938d0492fb8b660cc36a1943c768ce4d",
          "name": "mock_classifier"
        }
      ],
      "replaces": "",
      "skip_range": "<1.12.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.12.0",
      "version_original": "1.12.0"
    },
    {
      "_id": "61ec4b6ad2fa2f75ee9c0f57",
      "alm_examples": [
        {
          "api_version": "machinelearning.seldon.io/v1",
          "kind": "SeldonDeployment",
          "metadata": {
            "labels": {
              "app": "seldon",
              "app.kubernetes.io/instance": "seldon1",
              "app.kubernetes.io/name": "seldon",
              "app.kubernetes.io/version": "v0.5"
            },
            "name": "seldon-model"
          },
          "spec": {
            "name": "test-deployment",
            "predictors": [
              {
                "componentSpecs": [
                  {
                    "spec": {
                      "containers": [
                        {
                          "image": "seldonio/mock_classifier:1.6.0",
                          "name": "classifier"
                        }
                      ]
                    }
                  }
                ],
                "graph": {
                  "children": [],
                  "name": "classifier",
                  "type": "MODEL"
                },
                "name": "example",
                "replicas": 1
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-core-operator-bundle@sha256:4ff78537117948052d6e7414fec414ff8351601ec09e7a097a804298a831c11d",
      "bundle_path_digest": "sha256:4ff78537117948052d6e7414fec414ff8351601ec09e7a097a804298a831c11d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-22T18:22:34.129000+00:00",
      "csv_description": "The Seldon operator enables for native operation of production machine learning workloads, including monitoring and operations of language-agnostic models with the benefits of real-time metrics and log analysis.\n   \n## Overview\nSeldon Core is an open source platform for deploying machine learning models on a Kubernetes cluster.\n\n* Deploy machine learning models in the cloud or on-premise.\n* Get metrics and ensure proper governance and compliance for your running machine learning models.\n* Create powerful inference graphs made up of multiple components.\n* Provide a consistent serving layer for models built using heterogeneous ML toolkits.\n\nYou can get started by following the guides in our documentation at https://docs.seldon.io/projects/seldon-core/en/latest/workflow/README.html\n",
      "csv_display_name": "Seldon Operator",
      "csv_metadata_description": "The Seldon operator for management, monitoring and operations of machine learning systems through the Seldon Engine. Once installed, the Seldon Operator provides multiple functions which facilitate the productisation, monitoring and maintenance of machine learning systems at scale.",
      "csv_name": "seldon-operator.v1.12.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:58:16.144000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "seldon-operator-certified",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:dbea873072acda45863dabc94555d39b9f48670ac04fec3e835c90531f1a2eda",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:dbea873072acda45863dabc94555d39b9f48670ac04fec3e835c90531f1a2eda",
          "name": "seldon-core-operator-dbea873072acda45863dabc94555d39b9f48670ac04fec3e835c90531f1a2eda-annotation"
        },
        {
          "digest": "sha256:dbea873072acda45863dabc94555d39b9f48670ac04fec3e835c90531f1a2eda",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:dbea873072acda45863dabc94555d39b9f48670ac04fec3e835c90531f1a2eda",
          "name": "manager"
        },
        {
          "digest": "sha256:4aab0706cef5ae37e3d62ba3cc4f92bc5d0b0e18d0d953143d25d745696ecc54",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-executor@sha256:4aab0706cef5ae37e3d62ba3cc4f92bc5d0b0e18d0d953143d25d745696ecc54",
          "name": "executor"
        },
        {
          "digest": "sha256:0abffc5f882b16a7ffa9ecfb7d1b362d8e8017b47e94b4b72b10dce74daeec65",
          "image": "registry.connect.redhat.com/seldonio/seldon-engine@sha256:0abffc5f882b16a7ffa9ecfb7d1b362d8e8017b47e94b4b72b10dce74daeec65",
          "name": "engine"
        },
        {
          "digest": "sha256:554547229653bf1ebedb88c8eec40e63c8282146e0a0ea14f2d47f000004439f",
          "image": "registry.connect.redhat.com/seldonio/storage-initializer@sha256:554547229653bf1ebedb88c8eec40e63c8282146e0a0ea14f2d47f000004439f",
          "name": "storage_initializer"
        },
        {
          "digest": "sha256:0a68b243b28d2dc273a3278393e9f986b6ed5fc29aea7b9f3f343bf9efc5ac8e",
          "image": "registry.connect.redhat.com/seldonio/sklearnserver@sha256:0a68b243b28d2dc273a3278393e9f986b6ed5fc29aea7b9f3f343bf9efc5ac8e",
          "name": "sklearnserver"
        },
        {
          "digest": "sha256:0ee0001730d21ca636417824655d74d423d4492d7fed28befc74c23caf0cc4c8",
          "image": "registry.connect.redhat.com/seldonio/xgboostserver@sha256:0ee0001730d21ca636417824655d74d423d4492d7fed28befc74c23caf0cc4c8",
          "name": "xgboostserver"
        },
        {
          "digest": "sha256:3381cad85a16434f48cd65afbcfc65f2693bee46a149aa143a4088c9f9d899a2",
          "image": "registry.connect.redhat.com/seldonio/mlflowserver@sha256:3381cad85a16434f48cd65afbcfc65f2693bee46a149aa143a4088c9f9d899a2",
          "name": "mlflowserver"
        },
        {
          "digest": "sha256:407932f2d8e670bb4d3b9f6670a687039fae8d79312269d4da2677b73dc3e301",
          "image": "registry.connect.redhat.com/seldonio/tfproxy@sha256:407932f2d8e670bb4d3b9f6670a687039fae8d79312269d4da2677b73dc3e301",
          "name": "tfproxy"
        },
        {
          "digest": "sha256:04d1eee0208ca0e64ae277197cb1ddff4c0ee143a712a7f7a30faec397239dfc",
          "image": "registry.connect.redhat.com/seldonio/tensorflow-serving@sha256:04d1eee0208ca0e64ae277197cb1ddff4c0ee143a712a7f7a30faec397239dfc",
          "name": "tensorflow"
        },
        {
          "digest": "sha256:6ec697ad5187639712701454198a5f6afa1f662d3c127641c06b4322f391d6dd",
          "image": "registry.connect.redhat.com/seldonio/alibiexplainer@sha256:6ec697ad5187639712701454198a5f6afa1f662d3c127641c06b4322f391d6dd",
          "name": "explainer"
        },
        {
          "digest": "sha256:ea78453871e656b71ec9ce4660623a58938d0492fb8b660cc36a1943c768ce4d",
          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:ea78453871e656b71ec9ce4660623a58938d0492fb8b660cc36a1943c768ce4d",
          "name": "mock_classifier"
        }
      ],
      "replaces": "",
      "skip_range": "<1.12.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.12.0",
      "version_original": "1.12.0"
    },
    {
      "_id": "61ec4d36ecea99e5a95b686b",
      "alm_examples": [
        {
          "api_version": "machinelearning.seldon.io/v1",
          "kind": "SeldonDeployment",
          "metadata": {
            "labels": {
              "app": "seldon",
              "app.kubernetes.io/instance": "seldon1",
              "app.kubernetes.io/name": "seldon",
              "app.kubernetes.io/version": "v0.5"
            },
            "name": "seldon-model"
          },
          "spec": {
            "name": "test-deployment",
            "predictors": [
              {
                "componentSpecs": [
                  {
                    "spec": {
                      "containers": [
                        {
                          "image": "seldonio/mock_classifier:1.6.0",
                          "name": "classifier"
                        }
                      ]
                    }
                  }
                ],
                "graph": {
                  "children": [],
                  "name": "classifier",
                  "type": "MODEL"
                },
                "name": "example",
                "replicas": 1
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-core-operator-bundle@sha256:4ff78537117948052d6e7414fec414ff8351601ec09e7a097a804298a831c11d",
      "bundle_path_digest": "sha256:4ff78537117948052d6e7414fec414ff8351601ec09e7a097a804298a831c11d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-22T18:30:14.417000+00:00",
      "csv_description": "The Seldon operator enables for native operation of production machine learning workloads, including monitoring and operations of language-agnostic models with the benefits of real-time metrics and log analysis.\n   \n## Overview\nSeldon Core is an open source platform for deploying machine learning models on a Kubernetes cluster.\n\n* Deploy machine learning models in the cloud or on-premise.\n* Get metrics and ensure proper governance and compliance for your running machine learning models.\n* Create powerful inference graphs made up of multiple components.\n* Provide a consistent serving layer for models built using heterogeneous ML toolkits.\n\nYou can get started by following the guides in our documentation at https://docs.seldon.io/projects/seldon-core/en/latest/workflow/README.html\n",
      "csv_display_name": "Seldon Operator",
      "csv_metadata_description": "The Seldon operator for management, monitoring and operations of machine learning systems through the Seldon Engine. Once installed, the Seldon Operator provides multiple functions which facilitate the productisation, monitoring and maintenance of machine learning systems at scale.",
      "csv_name": "seldon-operator.v1.12.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:13:33.437000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "seldon-operator-certified",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:dbea873072acda45863dabc94555d39b9f48670ac04fec3e835c90531f1a2eda",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:dbea873072acda45863dabc94555d39b9f48670ac04fec3e835c90531f1a2eda",
          "name": "seldon-core-operator-dbea873072acda45863dabc94555d39b9f48670ac04fec3e835c90531f1a2eda-annotation"
        },
        {
          "digest": "sha256:dbea873072acda45863dabc94555d39b9f48670ac04fec3e835c90531f1a2eda",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:dbea873072acda45863dabc94555d39b9f48670ac04fec3e835c90531f1a2eda",
          "name": "manager"
        },
        {
          "digest": "sha256:4aab0706cef5ae37e3d62ba3cc4f92bc5d0b0e18d0d953143d25d745696ecc54",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-executor@sha256:4aab0706cef5ae37e3d62ba3cc4f92bc5d0b0e18d0d953143d25d745696ecc54",
          "name": "executor"
        },
        {
          "digest": "sha256:0abffc5f882b16a7ffa9ecfb7d1b362d8e8017b47e94b4b72b10dce74daeec65",
          "image": "registry.connect.redhat.com/seldonio/seldon-engine@sha256:0abffc5f882b16a7ffa9ecfb7d1b362d8e8017b47e94b4b72b10dce74daeec65",
          "name": "engine"
        },
        {
          "digest": "sha256:554547229653bf1ebedb88c8eec40e63c8282146e0a0ea14f2d47f000004439f",
          "image": "registry.connect.redhat.com/seldonio/storage-initializer@sha256:554547229653bf1ebedb88c8eec40e63c8282146e0a0ea14f2d47f000004439f",
          "name": "storage_initializer"
        },
        {
          "digest": "sha256:0a68b243b28d2dc273a3278393e9f986b6ed5fc29aea7b9f3f343bf9efc5ac8e",
          "image": "registry.connect.redhat.com/seldonio/sklearnserver@sha256:0a68b243b28d2dc273a3278393e9f986b6ed5fc29aea7b9f3f343bf9efc5ac8e",
          "name": "sklearnserver"
        },
        {
          "digest": "sha256:0ee0001730d21ca636417824655d74d423d4492d7fed28befc74c23caf0cc4c8",
          "image": "registry.connect.redhat.com/seldonio/xgboostserver@sha256:0ee0001730d21ca636417824655d74d423d4492d7fed28befc74c23caf0cc4c8",
          "name": "xgboostserver"
        },
        {
          "digest": "sha256:3381cad85a16434f48cd65afbcfc65f2693bee46a149aa143a4088c9f9d899a2",
          "image": "registry.connect.redhat.com/seldonio/mlflowserver@sha256:3381cad85a16434f48cd65afbcfc65f2693bee46a149aa143a4088c9f9d899a2",
          "name": "mlflowserver"
        },
        {
          "digest": "sha256:407932f2d8e670bb4d3b9f6670a687039fae8d79312269d4da2677b73dc3e301",
          "image": "registry.connect.redhat.com/seldonio/tfproxy@sha256:407932f2d8e670bb4d3b9f6670a687039fae8d79312269d4da2677b73dc3e301",
          "name": "tfproxy"
        },
        {
          "digest": "sha256:04d1eee0208ca0e64ae277197cb1ddff4c0ee143a712a7f7a30faec397239dfc",
          "image": "registry.connect.redhat.com/seldonio/tensorflow-serving@sha256:04d1eee0208ca0e64ae277197cb1ddff4c0ee143a712a7f7a30faec397239dfc",
          "name": "tensorflow"
        },
        {
          "digest": "sha256:6ec697ad5187639712701454198a5f6afa1f662d3c127641c06b4322f391d6dd",
          "image": "registry.connect.redhat.com/seldonio/alibiexplainer@sha256:6ec697ad5187639712701454198a5f6afa1f662d3c127641c06b4322f391d6dd",
          "name": "explainer"
        },
        {
          "digest": "sha256:ea78453871e656b71ec9ce4660623a58938d0492fb8b660cc36a1943c768ce4d",
          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:ea78453871e656b71ec9ce4660623a58938d0492fb8b660cc36a1943c768ce4d",
          "name": "mock_classifier"
        }
      ],
      "replaces": "",
      "skip_range": "<1.12.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.12.0",
      "version_original": "1.12.0"
    },
    {
      "_id": "61ee74d333f211c45407a768",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:f9c5556854d4c2d1b32b57ebc096b6b525cecd5e801da2cf15a9fed2dfa0d7c3",
      "bundle_path_digest": "sha256:f9c5556854d4c2d1b32b57ebc096b6b525cecd5e801da2cf15a9fed2dfa0d7c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-24T09:43:47.119000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.25",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:49:16.379000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:d2c8ad6be94b49b9e679025d60ddafd3c4f2261e08b30785157f9039ca05f289",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:d2c8ad6be94b49b9e679025d60ddafd3c4f2261e08b30785157f9039ca05f289",
          "name": "joget"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.0.25",
      "version_original": "0.0.25"
    },
    {
      "_id": "61ee758c384a3eb331996a41",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:f9c5556854d4c2d1b32b57ebc096b6b525cecd5e801da2cf15a9fed2dfa0d7c3",
      "bundle_path_digest": "sha256:f9c5556854d4c2d1b32b57ebc096b6b525cecd5e801da2cf15a9fed2dfa0d7c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-24T09:46:52.308000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.25",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:54:34.161000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:d2c8ad6be94b49b9e679025d60ddafd3c4f2261e08b30785157f9039ca05f289",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:d2c8ad6be94b49b9e679025d60ddafd3c4f2261e08b30785157f9039ca05f289",
          "name": "joget"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.0.25",
      "version_original": "0.0.25"
    },
    {
      "_id": "61ee7681384a3eb331996a7c",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:f9c5556854d4c2d1b32b57ebc096b6b525cecd5e801da2cf15a9fed2dfa0d7c3",
      "bundle_path_digest": "sha256:f9c5556854d4c2d1b32b57ebc096b6b525cecd5e801da2cf15a9fed2dfa0d7c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-24T09:50:57.196000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.25",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:33:18.695000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:d2c8ad6be94b49b9e679025d60ddafd3c4f2261e08b30785157f9039ca05f289",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:d2c8ad6be94b49b9e679025d60ddafd3c4f2261e08b30785157f9039ca05f289",
          "name": "joget"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.25",
      "version_original": "0.0.25"
    },
    {
      "_id": "61ee786833f211c45407a7db",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:f9c5556854d4c2d1b32b57ebc096b6b525cecd5e801da2cf15a9fed2dfa0d7c3",
      "bundle_path_digest": "sha256:f9c5556854d4c2d1b32b57ebc096b6b525cecd5e801da2cf15a9fed2dfa0d7c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-24T09:59:04.414000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.25",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:32:13.800000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:d2c8ad6be94b49b9e679025d60ddafd3c4f2261e08b30785157f9039ca05f289",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:d2c8ad6be94b49b9e679025d60ddafd3c4f2261e08b30785157f9039ca05f289",
          "name": "joget"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.25",
      "version_original": "0.0.25"
    },
    {
      "_id": "61ee7a03384a3eb331996ae6",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:f9c5556854d4c2d1b32b57ebc096b6b525cecd5e801da2cf15a9fed2dfa0d7c3",
      "bundle_path_digest": "sha256:f9c5556854d4c2d1b32b57ebc096b6b525cecd5e801da2cf15a9fed2dfa0d7c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-24T10:05:55.438000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.25",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:28:08.127000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:d2c8ad6be94b49b9e679025d60ddafd3c4f2261e08b30785157f9039ca05f289",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:d2c8ad6be94b49b9e679025d60ddafd3c4f2261e08b30785157f9039ca05f289",
          "name": "joget"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.25",
      "version_original": "0.0.25"
    },
    {
      "_id": "61ee7a4a384a3eb331996b0d",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:f9c5556854d4c2d1b32b57ebc096b6b525cecd5e801da2cf15a9fed2dfa0d7c3",
      "bundle_path_digest": "sha256:f9c5556854d4c2d1b32b57ebc096b6b525cecd5e801da2cf15a9fed2dfa0d7c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-24T10:07:06.967000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.25",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:56:14.130000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [],
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:d2c8ad6be94b49b9e679025d60ddafd3c4f2261e08b30785157f9039ca05f289",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:d2c8ad6be94b49b9e679025d60ddafd3c4f2261e08b30785157f9039ca05f289",
          "name": "joget"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.25",
      "version_original": "0.0.25"
    },
    {
      "_id": "61f031dc33f211c45407add8",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:8fd726f0aed7b5c6cfce74e236dad4fbd7e23d2d4c36b55de1a618d442495685",
      "bundle_path_digest": "sha256:8fd726f0aed7b5c6cfce74e236dad4fbd7e23d2d4c36b55de1a618d442495685",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-25T17:22:36.684000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T10:52:26.128000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "name": "COUCHDB-MGMT"
        },
        {
          "digest": "sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "name": "couchdb-operator-0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea-annotation"
        },
        {
          "digest": "sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "name": "couchdb-operator"
        },
        {
          "digest": "sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "name": "couchdb3"
        },
        {
          "digest": "sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "name": "mgmt"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.2.1",
      "version_original": "2.2.1"
    },
    {
      "_id": "61f031de384a3eb3319970fd",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:8fd726f0aed7b5c6cfce74e236dad4fbd7e23d2d4c36b55de1a618d442495685",
      "bundle_path_digest": "sha256:8fd726f0aed7b5c6cfce74e236dad4fbd7e23d2d4c36b55de1a618d442495685",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v2.2",
      "creation_date": "2022-01-25T17:22:38.473000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:52:27.863000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "name": "COUCHDB-MGMT"
        },
        {
          "digest": "sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "name": "couchdb-operator-0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea-annotation"
        },
        {
          "digest": "sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "name": "couchdb-operator"
        },
        {
          "digest": "sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "name": "couchdb3"
        },
        {
          "digest": "sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "name": "mgmt"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.2.1",
      "version_original": "2.2.1"
    },
    {
      "_id": "61f032ac33f211c45407add9",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:8fd726f0aed7b5c6cfce74e236dad4fbd7e23d2d4c36b55de1a618d442495685",
      "bundle_path_digest": "sha256:8fd726f0aed7b5c6cfce74e236dad4fbd7e23d2d4c36b55de1a618d442495685",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-25T17:26:04.243000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:13:20.120000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "name": "COUCHDB-MGMT"
        },
        {
          "digest": "sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "name": "couchdb-operator-0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea-annotation"
        },
        {
          "digest": "sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "name": "couchdb-operator"
        },
        {
          "digest": "sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "name": "couchdb3"
        },
        {
          "digest": "sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "name": "mgmt"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.2.1",
      "version_original": "2.2.1"
    },
    {
      "_id": "61f032ae33f211c45407adda",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:8fd726f0aed7b5c6cfce74e236dad4fbd7e23d2d4c36b55de1a618d442495685",
      "bundle_path_digest": "sha256:8fd726f0aed7b5c6cfce74e236dad4fbd7e23d2d4c36b55de1a618d442495685",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v2.2",
      "creation_date": "2022-01-25T17:26:06.245000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:31:47.738000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "name": "COUCHDB-MGMT"
        },
        {
          "digest": "sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "name": "couchdb-operator-0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea-annotation"
        },
        {
          "digest": "sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "name": "couchdb-operator"
        },
        {
          "digest": "sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "name": "couchdb3"
        },
        {
          "digest": "sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "name": "mgmt"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.2.1",
      "version_original": "2.2.1"
    },
    {
      "_id": "61f0335b81c433814d21bb3d",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:8fd726f0aed7b5c6cfce74e236dad4fbd7e23d2d4c36b55de1a618d442495685",
      "bundle_path_digest": "sha256:8fd726f0aed7b5c6cfce74e236dad4fbd7e23d2d4c36b55de1a618d442495685",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-25T17:28:59.366000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:44:40.734000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "name": "COUCHDB-MGMT"
        },
        {
          "digest": "sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "name": "couchdb-operator-0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea-annotation"
        },
        {
          "digest": "sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "name": "couchdb-operator"
        },
        {
          "digest": "sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "name": "couchdb3"
        },
        {
          "digest": "sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "name": "mgmt"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.2.1",
      "version_original": "2.2.1"
    },
    {
      "_id": "61f0335d33f211c45407addb",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:8fd726f0aed7b5c6cfce74e236dad4fbd7e23d2d4c36b55de1a618d442495685",
      "bundle_path_digest": "sha256:8fd726f0aed7b5c6cfce74e236dad4fbd7e23d2d4c36b55de1a618d442495685",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v2.2",
      "creation_date": "2022-01-25T17:29:01.683000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:10:49.697000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "name": "COUCHDB-MGMT"
        },
        {
          "digest": "sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "name": "couchdb-operator-0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea-annotation"
        },
        {
          "digest": "sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "name": "couchdb-operator"
        },
        {
          "digest": "sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "name": "couchdb3"
        },
        {
          "digest": "sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "name": "mgmt"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.2.1",
      "version_original": "2.2.1"
    },
    {
      "_id": "61f0346bed74b2ffb22b0cde",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:8fd726f0aed7b5c6cfce74e236dad4fbd7e23d2d4c36b55de1a618d442495685",
      "bundle_path_digest": "sha256:8fd726f0aed7b5c6cfce74e236dad4fbd7e23d2d4c36b55de1a618d442495685",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v2.2",
      "creation_date": "2022-01-25T17:33:31.041000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:27:10.161000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "name": "COUCHDB-MGMT"
        },
        {
          "digest": "sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "name": "couchdb-operator-0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea-annotation"
        },
        {
          "digest": "sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "name": "couchdb-operator"
        },
        {
          "digest": "sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "name": "couchdb3"
        },
        {
          "digest": "sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "name": "mgmt"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.2.1",
      "version_original": "2.2.1"
    },
    {
      "_id": "61f0346c33f211c45407addc",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:8fd726f0aed7b5c6cfce74e236dad4fbd7e23d2d4c36b55de1a618d442495685",
      "bundle_path_digest": "sha256:8fd726f0aed7b5c6cfce74e236dad4fbd7e23d2d4c36b55de1a618d442495685",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-25T17:33:32.324000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:24:14.331000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "name": "COUCHDB-MGMT"
        },
        {
          "digest": "sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "name": "couchdb-operator-0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea-annotation"
        },
        {
          "digest": "sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:0cef73bf29bea2a05faca12441801a85f984ad8d20506e9bfb8dcc43a8d20cea",
          "name": "couchdb-operator"
        },
        {
          "digest": "sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:c495d5af7adf847dcdd01017d1ad58db1d623ba4b85550ccbff54a6c50cff7dd",
          "name": "couchdb3"
        },
        {
          "digest": "sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:2a5c8ff0fcc73b54bfa24a7167ebc5cdc3f9f911dc7a6120072b659149fd2d18",
          "name": "mgmt"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.2.1",
      "version_original": "2.2.1"
    },
    {
      "_id": "61f0a5d71496e3baf4eaf9ef",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {},
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "use_ocp_driver_toolkit": true,
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {}
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:6eb5fe94f87baf4214da32a3120af1d799311c7c86d93f77efd297057c6e993b",
      "bundle_path_digest": "sha256:6eb5fe94f87baf4214da32a3120af1d799311c7c86d93f77efd297057c6e993b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.9.0",
      "creation_date": "2022-01-26T01:37:27.573000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T10:53:29.714000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:173639a16409d7aeba2f5ca7ccd6260ea621d280a24b8933089d6df0623bb657",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:173639a16409d7aeba2f5ca7ccd6260ea621d280a24b8933089d6df0623bb657",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:8546a3e1ca8e642d2dbbfde13ee439e8137513be9886f9fe51f4fa9c4db80198",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:8546a3e1ca8e642d2dbbfde13ee439e8137513be9886f9fe51f4fa9c4db80198",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:f4c4de8d66b2fef8cebaee6fec2fb2d15d01e835de2654df6dfd4a0ce0baec6b",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:f4c4de8d66b2fef8cebaee6fec2fb2d15d01e835de2654df6dfd4a0ce0baec6b",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:5f826e306d093332a86afa7d1e96218b5bdda8d33067931cff7914f6bb2994ee",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:5f826e306d093332a86afa7d1e96218b5bdda8d33067931cff7914f6bb2994ee",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:c9af394fe78c02acbc2fae2c43fd73030ef54ab76156b1ae566eaed53f9b4835",
          "image": "nvcr.io/nvidia/driver@sha256:c9af394fe78c02acbc2fae2c43fd73030ef54ab76156b1ae566eaed53f9b4835",
          "name": "driver-image"
        },
        {
          "digest": "sha256:69171f906efe4bbabe31688343e59feea08a7e0ef8b0d9efb466abfa153aec16",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:69171f906efe4bbabe31688343e59feea08a7e0ef8b0d9efb466abfa153aec16",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:d718dda2f9c9f0a465240772ed1ca6db44789d37255172e00637a092bdd1ba31",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:d718dda2f9c9f0a465240772ed1ca6db44789d37255172e00637a092bdd1ba31",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:e137c897256501537e0986963889a91ec90cac029b5263fc4b229b278f5b1a02",
          "image": "nvcr.io/nvidia/cuda@sha256:e137c897256501537e0986963889a91ec90cac029b5263fc4b229b278f5b1a02",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:d7e0397249cd5099046506f32841535ea4f329f7b7583a6ddd9f75ff0f53385e",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:d7e0397249cd5099046506f32841535ea4f329f7b7583a6ddd9f75ff0f53385e",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:54233ebccbc3d2b388b237031907d58c3719d0e6f3ecb874349c91e8145225d2",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:54233ebccbc3d2b388b237031907d58c3719d0e6f3ecb874349c91e8145225d2",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:173639a16409d7aeba2f5ca7ccd6260ea621d280a24b8933089d6df0623bb657",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:173639a16409d7aeba2f5ca7ccd6260ea621d280a24b8933089d6df0623bb657",
          "name": "gpu-operator-173639a16409d7aeba2f5ca7ccd6260ea621d280a24b8933089d6df0623bb657-annotation"
        },
        {
          "digest": "sha256:173639a16409d7aeba2f5ca7ccd6260ea621d280a24b8933089d6df0623bb657",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:173639a16409d7aeba2f5ca7ccd6260ea621d280a24b8933089d6df0623bb657",
          "name": "gpu-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.9.1",
      "version_original": "1.9.1"
    },
    {
      "_id": "61f0ab631496e3baf4eaf9f0",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {},
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "use_ocp_driver_toolkit": true,
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {}
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:6eb5fe94f87baf4214da32a3120af1d799311c7c86d93f77efd297057c6e993b",
      "bundle_path_digest": "sha256:6eb5fe94f87baf4214da32a3120af1d799311c7c86d93f77efd297057c6e993b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.9.0",
      "creation_date": "2022-01-26T02:01:07.866000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:27:17.432000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:173639a16409d7aeba2f5ca7ccd6260ea621d280a24b8933089d6df0623bb657",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:173639a16409d7aeba2f5ca7ccd6260ea621d280a24b8933089d6df0623bb657",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:8546a3e1ca8e642d2dbbfde13ee439e8137513be9886f9fe51f4fa9c4db80198",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:8546a3e1ca8e642d2dbbfde13ee439e8137513be9886f9fe51f4fa9c4db80198",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:f4c4de8d66b2fef8cebaee6fec2fb2d15d01e835de2654df6dfd4a0ce0baec6b",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:f4c4de8d66b2fef8cebaee6fec2fb2d15d01e835de2654df6dfd4a0ce0baec6b",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:5f826e306d093332a86afa7d1e96218b5bdda8d33067931cff7914f6bb2994ee",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:5f826e306d093332a86afa7d1e96218b5bdda8d33067931cff7914f6bb2994ee",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:c9af394fe78c02acbc2fae2c43fd73030ef54ab76156b1ae566eaed53f9b4835",
          "image": "nvcr.io/nvidia/driver@sha256:c9af394fe78c02acbc2fae2c43fd73030ef54ab76156b1ae566eaed53f9b4835",
          "name": "driver-image"
        },
        {
          "digest": "sha256:69171f906efe4bbabe31688343e59feea08a7e0ef8b0d9efb466abfa153aec16",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:69171f906efe4bbabe31688343e59feea08a7e0ef8b0d9efb466abfa153aec16",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:d718dda2f9c9f0a465240772ed1ca6db44789d37255172e00637a092bdd1ba31",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:d718dda2f9c9f0a465240772ed1ca6db44789d37255172e00637a092bdd1ba31",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:e137c897256501537e0986963889a91ec90cac029b5263fc4b229b278f5b1a02",
          "image": "nvcr.io/nvidia/cuda@sha256:e137c897256501537e0986963889a91ec90cac029b5263fc4b229b278f5b1a02",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:d7e0397249cd5099046506f32841535ea4f329f7b7583a6ddd9f75ff0f53385e",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:d7e0397249cd5099046506f32841535ea4f329f7b7583a6ddd9f75ff0f53385e",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:54233ebccbc3d2b388b237031907d58c3719d0e6f3ecb874349c91e8145225d2",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:54233ebccbc3d2b388b237031907d58c3719d0e6f3ecb874349c91e8145225d2",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:173639a16409d7aeba2f5ca7ccd6260ea621d280a24b8933089d6df0623bb657",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:173639a16409d7aeba2f5ca7ccd6260ea621d280a24b8933089d6df0623bb657",
          "name": "gpu-operator-173639a16409d7aeba2f5ca7ccd6260ea621d280a24b8933089d6df0623bb657-annotation"
        },
        {
          "digest": "sha256:173639a16409d7aeba2f5ca7ccd6260ea621d280a24b8933089d6df0623bb657",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:173639a16409d7aeba2f5ca7ccd6260ea621d280a24b8933089d6df0623bb657",
          "name": "gpu-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.9.1",
      "version_original": "1.9.1"
    },
    {
      "_id": "61f0ab65020e01cfec3306d1",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {},
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "use_ocp_driver_toolkit": true,
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {}
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:6eb5fe94f87baf4214da32a3120af1d799311c7c86d93f77efd297057c6e993b",
      "bundle_path_digest": "sha256:6eb5fe94f87baf4214da32a3120af1d799311c7c86d93f77efd297057c6e993b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-26T02:01:09.165000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:13:20.974000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:173639a16409d7aeba2f5ca7ccd6260ea621d280a24b8933089d6df0623bb657",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:173639a16409d7aeba2f5ca7ccd6260ea621d280a24b8933089d6df0623bb657",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:8546a3e1ca8e642d2dbbfde13ee439e8137513be9886f9fe51f4fa9c4db80198",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:8546a3e1ca8e642d2dbbfde13ee439e8137513be9886f9fe51f4fa9c4db80198",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:f4c4de8d66b2fef8cebaee6fec2fb2d15d01e835de2654df6dfd4a0ce0baec6b",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:f4c4de8d66b2fef8cebaee6fec2fb2d15d01e835de2654df6dfd4a0ce0baec6b",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:5f826e306d093332a86afa7d1e96218b5bdda8d33067931cff7914f6bb2994ee",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:5f826e306d093332a86afa7d1e96218b5bdda8d33067931cff7914f6bb2994ee",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:c9af394fe78c02acbc2fae2c43fd73030ef54ab76156b1ae566eaed53f9b4835",
          "image": "nvcr.io/nvidia/driver@sha256:c9af394fe78c02acbc2fae2c43fd73030ef54ab76156b1ae566eaed53f9b4835",
          "name": "driver-image"
        },
        {
          "digest": "sha256:69171f906efe4bbabe31688343e59feea08a7e0ef8b0d9efb466abfa153aec16",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:69171f906efe4bbabe31688343e59feea08a7e0ef8b0d9efb466abfa153aec16",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:d718dda2f9c9f0a465240772ed1ca6db44789d37255172e00637a092bdd1ba31",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:d718dda2f9c9f0a465240772ed1ca6db44789d37255172e00637a092bdd1ba31",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:e137c897256501537e0986963889a91ec90cac029b5263fc4b229b278f5b1a02",
          "image": "nvcr.io/nvidia/cuda@sha256:e137c897256501537e0986963889a91ec90cac029b5263fc4b229b278f5b1a02",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:d7e0397249cd5099046506f32841535ea4f329f7b7583a6ddd9f75ff0f53385e",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:d7e0397249cd5099046506f32841535ea4f329f7b7583a6ddd9f75ff0f53385e",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:54233ebccbc3d2b388b237031907d58c3719d0e6f3ecb874349c91e8145225d2",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:54233ebccbc3d2b388b237031907d58c3719d0e6f3ecb874349c91e8145225d2",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:173639a16409d7aeba2f5ca7ccd6260ea621d280a24b8933089d6df0623bb657",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:173639a16409d7aeba2f5ca7ccd6260ea621d280a24b8933089d6df0623bb657",
          "name": "gpu-operator-173639a16409d7aeba2f5ca7ccd6260ea621d280a24b8933089d6df0623bb657-annotation"
        },
        {
          "digest": "sha256:173639a16409d7aeba2f5ca7ccd6260ea621d280a24b8933089d6df0623bb657",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:173639a16409d7aeba2f5ca7ccd6260ea621d280a24b8933089d6df0623bb657",
          "name": "gpu-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.9.1",
      "version_original": "1.9.1"
    },
    {
      "_id": "61f19154f7e6620075bb4c92",
      "alm_examples": [
        {
          "api_version": "storage.hpe.com/v1",
          "kind": "HPECSIDriver",
          "metadata": {
            "name": "csi-driver"
          },
          "spec": {
            "cspClientTimeout": 60,
            "disable": {
              "alletra6000": false,
              "alletra9000": false,
              "nimble": false,
              "primera": false
            },
            "disableNodeConformance": false,
            "disableNodeGetVolumeStats": false,
            "imagePullPolicy": "IfNotPresent",
            "iscsi": {
              "chapPassword": "",
              "chapUser": ""
            },
            "kubeletRootDir": "/var/lib/kubelet/",
            "logLevel": "info",
            "registry": "quay.io"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/csi-driver-operator-bundle@sha256:24d41aebe29568ac868059d453cde61e31864617870231f7b654029d841b4697",
      "bundle_path_digest": "sha256:24d41aebe29568ac868059d453cde61e31864617870231f7b654029d841b4697",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-26T18:22:12.418000+00:00",
      "csv_description": "The HPE CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE storage systems.\nThe HPE CSI Driver for Kubernetes leverages HPE storage platforms to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://scod.hpedev.io/csi_driver/index.html) for supported HPE platforms and full list of supported CSI features.\n## Installation\nRefer to the HPE CSI Operator for Kubernetes [documentation](https://scod.hpedev.io/csi_driver/deployment.html#operator).\n",
      "csv_display_name": "HPE CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE storage platforms. The CSI driver allows you to use HPE storage with your preferred container orchestrator.",
      "csv_name": "hpe-csi-operator.v2.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:53:15.084000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "hpe-csi-operator",
      "provided_apis": [
        {
          "group": "storage.hpe.com",
          "kind": "HPECSIDriver",
          "plural": "hpecsidrivers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "image": "quay.io/hpestorage/csi-driver-operator@sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "name": "hpe-csi-operator-image"
        },
        {
          "digest": "sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "image": "quay.io/hpestorage/csi-driver-operator@sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "name": "csi-driver-operator-1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a-annotation"
        },
        {
          "digest": "sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "image": "quay.io/hpestorage/csi-driver-operator@sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "name": "hpe-csi-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.1.2",
      "version_original": "2.1.2"
    },
    {
      "_id": "61f1939ff7e6620075bb4c94",
      "alm_examples": [
        {
          "api_version": "storage.hpe.com/v1",
          "kind": "HPECSIDriver",
          "metadata": {
            "name": "csi-driver"
          },
          "spec": {
            "cspClientTimeout": 60,
            "disable": {
              "alletra6000": false,
              "alletra9000": false,
              "nimble": false,
              "primera": false
            },
            "disableNodeConformance": false,
            "disableNodeGetVolumeStats": false,
            "imagePullPolicy": "IfNotPresent",
            "iscsi": {
              "chapPassword": "",
              "chapUser": ""
            },
            "kubeletRootDir": "/var/lib/kubelet/",
            "logLevel": "info",
            "registry": "quay.io"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/csi-driver-operator-bundle@sha256:24d41aebe29568ac868059d453cde61e31864617870231f7b654029d841b4697",
      "bundle_path_digest": "sha256:24d41aebe29568ac868059d453cde61e31864617870231f7b654029d841b4697",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-26T18:31:59.730000+00:00",
      "csv_description": "The HPE CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE storage systems.\nThe HPE CSI Driver for Kubernetes leverages HPE storage platforms to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://scod.hpedev.io/csi_driver/index.html) for supported HPE platforms and full list of supported CSI features.\n## Installation\nRefer to the HPE CSI Operator for Kubernetes [documentation](https://scod.hpedev.io/csi_driver/deployment.html#operator).\n",
      "csv_display_name": "HPE CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE storage platforms. The CSI driver allows you to use HPE storage with your preferred container orchestrator.",
      "csv_name": "hpe-csi-operator.v2.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T12:01:23.122000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "hpe-csi-operator",
      "provided_apis": [
        {
          "group": "storage.hpe.com",
          "kind": "HPECSIDriver",
          "plural": "hpecsidrivers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "image": "quay.io/hpestorage/csi-driver-operator@sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "name": "hpe-csi-operator-image"
        },
        {
          "digest": "sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "image": "quay.io/hpestorage/csi-driver-operator@sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "name": "csi-driver-operator-1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a-annotation"
        },
        {
          "digest": "sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "image": "quay.io/hpestorage/csi-driver-operator@sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "name": "hpe-csi-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.1.2",
      "version_original": "2.1.2"
    },
    {
      "_id": "61f196fbc7fa5a460cf512e4",
      "alm_examples": [
        {
          "api_version": "storage.hpe.com/v1",
          "kind": "HPECSIDriver",
          "metadata": {
            "name": "csi-driver"
          },
          "spec": {
            "cspClientTimeout": 60,
            "disable": {
              "alletra6000": false,
              "alletra9000": false,
              "nimble": false,
              "primera": false
            },
            "disableNodeConformance": false,
            "disableNodeGetVolumeStats": false,
            "imagePullPolicy": "IfNotPresent",
            "iscsi": {
              "chapPassword": "",
              "chapUser": ""
            },
            "kubeletRootDir": "/var/lib/kubelet/",
            "logLevel": "info",
            "registry": "quay.io"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/csi-driver-operator-bundle@sha256:24d41aebe29568ac868059d453cde61e31864617870231f7b654029d841b4697",
      "bundle_path_digest": "sha256:24d41aebe29568ac868059d453cde61e31864617870231f7b654029d841b4697",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-26T18:46:19.415000+00:00",
      "csv_description": "The HPE CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE storage systems.\nThe HPE CSI Driver for Kubernetes leverages HPE storage platforms to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://scod.hpedev.io/csi_driver/index.html) for supported HPE platforms and full list of supported CSI features.\n## Installation\nRefer to the HPE CSI Operator for Kubernetes [documentation](https://scod.hpedev.io/csi_driver/deployment.html#operator).\n",
      "csv_display_name": "HPE CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE storage platforms. The CSI driver allows you to use HPE storage with your preferred container orchestrator.",
      "csv_name": "hpe-csi-operator.v2.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:15:22.263000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "hpe-csi-operator",
      "provided_apis": [
        {
          "group": "storage.hpe.com",
          "kind": "HPECSIDriver",
          "plural": "hpecsidrivers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "image": "quay.io/hpestorage/csi-driver-operator@sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "name": "hpe-csi-operator-image"
        },
        {
          "digest": "sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "image": "quay.io/hpestorage/csi-driver-operator@sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "name": "csi-driver-operator-1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a-annotation"
        },
        {
          "digest": "sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "image": "quay.io/hpestorage/csi-driver-operator@sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "name": "hpe-csi-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.1.2",
      "version_original": "2.1.2"
    },
    {
      "_id": "61f23da0f7e6620075bb4f8f",
      "alm_examples": [
        {
          "api_version": "cis.f5.com/v1",
          "kind": "F5BigIpCtlr",
          "metadata": {
            "name": "f5-server"
          },
          "spec": {
            "args": {
              "agent": "as3",
              "bigip_partition": "<BIGIP_PARTITION>",
              "bigip_url": "<BIGIP_IP_ADDRESS>",
              "insecure": true,
              "log_as3_response": true,
              "log_level": "<DEBUG_OR_INFO>",
              "manage_routes": true,
              "openshift_sdn_name": "</BIGIP_PARTITION/SDN_NAME>",
              "pool-member-type": "<CLUSTER_OR_NODEPORT_OR_LOADBALANCER>",
              "route_vserver_addr": "<IP_ADDRESS>"
            },
            "bigip_login_secret": "<BIGIP_LOGIN_K8S_SECRET>",
            "image": {
              "pullPolicy": "Always",
              "repo": "k8s-bigip-ctlr",
              "user": "f5networks"
            },
            "ingressClass": {
              "create": false,
              "defaultController": false,
              "ingressClassName": "f5"
            },
            "namespace": "kube-system",
            "rbac": {
              "create": true
            },
            "resources": {},
            "serviceAccount": {
              "create": true
            },
            "version": "latest"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/f5networks/k8s-bigip-ctlr-operator-bundle@sha256:ae47573e19cfbc93de7bb786f12a94947a4f2c9b192632c65528c40c6b87efb9",
      "bundle_path_digest": "sha256:ae47573e19cfbc93de7bb786f12a94947a4f2c9b192632c65528c40c6b87efb9",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-27T06:37:20.597000+00:00",
      "csv_description": "## Introduction\nThis Operator installs F5 Container Ingress Services (CIS) for BIG-IP in your OpenShift Cluster. This enables to configure and deploy CIS using Helm Charts.\n## F5 Container Ingress Services for BIG-IP\nF5 Container Ingress Services (CIS) integrates with container orchestration environments to dynamically create L4/L7 services on F5 BIG-IP systems, and load balance network traffic across the services.\nMonitoring the orchestration API server, CIS is able to modify the BIG-IP system configuration based on changes made to containerized applications.\n## Documentation\nRefer to F5 documentation\n- CIS on OpenShift (https://clouddocs.f5.com/containers/latest/userguide/openshift/) - OpenShift Routes (https://clouddocs.f5.com/containers/latest/userguide/routes.html)\n## Prerequisites\nCreate BIG-IP login credentials for use with Operator Helm charts. A basic way be,\n```\noc create secret generic  <SECRET-NAME>  -n kube-system --from-literal=username=<USERNAME>  --from-literal=password=<PASSWORD>\n```\n### Support for Kubernetes networking.k8s.io/v1 Ingress resources\nCreate ingress class resource as follows if you are using networking.k8s.io/v1 ingresses in your openshift environment\n```\noc apply -f https://raw.githubusercontent.com/F5Networks/k8s-bigip-ctlr/master/docs/config_examples/ingress/networkingV1/example-default-ingress-class.yaml\n```\n### Support for CIS CustomResources\nInstall CRDs manually as follows if using CIS CustomResources (VirtualServer/TransportServer/IngressLink):\n```\noc apply -f https://raw.githubusercontent.com/F5Networks/k8s-bigip-ctlr/master/docs/config_examples/crd/Install/customresourcedefinitions.yml\n```\n",
      "csv_display_name": "F5 Container Ingress Services",
      "csv_metadata_description": "Operator to install F5 Container Ingress Services (CIS) for BIG-IP.",
      "csv_name": "f5-bigip-ctlr-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T10:53:00.312000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "f5-bigip-ctlr-operator",
      "provided_apis": [
        {
          "group": "cis.f5.com",
          "kind": "F5BigIpCtlr",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "image": "registry.connect.redhat.com/f5networks/k8s-bigip-ctlr-operator@sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "name": "k8s-bigip-ctlr-operator-560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1-annotation"
        },
        {
          "digest": "sha256:076093ea58ca42a77839d911193977a7985728607187f31d3652ce189d79900d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:076093ea58ca42a77839d911193977a7985728607187f31d3652ce189d79900d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "image": "registry.connect.redhat.com/f5networks/k8s-bigip-ctlr-operator@sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "61f23da2987289bc63e6b071",
      "alm_examples": [
        {
          "api_version": "cis.f5.com/v1",
          "kind": "F5BigIpCtlr",
          "metadata": {
            "name": "f5-server"
          },
          "spec": {
            "args": {
              "agent": "as3",
              "bigip_partition": "<BIGIP_PARTITION>",
              "bigip_url": "<BIGIP_IP_ADDRESS>",
              "insecure": true,
              "log_as3_response": true,
              "log_level": "<DEBUG_OR_INFO>",
              "manage_routes": true,
              "openshift_sdn_name": "</BIGIP_PARTITION/SDN_NAME>",
              "pool-member-type": "<CLUSTER_OR_NODEPORT_OR_LOADBALANCER>",
              "route_vserver_addr": "<IP_ADDRESS>"
            },
            "bigip_login_secret": "<BIGIP_LOGIN_K8S_SECRET>",
            "image": {
              "pullPolicy": "Always",
              "repo": "k8s-bigip-ctlr",
              "user": "f5networks"
            },
            "ingressClass": {
              "create": false,
              "defaultController": false,
              "ingressClassName": "f5"
            },
            "namespace": "kube-system",
            "rbac": {
              "create": true
            },
            "resources": {},
            "serviceAccount": {
              "create": true
            },
            "version": "latest"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/f5networks/k8s-bigip-ctlr-operator-bundle@sha256:ae47573e19cfbc93de7bb786f12a94947a4f2c9b192632c65528c40c6b87efb9",
      "bundle_path_digest": "sha256:ae47573e19cfbc93de7bb786f12a94947a4f2c9b192632c65528c40c6b87efb9",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-01-27T06:37:22.002000+00:00",
      "csv_description": "## Introduction\nThis Operator installs F5 Container Ingress Services (CIS) for BIG-IP in your OpenShift Cluster. This enables to configure and deploy CIS using Helm Charts.\n## F5 Container Ingress Services for BIG-IP\nF5 Container Ingress Services (CIS) integrates with container orchestration environments to dynamically create L4/L7 services on F5 BIG-IP systems, and load balance network traffic across the services.\nMonitoring the orchestration API server, CIS is able to modify the BIG-IP system configuration based on changes made to containerized applications.\n## Documentation\nRefer to F5 documentation\n- CIS on OpenShift (https://clouddocs.f5.com/containers/latest/userguide/openshift/) - OpenShift Routes (https://clouddocs.f5.com/containers/latest/userguide/routes.html)\n## Prerequisites\nCreate BIG-IP login credentials for use with Operator Helm charts. A basic way be,\n```\noc create secret generic  <SECRET-NAME>  -n kube-system --from-literal=username=<USERNAME>  --from-literal=password=<PASSWORD>\n```\n### Support for Kubernetes networking.k8s.io/v1 Ingress resources\nCreate ingress class resource as follows if you are using networking.k8s.io/v1 ingresses in your openshift environment\n```\noc apply -f https://raw.githubusercontent.com/F5Networks/k8s-bigip-ctlr/master/docs/config_examples/ingress/networkingV1/example-default-ingress-class.yaml\n```\n### Support for CIS CustomResources\nInstall CRDs manually as follows if using CIS CustomResources (VirtualServer/TransportServer/IngressLink):\n```\noc apply -f https://raw.githubusercontent.com/F5Networks/k8s-bigip-ctlr/master/docs/config_examples/crd/Install/customresourcedefinitions.yml\n```\n",
      "csv_display_name": "F5 Container Ingress Services",
      "csv_metadata_description": "Operator to install F5 Container Ingress Services (CIS) for BIG-IP.",
      "csv_name": "f5-bigip-ctlr-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:53:01.992000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "f5-bigip-ctlr-operator",
      "provided_apis": [
        {
          "group": "cis.f5.com",
          "kind": "F5BigIpCtlr",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "image": "registry.connect.redhat.com/f5networks/k8s-bigip-ctlr-operator@sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "name": "k8s-bigip-ctlr-operator-560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1-annotation"
        },
        {
          "digest": "sha256:076093ea58ca42a77839d911193977a7985728607187f31d3652ce189d79900d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:076093ea58ca42a77839d911193977a7985728607187f31d3652ce189d79900d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "image": "registry.connect.redhat.com/f5networks/k8s-bigip-ctlr-operator@sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "61f24235f7e6620075bb4f92",
      "alm_examples": [
        {
          "api_version": "cis.f5.com/v1",
          "kind": "F5BigIpCtlr",
          "metadata": {
            "name": "f5-server"
          },
          "spec": {
            "args": {
              "agent": "as3",
              "bigip_partition": "<BIGIP_PARTITION>",
              "bigip_url": "<BIGIP_IP_ADDRESS>",
              "insecure": true,
              "log_as3_response": true,
              "log_level": "<DEBUG_OR_INFO>",
              "manage_routes": true,
              "openshift_sdn_name": "</BIGIP_PARTITION/SDN_NAME>",
              "pool-member-type": "<CLUSTER_OR_NODEPORT_OR_LOADBALANCER>",
              "route_vserver_addr": "<IP_ADDRESS>"
            },
            "bigip_login_secret": "<BIGIP_LOGIN_K8S_SECRET>",
            "image": {
              "pullPolicy": "Always",
              "repo": "k8s-bigip-ctlr",
              "user": "f5networks"
            },
            "ingressClass": {
              "create": false,
              "defaultController": false,
              "ingressClassName": "f5"
            },
            "namespace": "kube-system",
            "rbac": {
              "create": true
            },
            "resources": {},
            "serviceAccount": {
              "create": true
            },
            "version": "latest"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/f5networks/k8s-bigip-ctlr-operator-bundle@sha256:ae47573e19cfbc93de7bb786f12a94947a4f2c9b192632c65528c40c6b87efb9",
      "bundle_path_digest": "sha256:ae47573e19cfbc93de7bb786f12a94947a4f2c9b192632c65528c40c6b87efb9",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-01-27T06:56:53.390000+00:00",
      "csv_description": "## Introduction\nThis Operator installs F5 Container Ingress Services (CIS) for BIG-IP in your OpenShift Cluster. This enables to configure and deploy CIS using Helm Charts.\n## F5 Container Ingress Services for BIG-IP\nF5 Container Ingress Services (CIS) integrates with container orchestration environments to dynamically create L4/L7 services on F5 BIG-IP systems, and load balance network traffic across the services.\nMonitoring the orchestration API server, CIS is able to modify the BIG-IP system configuration based on changes made to containerized applications.\n## Documentation\nRefer to F5 documentation\n- CIS on OpenShift (https://clouddocs.f5.com/containers/latest/userguide/openshift/) - OpenShift Routes (https://clouddocs.f5.com/containers/latest/userguide/routes.html)\n## Prerequisites\nCreate BIG-IP login credentials for use with Operator Helm charts. A basic way be,\n```\noc create secret generic  <SECRET-NAME>  -n kube-system --from-literal=username=<USERNAME>  --from-literal=password=<PASSWORD>\n```\n### Support for Kubernetes networking.k8s.io/v1 Ingress resources\nCreate ingress class resource as follows if you are using networking.k8s.io/v1 ingresses in your openshift environment\n```\noc apply -f https://raw.githubusercontent.com/F5Networks/k8s-bigip-ctlr/master/docs/config_examples/ingress/networkingV1/example-default-ingress-class.yaml\n```\n### Support for CIS CustomResources\nInstall CRDs manually as follows if using CIS CustomResources (VirtualServer/TransportServer/IngressLink):\n```\noc apply -f https://raw.githubusercontent.com/F5Networks/k8s-bigip-ctlr/master/docs/config_examples/crd/Install/customresourcedefinitions.yml\n```\n",
      "csv_display_name": "F5 Container Ingress Services",
      "csv_metadata_description": "Operator to install F5 Container Ingress Services (CIS) for BIG-IP.",
      "csv_name": "f5-bigip-ctlr-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:50:12.540000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "f5-bigip-ctlr-operator",
      "provided_apis": [
        {
          "group": "cis.f5.com",
          "kind": "F5BigIpCtlr",
          "plural": "f5bigipctlrs",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "image": "registry.connect.redhat.com/f5networks/k8s-bigip-ctlr-operator@sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "name": "k8s-bigip-ctlr-operator-560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1-annotation"
        },
        {
          "digest": "sha256:076093ea58ca42a77839d911193977a7985728607187f31d3652ce189d79900d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:076093ea58ca42a77839d911193977a7985728607187f31d3652ce189d79900d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "image": "registry.connect.redhat.com/f5networks/k8s-bigip-ctlr-operator@sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "61f242373bb9d1c1fd00a6d4",
      "alm_examples": [
        {
          "api_version": "cis.f5.com/v1",
          "kind": "F5BigIpCtlr",
          "metadata": {
            "name": "f5-server"
          },
          "spec": {
            "args": {
              "agent": "as3",
              "bigip_partition": "<BIGIP_PARTITION>",
              "bigip_url": "<BIGIP_IP_ADDRESS>",
              "insecure": true,
              "log_as3_response": true,
              "log_level": "<DEBUG_OR_INFO>",
              "manage_routes": true,
              "openshift_sdn_name": "</BIGIP_PARTITION/SDN_NAME>",
              "pool-member-type": "<CLUSTER_OR_NODEPORT_OR_LOADBALANCER>",
              "route_vserver_addr": "<IP_ADDRESS>"
            },
            "bigip_login_secret": "<BIGIP_LOGIN_K8S_SECRET>",
            "image": {
              "pullPolicy": "Always",
              "repo": "k8s-bigip-ctlr",
              "user": "f5networks"
            },
            "ingressClass": {
              "create": false,
              "defaultController": false,
              "ingressClassName": "f5"
            },
            "namespace": "kube-system",
            "rbac": {
              "create": true
            },
            "resources": {},
            "serviceAccount": {
              "create": true
            },
            "version": "latest"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/f5networks/k8s-bigip-ctlr-operator-bundle@sha256:ae47573e19cfbc93de7bb786f12a94947a4f2c9b192632c65528c40c6b87efb9",
      "bundle_path_digest": "sha256:ae47573e19cfbc93de7bb786f12a94947a4f2c9b192632c65528c40c6b87efb9",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-27T06:56:55.665000+00:00",
      "csv_description": "## Introduction\nThis Operator installs F5 Container Ingress Services (CIS) for BIG-IP in your OpenShift Cluster. This enables to configure and deploy CIS using Helm Charts.\n## F5 Container Ingress Services for BIG-IP\nF5 Container Ingress Services (CIS) integrates with container orchestration environments to dynamically create L4/L7 services on F5 BIG-IP systems, and load balance network traffic across the services.\nMonitoring the orchestration API server, CIS is able to modify the BIG-IP system configuration based on changes made to containerized applications.\n## Documentation\nRefer to F5 documentation\n- CIS on OpenShift (https://clouddocs.f5.com/containers/latest/userguide/openshift/) - OpenShift Routes (https://clouddocs.f5.com/containers/latest/userguide/routes.html)\n## Prerequisites\nCreate BIG-IP login credentials for use with Operator Helm charts. A basic way be,\n```\noc create secret generic  <SECRET-NAME>  -n kube-system --from-literal=username=<USERNAME>  --from-literal=password=<PASSWORD>\n```\n### Support for Kubernetes networking.k8s.io/v1 Ingress resources\nCreate ingress class resource as follows if you are using networking.k8s.io/v1 ingresses in your openshift environment\n```\noc apply -f https://raw.githubusercontent.com/F5Networks/k8s-bigip-ctlr/master/docs/config_examples/ingress/networkingV1/example-default-ingress-class.yaml\n```\n### Support for CIS CustomResources\nInstall CRDs manually as follows if using CIS CustomResources (VirtualServer/TransportServer/IngressLink):\n```\noc apply -f https://raw.githubusercontent.com/F5Networks/k8s-bigip-ctlr/master/docs/config_examples/crd/Install/customresourcedefinitions.yml\n```\n",
      "csv_display_name": "F5 Container Ingress Services",
      "csv_metadata_description": "Operator to install F5 Container Ingress Services (CIS) for BIG-IP.",
      "csv_name": "f5-bigip-ctlr-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:26:06.718000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "f5-bigip-ctlr-operator",
      "provided_apis": [
        {
          "group": "cis.f5.com",
          "kind": "F5BigIpCtlr",
          "plural": "f5bigipctlrs",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "image": "registry.connect.redhat.com/f5networks/k8s-bigip-ctlr-operator@sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "name": "k8s-bigip-ctlr-operator-560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1-annotation"
        },
        {
          "digest": "sha256:076093ea58ca42a77839d911193977a7985728607187f31d3652ce189d79900d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:076093ea58ca42a77839d911193977a7985728607187f31d3652ce189d79900d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "image": "registry.connect.redhat.com/f5networks/k8s-bigip-ctlr-operator@sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "61f24292c7fa5a460cf51534",
      "alm_examples": [
        {
          "api_version": "cis.f5.com/v1",
          "kind": "F5BigIpCtlr",
          "metadata": {
            "name": "f5-server"
          },
          "spec": {
            "args": {
              "agent": "as3",
              "bigip_partition": "<BIGIP_PARTITION>",
              "bigip_url": "<BIGIP_IP_ADDRESS>",
              "insecure": true,
              "log_as3_response": true,
              "log_level": "<DEBUG_OR_INFO>",
              "manage_routes": true,
              "openshift_sdn_name": "</BIGIP_PARTITION/SDN_NAME>",
              "pool-member-type": "<CLUSTER_OR_NODEPORT_OR_LOADBALANCER>",
              "route_vserver_addr": "<IP_ADDRESS>"
            },
            "bigip_login_secret": "<BIGIP_LOGIN_K8S_SECRET>",
            "image": {
              "pullPolicy": "Always",
              "repo": "k8s-bigip-ctlr",
              "user": "f5networks"
            },
            "ingressClass": {
              "create": false,
              "defaultController": false,
              "ingressClassName": "f5"
            },
            "namespace": "kube-system",
            "rbac": {
              "create": true
            },
            "resources": {},
            "serviceAccount": {
              "create": true
            },
            "version": "latest"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/f5networks/k8s-bigip-ctlr-operator-bundle@sha256:ae47573e19cfbc93de7bb786f12a94947a4f2c9b192632c65528c40c6b87efb9",
      "bundle_path_digest": "sha256:ae47573e19cfbc93de7bb786f12a94947a4f2c9b192632c65528c40c6b87efb9",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-01-27T06:58:26.457000+00:00",
      "csv_description": "## Introduction\nThis Operator installs F5 Container Ingress Services (CIS) for BIG-IP in your OpenShift Cluster. This enables to configure and deploy CIS using Helm Charts.\n## F5 Container Ingress Services for BIG-IP\nF5 Container Ingress Services (CIS) integrates with container orchestration environments to dynamically create L4/L7 services on F5 BIG-IP systems, and load balance network traffic across the services.\nMonitoring the orchestration API server, CIS is able to modify the BIG-IP system configuration based on changes made to containerized applications.\n## Documentation\nRefer to F5 documentation\n- CIS on OpenShift (https://clouddocs.f5.com/containers/latest/userguide/openshift/) - OpenShift Routes (https://clouddocs.f5.com/containers/latest/userguide/routes.html)\n## Prerequisites\nCreate BIG-IP login credentials for use with Operator Helm charts. A basic way be,\n```\noc create secret generic  <SECRET-NAME>  -n kube-system --from-literal=username=<USERNAME>  --from-literal=password=<PASSWORD>\n```\n### Support for Kubernetes networking.k8s.io/v1 Ingress resources\nCreate ingress class resource as follows if you are using networking.k8s.io/v1 ingresses in your openshift environment\n```\noc apply -f https://raw.githubusercontent.com/F5Networks/k8s-bigip-ctlr/master/docs/config_examples/ingress/networkingV1/example-default-ingress-class.yaml\n```\n### Support for CIS CustomResources\nInstall CRDs manually as follows if using CIS CustomResources (VirtualServer/TransportServer/IngressLink):\n```\noc apply -f https://raw.githubusercontent.com/F5Networks/k8s-bigip-ctlr/master/docs/config_examples/crd/Install/customresourcedefinitions.yml\n```\n",
      "csv_display_name": "F5 Container Ingress Services",
      "csv_metadata_description": "Operator to install F5 Container Ingress Services (CIS) for BIG-IP.",
      "csv_name": "f5-bigip-ctlr-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:56:34.106000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "f5-bigip-ctlr-operator",
      "provided_apis": [
        {
          "group": "cis.f5.com",
          "kind": "F5BigIpCtlr",
          "plural": "f5bigipctlrs",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "image": "registry.connect.redhat.com/f5networks/k8s-bigip-ctlr-operator@sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "name": "k8s-bigip-ctlr-operator-560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1-annotation"
        },
        {
          "digest": "sha256:076093ea58ca42a77839d911193977a7985728607187f31d3652ce189d79900d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:076093ea58ca42a77839d911193977a7985728607187f31d3652ce189d79900d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "image": "registry.connect.redhat.com/f5networks/k8s-bigip-ctlr-operator@sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "61f24294c7fa5a460cf51535",
      "alm_examples": [
        {
          "api_version": "cis.f5.com/v1",
          "kind": "F5BigIpCtlr",
          "metadata": {
            "name": "f5-server"
          },
          "spec": {
            "args": {
              "agent": "as3",
              "bigip_partition": "<BIGIP_PARTITION>",
              "bigip_url": "<BIGIP_IP_ADDRESS>",
              "insecure": true,
              "log_as3_response": true,
              "log_level": "<DEBUG_OR_INFO>",
              "manage_routes": true,
              "openshift_sdn_name": "</BIGIP_PARTITION/SDN_NAME>",
              "pool-member-type": "<CLUSTER_OR_NODEPORT_OR_LOADBALANCER>",
              "route_vserver_addr": "<IP_ADDRESS>"
            },
            "bigip_login_secret": "<BIGIP_LOGIN_K8S_SECRET>",
            "image": {
              "pullPolicy": "Always",
              "repo": "k8s-bigip-ctlr",
              "user": "f5networks"
            },
            "ingressClass": {
              "create": false,
              "defaultController": false,
              "ingressClassName": "f5"
            },
            "namespace": "kube-system",
            "rbac": {
              "create": true
            },
            "resources": {},
            "serviceAccount": {
              "create": true
            },
            "version": "latest"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/f5networks/k8s-bigip-ctlr-operator-bundle@sha256:ae47573e19cfbc93de7bb786f12a94947a4f2c9b192632c65528c40c6b87efb9",
      "bundle_path_digest": "sha256:ae47573e19cfbc93de7bb786f12a94947a4f2c9b192632c65528c40c6b87efb9",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-27T06:58:28.268000+00:00",
      "csv_description": "## Introduction\nThis Operator installs F5 Container Ingress Services (CIS) for BIG-IP in your OpenShift Cluster. This enables to configure and deploy CIS using Helm Charts.\n## F5 Container Ingress Services for BIG-IP\nF5 Container Ingress Services (CIS) integrates with container orchestration environments to dynamically create L4/L7 services on F5 BIG-IP systems, and load balance network traffic across the services.\nMonitoring the orchestration API server, CIS is able to modify the BIG-IP system configuration based on changes made to containerized applications.\n## Documentation\nRefer to F5 documentation\n- CIS on OpenShift (https://clouddocs.f5.com/containers/latest/userguide/openshift/) - OpenShift Routes (https://clouddocs.f5.com/containers/latest/userguide/routes.html)\n## Prerequisites\nCreate BIG-IP login credentials for use with Operator Helm charts. A basic way be,\n```\noc create secret generic  <SECRET-NAME>  -n kube-system --from-literal=username=<USERNAME>  --from-literal=password=<PASSWORD>\n```\n### Support for Kubernetes networking.k8s.io/v1 Ingress resources\nCreate ingress class resource as follows if you are using networking.k8s.io/v1 ingresses in your openshift environment\n```\noc apply -f https://raw.githubusercontent.com/F5Networks/k8s-bigip-ctlr/master/docs/config_examples/ingress/networkingV1/example-default-ingress-class.yaml\n```\n### Support for CIS CustomResources\nInstall CRDs manually as follows if using CIS CustomResources (VirtualServer/TransportServer/IngressLink):\n```\noc apply -f https://raw.githubusercontent.com/F5Networks/k8s-bigip-ctlr/master/docs/config_examples/crd/Install/customresourcedefinitions.yml\n```\n",
      "csv_display_name": "F5 Container Ingress Services",
      "csv_metadata_description": "Operator to install F5 Container Ingress Services (CIS) for BIG-IP.",
      "csv_name": "f5-bigip-ctlr-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:25:38.113000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "f5-bigip-ctlr-operator",
      "provided_apis": [
        {
          "group": "cis.f5.com",
          "kind": "F5BigIpCtlr",
          "plural": "f5bigipctlrs",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "image": "registry.connect.redhat.com/f5networks/k8s-bigip-ctlr-operator@sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "name": "k8s-bigip-ctlr-operator-560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1-annotation"
        },
        {
          "digest": "sha256:076093ea58ca42a77839d911193977a7985728607187f31d3652ce189d79900d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:076093ea58ca42a77839d911193977a7985728607187f31d3652ce189d79900d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "image": "registry.connect.redhat.com/f5networks/k8s-bigip-ctlr-operator@sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "61f24309f7e6620075bb4f93",
      "alm_examples": [
        {
          "api_version": "cis.f5.com/v1",
          "kind": "F5BigIpCtlr",
          "metadata": {
            "name": "f5-server"
          },
          "spec": {
            "args": {
              "agent": "as3",
              "bigip_partition": "<BIGIP_PARTITION>",
              "bigip_url": "<BIGIP_IP_ADDRESS>",
              "insecure": true,
              "log_as3_response": true,
              "log_level": "<DEBUG_OR_INFO>",
              "manage_routes": true,
              "openshift_sdn_name": "</BIGIP_PARTITION/SDN_NAME>",
              "pool-member-type": "<CLUSTER_OR_NODEPORT_OR_LOADBALANCER>",
              "route_vserver_addr": "<IP_ADDRESS>"
            },
            "bigip_login_secret": "<BIGIP_LOGIN_K8S_SECRET>",
            "image": {
              "pullPolicy": "Always",
              "repo": "k8s-bigip-ctlr",
              "user": "f5networks"
            },
            "ingressClass": {
              "create": false,
              "defaultController": false,
              "ingressClassName": "f5"
            },
            "namespace": "kube-system",
            "rbac": {
              "create": true
            },
            "resources": {},
            "serviceAccount": {
              "create": true
            },
            "version": "latest"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/f5networks/k8s-bigip-ctlr-operator-bundle@sha256:ae47573e19cfbc93de7bb786f12a94947a4f2c9b192632c65528c40c6b87efb9",
      "bundle_path_digest": "sha256:ae47573e19cfbc93de7bb786f12a94947a4f2c9b192632c65528c40c6b87efb9",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-01-27T07:00:25.338000+00:00",
      "csv_description": "## Introduction\nThis Operator installs F5 Container Ingress Services (CIS) for BIG-IP in your OpenShift Cluster. This enables to configure and deploy CIS using Helm Charts.\n## F5 Container Ingress Services for BIG-IP\nF5 Container Ingress Services (CIS) integrates with container orchestration environments to dynamically create L4/L7 services on F5 BIG-IP systems, and load balance network traffic across the services.\nMonitoring the orchestration API server, CIS is able to modify the BIG-IP system configuration based on changes made to containerized applications.\n## Documentation\nRefer to F5 documentation\n- CIS on OpenShift (https://clouddocs.f5.com/containers/latest/userguide/openshift/) - OpenShift Routes (https://clouddocs.f5.com/containers/latest/userguide/routes.html)\n## Prerequisites\nCreate BIG-IP login credentials for use with Operator Helm charts. A basic way be,\n```\noc create secret generic  <SECRET-NAME>  -n kube-system --from-literal=username=<USERNAME>  --from-literal=password=<PASSWORD>\n```\n### Support for Kubernetes networking.k8s.io/v1 Ingress resources\nCreate ingress class resource as follows if you are using networking.k8s.io/v1 ingresses in your openshift environment\n```\noc apply -f https://raw.githubusercontent.com/F5Networks/k8s-bigip-ctlr/master/docs/config_examples/ingress/networkingV1/example-default-ingress-class.yaml\n```\n### Support for CIS CustomResources\nInstall CRDs manually as follows if using CIS CustomResources (VirtualServer/TransportServer/IngressLink):\n```\noc apply -f https://raw.githubusercontent.com/F5Networks/k8s-bigip-ctlr/master/docs/config_examples/crd/Install/customresourcedefinitions.yml\n```\n",
      "csv_display_name": "F5 Container Ingress Services",
      "csv_metadata_description": "Operator to install F5 Container Ingress Services (CIS) for BIG-IP.",
      "csv_name": "f5-bigip-ctlr-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:56:14.815000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "f5-bigip-ctlr-operator",
      "provided_apis": [
        {
          "group": "cis.f5.com",
          "kind": "F5BigIpCtlr",
          "plural": "f5bigipctlrs",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "image": "registry.connect.redhat.com/f5networks/k8s-bigip-ctlr-operator@sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "name": "k8s-bigip-ctlr-operator-560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1-annotation"
        },
        {
          "digest": "sha256:076093ea58ca42a77839d911193977a7985728607187f31d3652ce189d79900d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:076093ea58ca42a77839d911193977a7985728607187f31d3652ce189d79900d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "image": "registry.connect.redhat.com/f5networks/k8s-bigip-ctlr-operator@sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "61f2430af7e6620075bb4f94",
      "alm_examples": [
        {
          "api_version": "cis.f5.com/v1",
          "kind": "F5BigIpCtlr",
          "metadata": {
            "name": "f5-server"
          },
          "spec": {
            "args": {
              "agent": "as3",
              "bigip_partition": "<BIGIP_PARTITION>",
              "bigip_url": "<BIGIP_IP_ADDRESS>",
              "insecure": true,
              "log_as3_response": true,
              "log_level": "<DEBUG_OR_INFO>",
              "manage_routes": true,
              "openshift_sdn_name": "</BIGIP_PARTITION/SDN_NAME>",
              "pool-member-type": "<CLUSTER_OR_NODEPORT_OR_LOADBALANCER>",
              "route_vserver_addr": "<IP_ADDRESS>"
            },
            "bigip_login_secret": "<BIGIP_LOGIN_K8S_SECRET>",
            "image": {
              "pullPolicy": "Always",
              "repo": "k8s-bigip-ctlr",
              "user": "f5networks"
            },
            "ingressClass": {
              "create": false,
              "defaultController": false,
              "ingressClassName": "f5"
            },
            "namespace": "kube-system",
            "rbac": {
              "create": true
            },
            "resources": {},
            "serviceAccount": {
              "create": true
            },
            "version": "latest"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/f5networks/k8s-bigip-ctlr-operator-bundle@sha256:ae47573e19cfbc93de7bb786f12a94947a4f2c9b192632c65528c40c6b87efb9",
      "bundle_path_digest": "sha256:ae47573e19cfbc93de7bb786f12a94947a4f2c9b192632c65528c40c6b87efb9",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-27T07:00:26.817000+00:00",
      "csv_description": "## Introduction\nThis Operator installs F5 Container Ingress Services (CIS) for BIG-IP in your OpenShift Cluster. This enables to configure and deploy CIS using Helm Charts.\n## F5 Container Ingress Services for BIG-IP\nF5 Container Ingress Services (CIS) integrates with container orchestration environments to dynamically create L4/L7 services on F5 BIG-IP systems, and load balance network traffic across the services.\nMonitoring the orchestration API server, CIS is able to modify the BIG-IP system configuration based on changes made to containerized applications.\n## Documentation\nRefer to F5 documentation\n- CIS on OpenShift (https://clouddocs.f5.com/containers/latest/userguide/openshift/) - OpenShift Routes (https://clouddocs.f5.com/containers/latest/userguide/routes.html)\n## Prerequisites\nCreate BIG-IP login credentials for use with Operator Helm charts. A basic way be,\n```\noc create secret generic  <SECRET-NAME>  -n kube-system --from-literal=username=<USERNAME>  --from-literal=password=<PASSWORD>\n```\n### Support for Kubernetes networking.k8s.io/v1 Ingress resources\nCreate ingress class resource as follows if you are using networking.k8s.io/v1 ingresses in your openshift environment\n```\noc apply -f https://raw.githubusercontent.com/F5Networks/k8s-bigip-ctlr/master/docs/config_examples/ingress/networkingV1/example-default-ingress-class.yaml\n```\n### Support for CIS CustomResources\nInstall CRDs manually as follows if using CIS CustomResources (VirtualServer/TransportServer/IngressLink):\n```\noc apply -f https://raw.githubusercontent.com/F5Networks/k8s-bigip-ctlr/master/docs/config_examples/crd/Install/customresourcedefinitions.yml\n```\n",
      "csv_display_name": "F5 Container Ingress Services",
      "csv_metadata_description": "Operator to install F5 Container Ingress Services (CIS) for BIG-IP.",
      "csv_name": "f5-bigip-ctlr-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T12:01:17.839000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "f5-bigip-ctlr-operator",
      "provided_apis": [
        {
          "group": "cis.f5.com",
          "kind": "F5BigIpCtlr",
          "plural": "f5bigipctlrs",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "image": "registry.connect.redhat.com/f5networks/k8s-bigip-ctlr-operator@sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "name": "k8s-bigip-ctlr-operator-560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1-annotation"
        },
        {
          "digest": "sha256:076093ea58ca42a77839d911193977a7985728607187f31d3652ce189d79900d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:076093ea58ca42a77839d911193977a7985728607187f31d3652ce189d79900d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "image": "registry.connect.redhat.com/f5networks/k8s-bigip-ctlr-operator@sha256:560aff6297fa8d5c13d830b0186035205abb1785d62f310a268054fbfd3ae7d1",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "61f2a139aef65e7fce459a1d",
      "alm_examples": [
        {
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            },
            "route": true,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            }
          }
        },
        {
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            },
            "token": "<<your-token>>"
          }
        },
        {
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway.aqua:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.2"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            }
          }
        },
        {
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            }
          }
        },
        {
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.2"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:5b52a4f073c00a03805d9eb815f5a69a044822431b0b1224c44ba85f5f8a5e52",
      "bundle_path_digest": "sha256:5b52a4f073c00a03805d9eb815f5a69a044822431b0b1224c44ba85f5f8a5e52",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.2",
      "creation_date": "2022-01-27T13:42:17.553000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.2.22020",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:31:01.874000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5e4742e82b54d834bd07ade4469d03e2b5994b4e14ab9d8514d4274811d66031",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:5e4742e82b54d834bd07ade4469d03e2b5994b4e14ab9d8514d4274811d66031",
          "name": "aquasec-5e4742e82b54d834bd07ade4469d03e2b5994b4e14ab9d8514d4274811d66031-annotation"
        },
        {
          "digest": "sha256:5e4742e82b54d834bd07ade4469d03e2b5994b4e14ab9d8514d4274811d66031",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:5e4742e82b54d834bd07ade4469d03e2b5994b4e14ab9d8514d4274811d66031",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:058cf7349adc4e91ab980132ba9229ebd388cd49296c547f7074e118e928ace6",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:058cf7349adc4e91ab980132ba9229ebd388cd49296c547f7074e118e928ace6",
          "name": "gateway"
        },
        {
          "digest": "sha256:65ebfa69753987e407876a69fba7985c39d3cf7590a9a3546bc5798f98f1ccc9",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:65ebfa69753987e407876a69fba7985c39d3cf7590a9a3546bc5798f98f1ccc9",
          "name": "server"
        },
        {
          "digest": "sha256:33efebe75e947f5769afe5337c89a00583aafc7925d881db5df672f3da2fbc0b",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:33efebe75e947f5769afe5337c89a00583aafc7925d881db5df672f3da2fbc0b",
          "name": "scanner"
        },
        {
          "digest": "sha256:f9028eb7724ffadc119fe3a126c5d276844ec7ca562285445e3f4ab7229e8c1a",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:f9028eb7724ffadc119fe3a126c5d276844ec7ca562285445e3f4ab7229e8c1a",
          "name": "enforcer"
        },
        {
          "digest": "sha256:a6866c31c235a038c47a0ff252973e1ce98cc8df21c0f69f1af27784ce3814b0",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:a6866c31c235a038c47a0ff252973e1ce98cc8df21c0f69f1af27784ce3814b0",
          "name": "kube_enforcer"
        }
      ],
      "skip_range": ">=1.0.2 <6.2.22020",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.2.22020",
      "version_original": "6.2.22020"
    },
    {
      "_id": "61f2ddac34b2919e2995e7c8",
      "alm_examples": [
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AirgappedDeployment",
          "metadata": {
            "name": "airgappeddeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AnalyticsProxy",
          "metadata": {
            "name": "analyticsproxy"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "DeleteCluster",
          "metadata": {
            "name": "deletecluster"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "FullDeployment",
          "metadata": {
            "name": "fulldeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "GenerateKey",
          "metadata": {
            "name": "bas-api-key"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "StoreForwardMetric",
          "metadata": {
            "name": "storeforwardmetric"
          },
          "spec": {
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "Dashboard",
          "metadata": {
            "name": "dashboard"
          },
          "spec": {
            "enable_test_api": true,
            "image_pull_secret": "bas-images-pull-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator-bundle@sha256:3a1294e871bc1418b888411afb5c5212e3d949f1a12472c74169953cadf2dd57",
      "bundle_path_digest": "sha256:3a1294e871bc1418b888411afb5c5212e3d949f1a12472c74169953cadf2dd57",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-27T18:00:12.118000+00:00",
      "csv_description": "Behavior Analytics Services Operator is a service that collects, transforms and transmits product usage data.\nThe Operator supports deployments using-\nA. Dashboard\nB. Openshift portal or CLI\n\n**A. Dashboard**\n----\nWhen the Operator is installed, the Dashboard is installed too. Goto the Dashboard Custom Resource to get the URL to the Dashboard.\n\n\n**B. Openshift portal or CLI**\n----\n----\nFor manual installation using Openshift portal or CLI, follow the steps below\n\n\n**Pre-requisites**\n----\nStep 1: Create a new Project\n```sh\noc new-project <project-name>\n```\n\nStep 2: Create a secret named \"database-credentials\" for PostgreSQL DB\n```sh\n oc create secret generic database-credentials --from-literal=db_username=<DB Username> --from-literal=db_password=<DB Password> -n <project-name>\n```\n\nStep 3: [Optional] If the images require a secret to pull the container images, create a secret of type dockerconfigjson. Pass this secret name in the CR spec image\\_pull\\_secret\n```sh\noc create secret generic bas-images-pull-secret --from-file=.dockerconfigjson=<path/to/.docker/config.json>  --type=kubernetes.io/dockerconfigjson\n```\n\nStep 4: Create a secret named \"mtls-proxy-secret\" which has the client key and certificate to connect to IBM Proxy service. If you don't have certificates then refer link https://developers.cloudflare.com/access/service-auth/mtls-testing#generating-the-root-ca to create root and client certificates. Please ensure to share root certificate with edge@us.ibm.com to allow access to IBM proxy service using client certificate.\n```sh\noc create secret tls mtls-proxy-secret --key client-key.pem --cert client.pem\n```\n\n**Installing the Behavior Analytics Services**\n----\n\nSelect any one of the deployments to setup the Behavior Analytics Services\n1. Full Deployment\n2. Analytics Proxy Deployment\n3. Store and Forward metrics Deployment\n4. Airgapped Analytics Proxy Deployment\n\n| Spec                                                      | Description                                                      | Default Value          |\n| --------------------------------------------------------- | ------------------------------------------------------------ | ---------------------- |\n| `ibmproxyurl`                                               | URL of IBM Proxy Service                                     | `https://iaps.ibm.com`   |\n| `postgres.storage_class`                                    | Storage class of type ReadWriteOnce                          | Required user input        |\n| `postgres.size`                                             | Size (in G) of the storage to be attached to Database        | `10G`                    |\n| `kafka.storage_class`                                       | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.storage_size`                                        | Size (in G) of the storage to be attached to Kafka  | `5G`                     |\n| `kafka.zookeeper_storage_class`                                 | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.zookeeper_storage_size`                                 | Size (in G) of the storage to be attached to Zookeeper | `5G`                     |\n| `airgapped.enabled`                                         | Set value to \"true\" if airgapped setup is to be enabled otherwise keep the default value \"false\" | `false`                  |\n| `airgapped.backup_retention_period`   | Number of days to keep the backup files in the storage       | `7`                     |\n| `airgapped.backup_deletion_frequency` | Frequency of job to delete files from the storage. It accepts values in Cron format (https://en.wikipedia.org/wiki/Cron) | `@daily`                 |\n| `event_scheduler_frequency`                               | Frequency at which events will be forwarded to proxy in Cron format. In case if internet connection available on the cluster only during a certain time frame, specify time in UTC equivalent Cron format. | `@hourly`                |\n| `prometheus_scheduler_frequency`                          | Frequency in Cronjob format to pull metrics from Prometheus  | `@daily`                |\n| `image_pull_secret`                                       | Secret to pull container images from registry                | `bas-images-pull-secret` |\n| `db_archive.frequency`                                    | Frequency in Cronjob format to run archive job                                                           | `@monthly`             |\n| `db_archive.retention_age`                                | Number of months to retain the data in Database              | `6`                    |\n| `db_archive.persistent_storage.storage_class`             |Storage class of type ReadWriteMany         | Required user input    |\n| `db_archive.persistent_storage.storage_size`              | Size (in G) of the storage to be attached for saving airgapped files | `10G`                  |\n| `prometheus_metrics`                                      | Array of metrics information to be send to destination at desired frequency | []\n| `env_type`              | Type of environment. Can be **prod** (HA) or **lite** (non HA)   | `lite`                  |\n| `allowed_domains`                                         | Comma separated values of domains allowed by BAS. By default all domains are allowed | '*'\n\n\n**Generating the API Key**\n----\nOnce the deployment is complete, to use the Behavior Analytics Services Endpoints, generate an API key using the CR GenerateKey. This API key to be used to authenticate Behavior Analytics Services Endpoints.\n\nNote- Key can be retrieved from the secret with same name used while creating Generate Key CR's instance.\nOnce you get key from the secret, decode it using below command:\n```sh\necho -n <secret key> | base64 -d\n```\n\n**Deleting the API Key**\n----\nTo revoke the Key, delete the corresponding GenerateKey instance.\n\n**Using Behavior Analytics Services Endpoints**\n---\nFor all BAS APIs, use the Generated API Key for Authentication. Pass it as the Header- X-API-KEY and the key while using the APIs.\n",
      "csv_display_name": "Behavior Analytics Services",
      "csv_metadata_description": "Behavior Analytics Services is a service that collects, transforms and transmits product usage data.",
      "csv_name": "behavior-analytics-services-operator-certified.v1.1.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:41:28.326000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "behavior-analytics-services-operator-certified",
      "provided_apis": [
        {
          "group": "bas.ibm.com",
          "kind": "DeleteCluster",
          "plural": "deleteclusters",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "FullDeployment",
          "plural": "fulldeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "GenerateKey",
          "plural": "generatekeys",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "StoreForwardMetric",
          "plural": "storeforwardmetrics",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AirgappedDeployment",
          "plural": "airgappeddeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AnalyticsProxy",
          "plural": "analyticsproxies",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "Dashboard",
          "plural": "dashboards",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:59d0b0902d4a56720e889dab1b805d575db135d9e20eb9dfb00d503c4572d4a1",
          "image": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator@sha256:59d0b0902d4a56720e889dab1b805d575db135d9e20eb9dfb00d503c4572d4a1",
          "name": "behavior-analytics-services-operator"
        },
        {
          "digest": "sha256:8e0f1d33edf005eb2dfafed9b8367435b0f33ef4adf006bc75338f2a88e8942c",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:8e0f1d33edf005eb2dfafed9b8367435b0f33ef4adf006bc75338f2a88e8942c",
          "name": "dashboardinstaller"
        },
        {
          "digest": "sha256:239939ea3c5d24666f31e1d0ea281dd9664fcfe8139ee6d4b686b402ad64e5df",
          "image": "registry.connect.redhat.com/ibm-edge/event-api@sha256:239939ea3c5d24666f31e1d0ea281dd9664fcfe8139ee6d4b686b402ad64e5df",
          "name": "event_api"
        },
        {
          "digest": "sha256:6195b9dd602469d7cb3a92b2d071471d37980a6512ed604468a342ccd2ab2d42",
          "image": "registry.connect.redhat.com/ibm-edge/store-api@sha256:6195b9dd602469d7cb3a92b2d071471d37980a6512ed604468a342ccd2ab2d42",
          "name": "store_api"
        },
        {
          "digest": "sha256:96c726cbc10c44169aa5f84e77dd408ddad124ca7580575a459ed38908e3a99b",
          "image": "registry.connect.redhat.com/ibm-edge/event-reader@sha256:96c726cbc10c44169aa5f84e77dd408ddad124ca7580575a459ed38908e3a99b",
          "name": "reader"
        },
        {
          "digest": "sha256:6f2a627cdc0e5a05a351c160bc0dc8b73d886e7b4f93cd94a4c25acff869818e",
          "image": "registry.connect.redhat.com/ibm-edge/event-scheduler@sha256:6f2a627cdc0e5a05a351c160bc0dc8b73d886e7b4f93cd94a4c25acff869818e",
          "name": "event_scheduler"
        },
        {
          "digest": "sha256:e8dd581088cd9b008ce8a29f43d2ce22974dfaadfbfe9faba3370917717686ee",
          "image": "registry.connect.redhat.com/ibm-edge/prometheus-scheduler@sha256:e8dd581088cd9b008ce8a29f43d2ce22974dfaadfbfe9faba3370917717686ee",
          "name": "prometheus_scheduler"
        },
        {
          "digest": "sha256:90ddecb54abe2880b86016a407507cecf77a113b4c7724235ab0abd21ad1d9aa",
          "image": "registry.connect.redhat.com/ibm-edge/pgo-client@sha256:90ddecb54abe2880b86016a407507cecf77a113b4c7724235ab0abd21ad1d9aa",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:815630d23e8d88664907fbf8096952adfd22593a4989063e9dd55549e674ee15",
          "image": "registry.connect.redhat.com/ibm-edge/reverse-proxy@sha256:815630d23e8d88664907fbf8096952adfd22593a4989063e9dd55549e674ee15",
          "name": "nginx"
        },
        {
          "digest": "sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "image": "registry.redhat.io/openshift4/ose-grafana@sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "name": "grafana"
        },
        {
          "digest": "sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "image": "registry.redhat.io/openshift3/ose-kube-state-metrics@sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "name": "ksm"
        },
        {
          "digest": "sha256:3288307dd03844ec3574ca5c173d7f608755fd23654434c48ea2e854fe0f22cf",
          "image": "registry.connect.redhat.com/ibm-edge/growth-stack-base@sha256:3288307dd03844ec3574ca5c173d7f608755fd23654434c48ea2e854fe0f22cf",
          "name": "init_container"
        },
        {
          "digest": "sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "image": "registry.access.redhat.com/ubi8/ubi@sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "name": "ubi"
        },
        {
          "digest": "sha256:19a8b33e2f4c2beee5266d5243abb7f43d85322fc62800899759cdf6ec568fee",
          "image": "registry.connect.redhat.com/ibm-edge/airgap-download-ui@sha256:19a8b33e2f4c2beee5266d5243abb7f43d85322fc62800899759cdf6ec568fee",
          "name": "download_ui"
        },
        {
          "digest": "sha256:9f6eae3e715d9aff6d9674059fb6bf4f6dfc3ad42f015200c69b481becd7abd9",
          "image": "registry.connect.redhat.com/ibm-edge/bas-operator-dashboard@sha256:9f6eae3e715d9aff6d9674059fb6bf4f6dfc3ad42f015200c69b481becd7abd9",
          "name": "dashboard_ui"
        },
        {
          "digest": "sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "image": "registry.connect.redhat.com/crunchydata/pgo-deployer@sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "name": "pgo_deployer"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.1.4",
      "version_original": "1.1.4"
    },
    {
      "_id": "61f2ddc0f385723914ed60b5",
      "alm_examples": [
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AirgappedDeployment",
          "metadata": {
            "name": "airgappeddeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AnalyticsProxy",
          "metadata": {
            "name": "analyticsproxy"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "DeleteCluster",
          "metadata": {
            "name": "deletecluster"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "FullDeployment",
          "metadata": {
            "name": "fulldeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "GenerateKey",
          "metadata": {
            "name": "bas-api-key"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "StoreForwardMetric",
          "metadata": {
            "name": "storeforwardmetric"
          },
          "spec": {
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "Dashboard",
          "metadata": {
            "name": "dashboard"
          },
          "spec": {
            "enable_test_api": true,
            "image_pull_secret": "bas-images-pull-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator-bundle@sha256:3a1294e871bc1418b888411afb5c5212e3d949f1a12472c74169953cadf2dd57",
      "bundle_path_digest": "sha256:3a1294e871bc1418b888411afb5c5212e3d949f1a12472c74169953cadf2dd57",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-27T18:00:32.238000+00:00",
      "csv_description": "Behavior Analytics Services Operator is a service that collects, transforms and transmits product usage data.\nThe Operator supports deployments using-\nA. Dashboard\nB. Openshift portal or CLI\n\n**A. Dashboard**\n----\nWhen the Operator is installed, the Dashboard is installed too. Goto the Dashboard Custom Resource to get the URL to the Dashboard.\n\n\n**B. Openshift portal or CLI**\n----\n----\nFor manual installation using Openshift portal or CLI, follow the steps below\n\n\n**Pre-requisites**\n----\nStep 1: Create a new Project\n```sh\noc new-project <project-name>\n```\n\nStep 2: Create a secret named \"database-credentials\" for PostgreSQL DB\n```sh\n oc create secret generic database-credentials --from-literal=db_username=<DB Username> --from-literal=db_password=<DB Password> -n <project-name>\n```\n\nStep 3: [Optional] If the images require a secret to pull the container images, create a secret of type dockerconfigjson. Pass this secret name in the CR spec image\\_pull\\_secret\n```sh\noc create secret generic bas-images-pull-secret --from-file=.dockerconfigjson=<path/to/.docker/config.json>  --type=kubernetes.io/dockerconfigjson\n```\n\nStep 4: Create a secret named \"mtls-proxy-secret\" which has the client key and certificate to connect to IBM Proxy service. If you don't have certificates then refer link https://developers.cloudflare.com/access/service-auth/mtls-testing#generating-the-root-ca to create root and client certificates. Please ensure to share root certificate with edge@us.ibm.com to allow access to IBM proxy service using client certificate.\n```sh\noc create secret tls mtls-proxy-secret --key client-key.pem --cert client.pem\n```\n\n**Installing the Behavior Analytics Services**\n----\n\nSelect any one of the deployments to setup the Behavior Analytics Services\n1. Full Deployment\n2. Analytics Proxy Deployment\n3. Store and Forward metrics Deployment\n4. Airgapped Analytics Proxy Deployment\n\n| Spec                                                      | Description                                                      | Default Value          |\n| --------------------------------------------------------- | ------------------------------------------------------------ | ---------------------- |\n| `ibmproxyurl`                                               | URL of IBM Proxy Service                                     | `https://iaps.ibm.com`   |\n| `postgres.storage_class`                                    | Storage class of type ReadWriteOnce                          | Required user input        |\n| `postgres.size`                                             | Size (in G) of the storage to be attached to Database        | `10G`                    |\n| `kafka.storage_class`                                       | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.storage_size`                                        | Size (in G) of the storage to be attached to Kafka  | `5G`                     |\n| `kafka.zookeeper_storage_class`                                 | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.zookeeper_storage_size`                                 | Size (in G) of the storage to be attached to Zookeeper | `5G`                     |\n| `airgapped.enabled`                                         | Set value to \"true\" if airgapped setup is to be enabled otherwise keep the default value \"false\" | `false`                  |\n| `airgapped.backup_retention_period`   | Number of days to keep the backup files in the storage       | `7`                     |\n| `airgapped.backup_deletion_frequency` | Frequency of job to delete files from the storage. It accepts values in Cron format (https://en.wikipedia.org/wiki/Cron) | `@daily`                 |\n| `event_scheduler_frequency`                               | Frequency at which events will be forwarded to proxy in Cron format. In case if internet connection available on the cluster only during a certain time frame, specify time in UTC equivalent Cron format. | `@hourly`                |\n| `prometheus_scheduler_frequency`                          | Frequency in Cronjob format to pull metrics from Prometheus  | `@daily`                |\n| `image_pull_secret`                                       | Secret to pull container images from registry                | `bas-images-pull-secret` |\n| `db_archive.frequency`                                    | Frequency in Cronjob format to run archive job                                                           | `@monthly`             |\n| `db_archive.retention_age`                                | Number of months to retain the data in Database              | `6`                    |\n| `db_archive.persistent_storage.storage_class`             |Storage class of type ReadWriteMany         | Required user input    |\n| `db_archive.persistent_storage.storage_size`              | Size (in G) of the storage to be attached for saving airgapped files | `10G`                  |\n| `prometheus_metrics`                                      | Array of metrics information to be send to destination at desired frequency | []\n| `env_type`              | Type of environment. Can be **prod** (HA) or **lite** (non HA)   | `lite`                  |\n| `allowed_domains`                                         | Comma separated values of domains allowed by BAS. By default all domains are allowed | '*'\n\n\n**Generating the API Key**\n----\nOnce the deployment is complete, to use the Behavior Analytics Services Endpoints, generate an API key using the CR GenerateKey. This API key to be used to authenticate Behavior Analytics Services Endpoints.\n\nNote- Key can be retrieved from the secret with same name used while creating Generate Key CR's instance.\nOnce you get key from the secret, decode it using below command:\n```sh\necho -n <secret key> | base64 -d\n```\n\n**Deleting the API Key**\n----\nTo revoke the Key, delete the corresponding GenerateKey instance.\n\n**Using Behavior Analytics Services Endpoints**\n---\nFor all BAS APIs, use the Generated API Key for Authentication. Pass it as the Header- X-API-KEY and the key while using the APIs.\n",
      "csv_display_name": "Behavior Analytics Services",
      "csv_metadata_description": "Behavior Analytics Services is a service that collects, transforms and transmits product usage data.",
      "csv_name": "behavior-analytics-services-operator-certified.v1.1.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:41:18.929000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "behavior-analytics-services-operator-certified",
      "provided_apis": [
        {
          "group": "bas.ibm.com",
          "kind": "AirgappedDeployment",
          "plural": "airgappeddeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AnalyticsProxy",
          "plural": "analyticsproxies",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "Dashboard",
          "plural": "dashboards",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "DeleteCluster",
          "plural": "deleteclusters",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "FullDeployment",
          "plural": "fulldeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "GenerateKey",
          "plural": "generatekeys",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "StoreForwardMetric",
          "plural": "storeforwardmetrics",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:59d0b0902d4a56720e889dab1b805d575db135d9e20eb9dfb00d503c4572d4a1",
          "image": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator@sha256:59d0b0902d4a56720e889dab1b805d575db135d9e20eb9dfb00d503c4572d4a1",
          "name": "behavior-analytics-services-operator"
        },
        {
          "digest": "sha256:8e0f1d33edf005eb2dfafed9b8367435b0f33ef4adf006bc75338f2a88e8942c",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:8e0f1d33edf005eb2dfafed9b8367435b0f33ef4adf006bc75338f2a88e8942c",
          "name": "dashboardinstaller"
        },
        {
          "digest": "sha256:239939ea3c5d24666f31e1d0ea281dd9664fcfe8139ee6d4b686b402ad64e5df",
          "image": "registry.connect.redhat.com/ibm-edge/event-api@sha256:239939ea3c5d24666f31e1d0ea281dd9664fcfe8139ee6d4b686b402ad64e5df",
          "name": "event_api"
        },
        {
          "digest": "sha256:6195b9dd602469d7cb3a92b2d071471d37980a6512ed604468a342ccd2ab2d42",
          "image": "registry.connect.redhat.com/ibm-edge/store-api@sha256:6195b9dd602469d7cb3a92b2d071471d37980a6512ed604468a342ccd2ab2d42",
          "name": "store_api"
        },
        {
          "digest": "sha256:96c726cbc10c44169aa5f84e77dd408ddad124ca7580575a459ed38908e3a99b",
          "image": "registry.connect.redhat.com/ibm-edge/event-reader@sha256:96c726cbc10c44169aa5f84e77dd408ddad124ca7580575a459ed38908e3a99b",
          "name": "reader"
        },
        {
          "digest": "sha256:6f2a627cdc0e5a05a351c160bc0dc8b73d886e7b4f93cd94a4c25acff869818e",
          "image": "registry.connect.redhat.com/ibm-edge/event-scheduler@sha256:6f2a627cdc0e5a05a351c160bc0dc8b73d886e7b4f93cd94a4c25acff869818e",
          "name": "event_scheduler"
        },
        {
          "digest": "sha256:e8dd581088cd9b008ce8a29f43d2ce22974dfaadfbfe9faba3370917717686ee",
          "image": "registry.connect.redhat.com/ibm-edge/prometheus-scheduler@sha256:e8dd581088cd9b008ce8a29f43d2ce22974dfaadfbfe9faba3370917717686ee",
          "name": "prometheus_scheduler"
        },
        {
          "digest": "sha256:90ddecb54abe2880b86016a407507cecf77a113b4c7724235ab0abd21ad1d9aa",
          "image": "registry.connect.redhat.com/ibm-edge/pgo-client@sha256:90ddecb54abe2880b86016a407507cecf77a113b4c7724235ab0abd21ad1d9aa",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:815630d23e8d88664907fbf8096952adfd22593a4989063e9dd55549e674ee15",
          "image": "registry.connect.redhat.com/ibm-edge/reverse-proxy@sha256:815630d23e8d88664907fbf8096952adfd22593a4989063e9dd55549e674ee15",
          "name": "nginx"
        },
        {
          "digest": "sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "image": "registry.redhat.io/openshift4/ose-grafana@sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "name": "grafana"
        },
        {
          "digest": "sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "image": "registry.redhat.io/openshift3/ose-kube-state-metrics@sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "name": "ksm"
        },
        {
          "digest": "sha256:3288307dd03844ec3574ca5c173d7f608755fd23654434c48ea2e854fe0f22cf",
          "image": "registry.connect.redhat.com/ibm-edge/growth-stack-base@sha256:3288307dd03844ec3574ca5c173d7f608755fd23654434c48ea2e854fe0f22cf",
          "name": "init_container"
        },
        {
          "digest": "sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "image": "registry.access.redhat.com/ubi8/ubi@sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "name": "ubi"
        },
        {
          "digest": "sha256:19a8b33e2f4c2beee5266d5243abb7f43d85322fc62800899759cdf6ec568fee",
          "image": "registry.connect.redhat.com/ibm-edge/airgap-download-ui@sha256:19a8b33e2f4c2beee5266d5243abb7f43d85322fc62800899759cdf6ec568fee",
          "name": "download_ui"
        },
        {
          "digest": "sha256:9f6eae3e715d9aff6d9674059fb6bf4f6dfc3ad42f015200c69b481becd7abd9",
          "image": "registry.connect.redhat.com/ibm-edge/bas-operator-dashboard@sha256:9f6eae3e715d9aff6d9674059fb6bf4f6dfc3ad42f015200c69b481becd7abd9",
          "name": "dashboard_ui"
        },
        {
          "digest": "sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "image": "registry.connect.redhat.com/crunchydata/pgo-deployer@sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "name": "pgo_deployer"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.1.4",
      "version_original": "1.1.4"
    },
    {
      "_id": "61f2dfe945c1d5cee979535d",
      "alm_examples": [
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AirgappedDeployment",
          "metadata": {
            "name": "airgappeddeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "AnalyticsProxy",
          "metadata": {
            "name": "analyticsproxy"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "DeleteCluster",
          "metadata": {
            "name": "deletecluster"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "FullDeployment",
          "metadata": {
            "name": "fulldeployment"
          },
          "spec": {
            "airgapped": {
              "backup_deletion_frequency": "@daily",
              "backup_retention_period": 7,
              "enabled": false
            },
            "allowed_domains": "*",
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "kafka": {
              "storage#": "5G",
              "storage_class": "ibmc-block-bronze",
              "zookeeper_storage#": "5G",
              "zookeeper_storage_class": "ibmc-block-bronze"
            },
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "GenerateKey",
          "metadata": {
            "name": "bas-api-key"
          },
          "spec": {
            "image_pull_secret": "bas-images-pull-secret"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "StoreForwardMetric",
          "metadata": {
            "name": "storeforwardmetric"
          },
          "spec": {
            "db_archive": {
              "frequency": "@monthly",
              "persistent_storage": {
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              },
              "retention_age": 6
            },
            "env_type": "lite",
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "bas-images-pull-secret",
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_metrics": [],
            "prometheus_scheduler_frequency": "@daily"
          }
        },
        {
          "api_version": "bas.ibm.com/v1",
          "kind": "Dashboard",
          "metadata": {
            "name": "dashboard"
          },
          "spec": {
            "enable_test_api": true,
            "image_pull_secret": "bas-images-pull-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator-bundle@sha256:3a1294e871bc1418b888411afb5c5212e3d949f1a12472c74169953cadf2dd57",
      "bundle_path_digest": "sha256:3a1294e871bc1418b888411afb5c5212e3d949f1a12472c74169953cadf2dd57",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-27T18:09:45.526000+00:00",
      "csv_description": "Behavior Analytics Services Operator is a service that collects, transforms and transmits product usage data.\nThe Operator supports deployments using-\nA. Dashboard\nB. Openshift portal or CLI\n\n**A. Dashboard**\n----\nWhen the Operator is installed, the Dashboard is installed too. Goto the Dashboard Custom Resource to get the URL to the Dashboard.\n\n\n**B. Openshift portal or CLI**\n----\n----\nFor manual installation using Openshift portal or CLI, follow the steps below\n\n\n**Pre-requisites**\n----\nStep 1: Create a new Project\n```sh\noc new-project <project-name>\n```\n\nStep 2: Create a secret named \"database-credentials\" for PostgreSQL DB\n```sh\n oc create secret generic database-credentials --from-literal=db_username=<DB Username> --from-literal=db_password=<DB Password> -n <project-name>\n```\n\nStep 3: [Optional] If the images require a secret to pull the container images, create a secret of type dockerconfigjson. Pass this secret name in the CR spec image\\_pull\\_secret\n```sh\noc create secret generic bas-images-pull-secret --from-file=.dockerconfigjson=<path/to/.docker/config.json>  --type=kubernetes.io/dockerconfigjson\n```\n\nStep 4: Create a secret named \"mtls-proxy-secret\" which has the client key and certificate to connect to IBM Proxy service. If you don't have certificates then refer link https://developers.cloudflare.com/access/service-auth/mtls-testing#generating-the-root-ca to create root and client certificates. Please ensure to share root certificate with edge@us.ibm.com to allow access to IBM proxy service using client certificate.\n```sh\noc create secret tls mtls-proxy-secret --key client-key.pem --cert client.pem\n```\n\n**Installing the Behavior Analytics Services**\n----\n\nSelect any one of the deployments to setup the Behavior Analytics Services\n1. Full Deployment\n2. Analytics Proxy Deployment\n3. Store and Forward metrics Deployment\n4. Airgapped Analytics Proxy Deployment\n\n| Spec                                                      | Description                                                      | Default Value          |\n| --------------------------------------------------------- | ------------------------------------------------------------ | ---------------------- |\n| `ibmproxyurl`                                               | URL of IBM Proxy Service                                     | `https://iaps.ibm.com`   |\n| `postgres.storage_class`                                    | Storage class of type ReadWriteOnce                          | Required user input        |\n| `postgres.size`                                             | Size (in G) of the storage to be attached to Database        | `10G`                    |\n| `kafka.storage_class`                                       | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.storage_size`                                        | Size (in G) of the storage to be attached to Kafka  | `5G`                     |\n| `kafka.zookeeper_storage_class`                                 | Storage class of type ReadWriteOnce                          | Required user input        |\n| `kafka.zookeeper_storage_size`                                 | Size (in G) of the storage to be attached to Zookeeper | `5G`                     |\n| `airgapped.enabled`                                         | Set value to \"true\" if airgapped setup is to be enabled otherwise keep the default value \"false\" | `false`                  |\n| `airgapped.backup_retention_period`   | Number of days to keep the backup files in the storage       | `7`                     |\n| `airgapped.backup_deletion_frequency` | Frequency of job to delete files from the storage. It accepts values in Cron format (https://en.wikipedia.org/wiki/Cron) | `@daily`                 |\n| `event_scheduler_frequency`                               | Frequency at which events will be forwarded to proxy in Cron format. In case if internet connection available on the cluster only during a certain time frame, specify time in UTC equivalent Cron format. | `@hourly`                |\n| `prometheus_scheduler_frequency`                          | Frequency in Cronjob format to pull metrics from Prometheus  | `@daily`                |\n| `image_pull_secret`                                       | Secret to pull container images from registry                | `bas-images-pull-secret` |\n| `db_archive.frequency`                                    | Frequency in Cronjob format to run archive job                                                           | `@monthly`             |\n| `db_archive.retention_age`                                | Number of months to retain the data in Database              | `6`                    |\n| `db_archive.persistent_storage.storage_class`             |Storage class of type ReadWriteMany         | Required user input    |\n| `db_archive.persistent_storage.storage_size`              | Size (in G) of the storage to be attached for saving airgapped files | `10G`                  |\n| `prometheus_metrics`                                      | Array of metrics information to be send to destination at desired frequency | []\n| `env_type`              | Type of environment. Can be **prod** (HA) or **lite** (non HA)   | `lite`                  |\n| `allowed_domains`                                         | Comma separated values of domains allowed by BAS. By default all domains are allowed | '*'\n\n\n**Generating the API Key**\n----\nOnce the deployment is complete, to use the Behavior Analytics Services Endpoints, generate an API key using the CR GenerateKey. This API key to be used to authenticate Behavior Analytics Services Endpoints.\n\nNote- Key can be retrieved from the secret with same name used while creating Generate Key CR's instance.\nOnce you get key from the secret, decode it using below command:\n```sh\necho -n <secret key> | base64 -d\n```\n\n**Deleting the API Key**\n----\nTo revoke the Key, delete the corresponding GenerateKey instance.\n\n**Using Behavior Analytics Services Endpoints**\n---\nFor all BAS APIs, use the Generated API Key for Authentication. Pass it as the Header- X-API-KEY and the key while using the APIs.\n",
      "csv_display_name": "Behavior Analytics Services",
      "csv_metadata_description": "Behavior Analytics Services is a service that collects, transforms and transmits product usage data.",
      "csv_name": "behavior-analytics-services-operator-certified.v1.1.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:36:37.135000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "behavior-analytics-services-operator-certified",
      "provided_apis": [
        {
          "group": "bas.ibm.com",
          "kind": "AirgappedDeployment",
          "plural": "airgappeddeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "AnalyticsProxy",
          "plural": "analyticsproxies",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "Dashboard",
          "plural": "dashboards",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "DeleteCluster",
          "plural": "deleteclusters",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "FullDeployment",
          "plural": "fulldeployments",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "GenerateKey",
          "plural": "generatekeys",
          "version": "v1"
        },
        {
          "group": "bas.ibm.com",
          "kind": "StoreForwardMetric",
          "plural": "storeforwardmetrics",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:59d0b0902d4a56720e889dab1b805d575db135d9e20eb9dfb00d503c4572d4a1",
          "image": "registry.connect.redhat.com/ibm-edge/behavior-analytics-services-operator@sha256:59d0b0902d4a56720e889dab1b805d575db135d9e20eb9dfb00d503c4572d4a1",
          "name": "behavior-analytics-services-operator"
        },
        {
          "digest": "sha256:8e0f1d33edf005eb2dfafed9b8367435b0f33ef4adf006bc75338f2a88e8942c",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:8e0f1d33edf005eb2dfafed9b8367435b0f33ef4adf006bc75338f2a88e8942c",
          "name": "dashboardinstaller"
        },
        {
          "digest": "sha256:239939ea3c5d24666f31e1d0ea281dd9664fcfe8139ee6d4b686b402ad64e5df",
          "image": "registry.connect.redhat.com/ibm-edge/event-api@sha256:239939ea3c5d24666f31e1d0ea281dd9664fcfe8139ee6d4b686b402ad64e5df",
          "name": "event_api"
        },
        {
          "digest": "sha256:6195b9dd602469d7cb3a92b2d071471d37980a6512ed604468a342ccd2ab2d42",
          "image": "registry.connect.redhat.com/ibm-edge/store-api@sha256:6195b9dd602469d7cb3a92b2d071471d37980a6512ed604468a342ccd2ab2d42",
          "name": "store_api"
        },
        {
          "digest": "sha256:96c726cbc10c44169aa5f84e77dd408ddad124ca7580575a459ed38908e3a99b",
          "image": "registry.connect.redhat.com/ibm-edge/event-reader@sha256:96c726cbc10c44169aa5f84e77dd408ddad124ca7580575a459ed38908e3a99b",
          "name": "reader"
        },
        {
          "digest": "sha256:6f2a627cdc0e5a05a351c160bc0dc8b73d886e7b4f93cd94a4c25acff869818e",
          "image": "registry.connect.redhat.com/ibm-edge/event-scheduler@sha256:6f2a627cdc0e5a05a351c160bc0dc8b73d886e7b4f93cd94a4c25acff869818e",
          "name": "event_scheduler"
        },
        {
          "digest": "sha256:e8dd581088cd9b008ce8a29f43d2ce22974dfaadfbfe9faba3370917717686ee",
          "image": "registry.connect.redhat.com/ibm-edge/prometheus-scheduler@sha256:e8dd581088cd9b008ce8a29f43d2ce22974dfaadfbfe9faba3370917717686ee",
          "name": "prometheus_scheduler"
        },
        {
          "digest": "sha256:90ddecb54abe2880b86016a407507cecf77a113b4c7724235ab0abd21ad1d9aa",
          "image": "registry.connect.redhat.com/ibm-edge/pgo-client@sha256:90ddecb54abe2880b86016a407507cecf77a113b4c7724235ab0abd21ad1d9aa",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:815630d23e8d88664907fbf8096952adfd22593a4989063e9dd55549e674ee15",
          "image": "registry.connect.redhat.com/ibm-edge/reverse-proxy@sha256:815630d23e8d88664907fbf8096952adfd22593a4989063e9dd55549e674ee15",
          "name": "nginx"
        },
        {
          "digest": "sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "image": "registry.redhat.io/openshift4/ose-grafana@sha256:a2e20cac50352c1ad13cd03185f326484ee20202c8a60313ba116920d6d6da88",
          "name": "grafana"
        },
        {
          "digest": "sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "image": "registry.redhat.io/openshift3/ose-kube-state-metrics@sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "name": "ksm"
        },
        {
          "digest": "sha256:3288307dd03844ec3574ca5c173d7f608755fd23654434c48ea2e854fe0f22cf",
          "image": "registry.connect.redhat.com/ibm-edge/growth-stack-base@sha256:3288307dd03844ec3574ca5c173d7f608755fd23654434c48ea2e854fe0f22cf",
          "name": "init_container"
        },
        {
          "digest": "sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "image": "registry.access.redhat.com/ubi8/ubi@sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "name": "ubi"
        },
        {
          "digest": "sha256:19a8b33e2f4c2beee5266d5243abb7f43d85322fc62800899759cdf6ec568fee",
          "image": "registry.connect.redhat.com/ibm-edge/airgap-download-ui@sha256:19a8b33e2f4c2beee5266d5243abb7f43d85322fc62800899759cdf6ec568fee",
          "name": "download_ui"
        },
        {
          "digest": "sha256:9f6eae3e715d9aff6d9674059fb6bf4f6dfc3ad42f015200c69b481becd7abd9",
          "image": "registry.connect.redhat.com/ibm-edge/bas-operator-dashboard@sha256:9f6eae3e715d9aff6d9674059fb6bf4f6dfc3ad42f015200c69b481becd7abd9",
          "name": "dashboard_ui"
        },
        {
          "digest": "sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:5e31ce8745926e0116827b1b658800dd3e8b91cd1800be4f9943a84a1c023f78",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "image": "registry.connect.redhat.com/crunchydata/pgo-deployer@sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "name": "pgo_deployer"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.1.4",
      "version_original": "1.1.4"
    },
    {
      "_id": "61f3826e0b230f6f012f5393",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:ceb11d8e4544f3bb43fa3b217ccf2e2bb7f1e1887340fb7bf8cdafab7a25a25d",
      "bundle_path_digest": "sha256:ceb11d8e4544f3bb43fa3b217ccf2e2bb7f1e1887340fb7bf8cdafab7a25a25d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-01-28T05:43:10.607000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.3 of the NeuVector Certified Operator deploys version 4.4.3 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:18:12.188000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "name": "neuvector-operator-6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb-annotation"
        },
        {
          "digest": "sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:ecc4814bf9e38d41898ae2354bbafd2f1ed7c6e5602bb30cb40486e67725395c",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:ecc4814bf9e38d41898ae2354bbafd2f1ed7c6e5602bb30cb40486e67725395c",
          "name": "controller"
        },
        {
          "digest": "sha256:4621d69ca47929eedcab2c9163fc9d73ede09e0cd14f2a14db495e610590f5c2",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:4621d69ca47929eedcab2c9163fc9d73ede09e0cd14f2a14db495e610590f5c2",
          "name": "enforcer"
        },
        {
          "digest": "sha256:b49ba8bba9aaf292603896d5d3b9e5328b23260dfd977c70e7f3e39460564679",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:b49ba8bba9aaf292603896d5d3b9e5328b23260dfd977c70e7f3e39460564679",
          "name": "manager"
        },
        {
          "digest": "sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "name": "scanner"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "updater"
        },
        {
          "digest": "sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "name": "scanner-d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038-annotation"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "ubi8-228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.3.3",
      "version_original": "1.3.3"
    },
    {
      "_id": "61f38303f385723914ed60d9",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:ceb11d8e4544f3bb43fa3b217ccf2e2bb7f1e1887340fb7bf8cdafab7a25a25d",
      "bundle_path_digest": "sha256:ceb11d8e4544f3bb43fa3b217ccf2e2bb7f1e1887340fb7bf8cdafab7a25a25d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-01-28T05:45:39.062000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.3 of the NeuVector Certified Operator deploys version 4.4.3 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:32:21.254000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "name": "neuvector-operator-6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb-annotation"
        },
        {
          "digest": "sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:ecc4814bf9e38d41898ae2354bbafd2f1ed7c6e5602bb30cb40486e67725395c",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:ecc4814bf9e38d41898ae2354bbafd2f1ed7c6e5602bb30cb40486e67725395c",
          "name": "controller"
        },
        {
          "digest": "sha256:4621d69ca47929eedcab2c9163fc9d73ede09e0cd14f2a14db495e610590f5c2",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:4621d69ca47929eedcab2c9163fc9d73ede09e0cd14f2a14db495e610590f5c2",
          "name": "enforcer"
        },
        {
          "digest": "sha256:b49ba8bba9aaf292603896d5d3b9e5328b23260dfd977c70e7f3e39460564679",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:b49ba8bba9aaf292603896d5d3b9e5328b23260dfd977c70e7f3e39460564679",
          "name": "manager"
        },
        {
          "digest": "sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "name": "scanner"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "updater"
        },
        {
          "digest": "sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "name": "scanner-d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038-annotation"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "ubi8-228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.3.3",
      "version_original": "1.3.3"
    },
    {
      "_id": "61f3832234b2919e2995e7dd",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:ceb11d8e4544f3bb43fa3b217ccf2e2bb7f1e1887340fb7bf8cdafab7a25a25d",
      "bundle_path_digest": "sha256:ceb11d8e4544f3bb43fa3b217ccf2e2bb7f1e1887340fb7bf8cdafab7a25a25d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-01-28T05:46:10.080000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.3 of the NeuVector Certified Operator deploys version 4.4.3 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:12:10.519000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "name": "neuvector-operator-6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb-annotation"
        },
        {
          "digest": "sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:ecc4814bf9e38d41898ae2354bbafd2f1ed7c6e5602bb30cb40486e67725395c",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:ecc4814bf9e38d41898ae2354bbafd2f1ed7c6e5602bb30cb40486e67725395c",
          "name": "controller"
        },
        {
          "digest": "sha256:4621d69ca47929eedcab2c9163fc9d73ede09e0cd14f2a14db495e610590f5c2",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:4621d69ca47929eedcab2c9163fc9d73ede09e0cd14f2a14db495e610590f5c2",
          "name": "enforcer"
        },
        {
          "digest": "sha256:b49ba8bba9aaf292603896d5d3b9e5328b23260dfd977c70e7f3e39460564679",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:b49ba8bba9aaf292603896d5d3b9e5328b23260dfd977c70e7f3e39460564679",
          "name": "manager"
        },
        {
          "digest": "sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "name": "scanner"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "updater"
        },
        {
          "digest": "sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "name": "scanner-d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038-annotation"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "ubi8-228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.3.3",
      "version_original": "1.3.3"
    },
    {
      "_id": "61f38373f385723914ed60da",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:ceb11d8e4544f3bb43fa3b217ccf2e2bb7f1e1887340fb7bf8cdafab7a25a25d",
      "bundle_path_digest": "sha256:ceb11d8e4544f3bb43fa3b217ccf2e2bb7f1e1887340fb7bf8cdafab7a25a25d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-01-28T05:47:31.301000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.3 of the NeuVector Certified Operator deploys version 4.4.3 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:51:17.409000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "name": "neuvector-operator-6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb-annotation"
        },
        {
          "digest": "sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:ecc4814bf9e38d41898ae2354bbafd2f1ed7c6e5602bb30cb40486e67725395c",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:ecc4814bf9e38d41898ae2354bbafd2f1ed7c6e5602bb30cb40486e67725395c",
          "name": "controller"
        },
        {
          "digest": "sha256:4621d69ca47929eedcab2c9163fc9d73ede09e0cd14f2a14db495e610590f5c2",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:4621d69ca47929eedcab2c9163fc9d73ede09e0cd14f2a14db495e610590f5c2",
          "name": "enforcer"
        },
        {
          "digest": "sha256:b49ba8bba9aaf292603896d5d3b9e5328b23260dfd977c70e7f3e39460564679",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:b49ba8bba9aaf292603896d5d3b9e5328b23260dfd977c70e7f3e39460564679",
          "name": "manager"
        },
        {
          "digest": "sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "name": "scanner"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "updater"
        },
        {
          "digest": "sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "name": "scanner-d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038-annotation"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "ubi8-228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.3.3",
      "version_original": "1.3.3"
    },
    {
      "_id": "61f384e234b2919e2995e7de",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:ceb11d8e4544f3bb43fa3b217ccf2e2bb7f1e1887340fb7bf8cdafab7a25a25d",
      "bundle_path_digest": "sha256:ceb11d8e4544f3bb43fa3b217ccf2e2bb7f1e1887340fb7bf8cdafab7a25a25d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-01-28T05:53:38.320000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.3 of the NeuVector Certified Operator deploys version 4.4.3 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:22:16.653000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "name": "neuvector-operator-6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb-annotation"
        },
        {
          "digest": "sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:ecc4814bf9e38d41898ae2354bbafd2f1ed7c6e5602bb30cb40486e67725395c",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:ecc4814bf9e38d41898ae2354bbafd2f1ed7c6e5602bb30cb40486e67725395c",
          "name": "controller"
        },
        {
          "digest": "sha256:4621d69ca47929eedcab2c9163fc9d73ede09e0cd14f2a14db495e610590f5c2",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:4621d69ca47929eedcab2c9163fc9d73ede09e0cd14f2a14db495e610590f5c2",
          "name": "enforcer"
        },
        {
          "digest": "sha256:b49ba8bba9aaf292603896d5d3b9e5328b23260dfd977c70e7f3e39460564679",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:b49ba8bba9aaf292603896d5d3b9e5328b23260dfd977c70e7f3e39460564679",
          "name": "manager"
        },
        {
          "digest": "sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "name": "scanner"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "updater"
        },
        {
          "digest": "sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "name": "scanner-d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038-annotation"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "ubi8-228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.3.3",
      "version_original": "1.3.3"
    },
    {
      "_id": "61f3997c34b2919e2995e7e8",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:7060f7f130f0de1b20e377a846cfea20353202ea6dddce915b2b7918a3ef8efa",
      "bundle_path_digest": "sha256:7060f7f130f0de1b20e377a846cfea20353202ea6dddce915b2b7918a3ef8efa",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-01-28T07:21:32.281000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.4 of the NeuVector Certified Operator deploys version 4.4.3 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:51:22.532000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "name": "neuvector-operator-6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb-annotation"
        },
        {
          "digest": "sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:acc943568520282061547b310c50080dc32924a531bbb543d959b281eb6664f4",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:acc943568520282061547b310c50080dc32924a531bbb543d959b281eb6664f4",
          "name": "controller"
        },
        {
          "digest": "sha256:be1d299ec3532d55444681a882e9fd1238949da6598987308e2800ed26291b7a",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:be1d299ec3532d55444681a882e9fd1238949da6598987308e2800ed26291b7a",
          "name": "enforcer"
        },
        {
          "digest": "sha256:8245cd179d11fff279690c5a422f46b4ff252ed72b9b998f0c9b5453bc7d8fc0",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:8245cd179d11fff279690c5a422f46b4ff252ed72b9b998f0c9b5453bc7d8fc0",
          "name": "manager"
        },
        {
          "digest": "sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
          "name": "scanner"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "updater"
        },
        {
          "digest": "sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
          "name": "scanner-42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130-annotation"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "ubi8-228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.3.4",
      "version_original": "1.3.4"
    },
    {
      "_id": "61f39a30f385723914ed60e4",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:ceb11d8e4544f3bb43fa3b217ccf2e2bb7f1e1887340fb7bf8cdafab7a25a25d",
      "bundle_path_digest": "sha256:ceb11d8e4544f3bb43fa3b217ccf2e2bb7f1e1887340fb7bf8cdafab7a25a25d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-01-28T07:24:32.843000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.3 of the NeuVector Certified Operator deploys version 4.4.3 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:55:40.675000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "name": "neuvector-operator-6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb-annotation"
        },
        {
          "digest": "sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:ecc4814bf9e38d41898ae2354bbafd2f1ed7c6e5602bb30cb40486e67725395c",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:ecc4814bf9e38d41898ae2354bbafd2f1ed7c6e5602bb30cb40486e67725395c",
          "name": "controller"
        },
        {
          "digest": "sha256:4621d69ca47929eedcab2c9163fc9d73ede09e0cd14f2a14db495e610590f5c2",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:4621d69ca47929eedcab2c9163fc9d73ede09e0cd14f2a14db495e610590f5c2",
          "name": "enforcer"
        },
        {
          "digest": "sha256:b49ba8bba9aaf292603896d5d3b9e5328b23260dfd977c70e7f3e39460564679",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:b49ba8bba9aaf292603896d5d3b9e5328b23260dfd977c70e7f3e39460564679",
          "name": "manager"
        },
        {
          "digest": "sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "name": "scanner"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "updater"
        },
        {
          "digest": "sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038",
          "name": "scanner-d79fd60afb6c93359314f01433fc5a4e23604b7035822809b4817d4e7d1b1038-annotation"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "ubi8-228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.3.3",
      "version_original": "1.3.3"
    },
    {
      "_id": "61f39a31f385723914ed60e5",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:7060f7f130f0de1b20e377a846cfea20353202ea6dddce915b2b7918a3ef8efa",
      "bundle_path_digest": "sha256:7060f7f130f0de1b20e377a846cfea20353202ea6dddce915b2b7918a3ef8efa",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-01-28T07:24:33.598000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.4 of the NeuVector Certified Operator deploys version 4.4.3 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:55:42.683000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "name": "neuvector-operator-6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb-annotation"
        },
        {
          "digest": "sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:acc943568520282061547b310c50080dc32924a531bbb543d959b281eb6664f4",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:acc943568520282061547b310c50080dc32924a531bbb543d959b281eb6664f4",
          "name": "controller"
        },
        {
          "digest": "sha256:be1d299ec3532d55444681a882e9fd1238949da6598987308e2800ed26291b7a",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:be1d299ec3532d55444681a882e9fd1238949da6598987308e2800ed26291b7a",
          "name": "enforcer"
        },
        {
          "digest": "sha256:8245cd179d11fff279690c5a422f46b4ff252ed72b9b998f0c9b5453bc7d8fc0",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:8245cd179d11fff279690c5a422f46b4ff252ed72b9b998f0c9b5453bc7d8fc0",
          "name": "manager"
        },
        {
          "digest": "sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
          "name": "scanner"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "updater"
        },
        {
          "digest": "sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
          "name": "scanner-42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130-annotation"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "ubi8-228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.3.4",
      "version_original": "1.3.4"
    },
    {
      "_id": "61f39b6945c1d5cee9795392",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:7060f7f130f0de1b20e377a846cfea20353202ea6dddce915b2b7918a3ef8efa",
      "bundle_path_digest": "sha256:7060f7f130f0de1b20e377a846cfea20353202ea6dddce915b2b7918a3ef8efa",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-01-28T07:29:45.599000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.4 of the NeuVector Certified Operator deploys version 4.4.3 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:33:29.050000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "name": "neuvector-operator-6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb-annotation"
        },
        {
          "digest": "sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:acc943568520282061547b310c50080dc32924a531bbb543d959b281eb6664f4",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:acc943568520282061547b310c50080dc32924a531bbb543d959b281eb6664f4",
          "name": "controller"
        },
        {
          "digest": "sha256:be1d299ec3532d55444681a882e9fd1238949da6598987308e2800ed26291b7a",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:be1d299ec3532d55444681a882e9fd1238949da6598987308e2800ed26291b7a",
          "name": "enforcer"
        },
        {
          "digest": "sha256:8245cd179d11fff279690c5a422f46b4ff252ed72b9b998f0c9b5453bc7d8fc0",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:8245cd179d11fff279690c5a422f46b4ff252ed72b9b998f0c9b5453bc7d8fc0",
          "name": "manager"
        },
        {
          "digest": "sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
          "name": "scanner"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "updater"
        },
        {
          "digest": "sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
          "name": "scanner-42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130-annotation"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "ubi8-228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.3.4",
      "version_original": "1.3.4"
    },
    {
      "_id": "61f39b9845c1d5cee9795393",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:7060f7f130f0de1b20e377a846cfea20353202ea6dddce915b2b7918a3ef8efa",
      "bundle_path_digest": "sha256:7060f7f130f0de1b20e377a846cfea20353202ea6dddce915b2b7918a3ef8efa",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-01-28T07:30:32.129000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.4 of the NeuVector Certified Operator deploys version 4.4.3 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:34:42.628000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "name": "neuvector-operator-6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb-annotation"
        },
        {
          "digest": "sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:acc943568520282061547b310c50080dc32924a531bbb543d959b281eb6664f4",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:acc943568520282061547b310c50080dc32924a531bbb543d959b281eb6664f4",
          "name": "controller"
        },
        {
          "digest": "sha256:be1d299ec3532d55444681a882e9fd1238949da6598987308e2800ed26291b7a",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:be1d299ec3532d55444681a882e9fd1238949da6598987308e2800ed26291b7a",
          "name": "enforcer"
        },
        {
          "digest": "sha256:8245cd179d11fff279690c5a422f46b4ff252ed72b9b998f0c9b5453bc7d8fc0",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:8245cd179d11fff279690c5a422f46b4ff252ed72b9b998f0c9b5453bc7d8fc0",
          "name": "manager"
        },
        {
          "digest": "sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
          "name": "scanner"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "updater"
        },
        {
          "digest": "sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
          "name": "scanner-42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130-annotation"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "ubi8-228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.3.4",
      "version_original": "1.3.4"
    },
    {
      "_id": "61f39bd034b2919e2995e7e9",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:7060f7f130f0de1b20e377a846cfea20353202ea6dddce915b2b7918a3ef8efa",
      "bundle_path_digest": "sha256:7060f7f130f0de1b20e377a846cfea20353202ea6dddce915b2b7918a3ef8efa",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-01-28T07:31:28.601000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.4 of the NeuVector Certified Operator deploys version 4.4.3 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:37:47.795000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "name": "neuvector-operator-6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb-annotation"
        },
        {
          "digest": "sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:acc943568520282061547b310c50080dc32924a531bbb543d959b281eb6664f4",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:acc943568520282061547b310c50080dc32924a531bbb543d959b281eb6664f4",
          "name": "controller"
        },
        {
          "digest": "sha256:be1d299ec3532d55444681a882e9fd1238949da6598987308e2800ed26291b7a",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:be1d299ec3532d55444681a882e9fd1238949da6598987308e2800ed26291b7a",
          "name": "enforcer"
        },
        {
          "digest": "sha256:8245cd179d11fff279690c5a422f46b4ff252ed72b9b998f0c9b5453bc7d8fc0",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:8245cd179d11fff279690c5a422f46b4ff252ed72b9b998f0c9b5453bc7d8fc0",
          "name": "manager"
        },
        {
          "digest": "sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
          "name": "scanner"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "updater"
        },
        {
          "digest": "sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
          "name": "scanner-42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130-annotation"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "ubi8-228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.3.4",
      "version_original": "1.3.4"
    },
    {
      "_id": "61f39c09f385723914ed60e6",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:7060f7f130f0de1b20e377a846cfea20353202ea6dddce915b2b7918a3ef8efa",
      "bundle_path_digest": "sha256:7060f7f130f0de1b20e377a846cfea20353202ea6dddce915b2b7918a3ef8efa",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-01-28T07:32:25.793000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.4 of the NeuVector Certified Operator deploys version 4.4.3 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:48:28.721000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "name": "neuvector-operator-6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb-annotation"
        },
        {
          "digest": "sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:6155ac3c95aa6471c9857e0a6f5e5d19e6fc1d8cc7d014108d7d4a10d14f96bb",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:acc943568520282061547b310c50080dc32924a531bbb543d959b281eb6664f4",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:acc943568520282061547b310c50080dc32924a531bbb543d959b281eb6664f4",
          "name": "controller"
        },
        {
          "digest": "sha256:be1d299ec3532d55444681a882e9fd1238949da6598987308e2800ed26291b7a",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:be1d299ec3532d55444681a882e9fd1238949da6598987308e2800ed26291b7a",
          "name": "enforcer"
        },
        {
          "digest": "sha256:8245cd179d11fff279690c5a422f46b4ff252ed72b9b998f0c9b5453bc7d8fc0",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:8245cd179d11fff279690c5a422f46b4ff252ed72b9b998f0c9b5453bc7d8fc0",
          "name": "manager"
        },
        {
          "digest": "sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
          "name": "scanner"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "updater"
        },
        {
          "digest": "sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130",
          "name": "scanner-42004e13b348bb43b58ae8538c983a70b237e3aca870758ac629fb4fc43e8130-annotation"
        },
        {
          "digest": "sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "image": "registry.access.redhat.com/ubi8@sha256:228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2",
          "name": "ubi8-228824aa581f3b31bf79411f8448b798291c667a37155bdea61cfa128b2833f2-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.3.4",
      "version_original": "1.3.4"
    },
    {
      "_id": "61f4a9fc79f5f6d75427a02c",
      "alm_examples": [
        {
          "api_version": "platform.confluent.io/v1beta1",
          "kind": "Zookeeper",
          "metadata": {
            "name": "zookeeper"
          },
          "spec": {
            "dataVolumeCapacity": "10Gi",
            "image": {
              "application": "confluentinc/cp-zookeeper@sha256:8c2977ab33ae92f804d703daa9aa72b0dc2c15f07292f5e076cf48dd304d24d2",
              "init": "confluentinc/confluent-init-container@sha256:46aac0cfc7ea6315dbb49d9670cf32c6335262fdb78b8476c68ae298824ccd1b"
            },
            "logVolumeCapacity": "10Gi",
            "replicas": 3
          }
        },
        {
          "api_version": "platform.confluent.io/v1beta1",
          "kind": "Kafka",
          "metadata": {
            "name": "kafka"
          },
          "spec": {
            "dataVolumeCapacity": "10Gi",
            "image": {
              "application": "confluentinc/cp-server@sha256:c249eadcb0d1b3aba9b7d3fe1a5f238dc60a45172de19bfa75a676781106388a",
              "init": "confluentinc/confluent-init-container@sha256:46aac0cfc7ea6315dbb49d9670cf32c6335262fdb78b8476c68ae298824ccd1b"
            },
            "metricReporter": {
              "enabled": true
            },
            "replicas": 3
          }
        },
        {
          "api_version": "platform.confluent.io/v1beta1",
          "kind": "KafkaRestProxy",
          "metadata": {
            "name": "kafkarestproxy"
          },
          "spec": {
            "image": {
              "application": "confluentinc/cp-kafka-rest@sha256:29cf6a529ef2952341572fc0fff593da3587100b64e700271ff8f001ed953682",
              "init": "confluentinc/confluent-init-container@sha256:46aac0cfc7ea6315dbb49d9670cf32c6335262fdb78b8476c68ae298824ccd1b"
            },
            "metricReporter": {
              "enabled": true
            },
            "replicas": 3
          }
        },
        {
          "api_version": "platform.confluent.io/v1beta1",
          "kind": "Connect",
          "metadata": {
            "name": "connect"
          },
          "spec": {
            "dependencies": {
              "kafka": {
                "bootstrapEndpoint": "kafka:9071"
              }
            },
            "image": {
              "application": "confluentinc/cp-server-connect@sha256:f682cde0761267df3f556c1e23e445729bdad18585c26ed1139883d079d084a4",
              "init": "confluentinc/confluent-init-container@sha256:46aac0cfc7ea6315dbb49d9670cf32c6335262fdb78b8476c68ae298824ccd1b"
            },
            "replicas": 1
          }
        },
        {
          "api_version": "platform.confluent.io/v1beta1",
          "kind": "KsqlDB",
          "metadata": {
            "name": "ksqldb"
          },
          "spec": {
            "dataVolumeCapacity": "10Gi",
            "image": {
              "application": "confluentinc/cp-ksqldb-server@sha256:c06ef652f81cf4f43e2d3ba56409c8ad25292b825f6057a8e758b975b3aa0f57",
              "init": "confluentinc/confluent-init-container@sha256:46aac0cfc7ea6315dbb49d9670cf32c6335262fdb78b8476c68ae298824ccd1b"
            },
            "replicas": 1
          }
        },
        {
          "api_version": "platform.confluent.io/v1beta1",
          "kind": "ControlCenter",
          "metadata": {
            "name": "controlcenter"
          },
          "spec": {
            "dataVolumeCapacity": "10Gi",
            "dependencies": {
              "connect": [
                {
                  "name": "connect",
                  "url": "http://connect.confluent.svc.cluster.local:8083"
                }
              ],
              "ksqldb": [
                {
                  "name": "ksqldb",
                  "url": "http://ksqldb.confluent.svc.cluster.local:8088"
                }
              ],
              "schemaRegistry": {
                "url": "http://schemaregistry.confluent.svc.cluster.local:8081"
              }
            },
            "image": {
              "application": "confluentinc/cp-enterprise-control-center@sha256:7aeeeb539d73017abc84c96c6c3d8aed9607cc22677c4a2a07bab6c264407395",
              "init": "confluentinc/confluent-init-container@sha256:46aac0cfc7ea6315dbb49d9670cf32c6335262fdb78b8476c68ae298824ccd1b"
            },
            "replicas": 1
          }
        },
        {
          "api_version": "platform.confluent.io/v1beta1",
          "kind": "SchemaRegistry",
          "metadata": {
            "name": "schemaregistry"
          },
          "spec": {
            "image": {
              "application": "confluentinc/cp-schema-registry@sha256:2f6c337dfa5d19ec359ba1fc57fe9e69179ad7912a1699eaa0e6419afddaa55b",
              "init": "confluentinc/confluent-init-container@sha256:46aac0cfc7ea6315dbb49d9670cf32c6335262fdb78b8476c68ae298824ccd1b"
            },
            "replicas": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": [
          "Confluent Platform License"
        ]
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/confluentinc/confluent-for-kubernetes-v2@sha256:4dfb7b36daaa5cd47ba5691a6195df0e13aaaba9dfbe9c50795bd5b529960d4a",
      "bundle_path_digest": "sha256:4dfb7b36daaa5cd47ba5691a6195df0e13aaaba9dfbe9c50795bd5b529960d4a",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-29T02:44:12.552000+00:00",
      "csv_description": "Confluent for Kubernetes (CFK) is a cloud-native control plane for deploying and managing Confluent in your private cloud environment. It provides standard and simple interface to customize, deploy, and manage Confluent Platform through declarative API.\nConfluent for Kubernetes runs on Kubernetes, the runtime for private cloud architectures.",
      "csv_display_name": "Confluent for Kubernetes",
      "csv_metadata_description": "",
      "csv_name": "confluent-for-kubernetes.v2.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:52:07.733000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "confluent-for-kubernetes",
      "provided_apis": [
        {
          "group": "platform.confluent.io",
          "kind": "ClusterLink",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "ConfluentRolebinding",
          "plural": "confluentrolebindings",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "Kafka",
          "plural": "kafkas",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "Zookeeper",
          "plural": "zookeepers",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "KafkaRestProxy",
          "plural": "kafkarestproxies",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "KafkaRestClass",
          "plural": "kafkarestclasses",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "KafkaTopic",
          "plural": "kafkatopics",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "MigrationJob",
          "plural": "migrationjobs",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "Connect",
          "plural": "connects",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "SchemaRegistry",
          "plural": "schemaregistries",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "Schema",
          "plural": "schemas",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "Connector",
          "plural": "connectors",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "KsqlDB",
          "plural": "ksqldbs",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "ControlCenter",
          "plural": "controlcenters",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:cd7906793e646a4932923990aa1989a965a984170028b83b01134526713de30f",
          "image": "docker.io/confluentinc/confluent-operator@sha256:cd7906793e646a4932923990aa1989a965a984170028b83b01134526713de30f",
          "name": "confluent-operator"
        },
        {
          "digest": "sha256:46aac0cfc7ea6315dbb49d9670cf32c6335262fdb78b8476c68ae298824ccd1b",
          "image": "docker.io/confluentinc/confluent-init-container@sha256:46aac0cfc7ea6315dbb49d9670cf32c6335262fdb78b8476c68ae298824ccd1b",
          "name": "confluent-init-container"
        },
        {
          "digest": "sha256:8c2977ab33ae92f804d703daa9aa72b0dc2c15f07292f5e076cf48dd304d24d2",
          "image": "docker.io/confluentinc/cp-zookeeper@sha256:8c2977ab33ae92f804d703daa9aa72b0dc2c15f07292f5e076cf48dd304d24d2",
          "name": "cp-zookeeper"
        },
        {
          "digest": "sha256:c249eadcb0d1b3aba9b7d3fe1a5f238dc60a45172de19bfa75a676781106388a",
          "image": "docker.io/confluentinc/cp-server@sha256:c249eadcb0d1b3aba9b7d3fe1a5f238dc60a45172de19bfa75a676781106388a",
          "name": "cp-server"
        },
        {
          "digest": "sha256:29cf6a529ef2952341572fc0fff593da3587100b64e700271ff8f001ed953682",
          "image": "docker.io/confluentinc/cp-kafka-rest@sha256:29cf6a529ef2952341572fc0fff593da3587100b64e700271ff8f001ed953682",
          "name": "cp-kafka-rest"
        },
        {
          "digest": "sha256:c06ef652f81cf4f43e2d3ba56409c8ad25292b825f6057a8e758b975b3aa0f57",
          "image": "docker.io/confluentinc/cp-ksqldb-server@sha256:c06ef652f81cf4f43e2d3ba56409c8ad25292b825f6057a8e758b975b3aa0f57",
          "name": "cp-ksqldb-server"
        },
        {
          "digest": "sha256:2f6c337dfa5d19ec359ba1fc57fe9e69179ad7912a1699eaa0e6419afddaa55b",
          "image": "docker.io/confluentinc/cp-schema-registry@sha256:2f6c337dfa5d19ec359ba1fc57fe9e69179ad7912a1699eaa0e6419afddaa55b",
          "name": "cp-schema-registry"
        },
        {
          "digest": "sha256:f682cde0761267df3f556c1e23e445729bdad18585c26ed1139883d079d084a4",
          "image": "docker.io/confluentinc/cp-server-connect@sha256:f682cde0761267df3f556c1e23e445729bdad18585c26ed1139883d079d084a4",
          "name": "cp-server-connect"
        },
        {
          "digest": "sha256:7aeeeb539d73017abc84c96c6c3d8aed9607cc22677c4a2a07bab6c264407395",
          "image": "docker.io/confluentinc/cp-enterprise-control-center@sha256:7aeeeb539d73017abc84c96c6c3d8aed9607cc22677c4a2a07bab6c264407395",
          "name": "cp-enterprise-control-center"
        },
        {
          "digest": "sha256:cd7906793e646a4932923990aa1989a965a984170028b83b01134526713de30f",
          "image": "docker.io/confluentinc/confluent-operator@sha256:cd7906793e646a4932923990aa1989a965a984170028b83b01134526713de30f",
          "name": "confluent-operator-cd7906793e646a4932923990aa1989a965a984170028b83b01134526713de30f-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.2.1",
      "version_original": "2.2.1"
    },
    {
      "_id": "61f4b63779f5f6d75427a038",
      "alm_examples": [
        {
          "api_version": "operator.smilecdr.com/v1alpha1",
          "kind": "Smilecdr",
          "metadata": {
            "name": "smilecdr"
          },
          "spec": {
            "labels": {
              "application": "smilecdr",
              "client": "smilecdr",
              "env": "dev",
              "version": "one"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/smilecdr/smilecdr@sha256:c44f5661a598aa18c4c10372918a45edb0f26d7d2772c47a55c66e4ff874cb5f",
      "bundle_path_digest": "sha256:c44f5661a598aa18c4c10372918a45edb0f26d7d2772c47a55c66e4ff874cb5f",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-29T03:36:23.064000+00:00",
      "csv_description": "Smilecdr Operator description. TODO.",
      "csv_display_name": "Smilecdr Operator",
      "csv_metadata_description": "",
      "csv_name": "smilecdr-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:54:25.977000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "smilecdr-operator",
      "provided_apis": [
        {
          "group": "operator.smilecdr.com",
          "kind": "Smilecdr",
          "plural": "smilecdrs",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "image": "quay.io/jibran_shaukat/ose-kube-rbac-proxy@sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:cd6b2cec6f5b9ad9e0f0434532f8fb00b6919fcd840e686d96ce08874f2154db",
          "image": "quay.io/jibran_shaukat/smilecdr@sha256:cd6b2cec6f5b9ad9e0f0434532f8fb00b6919fcd840e686d96ce08874f2154db",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "61f4b7b1d44b98265736fdd0",
      "alm_examples": [
        {
          "api_version": "operator.smilecdr.com/v1alpha1",
          "kind": "Smilecdr",
          "metadata": {
            "name": "smilecdr"
          },
          "spec": {
            "labels": {
              "application": "smilecdr",
              "client": "smilecdr",
              "env": "dev",
              "version": "one"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/smilecdr/smilecdr@sha256:c44f5661a598aa18c4c10372918a45edb0f26d7d2772c47a55c66e4ff874cb5f",
      "bundle_path_digest": "sha256:c44f5661a598aa18c4c10372918a45edb0f26d7d2772c47a55c66e4ff874cb5f",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-29T03:42:41.927000+00:00",
      "csv_description": "Smilecdr Operator description. TODO.",
      "csv_display_name": "Smilecdr Operator",
      "csv_metadata_description": "",
      "csv_name": "smilecdr-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:58:28.120000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "smilecdr-operator",
      "provided_apis": [
        {
          "group": "operator.smilecdr.com",
          "kind": "Smilecdr",
          "plural": "smilecdrs",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "image": "quay.io/jibran_shaukat/ose-kube-rbac-proxy@sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:cd6b2cec6f5b9ad9e0f0434532f8fb00b6919fcd840e686d96ce08874f2154db",
          "image": "quay.io/jibran_shaukat/smilecdr@sha256:cd6b2cec6f5b9ad9e0f0434532f8fb00b6919fcd840e686d96ce08874f2154db",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "61f4b80eba9e057a1e43c8be",
      "alm_examples": [
        {
          "api_version": "operator.smilecdr.com/v1alpha1",
          "kind": "Smilecdr",
          "metadata": {
            "name": "smilecdr"
          },
          "spec": {
            "labels": {
              "application": "smilecdr",
              "client": "smilecdr",
              "env": "dev",
              "version": "one"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/smilecdr/smilecdr@sha256:c44f5661a598aa18c4c10372918a45edb0f26d7d2772c47a55c66e4ff874cb5f",
      "bundle_path_digest": "sha256:c44f5661a598aa18c4c10372918a45edb0f26d7d2772c47a55c66e4ff874cb5f",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-01-29T03:44:14.913000+00:00",
      "csv_description": "Smilecdr Operator description. TODO.",
      "csv_display_name": "Smilecdr Operator",
      "csv_metadata_description": "",
      "csv_name": "smilecdr-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:46:41.013000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "smilecdr-operator",
      "provided_apis": [
        {
          "group": "operator.smilecdr.com",
          "kind": "Smilecdr",
          "plural": "smilecdrs",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "image": "quay.io/jibran_shaukat/ose-kube-rbac-proxy@sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:cd6b2cec6f5b9ad9e0f0434532f8fb00b6919fcd840e686d96ce08874f2154db",
          "image": "quay.io/jibran_shaukat/smilecdr@sha256:cd6b2cec6f5b9ad9e0f0434532f8fb00b6919fcd840e686d96ce08874f2154db",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "61f4c8e179f5f6d75427a03c",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:fb8b863025d363746bda0a11486d9345bccbd04c89c35ec1aa93a7a2ed2ff7ba",
      "bundle_path_digest": "sha256:fb8b863025d363746bda0a11486d9345bccbd04c89c35ec1aa93a7a2ed2ff7ba",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-29T04:56:01.382000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:49:58.630000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "name": "kubeturbo-operator-baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70-annotation"
        },
        {
          "digest": "sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:89641d597301fae69fd2085afb641554c31a265703f0ca4fa82c7d71edf3d276",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:89641d597301fae69fd2085afb641554c31a265703f0ca4fa82c7d71edf3d276",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "8.4.4",
      "version_original": "8.4.4"
    },
    {
      "_id": "61f4c91b79f5f6d75427a03d",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:fb8b863025d363746bda0a11486d9345bccbd04c89c35ec1aa93a7a2ed2ff7ba",
      "bundle_path_digest": "sha256:fb8b863025d363746bda0a11486d9345bccbd04c89c35ec1aa93a7a2ed2ff7ba",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-29T04:56:59.440000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T10:59:00.427000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "name": "kubeturbo-operator-baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70-annotation"
        },
        {
          "digest": "sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:89641d597301fae69fd2085afb641554c31a265703f0ca4fa82c7d71edf3d276",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:89641d597301fae69fd2085afb641554c31a265703f0ca4fa82c7d71edf3d276",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.4.4",
      "version_original": "8.4.4"
    },
    {
      "_id": "61f4c9b1d44b98265736fdd6",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:fb8b863025d363746bda0a11486d9345bccbd04c89c35ec1aa93a7a2ed2ff7ba",
      "bundle_path_digest": "sha256:fb8b863025d363746bda0a11486d9345bccbd04c89c35ec1aa93a7a2ed2ff7ba",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-29T04:59:29.603000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:18:40.855000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "name": "kubeturbo-operator-baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70-annotation"
        },
        {
          "digest": "sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:89641d597301fae69fd2085afb641554c31a265703f0ca4fa82c7d71edf3d276",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:89641d597301fae69fd2085afb641554c31a265703f0ca4fa82c7d71edf3d276",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.4.4",
      "version_original": "8.4.4"
    },
    {
      "_id": "61f4cc8295bac8d0de150540",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:fb8b863025d363746bda0a11486d9345bccbd04c89c35ec1aa93a7a2ed2ff7ba",
      "bundle_path_digest": "sha256:fb8b863025d363746bda0a11486d9345bccbd04c89c35ec1aa93a7a2ed2ff7ba",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-29T05:11:30.396000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:13:32.050000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "name": "kubeturbo-operator-baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70-annotation"
        },
        {
          "digest": "sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:89641d597301fae69fd2085afb641554c31a265703f0ca4fa82c7d71edf3d276",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:89641d597301fae69fd2085afb641554c31a265703f0ca4fa82c7d71edf3d276",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "8.4.4",
      "version_original": "8.4.4"
    },
    {
      "_id": "61fa61b96fe3ead398e98695",
      "alm_examples": [
        {
          "api_version": "modelbuilder.com/v1alpha1",
          "kind": "Modelbuilder",
          "metadata": {
            "name": "modelbuilder-sample"
          },
          "spec": {
            "backup_storage": {
              "storage#": "20G",
              "storage_class": "ibmc-file-gold-gid"
            },
            "email_notification": {
              "accept": true,
              "vm_mail_recipient": ""
            },
            "env_type": "prod",
            "in_memory_storage": {
              "storage#": "20G",
              "storage_class": "ibmc-file-gold-gid"
            },
            "license": {
              "accept": false
            },
            "metadata_storage": {
              "storage#": "20G",
              "storage_class": "ibmc-block-bronze"
            },
            "photo_storage": {
              "storage#": "500G",
              "storage_class": "ibmc-file-gold-gid"
            },
            "vm_request_method": "dynamic"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/modelbuilder-bundle@sha256:8a543a64ae75166509c1b49eca6c82723fc398108f6fda4b294f89b24ab086ad",
      "bundle_path_digest": "sha256:8a543a64ae75166509c1b49eca6c82723fc398108f6fda4b294f89b24ab086ad",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-02T10:49:29.940000+00:00",
      "csv_description": "IBM Services Software Model Builder for Vision is an AI training platform that can use the capabilities of IBM Cloud and its GPUs to quickly train computer vision models for compatible mobile apps. IBM Services Software Inspection Workbench iOS and iPadOS app will be used as the exclusive UI for labeling and training. Specifically, IBM Model Builder for Vision will train computer vision models that can then be deployed for use on the IBM Services Software Inspector Portable , IBM Services Software Inspector Wearable and the IBM Maximo Visual Inspection Mobile apps.",
      "csv_display_name": "IBM Model Builder for Vision",
      "csv_metadata_description": "",
      "csv_name": "ibm-modelbuilder-for-vision-certified.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:34:02.587000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "model-builder-for-vision-certified",
      "provided_apis": [
        {
          "group": "modelbuilder.com",
          "kind": "Modelbuilder",
          "plural": "modelbuilders",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5f97c53dfb96d9cdd9118ebca5dbb3ab9efaaab763107b98588e3385c336bf16",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-operator@sha256:5f97c53dfb96d9cdd9118ebca5dbb3ab9efaaab763107b98588e3385c336bf16",
          "name": "modelbuilder-operator-5f97c53dfb96d9cdd9118ebca5dbb3ab9efaaab763107b98588e3385c336bf16-annotation"
        },
        {
          "digest": "sha256:5f97c53dfb96d9cdd9118ebca5dbb3ab9efaaab763107b98588e3385c336bf16",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-operator@sha256:5f97c53dfb96d9cdd9118ebca5dbb3ab9efaaab763107b98588e3385c336bf16",
          "name": "modelbuilder"
        },
        {
          "digest": "sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:1de895df0c9bce080e0a45efce78e70c99de43484de0fb6e4e5ba824d9566434",
          "image": "registry.access.redhat.com/rhel8/postgresql-12@sha256:1de895df0c9bce080e0a45efce78e70c99de43484de0fb6e4e5ba824d9566434",
          "name": "postgres_cli"
        },
        {
          "digest": "sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "image": "registry.connect.redhat.com/crunchydata/pgo-deployer@sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "name": "pgo_deploy"
        },
        {
          "digest": "sha256:7d7ac1726d07e5c0cce79fa2b7d6ea7dfac3b94a1873ceeac84a90b2f5a0273d",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-pgo-util@sha256:7d7ac1726d07e5c0cce79fa2b7d6ea7dfac3b94a1873ceeac84a90b2f5a0273d",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:7bcd7a92907ad0939554a437fbb0e80ff12c3aeaf6ad210bba0c89433bea16af",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-augmentor@sha256:7bcd7a92907ad0939554a437fbb0e80ff12c3aeaf6ad210bba0c89433bea16af",
          "name": "coreml_augmentor"
        },
        {
          "digest": "sha256:212862b00a90d2196a5afe0d8af5cc07185c006d62dd6128f382fb3fc2f0968a",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-image-server@sha256:212862b00a90d2196a5afe0d8af5cc07185c006d62dd6128f382fb3fc2f0968a",
          "name": "nginx"
        },
        {
          "digest": "sha256:b323308be2254a0d3e6e4aa83df32392443d3c1673fa5e63a64fb54500bad71b",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-auth-service@sha256:b323308be2254a0d3e6e4aa83df32392443d3c1673fa5e63a64fb54500bad71b",
          "name": "mb_auth_coreml"
        },
        {
          "digest": "sha256:72d078265a40f4dd92f488f0445fb112e9fe8ea05b729dd7af282d3c9c710f6c",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-cv-training-service@sha256:72d078265a40f4dd92f488f0445fb112e9fe8ea05b729dd7af282d3c9c710f6c",
          "name": "mb_service_coreml"
        },
        {
          "digest": "sha256:e43443f9b8a5c0c4f228c23f302b37444f74b55539b6fd5f7ca4d6ebc9d5e0f1",
          "image": "registry.redhat.io/rhel8/redis-6@sha256:e43443f9b8a5c0c4f228c23f302b37444f74b55539b6fd5f7ca4d6ebc9d5e0f1",
          "name": "redis"
        },
        {
          "digest": "sha256:22408e0392919e45280975044c5b3ea494e661e1db9f656df37c23ffdfbe8b96",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-util@sha256:22408e0392919e45280975044c5b3ea494e661e1db9f656df37c23ffdfbe8b96",
          "name": "util"
        }
      ],
      "replaces": "",
      "skip_range": "<1.0.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "61fa63936fe3ead398e98696",
      "alm_examples": [
        {
          "api_version": "modelbuilder.com/v1alpha1",
          "kind": "Modelbuilder",
          "metadata": {
            "name": "modelbuilder-sample"
          },
          "spec": {
            "backup_storage": {
              "storage#": "20G",
              "storage_class": "ibmc-file-gold-gid"
            },
            "email_notification": {
              "accept": true,
              "vm_mail_recipient": ""
            },
            "env_type": "prod",
            "in_memory_storage": {
              "storage#": "20G",
              "storage_class": "ibmc-file-gold-gid"
            },
            "license": {
              "accept": false
            },
            "metadata_storage": {
              "storage#": "20G",
              "storage_class": "ibmc-block-bronze"
            },
            "photo_storage": {
              "storage#": "500G",
              "storage_class": "ibmc-file-gold-gid"
            },
            "vm_request_method": "dynamic"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/modelbuilder-bundle@sha256:8a543a64ae75166509c1b49eca6c82723fc398108f6fda4b294f89b24ab086ad",
      "bundle_path_digest": "sha256:8a543a64ae75166509c1b49eca6c82723fc398108f6fda4b294f89b24ab086ad",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-02T10:57:23.126000+00:00",
      "csv_description": "IBM Services Software Model Builder for Vision is an AI training platform that can use the capabilities of IBM Cloud and its GPUs to quickly train computer vision models for compatible mobile apps. IBM Services Software Inspection Workbench iOS and iPadOS app will be used as the exclusive UI for labeling and training. Specifically, IBM Model Builder for Vision will train computer vision models that can then be deployed for use on the IBM Services Software Inspector Portable , IBM Services Software Inspector Wearable and the IBM Maximo Visual Inspection Mobile apps.",
      "csv_display_name": "IBM Model Builder for Vision",
      "csv_metadata_description": "",
      "csv_name": "ibm-modelbuilder-for-vision-certified.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:12:16.176000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "model-builder-for-vision-certified",
      "provided_apis": [
        {
          "group": "modelbuilder.com",
          "kind": "Modelbuilder",
          "plural": "modelbuilders",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5f97c53dfb96d9cdd9118ebca5dbb3ab9efaaab763107b98588e3385c336bf16",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-operator@sha256:5f97c53dfb96d9cdd9118ebca5dbb3ab9efaaab763107b98588e3385c336bf16",
          "name": "modelbuilder-operator-5f97c53dfb96d9cdd9118ebca5dbb3ab9efaaab763107b98588e3385c336bf16-annotation"
        },
        {
          "digest": "sha256:5f97c53dfb96d9cdd9118ebca5dbb3ab9efaaab763107b98588e3385c336bf16",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-operator@sha256:5f97c53dfb96d9cdd9118ebca5dbb3ab9efaaab763107b98588e3385c336bf16",
          "name": "modelbuilder"
        },
        {
          "digest": "sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:1de895df0c9bce080e0a45efce78e70c99de43484de0fb6e4e5ba824d9566434",
          "image": "registry.access.redhat.com/rhel8/postgresql-12@sha256:1de895df0c9bce080e0a45efce78e70c99de43484de0fb6e4e5ba824d9566434",
          "name": "postgres_cli"
        },
        {
          "digest": "sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "image": "registry.connect.redhat.com/crunchydata/pgo-deployer@sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "name": "pgo_deploy"
        },
        {
          "digest": "sha256:7d7ac1726d07e5c0cce79fa2b7d6ea7dfac3b94a1873ceeac84a90b2f5a0273d",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-pgo-util@sha256:7d7ac1726d07e5c0cce79fa2b7d6ea7dfac3b94a1873ceeac84a90b2f5a0273d",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:7bcd7a92907ad0939554a437fbb0e80ff12c3aeaf6ad210bba0c89433bea16af",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-augmentor@sha256:7bcd7a92907ad0939554a437fbb0e80ff12c3aeaf6ad210bba0c89433bea16af",
          "name": "coreml_augmentor"
        },
        {
          "digest": "sha256:212862b00a90d2196a5afe0d8af5cc07185c006d62dd6128f382fb3fc2f0968a",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-image-server@sha256:212862b00a90d2196a5afe0d8af5cc07185c006d62dd6128f382fb3fc2f0968a",
          "name": "nginx"
        },
        {
          "digest": "sha256:b323308be2254a0d3e6e4aa83df32392443d3c1673fa5e63a64fb54500bad71b",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-auth-service@sha256:b323308be2254a0d3e6e4aa83df32392443d3c1673fa5e63a64fb54500bad71b",
          "name": "mb_auth_coreml"
        },
        {
          "digest": "sha256:72d078265a40f4dd92f488f0445fb112e9fe8ea05b729dd7af282d3c9c710f6c",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-cv-training-service@sha256:72d078265a40f4dd92f488f0445fb112e9fe8ea05b729dd7af282d3c9c710f6c",
          "name": "mb_service_coreml"
        },
        {
          "digest": "sha256:e43443f9b8a5c0c4f228c23f302b37444f74b55539b6fd5f7ca4d6ebc9d5e0f1",
          "image": "registry.redhat.io/rhel8/redis-6@sha256:e43443f9b8a5c0c4f228c23f302b37444f74b55539b6fd5f7ca4d6ebc9d5e0f1",
          "name": "redis"
        },
        {
          "digest": "sha256:22408e0392919e45280975044c5b3ea494e661e1db9f656df37c23ffdfbe8b96",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-util@sha256:22408e0392919e45280975044c5b3ea494e661e1db9f656df37c23ffdfbe8b96",
          "name": "util"
        }
      ],
      "replaces": "",
      "skip_range": "<1.0.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "61fa64ea9a8a8d9fcf735c39",
      "alm_examples": [
        {
          "api_version": "modelbuilder.com/v1alpha1",
          "kind": "Modelbuilder",
          "metadata": {
            "name": "modelbuilder-sample"
          },
          "spec": {
            "backup_storage": {
              "storage#": "20G",
              "storage_class": "ibmc-file-gold-gid"
            },
            "email_notification": {
              "accept": true,
              "vm_mail_recipient": ""
            },
            "env_type": "prod",
            "in_memory_storage": {
              "storage#": "20G",
              "storage_class": "ibmc-file-gold-gid"
            },
            "license": {
              "accept": false
            },
            "metadata_storage": {
              "storage#": "20G",
              "storage_class": "ibmc-block-bronze"
            },
            "photo_storage": {
              "storage#": "500G",
              "storage_class": "ibmc-file-gold-gid"
            },
            "vm_request_method": "dynamic"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/modelbuilder-bundle@sha256:8a543a64ae75166509c1b49eca6c82723fc398108f6fda4b294f89b24ab086ad",
      "bundle_path_digest": "sha256:8a543a64ae75166509c1b49eca6c82723fc398108f6fda4b294f89b24ab086ad",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-02T11:03:06.375000+00:00",
      "csv_description": "IBM Services Software Model Builder for Vision is an AI training platform that can use the capabilities of IBM Cloud and its GPUs to quickly train computer vision models for compatible mobile apps. IBM Services Software Inspection Workbench iOS and iPadOS app will be used as the exclusive UI for labeling and training. Specifically, IBM Model Builder for Vision will train computer vision models that can then be deployed for use on the IBM Services Software Inspector Portable , IBM Services Software Inspector Wearable and the IBM Maximo Visual Inspection Mobile apps.",
      "csv_display_name": "IBM Model Builder for Vision",
      "csv_metadata_description": "",
      "csv_name": "ibm-modelbuilder-for-vision-certified.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:52:06.313000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "model-builder-for-vision-certified",
      "provided_apis": [
        {
          "group": "modelbuilder.com",
          "kind": "Modelbuilder",
          "plural": "modelbuilders",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5f97c53dfb96d9cdd9118ebca5dbb3ab9efaaab763107b98588e3385c336bf16",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-operator@sha256:5f97c53dfb96d9cdd9118ebca5dbb3ab9efaaab763107b98588e3385c336bf16",
          "name": "modelbuilder-operator-5f97c53dfb96d9cdd9118ebca5dbb3ab9efaaab763107b98588e3385c336bf16-annotation"
        },
        {
          "digest": "sha256:5f97c53dfb96d9cdd9118ebca5dbb3ab9efaaab763107b98588e3385c336bf16",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-operator@sha256:5f97c53dfb96d9cdd9118ebca5dbb3ab9efaaab763107b98588e3385c336bf16",
          "name": "modelbuilder"
        },
        {
          "digest": "sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:1de895df0c9bce080e0a45efce78e70c99de43484de0fb6e4e5ba824d9566434",
          "image": "registry.access.redhat.com/rhel8/postgresql-12@sha256:1de895df0c9bce080e0a45efce78e70c99de43484de0fb6e4e5ba824d9566434",
          "name": "postgres_cli"
        },
        {
          "digest": "sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "image": "registry.connect.redhat.com/crunchydata/pgo-deployer@sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "name": "pgo_deploy"
        },
        {
          "digest": "sha256:7d7ac1726d07e5c0cce79fa2b7d6ea7dfac3b94a1873ceeac84a90b2f5a0273d",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-pgo-util@sha256:7d7ac1726d07e5c0cce79fa2b7d6ea7dfac3b94a1873ceeac84a90b2f5a0273d",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:7bcd7a92907ad0939554a437fbb0e80ff12c3aeaf6ad210bba0c89433bea16af",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-augmentor@sha256:7bcd7a92907ad0939554a437fbb0e80ff12c3aeaf6ad210bba0c89433bea16af",
          "name": "coreml_augmentor"
        },
        {
          "digest": "sha256:212862b00a90d2196a5afe0d8af5cc07185c006d62dd6128f382fb3fc2f0968a",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-image-server@sha256:212862b00a90d2196a5afe0d8af5cc07185c006d62dd6128f382fb3fc2f0968a",
          "name": "nginx"
        },
        {
          "digest": "sha256:b323308be2254a0d3e6e4aa83df32392443d3c1673fa5e63a64fb54500bad71b",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-auth-service@sha256:b323308be2254a0d3e6e4aa83df32392443d3c1673fa5e63a64fb54500bad71b",
          "name": "mb_auth_coreml"
        },
        {
          "digest": "sha256:72d078265a40f4dd92f488f0445fb112e9fe8ea05b729dd7af282d3c9c710f6c",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-cv-training-service@sha256:72d078265a40f4dd92f488f0445fb112e9fe8ea05b729dd7af282d3c9c710f6c",
          "name": "mb_service_coreml"
        },
        {
          "digest": "sha256:e43443f9b8a5c0c4f228c23f302b37444f74b55539b6fd5f7ca4d6ebc9d5e0f1",
          "image": "registry.redhat.io/rhel8/redis-6@sha256:e43443f9b8a5c0c4f228c23f302b37444f74b55539b6fd5f7ca4d6ebc9d5e0f1",
          "name": "redis"
        },
        {
          "digest": "sha256:22408e0392919e45280975044c5b3ea494e661e1db9f656df37c23ffdfbe8b96",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-util@sha256:22408e0392919e45280975044c5b3ea494e661e1db9f656df37c23ffdfbe8b96",
          "name": "util"
        }
      ],
      "replaces": "",
      "skip_range": "<1.0.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "61faf09b9a8a8d9fcf735ccf",
      "alm_examples": [
        {
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.4.4"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:8bffee3d5fd62705d31bd624c8355da578ff74109a34027e9531aae6f2a701e4",
      "bundle_path_digest": "sha256:8bffee3d5fd62705d31bd624c8355da578ff74109a34027e9531aae6f2a701e4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-02T20:59:07.770000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.6.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:01:40.218000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:57f9582de46eab0818826b550fb9b1aac3c57890f0adb464963ad11c34795468",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:57f9582de46eab0818826b550fb9b1aac3c57890f0adb464963ad11c34795468",
          "name": "t8c-operator-57f9582de46eab0818826b550fb9b1aac3c57890f0adb464963ad11c34795468-annotation"
        },
        {
          "digest": "sha256:57f9582de46eab0818826b550fb9b1aac3c57890f0adb464963ad11c34795468",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:57f9582de46eab0818826b550fb9b1aac3c57890f0adb464963ad11c34795468",
          "name": "t8c-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "42.6.0",
      "version_original": "42.6.0"
    },
    {
      "_id": "61faf2416fe3ead398e98728",
      "alm_examples": [
        {
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.4.4"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:8bffee3d5fd62705d31bd624c8355da578ff74109a34027e9531aae6f2a701e4",
      "bundle_path_digest": "sha256:8bffee3d5fd62705d31bd624c8355da578ff74109a34027e9531aae6f2a701e4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-02T21:06:09.456000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.6.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T15:07:11.388000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:57f9582de46eab0818826b550fb9b1aac3c57890f0adb464963ad11c34795468",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:57f9582de46eab0818826b550fb9b1aac3c57890f0adb464963ad11c34795468",
          "name": "t8c-operator-57f9582de46eab0818826b550fb9b1aac3c57890f0adb464963ad11c34795468-annotation"
        },
        {
          "digest": "sha256:57f9582de46eab0818826b550fb9b1aac3c57890f0adb464963ad11c34795468",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:57f9582de46eab0818826b550fb9b1aac3c57890f0adb464963ad11c34795468",
          "name": "t8c-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "42.6.0",
      "version_original": "42.6.0"
    },
    {
      "_id": "61faf3dc153d30bcbfa96c82",
      "alm_examples": [
        {
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.4.4"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:8bffee3d5fd62705d31bd624c8355da578ff74109a34027e9531aae6f2a701e4",
      "bundle_path_digest": "sha256:8bffee3d5fd62705d31bd624c8355da578ff74109a34027e9531aae6f2a701e4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-02T21:13:00.300000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.6.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:21:38.328000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:57f9582de46eab0818826b550fb9b1aac3c57890f0adb464963ad11c34795468",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:57f9582de46eab0818826b550fb9b1aac3c57890f0adb464963ad11c34795468",
          "name": "t8c-operator-57f9582de46eab0818826b550fb9b1aac3c57890f0adb464963ad11c34795468-annotation"
        },
        {
          "digest": "sha256:57f9582de46eab0818826b550fb9b1aac3c57890f0adb464963ad11c34795468",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:57f9582de46eab0818826b550fb9b1aac3c57890f0adb464963ad11c34795468",
          "name": "t8c-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "42.6.0",
      "version_original": "42.6.0"
    },
    {
      "_id": "61faf432891fad8774b86b88",
      "alm_examples": [
        {
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.4.4"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:8bffee3d5fd62705d31bd624c8355da578ff74109a34027e9531aae6f2a701e4",
      "bundle_path_digest": "sha256:8bffee3d5fd62705d31bd624c8355da578ff74109a34027e9531aae6f2a701e4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-02T21:14:26.959000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.6.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:19:18.153000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:57f9582de46eab0818826b550fb9b1aac3c57890f0adb464963ad11c34795468",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:57f9582de46eab0818826b550fb9b1aac3c57890f0adb464963ad11c34795468",
          "name": "t8c-operator-57f9582de46eab0818826b550fb9b1aac3c57890f0adb464963ad11c34795468-annotation"
        },
        {
          "digest": "sha256:57f9582de46eab0818826b550fb9b1aac3c57890f0adb464963ad11c34795468",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:57f9582de46eab0818826b550fb9b1aac3c57890f0adb464963ad11c34795468",
          "name": "t8c-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "42.6.0",
      "version_original": "42.6.0"
    },
    {
      "_id": "61fd21221ee05860599f9e46",
      "alm_examples": [
        {
          "api_version": "infrastructure.asset.orchestrator.com/v1",
          "kind": "Generatekey",
          "metadata": {
            "name": "modelbuilder-token"
          },
          "spec": {}
        },
        {
          "api_version": "infrastructure.asset.orchestrator.com/v1",
          "kind": "Mb-broker-service",
          "metadata": {
            "name": "mb-broker-service-sample"
          },
          "spec": {
            "env_type": "prod",
            "external_db": {
              "enabled": false
            },
            "postgres": {
              "enable_pg_tls": true,
              "storage#": "20G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/iao-bundle@sha256:1a31b4b8bf347ee1368b7df89ffbbc2fa2886c3c892eebcf2f340d1bed398f09",
      "bundle_path_digest": "sha256:1a31b4b8bf347ee1368b7df89ffbbc2fa2886c3c892eebcf2f340d1bed398f09",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-04T12:50:42.041000+00:00",
      "csv_description": "Infrastructure Asset Orchestrator provides users access to cloud resources and services. Leverages the dynamic nature of the cloud platforms to provide significant cost savings and efficiencies. Using the Infrastructure Asset Orchestrator user can provision, configure, utilize and deprovision variety of services on the IBM Cloud Catalog.",
      "csv_display_name": "Infrastructure Asset Orchestrator",
      "csv_metadata_description": "",
      "csv_name": "infrastructure-asset-orchestrator-certified.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:13:29.821000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "infrastructure-asset-orchestrator-certified",
      "provided_apis": [
        {
          "group": "infrastructure.asset.orchestrator.com",
          "kind": "Generatekey",
          "version": "v1"
        },
        {
          "group": "infrastructure.asset.orchestrator.com",
          "kind": "Mb-broker-service",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:65afe0a057731a5321c848119cf352f5961a7512adf5544aded46ed9c6f66fe4",
          "image": "registry.connect.redhat.com/ibm/iao-operator@sha256:65afe0a057731a5321c848119cf352f5961a7512adf5544aded46ed9c6f66fe4",
          "name": "iao-operator-65afe0a057731a5321c848119cf352f5961a7512adf5544aded46ed9c6f66fe4-annotation"
        },
        {
          "digest": "sha256:65afe0a057731a5321c848119cf352f5961a7512adf5544aded46ed9c6f66fe4",
          "image": "registry.connect.redhat.com/ibm/iao-operator@sha256:65afe0a057731a5321c848119cf352f5961a7512adf5544aded46ed9c6f66fe4",
          "name": "infrastructure-asset-orchestrator"
        },
        {
          "digest": "sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:18b926262665add6733d81cf08de8cd8eda7cde082be1201dd294b7aff18ce43",
          "image": "registry.connect.redhat.com/ibm/iao-orchestrator-service@sha256:18b926262665add6733d81cf08de8cd8eda7cde082be1201dd294b7aff18ce43",
          "name": "orchestrator"
        },
        {
          "digest": "sha256:9c9d071488d4c23637684a9f0ef818151a056140e2f71df32f4112a73886d71b",
          "image": "registry.connect.redhat.com/ibm/iao-mb-broker-service@sha256:9c9d071488d4c23637684a9f0ef818151a056140e2f71df32f4112a73886d71b",
          "name": "mb_broker"
        },
        {
          "digest": "sha256:336ee99fb072c2c7281de94c83b506fa7e3fe91d1015f10d5db275da81c568ae",
          "image": "registry.connect.redhat.com/ibm/iao-util@sha256:336ee99fb072c2c7281de94c83b506fa7e3fe91d1015f10d5db275da81c568ae",
          "name": "mb_util"
        },
        {
          "digest": "sha256:dfef558bda03a13bdc3802220a31e89994b2c16db6588c374421df57bd539e9e",
          "image": "registry.connect.redhat.com/ibm/iao-pgo-util@sha256:dfef558bda03a13bdc3802220a31e89994b2c16db6588c374421df57bd539e9e",
          "name": "pgo_client"
        }
      ],
      "replaces": "",
      "skip_range": "<1.0.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "61fd212a4172771714799797",
      "alm_examples": [
        {
          "api_version": "infrastructure.asset.orchestrator.com/v1",
          "kind": "Generatekey",
          "metadata": {
            "name": "modelbuilder-token"
          },
          "spec": {}
        },
        {
          "api_version": "infrastructure.asset.orchestrator.com/v1",
          "kind": "Mb-broker-service",
          "metadata": {
            "name": "mb-broker-service-sample"
          },
          "spec": {
            "env_type": "prod",
            "external_db": {
              "enabled": false
            },
            "postgres": {
              "enable_pg_tls": true,
              "storage#": "20G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/iao-bundle@sha256:1a31b4b8bf347ee1368b7df89ffbbc2fa2886c3c892eebcf2f340d1bed398f09",
      "bundle_path_digest": "sha256:1a31b4b8bf347ee1368b7df89ffbbc2fa2886c3c892eebcf2f340d1bed398f09",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-04T12:50:50.677000+00:00",
      "csv_description": "Infrastructure Asset Orchestrator provides users access to cloud resources and services. Leverages the dynamic nature of the cloud platforms to provide significant cost savings and efficiencies. Using the Infrastructure Asset Orchestrator user can provision, configure, utilize and deprovision variety of services on the IBM Cloud Catalog.",
      "csv_display_name": "Infrastructure Asset Orchestrator",
      "csv_metadata_description": "",
      "csv_name": "infrastructure-asset-orchestrator-certified.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:38:52.746000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "infrastructure-asset-orchestrator-certified",
      "provided_apis": [
        {
          "group": "infrastructure.asset.orchestrator.com",
          "kind": "Generatekey",
          "version": "v1"
        },
        {
          "group": "infrastructure.asset.orchestrator.com",
          "kind": "Mb-broker-service",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:65afe0a057731a5321c848119cf352f5961a7512adf5544aded46ed9c6f66fe4",
          "image": "registry.connect.redhat.com/ibm/iao-operator@sha256:65afe0a057731a5321c848119cf352f5961a7512adf5544aded46ed9c6f66fe4",
          "name": "iao-operator-65afe0a057731a5321c848119cf352f5961a7512adf5544aded46ed9c6f66fe4-annotation"
        },
        {
          "digest": "sha256:65afe0a057731a5321c848119cf352f5961a7512adf5544aded46ed9c6f66fe4",
          "image": "registry.connect.redhat.com/ibm/iao-operator@sha256:65afe0a057731a5321c848119cf352f5961a7512adf5544aded46ed9c6f66fe4",
          "name": "infrastructure-asset-orchestrator"
        },
        {
          "digest": "sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:18b926262665add6733d81cf08de8cd8eda7cde082be1201dd294b7aff18ce43",
          "image": "registry.connect.redhat.com/ibm/iao-orchestrator-service@sha256:18b926262665add6733d81cf08de8cd8eda7cde082be1201dd294b7aff18ce43",
          "name": "orchestrator"
        },
        {
          "digest": "sha256:9c9d071488d4c23637684a9f0ef818151a056140e2f71df32f4112a73886d71b",
          "image": "registry.connect.redhat.com/ibm/iao-mb-broker-service@sha256:9c9d071488d4c23637684a9f0ef818151a056140e2f71df32f4112a73886d71b",
          "name": "mb_broker"
        },
        {
          "digest": "sha256:336ee99fb072c2c7281de94c83b506fa7e3fe91d1015f10d5db275da81c568ae",
          "image": "registry.connect.redhat.com/ibm/iao-util@sha256:336ee99fb072c2c7281de94c83b506fa7e3fe91d1015f10d5db275da81c568ae",
          "name": "mb_util"
        },
        {
          "digest": "sha256:dfef558bda03a13bdc3802220a31e89994b2c16db6588c374421df57bd539e9e",
          "image": "registry.connect.redhat.com/ibm/iao-pgo-util@sha256:dfef558bda03a13bdc3802220a31e89994b2c16db6588c374421df57bd539e9e",
          "name": "pgo_client"
        }
      ],
      "replaces": "",
      "skip_range": "<1.0.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "61fd22b14172771714799798",
      "alm_examples": [
        {
          "api_version": "infrastructure.asset.orchestrator.com/v1",
          "kind": "Generatekey",
          "metadata": {
            "name": "modelbuilder-token"
          },
          "spec": {}
        },
        {
          "api_version": "infrastructure.asset.orchestrator.com/v1",
          "kind": "Mb-broker-service",
          "metadata": {
            "name": "mb-broker-service-sample"
          },
          "spec": {
            "env_type": "prod",
            "external_db": {
              "enabled": false
            },
            "postgres": {
              "enable_pg_tls": true,
              "storage#": "20G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/iao-bundle@sha256:1a31b4b8bf347ee1368b7df89ffbbc2fa2886c3c892eebcf2f340d1bed398f09",
      "bundle_path_digest": "sha256:1a31b4b8bf347ee1368b7df89ffbbc2fa2886c3c892eebcf2f340d1bed398f09",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-04T12:57:21.989000+00:00",
      "csv_description": "Infrastructure Asset Orchestrator provides users access to cloud resources and services. Leverages the dynamic nature of the cloud platforms to provide significant cost savings and efficiencies. Using the Infrastructure Asset Orchestrator user can provision, configure, utilize and deprovision variety of services on the IBM Cloud Catalog.",
      "csv_display_name": "Infrastructure Asset Orchestrator",
      "csv_metadata_description": "",
      "csv_name": "infrastructure-asset-orchestrator-certified.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:34:58.430000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "infrastructure-asset-orchestrator-certified",
      "provided_apis": [
        {
          "group": "infrastructure.asset.orchestrator.com",
          "kind": "Generatekey",
          "version": "v1"
        },
        {
          "group": "infrastructure.asset.orchestrator.com",
          "kind": "Mb-broker-service",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:65afe0a057731a5321c848119cf352f5961a7512adf5544aded46ed9c6f66fe4",
          "image": "registry.connect.redhat.com/ibm/iao-operator@sha256:65afe0a057731a5321c848119cf352f5961a7512adf5544aded46ed9c6f66fe4",
          "name": "iao-operator-65afe0a057731a5321c848119cf352f5961a7512adf5544aded46ed9c6f66fe4-annotation"
        },
        {
          "digest": "sha256:65afe0a057731a5321c848119cf352f5961a7512adf5544aded46ed9c6f66fe4",
          "image": "registry.connect.redhat.com/ibm/iao-operator@sha256:65afe0a057731a5321c848119cf352f5961a7512adf5544aded46ed9c6f66fe4",
          "name": "infrastructure-asset-orchestrator"
        },
        {
          "digest": "sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:18b926262665add6733d81cf08de8cd8eda7cde082be1201dd294b7aff18ce43",
          "image": "registry.connect.redhat.com/ibm/iao-orchestrator-service@sha256:18b926262665add6733d81cf08de8cd8eda7cde082be1201dd294b7aff18ce43",
          "name": "orchestrator"
        },
        {
          "digest": "sha256:9c9d071488d4c23637684a9f0ef818151a056140e2f71df32f4112a73886d71b",
          "image": "registry.connect.redhat.com/ibm/iao-mb-broker-service@sha256:9c9d071488d4c23637684a9f0ef818151a056140e2f71df32f4112a73886d71b",
          "name": "mb_broker"
        },
        {
          "digest": "sha256:336ee99fb072c2c7281de94c83b506fa7e3fe91d1015f10d5db275da81c568ae",
          "image": "registry.connect.redhat.com/ibm/iao-util@sha256:336ee99fb072c2c7281de94c83b506fa7e3fe91d1015f10d5db275da81c568ae",
          "name": "mb_util"
        },
        {
          "digest": "sha256:dfef558bda03a13bdc3802220a31e89994b2c16db6588c374421df57bd539e9e",
          "image": "registry.connect.redhat.com/ibm/iao-pgo-util@sha256:dfef558bda03a13bdc3802220a31e89994b2c16db6588c374421df57bd539e9e",
          "name": "pgo_client"
        }
      ],
      "replaces": "",
      "skip_range": "<1.0.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "620147676f7520a59798cd34",
      "alm_examples": [
        {
          "api_version": "modelbuilder.com/v1alpha1",
          "kind": "Modelbuilder",
          "metadata": {
            "name": "modelbuilder-sample"
          },
          "spec": {
            "backup_storage": {
              "storage#": "20G",
              "storage_class": "ibmc-file-gold-gid"
            },
            "email_notification": {
              "accept": true,
              "vm_mail_recipient": ""
            },
            "env_type": "prod",
            "in_memory_storage": {
              "storage#": "20G",
              "storage_class": "ibmc-file-gold-gid"
            },
            "license": {
              "accept": false
            },
            "metadata_storage": {
              "storage#": "20G",
              "storage_class": "ibmc-block-bronze"
            },
            "photo_storage": {
              "storage#": "500G",
              "storage_class": "ibmc-file-gold-gid"
            },
            "vm_request_method": "dynamic"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/modelbuilder-bundle@sha256:5d5f3733a803a04e2a328f45a4563124e95a254c7f9d4d82ae90a2e314581783",
      "bundle_path_digest": "sha256:5d5f3733a803a04e2a328f45a4563124e95a254c7f9d4d82ae90a2e314581783",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-07T16:23:03.748000+00:00",
      "csv_description": "IBM Services Software Model Builder for Vision is an AI training platform that can use the capabilities of IBM Cloud and its GPUs to quickly train computer vision models for compatible mobile apps. IBM Services Software Inspection Workbench iOS and iPadOS app will be used as the exclusive UI for labeling and training. Specifically, IBM Model Builder for Vision will train computer vision models that can then be deployed for use on the IBM Services Software Inspector Portable , IBM Services Software Inspector Wearable and the IBM Maximo Visual Inspection Mobile apps.",
      "csv_display_name": "IBM Model Builder for Vision",
      "csv_metadata_description": "",
      "csv_name": "ibm-modelbuilder-for-vision-certified.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:33:07.690000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "model-builder-for-vision-certified",
      "provided_apis": [
        {
          "group": "modelbuilder.com",
          "kind": "Modelbuilder",
          "plural": "modelbuilders",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c122932689b76cd802bcbd5f662f246487b7843bd404a9bdbfdbd186b02a87c4",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-operator@sha256:c122932689b76cd802bcbd5f662f246487b7843bd404a9bdbfdbd186b02a87c4",
          "name": "modelbuilder-operator-c122932689b76cd802bcbd5f662f246487b7843bd404a9bdbfdbd186b02a87c4-annotation"
        },
        {
          "digest": "sha256:c122932689b76cd802bcbd5f662f246487b7843bd404a9bdbfdbd186b02a87c4",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-operator@sha256:c122932689b76cd802bcbd5f662f246487b7843bd404a9bdbfdbd186b02a87c4",
          "name": "modelbuilder"
        },
        {
          "digest": "sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:1de895df0c9bce080e0a45efce78e70c99de43484de0fb6e4e5ba824d9566434",
          "image": "registry.redhat.io/rhel8/postgresql-12@sha256:1de895df0c9bce080e0a45efce78e70c99de43484de0fb6e4e5ba824d9566434",
          "name": "postgres_cli"
        },
        {
          "digest": "sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "image": "registry.connect.redhat.com/crunchydata/pgo-deployer@sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "name": "pgo_deploy"
        },
        {
          "digest": "sha256:7d7ac1726d07e5c0cce79fa2b7d6ea7dfac3b94a1873ceeac84a90b2f5a0273d",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-pgo-util@sha256:7d7ac1726d07e5c0cce79fa2b7d6ea7dfac3b94a1873ceeac84a90b2f5a0273d",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:63b02ce3948e9bc42a2e22d3558b94a1429f14f0eaeac015c9c65ab5f591daec",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-augmentor@sha256:63b02ce3948e9bc42a2e22d3558b94a1429f14f0eaeac015c9c65ab5f591daec",
          "name": "coreml_augmentor"
        },
        {
          "digest": "sha256:23e67f861137494026a2d4fb4e5dd0f99f122447115887d2a2a0003c753c1187",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-image-server@sha256:23e67f861137494026a2d4fb4e5dd0f99f122447115887d2a2a0003c753c1187",
          "name": "nginx"
        },
        {
          "digest": "sha256:ecb50f1b604821b01d9f7e539234db4a56417a3f02c89cef12445d2f5ac40821",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-auth-service@sha256:ecb50f1b604821b01d9f7e539234db4a56417a3f02c89cef12445d2f5ac40821",
          "name": "mb_auth_coreml"
        },
        {
          "digest": "sha256:899d7a37526ac12b3c2aafeade367d523811b771af18999d828dcd7fbc4367a8",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-cv-training-service@sha256:899d7a37526ac12b3c2aafeade367d523811b771af18999d828dcd7fbc4367a8",
          "name": "mb_service_coreml"
        },
        {
          "digest": "sha256:e43443f9b8a5c0c4f228c23f302b37444f74b55539b6fd5f7ca4d6ebc9d5e0f1",
          "image": "registry.redhat.io/rhel8/redis-6@sha256:e43443f9b8a5c0c4f228c23f302b37444f74b55539b6fd5f7ca4d6ebc9d5e0f1",
          "name": "redis"
        },
        {
          "digest": "sha256:22408e0392919e45280975044c5b3ea494e661e1db9f656df37c23ffdfbe8b96",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-util@sha256:22408e0392919e45280975044c5b3ea494e661e1db9f656df37c23ffdfbe8b96",
          "name": "util"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "6201478d6f7520a59798cd36",
      "alm_examples": [
        {
          "api_version": "modelbuilder.com/v1alpha1",
          "kind": "Modelbuilder",
          "metadata": {
            "name": "modelbuilder-sample"
          },
          "spec": {
            "backup_storage": {
              "storage#": "20G",
              "storage_class": "ibmc-file-gold-gid"
            },
            "email_notification": {
              "accept": true,
              "vm_mail_recipient": ""
            },
            "env_type": "prod",
            "in_memory_storage": {
              "storage#": "20G",
              "storage_class": "ibmc-file-gold-gid"
            },
            "license": {
              "accept": false
            },
            "metadata_storage": {
              "storage#": "20G",
              "storage_class": "ibmc-block-bronze"
            },
            "photo_storage": {
              "storage#": "500G",
              "storage_class": "ibmc-file-gold-gid"
            },
            "vm_request_method": "dynamic"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/modelbuilder-bundle@sha256:5d5f3733a803a04e2a328f45a4563124e95a254c7f9d4d82ae90a2e314581783",
      "bundle_path_digest": "sha256:5d5f3733a803a04e2a328f45a4563124e95a254c7f9d4d82ae90a2e314581783",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-07T16:23:41.735000+00:00",
      "csv_description": "IBM Services Software Model Builder for Vision is an AI training platform that can use the capabilities of IBM Cloud and its GPUs to quickly train computer vision models for compatible mobile apps. IBM Services Software Inspection Workbench iOS and iPadOS app will be used as the exclusive UI for labeling and training. Specifically, IBM Model Builder for Vision will train computer vision models that can then be deployed for use on the IBM Services Software Inspector Portable , IBM Services Software Inspector Wearable and the IBM Maximo Visual Inspection Mobile apps.",
      "csv_display_name": "IBM Model Builder for Vision",
      "csv_metadata_description": "",
      "csv_name": "ibm-modelbuilder-for-vision-certified.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:51:00.802000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "model-builder-for-vision-certified",
      "provided_apis": [
        {
          "group": "modelbuilder.com",
          "kind": "Modelbuilder",
          "plural": "modelbuilders",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c122932689b76cd802bcbd5f662f246487b7843bd404a9bdbfdbd186b02a87c4",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-operator@sha256:c122932689b76cd802bcbd5f662f246487b7843bd404a9bdbfdbd186b02a87c4",
          "name": "modelbuilder-operator-c122932689b76cd802bcbd5f662f246487b7843bd404a9bdbfdbd186b02a87c4-annotation"
        },
        {
          "digest": "sha256:c122932689b76cd802bcbd5f662f246487b7843bd404a9bdbfdbd186b02a87c4",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-operator@sha256:c122932689b76cd802bcbd5f662f246487b7843bd404a9bdbfdbd186b02a87c4",
          "name": "modelbuilder"
        },
        {
          "digest": "sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:1de895df0c9bce080e0a45efce78e70c99de43484de0fb6e4e5ba824d9566434",
          "image": "registry.redhat.io/rhel8/postgresql-12@sha256:1de895df0c9bce080e0a45efce78e70c99de43484de0fb6e4e5ba824d9566434",
          "name": "postgres_cli"
        },
        {
          "digest": "sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "image": "registry.connect.redhat.com/crunchydata/pgo-deployer@sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "name": "pgo_deploy"
        },
        {
          "digest": "sha256:7d7ac1726d07e5c0cce79fa2b7d6ea7dfac3b94a1873ceeac84a90b2f5a0273d",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-pgo-util@sha256:7d7ac1726d07e5c0cce79fa2b7d6ea7dfac3b94a1873ceeac84a90b2f5a0273d",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:63b02ce3948e9bc42a2e22d3558b94a1429f14f0eaeac015c9c65ab5f591daec",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-augmentor@sha256:63b02ce3948e9bc42a2e22d3558b94a1429f14f0eaeac015c9c65ab5f591daec",
          "name": "coreml_augmentor"
        },
        {
          "digest": "sha256:23e67f861137494026a2d4fb4e5dd0f99f122447115887d2a2a0003c753c1187",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-image-server@sha256:23e67f861137494026a2d4fb4e5dd0f99f122447115887d2a2a0003c753c1187",
          "name": "nginx"
        },
        {
          "digest": "sha256:ecb50f1b604821b01d9f7e539234db4a56417a3f02c89cef12445d2f5ac40821",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-auth-service@sha256:ecb50f1b604821b01d9f7e539234db4a56417a3f02c89cef12445d2f5ac40821",
          "name": "mb_auth_coreml"
        },
        {
          "digest": "sha256:899d7a37526ac12b3c2aafeade367d523811b771af18999d828dcd7fbc4367a8",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-cv-training-service@sha256:899d7a37526ac12b3c2aafeade367d523811b771af18999d828dcd7fbc4367a8",
          "name": "mb_service_coreml"
        },
        {
          "digest": "sha256:e43443f9b8a5c0c4f228c23f302b37444f74b55539b6fd5f7ca4d6ebc9d5e0f1",
          "image": "registry.redhat.io/rhel8/redis-6@sha256:e43443f9b8a5c0c4f228c23f302b37444f74b55539b6fd5f7ca4d6ebc9d5e0f1",
          "name": "redis"
        },
        {
          "digest": "sha256:22408e0392919e45280975044c5b3ea494e661e1db9f656df37c23ffdfbe8b96",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-util@sha256:22408e0392919e45280975044c5b3ea494e661e1db9f656df37c23ffdfbe8b96",
          "name": "util"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "620147df6f7520a59798cd37",
      "alm_examples": [
        {
          "api_version": "modelbuilder.com/v1alpha1",
          "kind": "Modelbuilder",
          "metadata": {
            "name": "modelbuilder-sample"
          },
          "spec": {
            "backup_storage": {
              "storage#": "20G",
              "storage_class": "ibmc-file-gold-gid"
            },
            "email_notification": {
              "accept": true,
              "vm_mail_recipient": ""
            },
            "env_type": "prod",
            "in_memory_storage": {
              "storage#": "20G",
              "storage_class": "ibmc-file-gold-gid"
            },
            "license": {
              "accept": false
            },
            "metadata_storage": {
              "storage#": "20G",
              "storage_class": "ibmc-block-bronze"
            },
            "photo_storage": {
              "storage#": "500G",
              "storage_class": "ibmc-file-gold-gid"
            },
            "vm_request_method": "dynamic"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/modelbuilder-bundle@sha256:5d5f3733a803a04e2a328f45a4563124e95a254c7f9d4d82ae90a2e314581783",
      "bundle_path_digest": "sha256:5d5f3733a803a04e2a328f45a4563124e95a254c7f9d4d82ae90a2e314581783",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-07T16:25:03.677000+00:00",
      "csv_description": "IBM Services Software Model Builder for Vision is an AI training platform that can use the capabilities of IBM Cloud and its GPUs to quickly train computer vision models for compatible mobile apps. IBM Services Software Inspection Workbench iOS and iPadOS app will be used as the exclusive UI for labeling and training. Specifically, IBM Model Builder for Vision will train computer vision models that can then be deployed for use on the IBM Services Software Inspector Portable , IBM Services Software Inspector Wearable and the IBM Maximo Visual Inspection Mobile apps.",
      "csv_display_name": "IBM Model Builder for Vision",
      "csv_metadata_description": "",
      "csv_name": "ibm-modelbuilder-for-vision-certified.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:44:16.390000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "model-builder-for-vision-certified",
      "provided_apis": [
        {
          "group": "modelbuilder.com",
          "kind": "Modelbuilder",
          "plural": "modelbuilders",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c122932689b76cd802bcbd5f662f246487b7843bd404a9bdbfdbd186b02a87c4",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-operator@sha256:c122932689b76cd802bcbd5f662f246487b7843bd404a9bdbfdbd186b02a87c4",
          "name": "modelbuilder-operator-c122932689b76cd802bcbd5f662f246487b7843bd404a9bdbfdbd186b02a87c4-annotation"
        },
        {
          "digest": "sha256:c122932689b76cd802bcbd5f662f246487b7843bd404a9bdbfdbd186b02a87c4",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-operator@sha256:c122932689b76cd802bcbd5f662f246487b7843bd404a9bdbfdbd186b02a87c4",
          "name": "modelbuilder"
        },
        {
          "digest": "sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:609c19d1718947ee814b829334c37e1d720acf5fb642b0712b8ab1b14d57f53f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:1de895df0c9bce080e0a45efce78e70c99de43484de0fb6e4e5ba824d9566434",
          "image": "registry.redhat.io/rhel8/postgresql-12@sha256:1de895df0c9bce080e0a45efce78e70c99de43484de0fb6e4e5ba824d9566434",
          "name": "postgres_cli"
        },
        {
          "digest": "sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "image": "registry.connect.redhat.com/crunchydata/pgo-deployer@sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "name": "pgo_deploy"
        },
        {
          "digest": "sha256:7d7ac1726d07e5c0cce79fa2b7d6ea7dfac3b94a1873ceeac84a90b2f5a0273d",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-pgo-util@sha256:7d7ac1726d07e5c0cce79fa2b7d6ea7dfac3b94a1873ceeac84a90b2f5a0273d",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:63b02ce3948e9bc42a2e22d3558b94a1429f14f0eaeac015c9c65ab5f591daec",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-augmentor@sha256:63b02ce3948e9bc42a2e22d3558b94a1429f14f0eaeac015c9c65ab5f591daec",
          "name": "coreml_augmentor"
        },
        {
          "digest": "sha256:23e67f861137494026a2d4fb4e5dd0f99f122447115887d2a2a0003c753c1187",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-image-server@sha256:23e67f861137494026a2d4fb4e5dd0f99f122447115887d2a2a0003c753c1187",
          "name": "nginx"
        },
        {
          "digest": "sha256:ecb50f1b604821b01d9f7e539234db4a56417a3f02c89cef12445d2f5ac40821",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-auth-service@sha256:ecb50f1b604821b01d9f7e539234db4a56417a3f02c89cef12445d2f5ac40821",
          "name": "mb_auth_coreml"
        },
        {
          "digest": "sha256:899d7a37526ac12b3c2aafeade367d523811b771af18999d828dcd7fbc4367a8",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-cv-training-service@sha256:899d7a37526ac12b3c2aafeade367d523811b771af18999d828dcd7fbc4367a8",
          "name": "mb_service_coreml"
        },
        {
          "digest": "sha256:e43443f9b8a5c0c4f228c23f302b37444f74b55539b6fd5f7ca4d6ebc9d5e0f1",
          "image": "registry.redhat.io/rhel8/redis-6@sha256:e43443f9b8a5c0c4f228c23f302b37444f74b55539b6fd5f7ca4d6ebc9d5e0f1",
          "name": "redis"
        },
        {
          "digest": "sha256:22408e0392919e45280975044c5b3ea494e661e1db9f656df37c23ffdfbe8b96",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-util@sha256:22408e0392919e45280975044c5b3ea494e661e1db9f656df37c23ffdfbe8b96",
          "name": "util"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "62015cfbebdcecb025356252",
      "alm_examples": [
        {
          "api_version": "anzograph.clusters.cambridgesemantics.com/v2",
          "kind": "AnzoGraph",
          "metadata": {
            "name": "azg01"
          },
          "spec": {
            "db": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app_data": "anzograph-data-grpc",
                      "app_mgmt": "anzograph-mgmt-grpc"
                    }
                  },
                  "serviceName": "anzograph-azg01",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app_data": "anzograph-data-grpc",
                        "app_mgmt": "anzograph-mgmt-grpc"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
                          "name": "db",
                          "resources": {
                            "limits": {
                              "cpu": "8000m",
                              "memory": "8Gi"
                            },
                            "requests": {
                              "cpu": "8000m",
                              "memory": "8Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "anzograph-operator"
                    }
                  }
                }
              }
            },
            "deployFrontend": false,
            "frontend": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app_mgmt": "anzograph-frontend"
                    }
                  },
                  "serviceName": "anzograph-azg01",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app_mgmt": "anzograph-frontend"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
                          "name": "frontend",
                          "resources": {
                            "limits": {
                              "cpu": "2000m",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2000m",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "anzograph-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator-bundle@sha256:7b93cd550bbcb4c2b4d1c72ad60e132b8948f34feee38d18d20a89b579da4c1d",
      "bundle_path_digest": "sha256:7b93cd550bbcb4c2b4d1c72ad60e132b8948f34feee38d18d20a89b579da4c1d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-07T17:55:07.822000+00:00",
      "csv_description": "The AnzoGraph Operator provides the way to install and configure an AnzoGraph\ncluster on Red Hat K8S environment.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzograph/blob/v2.0.1/README_openshift_marketplace.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzograph/userdoc/ )\n\n### Support\n\nWe offer Support to our customers with the AnzoGraph db Enterprise Edition License [here]( https://customercenter.cambridgesemantics.com/ ). For AnzoGraph db Free Edition questions, get help from our Anzograph User Community at Stack Overflow. When submitting a question, include the tag 'anzograph'.",
      "csv_display_name": "AnzoGraph Operator",
      "csv_metadata_description": "kubernetes operator for AnzoGraph DB",
      "csv_name": "anzograph-operator.v2.0.103",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:16:35.994000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "anzograph-operator",
      "provided_apis": [
        {
          "group": "anzograph.clusters.cambridgesemantics.com",
          "kind": "AnzoGraph",
          "plural": "anzographs",
          "version": "v2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "name": "anzograph-operator"
        },
        {
          "digest": "sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "name": "anzograph-db"
        },
        {
          "digest": "sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "name": "anzograph-frontend"
        },
        {
          "digest": "sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "name": "anzograph-operator-9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72-annotation"
        },
        {
          "digest": "sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "name": "manager"
        },
        {
          "digest": "sha256:4e9acbbb33fd4761894b1c0583824a119f2ec8b07c5942bdc42d61e02607c743",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph@sha256:4e9acbbb33fd4761894b1c0583824a119f2ec8b07c5942bdc42d61e02607c743",
          "name": "anzograph_allinone"
        },
        {
          "digest": "sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "name": "anzograph_db"
        },
        {
          "digest": "sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "name": "anzograph_frontend"
        },
        {
          "digest": "sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "name": "anzograph-frontend-71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5-annotation"
        },
        {
          "digest": "sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "name": "anzograph-db-77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.0.103",
      "version_original": "2.0.103"
    },
    {
      "_id": "6201637f662a49da7c60b742",
      "alm_examples": [
        {
          "api_version": "anzograph.clusters.cambridgesemantics.com/v2",
          "kind": "AnzoGraph",
          "metadata": {
            "name": "azg01"
          },
          "spec": {
            "db": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app_data": "anzograph-data-grpc",
                      "app_mgmt": "anzograph-mgmt-grpc"
                    }
                  },
                  "serviceName": "anzograph-azg01",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app_data": "anzograph-data-grpc",
                        "app_mgmt": "anzograph-mgmt-grpc"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
                          "name": "db",
                          "resources": {
                            "limits": {
                              "cpu": "8000m",
                              "memory": "8Gi"
                            },
                            "requests": {
                              "cpu": "8000m",
                              "memory": "8Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "anzograph-operator"
                    }
                  }
                }
              }
            },
            "deployFrontend": false,
            "frontend": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app_mgmt": "anzograph-frontend"
                    }
                  },
                  "serviceName": "anzograph-azg01",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app_mgmt": "anzograph-frontend"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
                          "name": "frontend",
                          "resources": {
                            "limits": {
                              "cpu": "2000m",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2000m",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "anzograph-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator-bundle@sha256:7b93cd550bbcb4c2b4d1c72ad60e132b8948f34feee38d18d20a89b579da4c1d",
      "bundle_path_digest": "sha256:7b93cd550bbcb4c2b4d1c72ad60e132b8948f34feee38d18d20a89b579da4c1d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-07T18:22:55.224000+00:00",
      "csv_description": "The AnzoGraph Operator provides the way to install and configure an AnzoGraph\ncluster on Red Hat K8S environment.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzograph/blob/v2.0.1/README_openshift_marketplace.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzograph/userdoc/ )\n\n### Support\n\nWe offer Support to our customers with the AnzoGraph db Enterprise Edition License [here]( https://customercenter.cambridgesemantics.com/ ). For AnzoGraph db Free Edition questions, get help from our Anzograph User Community at Stack Overflow. When submitting a question, include the tag 'anzograph'.",
      "csv_display_name": "AnzoGraph Operator",
      "csv_metadata_description": "kubernetes operator for AnzoGraph DB",
      "csv_name": "anzograph-operator.v2.0.103",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:16:48.925000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "anzograph-operator",
      "provided_apis": [
        {
          "group": "anzograph.clusters.cambridgesemantics.com",
          "kind": "AnzoGraph",
          "plural": "anzographs",
          "version": "v2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "name": "anzograph-operator"
        },
        {
          "digest": "sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "name": "anzograph-db"
        },
        {
          "digest": "sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "name": "anzograph-frontend"
        },
        {
          "digest": "sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "name": "anzograph-operator-9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72-annotation"
        },
        {
          "digest": "sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "name": "manager"
        },
        {
          "digest": "sha256:4e9acbbb33fd4761894b1c0583824a119f2ec8b07c5942bdc42d61e02607c743",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph@sha256:4e9acbbb33fd4761894b1c0583824a119f2ec8b07c5942bdc42d61e02607c743",
          "name": "anzograph_allinone"
        },
        {
          "digest": "sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "name": "anzograph_db"
        },
        {
          "digest": "sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "name": "anzograph_frontend"
        },
        {
          "digest": "sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "name": "anzograph-frontend-71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5-annotation"
        },
        {
          "digest": "sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "name": "anzograph-db-77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.0.103",
      "version_original": "2.0.103"
    },
    {
      "_id": "620163b46f7520a59798cd4d",
      "alm_examples": [
        {
          "api_version": "anzograph.clusters.cambridgesemantics.com/v2",
          "kind": "AnzoGraph",
          "metadata": {
            "name": "azg01"
          },
          "spec": {
            "db": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app_data": "anzograph-data-grpc",
                      "app_mgmt": "anzograph-mgmt-grpc"
                    }
                  },
                  "serviceName": "anzograph-azg01",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app_data": "anzograph-data-grpc",
                        "app_mgmt": "anzograph-mgmt-grpc"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
                          "name": "db",
                          "resources": {
                            "limits": {
                              "cpu": "8000m",
                              "memory": "8Gi"
                            },
                            "requests": {
                              "cpu": "8000m",
                              "memory": "8Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "anzograph-operator"
                    }
                  }
                }
              }
            },
            "deployFrontend": false,
            "frontend": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app_mgmt": "anzograph-frontend"
                    }
                  },
                  "serviceName": "anzograph-azg01",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app_mgmt": "anzograph-frontend"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
                          "name": "frontend",
                          "resources": {
                            "limits": {
                              "cpu": "2000m",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2000m",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "anzograph-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator-bundle@sha256:7b93cd550bbcb4c2b4d1c72ad60e132b8948f34feee38d18d20a89b579da4c1d",
      "bundle_path_digest": "sha256:7b93cd550bbcb4c2b4d1c72ad60e132b8948f34feee38d18d20a89b579da4c1d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-07T18:23:48.541000+00:00",
      "csv_description": "The AnzoGraph Operator provides the way to install and configure an AnzoGraph\ncluster on Red Hat K8S environment.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzograph/blob/v2.0.1/README_openshift_marketplace.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzograph/userdoc/ )\n\n### Support\n\nWe offer Support to our customers with the AnzoGraph db Enterprise Edition License [here]( https://customercenter.cambridgesemantics.com/ ). For AnzoGraph db Free Edition questions, get help from our Anzograph User Community at Stack Overflow. When submitting a question, include the tag 'anzograph'.",
      "csv_display_name": "AnzoGraph Operator",
      "csv_metadata_description": "kubernetes operator for AnzoGraph DB",
      "csv_name": "anzograph-operator.v2.0.103",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:51:39.520000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "anzograph-operator",
      "provided_apis": [
        {
          "group": "anzograph.clusters.cambridgesemantics.com",
          "kind": "AnzoGraph",
          "plural": "anzographs",
          "version": "v2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "name": "anzograph-operator"
        },
        {
          "digest": "sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "name": "anzograph-db"
        },
        {
          "digest": "sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "name": "anzograph-frontend"
        },
        {
          "digest": "sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "name": "anzograph-operator-9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72-annotation"
        },
        {
          "digest": "sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "name": "manager"
        },
        {
          "digest": "sha256:4e9acbbb33fd4761894b1c0583824a119f2ec8b07c5942bdc42d61e02607c743",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph@sha256:4e9acbbb33fd4761894b1c0583824a119f2ec8b07c5942bdc42d61e02607c743",
          "name": "anzograph_allinone"
        },
        {
          "digest": "sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "name": "anzograph_db"
        },
        {
          "digest": "sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "name": "anzograph_frontend"
        },
        {
          "digest": "sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "name": "anzograph-frontend-71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5-annotation"
        },
        {
          "digest": "sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "name": "anzograph-db-77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.0.103",
      "version_original": "2.0.103"
    },
    {
      "_id": "620257106f7520a59798cdb8",
      "alm_examples": [
        {
          "api_version": "anzounstructured.clusters.cambridgesemantics.com/v1",
          "kind": "AnzoUnstructured",
          "metadata": {
            "name": "au01"
          },
          "spec": {
            "auWorker": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-w",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
                          "name": "w",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            },
            "msLeader": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-ms",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
                          "name": "ms",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-operator-bundle@sha256:0bd00c5177b5ebd4f857bc16ba666f8cc28984fe58b67855a1a0199ed8f98aca",
      "bundle_path_digest": "sha256:0bd00c5177b5ebd4f857bc16ba666f8cc28984fe58b67855a1a0199ed8f98aca",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-08T11:42:08.570000+00:00",
      "csv_description": "The Anzo Unstructured Operator provides the way to install and configure an anzo unstructured setup on Red Hat K8S environment.\nCurrently, this is possible only through existing Anzo installation.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo-unstructured/blob/v2.0.1/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Unstructured Operator",
      "csv_metadata_description": "Kubernetes Operator for Anzo Unstructured",
      "csv_name": "anzounstructured-operator.v2.0.102",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:55:47.848000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "anzounstructured-operator",
      "provided_apis": [
        {
          "group": "anzounstructured.clusters.cambridgesemantics.com",
          "kind": "AnzoUnstructured",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "name": "unstructured-operator"
        },
        {
          "digest": "sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "name": "anzo-microservices-leader"
        },
        {
          "digest": "sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "name": "anzo-unstructured-worker"
        },
        {
          "digest": "sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "name": "unstructured-operator-adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd-annotation"
        },
        {
          "digest": "sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "name": "manager"
        },
        {
          "digest": "sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "name": "anzo_microservices_leader"
        },
        {
          "digest": "sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "name": "anzo_unstructured_worker"
        },
        {
          "digest": "sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "name": "anzo-microservices-leader-c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd-annotation"
        },
        {
          "digest": "sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "name": "anzo-unstructured-worker-b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.0.1",
      "version_original": "2.0.1"
    },
    {
      "_id": "620257eb662a49da7c60b7c4",
      "alm_examples": [
        {
          "api_version": "anzounstructured.clusters.cambridgesemantics.com/v1",
          "kind": "AnzoUnstructured",
          "metadata": {
            "name": "au01"
          },
          "spec": {
            "auWorker": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-w",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
                          "name": "w",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            },
            "msLeader": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-ms",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
                          "name": "ms",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-operator-bundle@sha256:0bd00c5177b5ebd4f857bc16ba666f8cc28984fe58b67855a1a0199ed8f98aca",
      "bundle_path_digest": "sha256:0bd00c5177b5ebd4f857bc16ba666f8cc28984fe58b67855a1a0199ed8f98aca",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-08T11:45:47.932000+00:00",
      "csv_description": "The Anzo Unstructured Operator provides the way to install and configure an anzo unstructured setup on Red Hat K8S environment.\nCurrently, this is possible only through existing Anzo installation.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo-unstructured/blob/v2.0.1/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Unstructured Operator",
      "csv_metadata_description": "Kubernetes Operator for Anzo Unstructured",
      "csv_name": "anzounstructured-operator.v2.0.102",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:52:42.568000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "anzounstructured-operator",
      "provided_apis": [
        {
          "group": "anzounstructured.clusters.cambridgesemantics.com",
          "kind": "AnzoUnstructured",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "name": "unstructured-operator"
        },
        {
          "digest": "sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "name": "anzo-microservices-leader"
        },
        {
          "digest": "sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "name": "anzo-unstructured-worker"
        },
        {
          "digest": "sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "name": "unstructured-operator-adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd-annotation"
        },
        {
          "digest": "sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "name": "manager"
        },
        {
          "digest": "sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "name": "anzo_microservices_leader"
        },
        {
          "digest": "sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "name": "anzo_unstructured_worker"
        },
        {
          "digest": "sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "name": "anzo-microservices-leader-c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd-annotation"
        },
        {
          "digest": "sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "name": "anzo-unstructured-worker-b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.0.1",
      "version_original": "2.0.1"
    },
    {
      "_id": "620258ed417277171479992d",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "OpenshiftXray",
          "metadata": {
            "name": "openshiftxray"
          },
          "spec": {
            "xray": {
              "analysis": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-analysis"
                },
                "name": "xray-analysis",
                "podManagementPolicy": "Parallel",
                "updateStrategy": "RollingUpdate"
              },
              "common": {
                "xrayGroupId": "1000721035",
                "xrayUserId": "1000721035",
                "xrayVersion": "3.35.0-1"
              },
              "database": {
                "password": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "global": {},
              "indexer": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-indexer"
                },
                "name": "xray-indexer",
                "podManagementPolicy": "Parallel",
                "updateStrategy": "RollingUpdate"
              },
              "initContainerImage": "registry.connect.redhat.com/jfrog/init@sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
              "persist": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-persist"
                },
                "name": "xray-persist",
                "persistence": {
                  "size": "10Gi"
                },
                "podManagementPolicy": "Parallel",
                "updateStrategy": "RollingUpdate"
              },
              "postgresql": {
                "enabled": false
              },
              "rabbitmq": {
                "auth": {
                  "erlangCookie": "XRAYRABBITMQCLUSTER",
                  "password": "xray",
                  "tls": {
                    "caCertificate": "",
                    "enabled": false,
                    "failIfNoPeerCert": true,
                    "serverCertificate": "",
                    "serverKey": "",
                    "sslOptionsVerify": "verify_peer"
                  },
                  "username": "xray"
                },
                "enabled": true,
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-rabbitmq",
                  "tag": "3.35.0-1"
                },
                "podSecurityContext": {
                  "fsGroup": 1000721001,
                  "runAsUser": 1000721001
                },
                "rbac": {
                  "create": true
                },
                "replicaCount": 1
              },
              "rabbitmq-ha": {
                "enabled": false,
                "image": {
                  "repository": "registry.connect.redhat.com/jfrog/xray-rabbitmq",
                  "tag": "3.35.0-1"
                },
                "initContainer": {
                  "enabled": false
                },
                "managementPassword": "guest",
                "managementUsername": "guest",
                "rabbitmqPassword": "guest",
                "rabbitmqUsername": "guest",
                "replicaCount": 1,
                "securityContext": {
                  "fsGroup": 1000721035,
                  "runAsGroup": 1000721035,
                  "runAsUser": 1000721035
                }
              },
              "replicaCount": 1,
              "router": {
                "image": {
                  "imagePullPolicy": "IfNotPresent",
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-router",
                  "tag": "3.35.0-1"
                },
                "name": "router"
              },
              "server": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-server"
                },
                "name": "xray-server",
                "podManagementPolicy": "Parallel",
                "replicaCount": 1,
                "updateStrategy": "RollingUpdate"
              },
              "unifiedUpgradeAllowed": "true",
              "xray": {
                "consoleLog": false,
                "jfrogUrl": "OVERRIDE",
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/xray-operator-bundle@sha256:0d5fd45c2e87976c65ae24155a47357dab556cccc9503c0a79af4678a369381c",
      "bundle_path_digest": "sha256:0d5fd45c2e87976c65ae24155a47357dab556cccc9503c0a79af4678a369381c",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-02-08T11:50:05.661000+00:00",
      "csv_description": "## Overview Openshift Operator to deploy JFrog Xray Continuous Security scanner into your Openshift cluster. NOTE: Artifactory is required for JFrog Xray to connect with and scan artifacts against.\n### Major version v2.0.4 Breaking change notification!!\nThis release has major bug fix for Rabbitmq Pod. Please update to version 2.0.4 of the operator.\n### Major version v2.0.0 Breaking change notification!! Xray is dependent upon Rabbitmq. The version of Rabbitmq that this chart uses has significantly changed from version 1.1.8 of the operator. For full details on how to migrate please visit: `https://github.com/jfrog/charts/blob/master/stable/xray/RABBITMQ_MIGRATION_NOTES.md` ### Security Context Constraints To deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc. ``` oc adm policy add-scc-to-user anyuid -z xray-operator ``` ``` oc adm policy add-scc-to-user anyuid -z openshiftxray ``` ``` oc adm policy add-scc-to-user anyuid -z openshiftxray-rabbitmq-ha ``` ## Usage An external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it. Search for JFrog and click JFrog Xray Operator to install. Go to the Installed Operators. Wait for the JFrog Xray Operator to complete the installation. Open the Operator and click on the provided API: Xray Click Create New Instance and provide the following parameters for your DB configuration: ``` JFROG_URL DATABASE_URL DATABASE_USER DATABASE_PASSWORD ``` JFROG_URL is the external ip or DNS of your Artifactory to connect Xray to. Artifactory is required to use this operator. You can set your JFROG_URL to the service name of your Artifactory Nginx: ``` oc get svc -n my_namespace | grep nginx ``` DATABASE_URL must be a Postgresql URL in the format: `` postgres://postgres-postgresql:5432/xraydb?sslmode=disable `` DATABASE_USER and DATABASE_PASSWORD must supply a valid user on Postgresql. Click Create for Xray to deploy into OpenShift. Open Artifactory in a web browser to complete the onboarding wizard for Xray! ### Air gap environments To use Xray Operator in an air gap environment you will need to download the images as image streams into your Openshift air gap cluster manually. Use the image overrides to then specify the image stream locations that are local to your cluster. Next you will need to setup the database of index data for xray to use when scanning artifacts. Follow the link below for instructions on setup: https://www.jfrog.com/confluence/display/JFROG/Configuring+Xray#ConfiguringXray-SynchronizingtheDatabase ",
      "csv_display_name": "JFrog Xray Continuous Security Operator",
      "csv_metadata_description": "JFrog Xray Enterprise deploys Xray continuous security scanner into Openshift (Requires Jfrog Artifactory)",
      "csv_name": "xray-operator.v2.0.10",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:00:03.959000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "openshiftxray-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftXray",
          "plural": "openshiftxrays",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:37b86d3c904c747fc7457daf2afac83124685acfbad328fbd9f0bd51614bdc84",
          "image": "registry.connect.redhat.com/jfrog/xray-server@sha256:37b86d3c904c747fc7457daf2afac83124685acfbad328fbd9f0bd51614bdc84",
          "name": "xray-server"
        },
        {
          "digest": "sha256:1c8a887eb24a48f15c0f9d28abacdce7a89c31228d9e0e9b1d8b13554d52f545",
          "image": "registry.connect.redhat.com/jfrog/xray-analysis@sha256:1c8a887eb24a48f15c0f9d28abacdce7a89c31228d9e0e9b1d8b13554d52f545",
          "name": "xray-analysis"
        },
        {
          "digest": "sha256:3b8f36f98bd7840a76a4ea565cc6d49b8a1952bd75930590a15bf1b743b2ac87",
          "image": "registry.connect.redhat.com/jfrog/xray-persist@sha256:3b8f36f98bd7840a76a4ea565cc6d49b8a1952bd75930590a15bf1b743b2ac87",
          "name": "xray-persist"
        },
        {
          "digest": "sha256:c00d32f05912dec4bb88342ef1379ce8d6f2b9d25cec1180c6889a40ee5a0802",
          "image": "registry.connect.redhat.com/jfrog/xray-indexer@sha256:c00d32f05912dec4bb88342ef1379ce8d6f2b9d25cec1180c6889a40ee5a0802",
          "name": "xray-indexer"
        },
        {
          "digest": "sha256:5bcb959130b84195f3b70f15eb8500e6c85dd13750ca9ae33a719237d64a13b5",
          "image": "registry.connect.redhat.com/jfrog/xray-router@sha256:5bcb959130b84195f3b70f15eb8500e6c85dd13750ca9ae33a719237d64a13b5",
          "name": "xray-router"
        },
        {
          "digest": "sha256:adafb2e212dbe007623e1309ae53572e3a823f03d90636e4f27c1211030a1056",
          "image": "registry.connect.redhat.com/jfrog/xray-rabbitmq@sha256:adafb2e212dbe007623e1309ae53572e3a823f03d90636e4f27c1211030a1056",
          "name": "xray-rabbitmq"
        },
        {
          "digest": "sha256:c20da6089d9829946fb957bbaf8375efb99ab7f76c0794e945da965e33812933",
          "image": "registry.connect.redhat.com/jfrog/xray-operator@sha256:c20da6089d9829946fb957bbaf8375efb99ab7f76c0794e945da965e33812933",
          "name": "xray-operator"
        },
        {
          "digest": "sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
          "name": "init-container"
        },
        {
          "digest": "sha256:c20da6089d9829946fb957bbaf8375efb99ab7f76c0794e945da965e33812933",
          "image": "registry.connect.redhat.com/jfrog/xray-operator@sha256:c20da6089d9829946fb957bbaf8375efb99ab7f76c0794e945da965e33812933",
          "name": "xray-operator-c20da6089d9829946fb957bbaf8375efb99ab7f76c0794e945da965e33812933-annotation"
        },
        {
          "digest": "sha256:37b86d3c904c747fc7457daf2afac83124685acfbad328fbd9f0bd51614bdc84",
          "image": "registry.connect.redhat.com/jfrog/xray-server@sha256:37b86d3c904c747fc7457daf2afac83124685acfbad328fbd9f0bd51614bdc84",
          "name": "xray_server_image_repository"
        },
        {
          "digest": "sha256:1c8a887eb24a48f15c0f9d28abacdce7a89c31228d9e0e9b1d8b13554d52f545",
          "image": "registry.connect.redhat.com/jfrog/xray-analysis@sha256:1c8a887eb24a48f15c0f9d28abacdce7a89c31228d9e0e9b1d8b13554d52f545",
          "name": "xray_analysis_image_repository"
        },
        {
          "digest": "sha256:3b8f36f98bd7840a76a4ea565cc6d49b8a1952bd75930590a15bf1b743b2ac87",
          "image": "registry.connect.redhat.com/jfrog/xray-persist@sha256:3b8f36f98bd7840a76a4ea565cc6d49b8a1952bd75930590a15bf1b743b2ac87",
          "name": "xray_persist_image_repository"
        },
        {
          "digest": "sha256:c00d32f05912dec4bb88342ef1379ce8d6f2b9d25cec1180c6889a40ee5a0802",
          "image": "registry.connect.redhat.com/jfrog/xray-indexer@sha256:c00d32f05912dec4bb88342ef1379ce8d6f2b9d25cec1180c6889a40ee5a0802",
          "name": "xray_indexer_image_repository"
        },
        {
          "digest": "sha256:5bcb959130b84195f3b70f15eb8500e6c85dd13750ca9ae33a719237d64a13b5",
          "image": "registry.connect.redhat.com/jfrog/xray-router@sha256:5bcb959130b84195f3b70f15eb8500e6c85dd13750ca9ae33a719237d64a13b5",
          "name": "xray_router_image_repository"
        },
        {
          "digest": "sha256:adafb2e212dbe007623e1309ae53572e3a823f03d90636e4f27c1211030a1056",
          "image": "registry.connect.redhat.com/jfrog/xray-rabbitmq@sha256:adafb2e212dbe007623e1309ae53572e3a823f03d90636e4f27c1211030a1056",
          "name": "xray_rabbitmq_image_repository"
        },
        {
          "digest": "sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
          "name": "init-9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.0.10",
      "version_original": "2.0.10"
    },
    {
      "_id": "62025a1b662a49da7c60b7ca",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "OpenshiftXray",
          "metadata": {
            "name": "openshiftxray"
          },
          "spec": {
            "xray": {
              "analysis": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-analysis"
                },
                "name": "xray-analysis",
                "podManagementPolicy": "Parallel",
                "updateStrategy": "RollingUpdate"
              },
              "common": {
                "xrayGroupId": "1000721035",
                "xrayUserId": "1000721035",
                "xrayVersion": "3.35.0-1"
              },
              "database": {
                "password": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "global": {},
              "indexer": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-indexer"
                },
                "name": "xray-indexer",
                "podManagementPolicy": "Parallel",
                "updateStrategy": "RollingUpdate"
              },
              "initContainerImage": "registry.connect.redhat.com/jfrog/init@sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
              "persist": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-persist"
                },
                "name": "xray-persist",
                "persistence": {
                  "size": "10Gi"
                },
                "podManagementPolicy": "Parallel",
                "updateStrategy": "RollingUpdate"
              },
              "postgresql": {
                "enabled": false
              },
              "rabbitmq": {
                "auth": {
                  "erlangCookie": "XRAYRABBITMQCLUSTER",
                  "password": "xray",
                  "tls": {
                    "caCertificate": "",
                    "enabled": false,
                    "failIfNoPeerCert": true,
                    "serverCertificate": "",
                    "serverKey": "",
                    "sslOptionsVerify": "verify_peer"
                  },
                  "username": "xray"
                },
                "enabled": true,
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-rabbitmq",
                  "tag": "3.35.0-1"
                },
                "podSecurityContext": {
                  "fsGroup": 1000721001,
                  "runAsUser": 1000721001
                },
                "rbac": {
                  "create": true
                },
                "replicaCount": 1
              },
              "rabbitmq-ha": {
                "enabled": false,
                "image": {
                  "repository": "registry.connect.redhat.com/jfrog/xray-rabbitmq",
                  "tag": "3.35.0-1"
                },
                "initContainer": {
                  "enabled": false
                },
                "managementPassword": "guest",
                "managementUsername": "guest",
                "rabbitmqPassword": "guest",
                "rabbitmqUsername": "guest",
                "replicaCount": 1,
                "securityContext": {
                  "fsGroup": 1000721035,
                  "runAsGroup": 1000721035,
                  "runAsUser": 1000721035
                }
              },
              "replicaCount": 1,
              "router": {
                "image": {
                  "imagePullPolicy": "IfNotPresent",
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-router",
                  "tag": "3.35.0-1"
                },
                "name": "router"
              },
              "server": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-server"
                },
                "name": "xray-server",
                "podManagementPolicy": "Parallel",
                "replicaCount": 1,
                "updateStrategy": "RollingUpdate"
              },
              "unifiedUpgradeAllowed": "true",
              "xray": {
                "consoleLog": false,
                "jfrogUrl": "OVERRIDE",
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/xray-operator-bundle@sha256:0d5fd45c2e87976c65ae24155a47357dab556cccc9503c0a79af4678a369381c",
      "bundle_path_digest": "sha256:0d5fd45c2e87976c65ae24155a47357dab556cccc9503c0a79af4678a369381c",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-02-08T11:55:07.661000+00:00",
      "csv_description": "## Overview Openshift Operator to deploy JFrog Xray Continuous Security scanner into your Openshift cluster. NOTE: Artifactory is required for JFrog Xray to connect with and scan artifacts against.\n### Major version v2.0.4 Breaking change notification!!\nThis release has major bug fix for Rabbitmq Pod. Please update to version 2.0.4 of the operator.\n### Major version v2.0.0 Breaking change notification!! Xray is dependent upon Rabbitmq. The version of Rabbitmq that this chart uses has significantly changed from version 1.1.8 of the operator. For full details on how to migrate please visit: `https://github.com/jfrog/charts/blob/master/stable/xray/RABBITMQ_MIGRATION_NOTES.md` ### Security Context Constraints To deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc. ``` oc adm policy add-scc-to-user anyuid -z xray-operator ``` ``` oc adm policy add-scc-to-user anyuid -z openshiftxray ``` ``` oc adm policy add-scc-to-user anyuid -z openshiftxray-rabbitmq-ha ``` ## Usage An external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it. Search for JFrog and click JFrog Xray Operator to install. Go to the Installed Operators. Wait for the JFrog Xray Operator to complete the installation. Open the Operator and click on the provided API: Xray Click Create New Instance and provide the following parameters for your DB configuration: ``` JFROG_URL DATABASE_URL DATABASE_USER DATABASE_PASSWORD ``` JFROG_URL is the external ip or DNS of your Artifactory to connect Xray to. Artifactory is required to use this operator. You can set your JFROG_URL to the service name of your Artifactory Nginx: ``` oc get svc -n my_namespace | grep nginx ``` DATABASE_URL must be a Postgresql URL in the format: `` postgres://postgres-postgresql:5432/xraydb?sslmode=disable `` DATABASE_USER and DATABASE_PASSWORD must supply a valid user on Postgresql. Click Create for Xray to deploy into OpenShift. Open Artifactory in a web browser to complete the onboarding wizard for Xray! ### Air gap environments To use Xray Operator in an air gap environment you will need to download the images as image streams into your Openshift air gap cluster manually. Use the image overrides to then specify the image stream locations that are local to your cluster. Next you will need to setup the database of index data for xray to use when scanning artifacts. Follow the link below for instructions on setup: https://www.jfrog.com/confluence/display/JFROG/Configuring+Xray#ConfiguringXray-SynchronizingtheDatabase ",
      "csv_display_name": "JFrog Xray Continuous Security Operator",
      "csv_metadata_description": "JFrog Xray Enterprise deploys Xray continuous security scanner into Openshift (Requires Jfrog Artifactory)",
      "csv_name": "xray-operator.v2.0.10",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:19:24.134000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "openshiftxray-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftXray",
          "plural": "openshiftxrays",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:37b86d3c904c747fc7457daf2afac83124685acfbad328fbd9f0bd51614bdc84",
          "image": "registry.connect.redhat.com/jfrog/xray-server@sha256:37b86d3c904c747fc7457daf2afac83124685acfbad328fbd9f0bd51614bdc84",
          "name": "xray-server"
        },
        {
          "digest": "sha256:1c8a887eb24a48f15c0f9d28abacdce7a89c31228d9e0e9b1d8b13554d52f545",
          "image": "registry.connect.redhat.com/jfrog/xray-analysis@sha256:1c8a887eb24a48f15c0f9d28abacdce7a89c31228d9e0e9b1d8b13554d52f545",
          "name": "xray-analysis"
        },
        {
          "digest": "sha256:3b8f36f98bd7840a76a4ea565cc6d49b8a1952bd75930590a15bf1b743b2ac87",
          "image": "registry.connect.redhat.com/jfrog/xray-persist@sha256:3b8f36f98bd7840a76a4ea565cc6d49b8a1952bd75930590a15bf1b743b2ac87",
          "name": "xray-persist"
        },
        {
          "digest": "sha256:c00d32f05912dec4bb88342ef1379ce8d6f2b9d25cec1180c6889a40ee5a0802",
          "image": "registry.connect.redhat.com/jfrog/xray-indexer@sha256:c00d32f05912dec4bb88342ef1379ce8d6f2b9d25cec1180c6889a40ee5a0802",
          "name": "xray-indexer"
        },
        {
          "digest": "sha256:5bcb959130b84195f3b70f15eb8500e6c85dd13750ca9ae33a719237d64a13b5",
          "image": "registry.connect.redhat.com/jfrog/xray-router@sha256:5bcb959130b84195f3b70f15eb8500e6c85dd13750ca9ae33a719237d64a13b5",
          "name": "xray-router"
        },
        {
          "digest": "sha256:adafb2e212dbe007623e1309ae53572e3a823f03d90636e4f27c1211030a1056",
          "image": "registry.connect.redhat.com/jfrog/xray-rabbitmq@sha256:adafb2e212dbe007623e1309ae53572e3a823f03d90636e4f27c1211030a1056",
          "name": "xray-rabbitmq"
        },
        {
          "digest": "sha256:c20da6089d9829946fb957bbaf8375efb99ab7f76c0794e945da965e33812933",
          "image": "registry.connect.redhat.com/jfrog/xray-operator@sha256:c20da6089d9829946fb957bbaf8375efb99ab7f76c0794e945da965e33812933",
          "name": "xray-operator"
        },
        {
          "digest": "sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
          "name": "init-container"
        },
        {
          "digest": "sha256:c20da6089d9829946fb957bbaf8375efb99ab7f76c0794e945da965e33812933",
          "image": "registry.connect.redhat.com/jfrog/xray-operator@sha256:c20da6089d9829946fb957bbaf8375efb99ab7f76c0794e945da965e33812933",
          "name": "xray-operator-c20da6089d9829946fb957bbaf8375efb99ab7f76c0794e945da965e33812933-annotation"
        },
        {
          "digest": "sha256:37b86d3c904c747fc7457daf2afac83124685acfbad328fbd9f0bd51614bdc84",
          "image": "registry.connect.redhat.com/jfrog/xray-server@sha256:37b86d3c904c747fc7457daf2afac83124685acfbad328fbd9f0bd51614bdc84",
          "name": "xray_server_image_repository"
        },
        {
          "digest": "sha256:1c8a887eb24a48f15c0f9d28abacdce7a89c31228d9e0e9b1d8b13554d52f545",
          "image": "registry.connect.redhat.com/jfrog/xray-analysis@sha256:1c8a887eb24a48f15c0f9d28abacdce7a89c31228d9e0e9b1d8b13554d52f545",
          "name": "xray_analysis_image_repository"
        },
        {
          "digest": "sha256:3b8f36f98bd7840a76a4ea565cc6d49b8a1952bd75930590a15bf1b743b2ac87",
          "image": "registry.connect.redhat.com/jfrog/xray-persist@sha256:3b8f36f98bd7840a76a4ea565cc6d49b8a1952bd75930590a15bf1b743b2ac87",
          "name": "xray_persist_image_repository"
        },
        {
          "digest": "sha256:c00d32f05912dec4bb88342ef1379ce8d6f2b9d25cec1180c6889a40ee5a0802",
          "image": "registry.connect.redhat.com/jfrog/xray-indexer@sha256:c00d32f05912dec4bb88342ef1379ce8d6f2b9d25cec1180c6889a40ee5a0802",
          "name": "xray_indexer_image_repository"
        },
        {
          "digest": "sha256:5bcb959130b84195f3b70f15eb8500e6c85dd13750ca9ae33a719237d64a13b5",
          "image": "registry.connect.redhat.com/jfrog/xray-router@sha256:5bcb959130b84195f3b70f15eb8500e6c85dd13750ca9ae33a719237d64a13b5",
          "name": "xray_router_image_repository"
        },
        {
          "digest": "sha256:adafb2e212dbe007623e1309ae53572e3a823f03d90636e4f27c1211030a1056",
          "image": "registry.connect.redhat.com/jfrog/xray-rabbitmq@sha256:adafb2e212dbe007623e1309ae53572e3a823f03d90636e4f27c1211030a1056",
          "name": "xray_rabbitmq_image_repository"
        },
        {
          "digest": "sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
          "name": "init-9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.0.10",
      "version_original": "2.0.10"
    },
    {
      "_id": "62025a75662a49da7c60b7cb",
      "alm_examples": [
        {
          "api_version": "anzounstructured.clusters.cambridgesemantics.com/v1",
          "kind": "AnzoUnstructured",
          "metadata": {
            "name": "au01"
          },
          "spec": {
            "auWorker": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-w",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
                          "name": "w",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            },
            "msLeader": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-ms",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
                          "name": "ms",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-operator-bundle@sha256:0bd00c5177b5ebd4f857bc16ba666f8cc28984fe58b67855a1a0199ed8f98aca",
      "bundle_path_digest": "sha256:0bd00c5177b5ebd4f857bc16ba666f8cc28984fe58b67855a1a0199ed8f98aca",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-08T11:56:37.475000+00:00",
      "csv_description": "The Anzo Unstructured Operator provides the way to install and configure an anzo unstructured setup on Red Hat K8S environment.\nCurrently, this is possible only through existing Anzo installation.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo-unstructured/blob/v2.0.1/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Unstructured Operator",
      "csv_metadata_description": "Kubernetes Operator for Anzo Unstructured",
      "csv_name": "anzounstructured-operator.v2.0.102",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:08:59.054000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "anzounstructured-operator",
      "provided_apis": [
        {
          "group": "anzounstructured.clusters.cambridgesemantics.com",
          "kind": "AnzoUnstructured",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "name": "unstructured-operator"
        },
        {
          "digest": "sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "name": "anzo-microservices-leader"
        },
        {
          "digest": "sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "name": "anzo-unstructured-worker"
        },
        {
          "digest": "sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "name": "unstructured-operator-adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd-annotation"
        },
        {
          "digest": "sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "name": "manager"
        },
        {
          "digest": "sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "name": "anzo_microservices_leader"
        },
        {
          "digest": "sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "name": "anzo_unstructured_worker"
        },
        {
          "digest": "sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "name": "anzo-microservices-leader-c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd-annotation"
        },
        {
          "digest": "sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "name": "anzo-unstructured-worker-b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.0.1",
      "version_original": "2.0.1"
    },
    {
      "_id": "62025dd6ebdcecb0253562cc",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "OpenshiftXray",
          "metadata": {
            "name": "openshiftxray"
          },
          "spec": {
            "xray": {
              "analysis": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-analysis"
                },
                "name": "xray-analysis",
                "podManagementPolicy": "Parallel",
                "updateStrategy": "RollingUpdate"
              },
              "common": {
                "xrayGroupId": "1000721035",
                "xrayUserId": "1000721035",
                "xrayVersion": "3.35.0-1"
              },
              "database": {
                "password": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "global": {},
              "indexer": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-indexer"
                },
                "name": "xray-indexer",
                "podManagementPolicy": "Parallel",
                "updateStrategy": "RollingUpdate"
              },
              "initContainerImage": "registry.connect.redhat.com/jfrog/init@sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
              "persist": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-persist"
                },
                "name": "xray-persist",
                "persistence": {
                  "size": "10Gi"
                },
                "podManagementPolicy": "Parallel",
                "updateStrategy": "RollingUpdate"
              },
              "postgresql": {
                "enabled": false
              },
              "rabbitmq": {
                "auth": {
                  "erlangCookie": "XRAYRABBITMQCLUSTER",
                  "password": "xray",
                  "tls": {
                    "caCertificate": "",
                    "enabled": false,
                    "failIfNoPeerCert": true,
                    "serverCertificate": "",
                    "serverKey": "",
                    "sslOptionsVerify": "verify_peer"
                  },
                  "username": "xray"
                },
                "enabled": true,
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-rabbitmq",
                  "tag": "3.35.0-1"
                },
                "podSecurityContext": {
                  "fsGroup": 1000721001,
                  "runAsUser": 1000721001
                },
                "rbac": {
                  "create": true
                },
                "replicaCount": 1
              },
              "rabbitmq-ha": {
                "enabled": false,
                "image": {
                  "repository": "registry.connect.redhat.com/jfrog/xray-rabbitmq",
                  "tag": "3.35.0-1"
                },
                "initContainer": {
                  "enabled": false
                },
                "managementPassword": "guest",
                "managementUsername": "guest",
                "rabbitmqPassword": "guest",
                "rabbitmqUsername": "guest",
                "replicaCount": 1,
                "securityContext": {
                  "fsGroup": 1000721035,
                  "runAsGroup": 1000721035,
                  "runAsUser": 1000721035
                }
              },
              "replicaCount": 1,
              "router": {
                "image": {
                  "imagePullPolicy": "IfNotPresent",
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-router",
                  "tag": "3.35.0-1"
                },
                "name": "router"
              },
              "server": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-server"
                },
                "name": "xray-server",
                "podManagementPolicy": "Parallel",
                "replicaCount": 1,
                "updateStrategy": "RollingUpdate"
              },
              "unifiedUpgradeAllowed": "true",
              "xray": {
                "consoleLog": false,
                "jfrogUrl": "OVERRIDE",
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/xray-operator-bundle@sha256:0d5fd45c2e87976c65ae24155a47357dab556cccc9503c0a79af4678a369381c",
      "bundle_path_digest": "sha256:0d5fd45c2e87976c65ae24155a47357dab556cccc9503c0a79af4678a369381c",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-02-08T12:11:02.422000+00:00",
      "csv_description": "## Overview Openshift Operator to deploy JFrog Xray Continuous Security scanner into your Openshift cluster. NOTE: Artifactory is required for JFrog Xray to connect with and scan artifacts against.\n### Major version v2.0.4 Breaking change notification!!\nThis release has major bug fix for Rabbitmq Pod. Please update to version 2.0.4 of the operator.\n### Major version v2.0.0 Breaking change notification!! Xray is dependent upon Rabbitmq. The version of Rabbitmq that this chart uses has significantly changed from version 1.1.8 of the operator. For full details on how to migrate please visit: `https://github.com/jfrog/charts/blob/master/stable/xray/RABBITMQ_MIGRATION_NOTES.md` ### Security Context Constraints To deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc. ``` oc adm policy add-scc-to-user anyuid -z xray-operator ``` ``` oc adm policy add-scc-to-user anyuid -z openshiftxray ``` ``` oc adm policy add-scc-to-user anyuid -z openshiftxray-rabbitmq-ha ``` ## Usage An external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it. Search for JFrog and click JFrog Xray Operator to install. Go to the Installed Operators. Wait for the JFrog Xray Operator to complete the installation. Open the Operator and click on the provided API: Xray Click Create New Instance and provide the following parameters for your DB configuration: ``` JFROG_URL DATABASE_URL DATABASE_USER DATABASE_PASSWORD ``` JFROG_URL is the external ip or DNS of your Artifactory to connect Xray to. Artifactory is required to use this operator. You can set your JFROG_URL to the service name of your Artifactory Nginx: ``` oc get svc -n my_namespace | grep nginx ``` DATABASE_URL must be a Postgresql URL in the format: `` postgres://postgres-postgresql:5432/xraydb?sslmode=disable `` DATABASE_USER and DATABASE_PASSWORD must supply a valid user on Postgresql. Click Create for Xray to deploy into OpenShift. Open Artifactory in a web browser to complete the onboarding wizard for Xray! ### Air gap environments To use Xray Operator in an air gap environment you will need to download the images as image streams into your Openshift air gap cluster manually. Use the image overrides to then specify the image stream locations that are local to your cluster. Next you will need to setup the database of index data for xray to use when scanning artifacts. Follow the link below for instructions on setup: https://www.jfrog.com/confluence/display/JFROG/Configuring+Xray#ConfiguringXray-SynchronizingtheDatabase ",
      "csv_display_name": "JFrog Xray Continuous Security Operator",
      "csv_metadata_description": "JFrog Xray Enterprise deploys Xray continuous security scanner into Openshift (Requires Jfrog Artifactory)",
      "csv_name": "xray-operator.v2.0.10",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:18:52.734000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "openshiftxray-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftXray",
          "plural": "openshiftxrays",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:37b86d3c904c747fc7457daf2afac83124685acfbad328fbd9f0bd51614bdc84",
          "image": "registry.connect.redhat.com/jfrog/xray-server@sha256:37b86d3c904c747fc7457daf2afac83124685acfbad328fbd9f0bd51614bdc84",
          "name": "xray-server"
        },
        {
          "digest": "sha256:1c8a887eb24a48f15c0f9d28abacdce7a89c31228d9e0e9b1d8b13554d52f545",
          "image": "registry.connect.redhat.com/jfrog/xray-analysis@sha256:1c8a887eb24a48f15c0f9d28abacdce7a89c31228d9e0e9b1d8b13554d52f545",
          "name": "xray-analysis"
        },
        {
          "digest": "sha256:3b8f36f98bd7840a76a4ea565cc6d49b8a1952bd75930590a15bf1b743b2ac87",
          "image": "registry.connect.redhat.com/jfrog/xray-persist@sha256:3b8f36f98bd7840a76a4ea565cc6d49b8a1952bd75930590a15bf1b743b2ac87",
          "name": "xray-persist"
        },
        {
          "digest": "sha256:c00d32f05912dec4bb88342ef1379ce8d6f2b9d25cec1180c6889a40ee5a0802",
          "image": "registry.connect.redhat.com/jfrog/xray-indexer@sha256:c00d32f05912dec4bb88342ef1379ce8d6f2b9d25cec1180c6889a40ee5a0802",
          "name": "xray-indexer"
        },
        {
          "digest": "sha256:5bcb959130b84195f3b70f15eb8500e6c85dd13750ca9ae33a719237d64a13b5",
          "image": "registry.connect.redhat.com/jfrog/xray-router@sha256:5bcb959130b84195f3b70f15eb8500e6c85dd13750ca9ae33a719237d64a13b5",
          "name": "xray-router"
        },
        {
          "digest": "sha256:adafb2e212dbe007623e1309ae53572e3a823f03d90636e4f27c1211030a1056",
          "image": "registry.connect.redhat.com/jfrog/xray-rabbitmq@sha256:adafb2e212dbe007623e1309ae53572e3a823f03d90636e4f27c1211030a1056",
          "name": "xray-rabbitmq"
        },
        {
          "digest": "sha256:c20da6089d9829946fb957bbaf8375efb99ab7f76c0794e945da965e33812933",
          "image": "registry.connect.redhat.com/jfrog/xray-operator@sha256:c20da6089d9829946fb957bbaf8375efb99ab7f76c0794e945da965e33812933",
          "name": "xray-operator"
        },
        {
          "digest": "sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
          "name": "init-container"
        },
        {
          "digest": "sha256:c20da6089d9829946fb957bbaf8375efb99ab7f76c0794e945da965e33812933",
          "image": "registry.connect.redhat.com/jfrog/xray-operator@sha256:c20da6089d9829946fb957bbaf8375efb99ab7f76c0794e945da965e33812933",
          "name": "xray-operator-c20da6089d9829946fb957bbaf8375efb99ab7f76c0794e945da965e33812933-annotation"
        },
        {
          "digest": "sha256:37b86d3c904c747fc7457daf2afac83124685acfbad328fbd9f0bd51614bdc84",
          "image": "registry.connect.redhat.com/jfrog/xray-server@sha256:37b86d3c904c747fc7457daf2afac83124685acfbad328fbd9f0bd51614bdc84",
          "name": "xray_server_image_repository"
        },
        {
          "digest": "sha256:1c8a887eb24a48f15c0f9d28abacdce7a89c31228d9e0e9b1d8b13554d52f545",
          "image": "registry.connect.redhat.com/jfrog/xray-analysis@sha256:1c8a887eb24a48f15c0f9d28abacdce7a89c31228d9e0e9b1d8b13554d52f545",
          "name": "xray_analysis_image_repository"
        },
        {
          "digest": "sha256:3b8f36f98bd7840a76a4ea565cc6d49b8a1952bd75930590a15bf1b743b2ac87",
          "image": "registry.connect.redhat.com/jfrog/xray-persist@sha256:3b8f36f98bd7840a76a4ea565cc6d49b8a1952bd75930590a15bf1b743b2ac87",
          "name": "xray_persist_image_repository"
        },
        {
          "digest": "sha256:c00d32f05912dec4bb88342ef1379ce8d6f2b9d25cec1180c6889a40ee5a0802",
          "image": "registry.connect.redhat.com/jfrog/xray-indexer@sha256:c00d32f05912dec4bb88342ef1379ce8d6f2b9d25cec1180c6889a40ee5a0802",
          "name": "xray_indexer_image_repository"
        },
        {
          "digest": "sha256:5bcb959130b84195f3b70f15eb8500e6c85dd13750ca9ae33a719237d64a13b5",
          "image": "registry.connect.redhat.com/jfrog/xray-router@sha256:5bcb959130b84195f3b70f15eb8500e6c85dd13750ca9ae33a719237d64a13b5",
          "name": "xray_router_image_repository"
        },
        {
          "digest": "sha256:adafb2e212dbe007623e1309ae53572e3a823f03d90636e4f27c1211030a1056",
          "image": "registry.connect.redhat.com/jfrog/xray-rabbitmq@sha256:adafb2e212dbe007623e1309ae53572e3a823f03d90636e4f27c1211030a1056",
          "name": "xray_rabbitmq_image_repository"
        },
        {
          "digest": "sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
          "name": "init-9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.0.10",
      "version_original": "2.0.10"
    },
    {
      "_id": "62025e51417277171479992e",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "OpenshiftXray",
          "metadata": {
            "name": "openshiftxray"
          },
          "spec": {
            "xray": {
              "analysis": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-analysis"
                },
                "name": "xray-analysis",
                "podManagementPolicy": "Parallel",
                "updateStrategy": "RollingUpdate"
              },
              "common": {
                "xrayGroupId": "1000721035",
                "xrayUserId": "1000721035",
                "xrayVersion": "3.35.0-1"
              },
              "database": {
                "password": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "global": {},
              "indexer": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-indexer"
                },
                "name": "xray-indexer",
                "podManagementPolicy": "Parallel",
                "updateStrategy": "RollingUpdate"
              },
              "initContainerImage": "registry.connect.redhat.com/jfrog/init@sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
              "persist": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-persist"
                },
                "name": "xray-persist",
                "persistence": {
                  "size": "10Gi"
                },
                "podManagementPolicy": "Parallel",
                "updateStrategy": "RollingUpdate"
              },
              "postgresql": {
                "enabled": false
              },
              "rabbitmq": {
                "auth": {
                  "erlangCookie": "XRAYRABBITMQCLUSTER",
                  "password": "xray",
                  "tls": {
                    "caCertificate": "",
                    "enabled": false,
                    "failIfNoPeerCert": true,
                    "serverCertificate": "",
                    "serverKey": "",
                    "sslOptionsVerify": "verify_peer"
                  },
                  "username": "xray"
                },
                "enabled": true,
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-rabbitmq",
                  "tag": "3.35.0-1"
                },
                "podSecurityContext": {
                  "fsGroup": 1000721001,
                  "runAsUser": 1000721001
                },
                "rbac": {
                  "create": true
                },
                "replicaCount": 1
              },
              "rabbitmq-ha": {
                "enabled": false,
                "image": {
                  "repository": "registry.connect.redhat.com/jfrog/xray-rabbitmq",
                  "tag": "3.35.0-1"
                },
                "initContainer": {
                  "enabled": false
                },
                "managementPassword": "guest",
                "managementUsername": "guest",
                "rabbitmqPassword": "guest",
                "rabbitmqUsername": "guest",
                "replicaCount": 1,
                "securityContext": {
                  "fsGroup": 1000721035,
                  "runAsGroup": 1000721035,
                  "runAsUser": 1000721035
                }
              },
              "replicaCount": 1,
              "router": {
                "image": {
                  "imagePullPolicy": "IfNotPresent",
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-router",
                  "tag": "3.35.0-1"
                },
                "name": "router"
              },
              "server": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-server"
                },
                "name": "xray-server",
                "podManagementPolicy": "Parallel",
                "replicaCount": 1,
                "updateStrategy": "RollingUpdate"
              },
              "unifiedUpgradeAllowed": "true",
              "xray": {
                "consoleLog": false,
                "jfrogUrl": "OVERRIDE",
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/xray-operator-bundle@sha256:0d5fd45c2e87976c65ae24155a47357dab556cccc9503c0a79af4678a369381c",
      "bundle_path_digest": "sha256:0d5fd45c2e87976c65ae24155a47357dab556cccc9503c0a79af4678a369381c",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-02-08T12:13:05.793000+00:00",
      "csv_description": "## Overview Openshift Operator to deploy JFrog Xray Continuous Security scanner into your Openshift cluster. NOTE: Artifactory is required for JFrog Xray to connect with and scan artifacts against.\n### Major version v2.0.4 Breaking change notification!!\nThis release has major bug fix for Rabbitmq Pod. Please update to version 2.0.4 of the operator.\n### Major version v2.0.0 Breaking change notification!! Xray is dependent upon Rabbitmq. The version of Rabbitmq that this chart uses has significantly changed from version 1.1.8 of the operator. For full details on how to migrate please visit: `https://github.com/jfrog/charts/blob/master/stable/xray/RABBITMQ_MIGRATION_NOTES.md` ### Security Context Constraints To deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc. ``` oc adm policy add-scc-to-user anyuid -z xray-operator ``` ``` oc adm policy add-scc-to-user anyuid -z openshiftxray ``` ``` oc adm policy add-scc-to-user anyuid -z openshiftxray-rabbitmq-ha ``` ## Usage An external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it. Search for JFrog and click JFrog Xray Operator to install. Go to the Installed Operators. Wait for the JFrog Xray Operator to complete the installation. Open the Operator and click on the provided API: Xray Click Create New Instance and provide the following parameters for your DB configuration: ``` JFROG_URL DATABASE_URL DATABASE_USER DATABASE_PASSWORD ``` JFROG_URL is the external ip or DNS of your Artifactory to connect Xray to. Artifactory is required to use this operator. You can set your JFROG_URL to the service name of your Artifactory Nginx: ``` oc get svc -n my_namespace | grep nginx ``` DATABASE_URL must be a Postgresql URL in the format: `` postgres://postgres-postgresql:5432/xraydb?sslmode=disable `` DATABASE_USER and DATABASE_PASSWORD must supply a valid user on Postgresql. Click Create for Xray to deploy into OpenShift. Open Artifactory in a web browser to complete the onboarding wizard for Xray! ### Air gap environments To use Xray Operator in an air gap environment you will need to download the images as image streams into your Openshift air gap cluster manually. Use the image overrides to then specify the image stream locations that are local to your cluster. Next you will need to setup the database of index data for xray to use when scanning artifacts. Follow the link below for instructions on setup: https://www.jfrog.com/confluence/display/JFROG/Configuring+Xray#ConfiguringXray-SynchronizingtheDatabase ",
      "csv_display_name": "JFrog Xray Continuous Security Operator",
      "csv_metadata_description": "JFrog Xray Enterprise deploys Xray continuous security scanner into Openshift (Requires Jfrog Artifactory)",
      "csv_name": "xray-operator.v2.0.10",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:42:26.952000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "openshiftxray-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftXray",
          "plural": "openshiftxrays",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:37b86d3c904c747fc7457daf2afac83124685acfbad328fbd9f0bd51614bdc84",
          "image": "registry.connect.redhat.com/jfrog/xray-server@sha256:37b86d3c904c747fc7457daf2afac83124685acfbad328fbd9f0bd51614bdc84",
          "name": "xray-server"
        },
        {
          "digest": "sha256:1c8a887eb24a48f15c0f9d28abacdce7a89c31228d9e0e9b1d8b13554d52f545",
          "image": "registry.connect.redhat.com/jfrog/xray-analysis@sha256:1c8a887eb24a48f15c0f9d28abacdce7a89c31228d9e0e9b1d8b13554d52f545",
          "name": "xray-analysis"
        },
        {
          "digest": "sha256:3b8f36f98bd7840a76a4ea565cc6d49b8a1952bd75930590a15bf1b743b2ac87",
          "image": "registry.connect.redhat.com/jfrog/xray-persist@sha256:3b8f36f98bd7840a76a4ea565cc6d49b8a1952bd75930590a15bf1b743b2ac87",
          "name": "xray-persist"
        },
        {
          "digest": "sha256:c00d32f05912dec4bb88342ef1379ce8d6f2b9d25cec1180c6889a40ee5a0802",
          "image": "registry.connect.redhat.com/jfrog/xray-indexer@sha256:c00d32f05912dec4bb88342ef1379ce8d6f2b9d25cec1180c6889a40ee5a0802",
          "name": "xray-indexer"
        },
        {
          "digest": "sha256:5bcb959130b84195f3b70f15eb8500e6c85dd13750ca9ae33a719237d64a13b5",
          "image": "registry.connect.redhat.com/jfrog/xray-router@sha256:5bcb959130b84195f3b70f15eb8500e6c85dd13750ca9ae33a719237d64a13b5",
          "name": "xray-router"
        },
        {
          "digest": "sha256:adafb2e212dbe007623e1309ae53572e3a823f03d90636e4f27c1211030a1056",
          "image": "registry.connect.redhat.com/jfrog/xray-rabbitmq@sha256:adafb2e212dbe007623e1309ae53572e3a823f03d90636e4f27c1211030a1056",
          "name": "xray-rabbitmq"
        },
        {
          "digest": "sha256:c20da6089d9829946fb957bbaf8375efb99ab7f76c0794e945da965e33812933",
          "image": "registry.connect.redhat.com/jfrog/xray-operator@sha256:c20da6089d9829946fb957bbaf8375efb99ab7f76c0794e945da965e33812933",
          "name": "xray-operator"
        },
        {
          "digest": "sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
          "name": "init-container"
        },
        {
          "digest": "sha256:c20da6089d9829946fb957bbaf8375efb99ab7f76c0794e945da965e33812933",
          "image": "registry.connect.redhat.com/jfrog/xray-operator@sha256:c20da6089d9829946fb957bbaf8375efb99ab7f76c0794e945da965e33812933",
          "name": "xray-operator-c20da6089d9829946fb957bbaf8375efb99ab7f76c0794e945da965e33812933-annotation"
        },
        {
          "digest": "sha256:37b86d3c904c747fc7457daf2afac83124685acfbad328fbd9f0bd51614bdc84",
          "image": "registry.connect.redhat.com/jfrog/xray-server@sha256:37b86d3c904c747fc7457daf2afac83124685acfbad328fbd9f0bd51614bdc84",
          "name": "xray_server_image_repository"
        },
        {
          "digest": "sha256:1c8a887eb24a48f15c0f9d28abacdce7a89c31228d9e0e9b1d8b13554d52f545",
          "image": "registry.connect.redhat.com/jfrog/xray-analysis@sha256:1c8a887eb24a48f15c0f9d28abacdce7a89c31228d9e0e9b1d8b13554d52f545",
          "name": "xray_analysis_image_repository"
        },
        {
          "digest": "sha256:3b8f36f98bd7840a76a4ea565cc6d49b8a1952bd75930590a15bf1b743b2ac87",
          "image": "registry.connect.redhat.com/jfrog/xray-persist@sha256:3b8f36f98bd7840a76a4ea565cc6d49b8a1952bd75930590a15bf1b743b2ac87",
          "name": "xray_persist_image_repository"
        },
        {
          "digest": "sha256:c00d32f05912dec4bb88342ef1379ce8d6f2b9d25cec1180c6889a40ee5a0802",
          "image": "registry.connect.redhat.com/jfrog/xray-indexer@sha256:c00d32f05912dec4bb88342ef1379ce8d6f2b9d25cec1180c6889a40ee5a0802",
          "name": "xray_indexer_image_repository"
        },
        {
          "digest": "sha256:5bcb959130b84195f3b70f15eb8500e6c85dd13750ca9ae33a719237d64a13b5",
          "image": "registry.connect.redhat.com/jfrog/xray-router@sha256:5bcb959130b84195f3b70f15eb8500e6c85dd13750ca9ae33a719237d64a13b5",
          "name": "xray_router_image_repository"
        },
        {
          "digest": "sha256:adafb2e212dbe007623e1309ae53572e3a823f03d90636e4f27c1211030a1056",
          "image": "registry.connect.redhat.com/jfrog/xray-rabbitmq@sha256:adafb2e212dbe007623e1309ae53572e3a823f03d90636e4f27c1211030a1056",
          "name": "xray_rabbitmq_image_repository"
        },
        {
          "digest": "sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02",
          "name": "init-9522611104cf958cc4322ed2d5d6ec0e3ffd75c39780a816f6f30d248c66ec02-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.0.10",
      "version_original": "2.0.10"
    },
    {
      "_id": "620264ca6f7520a59798cdbf",
      "alm_examples": [
        {
          "api_version": "charts.operatorhub.io/v1",
          "kind": "CcmNodeAgent",
          "metadata": {
            "name": "ccmnodeagent-sample"
          },
          "spec": {
            "ccmJoinToken": {
              "secretName": "ccm-join-token",
              "token": ""
            },
            "fullnameOverride": "",
            "image": {
              "aesmd": {
                "pullPolicy": "IfNotPresent",
                "repository": "docker.io/fortanix/aesmd-dcap",
                "tag": "latest"
              },
              "ccmNodeAgent": {
                "pullPolicy": "IfNotPresent",
                "repository": "registry.connect.redhat.com/fortanix/ccm-node-agent-ubi7",
                "tag": "latest"
              },
              "ccmNodeAgentInit": {
                "pullPolicy": "IfNotPresent",
                "repository": "busybox",
                "tag": "latest"
              },
              "multiPlatformRegistration": {
                "pullPolicy": "IfNotPresent",
                "repository": "docker.io/fortanix/multi-platform-registration-ubi8",
                "tag": "latest"
              }
            },
            "log": {
              "debug": false
            },
            "nameOverride": "",
            "podAnnotations": {},
            "ports": {
              "containerPort": 9092,
              "hostPort": 9092
            },
            "replicaCount": 1,
            "resources": {
              "limits": {
                "cpu": "100m",
                "memory": "128Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "128Mi"
              }
            },
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/fortanix/ccm-node-agent-dcap-operator-bundle@sha256:4f480ffa50dc25cdf3f3debf6c30547d1add6f8a02628eda9252c861d2b0edfc",
      "bundle_path_digest": "sha256:4f480ffa50dc25cdf3f3debf6c30547d1add6f8a02628eda9252c861d2b0edfc",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-02-08T12:40:42.073000+00:00",
      "csv_description": "CCM Node Agent software enables registration of the compute nodes to Fortanix CCM when installed in the Openshift Cluster Nodes\u200b. \nIt also assists with application attestation and visibility for Fortanix CCM.\n\n## About this Operator\nThis Operator is based on a Helm chart for CCM Node Agent. It enrolls all the nodes in the openshift cluster to a particular CCM account. You have to provide the base64 encode of join token of CCM account while creating CcmNodeAgent resource.\n\n## Prerequisites\nAll the worker nodes in the cluster must have SGX capabilities, in-kernel driver installed and fsgsbase support.\n\n## Installation\n * Choose a namespace to install the Operator. \n Operator will be available in all namespaces.\n* Select Approval Strategy: Available options are Automatic or Manual. Automatic approval will automatically upgrade the running instance of your Operator without human intervention when a new version is available. In case of Manual approval, when a new version is available, OLM will create an update request. You must manually approve the request to update the Operator to a new version.\n* Generate your CCM Account Join Token: Please log in to https://ccm.fortanix.com, and in the Management Console tab, click the + ENROLL NODE button. In the ENROLL NODE screen, a Join Token will be generated in the text box for \"Get a join token to register an SGX compute node\". This Join Token is used by the compute node to authenticate itself.\n* Base64 encode the Join Token:\n```shell\necho -n <join-token> | openssl base64 -A\n```\n* Create an instance of CcmNodeAgent by setting the `spec.ccmJoinToken.Token` to the base64 encoded CCM account join token.\n* After CcmNodeAgent resource is installed successfully you should be able to see all the worker nodes of the cluster in your CCM account under Compute Node Tab.\n\n## Getting Started\nNow to run your application inside SGX enclaves on your cluster follow the [documentation](https://support.fortanix.com/hc/en-us/articles/360043527431-User-s-Guide-Add-and-Edit-an-Application).\n",
      "csv_display_name": "CCM Node Agent DCAP Operator",
      "csv_metadata_description": "",
      "csv_name": "ccm-node-agent-dcap-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:30:34.989000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "ccm-node-agent-dcap-operator",
      "provided_apis": [
        {
          "group": "charts.operatorhub.io",
          "kind": "CcmNodeAgent",
          "plural": "ccmnodeagents",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:3e10e2c966e42f1944791298f8e31de6fd89d1e836ee0b1349ce153d33a44240",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:3e10e2c966e42f1944791298f8e31de6fd89d1e836ee0b1349ce153d33a44240",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:9d790fdb8fba83e5c2c05ec34bb669d8d4032a582479f894e397bf95d68323e4",
          "image": "fortanix/ccm-node-agent-dcap-operator@sha256:9d790fdb8fba83e5c2c05ec34bb669d8d4032a582479f894e397bf95d68323e4",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "62026603417277171479992f",
      "alm_examples": [
        {
          "api_version": "charts.operatorhub.io/v1",
          "kind": "CcmNodeAgent",
          "metadata": {
            "name": "ccmnodeagent-sample"
          },
          "spec": {
            "ccmJoinToken": {
              "secretName": "ccm-join-token",
              "token": ""
            },
            "fullnameOverride": "",
            "image": {
              "aesmd": {
                "pullPolicy": "IfNotPresent",
                "repository": "docker.io/fortanix/aesmd-dcap",
                "tag": "latest"
              },
              "ccmNodeAgent": {
                "pullPolicy": "IfNotPresent",
                "repository": "registry.connect.redhat.com/fortanix/ccm-node-agent-ubi7",
                "tag": "latest"
              },
              "ccmNodeAgentInit": {
                "pullPolicy": "IfNotPresent",
                "repository": "busybox",
                "tag": "latest"
              },
              "multiPlatformRegistration": {
                "pullPolicy": "IfNotPresent",
                "repository": "docker.io/fortanix/multi-platform-registration-ubi8",
                "tag": "latest"
              }
            },
            "log": {
              "debug": false
            },
            "nameOverride": "",
            "podAnnotations": {},
            "ports": {
              "containerPort": 9092,
              "hostPort": 9092
            },
            "replicaCount": 1,
            "resources": {
              "limits": {
                "cpu": "100m",
                "memory": "128Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "128Mi"
              }
            },
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/fortanix/ccm-node-agent-dcap-operator-bundle@sha256:4f480ffa50dc25cdf3f3debf6c30547d1add6f8a02628eda9252c861d2b0edfc",
      "bundle_path_digest": "sha256:4f480ffa50dc25cdf3f3debf6c30547d1add6f8a02628eda9252c861d2b0edfc",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-02-08T12:45:55.820000+00:00",
      "csv_description": "CCM Node Agent software enables registration of the compute nodes to Fortanix CCM when installed in the Openshift Cluster Nodes\u200b. \nIt also assists with application attestation and visibility for Fortanix CCM.\n\n## About this Operator\nThis Operator is based on a Helm chart for CCM Node Agent. It enrolls all the nodes in the openshift cluster to a particular CCM account. You have to provide the base64 encode of join token of CCM account while creating CcmNodeAgent resource.\n\n## Prerequisites\nAll the worker nodes in the cluster must have SGX capabilities, in-kernel driver installed and fsgsbase support.\n\n## Installation\n * Choose a namespace to install the Operator. \n Operator will be available in all namespaces.\n* Select Approval Strategy: Available options are Automatic or Manual. Automatic approval will automatically upgrade the running instance of your Operator without human intervention when a new version is available. In case of Manual approval, when a new version is available, OLM will create an update request. You must manually approve the request to update the Operator to a new version.\n* Generate your CCM Account Join Token: Please log in to https://ccm.fortanix.com, and in the Management Console tab, click the + ENROLL NODE button. In the ENROLL NODE screen, a Join Token will be generated in the text box for \"Get a join token to register an SGX compute node\". This Join Token is used by the compute node to authenticate itself.\n* Base64 encode the Join Token:\n```shell\necho -n <join-token> | openssl base64 -A\n```\n* Create an instance of CcmNodeAgent by setting the `spec.ccmJoinToken.Token` to the base64 encoded CCM account join token.\n* After CcmNodeAgent resource is installed successfully you should be able to see all the worker nodes of the cluster in your CCM account under Compute Node Tab.\n\n## Getting Started\nNow to run your application inside SGX enclaves on your cluster follow the [documentation](https://support.fortanix.com/hc/en-us/articles/360043527431-User-s-Guide-Add-and-Edit-an-Application).\n",
      "csv_display_name": "CCM Node Agent DCAP Operator",
      "csv_metadata_description": "",
      "csv_name": "ccm-node-agent-dcap-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:32:54.640000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "ccm-node-agent-dcap-operator",
      "provided_apis": [
        {
          "group": "charts.operatorhub.io",
          "kind": "CcmNodeAgent",
          "plural": "ccmnodeagents",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:3e10e2c966e42f1944791298f8e31de6fd89d1e836ee0b1349ce153d33a44240",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:3e10e2c966e42f1944791298f8e31de6fd89d1e836ee0b1349ce153d33a44240",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:9d790fdb8fba83e5c2c05ec34bb669d8d4032a582479f894e397bf95d68323e4",
          "image": "fortanix/ccm-node-agent-dcap-operator@sha256:9d790fdb8fba83e5c2c05ec34bb669d8d4032a582479f894e397bf95d68323e4",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "62044232452917cec69c7a16",
      "alm_examples": [
        {
          "kind": "Zookeeper",
          "metadata": {
            "name": "zookeeper"
          },
          "spec": {
            "dataVolumeCapacity": "10Gi",
            "image": {
              "application": "confluentinc/cp-zookeeper@sha256:254266ab0730cdacc49a57b7e98b23865942aa251c676c15297d70a3003b45e1",
              "init": "confluentinc/confluent-init-container@sha256:a7978b1796f4b7f01ea6ccc56615a2195190de6eaf41a4e538e325dd2406f26d"
            },
            "logVolumeCapacity": "10Gi",
            "replicas": 3
          }
        },
        {
          "kind": "Kafka",
          "metadata": {
            "name": "kafka"
          },
          "spec": {
            "dataVolumeCapacity": "10Gi",
            "image": {
              "application": "confluentinc/cp-server@sha256:a590245bf3269c05a88e99d56a1e869c07f7d3fb76fa76370b8faaa673b0c8b1",
              "init": "confluentinc/confluent-init-container@sha256:a7978b1796f4b7f01ea6ccc56615a2195190de6eaf41a4e538e325dd2406f26d"
            },
            "metricReporter": {
              "enabled": true
            },
            "replicas": 3
          }
        },
        {
          "kind": "KafkaRestProxy",
          "metadata": {
            "name": "kafkarestproxy"
          },
          "spec": {
            "image": {
              "application": "confluentinc/cp-kafka-rest@sha256:80a3d41cc8a6989e556a0283e4ae31f7c80880f97bd235db4929f4df40dabb8f",
              "init": "confluentinc/confluent-init-container@sha256:a7978b1796f4b7f01ea6ccc56615a2195190de6eaf41a4e538e325dd2406f26d"
            },
            "metricReporter": {
              "enabled": true
            },
            "replicas": 3
          }
        },
        {
          "kind": "Connect",
          "metadata": {
            "name": "connect"
          },
          "spec": {
            "dependencies": {
              "kafka": {
                "bootstrapEndpoint": "kafka:9071"
              }
            },
            "image": {
              "application": "confluentinc/cp-server-connect@sha256:bb847350302c636fb499509c29f355f77a6299c2b1d31a445882a74e0292463c",
              "init": "confluentinc/confluent-init-container@sha256:a7978b1796f4b7f01ea6ccc56615a2195190de6eaf41a4e538e325dd2406f26d"
            },
            "replicas": 1
          }
        },
        {
          "kind": "KsqlDB",
          "metadata": {
            "name": "ksqldb"
          },
          "spec": {
            "dataVolumeCapacity": "10Gi",
            "image": {
              "application": "confluentinc/cp-ksqldb-server@sha256:20b6ac87de3b00ff77f590118cbc9877d97c54d270a4846b60d165cdde2b0427",
              "init": "confluentinc/confluent-init-container@sha256:a7978b1796f4b7f01ea6ccc56615a2195190de6eaf41a4e538e325dd2406f26d"
            },
            "replicas": 1
          }
        },
        {
          "kind": "ControlCenter",
          "metadata": {
            "name": "controlcenter"
          },
          "spec": {
            "dataVolumeCapacity": "10Gi",
            "dependencies": {
              "connect": [
                {
                  "name": "connect",
                  "url": "http://connect.confluent.svc.cluster.local:8083"
                }
              ],
              "ksqldb": [
                {
                  "name": "ksqldb",
                  "url": "http://ksqldb.confluent.svc.cluster.local:8088"
                }
              ],
              "schemaRegistry": {
                "url": "http://schemaregistry.confluent.svc.cluster.local:8081"
              }
            },
            "image": {
              "application": "confluentinc/cp-enterprise-control-center@sha256:eb2e977d41585dc3c6474d71af2bfb76fe885b4a6eb5a02cb3a18a5485db8d6a",
              "init": "confluentinc/confluent-init-container@sha256:a7978b1796f4b7f01ea6ccc56615a2195190de6eaf41a4e538e325dd2406f26d"
            },
            "replicas": 1
          }
        },
        {
          "kind": "SchemaRegistry",
          "metadata": {
            "name": "schemaregistry"
          },
          "spec": {
            "image": {
              "application": "confluentinc/cp-schema-registry@sha256:c9c2528585d192f68e268521074964d37c14fca16f3bab568c57c68aca01b978",
              "init": "confluentinc/confluent-init-container@sha256:a7978b1796f4b7f01ea6ccc56615a2195190de6eaf41a4e538e325dd2406f26d"
            },
            "replicas": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": [
          "Confluent Platform License"
        ]
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/confluentinc/confluent-for-kubernetes-v2@sha256:6fe6c0d639e1b0c2a6c701bedecb3cef0b30702fb9bc38544338bb73a287c5d2",
      "bundle_path_digest": "sha256:6fe6c0d639e1b0c2a6c701bedecb3cef0b30702fb9bc38544338bb73a287c5d2",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "2.1",
      "creation_date": "2022-02-09T22:37:38.046000+00:00",
      "csv_description": "Confluent for Kubernetes (CFK) is a cloud-native control plane for deploying and managing Confluent in your private cloud environment. It provides standard and simple interface to customize, deploy, and manage Confluent Platform through declarative API.\nConfluent for Kubernetes runs on Kubernetes, the runtime for private cloud architectures.",
      "csv_display_name": "Confluent for Kubernetes",
      "csv_metadata_description": "",
      "csv_name": "confluent-for-kubernetes.v2.1.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T10:55:56.774000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "confluent-for-kubernetes",
      "provided_apis": [
        {
          "group": "platform.confluent.io",
          "kind": "KafkaRestProxy",
          "plural": "kafkarestproxies",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "Kafka",
          "plural": "kafkas",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "Zookeeper",
          "plural": "zookeepers",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "Connector",
          "plural": "connectors",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "Connect",
          "plural": "connects",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "KafkaTopic",
          "plural": "kafkatopics",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "Schema",
          "plural": "schemas",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "ControlCenter",
          "plural": "controlcenters",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "KsqlDB",
          "plural": "ksqldbs",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "ConfluentRolebinding",
          "plural": "confluentrolebindings",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "MigrationJob",
          "plural": "migrationjobs",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "KafkaRestClass",
          "plural": "kafkarestclasses",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "SchemaRegistry",
          "plural": "schemaregistries",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:633dc1b217c2cfbb216781f5fa9b40a4170145273e89df85a27a7f0206090f5f",
          "image": "docker.io/confluentinc/confluent-operator@sha256:633dc1b217c2cfbb216781f5fa9b40a4170145273e89df85a27a7f0206090f5f",
          "name": "confluent-operator"
        },
        {
          "digest": "sha256:a7978b1796f4b7f01ea6ccc56615a2195190de6eaf41a4e538e325dd2406f26d",
          "image": "docker.io/confluentinc/confluent-init-container@sha256:a7978b1796f4b7f01ea6ccc56615a2195190de6eaf41a4e538e325dd2406f26d",
          "name": "confluent-init-container"
        },
        {
          "digest": "sha256:254266ab0730cdacc49a57b7e98b23865942aa251c676c15297d70a3003b45e1",
          "image": "docker.io/confluentinc/cp-zookeeper@sha256:254266ab0730cdacc49a57b7e98b23865942aa251c676c15297d70a3003b45e1",
          "name": "cp-zookeeper"
        },
        {
          "digest": "sha256:a590245bf3269c05a88e99d56a1e869c07f7d3fb76fa76370b8faaa673b0c8b1",
          "image": "docker.io/confluentinc/cp-server@sha256:a590245bf3269c05a88e99d56a1e869c07f7d3fb76fa76370b8faaa673b0c8b1",
          "name": "cp-server"
        },
        {
          "digest": "sha256:80a3d41cc8a6989e556a0283e4ae31f7c80880f97bd235db4929f4df40dabb8f",
          "image": "docker.io/confluentinc/cp-kafka-rest@sha256:80a3d41cc8a6989e556a0283e4ae31f7c80880f97bd235db4929f4df40dabb8f",
          "name": "cp-kafka-rest"
        },
        {
          "digest": "sha256:20b6ac87de3b00ff77f590118cbc9877d97c54d270a4846b60d165cdde2b0427",
          "image": "docker.io/confluentinc/cp-ksqldb-server@sha256:20b6ac87de3b00ff77f590118cbc9877d97c54d270a4846b60d165cdde2b0427",
          "name": "cp-ksqldb-server"
        },
        {
          "digest": "sha256:c9c2528585d192f68e268521074964d37c14fca16f3bab568c57c68aca01b978",
          "image": "docker.io/confluentinc/cp-schema-registry@sha256:c9c2528585d192f68e268521074964d37c14fca16f3bab568c57c68aca01b978",
          "name": "cp-schema-registry"
        },
        {
          "digest": "sha256:bb847350302c636fb499509c29f355f77a6299c2b1d31a445882a74e0292463c",
          "image": "docker.io/confluentinc/cp-server-connect@sha256:bb847350302c636fb499509c29f355f77a6299c2b1d31a445882a74e0292463c",
          "name": "cp-server-connect"
        },
        {
          "digest": "sha256:eb2e977d41585dc3c6474d71af2bfb76fe885b4a6eb5a02cb3a18a5485db8d6a",
          "image": "docker.io/confluentinc/cp-enterprise-control-center@sha256:eb2e977d41585dc3c6474d71af2bfb76fe885b4a6eb5a02cb3a18a5485db8d6a",
          "name": "cp-enterprise-control-center"
        },
        {
          "digest": "sha256:633dc1b217c2cfbb216781f5fa9b40a4170145273e89df85a27a7f0206090f5f",
          "image": "docker.io/confluentinc/confluent-operator@sha256:633dc1b217c2cfbb216781f5fa9b40a4170145273e89df85a27a7f0206090f5f",
          "name": "confluent-operator-633dc1b217c2cfbb216781f5fa9b40a4170145273e89df85a27a7f0206090f5f-annotation"
        }
      ],
      "skip_range": ">=2.0.3 <2.1.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.1.1",
      "version_original": "2.1.1"
    },
    {
      "_id": "6206386622577e7c9a607eb5",
      "alm_examples": [
        {
          "api_version": "elasticsearch.k8s.elastic.co/v1",
          "kind": "Elasticsearch",
          "metadata": {
            "name": "elasticsearch-sample"
          },
          "spec": {
            "nodeSets": [
              {
                "config": {
                  "node.attr.attr_name": "attr_value",
                  "node.roles": [
                    "master",
                    "data"
                  ],
                  "node.store.allow_mmap": false
                },
                "count": 3,
                "name": "default",
                "podTemplate": {
                  "metadata": {
                    "labels": {
                      "foo": "bar"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "name": "elasticsearch",
                        "resources": {
                          "limits": {
                            "cpu": 2,
                            "memory": "4Gi"
                          },
                          "requests": {
                            "cpu": 1,
                            "memory": "4Gi"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "version": "8.0.0"
          }
        },
        {
          "api_version": "kibana.k8s.elastic.co/v1",
          "kind": "Kibana",
          "metadata": {
            "name": "kibana-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "podTemplate": {
              "metadata": {
                "labels": {
                  "foo": "bar"
                }
              },
              "spec": {
                "containers": [
                  {
                    "name": "kibana",
                    "resources": {
                      "limits": {
                        "cpu": 2,
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": 0.5,
                        "memory": "1Gi"
                      }
                    }
                  }
                ]
              }
            },
            "version": "8.0.0"
          }
        },
        {
          "api_version": "apm.k8s.elastic.co/v1",
          "kind": "ApmServer",
          "metadata": {
            "name": "apmserver-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.0.0"
          }
        },
        {
          "api_version": "enterprisesearch.k8s.elastic.co/v1",
          "kind": "EnterpriseSearch",
          "metadata": {
            "name": "ent-sample"
          },
          "spec": {
            "config": {
              "ent_search.external_url": "https://localhost:3002"
            },
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.0.0"
          }
        },
        {
          "api_version": "beat.k8s.elastic.co/v1beta1",
          "kind": "Beat",
          "metadata": {
            "name": "heartbeat-sample"
          },
          "spec": {
            "config": {
              "heartbeat.monitors": [
                {
                  "hosts": [
                    "elasticsearch-sample-es-http.default.svc:9200"
                  ],
                  "schedule": "@every 5s",
                  "type": "tcp"
                }
              ]
            },
            "deployment": {
              "podTemplate": {
                "spec": {
                  "securityContext": {
                    "runAsUser": 0
                  }
                }
              },
              "replicas": 1
            },
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "type": "heartbeat",
            "version": "8.0.0"
          }
        },
        {
          "api_version": "agent.k8s.elastic.co/v1alpha1",
          "kind": "Agent",
          "metadata": {
            "name": "agent-sample"
          },
          "spec": {
            "config": {
              "inputs": [
                {
                  "data_stream": {
                    "namespace": "default"
                  },
                  "meta": {
                    "package": {
                      "name": "system",
                      "version": "0.9.1"
                    }
                  },
                  "name": "system-1",
                  "revision": 1,
                  "streams": [
                    {
                      "cpu.metrics": [
                        "percentages",
                        "normalized_percentages"
                      ],
                      "data_stream": {
                        "dataset": "system.cpu",
                        "type": "metrics"
                      },
                      "id": "system/metrics-system.cpu",
                      "metricsets": [
                        "cpu"
                      ],
                      "period": "10s"
                    }
                  ],
                  "type": "system/metrics",
                  "use_output": "default"
                }
              ]
            },
            "daemonSet": {},
            "elasticsearchRefs": [
              {
                "name": "elasticsearch-sample"
              }
            ],
            "version": "8.0.0"
          }
        },
        {
          "api_version": "maps.k8s.elastic.co/v1alpha1",
          "kind": "ElasticMapsServer",
          "metadata": {
            "name": "ems-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.0.0"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/elastic/eck@sha256:4bb009507010225a10589c29d79ae970e53aa1c501c31879b8a6bd80418e6605",
      "bundle_path_digest": "sha256:4bb009507010225a10589c29d79ae970e53aa1c501c31879b8a6bd80418e6605",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-11T10:20:22.620000+00:00",
      "csv_description": "Elastic Cloud on Kubernetes (ECK) is the official operator by Elastic for automating the deployment, provisioning, management, and orchestration of Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes.\n\nCurrent features:\n\n*  Elasticsearch, Kibana, APM Server, Enterprise Search, Beats, Elastic Agent and Elastic Maps Server deployments\n*  TLS Certificates management\n*  Safe Elasticsearch cluster configuration and topology changes\n*  Persistent volumes usage\n*  Custom node configuration and attributes\n*  Secure settings keystore updates\n\nSupported versions:\n\n* Kubernetes 1.19-1.23\n* OpenShift 4.6-4.10\n* Google Kubernetes Engine (GKE), Azure Kubernetes Service (AKS), and Amazon Elastic Kubernetes Service (EKS)\n* Elasticsearch, Kibana, APM Server: 7.10+\n* Enterprise Search: 7.10+\n* Beats: 7.10+\n* Elastic Agent: 7.10+\n* Elastic Maps Server: 7.11+\n\nECK should work with all conformant installers as listed in these [FAQs](https://github.com/cncf/k8s-conformance/blob/master/faq.md#what-is-a-distribution-hosted-platform-and-an-installer). Distributions include source patches and so may not work as-is with ECK.\nAlpha, beta, and stable API versions follow the same [conventions used by Kubernetes](https://kubernetes.io/docs/concepts/overview/kubernetes-api/#api-versioning).\nSee the full [Elastic support matrix](https://www.elastic.co/support/matrix#matrix_kubernetes) for more information.\nSee the [Quickstart](https://www.elastic.co/guide/en/cloud-on-k8s/2.0/k8s-quickstart.html) to get started with ECK.",
      "csv_display_name": "Elasticsearch (ECK) Operator",
      "csv_metadata_description": "Run Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes and OpenShift",
      "csv_name": "elasticsearch-eck-operator-certified.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:45:27.950000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "elasticsearch-eck-operator-certified",
      "provided_apis": [
        {
          "group": "beat.k8s.elastic.co",
          "kind": "Beat",
          "plural": "beats",
          "version": "v1beta1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1beta1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1alpha1"
        },
        {
          "group": "agent.k8s.elastic.co",
          "kind": "Agent",
          "plural": "agents",
          "version": "v1alpha1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1alpha1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1beta1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1beta1"
        },
        {
          "group": "maps.k8s.elastic.co",
          "kind": "ElasticMapsServer",
          "plural": "elasticmapsservers",
          "version": "v1alpha1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1beta1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:dc2ace972ad6dbf30caa920d092b9358ea93c4290173f501d80ba486cccae64f",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:dc2ace972ad6dbf30caa920d092b9358ea93c4290173f501d80ba486cccae64f",
          "name": "eck-operator-dc2ace972ad6dbf30caa920d092b9358ea93c4290173f501d80ba486cccae64f-annotation"
        },
        {
          "digest": "sha256:dc2ace972ad6dbf30caa920d092b9358ea93c4290173f501d80ba486cccae64f",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:dc2ace972ad6dbf30caa920d092b9358ea93c4290173f501d80ba486cccae64f",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "62063961cef518ddcd5c6d21",
      "alm_examples": [
        {
          "api_version": "elasticsearch.k8s.elastic.co/v1",
          "kind": "Elasticsearch",
          "metadata": {
            "name": "elasticsearch-sample"
          },
          "spec": {
            "nodeSets": [
              {
                "config": {
                  "node.attr.attr_name": "attr_value",
                  "node.roles": [
                    "master",
                    "data"
                  ],
                  "node.store.allow_mmap": false
                },
                "count": 3,
                "name": "default",
                "podTemplate": {
                  "metadata": {
                    "labels": {
                      "foo": "bar"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "name": "elasticsearch",
                        "resources": {
                          "limits": {
                            "cpu": 2,
                            "memory": "4Gi"
                          },
                          "requests": {
                            "cpu": 1,
                            "memory": "4Gi"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "version": "8.0.0"
          }
        },
        {
          "api_version": "kibana.k8s.elastic.co/v1",
          "kind": "Kibana",
          "metadata": {
            "name": "kibana-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "podTemplate": {
              "metadata": {
                "labels": {
                  "foo": "bar"
                }
              },
              "spec": {
                "containers": [
                  {
                    "name": "kibana",
                    "resources": {
                      "limits": {
                        "cpu": 2,
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": 0.5,
                        "memory": "1Gi"
                      }
                    }
                  }
                ]
              }
            },
            "version": "8.0.0"
          }
        },
        {
          "api_version": "apm.k8s.elastic.co/v1",
          "kind": "ApmServer",
          "metadata": {
            "name": "apmserver-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.0.0"
          }
        },
        {
          "api_version": "enterprisesearch.k8s.elastic.co/v1",
          "kind": "EnterpriseSearch",
          "metadata": {
            "name": "ent-sample"
          },
          "spec": {
            "config": {
              "ent_search.external_url": "https://localhost:3002"
            },
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.0.0"
          }
        },
        {
          "api_version": "beat.k8s.elastic.co/v1beta1",
          "kind": "Beat",
          "metadata": {
            "name": "heartbeat-sample"
          },
          "spec": {
            "config": {
              "heartbeat.monitors": [
                {
                  "hosts": [
                    "elasticsearch-sample-es-http.default.svc:9200"
                  ],
                  "schedule": "@every 5s",
                  "type": "tcp"
                }
              ]
            },
            "deployment": {
              "podTemplate": {
                "spec": {
                  "securityContext": {
                    "runAsUser": 0
                  }
                }
              },
              "replicas": 1
            },
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "type": "heartbeat",
            "version": "8.0.0"
          }
        },
        {
          "api_version": "agent.k8s.elastic.co/v1alpha1",
          "kind": "Agent",
          "metadata": {
            "name": "agent-sample"
          },
          "spec": {
            "config": {
              "inputs": [
                {
                  "data_stream": {
                    "namespace": "default"
                  },
                  "meta": {
                    "package": {
                      "name": "system",
                      "version": "0.9.1"
                    }
                  },
                  "name": "system-1",
                  "revision": 1,
                  "streams": [
                    {
                      "cpu.metrics": [
                        "percentages",
                        "normalized_percentages"
                      ],
                      "data_stream": {
                        "dataset": "system.cpu",
                        "type": "metrics"
                      },
                      "id": "system/metrics-system.cpu",
                      "metricsets": [
                        "cpu"
                      ],
                      "period": "10s"
                    }
                  ],
                  "type": "system/metrics",
                  "use_output": "default"
                }
              ]
            },
            "daemonSet": {},
            "elasticsearchRefs": [
              {
                "name": "elasticsearch-sample"
              }
            ],
            "version": "8.0.0"
          }
        },
        {
          "api_version": "maps.k8s.elastic.co/v1alpha1",
          "kind": "ElasticMapsServer",
          "metadata": {
            "name": "ems-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.0.0"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/elastic/eck@sha256:4bb009507010225a10589c29d79ae970e53aa1c501c31879b8a6bd80418e6605",
      "bundle_path_digest": "sha256:4bb009507010225a10589c29d79ae970e53aa1c501c31879b8a6bd80418e6605",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-11T10:24:33.946000+00:00",
      "csv_description": "Elastic Cloud on Kubernetes (ECK) is the official operator by Elastic for automating the deployment, provisioning, management, and orchestration of Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes.\n\nCurrent features:\n\n*  Elasticsearch, Kibana, APM Server, Enterprise Search, Beats, Elastic Agent and Elastic Maps Server deployments\n*  TLS Certificates management\n*  Safe Elasticsearch cluster configuration and topology changes\n*  Persistent volumes usage\n*  Custom node configuration and attributes\n*  Secure settings keystore updates\n\nSupported versions:\n\n* Kubernetes 1.19-1.23\n* OpenShift 4.6-4.10\n* Google Kubernetes Engine (GKE), Azure Kubernetes Service (AKS), and Amazon Elastic Kubernetes Service (EKS)\n* Elasticsearch, Kibana, APM Server: 7.10+\n* Enterprise Search: 7.10+\n* Beats: 7.10+\n* Elastic Agent: 7.10+\n* Elastic Maps Server: 7.11+\n\nECK should work with all conformant installers as listed in these [FAQs](https://github.com/cncf/k8s-conformance/blob/master/faq.md#what-is-a-distribution-hosted-platform-and-an-installer). Distributions include source patches and so may not work as-is with ECK.\nAlpha, beta, and stable API versions follow the same [conventions used by Kubernetes](https://kubernetes.io/docs/concepts/overview/kubernetes-api/#api-versioning).\nSee the full [Elastic support matrix](https://www.elastic.co/support/matrix#matrix_kubernetes) for more information.\nSee the [Quickstart](https://www.elastic.co/guide/en/cloud-on-k8s/2.0/k8s-quickstart.html) to get started with ECK.",
      "csv_display_name": "Elasticsearch (ECK) Operator",
      "csv_metadata_description": "Run Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes and OpenShift",
      "csv_name": "elasticsearch-eck-operator-certified.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:52:47.384000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "elasticsearch-eck-operator-certified",
      "provided_apis": [
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1"
        },
        {
          "group": "agent.k8s.elastic.co",
          "kind": "Agent",
          "plural": "agents",
          "version": "v1alpha1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1beta1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1alpha1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1beta1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1alpha1"
        },
        {
          "group": "beat.k8s.elastic.co",
          "kind": "Beat",
          "plural": "beats",
          "version": "v1beta1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1beta1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1beta1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1"
        },
        {
          "group": "maps.k8s.elastic.co",
          "kind": "ElasticMapsServer",
          "plural": "elasticmapsservers",
          "version": "v1alpha1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:dc2ace972ad6dbf30caa920d092b9358ea93c4290173f501d80ba486cccae64f",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:dc2ace972ad6dbf30caa920d092b9358ea93c4290173f501d80ba486cccae64f",
          "name": "eck-operator-dc2ace972ad6dbf30caa920d092b9358ea93c4290173f501d80ba486cccae64f-annotation"
        },
        {
          "digest": "sha256:dc2ace972ad6dbf30caa920d092b9358ea93c4290173f501d80ba486cccae64f",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:dc2ace972ad6dbf30caa920d092b9358ea93c4290173f501d80ba486cccae64f",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "620639d077a7e41e4632611e",
      "alm_examples": [
        {
          "api_version": "elasticsearch.k8s.elastic.co/v1",
          "kind": "Elasticsearch",
          "metadata": {
            "name": "elasticsearch-sample"
          },
          "spec": {
            "nodeSets": [
              {
                "config": {
                  "node.attr.attr_name": "attr_value",
                  "node.roles": [
                    "master",
                    "data"
                  ],
                  "node.store.allow_mmap": false
                },
                "count": 3,
                "name": "default",
                "podTemplate": {
                  "metadata": {
                    "labels": {
                      "foo": "bar"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "name": "elasticsearch",
                        "resources": {
                          "limits": {
                            "cpu": 2,
                            "memory": "4Gi"
                          },
                          "requests": {
                            "cpu": 1,
                            "memory": "4Gi"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "version": "8.0.0"
          }
        },
        {
          "api_version": "kibana.k8s.elastic.co/v1",
          "kind": "Kibana",
          "metadata": {
            "name": "kibana-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "podTemplate": {
              "metadata": {
                "labels": {
                  "foo": "bar"
                }
              },
              "spec": {
                "containers": [
                  {
                    "name": "kibana",
                    "resources": {
                      "limits": {
                        "cpu": 2,
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": 0.5,
                        "memory": "1Gi"
                      }
                    }
                  }
                ]
              }
            },
            "version": "8.0.0"
          }
        },
        {
          "api_version": "apm.k8s.elastic.co/v1",
          "kind": "ApmServer",
          "metadata": {
            "name": "apmserver-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.0.0"
          }
        },
        {
          "api_version": "enterprisesearch.k8s.elastic.co/v1",
          "kind": "EnterpriseSearch",
          "metadata": {
            "name": "ent-sample"
          },
          "spec": {
            "config": {
              "ent_search.external_url": "https://localhost:3002"
            },
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.0.0"
          }
        },
        {
          "api_version": "beat.k8s.elastic.co/v1beta1",
          "kind": "Beat",
          "metadata": {
            "name": "heartbeat-sample"
          },
          "spec": {
            "config": {
              "heartbeat.monitors": [
                {
                  "hosts": [
                    "elasticsearch-sample-es-http.default.svc:9200"
                  ],
                  "schedule": "@every 5s",
                  "type": "tcp"
                }
              ]
            },
            "deployment": {
              "podTemplate": {
                "spec": {
                  "securityContext": {
                    "runAsUser": 0
                  }
                }
              },
              "replicas": 1
            },
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "type": "heartbeat",
            "version": "8.0.0"
          }
        },
        {
          "api_version": "agent.k8s.elastic.co/v1alpha1",
          "kind": "Agent",
          "metadata": {
            "name": "agent-sample"
          },
          "spec": {
            "config": {
              "inputs": [
                {
                  "data_stream": {
                    "namespace": "default"
                  },
                  "meta": {
                    "package": {
                      "name": "system",
                      "version": "0.9.1"
                    }
                  },
                  "name": "system-1",
                  "revision": 1,
                  "streams": [
                    {
                      "cpu.metrics": [
                        "percentages",
                        "normalized_percentages"
                      ],
                      "data_stream": {
                        "dataset": "system.cpu",
                        "type": "metrics"
                      },
                      "id": "system/metrics-system.cpu",
                      "metricsets": [
                        "cpu"
                      ],
                      "period": "10s"
                    }
                  ],
                  "type": "system/metrics",
                  "use_output": "default"
                }
              ]
            },
            "daemonSet": {},
            "elasticsearchRefs": [
              {
                "name": "elasticsearch-sample"
              }
            ],
            "version": "8.0.0"
          }
        },
        {
          "api_version": "maps.k8s.elastic.co/v1alpha1",
          "kind": "ElasticMapsServer",
          "metadata": {
            "name": "ems-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.0.0"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/elastic/eck@sha256:4bb009507010225a10589c29d79ae970e53aa1c501c31879b8a6bd80418e6605",
      "bundle_path_digest": "sha256:4bb009507010225a10589c29d79ae970e53aa1c501c31879b8a6bd80418e6605",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-11T10:26:24.171000+00:00",
      "csv_description": "Elastic Cloud on Kubernetes (ECK) is the official operator by Elastic for automating the deployment, provisioning, management, and orchestration of Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes.\n\nCurrent features:\n\n*  Elasticsearch, Kibana, APM Server, Enterprise Search, Beats, Elastic Agent and Elastic Maps Server deployments\n*  TLS Certificates management\n*  Safe Elasticsearch cluster configuration and topology changes\n*  Persistent volumes usage\n*  Custom node configuration and attributes\n*  Secure settings keystore updates\n\nSupported versions:\n\n* Kubernetes 1.19-1.23\n* OpenShift 4.6-4.10\n* Google Kubernetes Engine (GKE), Azure Kubernetes Service (AKS), and Amazon Elastic Kubernetes Service (EKS)\n* Elasticsearch, Kibana, APM Server: 7.10+\n* Enterprise Search: 7.10+\n* Beats: 7.10+\n* Elastic Agent: 7.10+\n* Elastic Maps Server: 7.11+\n\nECK should work with all conformant installers as listed in these [FAQs](https://github.com/cncf/k8s-conformance/blob/master/faq.md#what-is-a-distribution-hosted-platform-and-an-installer). Distributions include source patches and so may not work as-is with ECK.\nAlpha, beta, and stable API versions follow the same [conventions used by Kubernetes](https://kubernetes.io/docs/concepts/overview/kubernetes-api/#api-versioning).\nSee the full [Elastic support matrix](https://www.elastic.co/support/matrix#matrix_kubernetes) for more information.\nSee the [Quickstart](https://www.elastic.co/guide/en/cloud-on-k8s/2.0/k8s-quickstart.html) to get started with ECK.",
      "csv_display_name": "Elasticsearch (ECK) Operator",
      "csv_metadata_description": "Run Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes and OpenShift",
      "csv_name": "elasticsearch-eck-operator-certified.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:20:03.902000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "elasticsearch-eck-operator-certified",
      "provided_apis": [
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1beta1"
        },
        {
          "group": "maps.k8s.elastic.co",
          "kind": "ElasticMapsServer",
          "plural": "elasticmapsservers",
          "version": "v1alpha1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1alpha1"
        },
        {
          "group": "agent.k8s.elastic.co",
          "kind": "Agent",
          "plural": "agents",
          "version": "v1alpha1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1beta1"
        },
        {
          "group": "beat.k8s.elastic.co",
          "kind": "Beat",
          "plural": "beats",
          "version": "v1beta1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1alpha1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1beta1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1alpha1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:dc2ace972ad6dbf30caa920d092b9358ea93c4290173f501d80ba486cccae64f",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:dc2ace972ad6dbf30caa920d092b9358ea93c4290173f501d80ba486cccae64f",
          "name": "eck-operator-dc2ace972ad6dbf30caa920d092b9358ea93c4290173f501d80ba486cccae64f-annotation"
        },
        {
          "digest": "sha256:dc2ace972ad6dbf30caa920d092b9358ea93c4290173f501d80ba486cccae64f",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:dc2ace972ad6dbf30caa920d092b9358ea93c4290173f501d80ba486cccae64f",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "62063c016825414bf9f39889",
      "alm_examples": [
        {
          "api_version": "elasticsearch.k8s.elastic.co/v1",
          "kind": "Elasticsearch",
          "metadata": {
            "name": "elasticsearch-sample"
          },
          "spec": {
            "nodeSets": [
              {
                "config": {
                  "node.attr.attr_name": "attr_value",
                  "node.roles": [
                    "master",
                    "data"
                  ],
                  "node.store.allow_mmap": false
                },
                "count": 3,
                "name": "default",
                "podTemplate": {
                  "metadata": {
                    "labels": {
                      "foo": "bar"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "name": "elasticsearch",
                        "resources": {
                          "limits": {
                            "cpu": 2,
                            "memory": "4Gi"
                          },
                          "requests": {
                            "cpu": 1,
                            "memory": "4Gi"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "version": "8.0.0"
          }
        },
        {
          "api_version": "kibana.k8s.elastic.co/v1",
          "kind": "Kibana",
          "metadata": {
            "name": "kibana-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "podTemplate": {
              "metadata": {
                "labels": {
                  "foo": "bar"
                }
              },
              "spec": {
                "containers": [
                  {
                    "name": "kibana",
                    "resources": {
                      "limits": {
                        "cpu": 2,
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": 0.5,
                        "memory": "1Gi"
                      }
                    }
                  }
                ]
              }
            },
            "version": "8.0.0"
          }
        },
        {
          "api_version": "apm.k8s.elastic.co/v1",
          "kind": "ApmServer",
          "metadata": {
            "name": "apmserver-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.0.0"
          }
        },
        {
          "api_version": "enterprisesearch.k8s.elastic.co/v1",
          "kind": "EnterpriseSearch",
          "metadata": {
            "name": "ent-sample"
          },
          "spec": {
            "config": {
              "ent_search.external_url": "https://localhost:3002"
            },
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.0.0"
          }
        },
        {
          "api_version": "beat.k8s.elastic.co/v1beta1",
          "kind": "Beat",
          "metadata": {
            "name": "heartbeat-sample"
          },
          "spec": {
            "config": {
              "heartbeat.monitors": [
                {
                  "hosts": [
                    "elasticsearch-sample-es-http.default.svc:9200"
                  ],
                  "schedule": "@every 5s",
                  "type": "tcp"
                }
              ]
            },
            "deployment": {
              "podTemplate": {
                "spec": {
                  "securityContext": {
                    "runAsUser": 0
                  }
                }
              },
              "replicas": 1
            },
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "type": "heartbeat",
            "version": "8.0.0"
          }
        },
        {
          "api_version": "agent.k8s.elastic.co/v1alpha1",
          "kind": "Agent",
          "metadata": {
            "name": "agent-sample"
          },
          "spec": {
            "config": {
              "inputs": [
                {
                  "data_stream": {
                    "namespace": "default"
                  },
                  "meta": {
                    "package": {
                      "name": "system",
                      "version": "0.9.1"
                    }
                  },
                  "name": "system-1",
                  "revision": 1,
                  "streams": [
                    {
                      "cpu.metrics": [
                        "percentages",
                        "normalized_percentages"
                      ],
                      "data_stream": {
                        "dataset": "system.cpu",
                        "type": "metrics"
                      },
                      "id": "system/metrics-system.cpu",
                      "metricsets": [
                        "cpu"
                      ],
                      "period": "10s"
                    }
                  ],
                  "type": "system/metrics",
                  "use_output": "default"
                }
              ]
            },
            "daemonSet": {},
            "elasticsearchRefs": [
              {
                "name": "elasticsearch-sample"
              }
            ],
            "version": "8.0.0"
          }
        },
        {
          "api_version": "maps.k8s.elastic.co/v1alpha1",
          "kind": "ElasticMapsServer",
          "metadata": {
            "name": "ems-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.0.0"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/elastic/eck@sha256:4bb009507010225a10589c29d79ae970e53aa1c501c31879b8a6bd80418e6605",
      "bundle_path_digest": "sha256:4bb009507010225a10589c29d79ae970e53aa1c501c31879b8a6bd80418e6605",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-11T10:35:45.462000+00:00",
      "csv_description": "Elastic Cloud on Kubernetes (ECK) is the official operator by Elastic for automating the deployment, provisioning, management, and orchestration of Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes.\n\nCurrent features:\n\n*  Elasticsearch, Kibana, APM Server, Enterprise Search, Beats, Elastic Agent and Elastic Maps Server deployments\n*  TLS Certificates management\n*  Safe Elasticsearch cluster configuration and topology changes\n*  Persistent volumes usage\n*  Custom node configuration and attributes\n*  Secure settings keystore updates\n\nSupported versions:\n\n* Kubernetes 1.19-1.23\n* OpenShift 4.6-4.10\n* Google Kubernetes Engine (GKE), Azure Kubernetes Service (AKS), and Amazon Elastic Kubernetes Service (EKS)\n* Elasticsearch, Kibana, APM Server: 7.10+\n* Enterprise Search: 7.10+\n* Beats: 7.10+\n* Elastic Agent: 7.10+\n* Elastic Maps Server: 7.11+\n\nECK should work with all conformant installers as listed in these [FAQs](https://github.com/cncf/k8s-conformance/blob/master/faq.md#what-is-a-distribution-hosted-platform-and-an-installer). Distributions include source patches and so may not work as-is with ECK.\nAlpha, beta, and stable API versions follow the same [conventions used by Kubernetes](https://kubernetes.io/docs/concepts/overview/kubernetes-api/#api-versioning).\nSee the full [Elastic support matrix](https://www.elastic.co/support/matrix#matrix_kubernetes) for more information.\nSee the [Quickstart](https://www.elastic.co/guide/en/cloud-on-k8s/2.0/k8s-quickstart.html) to get started with ECK.",
      "csv_display_name": "Elasticsearch (ECK) Operator",
      "csv_metadata_description": "Run Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes and OpenShift",
      "csv_name": "elasticsearch-eck-operator-certified.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:27:17.019000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "elasticsearch-eck-operator-certified",
      "provided_apis": [
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1beta1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1alpha1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1beta1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1alpha1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1beta1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1beta1"
        },
        {
          "group": "beat.k8s.elastic.co",
          "kind": "Beat",
          "plural": "beats",
          "version": "v1beta1"
        },
        {
          "group": "agent.k8s.elastic.co",
          "kind": "Agent",
          "plural": "agents",
          "version": "v1alpha1"
        },
        {
          "group": "maps.k8s.elastic.co",
          "kind": "ElasticMapsServer",
          "plural": "elasticmapsservers",
          "version": "v1alpha1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:dc2ace972ad6dbf30caa920d092b9358ea93c4290173f501d80ba486cccae64f",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:dc2ace972ad6dbf30caa920d092b9358ea93c4290173f501d80ba486cccae64f",
          "name": "eck-operator-dc2ace972ad6dbf30caa920d092b9358ea93c4290173f501d80ba486cccae64f-annotation"
        },
        {
          "digest": "sha256:dc2ace972ad6dbf30caa920d092b9358ea93c4290173f501d80ba486cccae64f",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:dc2ace972ad6dbf30caa920d092b9358ea93c4290173f501d80ba486cccae64f",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "62063d8977a7e41e4632611f",
      "alm_examples": [
        {
          "api_version": "elasticsearch.k8s.elastic.co/v1",
          "kind": "Elasticsearch",
          "metadata": {
            "name": "elasticsearch-sample"
          },
          "spec": {
            "nodeSets": [
              {
                "config": {
                  "node.attr.attr_name": "attr_value",
                  "node.roles": [
                    "master",
                    "data"
                  ],
                  "node.store.allow_mmap": false
                },
                "count": 3,
                "name": "default",
                "podTemplate": {
                  "metadata": {
                    "labels": {
                      "foo": "bar"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "name": "elasticsearch",
                        "resources": {
                          "limits": {
                            "cpu": 2,
                            "memory": "4Gi"
                          },
                          "requests": {
                            "cpu": 1,
                            "memory": "4Gi"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "version": "8.0.0"
          }
        },
        {
          "api_version": "kibana.k8s.elastic.co/v1",
          "kind": "Kibana",
          "metadata": {
            "name": "kibana-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "podTemplate": {
              "metadata": {
                "labels": {
                  "foo": "bar"
                }
              },
              "spec": {
                "containers": [
                  {
                    "name": "kibana",
                    "resources": {
                      "limits": {
                        "cpu": 2,
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": 0.5,
                        "memory": "1Gi"
                      }
                    }
                  }
                ]
              }
            },
            "version": "8.0.0"
          }
        },
        {
          "api_version": "apm.k8s.elastic.co/v1",
          "kind": "ApmServer",
          "metadata": {
            "name": "apmserver-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.0.0"
          }
        },
        {
          "api_version": "enterprisesearch.k8s.elastic.co/v1",
          "kind": "EnterpriseSearch",
          "metadata": {
            "name": "ent-sample"
          },
          "spec": {
            "config": {
              "ent_search.external_url": "https://localhost:3002"
            },
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.0.0"
          }
        },
        {
          "api_version": "beat.k8s.elastic.co/v1beta1",
          "kind": "Beat",
          "metadata": {
            "name": "heartbeat-sample"
          },
          "spec": {
            "config": {
              "heartbeat.monitors": [
                {
                  "hosts": [
                    "elasticsearch-sample-es-http.default.svc:9200"
                  ],
                  "schedule": "@every 5s",
                  "type": "tcp"
                }
              ]
            },
            "deployment": {
              "podTemplate": {
                "spec": {
                  "securityContext": {
                    "runAsUser": 0
                  }
                }
              },
              "replicas": 1
            },
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "type": "heartbeat",
            "version": "8.0.0"
          }
        },
        {
          "api_version": "agent.k8s.elastic.co/v1alpha1",
          "kind": "Agent",
          "metadata": {
            "name": "agent-sample"
          },
          "spec": {
            "config": {
              "inputs": [
                {
                  "data_stream": {
                    "namespace": "default"
                  },
                  "meta": {
                    "package": {
                      "name": "system",
                      "version": "0.9.1"
                    }
                  },
                  "name": "system-1",
                  "revision": 1,
                  "streams": [
                    {
                      "cpu.metrics": [
                        "percentages",
                        "normalized_percentages"
                      ],
                      "data_stream": {
                        "dataset": "system.cpu",
                        "type": "metrics"
                      },
                      "id": "system/metrics-system.cpu",
                      "metricsets": [
                        "cpu"
                      ],
                      "period": "10s"
                    }
                  ],
                  "type": "system/metrics",
                  "use_output": "default"
                }
              ]
            },
            "daemonSet": {},
            "elasticsearchRefs": [
              {
                "name": "elasticsearch-sample"
              }
            ],
            "version": "8.0.0"
          }
        },
        {
          "api_version": "maps.k8s.elastic.co/v1alpha1",
          "kind": "ElasticMapsServer",
          "metadata": {
            "name": "ems-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.0.0"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/elastic/eck@sha256:4bb009507010225a10589c29d79ae970e53aa1c501c31879b8a6bd80418e6605",
      "bundle_path_digest": "sha256:4bb009507010225a10589c29d79ae970e53aa1c501c31879b8a6bd80418e6605",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-11T10:42:17.536000+00:00",
      "csv_description": "Elastic Cloud on Kubernetes (ECK) is the official operator by Elastic for automating the deployment, provisioning, management, and orchestration of Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes.\n\nCurrent features:\n\n*  Elasticsearch, Kibana, APM Server, Enterprise Search, Beats, Elastic Agent and Elastic Maps Server deployments\n*  TLS Certificates management\n*  Safe Elasticsearch cluster configuration and topology changes\n*  Persistent volumes usage\n*  Custom node configuration and attributes\n*  Secure settings keystore updates\n\nSupported versions:\n\n* Kubernetes 1.19-1.23\n* OpenShift 4.6-4.10\n* Google Kubernetes Engine (GKE), Azure Kubernetes Service (AKS), and Amazon Elastic Kubernetes Service (EKS)\n* Elasticsearch, Kibana, APM Server: 7.10+\n* Enterprise Search: 7.10+\n* Beats: 7.10+\n* Elastic Agent: 7.10+\n* Elastic Maps Server: 7.11+\n\nECK should work with all conformant installers as listed in these [FAQs](https://github.com/cncf/k8s-conformance/blob/master/faq.md#what-is-a-distribution-hosted-platform-and-an-installer). Distributions include source patches and so may not work as-is with ECK.\nAlpha, beta, and stable API versions follow the same [conventions used by Kubernetes](https://kubernetes.io/docs/concepts/overview/kubernetes-api/#api-versioning).\nSee the full [Elastic support matrix](https://www.elastic.co/support/matrix#matrix_kubernetes) for more information.\nSee the [Quickstart](https://www.elastic.co/guide/en/cloud-on-k8s/2.0/k8s-quickstart.html) to get started with ECK.",
      "csv_display_name": "Elasticsearch (ECK) Operator",
      "csv_metadata_description": "Run Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes and OpenShift",
      "csv_name": "elasticsearch-eck-operator-certified.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:33:49.372000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "elasticsearch-eck-operator-certified",
      "provided_apis": [
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1alpha1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1beta1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1alpha1"
        },
        {
          "group": "agent.k8s.elastic.co",
          "kind": "Agent",
          "plural": "agents",
          "version": "v1alpha1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1"
        },
        {
          "group": "maps.k8s.elastic.co",
          "kind": "ElasticMapsServer",
          "plural": "elasticmapsservers",
          "version": "v1alpha1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1beta1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1"
        },
        {
          "group": "beat.k8s.elastic.co",
          "kind": "Beat",
          "plural": "beats",
          "version": "v1beta1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1beta1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1alpha1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:dc2ace972ad6dbf30caa920d092b9358ea93c4290173f501d80ba486cccae64f",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:dc2ace972ad6dbf30caa920d092b9358ea93c4290173f501d80ba486cccae64f",
          "name": "eck-operator-dc2ace972ad6dbf30caa920d092b9358ea93c4290173f501d80ba486cccae64f-annotation"
        },
        {
          "digest": "sha256:dc2ace972ad6dbf30caa920d092b9358ea93c4290173f501d80ba486cccae64f",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:dc2ace972ad6dbf30caa920d092b9358ea93c4290173f501d80ba486cccae64f",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "620654ca77a7e41e4632612c",
      "alm_examples": [
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "my-replica-set"
          },
          "spec": {
            "credentials": "my-credentials",
            "members": 3,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "sample-sharded-cluster"
          },
          "spec": {
            "configServerCount": 3,
            "credentials": "my-credentials",
            "mongodsPerShardCount": 3,
            "mongosCount": 2,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "shardCount": 1,
            "type": "ShardedCluster",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBMulti",
          "metadata": {
            "name": "multi-replica-set"
          },
          "spec": {
            "clusterSpecList": {
              "clusterSpecs": [
                {
                  "clusterName": "e2e.cluster1.mongokubernetes.com",
                  "members": 2
                },
                {
                  "clusterName": "e2e.cluster2.mongokubernetes.com",
                  "members": 1
                },
                {
                  "clusterName": "e2e.cluster3.mongokubernetes.com",
                  "members": 2
                }
              ]
            },
            "credentials": "my-credentials",
            "duplicateServiceObjects": false,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": false,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBOpsManager",
          "metadata": {
            "name": "ops-manager"
          },
          "spec": {
            "adminCredentials": "ops-manager-admin",
            "applicationDatabase": {
              "members": 3,
              "persistent": true,
              "podSpec": {
                "cpu": 1
              }
            },
            "configuration": {
              "mms.fromEmailAddr": "admin@thecompany.com"
            },
            "externalConnectivity": {
              "type": "LoadBalancer"
            },
            "version": "4.4.1"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBUser",
          "metadata": {
            "name": "my-replica-set-x509-user"
          },
          "spec": {
            "db": "$external",
            "mongodbResourceRef": {
              "name": "my-replica-set"
            },
            "roles": [
              {
                "db": "admin",
                "name": "dbOwner"
              }
            ],
            "username": "CN=my-replica-set-x509-user,OU=cloud,O=MongoDB,L=New York,ST=New York,C=US"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:2d22cc42a8f5642006926b3c3dda7bf5531bb7cb39d5e1aa23cd2a2994826f64",
      "bundle_path_digest": "sha256:2d22cc42a8f5642006926b3c3dda7bf5531bb7cb39d5e1aa23cd2a2994826f64",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-11T12:21:30.817000+00:00",
      "csv_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB\ninto Kubernetes clusters, using our management, monitoring and backup\nplatforms, Ops Manager and Cloud Manager.\n\n## Before You Start\n\nTo start using the operator you''ll need an account in MongoDB Cloud Manager or\na MongoDB Ops Manager deployment.\n\n* [Create a Secret with your OpsManager API key](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-operator-credentials/#procedure)\n\n* [Create a ConfigMap with your OpsManager project ID and URL](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-project-using-configmap/)\n\nBy installing this integration, you will be able to deploy MongoDB instances\nwith a single simple command.\n\n## Required Parameters\n\n* `opsManager` or `cloudManager` - Enter the name of the ConfigMap containing project information\n* `credentials` - Enter the name of the Secret containing your OpsManager credentials\n* `type` - Enter MongoDB Deployment Types (\"Standalone\", \"ReplicaSet\", \"ShardedCluster\"\n\n## Supported MongoDB Deployment Types ##\n\n* Standalone: An instance of mongod that is running as a single server and\nnot as part of a replica set, this is, it does not do any kind of\nreplication.\n\n* Replica Set: A replica set in MongoDB is a group of mongod processes that\nmaintain the same data set. Replica sets provide redundancy and high\navailability, and are the basis for all production deployments. This section\nintroduces replication in MongoDB as well as the components and architecture\nof replica sets. The section also provides tutorials for common tasks\nrelated to replica sets.\n\n* Sharded Cluster: The set of nodes comprising a sharded MongoDB deployment.\nA sharded cluster consists of config servers, shards, and one or more mongos\nrouting processes. Sharding is a A database architecture that partitions\ndata by key ranges and distributes the data among two or more database\ninstances. Sharding enables horizontal scaling.\n\n## Requirements for deploying MongoDB OpsManager\n\n* In order to deploy resources of type MongoDB OpsManager, you will need to\ncreate a secret containing the [credentials](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/plan-om-resource/#om-rsrc-prereqs)\nfor the Global Onwer user\n\n## Security ##\n\nThe operator can enable TLS for all traffic between servers and also between\nclients and servers. Before enabling `security.tls.enabled` to `true` you\nshould create your certificates.  or you can leave the operator to create all\nthe certificates for you. The operator ability to create certs is been\ndepricted due to Kuberentes API changes.\n\nFor more information, please read the official MongoDB\nKubernetes Operator  [docs](https://docs.mongodb.com/kubernetes-operator/stable/).\n",
      "csv_display_name": "MongoDB Enterprise Operator",
      "csv_metadata_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB into Kubernetes clusters, using our management, monitoring and backup platforms, Ops Manager and Cloud Manager.",
      "csv_name": "mongodb-enterprise.v1.15.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:35:05.652000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [
        {
          "group": "mongodb.com",
          "kind": "MongoDB",
          "plural": "mongodb",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBMulti",
          "plural": "mongodbmulti",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBUser",
          "plural": "mongodbusers",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBOpsManager",
          "plural": "opsmanagers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c387b3c7f5b6b0b3278efa59f37a3c9ff56030aa3b68a04989449ffa47a58225",
          "image": "registry.connect.redhat.com/mongodb/enterprise-operator@sha256:c387b3c7f5b6b0b3278efa59f37a3c9ff56030aa3b68a04989449ffa47a58225",
          "name": "mongodb-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.15.0",
      "version_original": "1.15.0"
    },
    {
      "_id": "6206551ccef518ddcd5c6d2c",
      "alm_examples": [
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "my-replica-set"
          },
          "spec": {
            "credentials": "my-credentials",
            "members": 3,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "sample-sharded-cluster"
          },
          "spec": {
            "configServerCount": 3,
            "credentials": "my-credentials",
            "mongodsPerShardCount": 3,
            "mongosCount": 2,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "shardCount": 1,
            "type": "ShardedCluster",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBMulti",
          "metadata": {
            "name": "multi-replica-set"
          },
          "spec": {
            "clusterSpecList": {
              "clusterSpecs": [
                {
                  "clusterName": "e2e.cluster1.mongokubernetes.com",
                  "members": 2
                },
                {
                  "clusterName": "e2e.cluster2.mongokubernetes.com",
                  "members": 1
                },
                {
                  "clusterName": "e2e.cluster3.mongokubernetes.com",
                  "members": 2
                }
              ]
            },
            "credentials": "my-credentials",
            "duplicateServiceObjects": false,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": false,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBOpsManager",
          "metadata": {
            "name": "ops-manager"
          },
          "spec": {
            "adminCredentials": "ops-manager-admin",
            "applicationDatabase": {
              "members": 3,
              "persistent": true,
              "podSpec": {
                "cpu": 1
              }
            },
            "configuration": {
              "mms.fromEmailAddr": "admin@thecompany.com"
            },
            "externalConnectivity": {
              "type": "LoadBalancer"
            },
            "version": "4.4.1"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBUser",
          "metadata": {
            "name": "my-replica-set-x509-user"
          },
          "spec": {
            "db": "$external",
            "mongodbResourceRef": {
              "name": "my-replica-set"
            },
            "roles": [
              {
                "db": "admin",
                "name": "dbOwner"
              }
            ],
            "username": "CN=my-replica-set-x509-user,OU=cloud,O=MongoDB,L=New York,ST=New York,C=US"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:2d22cc42a8f5642006926b3c3dda7bf5531bb7cb39d5e1aa23cd2a2994826f64",
      "bundle_path_digest": "sha256:2d22cc42a8f5642006926b3c3dda7bf5531bb7cb39d5e1aa23cd2a2994826f64",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-11T12:22:52.235000+00:00",
      "csv_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB\ninto Kubernetes clusters, using our management, monitoring and backup\nplatforms, Ops Manager and Cloud Manager.\n\n## Before You Start\n\nTo start using the operator you''ll need an account in MongoDB Cloud Manager or\na MongoDB Ops Manager deployment.\n\n* [Create a Secret with your OpsManager API key](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-operator-credentials/#procedure)\n\n* [Create a ConfigMap with your OpsManager project ID and URL](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-project-using-configmap/)\n\nBy installing this integration, you will be able to deploy MongoDB instances\nwith a single simple command.\n\n## Required Parameters\n\n* `opsManager` or `cloudManager` - Enter the name of the ConfigMap containing project information\n* `credentials` - Enter the name of the Secret containing your OpsManager credentials\n* `type` - Enter MongoDB Deployment Types (\"Standalone\", \"ReplicaSet\", \"ShardedCluster\"\n\n## Supported MongoDB Deployment Types ##\n\n* Standalone: An instance of mongod that is running as a single server and\nnot as part of a replica set, this is, it does not do any kind of\nreplication.\n\n* Replica Set: A replica set in MongoDB is a group of mongod processes that\nmaintain the same data set. Replica sets provide redundancy and high\navailability, and are the basis for all production deployments. This section\nintroduces replication in MongoDB as well as the components and architecture\nof replica sets. The section also provides tutorials for common tasks\nrelated to replica sets.\n\n* Sharded Cluster: The set of nodes comprising a sharded MongoDB deployment.\nA sharded cluster consists of config servers, shards, and one or more mongos\nrouting processes. Sharding is a A database architecture that partitions\ndata by key ranges and distributes the data among two or more database\ninstances. Sharding enables horizontal scaling.\n\n## Requirements for deploying MongoDB OpsManager\n\n* In order to deploy resources of type MongoDB OpsManager, you will need to\ncreate a secret containing the [credentials](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/plan-om-resource/#om-rsrc-prereqs)\nfor the Global Onwer user\n\n## Security ##\n\nThe operator can enable TLS for all traffic between servers and also between\nclients and servers. Before enabling `security.tls.enabled` to `true` you\nshould create your certificates.  or you can leave the operator to create all\nthe certificates for you. The operator ability to create certs is been\ndepricted due to Kuberentes API changes.\n\nFor more information, please read the official MongoDB\nKubernetes Operator  [docs](https://docs.mongodb.com/kubernetes-operator/stable/).\n",
      "csv_display_name": "MongoDB Enterprise Operator",
      "csv_metadata_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB into Kubernetes clusters, using our management, monitoring and backup platforms, Ops Manager and Cloud Manager.",
      "csv_name": "mongodb-enterprise.v1.15.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:55:20.745000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [
        {
          "group": "mongodb.com",
          "kind": "MongoDBOpsManager",
          "plural": "opsmanagers",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDB",
          "plural": "mongodb",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBMulti",
          "plural": "mongodbmulti",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBUser",
          "plural": "mongodbusers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c387b3c7f5b6b0b3278efa59f37a3c9ff56030aa3b68a04989449ffa47a58225",
          "image": "registry.connect.redhat.com/mongodb/enterprise-operator@sha256:c387b3c7f5b6b0b3278efa59f37a3c9ff56030aa3b68a04989449ffa47a58225",
          "name": "mongodb-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "<1.13.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.15.0",
      "version_original": "1.15.0"
    },
    {
      "_id": "62069bb677a7e41e4632614f",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:c82cda0f42dfe2c1ec1fe2d09dcb5fd3f29e3ecd5f24b231dd4deb6cf8a31385",
      "bundle_path_digest": "sha256:c82cda0f42dfe2c1ec1fe2d09dcb5fd3f29e3ecd5f24b231dd4deb6cf8a31385",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-11T17:24:06.959000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T10:59:02.437000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "name": "kubeturbo-operator-baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70-annotation"
        },
        {
          "digest": "sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:98b3bdefba7af898076d5508b9f98e847b9b0422da3745ad61bb8cb93003ba0c",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:98b3bdefba7af898076d5508b9f98e847b9b0422da3745ad61bb8cb93003ba0c",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.4.5",
      "version_original": "8.4.5"
    },
    {
      "_id": "62069d706825414bf9f398c5",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:c82cda0f42dfe2c1ec1fe2d09dcb5fd3f29e3ecd5f24b231dd4deb6cf8a31385",
      "bundle_path_digest": "sha256:c82cda0f42dfe2c1ec1fe2d09dcb5fd3f29e3ecd5f24b231dd4deb6cf8a31385",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-11T17:31:28.351000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:48:58.169000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "name": "kubeturbo-operator-baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70-annotation"
        },
        {
          "digest": "sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:98b3bdefba7af898076d5508b9f98e847b9b0422da3745ad61bb8cb93003ba0c",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:98b3bdefba7af898076d5508b9f98e847b9b0422da3745ad61bb8cb93003ba0c",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "8.4.5",
      "version_original": "8.4.5"
    },
    {
      "_id": "62069e7a6825414bf9f398c6",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:c82cda0f42dfe2c1ec1fe2d09dcb5fd3f29e3ecd5f24b231dd4deb6cf8a31385",
      "bundle_path_digest": "sha256:c82cda0f42dfe2c1ec1fe2d09dcb5fd3f29e3ecd5f24b231dd4deb6cf8a31385",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-11T17:35:54.268000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:20:36.811000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "name": "kubeturbo-operator-baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70-annotation"
        },
        {
          "digest": "sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:98b3bdefba7af898076d5508b9f98e847b9b0422da3745ad61bb8cb93003ba0c",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:98b3bdefba7af898076d5508b9f98e847b9b0422da3745ad61bb8cb93003ba0c",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "8.4.5",
      "version_original": "8.4.5"
    },
    {
      "_id": "62069ed4cef518ddcd5c6d56",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:c82cda0f42dfe2c1ec1fe2d09dcb5fd3f29e3ecd5f24b231dd4deb6cf8a31385",
      "bundle_path_digest": "sha256:c82cda0f42dfe2c1ec1fe2d09dcb5fd3f29e3ecd5f24b231dd4deb6cf8a31385",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-11T17:37:24.510000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:20:22.265000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "name": "kubeturbo-operator-baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70-annotation"
        },
        {
          "digest": "sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:98b3bdefba7af898076d5508b9f98e847b9b0422da3745ad61bb8cb93003ba0c",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:98b3bdefba7af898076d5508b9f98e847b9b0422da3745ad61bb8cb93003ba0c",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.4.5",
      "version_original": "8.4.5"
    },
    {
      "_id": "620719606825414bf9f398dc",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:6b840a6631b9f345d9a66dc3b57568d2528d08dd78fdd0f5c027bdb49c97a3bd",
      "bundle_path_digest": "sha256:6b840a6631b9f345d9a66dc3b57568d2528d08dd78fdd0f5c027bdb49c97a3bd",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-02-12T02:20:16.445000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.7.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T10:56:59.611000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "name": "openstorage-operator-c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c-annotation"
        },
        {
          "digest": "sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "name": "portworx-operator"
        }
      ],
      "replaces": "",
      "skip_range": "=1.7.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.7.1",
      "version_original": "1.7.1"
    },
    {
      "_id": "6207196077a7e41e46326167",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:6b840a6631b9f345d9a66dc3b57568d2528d08dd78fdd0f5c027bdb49c97a3bd",
      "bundle_path_digest": "sha256:6b840a6631b9f345d9a66dc3b57568d2528d08dd78fdd0f5c027bdb49c97a3bd",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-12T02:20:16.793000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.7.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:57:03.211000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "name": "openstorage-operator-c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c-annotation"
        },
        {
          "digest": "sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "name": "portworx-operator"
        }
      ],
      "replaces": "",
      "skip_range": "=1.7.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.7.1",
      "version_original": "1.7.1"
    },
    {
      "_id": "6207196a77a7e41e46326168",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:6b840a6631b9f345d9a66dc3b57568d2528d08dd78fdd0f5c027bdb49c97a3bd",
      "bundle_path_digest": "sha256:6b840a6631b9f345d9a66dc3b57568d2528d08dd78fdd0f5c027bdb49c97a3bd",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-02-12T02:20:26.503000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.7.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:53:05.490000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "name": "openstorage-operator-c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c-annotation"
        },
        {
          "digest": "sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "name": "portworx-operator"
        }
      ],
      "replaces": "",
      "skip_range": "=1.7.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.7.1",
      "version_original": "1.7.1"
    },
    {
      "_id": "6207196a6825414bf9f398dd",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:6b840a6631b9f345d9a66dc3b57568d2528d08dd78fdd0f5c027bdb49c97a3bd",
      "bundle_path_digest": "sha256:6b840a6631b9f345d9a66dc3b57568d2528d08dd78fdd0f5c027bdb49c97a3bd",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-12T02:20:26.707000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.7.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:53:10.508000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "name": "openstorage-operator-c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c-annotation"
        },
        {
          "digest": "sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "name": "portworx-operator"
        }
      ],
      "replaces": "",
      "skip_range": "=1.7.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.7.1",
      "version_original": "1.7.1"
    },
    {
      "_id": "62071a8b77a7e41e46326169",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:6b840a6631b9f345d9a66dc3b57568d2528d08dd78fdd0f5c027bdb49c97a3bd",
      "bundle_path_digest": "sha256:6b840a6631b9f345d9a66dc3b57568d2528d08dd78fdd0f5c027bdb49c97a3bd",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-02-12T02:25:15.004000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.7.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:13:33.805000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "name": "openstorage-operator-c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c-annotation"
        },
        {
          "digest": "sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "name": "portworx-operator"
        }
      ],
      "replaces": "",
      "skip_range": "=1.7.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.7.1",
      "version_original": "1.7.1"
    },
    {
      "_id": "62071a8b22577e7c9a607f00",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:6b840a6631b9f345d9a66dc3b57568d2528d08dd78fdd0f5c027bdb49c97a3bd",
      "bundle_path_digest": "sha256:6b840a6631b9f345d9a66dc3b57568d2528d08dd78fdd0f5c027bdb49c97a3bd",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-12T02:25:15.485000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.7.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:10:12.132000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "name": "openstorage-operator-c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c-annotation"
        },
        {
          "digest": "sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "name": "portworx-operator"
        }
      ],
      "replaces": "",
      "skip_range": "=1.7.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.7.1",
      "version_original": "1.7.1"
    },
    {
      "_id": "62071ab26825414bf9f398de",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:6b840a6631b9f345d9a66dc3b57568d2528d08dd78fdd0f5c027bdb49c97a3bd",
      "bundle_path_digest": "sha256:6b840a6631b9f345d9a66dc3b57568d2528d08dd78fdd0f5c027bdb49c97a3bd",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-12T02:25:54.867000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.7.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:51:28.639000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "name": "openstorage-operator-c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c-annotation"
        },
        {
          "digest": "sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "name": "portworx-operator"
        }
      ],
      "replaces": "",
      "skip_range": "=1.7.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.7.1",
      "version_original": "1.7.1"
    },
    {
      "_id": "62071ab3cef518ddcd5c6d6f",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:6b840a6631b9f345d9a66dc3b57568d2528d08dd78fdd0f5c027bdb49c97a3bd",
      "bundle_path_digest": "sha256:6b840a6631b9f345d9a66dc3b57568d2528d08dd78fdd0f5c027bdb49c97a3bd",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-02-12T02:25:55.243000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.7.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:49:51.665000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "name": "openstorage-operator-c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c-annotation"
        },
        {
          "digest": "sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "name": "portworx-operator"
        }
      ],
      "replaces": "",
      "skip_range": "=1.7.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.7.1",
      "version_original": "1.7.1"
    },
    {
      "_id": "62072030cef518ddcd5c6d70",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:6b840a6631b9f345d9a66dc3b57568d2528d08dd78fdd0f5c027bdb49c97a3bd",
      "bundle_path_digest": "sha256:6b840a6631b9f345d9a66dc3b57568d2528d08dd78fdd0f5c027bdb49c97a3bd",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-12T02:49:20.730000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.7.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:51:52.089000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "name": "openstorage-operator-c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c-annotation"
        },
        {
          "digest": "sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "name": "portworx-operator"
        }
      ],
      "replaces": "",
      "skip_range": "=1.7.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.7.1",
      "version_original": "1.7.1"
    },
    {
      "_id": "620720306825414bf9f398df",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:6b840a6631b9f345d9a66dc3b57568d2528d08dd78fdd0f5c027bdb49c97a3bd",
      "bundle_path_digest": "sha256:6b840a6631b9f345d9a66dc3b57568d2528d08dd78fdd0f5c027bdb49c97a3bd",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-02-12T02:49:20.941000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.7.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:36:16.344000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "name": "openstorage-operator-c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c-annotation"
        },
        {
          "digest": "sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:c4ba573632798d9d78b069a0e396e434e5209abaa4ad82be106c12ad91bb162c",
          "name": "portworx-operator"
        }
      ],
      "replaces": "",
      "skip_range": "=1.7.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.7.1",
      "version_original": "1.7.1"
    },
    {
      "_id": "620d6d4a4719c2587a4c0104",
      "alm_examples": [
        {
          "kind": "AstraControlCenter",
          "metadata": {
            "name": "astra"
          },
          "spec": {
            "accountName": "Example",
            "additionalValues": {},
            "astraAddress": "astra.example.com",
            "astraResourcesScaler": "Default",
            "astraVersion": "21.12.60",
            "autoSupport": {
              "enrolled": true
            },
            "crds": {
              "externalCertManager": false,
              "externalTraefik": false
            },
            "email": "admin@example.com",
            "firstName": "",
            "imageRegistry": {
              "name": "example.registry/astra",
              "secret": ""
            },
            "lastName": "",
            "storageClass": "",
            "volumeReclaimPolicy": "Retain"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/netapp/acc-operator-bundle@sha256:003b4f64fc3a72d9c90a9544b86130455883770cc77efecb8e244d3ed77d6e64",
      "bundle_path_digest": "sha256:003b4f64fc3a72d9c90a9544b86130455883770cc77efecb8e244d3ed77d6e64",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-16T21:31:54.267000+00:00",
      "csv_description": "Astra Control is an application-aware data management solution that manages, protects and moves data-rich Kubernetes workloads in both public clouds and on-premises.\n\nAstra Control enables data protection, disaster recovery, and migration for your Kubernetes workloads, leveraging NetApp's industry-leading data management technology\nfor snapshots, backups, replication and cloning.\n\n### How to deploy Astra Control\n\nRefer to [Installation Procedure](https://docs.netapp.com/us-en/astra-control-center/get-started/acc_operatorhub_install.html) to deploy Astra Control Center using\nthe Operator.\n\n### Documentation\n\nRefer to [Astra Control Center Documentation](https://docs.netapp.com/us-en/astra-control-center/index.html) to complete the setup and start managing applications.\n",
      "csv_display_name": "netapp-acc-operator",
      "csv_metadata_description": "Install, configure and monitor Astra Control Center",
      "csv_name": "acc-operator.v21.12.63-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:18:12.230000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "acc-operator",
      "provided_apis": [
        {
          "group": "astra.netapp.io",
          "kind": "AstraControlCenter",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:d367e9183bf6c7710d46a9d56e7293592191d2e32de54e2af494b4ac74855139",
          "image": "registry.connect.redhat.com/netapp/acc-operator-21-12-59@sha256:d367e9183bf6c7710d46a9d56e7293592191d2e32de54e2af494b4ac74855139",
          "name": "acc-operator"
        },
        {
          "digest": "sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d367e9183bf6c7710d46a9d56e7293592191d2e32de54e2af494b4ac74855139",
          "image": "registry.connect.redhat.com/netapp/acc-operator-21-12-59@sha256:d367e9183bf6c7710d46a9d56e7293592191d2e32de54e2af494b4ac74855139",
          "name": "manager"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "21.12.63-1",
      "version_original": "21.12.63-1"
    },
    {
      "_id": "620d6d69fd27acfd9e3f367c",
      "alm_examples": [
        {
          "kind": "AstraControlCenter",
          "metadata": {
            "name": "astra"
          },
          "spec": {
            "accountName": "Example",
            "additionalValues": {},
            "astraAddress": "astra.example.com",
            "astraResourcesScaler": "Default",
            "astraVersion": "21.12.60",
            "autoSupport": {
              "enrolled": true
            },
            "crds": {
              "externalCertManager": false,
              "externalTraefik": false
            },
            "email": "admin@example.com",
            "firstName": "",
            "imageRegistry": {
              "name": "example.registry/astra",
              "secret": ""
            },
            "lastName": "",
            "storageClass": "",
            "volumeReclaimPolicy": "Retain"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/netapp/acc-operator-bundle@sha256:003b4f64fc3a72d9c90a9544b86130455883770cc77efecb8e244d3ed77d6e64",
      "bundle_path_digest": "sha256:003b4f64fc3a72d9c90a9544b86130455883770cc77efecb8e244d3ed77d6e64",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-16T21:32:25.484000+00:00",
      "csv_description": "Astra Control is an application-aware data management solution that manages, protects and moves data-rich Kubernetes workloads in both public clouds and on-premises.\n\nAstra Control enables data protection, disaster recovery, and migration for your Kubernetes workloads, leveraging NetApp's industry-leading data management technology\nfor snapshots, backups, replication and cloning.\n\n### How to deploy Astra Control\n\nRefer to [Installation Procedure](https://docs.netapp.com/us-en/astra-control-center/get-started/acc_operatorhub_install.html) to deploy Astra Control Center using\nthe Operator.\n\n### Documentation\n\nRefer to [Astra Control Center Documentation](https://docs.netapp.com/us-en/astra-control-center/index.html) to complete the setup and start managing applications.\n",
      "csv_display_name": "netapp-acc-operator",
      "csv_metadata_description": "Install, configure and monitor Astra Control Center",
      "csv_name": "acc-operator.v21.12.63-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:22:06.051000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "acc-operator",
      "provided_apis": [
        {
          "group": "astra.netapp.io",
          "kind": "AstraControlCenter",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:d367e9183bf6c7710d46a9d56e7293592191d2e32de54e2af494b4ac74855139",
          "image": "registry.connect.redhat.com/netapp/acc-operator-21-12-59@sha256:d367e9183bf6c7710d46a9d56e7293592191d2e32de54e2af494b4ac74855139",
          "name": "acc-operator"
        },
        {
          "digest": "sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d367e9183bf6c7710d46a9d56e7293592191d2e32de54e2af494b4ac74855139",
          "image": "registry.connect.redhat.com/netapp/acc-operator-21-12-59@sha256:d367e9183bf6c7710d46a9d56e7293592191d2e32de54e2af494b4ac74855139",
          "name": "manager"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "21.12.63-1",
      "version_original": "21.12.63-1"
    },
    {
      "_id": "620d6f69fd27acfd9e3f367d",
      "alm_examples": [
        {
          "kind": "AstraControlCenter",
          "metadata": {
            "name": "astra"
          },
          "spec": {
            "accountName": "Example",
            "additionalValues": {},
            "astraAddress": "astra.example.com",
            "astraResourcesScaler": "Default",
            "astraVersion": "21.12.60",
            "autoSupport": {
              "enrolled": true
            },
            "crds": {
              "externalCertManager": false,
              "externalTraefik": false
            },
            "email": "admin@example.com",
            "firstName": "",
            "imageRegistry": {
              "name": "example.registry/astra",
              "secret": ""
            },
            "lastName": "",
            "storageClass": "",
            "volumeReclaimPolicy": "Retain"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/netapp/acc-operator-bundle@sha256:003b4f64fc3a72d9c90a9544b86130455883770cc77efecb8e244d3ed77d6e64",
      "bundle_path_digest": "sha256:003b4f64fc3a72d9c90a9544b86130455883770cc77efecb8e244d3ed77d6e64",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-16T21:40:57.287000+00:00",
      "csv_description": "Astra Control is an application-aware data management solution that manages, protects and moves data-rich Kubernetes workloads in both public clouds and on-premises.\n\nAstra Control enables data protection, disaster recovery, and migration for your Kubernetes workloads, leveraging NetApp's industry-leading data management technology\nfor snapshots, backups, replication and cloning.\n\n### How to deploy Astra Control\n\nRefer to [Installation Procedure](https://docs.netapp.com/us-en/astra-control-center/get-started/acc_operatorhub_install.html) to deploy Astra Control Center using\nthe Operator.\n\n### Documentation\n\nRefer to [Astra Control Center Documentation](https://docs.netapp.com/us-en/astra-control-center/index.html) to complete the setup and start managing applications.\n",
      "csv_display_name": "netapp-acc-operator",
      "csv_metadata_description": "Install, configure and monitor Astra Control Center",
      "csv_name": "acc-operator.v21.12.63-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T15:07:26.253000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "acc-operator",
      "provided_apis": [
        {
          "group": "astra.netapp.io",
          "kind": "AstraControlCenter",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:d367e9183bf6c7710d46a9d56e7293592191d2e32de54e2af494b4ac74855139",
          "image": "registry.connect.redhat.com/netapp/acc-operator-21-12-59@sha256:d367e9183bf6c7710d46a9d56e7293592191d2e32de54e2af494b4ac74855139",
          "name": "acc-operator"
        },
        {
          "digest": "sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d367e9183bf6c7710d46a9d56e7293592191d2e32de54e2af494b4ac74855139",
          "image": "registry.connect.redhat.com/netapp/acc-operator-21-12-59@sha256:d367e9183bf6c7710d46a9d56e7293592191d2e32de54e2af494b4ac74855139",
          "name": "manager"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "21.12.63-1",
      "version_original": "21.12.63-1"
    },
    {
      "_id": "620f5de52b44b7f41c07d9c1",
      "alm_examples": [
        {
          "api_version": "vdo.vmware.com/v1alpha1",
          "kind": "VDOConfig",
          "metadata": {
            "name": "vdoconfig-sample",
            "namespace": "vmware-system-vdo"
          },
          "spec": {
            "cloudProvider": {
              "vsphereCloudConfig": "vspherecloudconfig-sample"
            }
          }
        },
        {
          "api_version": "vdo.vmware.com/v1alpha1",
          "kind": "VsphereCloudConfig",
          "metadata": {
            "name": "vspherecloudconfig-sample",
            "namespace": "vmware-system-vdo"
          },
          "spec": {
            "credentials": "10.186.1.25-creds",
            "datacenters": [],
            "insecure": true,
            "vcIp": "10.186.1.25"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/61725cc480cc9b10e9278631/vsphere-kubernetes-drivers-operator@sha256:75545d5d800b8cb0f29480dd92e5af2acff49fa77fa190888ff2339e3be0cba8",
      "bundle_path_digest": "sha256:75545d5d800b8cb0f29480dd92e5af2acff49fa77fa190888ff2339e3be0cba8",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-18T08:50:45.934000+00:00",
      "csv_description": "Vsphere Kubernetes Drivers Operator helps to install/manage vsphere drivers required to run kubernetes workload on vSphere.",
      "csv_display_name": "vsphere-kubernetes-drivers-operator",
      "csv_metadata_description": "Kubernetes operator to manage lifecycle of vSphere CSI/CPI drivers.",
      "csv_name": "vsphere-kubernetes-drivers-operator.v0.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:00:00.245000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "vsphere-kubernetes-drivers-operator",
      "provided_apis": [
        {
          "group": "vdo.vmware.com",
          "kind": "VDOConfig",
          "version": "v1alpha1"
        },
        {
          "group": "vdo.vmware.com",
          "kind": "VsphereCloudConfig",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:d89d95ff753569a866af9c7f4d8f1029dd3d5bdb88af0fb1ee2a8e324020a383",
          "image": "projects.registry.vmware.com/vsphere_kubernetes_driver_operator/vdo@sha256:d89d95ff753569a866af9c7f4d8f1029dd3d5bdb88af0fb1ee2a8e324020a383",
          "name": "vdo-d89d95ff753569a866af9c7f4d8f1029dd3d5bdb88af0fb1ee2a8e324020a383-annotation"
        },
        {
          "digest": "sha256:c517c5e91c22279414fc56c777e44641602f01440938cca0bee02a6929fe558e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c517c5e91c22279414fc56c777e44641602f01440938cca0bee02a6929fe558e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d89d95ff753569a866af9c7f4d8f1029dd3d5bdb88af0fb1ee2a8e324020a383",
          "image": "projects.registry.vmware.com/vsphere_kubernetes_driver_operator/vdo@sha256:d89d95ff753569a866af9c7f4d8f1029dd3d5bdb88af0fb1ee2a8e324020a383",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.2.0",
      "version_original": "0.2.0"
    },
    {
      "_id": "620f5e0a26cbadec21c49059",
      "alm_examples": [
        {
          "api_version": "vdo.vmware.com/v1alpha1",
          "kind": "VDOConfig",
          "metadata": {
            "name": "vdoconfig-sample",
            "namespace": "vmware-system-vdo"
          },
          "spec": {
            "cloudProvider": {
              "vsphereCloudConfig": "vspherecloudconfig-sample"
            }
          }
        },
        {
          "api_version": "vdo.vmware.com/v1alpha1",
          "kind": "VsphereCloudConfig",
          "metadata": {
            "name": "vspherecloudconfig-sample",
            "namespace": "vmware-system-vdo"
          },
          "spec": {
            "credentials": "10.186.1.25-creds",
            "datacenters": [],
            "insecure": true,
            "vcIp": "10.186.1.25"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/61725cc480cc9b10e9278631/vsphere-kubernetes-drivers-operator@sha256:75545d5d800b8cb0f29480dd92e5af2acff49fa77fa190888ff2339e3be0cba8",
      "bundle_path_digest": "sha256:75545d5d800b8cb0f29480dd92e5af2acff49fa77fa190888ff2339e3be0cba8",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-18T08:51:22.662000+00:00",
      "csv_description": "Vsphere Kubernetes Drivers Operator helps to install/manage vsphere drivers required to run kubernetes workload on vSphere.",
      "csv_display_name": "vsphere-kubernetes-drivers-operator",
      "csv_metadata_description": "Kubernetes operator to manage lifecycle of vSphere CSI/CPI drivers.",
      "csv_name": "vsphere-kubernetes-drivers-operator.v0.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:49:05.169000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "vsphere-kubernetes-drivers-operator",
      "provided_apis": [
        {
          "group": "vdo.vmware.com",
          "kind": "VDOConfig",
          "version": "v1alpha1"
        },
        {
          "group": "vdo.vmware.com",
          "kind": "VsphereCloudConfig",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:d89d95ff753569a866af9c7f4d8f1029dd3d5bdb88af0fb1ee2a8e324020a383",
          "image": "projects.registry.vmware.com/vsphere_kubernetes_driver_operator/vdo@sha256:d89d95ff753569a866af9c7f4d8f1029dd3d5bdb88af0fb1ee2a8e324020a383",
          "name": "vdo-d89d95ff753569a866af9c7f4d8f1029dd3d5bdb88af0fb1ee2a8e324020a383-annotation"
        },
        {
          "digest": "sha256:c517c5e91c22279414fc56c777e44641602f01440938cca0bee02a6929fe558e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c517c5e91c22279414fc56c777e44641602f01440938cca0bee02a6929fe558e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d89d95ff753569a866af9c7f4d8f1029dd3d5bdb88af0fb1ee2a8e324020a383",
          "image": "projects.registry.vmware.com/vsphere_kubernetes_driver_operator/vdo@sha256:d89d95ff753569a866af9c7f4d8f1029dd3d5bdb88af0fb1ee2a8e324020a383",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.2.0",
      "version_original": "0.2.0"
    },
    {
      "_id": "620f5f4126cbadec21c4905a",
      "alm_examples": [
        {
          "api_version": "vdo.vmware.com/v1alpha1",
          "kind": "VDOConfig",
          "metadata": {
            "name": "vdoconfig-sample",
            "namespace": "vmware-system-vdo"
          },
          "spec": {
            "cloudProvider": {
              "vsphereCloudConfig": "vspherecloudconfig-sample"
            }
          }
        },
        {
          "api_version": "vdo.vmware.com/v1alpha1",
          "kind": "VsphereCloudConfig",
          "metadata": {
            "name": "vspherecloudconfig-sample",
            "namespace": "vmware-system-vdo"
          },
          "spec": {
            "credentials": "10.186.1.25-creds",
            "datacenters": [],
            "insecure": true,
            "vcIp": "10.186.1.25"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/61725cc480cc9b10e9278631/vsphere-kubernetes-drivers-operator@sha256:75545d5d800b8cb0f29480dd92e5af2acff49fa77fa190888ff2339e3be0cba8",
      "bundle_path_digest": "sha256:75545d5d800b8cb0f29480dd92e5af2acff49fa77fa190888ff2339e3be0cba8",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-18T08:56:33.564000+00:00",
      "csv_description": "Vsphere Kubernetes Drivers Operator helps to install/manage vsphere drivers required to run kubernetes workload on vSphere.",
      "csv_display_name": "vsphere-kubernetes-drivers-operator",
      "csv_metadata_description": "Kubernetes operator to manage lifecycle of vSphere CSI/CPI drivers.",
      "csv_name": "vsphere-kubernetes-drivers-operator.v0.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:39:47.981000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "vsphere-kubernetes-drivers-operator",
      "provided_apis": [
        {
          "group": "vdo.vmware.com",
          "kind": "VsphereCloudConfig",
          "version": "v1alpha1"
        },
        {
          "group": "vdo.vmware.com",
          "kind": "VDOConfig",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:d89d95ff753569a866af9c7f4d8f1029dd3d5bdb88af0fb1ee2a8e324020a383",
          "image": "projects.registry.vmware.com/vsphere_kubernetes_driver_operator/vdo@sha256:d89d95ff753569a866af9c7f4d8f1029dd3d5bdb88af0fb1ee2a8e324020a383",
          "name": "vdo-d89d95ff753569a866af9c7f4d8f1029dd3d5bdb88af0fb1ee2a8e324020a383-annotation"
        },
        {
          "digest": "sha256:c517c5e91c22279414fc56c777e44641602f01440938cca0bee02a6929fe558e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c517c5e91c22279414fc56c777e44641602f01440938cca0bee02a6929fe558e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d89d95ff753569a866af9c7f4d8f1029dd3d5bdb88af0fb1ee2a8e324020a383",
          "image": "projects.registry.vmware.com/vsphere_kubernetes_driver_operator/vdo@sha256:d89d95ff753569a866af9c7f4d8f1029dd3d5bdb88af0fb1ee2a8e324020a383",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.2.0",
      "version_original": "0.2.0"
    },
    {
      "_id": "620f5fde42b7ef6b661475b8",
      "alm_examples": [
        {
          "api_version": "vdo.vmware.com/v1alpha1",
          "kind": "VDOConfig",
          "metadata": {
            "name": "vdoconfig-sample",
            "namespace": "vmware-system-vdo"
          },
          "spec": {
            "cloudProvider": {
              "vsphereCloudConfig": "vspherecloudconfig-sample"
            }
          }
        },
        {
          "api_version": "vdo.vmware.com/v1alpha1",
          "kind": "VsphereCloudConfig",
          "metadata": {
            "name": "vspherecloudconfig-sample",
            "namespace": "vmware-system-vdo"
          },
          "spec": {
            "credentials": "10.186.1.25-creds",
            "datacenters": [],
            "insecure": true,
            "vcIp": "10.186.1.25"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/61725cc480cc9b10e9278631/vsphere-kubernetes-drivers-operator@sha256:75545d5d800b8cb0f29480dd92e5af2acff49fa77fa190888ff2339e3be0cba8",
      "bundle_path_digest": "sha256:75545d5d800b8cb0f29480dd92e5af2acff49fa77fa190888ff2339e3be0cba8",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-18T08:59:10.432000+00:00",
      "csv_description": "Vsphere Kubernetes Drivers Operator helps to install/manage vsphere drivers required to run kubernetes workload on vSphere.",
      "csv_display_name": "vsphere-kubernetes-drivers-operator",
      "csv_metadata_description": "Kubernetes operator to manage lifecycle of vSphere CSI/CPI drivers.",
      "csv_name": "vsphere-kubernetes-drivers-operator.v0.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:38:08.042000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "vsphere-kubernetes-drivers-operator",
      "provided_apis": [
        {
          "group": "vdo.vmware.com",
          "kind": "VDOConfig",
          "version": "v1alpha1"
        },
        {
          "group": "vdo.vmware.com",
          "kind": "VsphereCloudConfig",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:d89d95ff753569a866af9c7f4d8f1029dd3d5bdb88af0fb1ee2a8e324020a383",
          "image": "projects.registry.vmware.com/vsphere_kubernetes_driver_operator/vdo@sha256:d89d95ff753569a866af9c7f4d8f1029dd3d5bdb88af0fb1ee2a8e324020a383",
          "name": "vdo-d89d95ff753569a866af9c7f4d8f1029dd3d5bdb88af0fb1ee2a8e324020a383-annotation"
        },
        {
          "digest": "sha256:c517c5e91c22279414fc56c777e44641602f01440938cca0bee02a6929fe558e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c517c5e91c22279414fc56c777e44641602f01440938cca0bee02a6929fe558e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d89d95ff753569a866af9c7f4d8f1029dd3d5bdb88af0fb1ee2a8e324020a383",
          "image": "projects.registry.vmware.com/vsphere_kubernetes_driver_operator/vdo@sha256:d89d95ff753569a866af9c7f4d8f1029dd3d5bdb88af0fb1ee2a8e324020a383",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.2.0",
      "version_original": "0.2.0"
    },
    {
      "_id": "621820ae1a79457bc0d50bc2",
      "alm_examples": [
        {
          "api_version": "ako.vmware.com/v1alpha1",
          "kind": "AKOConfig",
          "metadata": {
            "name": "ako-sample",
            "namespace": "avi-system"
          },
          "spec": {
            "akoSettings": {
              "apiServerPort": 8080,
              "clusterName": "my-cluster",
              "cniPlugin": "openshift",
              "deleteConfig": false,
              "disableStaticRouteSync": false,
              "enableEVH": false,
              "enableEvents": "true",
              "fullSyncFrequency": "1800",
              "layer7Only": false,
              "logLevel": "INFO",
              "namespaceSelector": {
                "labelKey": "",
                "labelValue": ""
              },
              "servicesAPI": false,
              "vipPerNamespace": "false"
            },
            "controllerSettings": {
              "cloudName": "Default-Cloud",
              "controllerHost": "",
              "controllerVersion": "20.1.5",
              "serviceEngineGroupName": "Default-Group",
              "tenantName": "admin",
              "tenantsPerCluster": "false"
            },
            "imagePullPolicy": "IfNotPresent",
            "imageRepository": "projects.registry.vmware.com/ako/ako-operator@sha256:ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d",
            "l4Settings": {
              "advancedL4": false,
              "autoFQDN": "default",
              "defaultDomain": ""
            },
            "l7Settings": {
              "defaultIngController": true,
              "noPGForSNI": false,
              "passthroughShardSize": "SMALL",
              "serviceType": "ClusterIP",
              "shardVSSize": "LARGE"
            },
            "logFile": "avi.log",
            "mountPath": "/log",
            "networkSettings": {
              "bgpPeerLabels": [],
              "enableRHI": false,
              "nodeNetworkList": [
                {
                  "cidrs": [],
                  "networkName": ""
                }
              ],
              "nsxtT1LR": "",
              "vipNetworkList": [
                {
                  "cidr": "",
                  "networkName": ""
                }
              ]
            },
            "nodePortSelector": {
              "key": "",
              "value": ""
            },
            "resources": {
              "limits": {
                "cpu": "250m",
                "memory": "300Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "200Mi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/wavefronthq/ako-operator-bundle@sha256:3acb960334e73a628ce3887def93927b2bfad252d07eb83cf70e1e81b4674108",
      "bundle_path_digest": "sha256:3acb960334e73a628ce3887def93927b2bfad252d07eb83cf70e1e81b4674108",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-02-25T00:19:58.267000+00:00",
      "csv_description": "Operator to manage the artifacts of the AKO Controller",
      "csv_display_name": "AKO Operator",
      "csv_metadata_description": "",
      "csv_name": "ako-operator.v1.6.2-beta",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T10:51:10.839000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "ako-operator",
      "provided_apis": [
        {
          "group": "ako.vmware.com",
          "kind": "AKOConfig",
          "plural": "akoconfigs",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d",
          "image": "projects.registry.vmware.com/ako/ako-operator@sha256:ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d",
          "name": "ako-operator"
        },
        {
          "digest": "sha256:ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d",
          "image": "projects.registry.vmware.com/ako/ako-operator@sha256:ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d",
          "name": "ako-operator-ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.6.2-beta",
      "version_original": "1.6.2-beta"
    },
    {
      "_id": "621820af1a79457bc0d50bc3",
      "alm_examples": [
        {
          "api_version": "ako.vmware.com/v1alpha1",
          "kind": "AKOConfig",
          "metadata": {
            "name": "ako-sample",
            "namespace": "avi-system"
          },
          "spec": {
            "akoSettings": {
              "apiServerPort": 8080,
              "clusterName": "my-cluster",
              "cniPlugin": "openshift",
              "deleteConfig": false,
              "disableStaticRouteSync": false,
              "enableEVH": false,
              "enableEvents": "true",
              "fullSyncFrequency": "1800",
              "layer7Only": false,
              "logLevel": "INFO",
              "namespaceSelector": {
                "labelKey": "",
                "labelValue": ""
              },
              "servicesAPI": false,
              "vipPerNamespace": "false"
            },
            "controllerSettings": {
              "cloudName": "Default-Cloud",
              "controllerHost": "",
              "controllerVersion": "20.1.5",
              "serviceEngineGroupName": "Default-Group",
              "tenantName": "admin",
              "tenantsPerCluster": "false"
            },
            "imagePullPolicy": "IfNotPresent",
            "imageRepository": "projects.registry.vmware.com/ako/ako-operator@sha256:ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d",
            "l4Settings": {
              "advancedL4": false,
              "autoFQDN": "default",
              "defaultDomain": ""
            },
            "l7Settings": {
              "defaultIngController": true,
              "noPGForSNI": false,
              "passthroughShardSize": "SMALL",
              "serviceType": "ClusterIP",
              "shardVSSize": "LARGE"
            },
            "logFile": "avi.log",
            "mountPath": "/log",
            "networkSettings": {
              "bgpPeerLabels": [],
              "enableRHI": false,
              "nodeNetworkList": [
                {
                  "cidrs": [],
                  "networkName": ""
                }
              ],
              "nsxtT1LR": "",
              "vipNetworkList": [
                {
                  "cidr": "",
                  "networkName": ""
                }
              ]
            },
            "nodePortSelector": {
              "key": "",
              "value": ""
            },
            "resources": {
              "limits": {
                "cpu": "250m",
                "memory": "300Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "200Mi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/wavefronthq/ako-operator-bundle@sha256:3acb960334e73a628ce3887def93927b2bfad252d07eb83cf70e1e81b4674108",
      "bundle_path_digest": "sha256:3acb960334e73a628ce3887def93927b2bfad252d07eb83cf70e1e81b4674108",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-02-25T00:19:59.163000+00:00",
      "csv_description": "Operator to manage the artifacts of the AKO Controller",
      "csv_display_name": "AKO Operator",
      "csv_metadata_description": "",
      "csv_name": "ako-operator.v1.6.2-beta",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:42:15.098000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "ako-operator",
      "provided_apis": [
        {
          "group": "ako.vmware.com",
          "kind": "AKOConfig",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d",
          "image": "projects.registry.vmware.com/ako/ako-operator@sha256:ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d",
          "name": "ako-operator"
        },
        {
          "digest": "sha256:ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d",
          "image": "projects.registry.vmware.com/ako/ako-operator@sha256:ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d",
          "name": "ako-operator-ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.6.2-beta",
      "version_original": "1.6.2-beta"
    },
    {
      "_id": "6218222f9206cd6accd1542d",
      "alm_examples": [
        {
          "api_version": "ako.vmware.com/v1alpha1",
          "kind": "AKOConfig",
          "metadata": {
            "name": "ako-sample",
            "namespace": "avi-system"
          },
          "spec": {
            "akoSettings": {
              "apiServerPort": 8080,
              "clusterName": "my-cluster",
              "cniPlugin": "openshift",
              "deleteConfig": false,
              "disableStaticRouteSync": false,
              "enableEVH": false,
              "enableEvents": "true",
              "fullSyncFrequency": "1800",
              "layer7Only": false,
              "logLevel": "INFO",
              "namespaceSelector": {
                "labelKey": "",
                "labelValue": ""
              },
              "servicesAPI": false,
              "vipPerNamespace": "false"
            },
            "controllerSettings": {
              "cloudName": "Default-Cloud",
              "controllerHost": "",
              "controllerVersion": "20.1.5",
              "serviceEngineGroupName": "Default-Group",
              "tenantName": "admin",
              "tenantsPerCluster": "false"
            },
            "imagePullPolicy": "IfNotPresent",
            "imageRepository": "projects.registry.vmware.com/ako/ako-operator@sha256:ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d",
            "l4Settings": {
              "advancedL4": false,
              "autoFQDN": "default",
              "defaultDomain": ""
            },
            "l7Settings": {
              "defaultIngController": true,
              "noPGForSNI": false,
              "passthroughShardSize": "SMALL",
              "serviceType": "ClusterIP",
              "shardVSSize": "LARGE"
            },
            "logFile": "avi.log",
            "mountPath": "/log",
            "networkSettings": {
              "bgpPeerLabels": [],
              "enableRHI": false,
              "nodeNetworkList": [
                {
                  "cidrs": [],
                  "networkName": ""
                }
              ],
              "nsxtT1LR": "",
              "vipNetworkList": [
                {
                  "cidr": "",
                  "networkName": ""
                }
              ]
            },
            "nodePortSelector": {
              "key": "",
              "value": ""
            },
            "resources": {
              "limits": {
                "cpu": "250m",
                "memory": "300Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "200Mi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/wavefronthq/ako-operator-bundle@sha256:3acb960334e73a628ce3887def93927b2bfad252d07eb83cf70e1e81b4674108",
      "bundle_path_digest": "sha256:3acb960334e73a628ce3887def93927b2bfad252d07eb83cf70e1e81b4674108",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-02-25T00:26:23.334000+00:00",
      "csv_description": "Operator to manage the artifacts of the AKO Controller",
      "csv_display_name": "AKO Operator",
      "csv_metadata_description": "",
      "csv_name": "ako-operator.v1.6.2-beta",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:35:43.089000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "ako-operator",
      "provided_apis": [
        {
          "group": "ako.vmware.com",
          "kind": "AKOConfig",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d",
          "image": "projects.registry.vmware.com/ako/ako-operator@sha256:ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d",
          "name": "ako-operator"
        },
        {
          "digest": "sha256:ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d",
          "image": "projects.registry.vmware.com/ako/ako-operator@sha256:ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d",
          "name": "ako-operator-ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.6.2-beta",
      "version_original": "1.6.2-beta"
    },
    {
      "_id": "621822a65c46c6464085f703",
      "alm_examples": [
        {
          "api_version": "ako.vmware.com/v1alpha1",
          "kind": "AKOConfig",
          "metadata": {
            "name": "ako-sample",
            "namespace": "avi-system"
          },
          "spec": {
            "akoSettings": {
              "apiServerPort": 8080,
              "clusterName": "my-cluster",
              "cniPlugin": "openshift",
              "deleteConfig": false,
              "disableStaticRouteSync": false,
              "enableEVH": false,
              "enableEvents": "true",
              "fullSyncFrequency": "1800",
              "layer7Only": false,
              "logLevel": "INFO",
              "namespaceSelector": {
                "labelKey": "",
                "labelValue": ""
              },
              "servicesAPI": false,
              "vipPerNamespace": "false"
            },
            "controllerSettings": {
              "cloudName": "Default-Cloud",
              "controllerHost": "",
              "controllerVersion": "20.1.5",
              "serviceEngineGroupName": "Default-Group",
              "tenantName": "admin",
              "tenantsPerCluster": "false"
            },
            "imagePullPolicy": "IfNotPresent",
            "imageRepository": "projects.registry.vmware.com/ako/ako-operator@sha256:ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d",
            "l4Settings": {
              "advancedL4": false,
              "autoFQDN": "default",
              "defaultDomain": ""
            },
            "l7Settings": {
              "defaultIngController": true,
              "noPGForSNI": false,
              "passthroughShardSize": "SMALL",
              "serviceType": "ClusterIP",
              "shardVSSize": "LARGE"
            },
            "logFile": "avi.log",
            "mountPath": "/log",
            "networkSettings": {
              "bgpPeerLabels": [],
              "enableRHI": false,
              "nodeNetworkList": [
                {
                  "cidrs": [],
                  "networkName": ""
                }
              ],
              "nsxtT1LR": "",
              "vipNetworkList": [
                {
                  "cidr": "",
                  "networkName": ""
                }
              ]
            },
            "nodePortSelector": {
              "key": "",
              "value": ""
            },
            "resources": {
              "limits": {
                "cpu": "250m",
                "memory": "300Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "200Mi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/wavefronthq/ako-operator-bundle@sha256:3acb960334e73a628ce3887def93927b2bfad252d07eb83cf70e1e81b4674108",
      "bundle_path_digest": "sha256:3acb960334e73a628ce3887def93927b2bfad252d07eb83cf70e1e81b4674108",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-02-25T00:28:22.250000+00:00",
      "csv_description": "Operator to manage the artifacts of the AKO Controller",
      "csv_display_name": "AKO Operator",
      "csv_metadata_description": "",
      "csv_name": "ako-operator.v1.6.2-beta",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:57:53.484000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "ako-operator",
      "provided_apis": [
        {
          "group": "ako.vmware.com",
          "kind": "AKOConfig",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d",
          "image": "projects.registry.vmware.com/ako/ako-operator@sha256:ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d",
          "name": "ako-operator"
        },
        {
          "digest": "sha256:ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d",
          "image": "projects.registry.vmware.com/ako/ako-operator@sha256:ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d",
          "name": "ako-operator-ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.6.2-beta",
      "version_original": "1.6.2-beta"
    },
    {
      "_id": "621823335c46c6464085f705",
      "alm_examples": [
        {
          "api_version": "ako.vmware.com/v1alpha1",
          "kind": "AKOConfig",
          "metadata": {
            "name": "ako-sample",
            "namespace": "avi-system"
          },
          "spec": {
            "akoSettings": {
              "apiServerPort": 8080,
              "clusterName": "my-cluster",
              "cniPlugin": "openshift",
              "deleteConfig": false,
              "disableStaticRouteSync": false,
              "enableEVH": false,
              "enableEvents": "true",
              "fullSyncFrequency": "1800",
              "layer7Only": false,
              "logLevel": "INFO",
              "namespaceSelector": {
                "labelKey": "",
                "labelValue": ""
              },
              "servicesAPI": false,
              "vipPerNamespace": "false"
            },
            "controllerSettings": {
              "cloudName": "Default-Cloud",
              "controllerHost": "",
              "controllerVersion": "20.1.5",
              "serviceEngineGroupName": "Default-Group",
              "tenantName": "admin",
              "tenantsPerCluster": "false"
            },
            "imagePullPolicy": "IfNotPresent",
            "imageRepository": "projects.registry.vmware.com/ako/ako-operator@sha256:ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d",
            "l4Settings": {
              "advancedL4": false,
              "autoFQDN": "default",
              "defaultDomain": ""
            },
            "l7Settings": {
              "defaultIngController": true,
              "noPGForSNI": false,
              "passthroughShardSize": "SMALL",
              "serviceType": "ClusterIP",
              "shardVSSize": "LARGE"
            },
            "logFile": "avi.log",
            "mountPath": "/log",
            "networkSettings": {
              "bgpPeerLabels": [],
              "enableRHI": false,
              "nodeNetworkList": [
                {
                  "cidrs": [],
                  "networkName": ""
                }
              ],
              "nsxtT1LR": "",
              "vipNetworkList": [
                {
                  "cidr": "",
                  "networkName": ""
                }
              ]
            },
            "nodePortSelector": {
              "key": "",
              "value": ""
            },
            "resources": {
              "limits": {
                "cpu": "250m",
                "memory": "300Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "200Mi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/wavefronthq/ako-operator-bundle@sha256:3acb960334e73a628ce3887def93927b2bfad252d07eb83cf70e1e81b4674108",
      "bundle_path_digest": "sha256:3acb960334e73a628ce3887def93927b2bfad252d07eb83cf70e1e81b4674108",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-02-25T00:30:43.783000+00:00",
      "csv_description": "Operator to manage the artifacts of the AKO Controller",
      "csv_display_name": "AKO Operator",
      "csv_metadata_description": "",
      "csv_name": "ako-operator.v1.6.2-beta",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:51:32.879000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "ako-operator",
      "provided_apis": [
        {
          "group": "ako.vmware.com",
          "kind": "AKOConfig",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d",
          "image": "projects.registry.vmware.com/ako/ako-operator@sha256:ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d",
          "name": "ako-operator"
        },
        {
          "digest": "sha256:ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d",
          "image": "projects.registry.vmware.com/ako/ako-operator@sha256:ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d",
          "name": "ako-operator-ae215384004f6e13f0bfe184820a329400c49ef158d13ca6b308784c2589985d-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.6.2-beta",
      "version_original": "1.6.2-beta"
    },
    {
      "_id": "62182bc65c46c6464085f70b",
      "alm_examples": [
        {
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.4.6"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:587a84dabb3a049fc9a377c8e8e9d9d70776c1d6346c05109da2f497bdd9f030",
      "bundle_path_digest": "sha256:587a84dabb3a049fc9a377c8e8e9d9d70776c1d6346c05109da2f497bdd9f030",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-25T01:07:18.483000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:17:58.184000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:9563550ed081bf1917cd4a48c63c090196433b76d699bf3ebb99816e0f14c06d",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:9563550ed081bf1917cd4a48c63c090196433b76d699bf3ebb99816e0f14c06d",
          "name": "t8c-operator-9563550ed081bf1917cd4a48c63c090196433b76d699bf3ebb99816e0f14c06d-annotation"
        },
        {
          "digest": "sha256:9563550ed081bf1917cd4a48c63c090196433b76d699bf3ebb99816e0f14c06d",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:9563550ed081bf1917cd4a48c63c090196433b76d699bf3ebb99816e0f14c06d",
          "name": "t8c-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "42.7.0",
      "version_original": "42.7.0"
    },
    {
      "_id": "62182d99207e0eb391807c31",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:aa613d5a3f9f2f111cbdc8bbb0d8e66a785a80983b26f591fe065b1a6ad3b714",
      "bundle_path_digest": "sha256:aa613d5a3f9f2f111cbdc8bbb0d8e66a785a80983b26f591fe065b1a6ad3b714",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-02-25T01:15:05.899000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.5 of the NeuVector Certified Operator deploys version 4.4.4 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:55:44.728000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:725bace9f5d0302b4c6681cfd8b1523aa70f7951f1d03677b388341d91043e4c",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:725bace9f5d0302b4c6681cfd8b1523aa70f7951f1d03677b388341d91043e4c",
          "name": "neuvector-operator-725bace9f5d0302b4c6681cfd8b1523aa70f7951f1d03677b388341d91043e4c-annotation"
        },
        {
          "digest": "sha256:725bace9f5d0302b4c6681cfd8b1523aa70f7951f1d03677b388341d91043e4c",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:725bace9f5d0302b4c6681cfd8b1523aa70f7951f1d03677b388341d91043e4c",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:cfbc29a7179c0a9dad1b4952317eed1573d340cd36dc50b25b06a345ae2cbaad",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:cfbc29a7179c0a9dad1b4952317eed1573d340cd36dc50b25b06a345ae2cbaad",
          "name": "controller"
        },
        {
          "digest": "sha256:f38526a125ff0f884ec834db6779875228879927a810b47e7955dc5ed9585f44",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:f38526a125ff0f884ec834db6779875228879927a810b47e7955dc5ed9585f44",
          "name": "enforcer"
        },
        {
          "digest": "sha256:48839dec3d696b2540646c2e92f54df7fd32699b871f4243d485fc5a4a23da70",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:48839dec3d696b2540646c2e92f54df7fd32699b871f4243d485fc5a4a23da70",
          "name": "manager"
        },
        {
          "digest": "sha256:30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515",
          "name": "scanner"
        },
        {
          "digest": "sha256:f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b",
          "image": "registry.access.redhat.com/ubi8@sha256:f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b",
          "name": "updater"
        },
        {
          "digest": "sha256:30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515",
          "name": "scanner-30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515-annotation"
        },
        {
          "digest": "sha256:f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b",
          "image": "registry.access.redhat.com/ubi8@sha256:f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b",
          "name": "ubi8-f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.3.5",
      "version_original": "1.3.5"
    },
    {
      "_id": "62182d9a5c4460caf3123e7e",
      "alm_examples": [
        {
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.4.6"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:587a84dabb3a049fc9a377c8e8e9d9d70776c1d6346c05109da2f497bdd9f030",
      "bundle_path_digest": "sha256:587a84dabb3a049fc9a377c8e8e9d9d70776c1d6346c05109da2f497bdd9f030",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-25T01:15:06.670000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:01:42.147000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:9563550ed081bf1917cd4a48c63c090196433b76d699bf3ebb99816e0f14c06d",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:9563550ed081bf1917cd4a48c63c090196433b76d699bf3ebb99816e0f14c06d",
          "name": "t8c-operator-9563550ed081bf1917cd4a48c63c090196433b76d699bf3ebb99816e0f14c06d-annotation"
        },
        {
          "digest": "sha256:9563550ed081bf1917cd4a48c63c090196433b76d699bf3ebb99816e0f14c06d",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:9563550ed081bf1917cd4a48c63c090196433b76d699bf3ebb99816e0f14c06d",
          "name": "t8c-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "42.7.0",
      "version_original": "42.7.0"
    },
    {
      "_id": "62182dad5c4460caf3123e7f",
      "alm_examples": [
        {
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.4.6"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:587a84dabb3a049fc9a377c8e8e9d9d70776c1d6346c05109da2f497bdd9f030",
      "bundle_path_digest": "sha256:587a84dabb3a049fc9a377c8e8e9d9d70776c1d6346c05109da2f497bdd9f030",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-25T01:15:25.857000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:13:44.789000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:9563550ed081bf1917cd4a48c63c090196433b76d699bf3ebb99816e0f14c06d",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:9563550ed081bf1917cd4a48c63c090196433b76d699bf3ebb99816e0f14c06d",
          "name": "t8c-operator-9563550ed081bf1917cd4a48c63c090196433b76d699bf3ebb99816e0f14c06d-annotation"
        },
        {
          "digest": "sha256:9563550ed081bf1917cd4a48c63c090196433b76d699bf3ebb99816e0f14c06d",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:9563550ed081bf1917cd4a48c63c090196433b76d699bf3ebb99816e0f14c06d",
          "name": "t8c-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "42.7.0",
      "version_original": "42.7.0"
    },
    {
      "_id": "62182e2d10f4fb3122143815",
      "alm_examples": [
        {
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.4.6"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:587a84dabb3a049fc9a377c8e8e9d9d70776c1d6346c05109da2f497bdd9f030",
      "bundle_path_digest": "sha256:587a84dabb3a049fc9a377c8e8e9d9d70776c1d6346c05109da2f497bdd9f030",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-25T01:17:33.042000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T15:12:46.278000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:9563550ed081bf1917cd4a48c63c090196433b76d699bf3ebb99816e0f14c06d",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:9563550ed081bf1917cd4a48c63c090196433b76d699bf3ebb99816e0f14c06d",
          "name": "t8c-operator-9563550ed081bf1917cd4a48c63c090196433b76d699bf3ebb99816e0f14c06d-annotation"
        },
        {
          "digest": "sha256:9563550ed081bf1917cd4a48c63c090196433b76d699bf3ebb99816e0f14c06d",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:9563550ed081bf1917cd4a48c63c090196433b76d699bf3ebb99816e0f14c06d",
          "name": "t8c-operator"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "42.7.0",
      "version_original": "42.7.0"
    },
    {
      "_id": "62182e6210f4fb3122143816",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:aa613d5a3f9f2f111cbdc8bbb0d8e66a785a80983b26f591fe065b1a6ad3b714",
      "bundle_path_digest": "sha256:aa613d5a3f9f2f111cbdc8bbb0d8e66a785a80983b26f591fe065b1a6ad3b714",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-02-25T01:18:26.983000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.5 of the NeuVector Certified Operator deploys version 4.4.4 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:51:28.714000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:725bace9f5d0302b4c6681cfd8b1523aa70f7951f1d03677b388341d91043e4c",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:725bace9f5d0302b4c6681cfd8b1523aa70f7951f1d03677b388341d91043e4c",
          "name": "neuvector-operator-725bace9f5d0302b4c6681cfd8b1523aa70f7951f1d03677b388341d91043e4c-annotation"
        },
        {
          "digest": "sha256:725bace9f5d0302b4c6681cfd8b1523aa70f7951f1d03677b388341d91043e4c",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:725bace9f5d0302b4c6681cfd8b1523aa70f7951f1d03677b388341d91043e4c",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:cfbc29a7179c0a9dad1b4952317eed1573d340cd36dc50b25b06a345ae2cbaad",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:cfbc29a7179c0a9dad1b4952317eed1573d340cd36dc50b25b06a345ae2cbaad",
          "name": "controller"
        },
        {
          "digest": "sha256:f38526a125ff0f884ec834db6779875228879927a810b47e7955dc5ed9585f44",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:f38526a125ff0f884ec834db6779875228879927a810b47e7955dc5ed9585f44",
          "name": "enforcer"
        },
        {
          "digest": "sha256:48839dec3d696b2540646c2e92f54df7fd32699b871f4243d485fc5a4a23da70",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:48839dec3d696b2540646c2e92f54df7fd32699b871f4243d485fc5a4a23da70",
          "name": "manager"
        },
        {
          "digest": "sha256:30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515",
          "name": "scanner"
        },
        {
          "digest": "sha256:f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b",
          "image": "registry.access.redhat.com/ubi8@sha256:f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b",
          "name": "updater"
        },
        {
          "digest": "sha256:30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515",
          "name": "scanner-30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515-annotation"
        },
        {
          "digest": "sha256:f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b",
          "image": "registry.access.redhat.com/ubi8@sha256:f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b",
          "name": "ubi8-f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.3.5",
      "version_original": "1.3.5"
    },
    {
      "_id": "62182f4b5c46c6464085f70c",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:aa613d5a3f9f2f111cbdc8bbb0d8e66a785a80983b26f591fe065b1a6ad3b714",
      "bundle_path_digest": "sha256:aa613d5a3f9f2f111cbdc8bbb0d8e66a785a80983b26f591fe065b1a6ad3b714",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-02-25T01:22:19.677000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.5 of the NeuVector Certified Operator deploys version 4.4.4 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:11:49.456000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:725bace9f5d0302b4c6681cfd8b1523aa70f7951f1d03677b388341d91043e4c",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:725bace9f5d0302b4c6681cfd8b1523aa70f7951f1d03677b388341d91043e4c",
          "name": "neuvector-operator-725bace9f5d0302b4c6681cfd8b1523aa70f7951f1d03677b388341d91043e4c-annotation"
        },
        {
          "digest": "sha256:725bace9f5d0302b4c6681cfd8b1523aa70f7951f1d03677b388341d91043e4c",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:725bace9f5d0302b4c6681cfd8b1523aa70f7951f1d03677b388341d91043e4c",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:cfbc29a7179c0a9dad1b4952317eed1573d340cd36dc50b25b06a345ae2cbaad",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:cfbc29a7179c0a9dad1b4952317eed1573d340cd36dc50b25b06a345ae2cbaad",
          "name": "controller"
        },
        {
          "digest": "sha256:f38526a125ff0f884ec834db6779875228879927a810b47e7955dc5ed9585f44",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:f38526a125ff0f884ec834db6779875228879927a810b47e7955dc5ed9585f44",
          "name": "enforcer"
        },
        {
          "digest": "sha256:48839dec3d696b2540646c2e92f54df7fd32699b871f4243d485fc5a4a23da70",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:48839dec3d696b2540646c2e92f54df7fd32699b871f4243d485fc5a4a23da70",
          "name": "manager"
        },
        {
          "digest": "sha256:30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515",
          "name": "scanner"
        },
        {
          "digest": "sha256:f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b",
          "image": "registry.access.redhat.com/ubi8@sha256:f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b",
          "name": "updater"
        },
        {
          "digest": "sha256:30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515",
          "name": "scanner-30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515-annotation"
        },
        {
          "digest": "sha256:f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b",
          "image": "registry.access.redhat.com/ubi8@sha256:f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b",
          "name": "ubi8-f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.3.5",
      "version_original": "1.3.5"
    },
    {
      "_id": "6218311b10f4fb3122143818",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:aa613d5a3f9f2f111cbdc8bbb0d8e66a785a80983b26f591fe065b1a6ad3b714",
      "bundle_path_digest": "sha256:aa613d5a3f9f2f111cbdc8bbb0d8e66a785a80983b26f591fe065b1a6ad3b714",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-02-25T01:30:03.822000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.5 of the NeuVector Certified Operator deploys version 4.4.4 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:57:55.071000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:725bace9f5d0302b4c6681cfd8b1523aa70f7951f1d03677b388341d91043e4c",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:725bace9f5d0302b4c6681cfd8b1523aa70f7951f1d03677b388341d91043e4c",
          "name": "neuvector-operator-725bace9f5d0302b4c6681cfd8b1523aa70f7951f1d03677b388341d91043e4c-annotation"
        },
        {
          "digest": "sha256:725bace9f5d0302b4c6681cfd8b1523aa70f7951f1d03677b388341d91043e4c",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:725bace9f5d0302b4c6681cfd8b1523aa70f7951f1d03677b388341d91043e4c",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:cfbc29a7179c0a9dad1b4952317eed1573d340cd36dc50b25b06a345ae2cbaad",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:cfbc29a7179c0a9dad1b4952317eed1573d340cd36dc50b25b06a345ae2cbaad",
          "name": "controller"
        },
        {
          "digest": "sha256:f38526a125ff0f884ec834db6779875228879927a810b47e7955dc5ed9585f44",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:f38526a125ff0f884ec834db6779875228879927a810b47e7955dc5ed9585f44",
          "name": "enforcer"
        },
        {
          "digest": "sha256:48839dec3d696b2540646c2e92f54df7fd32699b871f4243d485fc5a4a23da70",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:48839dec3d696b2540646c2e92f54df7fd32699b871f4243d485fc5a4a23da70",
          "name": "manager"
        },
        {
          "digest": "sha256:30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515",
          "name": "scanner"
        },
        {
          "digest": "sha256:f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b",
          "image": "registry.access.redhat.com/ubi8@sha256:f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b",
          "name": "updater"
        },
        {
          "digest": "sha256:30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515",
          "name": "scanner-30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515-annotation"
        },
        {
          "digest": "sha256:f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b",
          "image": "registry.access.redhat.com/ubi8@sha256:f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b",
          "name": "ubi8-f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.3.5",
      "version_original": "1.3.5"
    },
    {
      "_id": "621831625c46c6464085f70d",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:aa613d5a3f9f2f111cbdc8bbb0d8e66a785a80983b26f591fe065b1a6ad3b714",
      "bundle_path_digest": "sha256:aa613d5a3f9f2f111cbdc8bbb0d8e66a785a80983b26f591fe065b1a6ad3b714",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-02-25T01:31:14.282000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.5 of the NeuVector Certified Operator deploys version 4.4.4 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:38:50.548000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:725bace9f5d0302b4c6681cfd8b1523aa70f7951f1d03677b388341d91043e4c",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:725bace9f5d0302b4c6681cfd8b1523aa70f7951f1d03677b388341d91043e4c",
          "name": "neuvector-operator-725bace9f5d0302b4c6681cfd8b1523aa70f7951f1d03677b388341d91043e4c-annotation"
        },
        {
          "digest": "sha256:725bace9f5d0302b4c6681cfd8b1523aa70f7951f1d03677b388341d91043e4c",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:725bace9f5d0302b4c6681cfd8b1523aa70f7951f1d03677b388341d91043e4c",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:cfbc29a7179c0a9dad1b4952317eed1573d340cd36dc50b25b06a345ae2cbaad",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:cfbc29a7179c0a9dad1b4952317eed1573d340cd36dc50b25b06a345ae2cbaad",
          "name": "controller"
        },
        {
          "digest": "sha256:f38526a125ff0f884ec834db6779875228879927a810b47e7955dc5ed9585f44",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:f38526a125ff0f884ec834db6779875228879927a810b47e7955dc5ed9585f44",
          "name": "enforcer"
        },
        {
          "digest": "sha256:48839dec3d696b2540646c2e92f54df7fd32699b871f4243d485fc5a4a23da70",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:48839dec3d696b2540646c2e92f54df7fd32699b871f4243d485fc5a4a23da70",
          "name": "manager"
        },
        {
          "digest": "sha256:30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515",
          "name": "scanner"
        },
        {
          "digest": "sha256:f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b",
          "image": "registry.access.redhat.com/ubi8@sha256:f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b",
          "name": "updater"
        },
        {
          "digest": "sha256:30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515",
          "name": "scanner-30b8c4ad5ab2a616bd07c7bd2e24dd58e19bf743a56788fd53808b2c54503515-annotation"
        },
        {
          "digest": "sha256:f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b",
          "image": "registry.access.redhat.com/ubi8@sha256:f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b",
          "name": "ubi8-f3e11575aee05d474cb994c0ece89d992ece85be0596480582251fdec7a68f0b-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.3.5",
      "version_original": "1.3.5"
    },
    {
      "_id": "6218401e10f4fb3122143823",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "OpenshiftArtifactoryHa",
          "metadata": {
            "name": "openshiftartifactoryha"
          },
          "spec": {
            "artifactory-ha": {
              "artifactory": {
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE",
                "node": {
                  "replicaCount": 2,
                  "waitForPrimaryStartup": {
                    "enabled": false
                  }
                },
                "uid": "1000721030"
              },
              "database": {
                "driver": "OVERRIDE",
                "password": "OVERRIDE",
                "type": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "databaseUpgradeReady": true,
              "nginx": {
                "gid": "1000720107",
                "http": {
                  "externalPort": 80,
                  "internalPort": 8080
                },
                "https": {
                  "externalPort": 443,
                  "internalPort": 8443
                },
                "service": {
                  "ssloffload": false
                },
                "tlsSecretName": "OVERRIDE",
                "uid": "1000720104"
              },
              "postgresql": {
                "enabled": false
              },
              "waitForDatabase": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/artifactory-operator-bundle@sha256:2cf8a5f65b244573898224ccc73b230381b7141aa70f896b26927d2c1e68d84b",
      "bundle_path_digest": "sha256:2cf8a5f65b244573898224ccc73b230381b7141aa70f896b26927d2c1e68d84b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-02-25T02:34:06.781000+00:00",
      "csv_description": " ## Breaking change\nPlease update to version 1.1.10 of the operator.\nVersion 1.1.8 and 1.1.9 have issues. Please skip these versions.\nIf you are using operator version < 1.2.0 there is a issue with upgrade where artifactory version is not updated if you update operator version.As workaround you can update the Custom Resource OpenshiftArtifactoryHa which has hardcored image value.After upgrading to version 1.2.0 you can remove the below parameters from your CR so that future upgrade works without workaround. ``` artifactory-ha.artifactory.image.registry artifactory-ha.artifactory.image.repository artifactory-ha.artifactory.image.tag ```\n## Overview\nOpenshift Operator to deploy JFrog Artifactory Enterprise into your Openshift cluster.\n## Security Context Constraints\nTo deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc.\n```\noc adm policy add-scc-to-user anyuid -z artifactory-ha-operator -n openshift-operators\n```\nAdd the service account for the Artifactory chart to deploy successfully:\n``` oc adm policy add-scc-to-user anyuid -z openshiftartifactoryha-artifactory-ha -n artifactory ```\n### Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Artifactory Enterprise Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Artifactory Enterprise Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Artifactory HA.\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\nDATABASE_TYPE\nDATABASE_DRIVER\nDATABASE_URL\nDATABASE_USER\nDATABASE_PASSWORD\n```\nMaster key and Join key must be supplied. To generate a new key for each run the command below:\n\n```\n# Create a key\nexport JOIN_KEY=$(openssl rand -hex 32)\necho ${JOIN_KEY}\n```\n\nTo use TLS you will need to first create a k8s tls secret to store your .crt and .key file into.\nThen supply the value of this k8s secret into the TLS_SECRET field.\n``` oc create secret tls my_tls_secret --cert=tls.crt --key=tls.key --namespace=my_namespace ```\nClick Create for Artifactory Enterprise to deploy into OpenShift and connect to it on the external IP exposed by the load balancer.\n### Create a route\nTo expose Artifactory from Openshift we recommend you create a new route in Openshift.\nYou can either use the oc command line tool or the Openshift web console to generate a new route.\nDepending upon where you terminate TLS you will need to either specify pass through or edge.\nCommand Line (Edge):\n``` oc create route edge --service=openshiftartifactory-ha --cert=tls.crt --key=tls.key --ca-cert=ca.crt --hostname=www.example.com ```\nOr for more information visit the official Openshift documentation on routes here:\nhttps://docs.openshift.com/container-platform/4.6/networking/routes/route-configuration.html\n\n",
      "csv_display_name": "JFrog Artifactory Enterprise Operator",
      "csv_metadata_description": "JFrog Artifactory Enterprise deploys Artifactory in a high availability environment across multiple pods",
      "csv_name": "artifactory-ha-operator.v1.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:51:28.209000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "plural": "openshiftartifactoryhas",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:a29cf0f8df880ae7bc3b2551953be74a2b1a71f340a6c8a398511a65f625e752",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:a29cf0f8df880ae7bc3b2551953be74a2b1a71f340a6c8a398511a65f625e752",
          "name": "artifactory-pro"
        },
        {
          "digest": "sha256:05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620",
          "name": "artifactory-operator"
        },
        {
          "digest": "sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "name": "nginx"
        },
        {
          "digest": "sha256:05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620",
          "name": "artifactory-operator-05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620-annotation"
        },
        {
          "digest": "sha256:05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620",
          "name": "artifactory-ha-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.2.0",
      "version_original": "1.2.0"
    },
    {
      "_id": "621840fe5c46c6464085f715",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "OpenshiftArtifactoryHa",
          "metadata": {
            "name": "openshiftartifactoryha"
          },
          "spec": {
            "artifactory-ha": {
              "artifactory": {
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE",
                "node": {
                  "replicaCount": 2,
                  "waitForPrimaryStartup": {
                    "enabled": false
                  }
                },
                "uid": "1000721030"
              },
              "database": {
                "driver": "OVERRIDE",
                "password": "OVERRIDE",
                "type": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "databaseUpgradeReady": true,
              "nginx": {
                "gid": "1000720107",
                "http": {
                  "externalPort": 80,
                  "internalPort": 8080
                },
                "https": {
                  "externalPort": 443,
                  "internalPort": 8443
                },
                "service": {
                  "ssloffload": false
                },
                "tlsSecretName": "OVERRIDE",
                "uid": "1000720104"
              },
              "postgresql": {
                "enabled": false
              },
              "waitForDatabase": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/artifactory-operator-bundle@sha256:2cf8a5f65b244573898224ccc73b230381b7141aa70f896b26927d2c1e68d84b",
      "bundle_path_digest": "sha256:2cf8a5f65b244573898224ccc73b230381b7141aa70f896b26927d2c1e68d84b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-02-25T02:37:50.667000+00:00",
      "csv_description": " ## Breaking change\nPlease update to version 1.1.10 of the operator.\nVersion 1.1.8 and 1.1.9 have issues. Please skip these versions.\nIf you are using operator version < 1.2.0 there is a issue with upgrade where artifactory version is not updated if you update operator version.As workaround you can update the Custom Resource OpenshiftArtifactoryHa which has hardcored image value.After upgrading to version 1.2.0 you can remove the below parameters from your CR so that future upgrade works without workaround. ``` artifactory-ha.artifactory.image.registry artifactory-ha.artifactory.image.repository artifactory-ha.artifactory.image.tag ```\n## Overview\nOpenshift Operator to deploy JFrog Artifactory Enterprise into your Openshift cluster.\n## Security Context Constraints\nTo deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc.\n```\noc adm policy add-scc-to-user anyuid -z artifactory-ha-operator -n openshift-operators\n```\nAdd the service account for the Artifactory chart to deploy successfully:\n``` oc adm policy add-scc-to-user anyuid -z openshiftartifactoryha-artifactory-ha -n artifactory ```\n### Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Artifactory Enterprise Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Artifactory Enterprise Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Artifactory HA.\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\nDATABASE_TYPE\nDATABASE_DRIVER\nDATABASE_URL\nDATABASE_USER\nDATABASE_PASSWORD\n```\nMaster key and Join key must be supplied. To generate a new key for each run the command below:\n\n```\n# Create a key\nexport JOIN_KEY=$(openssl rand -hex 32)\necho ${JOIN_KEY}\n```\n\nTo use TLS you will need to first create a k8s tls secret to store your .crt and .key file into.\nThen supply the value of this k8s secret into the TLS_SECRET field.\n``` oc create secret tls my_tls_secret --cert=tls.crt --key=tls.key --namespace=my_namespace ```\nClick Create for Artifactory Enterprise to deploy into OpenShift and connect to it on the external IP exposed by the load balancer.\n### Create a route\nTo expose Artifactory from Openshift we recommend you create a new route in Openshift.\nYou can either use the oc command line tool or the Openshift web console to generate a new route.\nDepending upon where you terminate TLS you will need to either specify pass through or edge.\nCommand Line (Edge):\n``` oc create route edge --service=openshiftartifactory-ha --cert=tls.crt --key=tls.key --ca-cert=ca.crt --hostname=www.example.com ```\nOr for more information visit the official Openshift documentation on routes here:\nhttps://docs.openshift.com/container-platform/4.6/networking/routes/route-configuration.html\n\n",
      "csv_display_name": "JFrog Artifactory Enterprise Operator",
      "csv_metadata_description": "JFrog Artifactory Enterprise deploys Artifactory in a high availability environment across multiple pods",
      "csv_name": "artifactory-ha-operator.v1.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:22:51.190000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "plural": "openshiftartifactoryhas",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:a29cf0f8df880ae7bc3b2551953be74a2b1a71f340a6c8a398511a65f625e752",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:a29cf0f8df880ae7bc3b2551953be74a2b1a71f340a6c8a398511a65f625e752",
          "name": "artifactory-pro"
        },
        {
          "digest": "sha256:05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620",
          "name": "artifactory-operator"
        },
        {
          "digest": "sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "name": "nginx"
        },
        {
          "digest": "sha256:05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620",
          "name": "artifactory-operator-05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620-annotation"
        },
        {
          "digest": "sha256:05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620",
          "name": "artifactory-ha-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.2.0",
      "version_original": "1.2.0"
    },
    {
      "_id": "621842cd9206cd6accd15442",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "OpenshiftArtifactoryHa",
          "metadata": {
            "name": "openshiftartifactoryha"
          },
          "spec": {
            "artifactory-ha": {
              "artifactory": {
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE",
                "node": {
                  "replicaCount": 2,
                  "waitForPrimaryStartup": {
                    "enabled": false
                  }
                },
                "uid": "1000721030"
              },
              "database": {
                "driver": "OVERRIDE",
                "password": "OVERRIDE",
                "type": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "databaseUpgradeReady": true,
              "nginx": {
                "gid": "1000720107",
                "http": {
                  "externalPort": 80,
                  "internalPort": 8080
                },
                "https": {
                  "externalPort": 443,
                  "internalPort": 8443
                },
                "service": {
                  "ssloffload": false
                },
                "tlsSecretName": "OVERRIDE",
                "uid": "1000720104"
              },
              "postgresql": {
                "enabled": false
              },
              "waitForDatabase": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/artifactory-operator-bundle@sha256:2cf8a5f65b244573898224ccc73b230381b7141aa70f896b26927d2c1e68d84b",
      "bundle_path_digest": "sha256:2cf8a5f65b244573898224ccc73b230381b7141aa70f896b26927d2c1e68d84b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-02-25T02:45:33.588000+00:00",
      "csv_description": " ## Breaking change\nPlease update to version 1.1.10 of the operator.\nVersion 1.1.8 and 1.1.9 have issues. Please skip these versions.\nIf you are using operator version < 1.2.0 there is a issue with upgrade where artifactory version is not updated if you update operator version.As workaround you can update the Custom Resource OpenshiftArtifactoryHa which has hardcored image value.After upgrading to version 1.2.0 you can remove the below parameters from your CR so that future upgrade works without workaround. ``` artifactory-ha.artifactory.image.registry artifactory-ha.artifactory.image.repository artifactory-ha.artifactory.image.tag ```\n## Overview\nOpenshift Operator to deploy JFrog Artifactory Enterprise into your Openshift cluster.\n## Security Context Constraints\nTo deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc.\n```\noc adm policy add-scc-to-user anyuid -z artifactory-ha-operator -n openshift-operators\n```\nAdd the service account for the Artifactory chart to deploy successfully:\n``` oc adm policy add-scc-to-user anyuid -z openshiftartifactoryha-artifactory-ha -n artifactory ```\n### Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Artifactory Enterprise Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Artifactory Enterprise Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Artifactory HA.\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\nDATABASE_TYPE\nDATABASE_DRIVER\nDATABASE_URL\nDATABASE_USER\nDATABASE_PASSWORD\n```\nMaster key and Join key must be supplied. To generate a new key for each run the command below:\n\n```\n# Create a key\nexport JOIN_KEY=$(openssl rand -hex 32)\necho ${JOIN_KEY}\n```\n\nTo use TLS you will need to first create a k8s tls secret to store your .crt and .key file into.\nThen supply the value of this k8s secret into the TLS_SECRET field.\n``` oc create secret tls my_tls_secret --cert=tls.crt --key=tls.key --namespace=my_namespace ```\nClick Create for Artifactory Enterprise to deploy into OpenShift and connect to it on the external IP exposed by the load balancer.\n### Create a route\nTo expose Artifactory from Openshift we recommend you create a new route in Openshift.\nYou can either use the oc command line tool or the Openshift web console to generate a new route.\nDepending upon where you terminate TLS you will need to either specify pass through or edge.\nCommand Line (Edge):\n``` oc create route edge --service=openshiftartifactory-ha --cert=tls.crt --key=tls.key --ca-cert=ca.crt --hostname=www.example.com ```\nOr for more information visit the official Openshift documentation on routes here:\nhttps://docs.openshift.com/container-platform/4.6/networking/routes/route-configuration.html\n\n",
      "csv_display_name": "JFrog Artifactory Enterprise Operator",
      "csv_metadata_description": "JFrog Artifactory Enterprise deploys Artifactory in a high availability environment across multiple pods",
      "csv_name": "artifactory-ha-operator.v1.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:49:41.173000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "plural": "openshiftartifactoryhas",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:a29cf0f8df880ae7bc3b2551953be74a2b1a71f340a6c8a398511a65f625e752",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:a29cf0f8df880ae7bc3b2551953be74a2b1a71f340a6c8a398511a65f625e752",
          "name": "artifactory-pro"
        },
        {
          "digest": "sha256:05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620",
          "name": "artifactory-operator"
        },
        {
          "digest": "sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "name": "nginx"
        },
        {
          "digest": "sha256:05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620",
          "name": "artifactory-operator-05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620-annotation"
        },
        {
          "digest": "sha256:05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620",
          "name": "artifactory-ha-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.2.0",
      "version_original": "1.2.0"
    },
    {
      "_id": "6218437110f4fb3122143824",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "OpenshiftArtifactoryHa",
          "metadata": {
            "name": "openshiftartifactoryha"
          },
          "spec": {
            "artifactory-ha": {
              "artifactory": {
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE",
                "node": {
                  "replicaCount": 2,
                  "waitForPrimaryStartup": {
                    "enabled": false
                  }
                },
                "uid": "1000721030"
              },
              "database": {
                "driver": "OVERRIDE",
                "password": "OVERRIDE",
                "type": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "databaseUpgradeReady": true,
              "nginx": {
                "gid": "1000720107",
                "http": {
                  "externalPort": 80,
                  "internalPort": 8080
                },
                "https": {
                  "externalPort": 443,
                  "internalPort": 8443
                },
                "service": {
                  "ssloffload": false
                },
                "tlsSecretName": "OVERRIDE",
                "uid": "1000720104"
              },
              "postgresql": {
                "enabled": false
              },
              "waitForDatabase": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/artifactory-operator-bundle@sha256:2cf8a5f65b244573898224ccc73b230381b7141aa70f896b26927d2c1e68d84b",
      "bundle_path_digest": "sha256:2cf8a5f65b244573898224ccc73b230381b7141aa70f896b26927d2c1e68d84b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-02-25T02:48:17.295000+00:00",
      "csv_description": " ## Breaking change\nPlease update to version 1.1.10 of the operator.\nVersion 1.1.8 and 1.1.9 have issues. Please skip these versions.\nIf you are using operator version < 1.2.0 there is a issue with upgrade where artifactory version is not updated if you update operator version.As workaround you can update the Custom Resource OpenshiftArtifactoryHa which has hardcored image value.After upgrading to version 1.2.0 you can remove the below parameters from your CR so that future upgrade works without workaround. ``` artifactory-ha.artifactory.image.registry artifactory-ha.artifactory.image.repository artifactory-ha.artifactory.image.tag ```\n## Overview\nOpenshift Operator to deploy JFrog Artifactory Enterprise into your Openshift cluster.\n## Security Context Constraints\nTo deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc.\n```\noc adm policy add-scc-to-user anyuid -z artifactory-ha-operator -n openshift-operators\n```\nAdd the service account for the Artifactory chart to deploy successfully:\n``` oc adm policy add-scc-to-user anyuid -z openshiftartifactoryha-artifactory-ha -n artifactory ```\n### Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Artifactory Enterprise Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Artifactory Enterprise Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Artifactory HA.\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\nDATABASE_TYPE\nDATABASE_DRIVER\nDATABASE_URL\nDATABASE_USER\nDATABASE_PASSWORD\n```\nMaster key and Join key must be supplied. To generate a new key for each run the command below:\n\n```\n# Create a key\nexport JOIN_KEY=$(openssl rand -hex 32)\necho ${JOIN_KEY}\n```\n\nTo use TLS you will need to first create a k8s tls secret to store your .crt and .key file into.\nThen supply the value of this k8s secret into the TLS_SECRET field.\n``` oc create secret tls my_tls_secret --cert=tls.crt --key=tls.key --namespace=my_namespace ```\nClick Create for Artifactory Enterprise to deploy into OpenShift and connect to it on the external IP exposed by the load balancer.\n### Create a route\nTo expose Artifactory from Openshift we recommend you create a new route in Openshift.\nYou can either use the oc command line tool or the Openshift web console to generate a new route.\nDepending upon where you terminate TLS you will need to either specify pass through or edge.\nCommand Line (Edge):\n``` oc create route edge --service=openshiftartifactory-ha --cert=tls.crt --key=tls.key --ca-cert=ca.crt --hostname=www.example.com ```\nOr for more information visit the official Openshift documentation on routes here:\nhttps://docs.openshift.com/container-platform/4.6/networking/routes/route-configuration.html\n\n",
      "csv_display_name": "JFrog Artifactory Enterprise Operator",
      "csv_metadata_description": "JFrog Artifactory Enterprise deploys Artifactory in a high availability environment across multiple pods",
      "csv_name": "artifactory-ha-operator.v1.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:24:54.533000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "plural": "openshiftartifactoryhas",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:a29cf0f8df880ae7bc3b2551953be74a2b1a71f340a6c8a398511a65f625e752",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:a29cf0f8df880ae7bc3b2551953be74a2b1a71f340a6c8a398511a65f625e752",
          "name": "artifactory-pro"
        },
        {
          "digest": "sha256:05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620",
          "name": "artifactory-operator"
        },
        {
          "digest": "sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:bce2fa53c4e5b913c707183f49ab9dcde9e601b22f9fb85b98ba56f2e163c1a8",
          "name": "nginx"
        },
        {
          "digest": "sha256:05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620",
          "name": "artifactory-operator-05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620-annotation"
        },
        {
          "digest": "sha256:05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:05854bdbc13edbde15c7b9c5092e1e9c77c35bac4e38822b63205a291e87b620",
          "name": "artifactory-ha-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.2.0",
      "version_original": "1.2.0"
    },
    {
      "_id": "6219594a5c4460caf3123ef3",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:7dad034b1a6aed66e59691599d1dca79a701be4bd00a98ce08e5a31748796bda",
      "bundle_path_digest": "sha256:7dad034b1a6aed66e59691599d1dca79a701be4bd00a98ce08e5a31748796bda",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-25T22:33:46.177000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T10:59:04.314000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5fbf02b4fbf5272e929e561683d120f4f2e81771e46ed49c54db39b37a7160c0",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:5fbf02b4fbf5272e929e561683d120f4f2e81771e46ed49c54db39b37a7160c0",
          "name": "kubeturbo-operator-5fbf02b4fbf5272e929e561683d120f4f2e81771e46ed49c54db39b37a7160c0-annotation"
        },
        {
          "digest": "sha256:5fbf02b4fbf5272e929e561683d120f4f2e81771e46ed49c54db39b37a7160c0",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:5fbf02b4fbf5272e929e561683d120f4f2e81771e46ed49c54db39b37a7160c0",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:9b0b6c011067b147fd27f1644a3b38229a1bbdfd5a2314732fc04c747f52f393",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:9b0b6c011067b147fd27f1644a3b38229a1bbdfd5a2314732fc04c747f52f393",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.4.6",
      "version_original": "8.4.6"
    },
    {
      "_id": "62195a3083933ad10b40b466",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:7dad034b1a6aed66e59691599d1dca79a701be4bd00a98ce08e5a31748796bda",
      "bundle_path_digest": "sha256:7dad034b1a6aed66e59691599d1dca79a701be4bd00a98ce08e5a31748796bda",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-25T22:37:36.007000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:17:17.156000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5fbf02b4fbf5272e929e561683d120f4f2e81771e46ed49c54db39b37a7160c0",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:5fbf02b4fbf5272e929e561683d120f4f2e81771e46ed49c54db39b37a7160c0",
          "name": "kubeturbo-operator-5fbf02b4fbf5272e929e561683d120f4f2e81771e46ed49c54db39b37a7160c0-annotation"
        },
        {
          "digest": "sha256:5fbf02b4fbf5272e929e561683d120f4f2e81771e46ed49c54db39b37a7160c0",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:5fbf02b4fbf5272e929e561683d120f4f2e81771e46ed49c54db39b37a7160c0",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:9b0b6c011067b147fd27f1644a3b38229a1bbdfd5a2314732fc04c747f52f393",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:9b0b6c011067b147fd27f1644a3b38229a1bbdfd5a2314732fc04c747f52f393",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.4.6",
      "version_original": "8.4.6"
    },
    {
      "_id": "62195c10bf15cd3a565ef0da",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:7dad034b1a6aed66e59691599d1dca79a701be4bd00a98ce08e5a31748796bda",
      "bundle_path_digest": "sha256:7dad034b1a6aed66e59691599d1dca79a701be4bd00a98ce08e5a31748796bda",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-25T22:45:36.090000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:15:37.803000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5fbf02b4fbf5272e929e561683d120f4f2e81771e46ed49c54db39b37a7160c0",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:5fbf02b4fbf5272e929e561683d120f4f2e81771e46ed49c54db39b37a7160c0",
          "name": "kubeturbo-operator-5fbf02b4fbf5272e929e561683d120f4f2e81771e46ed49c54db39b37a7160c0-annotation"
        },
        {
          "digest": "sha256:5fbf02b4fbf5272e929e561683d120f4f2e81771e46ed49c54db39b37a7160c0",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:5fbf02b4fbf5272e929e561683d120f4f2e81771e46ed49c54db39b37a7160c0",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:9b0b6c011067b147fd27f1644a3b38229a1bbdfd5a2314732fc04c747f52f393",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:9b0b6c011067b147fd27f1644a3b38229a1bbdfd5a2314732fc04c747f52f393",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "8.4.6",
      "version_original": "8.4.6"
    },
    {
      "_id": "62195fea5c4460caf3123ef4",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:7dad034b1a6aed66e59691599d1dca79a701be4bd00a98ce08e5a31748796bda",
      "bundle_path_digest": "sha256:7dad034b1a6aed66e59691599d1dca79a701be4bd00a98ce08e5a31748796bda",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-25T23:02:02.953000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:48:47.916000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5fbf02b4fbf5272e929e561683d120f4f2e81771e46ed49c54db39b37a7160c0",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:5fbf02b4fbf5272e929e561683d120f4f2e81771e46ed49c54db39b37a7160c0",
          "name": "kubeturbo-operator-5fbf02b4fbf5272e929e561683d120f4f2e81771e46ed49c54db39b37a7160c0-annotation"
        },
        {
          "digest": "sha256:5fbf02b4fbf5272e929e561683d120f4f2e81771e46ed49c54db39b37a7160c0",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:5fbf02b4fbf5272e929e561683d120f4f2e81771e46ed49c54db39b37a7160c0",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:9b0b6c011067b147fd27f1644a3b38229a1bbdfd5a2314732fc04c747f52f393",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:9b0b6c011067b147fd27f1644a3b38229a1bbdfd5a2314732fc04c747f52f393",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "8.4.6",
      "version_original": "8.4.6"
    },
    {
      "_id": "621c6e6b207e0eb391807ca4",
      "alm_examples": [
        {
          "api_version": "storage.hpe.com/v1",
          "kind": "HPECSIDriver",
          "metadata": {
            "name": "csi-driver"
          },
          "spec": {
            "disable": {
              "alletra6000": false,
              "alletra9000": false,
              "nimble": false,
              "primera": false
            },
            "disableNodeConformance": false,
            "disableNodeGetVolumeStats": false,
            "imagePullPolicy": "IfNotPresent",
            "iscsi": {
              "chapPassword": "",
              "chapUser": ""
            },
            "kubeletRootDir": "/var/lib/kubelet/",
            "logLevel": "info",
            "registry": "quay.io"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/csi-driver-operator-bundle@sha256:41964cfe3e810688188aee733dfba7367adac8fe7cda8a90ba4fc1b6aaf2121d",
      "bundle_path_digest": "sha256:41964cfe3e810688188aee733dfba7367adac8fe7cda8a90ba4fc1b6aaf2121d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-28T06:40:43.604000+00:00",
      "csv_description": "The HPE CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE storage systems.\nThe HPE CSI Driver for Kubernetes leverages HPE storage platforms to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://scod.hpedev.io/csi_driver/index.html) for supported HPE platforms and full list of supported CSI features.\n## Installation\nRefer to the HPE CSI Operator for Kubernetes [documentation](https://scod.hpedev.io/csi_driver/deployment.html#operator).\n",
      "csv_display_name": "HPE CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE storage platforms. The CSI driver allows you to use HPE storage with your preferred container orchestrator.",
      "csv_name": "hpe-csi-operator.v2.1.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:48:15.833000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "hpe-csi-operator",
      "provided_apis": [
        {
          "group": "storage.hpe.com",
          "kind": "HPECSIDriver",
          "plural": "hpecsidrivers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "name": "hpe-csi-operator-image"
        },
        {
          "digest": "sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "name": "csi-driver-operator-437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104-annotation"
        },
        {
          "digest": "sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "name": "hpe-csi-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.1.3",
      "version_original": "2.1.3"
    },
    {
      "_id": "621c6f275c4460caf3123f0a",
      "alm_examples": [
        {
          "api_version": "storage.hpe.com/v1",
          "kind": "HPECSIDriver",
          "metadata": {
            "name": "csi-driver"
          },
          "spec": {
            "disable": {
              "alletra6000": false,
              "alletra9000": false,
              "nimble": false,
              "primera": false
            },
            "disableNodeConformance": false,
            "disableNodeGetVolumeStats": false,
            "imagePullPolicy": "IfNotPresent",
            "iscsi": {
              "chapPassword": "",
              "chapUser": ""
            },
            "kubeletRootDir": "/var/lib/kubelet/",
            "logLevel": "info",
            "registry": "quay.io"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/csi-driver-operator-bundle@sha256:41964cfe3e810688188aee733dfba7367adac8fe7cda8a90ba4fc1b6aaf2121d",
      "bundle_path_digest": "sha256:41964cfe3e810688188aee733dfba7367adac8fe7cda8a90ba4fc1b6aaf2121d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-28T06:43:51.121000+00:00",
      "csv_description": "The HPE CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE storage systems.\nThe HPE CSI Driver for Kubernetes leverages HPE storage platforms to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://scod.hpedev.io/csi_driver/index.html) for supported HPE platforms and full list of supported CSI features.\n## Installation\nRefer to the HPE CSI Operator for Kubernetes [documentation](https://scod.hpedev.io/csi_driver/deployment.html#operator).\n",
      "csv_display_name": "HPE CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE storage platforms. The CSI driver allows you to use HPE storage with your preferred container orchestrator.",
      "csv_name": "hpe-csi-operator.v2.1.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:21:00.264000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "hpe-csi-operator",
      "provided_apis": [
        {
          "group": "storage.hpe.com",
          "kind": "HPECSIDriver",
          "plural": "hpecsidrivers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "name": "hpe-csi-operator-image"
        },
        {
          "digest": "sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "name": "csi-driver-operator-437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104-annotation"
        },
        {
          "digest": "sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "name": "hpe-csi-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.1.3",
      "version_original": "2.1.3"
    },
    {
      "_id": "621c6fec83933ad10b40b47f",
      "alm_examples": [
        {
          "api_version": "storage.hpe.com/v1",
          "kind": "HPECSIDriver",
          "metadata": {
            "name": "csi-driver"
          },
          "spec": {
            "disable": {
              "alletra6000": false,
              "alletra9000": false,
              "nimble": false,
              "primera": false
            },
            "disableNodeConformance": false,
            "disableNodeGetVolumeStats": false,
            "imagePullPolicy": "IfNotPresent",
            "iscsi": {
              "chapPassword": "",
              "chapUser": ""
            },
            "kubeletRootDir": "/var/lib/kubelet/",
            "logLevel": "info",
            "registry": "quay.io"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/csi-driver-operator-bundle@sha256:41964cfe3e810688188aee733dfba7367adac8fe7cda8a90ba4fc1b6aaf2121d",
      "bundle_path_digest": "sha256:41964cfe3e810688188aee733dfba7367adac8fe7cda8a90ba4fc1b6aaf2121d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-28T06:47:08.890000+00:00",
      "csv_description": "The HPE CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE storage systems.\nThe HPE CSI Driver for Kubernetes leverages HPE storage platforms to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://scod.hpedev.io/csi_driver/index.html) for supported HPE platforms and full list of supported CSI features.\n## Installation\nRefer to the HPE CSI Operator for Kubernetes [documentation](https://scod.hpedev.io/csi_driver/deployment.html#operator).\n",
      "csv_display_name": "HPE CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE storage platforms. The CSI driver allows you to use HPE storage with your preferred container orchestrator.",
      "csv_name": "hpe-csi-operator.v2.1.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:37:04.594000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "hpe-csi-operator",
      "provided_apis": [
        {
          "group": "storage.hpe.com",
          "kind": "HPECSIDriver",
          "plural": "hpecsidrivers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "name": "hpe-csi-operator-image"
        },
        {
          "digest": "sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "name": "csi-driver-operator-437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104-annotation"
        },
        {
          "digest": "sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "name": "hpe-csi-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.1.3",
      "version_original": "2.1.3"
    },
    {
      "_id": "621d2ecd9206cd6accd155ef",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "ppc64le"
      ],
      "bundle_path": "registry.connect.redhat.com/trilio/k8s-triliovault-ibm@sha256:85bdda572f98163d5e84adddb0ca47fb183ecd2cbeaa2ff0e905387c4d8f3d2d",
      "bundle_path_digest": "sha256:85bdda572f98163d5e84adddb0ca47fb183ecd2cbeaa2ff0e905387c4d8f3d2d",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-28T20:21:33.219000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-ibm-stable.2.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:49:41.228000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "k8s-triliovault-ibm",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "plural": "clusterbackupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "plural": "clusterbackups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "plural": "clusterrestores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "image": "eu.gcr.io/amazing-chalice-243510/control-plane@sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "name": "control-plane-1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a-annotation"
        },
        {
          "digest": "sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "image": "eu.gcr.io/amazing-chalice-243510/control-plane@sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:8a1f8d4ef507034e9210f49cf6d20a42e18a480bff9974ac73efd35438610ba8",
          "image": "eu.gcr.io/amazing-chalice-243510/analyzer@sha256:8a1f8d4ef507034e9210f49cf6d20a42e18a480bff9974ac73efd35438610ba8",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:b1318b3e0ee719ae183a48a1876f158862f958e9c85fadb672ccab3de5593311",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-admission-webhook@sha256:b1318b3e0ee719ae183a48a1876f158862f958e9c85fadb672ccab3de5593311",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:3900293f0afbd3c594136768b89b3233611b115918ede5834eb8eab7ac5c3f70",
          "image": "eu.gcr.io/amazing-chalice-243510/exporter@sha256:3900293f0afbd3c594136768b89b3233611b115918ede5834eb8eab7ac5c3f70",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:0c0691485ff10b2318ce378fcb37a77130db556d8cba9f895a6bf6814774b604",
          "image": "eu.gcr.io/amazing-chalice-243510/web@sha256:0c0691485ff10b2318ce378fcb37a77130db556d8cba9f895a6bf6814774b604",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:c66c43fde40f9bf910b56c519d09cea3509de03973c6962ae57ceb3e924a9542",
          "image": "eu.gcr.io/amazing-chalice-243510/web-backend@sha256:c66c43fde40f9bf910b56c519d09cea3509de03973c6962ae57ceb3e924a9542",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "image": "eu.gcr.io/amazing-chalice-243510/dex@sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "dex-init"
        },
        {
          "digest": "sha256:dc868ce5d6aa0f0fb194af84951f3e22922aa523f17ca1d7174441d72022cb77",
          "image": "eu.gcr.io/amazing-chalice-243510/metamover@sha256:dc868ce5d6aa0f0fb194af84951f3e22922aa523f17ca1d7174441d72022cb77",
          "name": "metamover"
        },
        {
          "digest": "sha256:222b9317935dd19e9a333520bdf0b1f68d9768880bce6f482cb1b2250806da76",
          "image": "eu.gcr.io/amazing-chalice-243510/datamover@sha256:222b9317935dd19e9a333520bdf0b1f68d9768880bce6f482cb1b2250806da76",
          "name": "datamover"
        },
        {
          "digest": "sha256:806090cc5ac8a65fcc5e90d82143dc7df230f742c29ff1c21e685bb49879aaa7",
          "image": "eu.gcr.io/amazing-chalice-243510/datastore-attacher@sha256:806090cc5ac8a65fcc5e90d82143dc7df230f742c29ff1c21e685bb49879aaa7",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:8b3f03459aedfb7829dad4c2e9f731d2f11abf9ba38319c3d2f0d8303a642c5e",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-scheduler@sha256:8b3f03459aedfb7829dad4c2e9f731d2f11abf9ba38319c3d2f0d8303a642c5e",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:e687443babeb3b9850aa3050b6c6935976358bcdea66666fb79b487ee35c5c25",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-cleaner@sha256:e687443babeb3b9850aa3050b6c6935976358bcdea66666fb79b487ee35c5c25",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:3eb71f17b6b04a7207f3cc921f29cd070993402d951aa940a6c0be61733fe958",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-retention@sha256:3eb71f17b6b04a7207f3cc921f29cd070993402d951aa940a6c0be61733fe958",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:6729338fadd130c21e830fc9c5dacb4efae3ffb37427c415d377ee7c8f152872",
          "image": "eu.gcr.io/amazing-chalice-243510/target-browser@sha256:6729338fadd130c21e830fc9c5dacb4efae3ffb37427c415d377ee7c8f152872",
          "name": "target_browser"
        },
        {
          "digest": "sha256:7a76cad51eab8ceb492426507cf6c92ed90047184ae2a8d0ce6c2e1a57762078",
          "image": "eu.gcr.io/amazing-chalice-243510/hook-executor@sha256:7a76cad51eab8ceb492426507cf6c92ed90047184ae2a8d0ce6c2e1a57762078",
          "name": "hook"
        },
        {
          "digest": "sha256:08b4bb891506388fe6bc96490c3ee8117a2c4b7f99919e2e8a5333d2bc12ee5d",
          "image": "eu.gcr.io/amazing-chalice-243510/resource-cleaner@sha256:08b4bb891506388fe6bc96490c3ee8117a2c4b7f99919e2e8a5333d2bc12ee5d",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:6015efd6fe0f935ee77588573d1f1e8c4a4d453d27e6925ef1c89fbab0aa1068",
          "image": "eu.gcr.io/amazing-chalice-243510/minio@sha256:6015efd6fe0f935ee77588573d1f1e8c4a4d453d27e6925ef1c89fbab0aa1068",
          "name": "minio"
        },
        {
          "digest": "sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "image": "eu.gcr.io/amazing-chalice-243510/dex@sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "name": "dex"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "tvk_init"
        }
      ],
      "replaces": "",
      "skip_range": "<2.7.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.7.0",
      "version_original": "2.7.0"
    },
    {
      "_id": "621d2ece5c46c6464085f8b2",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "ppc64le"
      ],
      "bundle_path": "registry.connect.redhat.com/trilio/k8s-triliovault-ibm@sha256:85bdda572f98163d5e84adddb0ca47fb183ecd2cbeaa2ff0e905387c4d8f3d2d",
      "bundle_path_digest": "sha256:85bdda572f98163d5e84adddb0ca47fb183ecd2cbeaa2ff0e905387c4d8f3d2d",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-28T20:21:34.090000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-ibm-stable.2.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:54:42.863000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "k8s-triliovault-ibm",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "plural": "clusterbackups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "plural": "clusterbackupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "plural": "clusterrestores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "image": "eu.gcr.io/amazing-chalice-243510/control-plane@sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "name": "control-plane-1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a-annotation"
        },
        {
          "digest": "sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "image": "eu.gcr.io/amazing-chalice-243510/control-plane@sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:8a1f8d4ef507034e9210f49cf6d20a42e18a480bff9974ac73efd35438610ba8",
          "image": "eu.gcr.io/amazing-chalice-243510/analyzer@sha256:8a1f8d4ef507034e9210f49cf6d20a42e18a480bff9974ac73efd35438610ba8",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:b1318b3e0ee719ae183a48a1876f158862f958e9c85fadb672ccab3de5593311",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-admission-webhook@sha256:b1318b3e0ee719ae183a48a1876f158862f958e9c85fadb672ccab3de5593311",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:3900293f0afbd3c594136768b89b3233611b115918ede5834eb8eab7ac5c3f70",
          "image": "eu.gcr.io/amazing-chalice-243510/exporter@sha256:3900293f0afbd3c594136768b89b3233611b115918ede5834eb8eab7ac5c3f70",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:0c0691485ff10b2318ce378fcb37a77130db556d8cba9f895a6bf6814774b604",
          "image": "eu.gcr.io/amazing-chalice-243510/web@sha256:0c0691485ff10b2318ce378fcb37a77130db556d8cba9f895a6bf6814774b604",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:c66c43fde40f9bf910b56c519d09cea3509de03973c6962ae57ceb3e924a9542",
          "image": "eu.gcr.io/amazing-chalice-243510/web-backend@sha256:c66c43fde40f9bf910b56c519d09cea3509de03973c6962ae57ceb3e924a9542",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "image": "eu.gcr.io/amazing-chalice-243510/dex@sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "dex-init"
        },
        {
          "digest": "sha256:dc868ce5d6aa0f0fb194af84951f3e22922aa523f17ca1d7174441d72022cb77",
          "image": "eu.gcr.io/amazing-chalice-243510/metamover@sha256:dc868ce5d6aa0f0fb194af84951f3e22922aa523f17ca1d7174441d72022cb77",
          "name": "metamover"
        },
        {
          "digest": "sha256:222b9317935dd19e9a333520bdf0b1f68d9768880bce6f482cb1b2250806da76",
          "image": "eu.gcr.io/amazing-chalice-243510/datamover@sha256:222b9317935dd19e9a333520bdf0b1f68d9768880bce6f482cb1b2250806da76",
          "name": "datamover"
        },
        {
          "digest": "sha256:806090cc5ac8a65fcc5e90d82143dc7df230f742c29ff1c21e685bb49879aaa7",
          "image": "eu.gcr.io/amazing-chalice-243510/datastore-attacher@sha256:806090cc5ac8a65fcc5e90d82143dc7df230f742c29ff1c21e685bb49879aaa7",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:8b3f03459aedfb7829dad4c2e9f731d2f11abf9ba38319c3d2f0d8303a642c5e",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-scheduler@sha256:8b3f03459aedfb7829dad4c2e9f731d2f11abf9ba38319c3d2f0d8303a642c5e",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:e687443babeb3b9850aa3050b6c6935976358bcdea66666fb79b487ee35c5c25",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-cleaner@sha256:e687443babeb3b9850aa3050b6c6935976358bcdea66666fb79b487ee35c5c25",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:3eb71f17b6b04a7207f3cc921f29cd070993402d951aa940a6c0be61733fe958",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-retention@sha256:3eb71f17b6b04a7207f3cc921f29cd070993402d951aa940a6c0be61733fe958",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:6729338fadd130c21e830fc9c5dacb4efae3ffb37427c415d377ee7c8f152872",
          "image": "eu.gcr.io/amazing-chalice-243510/target-browser@sha256:6729338fadd130c21e830fc9c5dacb4efae3ffb37427c415d377ee7c8f152872",
          "name": "target_browser"
        },
        {
          "digest": "sha256:7a76cad51eab8ceb492426507cf6c92ed90047184ae2a8d0ce6c2e1a57762078",
          "image": "eu.gcr.io/amazing-chalice-243510/hook-executor@sha256:7a76cad51eab8ceb492426507cf6c92ed90047184ae2a8d0ce6c2e1a57762078",
          "name": "hook"
        },
        {
          "digest": "sha256:08b4bb891506388fe6bc96490c3ee8117a2c4b7f99919e2e8a5333d2bc12ee5d",
          "image": "eu.gcr.io/amazing-chalice-243510/resource-cleaner@sha256:08b4bb891506388fe6bc96490c3ee8117a2c4b7f99919e2e8a5333d2bc12ee5d",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:6015efd6fe0f935ee77588573d1f1e8c4a4d453d27e6925ef1c89fbab0aa1068",
          "image": "eu.gcr.io/amazing-chalice-243510/minio@sha256:6015efd6fe0f935ee77588573d1f1e8c4a4d453d27e6925ef1c89fbab0aa1068",
          "name": "minio"
        },
        {
          "digest": "sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "image": "eu.gcr.io/amazing-chalice-243510/dex@sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "name": "dex"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "tvk_init"
        }
      ],
      "replaces": "",
      "skip_range": "<2.7.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.7.0",
      "version_original": "2.7.0"
    },
    {
      "_id": "621d32869206cd6accd155f0",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "ppc64le"
      ],
      "bundle_path": "registry.connect.redhat.com/trilio/k8s-triliovault-ibm@sha256:85bdda572f98163d5e84adddb0ca47fb183ecd2cbeaa2ff0e905387c4d8f3d2d",
      "bundle_path_digest": "sha256:85bdda572f98163d5e84adddb0ca47fb183ecd2cbeaa2ff0e905387c4d8f3d2d",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-28T20:37:26.854000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-ibm-stable.2.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:20:14.335000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "k8s-triliovault-ibm",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "plural": "clusterbackups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "plural": "clusterbackupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "plural": "clusterrestores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "image": "eu.gcr.io/amazing-chalice-243510/control-plane@sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "name": "control-plane-1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a-annotation"
        },
        {
          "digest": "sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "image": "eu.gcr.io/amazing-chalice-243510/control-plane@sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:8a1f8d4ef507034e9210f49cf6d20a42e18a480bff9974ac73efd35438610ba8",
          "image": "eu.gcr.io/amazing-chalice-243510/analyzer@sha256:8a1f8d4ef507034e9210f49cf6d20a42e18a480bff9974ac73efd35438610ba8",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:b1318b3e0ee719ae183a48a1876f158862f958e9c85fadb672ccab3de5593311",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-admission-webhook@sha256:b1318b3e0ee719ae183a48a1876f158862f958e9c85fadb672ccab3de5593311",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:3900293f0afbd3c594136768b89b3233611b115918ede5834eb8eab7ac5c3f70",
          "image": "eu.gcr.io/amazing-chalice-243510/exporter@sha256:3900293f0afbd3c594136768b89b3233611b115918ede5834eb8eab7ac5c3f70",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:0c0691485ff10b2318ce378fcb37a77130db556d8cba9f895a6bf6814774b604",
          "image": "eu.gcr.io/amazing-chalice-243510/web@sha256:0c0691485ff10b2318ce378fcb37a77130db556d8cba9f895a6bf6814774b604",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:c66c43fde40f9bf910b56c519d09cea3509de03973c6962ae57ceb3e924a9542",
          "image": "eu.gcr.io/amazing-chalice-243510/web-backend@sha256:c66c43fde40f9bf910b56c519d09cea3509de03973c6962ae57ceb3e924a9542",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "image": "eu.gcr.io/amazing-chalice-243510/dex@sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "dex-init"
        },
        {
          "digest": "sha256:dc868ce5d6aa0f0fb194af84951f3e22922aa523f17ca1d7174441d72022cb77",
          "image": "eu.gcr.io/amazing-chalice-243510/metamover@sha256:dc868ce5d6aa0f0fb194af84951f3e22922aa523f17ca1d7174441d72022cb77",
          "name": "metamover"
        },
        {
          "digest": "sha256:222b9317935dd19e9a333520bdf0b1f68d9768880bce6f482cb1b2250806da76",
          "image": "eu.gcr.io/amazing-chalice-243510/datamover@sha256:222b9317935dd19e9a333520bdf0b1f68d9768880bce6f482cb1b2250806da76",
          "name": "datamover"
        },
        {
          "digest": "sha256:806090cc5ac8a65fcc5e90d82143dc7df230f742c29ff1c21e685bb49879aaa7",
          "image": "eu.gcr.io/amazing-chalice-243510/datastore-attacher@sha256:806090cc5ac8a65fcc5e90d82143dc7df230f742c29ff1c21e685bb49879aaa7",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:8b3f03459aedfb7829dad4c2e9f731d2f11abf9ba38319c3d2f0d8303a642c5e",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-scheduler@sha256:8b3f03459aedfb7829dad4c2e9f731d2f11abf9ba38319c3d2f0d8303a642c5e",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:e687443babeb3b9850aa3050b6c6935976358bcdea66666fb79b487ee35c5c25",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-cleaner@sha256:e687443babeb3b9850aa3050b6c6935976358bcdea66666fb79b487ee35c5c25",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:3eb71f17b6b04a7207f3cc921f29cd070993402d951aa940a6c0be61733fe958",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-retention@sha256:3eb71f17b6b04a7207f3cc921f29cd070993402d951aa940a6c0be61733fe958",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:6729338fadd130c21e830fc9c5dacb4efae3ffb37427c415d377ee7c8f152872",
          "image": "eu.gcr.io/amazing-chalice-243510/target-browser@sha256:6729338fadd130c21e830fc9c5dacb4efae3ffb37427c415d377ee7c8f152872",
          "name": "target_browser"
        },
        {
          "digest": "sha256:7a76cad51eab8ceb492426507cf6c92ed90047184ae2a8d0ce6c2e1a57762078",
          "image": "eu.gcr.io/amazing-chalice-243510/hook-executor@sha256:7a76cad51eab8ceb492426507cf6c92ed90047184ae2a8d0ce6c2e1a57762078",
          "name": "hook"
        },
        {
          "digest": "sha256:08b4bb891506388fe6bc96490c3ee8117a2c4b7f99919e2e8a5333d2bc12ee5d",
          "image": "eu.gcr.io/amazing-chalice-243510/resource-cleaner@sha256:08b4bb891506388fe6bc96490c3ee8117a2c4b7f99919e2e8a5333d2bc12ee5d",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:6015efd6fe0f935ee77588573d1f1e8c4a4d453d27e6925ef1c89fbab0aa1068",
          "image": "eu.gcr.io/amazing-chalice-243510/minio@sha256:6015efd6fe0f935ee77588573d1f1e8c4a4d453d27e6925ef1c89fbab0aa1068",
          "name": "minio"
        },
        {
          "digest": "sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "image": "eu.gcr.io/amazing-chalice-243510/dex@sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "name": "dex"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "tvk_init"
        }
      ],
      "replaces": "",
      "skip_range": "<2.7.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.7.0",
      "version_original": "2.7.0"
    },
    {
      "_id": "621d33511a79457bc0d50d98",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "ppc64le"
      ],
      "bundle_path": "registry.connect.redhat.com/trilio/k8s-triliovault-ibm@sha256:85bdda572f98163d5e84adddb0ca47fb183ecd2cbeaa2ff0e905387c4d8f3d2d",
      "bundle_path_digest": "sha256:85bdda572f98163d5e84adddb0ca47fb183ecd2cbeaa2ff0e905387c4d8f3d2d",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-28T20:40:49.565000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-ibm-stable.2.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:16:54.537000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "k8s-triliovault-ibm",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "plural": "clusterbackupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "plural": "clusterbackups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "plural": "clusterrestores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "image": "eu.gcr.io/amazing-chalice-243510/control-plane@sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "name": "control-plane-1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a-annotation"
        },
        {
          "digest": "sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "image": "eu.gcr.io/amazing-chalice-243510/control-plane@sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:8a1f8d4ef507034e9210f49cf6d20a42e18a480bff9974ac73efd35438610ba8",
          "image": "eu.gcr.io/amazing-chalice-243510/analyzer@sha256:8a1f8d4ef507034e9210f49cf6d20a42e18a480bff9974ac73efd35438610ba8",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:b1318b3e0ee719ae183a48a1876f158862f958e9c85fadb672ccab3de5593311",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-admission-webhook@sha256:b1318b3e0ee719ae183a48a1876f158862f958e9c85fadb672ccab3de5593311",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:3900293f0afbd3c594136768b89b3233611b115918ede5834eb8eab7ac5c3f70",
          "image": "eu.gcr.io/amazing-chalice-243510/exporter@sha256:3900293f0afbd3c594136768b89b3233611b115918ede5834eb8eab7ac5c3f70",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:0c0691485ff10b2318ce378fcb37a77130db556d8cba9f895a6bf6814774b604",
          "image": "eu.gcr.io/amazing-chalice-243510/web@sha256:0c0691485ff10b2318ce378fcb37a77130db556d8cba9f895a6bf6814774b604",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:c66c43fde40f9bf910b56c519d09cea3509de03973c6962ae57ceb3e924a9542",
          "image": "eu.gcr.io/amazing-chalice-243510/web-backend@sha256:c66c43fde40f9bf910b56c519d09cea3509de03973c6962ae57ceb3e924a9542",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "image": "eu.gcr.io/amazing-chalice-243510/dex@sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "dex-init"
        },
        {
          "digest": "sha256:dc868ce5d6aa0f0fb194af84951f3e22922aa523f17ca1d7174441d72022cb77",
          "image": "eu.gcr.io/amazing-chalice-243510/metamover@sha256:dc868ce5d6aa0f0fb194af84951f3e22922aa523f17ca1d7174441d72022cb77",
          "name": "metamover"
        },
        {
          "digest": "sha256:222b9317935dd19e9a333520bdf0b1f68d9768880bce6f482cb1b2250806da76",
          "image": "eu.gcr.io/amazing-chalice-243510/datamover@sha256:222b9317935dd19e9a333520bdf0b1f68d9768880bce6f482cb1b2250806da76",
          "name": "datamover"
        },
        {
          "digest": "sha256:806090cc5ac8a65fcc5e90d82143dc7df230f742c29ff1c21e685bb49879aaa7",
          "image": "eu.gcr.io/amazing-chalice-243510/datastore-attacher@sha256:806090cc5ac8a65fcc5e90d82143dc7df230f742c29ff1c21e685bb49879aaa7",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:8b3f03459aedfb7829dad4c2e9f731d2f11abf9ba38319c3d2f0d8303a642c5e",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-scheduler@sha256:8b3f03459aedfb7829dad4c2e9f731d2f11abf9ba38319c3d2f0d8303a642c5e",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:e687443babeb3b9850aa3050b6c6935976358bcdea66666fb79b487ee35c5c25",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-cleaner@sha256:e687443babeb3b9850aa3050b6c6935976358bcdea66666fb79b487ee35c5c25",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:3eb71f17b6b04a7207f3cc921f29cd070993402d951aa940a6c0be61733fe958",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-retention@sha256:3eb71f17b6b04a7207f3cc921f29cd070993402d951aa940a6c0be61733fe958",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:6729338fadd130c21e830fc9c5dacb4efae3ffb37427c415d377ee7c8f152872",
          "image": "eu.gcr.io/amazing-chalice-243510/target-browser@sha256:6729338fadd130c21e830fc9c5dacb4efae3ffb37427c415d377ee7c8f152872",
          "name": "target_browser"
        },
        {
          "digest": "sha256:7a76cad51eab8ceb492426507cf6c92ed90047184ae2a8d0ce6c2e1a57762078",
          "image": "eu.gcr.io/amazing-chalice-243510/hook-executor@sha256:7a76cad51eab8ceb492426507cf6c92ed90047184ae2a8d0ce6c2e1a57762078",
          "name": "hook"
        },
        {
          "digest": "sha256:08b4bb891506388fe6bc96490c3ee8117a2c4b7f99919e2e8a5333d2bc12ee5d",
          "image": "eu.gcr.io/amazing-chalice-243510/resource-cleaner@sha256:08b4bb891506388fe6bc96490c3ee8117a2c4b7f99919e2e8a5333d2bc12ee5d",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:6015efd6fe0f935ee77588573d1f1e8c4a4d453d27e6925ef1c89fbab0aa1068",
          "image": "eu.gcr.io/amazing-chalice-243510/minio@sha256:6015efd6fe0f935ee77588573d1f1e8c4a4d453d27e6925ef1c89fbab0aa1068",
          "name": "minio"
        },
        {
          "digest": "sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "image": "eu.gcr.io/amazing-chalice-243510/dex@sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "name": "dex"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "tvk_init"
        }
      ],
      "replaces": "",
      "skip_range": "<2.7.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.7.0",
      "version_original": "2.7.0"
    },
    {
      "_id": "621d370d5c46c6464085f8b5",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "ppc64le"
      ],
      "bundle_path": "registry.connect.redhat.com/trilio/k8s-triliovault-ibm@sha256:85bdda572f98163d5e84adddb0ca47fb183ecd2cbeaa2ff0e905387c4d8f3d2d",
      "bundle_path_digest": "sha256:85bdda572f98163d5e84adddb0ca47fb183ecd2cbeaa2ff0e905387c4d8f3d2d",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-28T20:56:45.689000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-ibm-stable.2.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:19:30.336000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "k8s-triliovault-ibm",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "plural": "clusterrestores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "plural": "clusterbackupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "plural": "clusterbackups",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "image": "eu.gcr.io/amazing-chalice-243510/control-plane@sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "name": "control-plane-1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a-annotation"
        },
        {
          "digest": "sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "image": "eu.gcr.io/amazing-chalice-243510/control-plane@sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:8a1f8d4ef507034e9210f49cf6d20a42e18a480bff9974ac73efd35438610ba8",
          "image": "eu.gcr.io/amazing-chalice-243510/analyzer@sha256:8a1f8d4ef507034e9210f49cf6d20a42e18a480bff9974ac73efd35438610ba8",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:b1318b3e0ee719ae183a48a1876f158862f958e9c85fadb672ccab3de5593311",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-admission-webhook@sha256:b1318b3e0ee719ae183a48a1876f158862f958e9c85fadb672ccab3de5593311",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:3900293f0afbd3c594136768b89b3233611b115918ede5834eb8eab7ac5c3f70",
          "image": "eu.gcr.io/amazing-chalice-243510/exporter@sha256:3900293f0afbd3c594136768b89b3233611b115918ede5834eb8eab7ac5c3f70",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:0c0691485ff10b2318ce378fcb37a77130db556d8cba9f895a6bf6814774b604",
          "image": "eu.gcr.io/amazing-chalice-243510/web@sha256:0c0691485ff10b2318ce378fcb37a77130db556d8cba9f895a6bf6814774b604",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:c66c43fde40f9bf910b56c519d09cea3509de03973c6962ae57ceb3e924a9542",
          "image": "eu.gcr.io/amazing-chalice-243510/web-backend@sha256:c66c43fde40f9bf910b56c519d09cea3509de03973c6962ae57ceb3e924a9542",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "image": "eu.gcr.io/amazing-chalice-243510/dex@sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "dex-init"
        },
        {
          "digest": "sha256:dc868ce5d6aa0f0fb194af84951f3e22922aa523f17ca1d7174441d72022cb77",
          "image": "eu.gcr.io/amazing-chalice-243510/metamover@sha256:dc868ce5d6aa0f0fb194af84951f3e22922aa523f17ca1d7174441d72022cb77",
          "name": "metamover"
        },
        {
          "digest": "sha256:222b9317935dd19e9a333520bdf0b1f68d9768880bce6f482cb1b2250806da76",
          "image": "eu.gcr.io/amazing-chalice-243510/datamover@sha256:222b9317935dd19e9a333520bdf0b1f68d9768880bce6f482cb1b2250806da76",
          "name": "datamover"
        },
        {
          "digest": "sha256:806090cc5ac8a65fcc5e90d82143dc7df230f742c29ff1c21e685bb49879aaa7",
          "image": "eu.gcr.io/amazing-chalice-243510/datastore-attacher@sha256:806090cc5ac8a65fcc5e90d82143dc7df230f742c29ff1c21e685bb49879aaa7",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:8b3f03459aedfb7829dad4c2e9f731d2f11abf9ba38319c3d2f0d8303a642c5e",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-scheduler@sha256:8b3f03459aedfb7829dad4c2e9f731d2f11abf9ba38319c3d2f0d8303a642c5e",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:e687443babeb3b9850aa3050b6c6935976358bcdea66666fb79b487ee35c5c25",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-cleaner@sha256:e687443babeb3b9850aa3050b6c6935976358bcdea66666fb79b487ee35c5c25",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:3eb71f17b6b04a7207f3cc921f29cd070993402d951aa940a6c0be61733fe958",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-retention@sha256:3eb71f17b6b04a7207f3cc921f29cd070993402d951aa940a6c0be61733fe958",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:6729338fadd130c21e830fc9c5dacb4efae3ffb37427c415d377ee7c8f152872",
          "image": "eu.gcr.io/amazing-chalice-243510/target-browser@sha256:6729338fadd130c21e830fc9c5dacb4efae3ffb37427c415d377ee7c8f152872",
          "name": "target_browser"
        },
        {
          "digest": "sha256:7a76cad51eab8ceb492426507cf6c92ed90047184ae2a8d0ce6c2e1a57762078",
          "image": "eu.gcr.io/amazing-chalice-243510/hook-executor@sha256:7a76cad51eab8ceb492426507cf6c92ed90047184ae2a8d0ce6c2e1a57762078",
          "name": "hook"
        },
        {
          "digest": "sha256:08b4bb891506388fe6bc96490c3ee8117a2c4b7f99919e2e8a5333d2bc12ee5d",
          "image": "eu.gcr.io/amazing-chalice-243510/resource-cleaner@sha256:08b4bb891506388fe6bc96490c3ee8117a2c4b7f99919e2e8a5333d2bc12ee5d",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:6015efd6fe0f935ee77588573d1f1e8c4a4d453d27e6925ef1c89fbab0aa1068",
          "image": "eu.gcr.io/amazing-chalice-243510/minio@sha256:6015efd6fe0f935ee77588573d1f1e8c4a4d453d27e6925ef1c89fbab0aa1068",
          "name": "minio"
        },
        {
          "digest": "sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "image": "eu.gcr.io/amazing-chalice-243510/dex@sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "name": "dex"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "tvk_init"
        }
      ],
      "replaces": "",
      "skip_range": "<2.7.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.7.0",
      "version_original": "2.7.0"
    },
    {
      "_id": "621d66ea9206cd6accd15604",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:723c41eaa0a0f8f5f3a6b4b0bebf6a10f56c2b4bb4c13808c025ef331d022299",
      "bundle_path_digest": "sha256:723c41eaa0a0f8f5f3a6b4b0bebf6a10f56c2b4bb4c13808c025ef331d022299",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-01T00:20:58.613000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.61",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T15:07:33.411000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "name": "kubeturbo-operator-baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70-annotation"
        },
        {
          "digest": "sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:9b0b6c011067b147fd27f1644a3b38229a1bbdfd5a2314732fc04c747f52f393",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:9b0b6c011067b147fd27f1644a3b38229a1bbdfd5a2314732fc04c747f52f393",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "8.4.61",
      "version_original": "8.4.61"
    },
    {
      "_id": "621d67259206cd6accd15605",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:723c41eaa0a0f8f5f3a6b4b0bebf6a10f56c2b4bb4c13808c025ef331d022299",
      "bundle_path_digest": "sha256:723c41eaa0a0f8f5f3a6b4b0bebf6a10f56c2b4bb4c13808c025ef331d022299",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-01T00:21:57.759000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.61",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:16:43.180000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "name": "kubeturbo-operator-baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70-annotation"
        },
        {
          "digest": "sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:9b0b6c011067b147fd27f1644a3b38229a1bbdfd5a2314732fc04c747f52f393",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:9b0b6c011067b147fd27f1644a3b38229a1bbdfd5a2314732fc04c747f52f393",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.4.61",
      "version_original": "8.4.61"
    },
    {
      "_id": "621d684f5c46c6464085f8c4",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:723c41eaa0a0f8f5f3a6b4b0bebf6a10f56c2b4bb4c13808c025ef331d022299",
      "bundle_path_digest": "sha256:723c41eaa0a0f8f5f3a6b4b0bebf6a10f56c2b4bb4c13808c025ef331d022299",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-01T00:26:55.934000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.61",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T10:59:06.225000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "name": "kubeturbo-operator-baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70-annotation"
        },
        {
          "digest": "sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:9b0b6c011067b147fd27f1644a3b38229a1bbdfd5a2314732fc04c747f52f393",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:9b0b6c011067b147fd27f1644a3b38229a1bbdfd5a2314732fc04c747f52f393",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.4.61",
      "version_original": "8.4.61"
    },
    {
      "_id": "621d6e3e5c46c6464085f8c5",
      "alm_examples": [
        {
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:723c41eaa0a0f8f5f3a6b4b0bebf6a10f56c2b4bb4c13808c025ef331d022299",
      "bundle_path_digest": "sha256:723c41eaa0a0f8f5f3a6b4b0bebf6a10f56c2b4bb4c13808c025ef331d022299",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-01T00:52:14.764000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.4.61",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:16:12.491000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "name": "kubeturbo-operator-baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70-annotation"
        },
        {
          "digest": "sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:baa515f2a98d1aec12e079713cf61a99e4fd3f60a71ec99e459bebad6058fa70",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:9b0b6c011067b147fd27f1644a3b38229a1bbdfd5a2314732fc04c747f52f393",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:9b0b6c011067b147fd27f1644a3b38229a1bbdfd5a2314732fc04c747f52f393",
          "name": "kubeturbo"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "8.4.61",
      "version_original": "8.4.61"
    },
    {
      "_id": "621e1ca283933ad10b40bb07",
      "alm_examples": [
        {
          "api_version": "pmem-csi.intel.com/v1beta1",
          "kind": "PmemCSIDeployment",
          "metadata": {
            "name": "pmem-csi.intel.com"
          },
          "spec": {
            "deviceMode": "lvm",
            "nodeSelector": {
              "feature.node.kubernetes.io/memory-nv.dax": "true"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/pmem-csi-operator-os@sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "bundle_path_digest": "sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-03-01T13:16:18.551000+00:00",
      "csv_description": "\nIntel PMEM-CSI is a [CSI](https://github.com/container-storage-interface/spec)\nstorage driver for container orchestrators like Kubernetes. It makes local\npersistent memory ([PMEM](https://pmem.io/)) available as a filesystem volume to\ncontainer applications. This is the operator to deploy and manage the\n[PMEM-CSI](https://intel.github.io/pmem-csi/1.0/README.html)\ndriver on a Kubernetes cluster.\n\nRefer to the [PMEM-CSI documentation](https://intel.github.io/pmem-csi/1.0/README.html)\nfor more details on deploying and using the PMEM-CSI driver.\n",
      "csv_display_name": "Operator for PMEM-CSI driver",
      "csv_metadata_description": "An operator for deploying and managing the PMEM-CSI driver",
      "csv_name": "pmem-csi-operator-os.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T10:56:45.855000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "pmem-csi-operator-os",
      "provided_apis": [
        {
          "group": "pmem-csi.intel.com",
          "kind": "PmemCSIDeployment",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-driver-os-6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576-annotation"
        },
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-operator-os"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "621e1ca283933ad10b40bb08",
      "alm_examples": [
        {
          "api_version": "pmem-csi.intel.com/v1beta1",
          "kind": "PmemCSIDeployment",
          "metadata": {
            "name": "pmem-csi.intel.com"
          },
          "spec": {
            "deviceMode": "lvm",
            "nodeSelector": {
              "feature.node.kubernetes.io/memory-nv.dax": "true"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/pmem-csi-operator-os@sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "bundle_path_digest": "sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-01T13:16:18.749000+00:00",
      "csv_description": "\nIntel PMEM-CSI is a [CSI](https://github.com/container-storage-interface/spec)\nstorage driver for container orchestrators like Kubernetes. It makes local\npersistent memory ([PMEM](https://pmem.io/)) available as a filesystem volume to\ncontainer applications. This is the operator to deploy and manage the\n[PMEM-CSI](https://intel.github.io/pmem-csi/1.0/README.html)\ndriver on a Kubernetes cluster.\n\nRefer to the [PMEM-CSI documentation](https://intel.github.io/pmem-csi/1.0/README.html)\nfor more details on deploying and using the PMEM-CSI driver.\n",
      "csv_display_name": "Operator for PMEM-CSI driver",
      "csv_metadata_description": "An operator for deploying and managing the PMEM-CSI driver",
      "csv_name": "pmem-csi-operator-os.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:56:49.016000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "pmem-csi-operator-os",
      "provided_apis": [
        {
          "group": "pmem-csi.intel.com",
          "kind": "PmemCSIDeployment",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-driver-os-6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576-annotation"
        },
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-operator-os"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "621e2075207e0eb39180835f",
      "alm_examples": [
        {
          "api_version": "pmem-csi.intel.com/v1beta1",
          "kind": "PmemCSIDeployment",
          "metadata": {
            "name": "pmem-csi.intel.com"
          },
          "spec": {
            "deviceMode": "lvm",
            "nodeSelector": {
              "feature.node.kubernetes.io/memory-nv.dax": "true"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/pmem-csi-operator-os@sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "bundle_path_digest": "sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-01T13:32:37.657000+00:00",
      "csv_description": "\nIntel PMEM-CSI is a [CSI](https://github.com/container-storage-interface/spec)\nstorage driver for container orchestrators like Kubernetes. It makes local\npersistent memory ([PMEM](https://pmem.io/)) available as a filesystem volume to\ncontainer applications. This is the operator to deploy and manage the\n[PMEM-CSI](https://intel.github.io/pmem-csi/1.0/README.html)\ndriver on a Kubernetes cluster.\n\nRefer to the [PMEM-CSI documentation](https://intel.github.io/pmem-csi/1.0/README.html)\nfor more details on deploying and using the PMEM-CSI driver.\n",
      "csv_display_name": "Operator for PMEM-CSI driver",
      "csv_metadata_description": "An operator for deploying and managing the PMEM-CSI driver",
      "csv_name": "pmem-csi-operator-os.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:53:48.270000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "pmem-csi-operator-os",
      "provided_apis": [
        {
          "group": "pmem-csi.intel.com",
          "kind": "PmemCSIDeployment",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-driver-os-6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576-annotation"
        },
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-operator-os"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "621e20765c4460caf3124560",
      "alm_examples": [
        {
          "api_version": "pmem-csi.intel.com/v1beta1",
          "kind": "PmemCSIDeployment",
          "metadata": {
            "name": "pmem-csi.intel.com"
          },
          "spec": {
            "deviceMode": "lvm",
            "nodeSelector": {
              "feature.node.kubernetes.io/memory-nv.dax": "true"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/pmem-csi-operator-os@sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "bundle_path_digest": "sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-03-01T13:32:38.195000+00:00",
      "csv_description": "\nIntel PMEM-CSI is a [CSI](https://github.com/container-storage-interface/spec)\nstorage driver for container orchestrators like Kubernetes. It makes local\npersistent memory ([PMEM](https://pmem.io/)) available as a filesystem volume to\ncontainer applications. This is the operator to deploy and manage the\n[PMEM-CSI](https://intel.github.io/pmem-csi/1.0/README.html)\ndriver on a Kubernetes cluster.\n\nRefer to the [PMEM-CSI documentation](https://intel.github.io/pmem-csi/1.0/README.html)\nfor more details on deploying and using the PMEM-CSI driver.\n",
      "csv_display_name": "Operator for PMEM-CSI driver",
      "csv_metadata_description": "An operator for deploying and managing the PMEM-CSI driver",
      "csv_name": "pmem-csi-operator-os.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:22:10.573000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "pmem-csi-operator-os",
      "provided_apis": [
        {
          "group": "pmem-csi.intel.com",
          "kind": "PmemCSIDeployment",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-driver-os-6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576-annotation"
        },
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-operator-os"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "621e221f207e0eb391808369",
      "alm_examples": [
        {
          "api_version": "pmem-csi.intel.com/v1beta1",
          "kind": "PmemCSIDeployment",
          "metadata": {
            "name": "pmem-csi.intel.com"
          },
          "spec": {
            "deviceMode": "lvm",
            "nodeSelector": {
              "feature.node.kubernetes.io/memory-nv.dax": "true"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/pmem-csi-operator-os@sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "bundle_path_digest": "sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-01T13:39:43.109000+00:00",
      "csv_description": "\nIntel PMEM-CSI is a [CSI](https://github.com/container-storage-interface/spec)\nstorage driver for container orchestrators like Kubernetes. It makes local\npersistent memory ([PMEM](https://pmem.io/)) available as a filesystem volume to\ncontainer applications. This is the operator to deploy and manage the\n[PMEM-CSI](https://intel.github.io/pmem-csi/1.0/README.html)\ndriver on a Kubernetes cluster.\n\nRefer to the [PMEM-CSI documentation](https://intel.github.io/pmem-csi/1.0/README.html)\nfor more details on deploying and using the PMEM-CSI driver.\n",
      "csv_display_name": "Operator for PMEM-CSI driver",
      "csv_metadata_description": "An operator for deploying and managing the PMEM-CSI driver",
      "csv_name": "pmem-csi-operator-os.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:30:17.904000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "pmem-csi-operator-os",
      "provided_apis": [
        {
          "group": "pmem-csi.intel.com",
          "kind": "PmemCSIDeployment",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-driver-os-6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576-annotation"
        },
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-operator-os"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "621e221f207e0eb39180836a",
      "alm_examples": [
        {
          "api_version": "pmem-csi.intel.com/v1beta1",
          "kind": "PmemCSIDeployment",
          "metadata": {
            "name": "pmem-csi.intel.com"
          },
          "spec": {
            "deviceMode": "lvm",
            "nodeSelector": {
              "feature.node.kubernetes.io/memory-nv.dax": "true"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/pmem-csi-operator-os@sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "bundle_path_digest": "sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-03-01T13:39:43.724000+00:00",
      "csv_description": "\nIntel PMEM-CSI is a [CSI](https://github.com/container-storage-interface/spec)\nstorage driver for container orchestrators like Kubernetes. It makes local\npersistent memory ([PMEM](https://pmem.io/)) available as a filesystem volume to\ncontainer applications. This is the operator to deploy and manage the\n[PMEM-CSI](https://intel.github.io/pmem-csi/1.0/README.html)\ndriver on a Kubernetes cluster.\n\nRefer to the [PMEM-CSI documentation](https://intel.github.io/pmem-csi/1.0/README.html)\nfor more details on deploying and using the PMEM-CSI driver.\n",
      "csv_display_name": "Operator for PMEM-CSI driver",
      "csv_metadata_description": "An operator for deploying and managing the PMEM-CSI driver",
      "csv_name": "pmem-csi-operator-os.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:57:13.291000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "pmem-csi-operator-os",
      "provided_apis": [
        {
          "group": "pmem-csi.intel.com",
          "kind": "PmemCSIDeployment",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-driver-os-6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576-annotation"
        },
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-operator-os"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "621e22955c4460caf312456e",
      "alm_examples": [
        {
          "api_version": "pmem-csi.intel.com/v1beta1",
          "kind": "PmemCSIDeployment",
          "metadata": {
            "name": "pmem-csi.intel.com"
          },
          "spec": {
            "deviceMode": "lvm",
            "nodeSelector": {
              "feature.node.kubernetes.io/memory-nv.dax": "true"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/pmem-csi-operator-os@sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "bundle_path_digest": "sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-03-01T13:41:41.694000+00:00",
      "csv_description": "\nIntel PMEM-CSI is a [CSI](https://github.com/container-storage-interface/spec)\nstorage driver for container orchestrators like Kubernetes. It makes local\npersistent memory ([PMEM](https://pmem.io/)) available as a filesystem volume to\ncontainer applications. This is the operator to deploy and manage the\n[PMEM-CSI](https://intel.github.io/pmem-csi/1.0/README.html)\ndriver on a Kubernetes cluster.\n\nRefer to the [PMEM-CSI documentation](https://intel.github.io/pmem-csi/1.0/README.html)\nfor more details on deploying and using the PMEM-CSI driver.\n",
      "csv_display_name": "Operator for PMEM-CSI driver",
      "csv_metadata_description": "An operator for deploying and managing the PMEM-CSI driver",
      "csv_name": "pmem-csi-operator-os.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:17:54.149000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "pmem-csi-operator-os",
      "provided_apis": [
        {
          "group": "pmem-csi.intel.com",
          "kind": "PmemCSIDeployment",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-driver-os-6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576-annotation"
        },
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-operator-os"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "621e22955c4460caf312456f",
      "alm_examples": [
        {
          "api_version": "pmem-csi.intel.com/v1beta1",
          "kind": "PmemCSIDeployment",
          "metadata": {
            "name": "pmem-csi.intel.com"
          },
          "spec": {
            "deviceMode": "lvm",
            "nodeSelector": {
              "feature.node.kubernetes.io/memory-nv.dax": "true"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/pmem-csi-operator-os@sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "bundle_path_digest": "sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-01T13:41:41.944000+00:00",
      "csv_description": "\nIntel PMEM-CSI is a [CSI](https://github.com/container-storage-interface/spec)\nstorage driver for container orchestrators like Kubernetes. It makes local\npersistent memory ([PMEM](https://pmem.io/)) available as a filesystem volume to\ncontainer applications. This is the operator to deploy and manage the\n[PMEM-CSI](https://intel.github.io/pmem-csi/1.0/README.html)\ndriver on a Kubernetes cluster.\n\nRefer to the [PMEM-CSI documentation](https://intel.github.io/pmem-csi/1.0/README.html)\nfor more details on deploying and using the PMEM-CSI driver.\n",
      "csv_display_name": "Operator for PMEM-CSI driver",
      "csv_metadata_description": "An operator for deploying and managing the PMEM-CSI driver",
      "csv_name": "pmem-csi-operator-os.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:09:51.970000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "pmem-csi-operator-os",
      "provided_apis": [
        {
          "group": "pmem-csi.intel.com",
          "kind": "PmemCSIDeployment",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-driver-os-6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576-annotation"
        },
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-operator-os"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "621e6337bf15cd3a565ef917",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "OpenshiftXray",
          "metadata": {
            "name": "openshiftxray"
          },
          "spec": {
            "xray": {
              "analysis": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-analysis"
                },
                "name": "xray-analysis",
                "podManagementPolicy": "Parallel",
                "updateStrategy": "RollingUpdate"
              },
              "common": {
                "xrayGroupId": "1000721035",
                "xrayUserId": "1000721035"
              },
              "database": {
                "password": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "global": {},
              "indexer": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-indexer"
                },
                "name": "xray-indexer",
                "podManagementPolicy": "Parallel",
                "updateStrategy": "RollingUpdate"
              },
              "persist": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-persist"
                },
                "name": "xray-persist",
                "persistence": {
                  "size": "10Gi"
                },
                "podManagementPolicy": "Parallel",
                "updateStrategy": "RollingUpdate"
              },
              "postgresql": {
                "enabled": false
              },
              "rabbitmq": {
                "auth": {
                  "erlangCookie": "XRAYRABBITMQCLUSTER",
                  "password": "xray",
                  "tls": {
                    "caCertificate": "",
                    "enabled": false,
                    "failIfNoPeerCert": true,
                    "serverCertificate": "",
                    "serverKey": "",
                    "sslOptionsVerify": "verify_peer"
                  },
                  "username": "xray"
                },
                "enabled": true,
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-rabbitmq"
                },
                "podSecurityContext": {
                  "fsGroup": 1000721001,
                  "runAsUser": 1000721001
                },
                "rbac": {
                  "create": true
                },
                "replicaCount": 1
              },
              "rabbitmq-ha": {
                "enabled": false,
                "image": {
                  "repository": "registry.connect.redhat.com/jfrog/xray-rabbitmq"
                },
                "initContainer": {
                  "enabled": false
                },
                "managementPassword": "guest",
                "managementUsername": "guest",
                "rabbitmqPassword": "guest",
                "rabbitmqUsername": "guest",
                "replicaCount": 1,
                "securityContext": {
                  "fsGroup": 1000721035,
                  "runAsGroup": 1000721035,
                  "runAsUser": 1000721035
                }
              },
              "replicaCount": 1,
              "router": {
                "image": {
                  "imagePullPolicy": "IfNotPresent",
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-router"
                },
                "name": "router"
              },
              "server": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-server"
                },
                "name": "xray-server",
                "podManagementPolicy": "Parallel",
                "replicaCount": 1,
                "updateStrategy": "RollingUpdate"
              },
              "unifiedUpgradeAllowed": "true",
              "xray": {
                "consoleLog": false,
                "jfrogUrl": "OVERRIDE",
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/xray-operator-bundle@sha256:0b3fc22b17422c53635bf514e592632c1370985269fb13ab260ce687dc4e04ae",
      "bundle_path_digest": "sha256:0b3fc22b17422c53635bf514e592632c1370985269fb13ab260ce687dc4e04ae",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-03-01T18:17:27.313000+00:00",
      "csv_description": "## Overview Openshift Operator to deploy JFrog Xray Continuous Security scanner into your Openshift cluster. NOTE: Artifactory is required for JFrog Xray to connect with and scan artifacts against.\n### Major version v2.0.4 Breaking change notification!!\nThis release has major bug fix for Rabbitmq Pod. Please update to version 2.0.4 of the operator.\n### Major version v2.0.0 Breaking change notification!! Xray is dependent upon Rabbitmq. The version of Rabbitmq that this chart uses has significantly changed from version 1.1.8 of the operator. For full details on how to migrate please visit: `https://github.com/jfrog/charts/blob/master/stable/xray/RABBITMQ_MIGRATION_NOTES.md`\nIf you are using operator version < 2.1.0 there is a issue with upgrade where xray version is not updated if you update operator version.As workaround you can update the Custom Resource OpenshiftXray which has hardcored image tag value.After upgrading to version 2.1.0 you can remove the image tags parameters from your CR so that future upgrade works without workaround.\n### Security Context Constraints To deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc. ``` oc adm policy add-scc-to-user anyuid -z xray-operator ``` ``` oc adm policy add-scc-to-user anyuid -z openshiftxray ``` ``` oc adm policy add-scc-to-user anyuid -z openshiftxray-rabbitmq-ha ``` ## Usage An external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it. Search for JFrog and click JFrog Xray Operator to install. Go to the Installed Operators. Wait for the JFrog Xray Operator to complete the installation. Open the Operator and click on the provided API: Xray Click Create New Instance and provide the following parameters for your DB configuration: ``` JFROG_URL DATABASE_URL DATABASE_USER DATABASE_PASSWORD ``` JFROG_URL is the external ip or DNS of your Artifactory to connect Xray to. Artifactory is required to use this operator. You can set your JFROG_URL to the service name of your Artifactory Nginx: ``` oc get svc -n my_namespace | grep nginx ``` DATABASE_URL must be a Postgresql URL in the format: `` postgres://postgres-postgresql:5432/xraydb?sslmode=disable `` DATABASE_USER and DATABASE_PASSWORD must supply a valid user on Postgresql. Click Create for Xray to deploy into OpenShift. Open Artifactory in a web browser to complete the onboarding wizard for Xray! ### Air gap environments To use Xray Operator in an air gap environment you will need to download the images as image streams into your Openshift air gap cluster manually. Use the image overrides to then specify the image stream locations that are local to your cluster. Next you will need to setup the database of index data for xray to use when scanning artifacts. Follow the link below for instructions on setup: https://www.jfrog.com/confluence/display/JFROG/Configuring+Xray#ConfiguringXray-SynchronizingtheDatabase ",
      "csv_display_name": "JFrog Xray Continuous Security Operator",
      "csv_metadata_description": "JFrog Xray Enterprise deploys Xray continuous security scanner into Openshift (Requires Jfrog Artifactory)",
      "csv_name": "xray-operator.v2.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:00:12.162000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "openshiftxray-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftXray",
          "plural": "openshiftxrays",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:12760c420d2ab9dcdac4dac6196b446ef32e2a1dc19d4c055d0dfa69e010b12e",
          "image": "registry.connect.redhat.com/jfrog/xray-server@sha256:12760c420d2ab9dcdac4dac6196b446ef32e2a1dc19d4c055d0dfa69e010b12e",
          "name": "xray-server"
        },
        {
          "digest": "sha256:1af107666f45b65571afe8bec14d918563889cd2c6f7a4b0b318e3d6f4c3bdca",
          "image": "registry.connect.redhat.com/jfrog/xray-analysis@sha256:1af107666f45b65571afe8bec14d918563889cd2c6f7a4b0b318e3d6f4c3bdca",
          "name": "xray-analysis"
        },
        {
          "digest": "sha256:02bd44f98c1c4ebb51da05227d591c9c77c7291b10043c63f2b999905d713344",
          "image": "registry.connect.redhat.com/jfrog/xray-persist@sha256:02bd44f98c1c4ebb51da05227d591c9c77c7291b10043c63f2b999905d713344",
          "name": "xray-persist"
        },
        {
          "digest": "sha256:10cadf07e25f7a3d9fb636481d10742e732d7df3a1bbdf1f46529c879affa5c8",
          "image": "registry.connect.redhat.com/jfrog/xray-indexer@sha256:10cadf07e25f7a3d9fb636481d10742e732d7df3a1bbdf1f46529c879affa5c8",
          "name": "xray-indexer"
        },
        {
          "digest": "sha256:75798b4c41df87ec46c2130ff114e27edbbcffd879f58cbd18ea716a5eacc91a",
          "image": "registry.connect.redhat.com/jfrog/xray-router@sha256:75798b4c41df87ec46c2130ff114e27edbbcffd879f58cbd18ea716a5eacc91a",
          "name": "xray-router"
        },
        {
          "digest": "sha256:1638571cefe53ab74b9de413c4a10b6d520cc771fbc56d339fe2b96f96abae9e",
          "image": "registry.connect.redhat.com/jfrog/xray-rabbitmq@sha256:1638571cefe53ab74b9de413c4a10b6d520cc771fbc56d339fe2b96f96abae9e",
          "name": "xray-rabbitmq"
        },
        {
          "digest": "sha256:a158dc5ca36a4a4698e171c6f948044b2650742e4e6de322907a79b2f1657dbe",
          "image": "registry.connect.redhat.com/jfrog/xray-operator@sha256:a158dc5ca36a4a4698e171c6f948044b2650742e4e6de322907a79b2f1657dbe",
          "name": "xray-operator"
        },
        {
          "digest": "sha256:f9777c2ec1e16d263c5de7c9fe42a5dc4e1a010031470c3649b8da2b172cb5f2",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:f9777c2ec1e16d263c5de7c9fe42a5dc4e1a010031470c3649b8da2b172cb5f2",
          "name": "init-container"
        },
        {
          "digest": "sha256:a158dc5ca36a4a4698e171c6f948044b2650742e4e6de322907a79b2f1657dbe",
          "image": "registry.connect.redhat.com/jfrog/xray-operator@sha256:a158dc5ca36a4a4698e171c6f948044b2650742e4e6de322907a79b2f1657dbe",
          "name": "xray-operator-a158dc5ca36a4a4698e171c6f948044b2650742e4e6de322907a79b2f1657dbe-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.1.0",
      "version_original": "2.1.0"
    },
    {
      "_id": "621e63b883933ad10b40bc76",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "OpenshiftXray",
          "metadata": {
            "name": "openshiftxray"
          },
          "spec": {
            "xray": {
              "analysis": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-analysis"
                },
                "name": "xray-analysis",
                "podManagementPolicy": "Parallel",
                "updateStrategy": "RollingUpdate"
              },
              "common": {
                "xrayGroupId": "1000721035",
                "xrayUserId": "1000721035"
              },
              "database": {
                "password": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "global": {},
              "indexer": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-indexer"
                },
                "name": "xray-indexer",
                "podManagementPolicy": "Parallel",
                "updateStrategy": "RollingUpdate"
              },
              "persist": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-persist"
                },
                "name": "xray-persist",
                "persistence": {
                  "size": "10Gi"
                },
                "podManagementPolicy": "Parallel",
                "updateStrategy": "RollingUpdate"
              },
              "postgresql": {
                "enabled": false
              },
              "rabbitmq": {
                "auth": {
                  "erlangCookie": "XRAYRABBITMQCLUSTER",
                  "password": "xray",
                  "tls": {
                    "caCertificate": "",
                    "enabled": false,
                    "failIfNoPeerCert": true,
                    "serverCertificate": "",
                    "serverKey": "",
                    "sslOptionsVerify": "verify_peer"
                  },
                  "username": "xray"
                },
                "enabled": true,
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-rabbitmq"
                },
                "podSecurityContext": {
                  "fsGroup": 1000721001,
                  "runAsUser": 1000721001
                },
                "rbac": {
                  "create": true
                },
                "replicaCount": 1
              },
              "rabbitmq-ha": {
                "enabled": false,
                "image": {
                  "repository": "registry.connect.redhat.com/jfrog/xray-rabbitmq"
                },
                "initContainer": {
                  "enabled": false
                },
                "managementPassword": "guest",
                "managementUsername": "guest",
                "rabbitmqPassword": "guest",
                "rabbitmqUsername": "guest",
                "replicaCount": 1,
                "securityContext": {
                  "fsGroup": 1000721035,
                  "runAsGroup": 1000721035,
                  "runAsUser": 1000721035
                }
              },
              "replicaCount": 1,
              "router": {
                "image": {
                  "imagePullPolicy": "IfNotPresent",
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-router"
                },
                "name": "router"
              },
              "server": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-server"
                },
                "name": "xray-server",
                "podManagementPolicy": "Parallel",
                "replicaCount": 1,
                "updateStrategy": "RollingUpdate"
              },
              "unifiedUpgradeAllowed": "true",
              "xray": {
                "consoleLog": false,
                "jfrogUrl": "OVERRIDE",
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/xray-operator-bundle@sha256:0b3fc22b17422c53635bf514e592632c1370985269fb13ab260ce687dc4e04ae",
      "bundle_path_digest": "sha256:0b3fc22b17422c53635bf514e592632c1370985269fb13ab260ce687dc4e04ae",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-03-01T18:19:36.563000+00:00",
      "csv_description": "## Overview Openshift Operator to deploy JFrog Xray Continuous Security scanner into your Openshift cluster. NOTE: Artifactory is required for JFrog Xray to connect with and scan artifacts against.\n### Major version v2.0.4 Breaking change notification!!\nThis release has major bug fix for Rabbitmq Pod. Please update to version 2.0.4 of the operator.\n### Major version v2.0.0 Breaking change notification!! Xray is dependent upon Rabbitmq. The version of Rabbitmq that this chart uses has significantly changed from version 1.1.8 of the operator. For full details on how to migrate please visit: `https://github.com/jfrog/charts/blob/master/stable/xray/RABBITMQ_MIGRATION_NOTES.md`\nIf you are using operator version < 2.1.0 there is a issue with upgrade where xray version is not updated if you update operator version.As workaround you can update the Custom Resource OpenshiftXray which has hardcored image tag value.After upgrading to version 2.1.0 you can remove the image tags parameters from your CR so that future upgrade works without workaround.\n### Security Context Constraints To deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc. ``` oc adm policy add-scc-to-user anyuid -z xray-operator ``` ``` oc adm policy add-scc-to-user anyuid -z openshiftxray ``` ``` oc adm policy add-scc-to-user anyuid -z openshiftxray-rabbitmq-ha ``` ## Usage An external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it. Search for JFrog and click JFrog Xray Operator to install. Go to the Installed Operators. Wait for the JFrog Xray Operator to complete the installation. Open the Operator and click on the provided API: Xray Click Create New Instance and provide the following parameters for your DB configuration: ``` JFROG_URL DATABASE_URL DATABASE_USER DATABASE_PASSWORD ``` JFROG_URL is the external ip or DNS of your Artifactory to connect Xray to. Artifactory is required to use this operator. You can set your JFROG_URL to the service name of your Artifactory Nginx: ``` oc get svc -n my_namespace | grep nginx ``` DATABASE_URL must be a Postgresql URL in the format: `` postgres://postgres-postgresql:5432/xraydb?sslmode=disable `` DATABASE_USER and DATABASE_PASSWORD must supply a valid user on Postgresql. Click Create for Xray to deploy into OpenShift. Open Artifactory in a web browser to complete the onboarding wizard for Xray! ### Air gap environments To use Xray Operator in an air gap environment you will need to download the images as image streams into your Openshift air gap cluster manually. Use the image overrides to then specify the image stream locations that are local to your cluster. Next you will need to setup the database of index data for xray to use when scanning artifacts. Follow the link below for instructions on setup: https://www.jfrog.com/confluence/display/JFROG/Configuring+Xray#ConfiguringXray-SynchronizingtheDatabase ",
      "csv_display_name": "JFrog Xray Continuous Security Operator",
      "csv_metadata_description": "JFrog Xray Enterprise deploys Xray continuous security scanner into Openshift (Requires Jfrog Artifactory)",
      "csv_name": "xray-operator.v2.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:48:29.367000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "openshiftxray-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftXray",
          "plural": "openshiftxrays",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:12760c420d2ab9dcdac4dac6196b446ef32e2a1dc19d4c055d0dfa69e010b12e",
          "image": "registry.connect.redhat.com/jfrog/xray-server@sha256:12760c420d2ab9dcdac4dac6196b446ef32e2a1dc19d4c055d0dfa69e010b12e",
          "name": "xray-server"
        },
        {
          "digest": "sha256:1af107666f45b65571afe8bec14d918563889cd2c6f7a4b0b318e3d6f4c3bdca",
          "image": "registry.connect.redhat.com/jfrog/xray-analysis@sha256:1af107666f45b65571afe8bec14d918563889cd2c6f7a4b0b318e3d6f4c3bdca",
          "name": "xray-analysis"
        },
        {
          "digest": "sha256:02bd44f98c1c4ebb51da05227d591c9c77c7291b10043c63f2b999905d713344",
          "image": "registry.connect.redhat.com/jfrog/xray-persist@sha256:02bd44f98c1c4ebb51da05227d591c9c77c7291b10043c63f2b999905d713344",
          "name": "xray-persist"
        },
        {
          "digest": "sha256:10cadf07e25f7a3d9fb636481d10742e732d7df3a1bbdf1f46529c879affa5c8",
          "image": "registry.connect.redhat.com/jfrog/xray-indexer@sha256:10cadf07e25f7a3d9fb636481d10742e732d7df3a1bbdf1f46529c879affa5c8",
          "name": "xray-indexer"
        },
        {
          "digest": "sha256:75798b4c41df87ec46c2130ff114e27edbbcffd879f58cbd18ea716a5eacc91a",
          "image": "registry.connect.redhat.com/jfrog/xray-router@sha256:75798b4c41df87ec46c2130ff114e27edbbcffd879f58cbd18ea716a5eacc91a",
          "name": "xray-router"
        },
        {
          "digest": "sha256:1638571cefe53ab74b9de413c4a10b6d520cc771fbc56d339fe2b96f96abae9e",
          "image": "registry.connect.redhat.com/jfrog/xray-rabbitmq@sha256:1638571cefe53ab74b9de413c4a10b6d520cc771fbc56d339fe2b96f96abae9e",
          "name": "xray-rabbitmq"
        },
        {
          "digest": "sha256:a158dc5ca36a4a4698e171c6f948044b2650742e4e6de322907a79b2f1657dbe",
          "image": "registry.connect.redhat.com/jfrog/xray-operator@sha256:a158dc5ca36a4a4698e171c6f948044b2650742e4e6de322907a79b2f1657dbe",
          "name": "xray-operator"
        },
        {
          "digest": "sha256:f9777c2ec1e16d263c5de7c9fe42a5dc4e1a010031470c3649b8da2b172cb5f2",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:f9777c2ec1e16d263c5de7c9fe42a5dc4e1a010031470c3649b8da2b172cb5f2",
          "name": "init-container"
        },
        {
          "digest": "sha256:a158dc5ca36a4a4698e171c6f948044b2650742e4e6de322907a79b2f1657dbe",
          "image": "registry.connect.redhat.com/jfrog/xray-operator@sha256:a158dc5ca36a4a4698e171c6f948044b2650742e4e6de322907a79b2f1657dbe",
          "name": "xray-operator-a158dc5ca36a4a4698e171c6f948044b2650742e4e6de322907a79b2f1657dbe-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.1.0",
      "version_original": "2.1.0"
    },
    {
      "_id": "621e64f483933ad10b40bc77",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "OpenshiftXray",
          "metadata": {
            "name": "openshiftxray"
          },
          "spec": {
            "xray": {
              "analysis": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-analysis"
                },
                "name": "xray-analysis",
                "podManagementPolicy": "Parallel",
                "updateStrategy": "RollingUpdate"
              },
              "common": {
                "xrayGroupId": "1000721035",
                "xrayUserId": "1000721035"
              },
              "database": {
                "password": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "global": {},
              "indexer": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-indexer"
                },
                "name": "xray-indexer",
                "podManagementPolicy": "Parallel",
                "updateStrategy": "RollingUpdate"
              },
              "persist": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-persist"
                },
                "name": "xray-persist",
                "persistence": {
                  "size": "10Gi"
                },
                "podManagementPolicy": "Parallel",
                "updateStrategy": "RollingUpdate"
              },
              "postgresql": {
                "enabled": false
              },
              "rabbitmq": {
                "auth": {
                  "erlangCookie": "XRAYRABBITMQCLUSTER",
                  "password": "xray",
                  "tls": {
                    "caCertificate": "",
                    "enabled": false,
                    "failIfNoPeerCert": true,
                    "serverCertificate": "",
                    "serverKey": "",
                    "sslOptionsVerify": "verify_peer"
                  },
                  "username": "xray"
                },
                "enabled": true,
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-rabbitmq"
                },
                "podSecurityContext": {
                  "fsGroup": 1000721001,
                  "runAsUser": 1000721001
                },
                "rbac": {
                  "create": true
                },
                "replicaCount": 1
              },
              "rabbitmq-ha": {
                "enabled": false,
                "image": {
                  "repository": "registry.connect.redhat.com/jfrog/xray-rabbitmq"
                },
                "initContainer": {
                  "enabled": false
                },
                "managementPassword": "guest",
                "managementUsername": "guest",
                "rabbitmqPassword": "guest",
                "rabbitmqUsername": "guest",
                "replicaCount": 1,
                "securityContext": {
                  "fsGroup": 1000721035,
                  "runAsGroup": 1000721035,
                  "runAsUser": 1000721035
                }
              },
              "replicaCount": 1,
              "router": {
                "image": {
                  "imagePullPolicy": "IfNotPresent",
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-router"
                },
                "name": "router"
              },
              "server": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-server"
                },
                "name": "xray-server",
                "podManagementPolicy": "Parallel",
                "replicaCount": 1,
                "updateStrategy": "RollingUpdate"
              },
              "unifiedUpgradeAllowed": "true",
              "xray": {
                "consoleLog": false,
                "jfrogUrl": "OVERRIDE",
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/xray-operator-bundle@sha256:0b3fc22b17422c53635bf514e592632c1370985269fb13ab260ce687dc4e04ae",
      "bundle_path_digest": "sha256:0b3fc22b17422c53635bf514e592632c1370985269fb13ab260ce687dc4e04ae",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-03-01T18:24:52.756000+00:00",
      "csv_description": "## Overview Openshift Operator to deploy JFrog Xray Continuous Security scanner into your Openshift cluster. NOTE: Artifactory is required for JFrog Xray to connect with and scan artifacts against.\n### Major version v2.0.4 Breaking change notification!!\nThis release has major bug fix for Rabbitmq Pod. Please update to version 2.0.4 of the operator.\n### Major version v2.0.0 Breaking change notification!! Xray is dependent upon Rabbitmq. The version of Rabbitmq that this chart uses has significantly changed from version 1.1.8 of the operator. For full details on how to migrate please visit: `https://github.com/jfrog/charts/blob/master/stable/xray/RABBITMQ_MIGRATION_NOTES.md`\nIf you are using operator version < 2.1.0 there is a issue with upgrade where xray version is not updated if you update operator version.As workaround you can update the Custom Resource OpenshiftXray which has hardcored image tag value.After upgrading to version 2.1.0 you can remove the image tags parameters from your CR so that future upgrade works without workaround.\n### Security Context Constraints To deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc. ``` oc adm policy add-scc-to-user anyuid -z xray-operator ``` ``` oc adm policy add-scc-to-user anyuid -z openshiftxray ``` ``` oc adm policy add-scc-to-user anyuid -z openshiftxray-rabbitmq-ha ``` ## Usage An external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it. Search for JFrog and click JFrog Xray Operator to install. Go to the Installed Operators. Wait for the JFrog Xray Operator to complete the installation. Open the Operator and click on the provided API: Xray Click Create New Instance and provide the following parameters for your DB configuration: ``` JFROG_URL DATABASE_URL DATABASE_USER DATABASE_PASSWORD ``` JFROG_URL is the external ip or DNS of your Artifactory to connect Xray to. Artifactory is required to use this operator. You can set your JFROG_URL to the service name of your Artifactory Nginx: ``` oc get svc -n my_namespace | grep nginx ``` DATABASE_URL must be a Postgresql URL in the format: `` postgres://postgres-postgresql:5432/xraydb?sslmode=disable `` DATABASE_USER and DATABASE_PASSWORD must supply a valid user on Postgresql. Click Create for Xray to deploy into OpenShift. Open Artifactory in a web browser to complete the onboarding wizard for Xray! ### Air gap environments To use Xray Operator in an air gap environment you will need to download the images as image streams into your Openshift air gap cluster manually. Use the image overrides to then specify the image stream locations that are local to your cluster. Next you will need to setup the database of index data for xray to use when scanning artifacts. Follow the link below for instructions on setup: https://www.jfrog.com/confluence/display/JFROG/Configuring+Xray#ConfiguringXray-SynchronizingtheDatabase ",
      "csv_display_name": "JFrog Xray Continuous Security Operator",
      "csv_metadata_description": "JFrog Xray Enterprise deploys Xray continuous security scanner into Openshift (Requires Jfrog Artifactory)",
      "csv_name": "xray-operator.v2.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:14:03.954000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "openshiftxray-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftXray",
          "plural": "openshiftxrays",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:12760c420d2ab9dcdac4dac6196b446ef32e2a1dc19d4c055d0dfa69e010b12e",
          "image": "registry.connect.redhat.com/jfrog/xray-server@sha256:12760c420d2ab9dcdac4dac6196b446ef32e2a1dc19d4c055d0dfa69e010b12e",
          "name": "xray-server"
        },
        {
          "digest": "sha256:1af107666f45b65571afe8bec14d918563889cd2c6f7a4b0b318e3d6f4c3bdca",
          "image": "registry.connect.redhat.com/jfrog/xray-analysis@sha256:1af107666f45b65571afe8bec14d918563889cd2c6f7a4b0b318e3d6f4c3bdca",
          "name": "xray-analysis"
        },
        {
          "digest": "sha256:02bd44f98c1c4ebb51da05227d591c9c77c7291b10043c63f2b999905d713344",
          "image": "registry.connect.redhat.com/jfrog/xray-persist@sha256:02bd44f98c1c4ebb51da05227d591c9c77c7291b10043c63f2b999905d713344",
          "name": "xray-persist"
        },
        {
          "digest": "sha256:10cadf07e25f7a3d9fb636481d10742e732d7df3a1bbdf1f46529c879affa5c8",
          "image": "registry.connect.redhat.com/jfrog/xray-indexer@sha256:10cadf07e25f7a3d9fb636481d10742e732d7df3a1bbdf1f46529c879affa5c8",
          "name": "xray-indexer"
        },
        {
          "digest": "sha256:75798b4c41df87ec46c2130ff114e27edbbcffd879f58cbd18ea716a5eacc91a",
          "image": "registry.connect.redhat.com/jfrog/xray-router@sha256:75798b4c41df87ec46c2130ff114e27edbbcffd879f58cbd18ea716a5eacc91a",
          "name": "xray-router"
        },
        {
          "digest": "sha256:1638571cefe53ab74b9de413c4a10b6d520cc771fbc56d339fe2b96f96abae9e",
          "image": "registry.connect.redhat.com/jfrog/xray-rabbitmq@sha256:1638571cefe53ab74b9de413c4a10b6d520cc771fbc56d339fe2b96f96abae9e",
          "name": "xray-rabbitmq"
        },
        {
          "digest": "sha256:a158dc5ca36a4a4698e171c6f948044b2650742e4e6de322907a79b2f1657dbe",
          "image": "registry.connect.redhat.com/jfrog/xray-operator@sha256:a158dc5ca36a4a4698e171c6f948044b2650742e4e6de322907a79b2f1657dbe",
          "name": "xray-operator"
        },
        {
          "digest": "sha256:f9777c2ec1e16d263c5de7c9fe42a5dc4e1a010031470c3649b8da2b172cb5f2",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:f9777c2ec1e16d263c5de7c9fe42a5dc4e1a010031470c3649b8da2b172cb5f2",
          "name": "init-container"
        },
        {
          "digest": "sha256:a158dc5ca36a4a4698e171c6f948044b2650742e4e6de322907a79b2f1657dbe",
          "image": "registry.connect.redhat.com/jfrog/xray-operator@sha256:a158dc5ca36a4a4698e171c6f948044b2650742e4e6de322907a79b2f1657dbe",
          "name": "xray-operator-a158dc5ca36a4a4698e171c6f948044b2650742e4e6de322907a79b2f1657dbe-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.1.0",
      "version_original": "2.1.0"
    },
    {
      "_id": "621e656983933ad10b40bc78",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "OpenshiftXray",
          "metadata": {
            "name": "openshiftxray"
          },
          "spec": {
            "xray": {
              "analysis": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-analysis"
                },
                "name": "xray-analysis",
                "podManagementPolicy": "Parallel",
                "updateStrategy": "RollingUpdate"
              },
              "common": {
                "xrayGroupId": "1000721035",
                "xrayUserId": "1000721035"
              },
              "database": {
                "password": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "global": {},
              "indexer": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-indexer"
                },
                "name": "xray-indexer",
                "podManagementPolicy": "Parallel",
                "updateStrategy": "RollingUpdate"
              },
              "persist": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-persist"
                },
                "name": "xray-persist",
                "persistence": {
                  "size": "10Gi"
                },
                "podManagementPolicy": "Parallel",
                "updateStrategy": "RollingUpdate"
              },
              "postgresql": {
                "enabled": false
              },
              "rabbitmq": {
                "auth": {
                  "erlangCookie": "XRAYRABBITMQCLUSTER",
                  "password": "xray",
                  "tls": {
                    "caCertificate": "",
                    "enabled": false,
                    "failIfNoPeerCert": true,
                    "serverCertificate": "",
                    "serverKey": "",
                    "sslOptionsVerify": "verify_peer"
                  },
                  "username": "xray"
                },
                "enabled": true,
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-rabbitmq"
                },
                "podSecurityContext": {
                  "fsGroup": 1000721001,
                  "runAsUser": 1000721001
                },
                "rbac": {
                  "create": true
                },
                "replicaCount": 1
              },
              "rabbitmq-ha": {
                "enabled": false,
                "image": {
                  "repository": "registry.connect.redhat.com/jfrog/xray-rabbitmq"
                },
                "initContainer": {
                  "enabled": false
                },
                "managementPassword": "guest",
                "managementUsername": "guest",
                "rabbitmqPassword": "guest",
                "rabbitmqUsername": "guest",
                "replicaCount": 1,
                "securityContext": {
                  "fsGroup": 1000721035,
                  "runAsGroup": 1000721035,
                  "runAsUser": 1000721035
                }
              },
              "replicaCount": 1,
              "router": {
                "image": {
                  "imagePullPolicy": "IfNotPresent",
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-router"
                },
                "name": "router"
              },
              "server": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/xray-server"
                },
                "name": "xray-server",
                "podManagementPolicy": "Parallel",
                "replicaCount": 1,
                "updateStrategy": "RollingUpdate"
              },
              "unifiedUpgradeAllowed": "true",
              "xray": {
                "consoleLog": false,
                "jfrogUrl": "OVERRIDE",
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/xray-operator-bundle@sha256:0b3fc22b17422c53635bf514e592632c1370985269fb13ab260ce687dc4e04ae",
      "bundle_path_digest": "sha256:0b3fc22b17422c53635bf514e592632c1370985269fb13ab260ce687dc4e04ae",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-03-01T18:26:49.062000+00:00",
      "csv_description": "## Overview Openshift Operator to deploy JFrog Xray Continuous Security scanner into your Openshift cluster. NOTE: Artifactory is required for JFrog Xray to connect with and scan artifacts against.\n### Major version v2.0.4 Breaking change notification!!\nThis release has major bug fix for Rabbitmq Pod. Please update to version 2.0.4 of the operator.\n### Major version v2.0.0 Breaking change notification!! Xray is dependent upon Rabbitmq. The version of Rabbitmq that this chart uses has significantly changed from version 1.1.8 of the operator. For full details on how to migrate please visit: `https://github.com/jfrog/charts/blob/master/stable/xray/RABBITMQ_MIGRATION_NOTES.md`\nIf you are using operator version < 2.1.0 there is a issue with upgrade where xray version is not updated if you update operator version.As workaround you can update the Custom Resource OpenshiftXray which has hardcored image tag value.After upgrading to version 2.1.0 you can remove the image tags parameters from your CR so that future upgrade works without workaround.\n### Security Context Constraints To deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc. ``` oc adm policy add-scc-to-user anyuid -z xray-operator ``` ``` oc adm policy add-scc-to-user anyuid -z openshiftxray ``` ``` oc adm policy add-scc-to-user anyuid -z openshiftxray-rabbitmq-ha ``` ## Usage An external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it. Search for JFrog and click JFrog Xray Operator to install. Go to the Installed Operators. Wait for the JFrog Xray Operator to complete the installation. Open the Operator and click on the provided API: Xray Click Create New Instance and provide the following parameters for your DB configuration: ``` JFROG_URL DATABASE_URL DATABASE_USER DATABASE_PASSWORD ``` JFROG_URL is the external ip or DNS of your Artifactory to connect Xray to. Artifactory is required to use this operator. You can set your JFROG_URL to the service name of your Artifactory Nginx: ``` oc get svc -n my_namespace | grep nginx ``` DATABASE_URL must be a Postgresql URL in the format: `` postgres://postgres-postgresql:5432/xraydb?sslmode=disable `` DATABASE_USER and DATABASE_PASSWORD must supply a valid user on Postgresql. Click Create for Xray to deploy into OpenShift. Open Artifactory in a web browser to complete the onboarding wizard for Xray! ### Air gap environments To use Xray Operator in an air gap environment you will need to download the images as image streams into your Openshift air gap cluster manually. Use the image overrides to then specify the image stream locations that are local to your cluster. Next you will need to setup the database of index data for xray to use when scanning artifacts. Follow the link below for instructions on setup: https://www.jfrog.com/confluence/display/JFROG/Configuring+Xray#ConfiguringXray-SynchronizingtheDatabase ",
      "csv_display_name": "JFrog Xray Continuous Security Operator",
      "csv_metadata_description": "JFrog Xray Enterprise deploys Xray continuous security scanner into Openshift (Requires Jfrog Artifactory)",
      "csv_name": "xray-operator.v2.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:37:28.236000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "openshiftxray-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftXray",
          "plural": "openshiftxrays",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:12760c420d2ab9dcdac4dac6196b446ef32e2a1dc19d4c055d0dfa69e010b12e",
          "image": "registry.connect.redhat.com/jfrog/xray-server@sha256:12760c420d2ab9dcdac4dac6196b446ef32e2a1dc19d4c055d0dfa69e010b12e",
          "name": "xray-server"
        },
        {
          "digest": "sha256:1af107666f45b65571afe8bec14d918563889cd2c6f7a4b0b318e3d6f4c3bdca",
          "image": "registry.connect.redhat.com/jfrog/xray-analysis@sha256:1af107666f45b65571afe8bec14d918563889cd2c6f7a4b0b318e3d6f4c3bdca",
          "name": "xray-analysis"
        },
        {
          "digest": "sha256:02bd44f98c1c4ebb51da05227d591c9c77c7291b10043c63f2b999905d713344",
          "image": "registry.connect.redhat.com/jfrog/xray-persist@sha256:02bd44f98c1c4ebb51da05227d591c9c77c7291b10043c63f2b999905d713344",
          "name": "xray-persist"
        },
        {
          "digest": "sha256:10cadf07e25f7a3d9fb636481d10742e732d7df3a1bbdf1f46529c879affa5c8",
          "image": "registry.connect.redhat.com/jfrog/xray-indexer@sha256:10cadf07e25f7a3d9fb636481d10742e732d7df3a1bbdf1f46529c879affa5c8",
          "name": "xray-indexer"
        },
        {
          "digest": "sha256:75798b4c41df87ec46c2130ff114e27edbbcffd879f58cbd18ea716a5eacc91a",
          "image": "registry.connect.redhat.com/jfrog/xray-router@sha256:75798b4c41df87ec46c2130ff114e27edbbcffd879f58cbd18ea716a5eacc91a",
          "name": "xray-router"
        },
        {
          "digest": "sha256:1638571cefe53ab74b9de413c4a10b6d520cc771fbc56d339fe2b96f96abae9e",
          "image": "registry.connect.redhat.com/jfrog/xray-rabbitmq@sha256:1638571cefe53ab74b9de413c4a10b6d520cc771fbc56d339fe2b96f96abae9e",
          "name": "xray-rabbitmq"
        },
        {
          "digest": "sha256:a158dc5ca36a4a4698e171c6f948044b2650742e4e6de322907a79b2f1657dbe",
          "image": "registry.connect.redhat.com/jfrog/xray-operator@sha256:a158dc5ca36a4a4698e171c6f948044b2650742e4e6de322907a79b2f1657dbe",
          "name": "xray-operator"
        },
        {
          "digest": "sha256:f9777c2ec1e16d263c5de7c9fe42a5dc4e1a010031470c3649b8da2b172cb5f2",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:f9777c2ec1e16d263c5de7c9fe42a5dc4e1a010031470c3649b8da2b172cb5f2",
          "name": "init-container"
        },
        {
          "digest": "sha256:a158dc5ca36a4a4698e171c6f948044b2650742e4e6de322907a79b2f1657dbe",
          "image": "registry.connect.redhat.com/jfrog/xray-operator@sha256:a158dc5ca36a4a4698e171c6f948044b2650742e4e6de322907a79b2f1657dbe",
          "name": "xray-operator-a158dc5ca36a4a4698e171c6f948044b2650742e4e6de322907a79b2f1657dbe-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.1.0",
      "version_original": "2.1.0"
    },
    {
      "_id": "621eace4207e0eb391808546",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:b1a8b56ff5e1bb5326e1bde4931303358410da9768f0ebf9c08e2c2d8661d742",
      "bundle_path_digest": "sha256:b1a8b56ff5e1bb5326e1bde4931303358410da9768f0ebf9c08e2c2d8661d742",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.23",
      "creation_date": "2022-03-01T23:31:48.914000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.23.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T10:59:33.717000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f258275fe3d48c2ae16346a57f628523a6f2fb7b854b6d43b169056e158537f1",
          "image": "quay.io/tigera/operator@sha256:f258275fe3d48c2ae16346a57f628523a6f2fb7b854b6d43b169056e158537f1",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:f258275fe3d48c2ae16346a57f628523a6f2fb7b854b6d43b169056e158537f1",
          "image": "quay.io/tigera/operator@sha256:f258275fe3d48c2ae16346a57f628523a6f2fb7b854b6d43b169056e158537f1",
          "name": "operator-f258275fe3d48c2ae16346a57f628523a6f2fb7b854b6d43b169056e158537f1-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.23.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.23.4",
      "version_original": "1.23.4"
    },
    {
      "_id": "621eadc4bf15cd3a565ef935",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:b1a8b56ff5e1bb5326e1bde4931303358410da9768f0ebf9c08e2c2d8661d742",
      "bundle_path_digest": "sha256:b1a8b56ff5e1bb5326e1bde4931303358410da9768f0ebf9c08e2c2d8661d742",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.23",
      "creation_date": "2022-03-01T23:35:32.111000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.23.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:55:34.424000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f258275fe3d48c2ae16346a57f628523a6f2fb7b854b6d43b169056e158537f1",
          "image": "quay.io/tigera/operator@sha256:f258275fe3d48c2ae16346a57f628523a6f2fb7b854b6d43b169056e158537f1",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:f258275fe3d48c2ae16346a57f628523a6f2fb7b854b6d43b169056e158537f1",
          "image": "quay.io/tigera/operator@sha256:f258275fe3d48c2ae16346a57f628523a6f2fb7b854b6d43b169056e158537f1",
          "name": "operator-f258275fe3d48c2ae16346a57f628523a6f2fb7b854b6d43b169056e158537f1-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.23.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.23.4",
      "version_original": "1.23.4"
    },
    {
      "_id": "621eaddbbf15cd3a565ef936",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:b1a8b56ff5e1bb5326e1bde4931303358410da9768f0ebf9c08e2c2d8661d742",
      "bundle_path_digest": "sha256:b1a8b56ff5e1bb5326e1bde4931303358410da9768f0ebf9c08e2c2d8661d742",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.23",
      "creation_date": "2022-03-01T23:35:55.182000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.23.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:42:35.898000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f258275fe3d48c2ae16346a57f628523a6f2fb7b854b6d43b169056e158537f1",
          "image": "quay.io/tigera/operator@sha256:f258275fe3d48c2ae16346a57f628523a6f2fb7b854b6d43b169056e158537f1",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:f258275fe3d48c2ae16346a57f628523a6f2fb7b854b6d43b169056e158537f1",
          "image": "quay.io/tigera/operator@sha256:f258275fe3d48c2ae16346a57f628523a6f2fb7b854b6d43b169056e158537f1",
          "name": "operator-f258275fe3d48c2ae16346a57f628523a6f2fb7b854b6d43b169056e158537f1-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.23.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.23.4",
      "version_original": "1.23.4"
    },
    {
      "_id": "621eaee45c4460caf3124715",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:b1a8b56ff5e1bb5326e1bde4931303358410da9768f0ebf9c08e2c2d8661d742",
      "bundle_path_digest": "sha256:b1a8b56ff5e1bb5326e1bde4931303358410da9768f0ebf9c08e2c2d8661d742",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.23",
      "creation_date": "2022-03-01T23:40:20.034000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.23.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:30:28.260000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f258275fe3d48c2ae16346a57f628523a6f2fb7b854b6d43b169056e158537f1",
          "image": "quay.io/tigera/operator@sha256:f258275fe3d48c2ae16346a57f628523a6f2fb7b854b6d43b169056e158537f1",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:f258275fe3d48c2ae16346a57f628523a6f2fb7b854b6d43b169056e158537f1",
          "image": "quay.io/tigera/operator@sha256:f258275fe3d48c2ae16346a57f628523a6f2fb7b854b6d43b169056e158537f1",
          "name": "operator-f258275fe3d48c2ae16346a57f628523a6f2fb7b854b6d43b169056e158537f1-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.23.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.23.4",
      "version_original": "1.23.4"
    },
    {
      "_id": "621eaf1e5c4460caf3124716",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:b1a8b56ff5e1bb5326e1bde4931303358410da9768f0ebf9c08e2c2d8661d742",
      "bundle_path_digest": "sha256:b1a8b56ff5e1bb5326e1bde4931303358410da9768f0ebf9c08e2c2d8661d742",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.23",
      "creation_date": "2022-03-01T23:41:18.697000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.23.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-13T11:24:49.498000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f258275fe3d48c2ae16346a57f628523a6f2fb7b854b6d43b169056e158537f1",
          "image": "quay.io/tigera/operator@sha256:f258275fe3d48c2ae16346a57f628523a6f2fb7b854b6d43b169056e158537f1",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:f258275fe3d48c2ae16346a57f628523a6f2fb7b854b6d43b169056e158537f1",
          "image": "quay.io/tigera/operator@sha256:f258275fe3d48c2ae16346a57f628523a6f2fb7b854b6d43b169056e158537f1",
          "name": "operator-f258275fe3d48c2ae16346a57f628523a6f2fb7b854b6d43b169056e158537f1-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.23.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.23.4",
      "version_original": "1.23.4"
    },
    {
      "_id": "621ebf7583933ad10b40bc8e",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:cb7f3367ff064cd01dc636a43fd89d5f6c4e6a7004cb7c94b1758b2398e36d71",
      "bundle_path_digest": "sha256:cb7f3367ff064cd01dc636a43fd89d5f6c4e6a7004cb7c94b1758b2398e36d71",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.25",
      "creation_date": "2022-03-02T00:51:01.327000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.25.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:26:20.243000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:e862708c700df55f99a9c9bb3c453e31f22aef1993d6079d80433eb8da831c94",
          "image": "quay.io/tigera/operator@sha256:e862708c700df55f99a9c9bb3c453e31f22aef1993d6079d80433eb8da831c94",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:e862708c700df55f99a9c9bb3c453e31f22aef1993d6079d80433eb8da831c94",
          "image": "quay.io/tigera/operator@sha256:e862708c700df55f99a9c9bb3c453e31f22aef1993d6079d80433eb8da831c94",
          "name": "operator-e862708c700df55f99a9c9bb3c453e31f22aef1993d6079d80433eb8da831c94-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.25.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.25.1",
      "version_original": "1.25.1"
    },
    {
      "_id": "621ebfd25c4460caf3124718",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:cb7f3367ff064cd01dc636a43fd89d5f6c4e6a7004cb7c94b1758b2398e36d71",
      "bundle_path_digest": "sha256:cb7f3367ff064cd01dc636a43fd89d5f6c4e6a7004cb7c94b1758b2398e36d71",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.25",
      "creation_date": "2022-03-02T00:52:34.943000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.25.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:55:39.216000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:e862708c700df55f99a9c9bb3c453e31f22aef1993d6079d80433eb8da831c94",
          "image": "quay.io/tigera/operator@sha256:e862708c700df55f99a9c9bb3c453e31f22aef1993d6079d80433eb8da831c94",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:e862708c700df55f99a9c9bb3c453e31f22aef1993d6079d80433eb8da831c94",
          "image": "quay.io/tigera/operator@sha256:e862708c700df55f99a9c9bb3c453e31f22aef1993d6079d80433eb8da831c94",
          "name": "operator-e862708c700df55f99a9c9bb3c453e31f22aef1993d6079d80433eb8da831c94-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.25.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.25.1",
      "version_original": "1.25.1"
    },
    {
      "_id": "621ebfe5207e0eb391808547",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:cb7f3367ff064cd01dc636a43fd89d5f6c4e6a7004cb7c94b1758b2398e36d71",
      "bundle_path_digest": "sha256:cb7f3367ff064cd01dc636a43fd89d5f6c4e6a7004cb7c94b1758b2398e36d71",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.25",
      "creation_date": "2022-03-02T00:52:53.834000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.25.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:59:37.417000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:e862708c700df55f99a9c9bb3c453e31f22aef1993d6079d80433eb8da831c94",
          "image": "quay.io/tigera/operator@sha256:e862708c700df55f99a9c9bb3c453e31f22aef1993d6079d80433eb8da831c94",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:e862708c700df55f99a9c9bb3c453e31f22aef1993d6079d80433eb8da831c94",
          "image": "quay.io/tigera/operator@sha256:e862708c700df55f99a9c9bb3c453e31f22aef1993d6079d80433eb8da831c94",
          "name": "operator-e862708c700df55f99a9c9bb3c453e31f22aef1993d6079d80433eb8da831c94-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.25.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.25.1",
      "version_original": "1.25.1"
    },
    {
      "_id": "621ec35783933ad10b40bc8f",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:cb7f3367ff064cd01dc636a43fd89d5f6c4e6a7004cb7c94b1758b2398e36d71",
      "bundle_path_digest": "sha256:cb7f3367ff064cd01dc636a43fd89d5f6c4e6a7004cb7c94b1758b2398e36d71",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.25",
      "creation_date": "2022-03-02T01:07:35.737000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.25.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:37:00.959000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:e862708c700df55f99a9c9bb3c453e31f22aef1993d6079d80433eb8da831c94",
          "image": "quay.io/tigera/operator@sha256:e862708c700df55f99a9c9bb3c453e31f22aef1993d6079d80433eb8da831c94",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:e862708c700df55f99a9c9bb3c453e31f22aef1993d6079d80433eb8da831c94",
          "image": "quay.io/tigera/operator@sha256:e862708c700df55f99a9c9bb3c453e31f22aef1993d6079d80433eb8da831c94",
          "name": "operator-e862708c700df55f99a9c9bb3c453e31f22aef1993d6079d80433eb8da831c94-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.25.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.25.1",
      "version_original": "1.25.1"
    },
    {
      "_id": "621ec383207e0eb391808548",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:cb7f3367ff064cd01dc636a43fd89d5f6c4e6a7004cb7c94b1758b2398e36d71",
      "bundle_path_digest": "sha256:cb7f3367ff064cd01dc636a43fd89d5f6c4e6a7004cb7c94b1758b2398e36d71",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.25",
      "creation_date": "2022-03-02T01:08:19.323000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.25.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:11:18.014000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:e862708c700df55f99a9c9bb3c453e31f22aef1993d6079d80433eb8da831c94",
          "image": "quay.io/tigera/operator@sha256:e862708c700df55f99a9c9bb3c453e31f22aef1993d6079d80433eb8da831c94",
          "name": "tigera-operator"
        },
        {
          "digest": "sha256:e862708c700df55f99a9c9bb3c453e31f22aef1993d6079d80433eb8da831c94",
          "image": "quay.io/tigera/operator@sha256:e862708c700df55f99a9c9bb3c453e31f22aef1993d6079d80433eb8da831c94",
          "name": "operator-e862708c700df55f99a9c9bb3c453e31f22aef1993d6079d80433eb8da831c94-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.25.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.25.1",
      "version_original": "1.25.1"
    },
    {
      "_id": "621fbfd510f4fb3122143ca0",
      "alm_examples": [
        {
          "api_version": "k8s.nginx.org/v1alpha1",
          "kind": "NginxIngressController",
          "metadata": {
            "name": "my-nginx-ingress-controller"
          },
          "spec": {
            "image": {
              "pullPolicy": "Always",
              "repository": "docker.io/nginx/nginx-ingress",
              "tag": "2.1.1-ubi"
            },
            "ingressClass": "nginx",
            "nginxPlus": false,
            "serviceType": "NodePort",
            "type": "deployment"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/nginx/nginx-ingress-operator-bundle@sha256:3694d30be18e2ce2244604c834c6656b71107ec7389c5519ab58918bcb8727e2",
      "bundle_path_digest": "sha256:3694d30be18e2ce2244604c834c6656b71107ec7389c5519ab58918bcb8727e2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-03-02T19:04:53.521000+00:00",
      "csv_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_display_name": "Nginx Ingress Operator",
      "csv_metadata_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_name": "nginx-ingress-operator.v0.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:55:54.546000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "nginx-ingress-operator",
      "provided_apis": [
        {
          "group": "k8s.nginx.org",
          "kind": "NginxIngressController",
          "plural": "nginxingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ad42d06b2bc69e8d6d37bbd999b4d26698f49eb4460976f91da4f4c4bf723457",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:ad42d06b2bc69e8d6d37bbd999b4d26698f49eb4460976f91da4f4c4bf723457",
          "name": "nginx-ingress-operator-ad42d06b2bc69e8d6d37bbd999b4d26698f49eb4460976f91da4f4c4bf723457-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:ad42d06b2bc69e8d6d37bbd999b4d26698f49eb4460976f91da4f4c4bf723457",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:ad42d06b2bc69e8d6d37bbd999b4d26698f49eb4460976f91da4f4c4bf723457",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.5.1",
      "version_original": "0.5.1"
    },
    {
      "_id": "621fc0591a79457bc0d510c3",
      "alm_examples": [
        {
          "api_version": "k8s.nginx.org/v1alpha1",
          "kind": "NginxIngressController",
          "metadata": {
            "name": "my-nginx-ingress-controller"
          },
          "spec": {
            "image": {
              "pullPolicy": "Always",
              "repository": "docker.io/nginx/nginx-ingress",
              "tag": "2.1.1-ubi"
            },
            "ingressClass": "nginx",
            "nginxPlus": false,
            "serviceType": "NodePort",
            "type": "deployment"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/nginx/nginx-ingress-operator-bundle@sha256:3694d30be18e2ce2244604c834c6656b71107ec7389c5519ab58918bcb8727e2",
      "bundle_path_digest": "sha256:3694d30be18e2ce2244604c834c6656b71107ec7389c5519ab58918bcb8727e2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-03-02T19:07:05.151000+00:00",
      "csv_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_display_name": "Nginx Ingress Operator",
      "csv_metadata_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_name": "nginx-ingress-operator.v0.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:51:50.624000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "nginx-ingress-operator",
      "provided_apis": [
        {
          "group": "k8s.nginx.org",
          "kind": "NginxIngressController",
          "plural": "nginxingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ad42d06b2bc69e8d6d37bbd999b4d26698f49eb4460976f91da4f4c4bf723457",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:ad42d06b2bc69e8d6d37bbd999b4d26698f49eb4460976f91da4f4c4bf723457",
          "name": "nginx-ingress-operator-ad42d06b2bc69e8d6d37bbd999b4d26698f49eb4460976f91da4f4c4bf723457-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:ad42d06b2bc69e8d6d37bbd999b4d26698f49eb4460976f91da4f4c4bf723457",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:ad42d06b2bc69e8d6d37bbd999b4d26698f49eb4460976f91da4f4c4bf723457",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.5.1",
      "version_original": "0.5.1"
    },
    {
      "_id": "621fc11a9206cd6accd158e5",
      "alm_examples": [
        {
          "api_version": "k8s.nginx.org/v1alpha1",
          "kind": "NginxIngressController",
          "metadata": {
            "name": "my-nginx-ingress-controller"
          },
          "spec": {
            "image": {
              "pullPolicy": "Always",
              "repository": "docker.io/nginx/nginx-ingress",
              "tag": "2.1.1-ubi"
            },
            "ingressClass": "nginx",
            "nginxPlus": false,
            "serviceType": "NodePort",
            "type": "deployment"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/nginx/nginx-ingress-operator-bundle@sha256:3694d30be18e2ce2244604c834c6656b71107ec7389c5519ab58918bcb8727e2",
      "bundle_path_digest": "sha256:3694d30be18e2ce2244604c834c6656b71107ec7389c5519ab58918bcb8727e2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-03-02T19:10:18.800000+00:00",
      "csv_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_display_name": "Nginx Ingress Operator",
      "csv_metadata_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_name": "nginx-ingress-operator.v0.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:23:28.173000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "nginx-ingress-operator",
      "provided_apis": [
        {
          "group": "k8s.nginx.org",
          "kind": "NginxIngressController",
          "plural": "nginxingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ad42d06b2bc69e8d6d37bbd999b4d26698f49eb4460976f91da4f4c4bf723457",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:ad42d06b2bc69e8d6d37bbd999b4d26698f49eb4460976f91da4f4c4bf723457",
          "name": "nginx-ingress-operator-ad42d06b2bc69e8d6d37bbd999b4d26698f49eb4460976f91da4f4c4bf723457-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:ad42d06b2bc69e8d6d37bbd999b4d26698f49eb4460976f91da4f4c4bf723457",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:ad42d06b2bc69e8d6d37bbd999b4d26698f49eb4460976f91da4f4c4bf723457",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.5.1",
      "version_original": "0.5.1"
    },
    {
      "_id": "621fc2399206cd6accd158e6",
      "alm_examples": [
        {
          "api_version": "k8s.nginx.org/v1alpha1",
          "kind": "NginxIngressController",
          "metadata": {
            "name": "my-nginx-ingress-controller"
          },
          "spec": {
            "image": {
              "pullPolicy": "Always",
              "repository": "docker.io/nginx/nginx-ingress",
              "tag": "2.1.1-ubi"
            },
            "ingressClass": "nginx",
            "nginxPlus": false,
            "serviceType": "NodePort",
            "type": "deployment"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/nginx/nginx-ingress-operator-bundle@sha256:3694d30be18e2ce2244604c834c6656b71107ec7389c5519ab58918bcb8727e2",
      "bundle_path_digest": "sha256:3694d30be18e2ce2244604c834c6656b71107ec7389c5519ab58918bcb8727e2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-03-02T19:15:05.271000+00:00",
      "csv_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_display_name": "Nginx Ingress Operator",
      "csv_metadata_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_name": "nginx-ingress-operator.v0.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:22:02.786000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "nginx-ingress-operator",
      "provided_apis": [
        {
          "group": "k8s.nginx.org",
          "kind": "NginxIngressController",
          "plural": "nginxingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ad42d06b2bc69e8d6d37bbd999b4d26698f49eb4460976f91da4f4c4bf723457",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:ad42d06b2bc69e8d6d37bbd999b4d26698f49eb4460976f91da4f4c4bf723457",
          "name": "nginx-ingress-operator-ad42d06b2bc69e8d6d37bbd999b4d26698f49eb4460976f91da4f4c4bf723457-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:ad42d06b2bc69e8d6d37bbd999b4d26698f49eb4460976f91da4f4c4bf723457",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:ad42d06b2bc69e8d6d37bbd999b4d26698f49eb4460976f91da4f4c4bf723457",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.5.1",
      "version_original": "0.5.1"
    },
    {
      "_id": "621fc3301a79457bc0d510c5",
      "alm_examples": [
        {
          "api_version": "k8s.nginx.org/v1alpha1",
          "kind": "NginxIngressController",
          "metadata": {
            "name": "my-nginx-ingress-controller"
          },
          "spec": {
            "image": {
              "pullPolicy": "Always",
              "repository": "docker.io/nginx/nginx-ingress",
              "tag": "2.1.1-ubi"
            },
            "ingressClass": "nginx",
            "nginxPlus": false,
            "serviceType": "NodePort",
            "type": "deployment"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/nginx/nginx-ingress-operator-bundle@sha256:3694d30be18e2ce2244604c834c6656b71107ec7389c5519ab58918bcb8727e2",
      "bundle_path_digest": "sha256:3694d30be18e2ce2244604c834c6656b71107ec7389c5519ab58918bcb8727e2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-03-02T19:19:12.673000+00:00",
      "csv_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_display_name": "Nginx Ingress Operator",
      "csv_metadata_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_name": "nginx-ingress-operator.v0.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T11:07:57.349000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nginx-ingress-operator",
      "provided_apis": [
        {
          "group": "k8s.nginx.org",
          "kind": "NginxIngressController",
          "plural": "nginxingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:ad42d06b2bc69e8d6d37bbd999b4d26698f49eb4460976f91da4f4c4bf723457",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:ad42d06b2bc69e8d6d37bbd999b4d26698f49eb4460976f91da4f4c4bf723457",
          "name": "nginx-ingress-operator-ad42d06b2bc69e8d6d37bbd999b4d26698f49eb4460976f91da4f4c4bf723457-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:ad42d06b2bc69e8d6d37bbd999b4d26698f49eb4460976f91da4f4c4bf723457",
          "image": "docker.io/nginx/nginx-ingress-operator@sha256:ad42d06b2bc69e8d6d37bbd999b4d26698f49eb4460976f91da4f4c4bf723457",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.5.1",
      "version_original": "0.5.1"
    },
    {
      "_id": "62210e3d5c46c6464085fd0d",
      "alm_examples": [
        {
          "kind": "HostDeviceNetwork",
          "metadata": {
            "name": "hostdevicenetwork-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "kind": "MacvlanNetwork",
          "metadata": {
            "name": "macvlannetwork-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "kind": "NicClusterPolicy",
          "metadata": {
            "name": "nicclusterpolicy-sample"
          },
          "spec": {
            "foo": "bar"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia-network-operator/nvidia-network-operator@sha256:2367829886a0f8aaa3705ec0d98118fb53e21c56f02b3e58f8ec312b337dd9c6",
      "bundle_path_digest": "sha256:2367829886a0f8aaa3705ec0d98118fb53e21c56f02b3e58f8ec312b337dd9c6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "1.1.0",
      "creation_date": "2022-03-03T18:51:41.845000+00:00",
      "csv_description": "## NVIDIA Network Operator\nThe NVIDIA Network Operator simplifies the provisioning and management of NVIDIA networking resources  in a Kubernetes cluster. The operator automatically installs the required host networking software - bringing together all the needed components to provide high-speed network connectivity. These components include the NVIDIA networking driver, Kubernetes device plugin, CNI plugins, IP address management (IPAM) plugin and others.\nThe NVIDIA Network Operator works in conjunction with the NVIDIA GPU Operator to deliver high-throughput, low-latency networking for scale-out, GPU computing clusters.\nThe Network Operator is open-source. For more information on contributions and release artifacts, see the [GitHub repo](https://github.com/Mellanox/network-operator/)\n",
      "csv_display_name": "NVIDIA Network Operator",
      "csv_metadata_description": "Deploy and manage NVIDIA networking resources in Kubernetes",
      "csv_name": "nvidia-network-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:00:02.594000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "nvidia-network-operator",
      "provided_apis": [
        {
          "group": "mellanox.com",
          "kind": "NicClusterPolicy",
          "plural": "nicclusterpolicies",
          "version": "v1alpha1"
        },
        {
          "group": "k8s.cni.cncf.io",
          "kind": "NetworkAttachmentDefinition",
          "plural": "network-attachment-definitions",
          "version": "v1"
        },
        {
          "group": "mellanox.com",
          "kind": "HostDeviceNetwork",
          "plural": "hostdevicenetworks",
          "version": "v1alpha1"
        },
        {
          "group": "mellanox.com",
          "kind": "MacvlanNetwork",
          "plural": "macvlannetworks",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:17afa53f1cf3733c8d0cd282c565975ed5de3124dfc2b7c485ad12c97e51c251",
          "image": "nvcr.io/nvidia/cloud-native/network-operator@sha256:17afa53f1cf3733c8d0cd282c565975ed5de3124dfc2b7c485ad12c97e51c251",
          "name": "manager"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "622119161a79457bc0d5122f",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-90.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:95644b2ccc560118c16350bcd4380db7c08d97258bf1034387e96a9b1814fef5",
      "bundle_path_digest": "sha256:95644b2ccc560118c16350bcd4380db7c08d97258bf1034387e96a9b1814fef5",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-03-03T19:37:58.330000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:00:53.452000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "name": "redis-enterprise-operator-97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31-annotation"
        },
        {
          "digest": "sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "name": "admission"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.2.10-4",
      "version_original": "6.2.10-4"
    },
    {
      "_id": "622119175c46c6464085fd12",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-90.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:95644b2ccc560118c16350bcd4380db7c08d97258bf1034387e96a9b1814fef5",
      "bundle_path_digest": "sha256:95644b2ccc560118c16350bcd4380db7c08d97258bf1034387e96a9b1814fef5",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2022-03-03T19:37:59.660000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-13T10:57:37.955000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "name": "redis-enterprise-operator-97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31-annotation"
        },
        {
          "digest": "sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.2.10-4",
      "version_original": "6.2.10-4"
    },
    {
      "_id": "6221191810f4fb3122143e09",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-53.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "bundle_path_digest": "sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-03-03T19:38:00.892000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:00:57.310000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator-5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59-annotation"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "admission"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.2.8-11",
      "version_original": "6.2.8-11"
    },
    {
      "_id": "6221191a5c46c6464085fd13",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-64.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9d1a896c1276852d8cad7e670924f309a7a82de2f8843f23d2a6ae42ba0a8b53",
      "bundle_path_digest": "sha256:9d1a896c1276852d8cad7e670924f309a7a82de2f8843f23d2a6ae42ba0a8b53",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-03-03T19:38:02.131000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:01:03.312000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "redis-enterprise-operator-0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37-annotation"
        },
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "admission"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.2.8-15",
      "version_original": "6.2.8-15"
    },
    {
      "_id": "62211ab61a79457bc0d51231",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.4-55.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "bundle_path_digest": "sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-03-03T19:44:54.277000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.4-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:17:17.553000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator-8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9-annotation"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "admission"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.2.4-1",
      "version_original": "6.2.4-1"
    },
    {
      "_id": "62211ab79206cd6accd15a62",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-97.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "bundle_path_digest": "sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-03-03T19:44:55.528000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-12a",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:21:31.952000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator-f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730-annotation"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "admission"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.20-12a",
      "version_original": "6.0.20-12a"
    },
    {
      "_id": "62211ab81a79457bc0d51232",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-90.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:95644b2ccc560118c16350bcd4380db7c08d97258bf1034387e96a9b1814fef5",
      "bundle_path_digest": "sha256:95644b2ccc560118c16350bcd4380db7c08d97258bf1034387e96a9b1814fef5",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-03-03T19:44:56.807000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:22:31.525000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "name": "redis-enterprise-operator-97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31-annotation"
        },
        {
          "digest": "sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "name": "admission"
        }
      ],
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.2.10-4",
      "version_original": "6.2.10-4"
    }
  ],
  "page": 4,
  "page_size": 500,
  "total": 3924
}
